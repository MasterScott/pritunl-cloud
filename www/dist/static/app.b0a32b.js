System.registerDynamic("app/stores/LoadingStore.js", ["app/dispatcher/Dispatcher.js", "app/EventEmitter.js", "app/types/LoadingTypes.js", "app/types/GlobalTypes.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const Dispatcher_1 = $__require("app/dispatcher/Dispatcher.js");
    const EventEmitter_1 = $__require("app/EventEmitter.js");
    const LoadingTypes = $__require("app/types/LoadingTypes.js");
    const GlobalTypes = $__require("app/types/GlobalTypes.js");
    class LoadingStore extends EventEmitter_1.default {
        constructor() {
            super(...arguments);
            this._loaders = new Set();
            this._token = Dispatcher_1.default.register(this._callback.bind(this));
        }
        get loading() {
            return !!this._loaders.size;
        }
        emitChange() {
            this.emitDefer(GlobalTypes.CHANGE);
        }
        addChangeListener(callback) {
            this.on(GlobalTypes.CHANGE, callback);
        }
        removeChangeListener(callback) {
            this.removeListener(GlobalTypes.CHANGE, callback);
        }
        _add(id) {
            this._loaders.add(id);
            this.emitChange();
        }
        _done(id) {
            this._loaders.delete(id);
            this.emitChange();
        }
        _callback(action) {
            switch (action.type) {
                case LoadingTypes.ADD:
                    this._add(action.data.id);
                    break;
                case LoadingTypes.DONE:
                    this._done(action.data.id);
                    break;
            }
        }
    }
    exports.default = new LoadingStore();
    
});
System.registerDynamic("app/components/LoadingBar.js", ["npm:react@16.7.0.js", "app/stores/LoadingStore.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const LoadingStore_1 = $__require("app/stores/LoadingStore.js");
    const css = {
        progress: {
            width: '100%',
            height: '4px',
            borderRadius: 0
        },
        progressBar: {
            width: '50%',
            borderRadius: 0
        }
    };
    class LoadingBar extends React.Component {
        constructor(props, context) {
            super(props, context);
            this.onChange = () => {
                this.setState({
                    loading: LoadingStore_1.default.loading
                });
            };
            this.state = {
                loading: LoadingStore_1.default.loading
            };
        }
        componentDidMount() {
            LoadingStore_1.default.addChangeListener(this.onChange);
        }
        componentWillUnmount() {
            LoadingStore_1.default.removeChangeListener(this.onChange);
        }
        render() {
            let progress;
            if (!this.state.loading) {
                progress = React.createElement("div", { style: css.progress });
            } else {
                let className = 'bp3-progress-bar bp3-no-stripes bp3-no-animation ';
                if (this.props.intent) {
                    className += ' bp3-intent-' + this.props.intent;
                }
                progress = React.createElement("div", { className: className, style: css.progress }, React.createElement("div", { className: "bp3-progress-meter bp3-loading-bar", style: css.progressBar }));
            }
            return React.createElement("div", { style: this.props.style }, progress);
        }
    }
    exports.default = LoadingBar;
    
});
System.registerDynamic("npm:react-stripe-checkout@2.6.3/dist/main.js", ["npm:react@16.7.0.js", "npm:prop-types@15.6.2.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    Object.defineProperty(exports, "__esModule", { value: true });
    var _extends = Object.assign || function (target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    var _createClass = function () {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor) descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      return function (Constructor, protoProps, staticProps) {
        if (protoProps) defineProperties(Constructor.prototype, protoProps);
        if (staticProps) defineProperties(Constructor, staticProps);
        return Constructor;
      };
    }();
    var _react = $__require("npm:react@16.7.0.js");
    var _react2 = _interopRequireDefault(_react);
    var _propTypes = $__require("npm:prop-types@15.6.2.js");
    var _propTypes2 = _interopRequireDefault(_propTypes);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value: value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _possibleConstructorReturn(self, call) {
      if (!self) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return call && (typeof call === "object" || typeof call === "function") ? call : self;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: {
          value: subClass,
          enumerable: false,
          writable: true,
          configurable: true
        } });
      if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    var scriptLoading = false;
    var scriptLoaded = false;
    var scriptDidError = false;
    var ReactStripeCheckout = function (_React$Component) {
      _inherits(ReactStripeCheckout, _React$Component);
      function ReactStripeCheckout(props) {
        _classCallCheck(this, ReactStripeCheckout);
        var _this = _possibleConstructorReturn(this, (ReactStripeCheckout.__proto__ || Object.getPrototypeOf(ReactStripeCheckout)).call(this, props));
        _this.onScriptLoaded = function () {
          if (!ReactStripeCheckout.stripeHandler) {
            ReactStripeCheckout.stripeHandler = StripeCheckout.configure({ key: _this.props.stripeKey });
            if (_this.hasPendingClick) {
              _this.showStripeDialog();
            }
          }
        };
        _this.onScriptError = function () {
          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this.hideLoadingDialog();
          if (_this.props.onScriptError) {
            _this.props.onScriptError.apply(_this, args);
          }
        };
        _this.onClosed = function () {
          for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
            args[_key2] = arguments[_key2];
          }
          if (_this._isMounted) _this.setState({ open: false });
          if (_this.props.closed) {
            _this.props.closed.apply(_this, args);
          }
        };
        _this.onOpened = function () {
          for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
            args[_key3] = arguments[_key3];
          }
          _this.setState({ open: true });
          if (_this.props.opened) {
            _this.props.opened.apply(_this, args);
          }
        };
        _this.getConfig = function () {
          return ['token', 'image', 'name', 'description', 'amount', 'locale', 'currency', 'panelLabel', 'zipCode', 'shippingAddress', 'billingAddress', 'email', 'allowRememberMe', 'bitcoin', 'alipay', 'alipayReusable'].reduce(function (config, key) {
            return _extends({}, config, _this.props.hasOwnProperty(key) && _defineProperty({}, key, _this.props[key]));
          }, {
            opened: _this.onOpened,
            closed: _this.onClosed
          });
        };
        _this.onClick = function () {
          if (_this.props.disabled) {
            return;
          }
          if (scriptDidError) {
            try {
              throw new Error('Tried to call onClick, but StripeCheckout failed to load');
            } catch (x) {}
          } else if (ReactStripeCheckout.stripeHandler) {
            _this.showStripeDialog();
          } else {
            _this.showLoadingDialog();
            _this.hasPendingClick = true;
          }
        };
        _this.handleOnMouseDown = function () {
          _this.setState({ buttonActive: true });
        };
        _this.handleOnMouseUp = function () {
          _this.setState({ buttonActive: false });
        };
        _this.state = {
          open: false,
          buttonActive: false
        };
        return _this;
      }
      _createClass(ReactStripeCheckout, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
          var _this2 = this;
          this._isMounted = true;
          if (scriptLoaded) {
            return;
          }
          if (scriptLoading) {
            return;
          }
          scriptLoading = true;
          var script = document.createElement('script');
          if (typeof this.props.onScriptTagCreated === 'function') {
            this.props.onScriptTagCreated(script);
          }
          script.src = 'https://checkout.stripe.com/checkout.js';
          script.async = 1;
          this.loadPromise = function () {
            var canceled = false;
            var promise = new Promise(function (resolve, reject) {
              script.onload = function () {
                scriptLoaded = true;
                scriptLoading = false;
                resolve();
                _this2.onScriptLoaded();
              };
              script.onerror = function (event) {
                scriptDidError = true;
                scriptLoading = false;
                reject(event);
                _this2.onScriptError(event);
              };
            });
            var wrappedPromise = new Promise(function (accept, cancel) {
              promise.then(function () {
                return canceled ? cancel({ isCanceled: true }) : accept();
              });
              promise.catch(function (error) {
                return canceled ? cancel({ isCanceled: true }) : cancel(error);
              });
            });
            return {
              promise: wrappedPromise,
              cancel: function cancel() {
                canceled = true;
              }
            };
          }();
          this.loadPromise.promise.then(this.onScriptLoaded).catch(this.onScriptError);
          document.body.appendChild(script);
        }
      }, {
        key: 'componentDidUpdate',
        value: function componentDidUpdate() {
          if (!scriptLoading) {
            this.updateStripeHandler();
          }
        }
      }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
          this._isMounted = false;
          if (this.loadPromise) {
            this.loadPromise.cancel();
          }
          if (ReactStripeCheckout.stripeHandler && this.state.open) {
            ReactStripeCheckout.stripeHandler.close();
          }
        }
      }, {
        key: 'updateStripeHandler',
        value: function updateStripeHandler() {
          if (!ReactStripeCheckout.stripeHandler || this.props.reconfigureOnUpdate) {
            ReactStripeCheckout.stripeHandler = StripeCheckout.configure({ key: this.props.stripeKey });
          }
        }
      }, {
        key: 'showLoadingDialog',
        value: function showLoadingDialog() {
          if (this.props.showLoadingDialog) {
            for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
              args[_key4] = arguments[_key4];
            }
            this.props.showLoadingDialog.apply(this, args);
          }
        }
      }, {
        key: 'hideLoadingDialog',
        value: function hideLoadingDialog() {
          if (this.props.hideLoadingDialog) {
            for (var _len5 = arguments.length, args = Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
              args[_key5] = arguments[_key5];
            }
            this.props.hideLoadingDialog.apply(this, args);
          }
        }
      }, {
        key: 'showStripeDialog',
        value: function showStripeDialog() {
          this.hideLoadingDialog();
          ReactStripeCheckout.stripeHandler.open(this.getConfig());
        }
      }, {
        key: 'renderDefaultStripeButton',
        value: function renderDefaultStripeButton() {
          return _react2.default.createElement('button', _extends({}, _defineProperty({}, this.props.triggerEvent, this.onClick), {
            className: this.props.className,
            onMouseDown: this.handleOnMouseDown,
            onFocus: this.handleOnMouseDown,
            onMouseUp: this.handleOnMouseUp,
            onMouseOut: this.handleOnMouseUp,
            onBlur: this.handleOnMouseUp,
            style: _extends({}, {
              overflow: 'hidden',
              display: 'inline-block',
              background: 'linear-gradient(#28a0e5,#015e94)',
              border: 0,
              padding: 1,
              textDecoration: 'none',
              borderRadius: 5,
              boxShadow: '0 1px 0 rgba(0,0,0,0.2)',
              cursor: 'pointer',
              visibility: 'visible',
              userSelect: 'none'
            }, this.state.buttonActive && { background: '#005d93' }, this.props.style)
          }), _react2.default.createElement('span', { style: _extends({}, {
              backgroundImage: 'linear-gradient(#7dc5ee,#008cdd 85%,#30a2e4)',
              fontFamily: '"Helvetica Neue",Helvetica,Arial,sans-serif',
              fontSize: 14,
              position: 'relative',
              padding: '0 12px',
              display: 'block',
              height: 30,
              lineHeight: '30px',
              color: '#fff',
              fontWeight: 'bold',
              boxShadow: 'inset 0 1px 0 rgba(255,255,255,0.25)',
              textShadow: '0 -1px 0 rgba(0,0,0,0.25)',
              borderRadius: 4
            }, this.state.buttonActive && {
              color: '#eee',
              boxShadow: 'inset 0 1px 0 rgba(0,0,0,0.1)',
              backgroundImage: 'linear-gradient(#008cdd,#008cdd 85%,#239adf)'
            }, this.props.textStyle) }, this.props.label));
        }
      }, {
        key: 'renderDisabledButton',
        value: function renderDisabledButton() {
          return _react2.default.createElement('button', {
            disabled: true,
            style: {
              background: 'rgba(0,0,0,0.2)',
              overflow: 'hidden',
              display: 'inline-block',
              border: 0,
              padding: 1,
              textDecoration: 'none',
              borderRadius: 5,
              userSelect: 'none'
            }
          }, _react2.default.createElement('span', { style: {
              boxShadow: 'inset 0 1px 0 rgba(255,255,255,0.25)',
              fontFamily: '"Helvetica Neue",Helvetica,Arial,sans-serif',
              fontSize: 14,
              position: 'relative',
              padding: '0 12px',
              display: 'block',
              height: 30,
              lineHeight: '30px',
              borderRadius: 4,
              color: '#999',
              background: '#f8f9fa',
              textShadow: '0 1px 0 rgba(255,255,255,0.5)'
            } }, this.props.label));
        }
      }, {
        key: 'render',
        value: function render() {
          if (this.props.desktopShowModal === true && !this.state.open) {
            this.onClick();
          } else if (this.props.desktopShowModal === false && this.state.open) {
            ReactStripeCheckout.stripeHandler.close();
          }
          var ComponentClass = this.props.ComponentClass;
          if (this.props.children) {
            return _react2.default.createElement(ComponentClass, _extends({}, _defineProperty({}, this.props.triggerEvent, this.onClick), { children: this.props.children }));
          }
          return this.props.disabled ? this.renderDisabledButton() : this.renderDefaultStripeButton();
        }
      }]);
      return ReactStripeCheckout;
    }(_react2.default.Component);
    ReactStripeCheckout.defaultProps = {
      className: 'StripeCheckout',
      label: 'Pay With Card',
      locale: 'auto',
      ComponentClass: 'span',
      reconfigureOnUpdate: false,
      triggerEvent: 'onClick'
    };
    ReactStripeCheckout.propTypes = {
      desktopShowModal: _propTypes2.default.bool,
      triggerEvent: _propTypes2.default.oneOf(['onClick', 'onTouchTap', 'onTouchStart']),
      label: _propTypes2.default.string,
      style: _propTypes2.default.object,
      textStyle: _propTypes2.default.object,
      disabled: _propTypes2.default.bool,
      ComponentClass: _propTypes2.default.string,
      showLoadingDialog: _propTypes2.default.func,
      hideLoadingDialog: _propTypes2.default.func,
      onScriptError: _propTypes2.default.func,
      onScriptTagCreated: _propTypes2.default.func,
      reconfigureOnUpdate: _propTypes2.default.bool,
      stripeKey: _propTypes2.default.string.isRequired,
      token: _propTypes2.default.func.isRequired,
      name: _propTypes2.default.string,
      description: _propTypes2.default.string,
      image: _propTypes2.default.string,
      amount: _propTypes2.default.number,
      locale: _propTypes2.default.oneOf(['auto', 'zh', 'da', 'nl', 'en', 'fr', 'de', 'it', 'ja', 'no', 'es', 'sv']),
      currency: _propTypes2.default.oneOf(['AED', 'AFN', 'ALL', 'AMD', 'ANG', 'AOA', 'ARS', 'AUD', 'AWG', 'AZN', 'BAM', 'BBD', 'BDT', 'BGN', 'BIF', 'BMD', 'BND', 'BOB', 'BRL', 'BSD', 'BWP', 'BZD', 'CAD', 'CDF', 'CHF', 'CLP', 'CNY', 'COP', 'CRC', 'CVE', 'CZK', 'DJF', 'DKK', 'DOP', 'DZD', 'EEK', 'EGP', 'ETB', 'EUR', 'FJD', 'FKP', 'GBP', 'GEL', 'GIP', 'GMD', 'GNF', 'GTQ', 'GYD', 'HKD', 'HNL', 'HRK', 'HTG', 'HUF', 'IDR', 'ILS', 'INR', 'ISK', 'JMD', 'JPY', 'KES', 'KGS', 'KHR', 'KMF', 'KRW', 'KYD', 'KZT', 'LAK', 'LBP', 'LKR', 'LRD', 'LSL', 'LTL', 'LVL', 'MAD', 'MDL', 'MGA', 'MKD', 'MNT', 'MOP', 'MRO', 'MUR', 'MVR', 'MWK', 'MXN', 'MYR', 'MZN', 'NAD', 'NGN', 'NIO', 'NOK', 'NPR', 'NZD', 'PAB', 'PEN', 'PGK', 'PHP', 'PKR', 'PLN', 'PYG', 'QAR', 'RON', 'RSD', 'RUB', 'RWF', 'SAR', 'SBD', 'SCR', 'SEK', 'SGD', 'SHP', 'SLL', 'SOS', 'SRD', 'STD', 'SVC', 'SZL', 'THB', 'TJS', 'TOP', 'TRY', 'TTD', 'TWD', 'TZS', 'UAH', 'UGX', 'USD', 'UYU', 'UZS', 'VND', 'VUV', 'WST', 'XAF', 'XCD', 'XOF', 'XPF', 'YER', 'ZAR', 'ZMW']),
      panelLabel: _propTypes2.default.string,
      zipCode: _propTypes2.default.bool,
      billingAddress: _propTypes2.default.bool,
      shippingAddress: _propTypes2.default.bool,
      email: _propTypes2.default.string,
      allowRememberMe: _propTypes2.default.bool,
      bitcoin: _propTypes2.default.bool,
      alipay: _propTypes2.default.oneOf(['auto', true, false]),
      alipayReusable: _propTypes2.default.bool,
      opened: _propTypes2.default.func,
      closed: _propTypes2.default.func
    };
    ReactStripeCheckout._isMounted = false;
    exports.default = ReactStripeCheckout;
  })($__require("github:jspm/nodelibs-process@0.1.2.js"));
});
System.registerDynamic("npm:react-stripe-checkout@2.6.3.js", ["npm:react-stripe-checkout@2.6.3/dist/main.js"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("npm:react-stripe-checkout@2.6.3/dist/main.js");
});
System.registerDynamic("app/components/Subscription.js", ["npm:react@16.7.0.js", "npm:react-stripe-checkout@2.6.3.js", "app/actions/SubscriptionActions.js", "app/stores/SubscriptionStore.js", "app/Alert.js", "app/utils/MiscUtils.js", "app/components/ConfirmButton.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const react_stripe_checkout_1 = $__require("npm:react-stripe-checkout@2.6.3.js");
    const SubscriptionActions = $__require("app/actions/SubscriptionActions.js");
    const SubscriptionStore_1 = $__require("app/stores/SubscriptionStore.js");
    const Alert = $__require("app/Alert.js");
    const MiscUtils = $__require("app/utils/MiscUtils.js");
    const ConfirmButton_1 = $__require("app/components/ConfirmButton.js");
    const css = {
        card: {
            padding: '10px',
            minWidth: '310px',
            maxWidth: '350px',
            width: 'calc(100% - 20px)',
            margin: '30px auto'
        },
        card2: {
            padding: '5px',
            minWidth: '310px',
            maxWidth: '380px',
            width: 'calc(100% - 20px)',
            margin: '30px auto'
        },
        status: {
            width: '180px',
            margin: '20px auto',
            fontSize: '16px'
        },
        item: {
            margin: '2px 0'
        },
        message: {
            margin: '0 0 10px 0'
        },
        license: {
            width: '100%',
            height: '130px',
            margin: '0 0 10px 0',
            resize: 'none',
            fontFamily: '"Lucida Console", Monaco, monospace'
        },
        button: {
            width: '150px',
            margin: '5px'
        },
        button2: {
            width: '160px',
            margin: '5px'
        },
        button3: {
            width: '195px',
            margin: '5px'
        },
        buttons: {
            margin: '0 auto'
        }
    };
    class Subscription extends React.Component {
        constructor(props, context) {
            super(props, context);
            this.onChange = () => {
                this.setState(Object.assign({}, this.state, { subscription: SubscriptionStore_1.default.subscription }));
            };
            this.state = {
                subscription: SubscriptionStore_1.default.subscription,
                update: false,
                message: '',
                license: '',
                disabled: false
            };
        }
        componentDidMount() {
            SubscriptionStore_1.default.addChangeListener(this.onChange);
            if (!this.state.subscription.active) {
                SubscriptionActions.sync(true);
            }
        }
        componentWillUnmount() {
            SubscriptionStore_1.default.removeChangeListener(this.onChange);
        }
        update() {
            return React.createElement("div", null, React.createElement("div", { className: "bp3-card bp3-elevation-2", style: css.card }, React.createElement("div", { className: "bp3-callout bp3-intent-success", style: css.message, hidden: !this.state.message }, this.state.message), React.createElement("textarea", { className: "bp3-input", style: css.license, disabled: this.state.disabled, placeholder: "New License Key", value: this.state.license, onChange: evt => {
                    this.setState(Object.assign({}, this.state, { license: evt.target.value }));
                } }), React.createElement("div", { className: "layout horizontal center-justified" }, React.createElement("button", { className: "bp3-button bp3-intent-danger bp3-icon-cross", style: css.button, disabled: this.state.disabled, onClick: () => {
                    this.setState(Object.assign({}, this.state, { update: false, license: '' }));
                } }, "Cancel"), React.createElement("button", { className: "bp3-button bp3-intent-primary bp3-icon-endorsed", style: css.button, disabled: this.state.disabled, onClick: () => {
                    this.setState(Object.assign({}, this.state, { disabled: true }));
                    SubscriptionActions.activate(this.state.license).then(() => {
                        this.setState(Object.assign({}, this.state, { disabled: false, update: false, license: '' }));
                    }).catch(() => {
                        this.setState(Object.assign({}, this.state, { disabled: false }));
                    });
                } }, "Update License"))));
        }
        activate() {
            return React.createElement("div", null, React.createElement("div", { className: "bp3-card bp3-elevation-2", style: css.card }, React.createElement("div", { className: "bp3-callout bp3-intent-success", style: css.message, hidden: !this.state.message }, this.state.message), React.createElement("textarea", { className: "bp3-input", style: css.license, disabled: this.state.disabled, placeholder: "License Key", value: this.state.license, onChange: evt => {
                    this.setState(Object.assign({}, this.state, { license: evt.target.value }));
                } }), React.createElement("div", { className: "layout horizontal center-justified" }, React.createElement("button", { className: "bp3-button bp3-intent-primary bp3-icon-endorsed", style: css.button, disabled: this.state.disabled, onClick: () => {
                    this.setState(Object.assign({}, this.state, { disabled: true }));
                    SubscriptionActions.activate(this.state.license).then(() => {
                        this.setState(Object.assign({}, this.state, { disabled: false }));
                    }).catch(() => {
                        this.setState(Object.assign({}, this.state, { disabled: false }));
                    });
                } }, "Activate License"), React.createElement(react_stripe_checkout_1.default, { label: "Pritunl Cloud", image: "https://objectstorage.us-ashburn-1.oraclecloud.com/n/pritunl8472/b/pritunl-static/o/logo_stripe.png", allowRememberMe: false, zipCode: true, amount: 5000, name: "Pritunl Cloud - 7 Day Trial", description: "Subscribe to Cloud ($50/month)", panelLabel: "Subscribe", token: token => {
                    this.setState(Object.assign({}, this.state, { disabled: true }));
                    SubscriptionActions.checkout('cloud', token.id, token.email).then(message => {
                        this.setState(Object.assign({}, this.state, { disabled: false, message: message }));
                    }).catch(() => {
                        this.setState(Object.assign({}, this.state, { disabled: false }));
                    });
                }, onScriptError: err => {
                    Alert.error('Failed to load Stripe Checkout');
                }, stripeKey: "pk_live_plmoOl3lS3k5dMNQViZWGfVR" }, React.createElement("button", { className: "bp3-button bp3-intent-success bp3-icon-credit-card", style: css.button, disabled: this.state.disabled }, "Subscribe")))));
        }
        reactivate() {
            let sub = this.state.subscription;
            let canceling = sub.cancel_at_period_end || sub.status === 'canceled';
            let status = sub.cancel_at_period_end ? 'canceled' : sub.status;
            let periodEnd = MiscUtils.formatDateShort(sub.period_end);
            let trialEnd = MiscUtils.formatDateShort(sub.trial_end);
            return React.createElement("div", null, React.createElement("div", { className: "bp3-card bp3-elevation-2", style: css.card2 }, React.createElement("div", { className: "bp3-callout bp3-intent-success", style: css.message, hidden: !this.state.message }, this.state.message), React.createElement("div", { className: "layout vertical", style: css.status }, React.createElement("div", { className: "layout horizontal" }, React.createElement("div", { className: "flex" }, "Status:"), React.createElement("div", null, MiscUtils.capitalize(status))), React.createElement("div", { className: "layout horizontal", style: css.item }, React.createElement("div", { className: "flex" }, "Plan:"), React.createElement("div", null, MiscUtils.capitalize(sub.plan))), React.createElement("div", { className: "layout horizontal", style: css.item }, React.createElement("div", { className: "flex" }, "Amount:"), React.createElement("div", null, MiscUtils.formatAmount(sub.amount))), React.createElement("div", { className: "layout horizontal", style: css.item }, React.createElement("div", { className: "flex" }, "Quantity:"), React.createElement("div", null, sub.quantity)), React.createElement("div", { className: "layout horizontal", style: css.item, hidden: !sub.balance }, React.createElement("div", { className: "flex" }, "Balance:"), React.createElement("div", null, MiscUtils.formatAmount(sub.balance))), React.createElement("div", { className: "layout horizontal", style: css.item, hidden: periodEnd === '' }, React.createElement("div", { className: "flex" }, canceling ? 'Ends' : 'Renew', ":"), React.createElement("div", null, periodEnd)), React.createElement("div", { className: "layout horizontal", style: css.item, hidden: trialEnd === '' }, React.createElement("div", { className: "flex" }, "Trial Ends:"), React.createElement("div", null, trialEnd))), React.createElement("div", { className: "layout horizontal center-justified" }, React.createElement(ConfirmButton_1.default, { className: "bp3-intent-danger bp3-icon-disable", progressClassName: "bp3-intent-danger", style: css.button2, disabled: this.state.disabled, hidden: canceling, label: "End Subscription", onConfirm: () => {
                    this.setState(Object.assign({}, this.state, { disabled: true }));
                    SubscriptionActions.cancel(this.state.subscription.url_key).then(() => {
                        this.setState(Object.assign({}, this.state, { disabled: false }));
                    }).catch(() => {
                        this.setState(Object.assign({}, this.state, { disabled: false }));
                    });
                } }), React.createElement(react_stripe_checkout_1.default, { label: "Pritunl Cloud", image: "https://objectstorage.us-ashburn-1.oraclecloud.com/n/pritunl8472/b/pritunl-static/o/logo_stripe.png", allowRememberMe: false, zipCode: true, amount: canceling && sub.status !== 'active' ? 5000 : 0, name: "Pritunl Cloud", description: canceling ? 'Reactivate Subscription ($50/month)' : 'Update Payment Information', panelLabel: canceling ? 'Reactivate' : 'Update', token: token => {
                    this.setState(Object.assign({}, this.state, { disabled: true }));
                    SubscriptionActions.payment(this.state.subscription.url_key, 'cloud', token.id, token.email).then(() => {
                        this.setState(Object.assign({}, this.state, { disabled: false }));
                    }).catch(() => {
                        this.setState(Object.assign({}, this.state, { disabled: false }));
                    });
                }, onScriptError: err => {
                    Alert.error('Failed to load Stripe Checkout');
                }, stripeKey: "pk_live_plmoOl3lS3k5dMNQViZWGfVR" }, React.createElement("button", { className: "bp3-button bp3-intent-success bp3-icon-credit-card", style: canceling ? css.button3 : css.button2, disabled: this.state.disabled }, canceling ? 'Reactivate Subscription' : 'Update Payment'))), React.createElement("div", { className: "layout horizontal center-justified" }, React.createElement(ConfirmButton_1.default, { className: "bp3-intent-danger bp3-icon-delete", progressClassName: "bp3-intent-danger", style: css.button2, disabled: this.state.disabled, label: "Remove License", onConfirm: () => {
                    this.setState(Object.assign({}, this.state, { disabled: true }));
                    SubscriptionActions.activate('').then(() => {
                        this.setState(Object.assign({}, this.state, { disabled: false }));
                    }).catch(() => {
                        this.setState(Object.assign({}, this.state, { disabled: false }));
                    });
                } }), React.createElement("button", { className: "bp3-button bp3-intent-primary bp3-icon-endorsed", style: css.button2, disabled: this.state.disabled, onClick: () => {
                    this.setState(Object.assign({}, this.state, { update: true }));
                } }, "Update License"))));
        }
        render() {
            if (this.state.update) {
                return this.update();
            } else if (this.state.subscription.status) {
                return this.reactivate();
            } else {
                return this.activate();
            }
        }
    }
    exports.default = Subscription;
    
});
System.registerDynamic('npm:react-router-dom@4.3.1/BrowserRouter.js', ['npm:warning@4.0.2.js', 'npm:react@16.7.0.js', 'npm:prop-types@15.6.2.js', 'npm:history@4.7.2.js', 'npm:react-router-dom@4.3.1/Router.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _warning = $__require('npm:warning@4.0.2.js');
  var _warning2 = _interopRequireDefault(_warning);
  var _react = $__require('npm:react@16.7.0.js');
  var _react2 = _interopRequireDefault(_react);
  var _propTypes = $__require('npm:prop-types@15.6.2.js');
  var _propTypes2 = _interopRequireDefault(_propTypes);
  var _history = $__require('npm:history@4.7.2.js');
  var _Router = $__require('npm:react-router-dom@4.3.1/Router.js');
  var _Router2 = _interopRequireDefault(_Router);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return call && (typeof call === "object" || typeof call === "function") ? call : self;
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      } });
    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var BrowserRouter = function (_React$Component) {
    _inherits(BrowserRouter, _React$Component);
    function BrowserRouter() {
      var _temp, _this, _ret;
      _classCallCheck(this, BrowserRouter);
      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.history = (0, _history.createBrowserHistory)(_this.props), _temp), _possibleConstructorReturn(_this, _ret);
    }
    BrowserRouter.prototype.componentWillMount = function componentWillMount() {
      (0, _warning2.default)(!this.props.history, "<BrowserRouter> ignores the history prop. To use a custom history, " + "use `import { Router }` instead of `import { BrowserRouter as Router }`.");
    };
    BrowserRouter.prototype.render = function render() {
      return _react2.default.createElement(_Router2.default, {
        history: this.history,
        children: this.props.children
      });
    };
    return BrowserRouter;
  }(_react2.default.Component);
  BrowserRouter.propTypes = {
    basename: _propTypes2.default.string,
    forceRefresh: _propTypes2.default.bool,
    getUserConfirmation: _propTypes2.default.func,
    keyLength: _propTypes2.default.number,
    children: _propTypes2.default.node
  };
  exports.default = BrowserRouter;
});
System.registerDynamic('npm:react-router-dom@4.3.1/HashRouter.js', ['npm:warning@4.0.2.js', 'npm:react@16.7.0.js', 'npm:prop-types@15.6.2.js', 'npm:history@4.7.2.js', 'npm:react-router-dom@4.3.1/Router.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _warning = $__require('npm:warning@4.0.2.js');
  var _warning2 = _interopRequireDefault(_warning);
  var _react = $__require('npm:react@16.7.0.js');
  var _react2 = _interopRequireDefault(_react);
  var _propTypes = $__require('npm:prop-types@15.6.2.js');
  var _propTypes2 = _interopRequireDefault(_propTypes);
  var _history = $__require('npm:history@4.7.2.js');
  var _Router = $__require('npm:react-router-dom@4.3.1/Router.js');
  var _Router2 = _interopRequireDefault(_Router);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return call && (typeof call === "object" || typeof call === "function") ? call : self;
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      } });
    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var HashRouter = function (_React$Component) {
    _inherits(HashRouter, _React$Component);
    function HashRouter() {
      var _temp, _this, _ret;
      _classCallCheck(this, HashRouter);
      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.history = (0, _history.createHashHistory)(_this.props), _temp), _possibleConstructorReturn(_this, _ret);
    }
    HashRouter.prototype.componentWillMount = function componentWillMount() {
      (0, _warning2.default)(!this.props.history, "<HashRouter> ignores the history prop. To use a custom history, " + "use `import { Router }` instead of `import { HashRouter as Router }`.");
    };
    HashRouter.prototype.render = function render() {
      return _react2.default.createElement(_Router2.default, {
        history: this.history,
        children: this.props.children
      });
    };
    return HashRouter;
  }(_react2.default.Component);
  HashRouter.propTypes = {
    basename: _propTypes2.default.string,
    getUserConfirmation: _propTypes2.default.func,
    hashType: _propTypes2.default.oneOf(["hashbang", "noslash", "slash"]),
    children: _propTypes2.default.node
  };
  exports.default = HashRouter;
});
System.registerDynamic('npm:react-router@4.3.1/MemoryRouter.js', ['npm:warning@4.0.2.js', 'npm:react@16.7.0.js', 'npm:prop-types@15.6.2.js', 'npm:history@4.7.2.js', 'npm:react-router@4.3.1/Router.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _warning = $__require('npm:warning@4.0.2.js');
  var _warning2 = _interopRequireDefault(_warning);
  var _react = $__require('npm:react@16.7.0.js');
  var _react2 = _interopRequireDefault(_react);
  var _propTypes = $__require('npm:prop-types@15.6.2.js');
  var _propTypes2 = _interopRequireDefault(_propTypes);
  var _history = $__require('npm:history@4.7.2.js');
  var _Router = $__require('npm:react-router@4.3.1/Router.js');
  var _Router2 = _interopRequireDefault(_Router);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return call && (typeof call === "object" || typeof call === "function") ? call : self;
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      } });
    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var MemoryRouter = function (_React$Component) {
    _inherits(MemoryRouter, _React$Component);
    function MemoryRouter() {
      var _temp, _this, _ret;
      _classCallCheck(this, MemoryRouter);
      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.history = (0, _history.createMemoryHistory)(_this.props), _temp), _possibleConstructorReturn(_this, _ret);
    }
    MemoryRouter.prototype.componentWillMount = function componentWillMount() {
      (0, _warning2.default)(!this.props.history, "<MemoryRouter> ignores the history prop. To use a custom history, " + "use `import { Router }` instead of `import { MemoryRouter as Router }`.");
    };
    MemoryRouter.prototype.render = function render() {
      return _react2.default.createElement(_Router2.default, {
        history: this.history,
        children: this.props.children
      });
    };
    return MemoryRouter;
  }(_react2.default.Component);
  MemoryRouter.propTypes = {
    initialEntries: _propTypes2.default.array,
    initialIndex: _propTypes2.default.number,
    getUserConfirmation: _propTypes2.default.func,
    keyLength: _propTypes2.default.number,
    children: _propTypes2.default.node
  };
  exports.default = MemoryRouter;
});
System.registerDynamic("npm:react-router-dom@4.3.1/MemoryRouter.js", ["npm:react-router@4.3.1/MemoryRouter.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;

  var _MemoryRouter = $__require("npm:react-router@4.3.1/MemoryRouter.js");

  var _MemoryRouter2 = _interopRequireDefault(_MemoryRouter);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  exports.default = _MemoryRouter2.default; // Written in this round about way for babel-transform-imports
});
System.registerDynamic("npm:react-router-dom@4.3.1/Link.js", ["npm:react@16.7.0.js", "npm:prop-types@15.6.2.js", "npm:invariant@2.2.4.js", "npm:history@4.7.2.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;

  var _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }return target;
  };

  var _react = $__require("npm:react@16.7.0.js");

  var _react2 = _interopRequireDefault(_react);

  var _propTypes = $__require("npm:prop-types@15.6.2.js");

  var _propTypes2 = _interopRequireDefault(_propTypes);

  var _invariant = $__require("npm:invariant@2.2.4.js");

  var _invariant2 = _interopRequireDefault(_invariant);

  var _history = $__require("npm:history@4.7.2.js");

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  function _objectWithoutProperties(obj, keys) {
    var target = {};for (var i in obj) {
      if (keys.indexOf(i) >= 0) continue;if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;target[i] = obj[i];
    }return target;
  }

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }return call && (typeof call === "object" || typeof call === "function") ? call : self;
  }

  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }

  var isModifiedEvent = function isModifiedEvent(event) {
    return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);
  };

  /**
   * The public API for rendering a history-aware <a>.
   */

  var Link = function (_React$Component) {
    _inherits(Link, _React$Component);

    function Link() {
      var _temp, _this, _ret;

      _classCallCheck(this, Link);

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleClick = function (event) {
        if (_this.props.onClick) _this.props.onClick(event);

        if (!event.defaultPrevented && // onClick prevented default
        event.button === 0 && // ignore everything but left clicks
        !_this.props.target && // let browser handle "target=_blank" etc.
        !isModifiedEvent(event) // ignore clicks with modifier keys
        ) {
            event.preventDefault();

            var history = _this.context.router.history;
            var _this$props = _this.props,
                replace = _this$props.replace,
                to = _this$props.to;

            if (replace) {
              history.replace(to);
            } else {
              history.push(to);
            }
          }
      }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    Link.prototype.render = function render() {
      var _props = this.props,
          replace = _props.replace,
          to = _props.to,
          innerRef = _props.innerRef,
          props = _objectWithoutProperties(_props, ["replace", "to", "innerRef"]); // eslint-disable-line no-unused-vars

      (0, _invariant2.default)(this.context.router, "You should not use <Link> outside a <Router>");

      (0, _invariant2.default)(to !== undefined, 'You must specify the "to" property');

      var history = this.context.router.history;

      var location = typeof to === "string" ? (0, _history.createLocation)(to, null, null, history.location) : to;

      var href = history.createHref(location);
      return _react2.default.createElement("a", _extends({}, props, { onClick: this.handleClick, href: href, ref: innerRef }));
    };

    return Link;
  }(_react2.default.Component);

  Link.propTypes = {
    onClick: _propTypes2.default.func,
    target: _propTypes2.default.string,
    replace: _propTypes2.default.bool,
    to: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.object]).isRequired,
    innerRef: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func])
  };
  Link.defaultProps = {
    replace: false
  };
  Link.contextTypes = {
    router: _propTypes2.default.shape({
      history: _propTypes2.default.shape({
        push: _propTypes2.default.func.isRequired,
        replace: _propTypes2.default.func.isRequired,
        createHref: _propTypes2.default.func.isRequired
      }).isRequired
    }).isRequired
  };
  exports.default = Link;
});
System.registerDynamic("npm:react-router-dom@4.3.1/NavLink.js", ["npm:react@16.7.0.js", "npm:prop-types@15.6.2.js", "npm:react-router-dom@4.3.1/Route.js", "npm:react-router-dom@4.3.1/Link.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
    return typeof obj;
  } : function (obj) {
    return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
  };
  var _react = $__require("npm:react@16.7.0.js");
  var _react2 = _interopRequireDefault(_react);
  var _propTypes = $__require("npm:prop-types@15.6.2.js");
  var _propTypes2 = _interopRequireDefault(_propTypes);
  var _Route = $__require("npm:react-router-dom@4.3.1/Route.js");
  var _Route2 = _interopRequireDefault(_Route);
  var _Link = $__require("npm:react-router-dom@4.3.1/Link.js");
  var _Link2 = _interopRequireDefault(_Link);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  function _objectWithoutProperties(obj, keys) {
    var target = {};
    for (var i in obj) {
      if (keys.indexOf(i) >= 0) continue;
      if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
      target[i] = obj[i];
    }
    return target;
  }
  var NavLink = function NavLink(_ref) {
    var to = _ref.to,
        exact = _ref.exact,
        strict = _ref.strict,
        location = _ref.location,
        activeClassName = _ref.activeClassName,
        className = _ref.className,
        activeStyle = _ref.activeStyle,
        style = _ref.style,
        getIsActive = _ref.isActive,
        ariaCurrent = _ref["aria-current"],
        rest = _objectWithoutProperties(_ref, ["to", "exact", "strict", "location", "activeClassName", "className", "activeStyle", "style", "isActive", "aria-current"]);
    var path = (typeof to === "undefined" ? "undefined" : _typeof(to)) === "object" ? to.pathname : to;
    var escapedPath = path && path.replace(/([.+*?=^!:${}()[\]|/\\])/g, "\\$1");
    return _react2.default.createElement(_Route2.default, {
      path: escapedPath,
      exact: exact,
      strict: strict,
      location: location,
      children: function children(_ref2) {
        var location = _ref2.location,
            match = _ref2.match;
        var isActive = !!(getIsActive ? getIsActive(match, location) : match);
        return _react2.default.createElement(_Link2.default, _extends({
          to: to,
          className: isActive ? [className, activeClassName].filter(function (i) {
            return i;
          }).join(" ") : className,
          style: isActive ? _extends({}, style, activeStyle) : style,
          "aria-current": isActive && ariaCurrent || null
        }, rest));
      }
    });
  };
  NavLink.propTypes = {
    to: _Link2.default.propTypes.to,
    exact: _propTypes2.default.bool,
    strict: _propTypes2.default.bool,
    location: _propTypes2.default.object,
    activeClassName: _propTypes2.default.string,
    className: _propTypes2.default.string,
    activeStyle: _propTypes2.default.object,
    style: _propTypes2.default.object,
    isActive: _propTypes2.default.func,
    "aria-current": _propTypes2.default.oneOf(["page", "step", "location", "date", "time", "true"])
  };
  NavLink.defaultProps = {
    activeClassName: "active",
    "aria-current": "page"
  };
  exports.default = NavLink;
});
System.registerDynamic("npm:react-router@4.3.1/Prompt.js", ["npm:react@16.7.0.js", "npm:prop-types@15.6.2.js", "npm:invariant@2.2.4.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;

  var _react = $__require("npm:react@16.7.0.js");

  var _react2 = _interopRequireDefault(_react);

  var _propTypes = $__require("npm:prop-types@15.6.2.js");

  var _propTypes2 = _interopRequireDefault(_propTypes);

  var _invariant = $__require("npm:invariant@2.2.4.js");

  var _invariant2 = _interopRequireDefault(_invariant);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }return call && (typeof call === "object" || typeof call === "function") ? call : self;
  }

  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }

  /**
   * The public API for prompting the user before navigating away
   * from a screen with a component.
   */
  var Prompt = function (_React$Component) {
    _inherits(Prompt, _React$Component);

    function Prompt() {
      _classCallCheck(this, Prompt);

      return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
    }

    Prompt.prototype.enable = function enable(message) {
      if (this.unblock) this.unblock();

      this.unblock = this.context.router.history.block(message);
    };

    Prompt.prototype.disable = function disable() {
      if (this.unblock) {
        this.unblock();
        this.unblock = null;
      }
    };

    Prompt.prototype.componentWillMount = function componentWillMount() {
      (0, _invariant2.default)(this.context.router, "You should not use <Prompt> outside a <Router>");

      if (this.props.when) this.enable(this.props.message);
    };

    Prompt.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
      if (nextProps.when) {
        if (!this.props.when || this.props.message !== nextProps.message) this.enable(nextProps.message);
      } else {
        this.disable();
      }
    };

    Prompt.prototype.componentWillUnmount = function componentWillUnmount() {
      this.disable();
    };

    Prompt.prototype.render = function render() {
      return null;
    };

    return Prompt;
  }(_react2.default.Component);

  Prompt.propTypes = {
    when: _propTypes2.default.bool,
    message: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.string]).isRequired
  };
  Prompt.defaultProps = {
    when: true
  };
  Prompt.contextTypes = {
    router: _propTypes2.default.shape({
      history: _propTypes2.default.shape({
        block: _propTypes2.default.func.isRequired
      }).isRequired
    }).isRequired
  };
  exports.default = Prompt;
});
System.registerDynamic("npm:react-router-dom@4.3.1/Prompt.js", ["npm:react-router@4.3.1/Prompt.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;

  var _Prompt = $__require("npm:react-router@4.3.1/Prompt.js");

  var _Prompt2 = _interopRequireDefault(_Prompt);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  exports.default = _Prompt2.default; // Written in this round about way for babel-transform-imports
});
System.registerDynamic('npm:react-router@4.3.1/Redirect.js', ['npm:react@16.7.0.js', 'npm:prop-types@15.6.2.js', 'npm:warning@4.0.2.js', 'npm:invariant@2.2.4.js', 'npm:history@4.7.2.js', 'npm:react-router@4.3.1/generatePath.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  var _react = $__require('npm:react@16.7.0.js');
  var _react2 = _interopRequireDefault(_react);
  var _propTypes = $__require('npm:prop-types@15.6.2.js');
  var _propTypes2 = _interopRequireDefault(_propTypes);
  var _warning = $__require('npm:warning@4.0.2.js');
  var _warning2 = _interopRequireDefault(_warning);
  var _invariant = $__require('npm:invariant@2.2.4.js');
  var _invariant2 = _interopRequireDefault(_invariant);
  var _history = $__require('npm:history@4.7.2.js');
  var _generatePath = $__require('npm:react-router@4.3.1/generatePath.js');
  var _generatePath2 = _interopRequireDefault(_generatePath);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return call && (typeof call === "object" || typeof call === "function") ? call : self;
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      } });
    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var Redirect = function (_React$Component) {
    _inherits(Redirect, _React$Component);
    function Redirect() {
      _classCallCheck(this, Redirect);
      return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
    }
    Redirect.prototype.isStatic = function isStatic() {
      return this.context.router && this.context.router.staticContext;
    };
    Redirect.prototype.componentWillMount = function componentWillMount() {
      (0, _invariant2.default)(this.context.router, "You should not use <Redirect> outside a <Router>");
      if (this.isStatic()) this.perform();
    };
    Redirect.prototype.componentDidMount = function componentDidMount() {
      if (!this.isStatic()) this.perform();
    };
    Redirect.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {
      var prevTo = (0, _history.createLocation)(prevProps.to);
      var nextTo = (0, _history.createLocation)(this.props.to);
      if ((0, _history.locationsAreEqual)(prevTo, nextTo)) {
        (0, _warning2.default)(false, "You tried to redirect to the same route you're currently on: " + ("\"" + nextTo.pathname + nextTo.search + "\""));
        return;
      }
      this.perform();
    };
    Redirect.prototype.computeTo = function computeTo(_ref) {
      var computedMatch = _ref.computedMatch,
          to = _ref.to;
      if (computedMatch) {
        if (typeof to === "string") {
          return (0, _generatePath2.default)(to, computedMatch.params);
        } else {
          return _extends({}, to, { pathname: (0, _generatePath2.default)(to.pathname, computedMatch.params) });
        }
      }
      return to;
    };
    Redirect.prototype.perform = function perform() {
      var history = this.context.router.history;
      var push = this.props.push;
      var to = this.computeTo(this.props);
      if (push) {
        history.push(to);
      } else {
        history.replace(to);
      }
    };
    Redirect.prototype.render = function render() {
      return null;
    };
    return Redirect;
  }(_react2.default.Component);
  Redirect.propTypes = {
    computedMatch: _propTypes2.default.object,
    push: _propTypes2.default.bool,
    from: _propTypes2.default.string,
    to: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.object]).isRequired
  };
  Redirect.defaultProps = { push: false };
  Redirect.contextTypes = { router: _propTypes2.default.shape({
      history: _propTypes2.default.shape({
        push: _propTypes2.default.func.isRequired,
        replace: _propTypes2.default.func.isRequired
      }).isRequired,
      staticContext: _propTypes2.default.object
    }).isRequired };
  exports.default = Redirect;
});
System.registerDynamic("npm:react-router-dom@4.3.1/Redirect.js", ["npm:react-router@4.3.1/Redirect.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;

  var _Redirect = $__require("npm:react-router@4.3.1/Redirect.js");

  var _Redirect2 = _interopRequireDefault(_Redirect);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  exports.default = _Redirect2.default; // Written in this round about way for babel-transform-imports
});
System.registerDynamic("npm:react-router-dom@4.3.1/Route.js", ["npm:react-router@4.3.1/Route.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;

  var _Route = $__require("npm:react-router@4.3.1/Route.js");

  var _Route2 = _interopRequireDefault(_Route);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  exports.default = _Route2.default; // Written in this round about way for babel-transform-imports
});
System.registerDynamic("npm:react-router-dom@4.3.1/Router.js", ["npm:react-router@4.3.1/Router.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;

  var _Router = $__require("npm:react-router@4.3.1/Router.js");

  var _Router2 = _interopRequireDefault(_Router);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  exports.default = _Router2.default; // Written in this round about way for babel-transform-imports
});
System.registerDynamic("npm:history@4.7.2/createBrowserHistory.js", ["npm:warning@3.0.0.js", "npm:invariant@2.2.4.js", "npm:history@4.7.2/LocationUtils.js", "npm:history@4.7.2/PathUtils.js", "npm:history@4.7.2/createTransitionManager.js", "npm:history@4.7.2/DOMUtils.js"], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
    return typeof obj;
  } : function (obj) {
    return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
  };
  var _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  var _warning = $__require("npm:warning@3.0.0.js");
  var _warning2 = _interopRequireDefault(_warning);
  var _invariant = $__require("npm:invariant@2.2.4.js");
  var _invariant2 = _interopRequireDefault(_invariant);
  var _LocationUtils = $__require("npm:history@4.7.2/LocationUtils.js");
  var _PathUtils = $__require("npm:history@4.7.2/PathUtils.js");
  var _createTransitionManager = $__require("npm:history@4.7.2/createTransitionManager.js");
  var _createTransitionManager2 = _interopRequireDefault(_createTransitionManager);
  var _DOMUtils = $__require("npm:history@4.7.2/DOMUtils.js");
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  var PopStateEvent = 'popstate';
  var HashChangeEvent = 'hashchange';
  var getHistoryState = function getHistoryState() {
    try {
      return window.history.state || {};
    } catch (e) {
      return {};
    }
  };
  var createBrowserHistory = function createBrowserHistory() {
    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    (0, _invariant2.default)(_DOMUtils.canUseDOM, 'Browser history needs a DOM');
    var globalHistory = window.history;
    var canUseHistory = (0, _DOMUtils.supportsHistory)();
    var needsHashChangeListener = !(0, _DOMUtils.supportsPopStateOnHashChange)();
    var _props$forceRefresh = props.forceRefresh,
        forceRefresh = _props$forceRefresh === undefined ? false : _props$forceRefresh,
        _props$getUserConfirm = props.getUserConfirmation,
        getUserConfirmation = _props$getUserConfirm === undefined ? _DOMUtils.getConfirmation : _props$getUserConfirm,
        _props$keyLength = props.keyLength,
        keyLength = _props$keyLength === undefined ? 6 : _props$keyLength;
    var basename = props.basename ? (0, _PathUtils.stripTrailingSlash)((0, _PathUtils.addLeadingSlash)(props.basename)) : '';
    var getDOMLocation = function getDOMLocation(historyState) {
      var _ref = historyState || {},
          key = _ref.key,
          state = _ref.state;
      var _window$location = window.location,
          pathname = _window$location.pathname,
          search = _window$location.search,
          hash = _window$location.hash;
      var path = pathname + search + hash;
      (0, _warning2.default)(!basename || (0, _PathUtils.hasBasename)(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path "' + path + '" to begin with "' + basename + '".');
      if (basename) path = (0, _PathUtils.stripBasename)(path, basename);
      return (0, _LocationUtils.createLocation)(path, state, key);
    };
    var createKey = function createKey() {
      return Math.random().toString(36).substr(2, keyLength);
    };
    var transitionManager = (0, _createTransitionManager2.default)();
    var setState = function setState(nextState) {
      _extends(history, nextState);
      history.length = globalHistory.length;
      transitionManager.notifyListeners(history.location, history.action);
    };
    var handlePopState = function handlePopState(event) {
      if ((0, _DOMUtils.isExtraneousPopstateEvent)(event)) return;
      handlePop(getDOMLocation(event.state));
    };
    var handleHashChange = function handleHashChange() {
      handlePop(getDOMLocation(getHistoryState()));
    };
    var forceNextPop = false;
    var handlePop = function handlePop(location) {
      if (forceNextPop) {
        forceNextPop = false;
        setState();
      } else {
        var action = 'POP';
        transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
          if (ok) {
            setState({
              action: action,
              location: location
            });
          } else {
            revertPop(location);
          }
        });
      }
    };
    var revertPop = function revertPop(fromLocation) {
      var toLocation = history.location;
      var toIndex = allKeys.indexOf(toLocation.key);
      if (toIndex === -1) toIndex = 0;
      var fromIndex = allKeys.indexOf(fromLocation.key);
      if (fromIndex === -1) fromIndex = 0;
      var delta = toIndex - fromIndex;
      if (delta) {
        forceNextPop = true;
        go(delta);
      }
    };
    var initialLocation = getDOMLocation(getHistoryState());
    var allKeys = [initialLocation.key];
    var createHref = function createHref(location) {
      return basename + (0, _PathUtils.createPath)(location);
    };
    var push = function push(path, state) {
      (0, _warning2.default)(!((typeof path === 'undefined' ? 'undefined' : _typeof(path)) === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored');
      var action = 'PUSH';
      var location = (0, _LocationUtils.createLocation)(path, state, createKey(), history.location);
      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
        if (!ok) return;
        var href = createHref(location);
        var key = location.key,
            state = location.state;
        if (canUseHistory) {
          globalHistory.pushState({
            key: key,
            state: state
          }, null, href);
          if (forceRefresh) {
            window.location.href = href;
          } else {
            var prevIndex = allKeys.indexOf(history.location.key);
            var nextKeys = allKeys.slice(0, prevIndex === -1 ? 0 : prevIndex + 1);
            nextKeys.push(location.key);
            allKeys = nextKeys;
            setState({
              action: action,
              location: location
            });
          }
        } else {
          (0, _warning2.default)(state === undefined, 'Browser history cannot push state in browsers that do not support HTML5 history');
          window.location.href = href;
        }
      });
    };
    var replace = function replace(path, state) {
      (0, _warning2.default)(!((typeof path === 'undefined' ? 'undefined' : _typeof(path)) === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored');
      var action = 'REPLACE';
      var location = (0, _LocationUtils.createLocation)(path, state, createKey(), history.location);
      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
        if (!ok) return;
        var href = createHref(location);
        var key = location.key,
            state = location.state;
        if (canUseHistory) {
          globalHistory.replaceState({
            key: key,
            state: state
          }, null, href);
          if (forceRefresh) {
            window.location.replace(href);
          } else {
            var prevIndex = allKeys.indexOf(history.location.key);
            if (prevIndex !== -1) allKeys[prevIndex] = location.key;
            setState({
              action: action,
              location: location
            });
          }
        } else {
          (0, _warning2.default)(state === undefined, 'Browser history cannot replace state in browsers that do not support HTML5 history');
          window.location.replace(href);
        }
      });
    };
    var go = function go(n) {
      globalHistory.go(n);
    };
    var goBack = function goBack() {
      return go(-1);
    };
    var goForward = function goForward() {
      return go(1);
    };
    var listenerCount = 0;
    var checkDOMListeners = function checkDOMListeners(delta) {
      listenerCount += delta;
      if (listenerCount === 1) {
        (0, _DOMUtils.addEventListener)(window, PopStateEvent, handlePopState);
        if (needsHashChangeListener) (0, _DOMUtils.addEventListener)(window, HashChangeEvent, handleHashChange);
      } else if (listenerCount === 0) {
        (0, _DOMUtils.removeEventListener)(window, PopStateEvent, handlePopState);
        if (needsHashChangeListener) (0, _DOMUtils.removeEventListener)(window, HashChangeEvent, handleHashChange);
      }
    };
    var isBlocked = false;
    var block = function block() {
      var prompt = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
      var unblock = transitionManager.setPrompt(prompt);
      if (!isBlocked) {
        checkDOMListeners(1);
        isBlocked = true;
      }
      return function () {
        if (isBlocked) {
          isBlocked = false;
          checkDOMListeners(-1);
        }
        return unblock();
      };
    };
    var listen = function listen(listener) {
      var unlisten = transitionManager.appendListener(listener);
      checkDOMListeners(1);
      return function () {
        checkDOMListeners(-1);
        unlisten();
      };
    };
    var history = {
      length: globalHistory.length,
      action: 'POP',
      location: initialLocation,
      createHref: createHref,
      push: push,
      replace: replace,
      go: go,
      goBack: goBack,
      goForward: goForward,
      block: block,
      listen: listen
    };
    return history;
  };
  exports.default = createBrowserHistory;
});
System.registerDynamic('npm:history@4.7.2/DOMUtils.js', [], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var canUseDOM = exports.canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

  var addEventListener = exports.addEventListener = function addEventListener(node, event, listener) {
    return node.addEventListener ? node.addEventListener(event, listener, false) : node.attachEvent('on' + event, listener);
  };

  var removeEventListener = exports.removeEventListener = function removeEventListener(node, event, listener) {
    return node.removeEventListener ? node.removeEventListener(event, listener, false) : node.detachEvent('on' + event, listener);
  };

  var getConfirmation = exports.getConfirmation = function getConfirmation(message, callback) {
    return callback(window.confirm(message));
  }; // eslint-disable-line no-alert

  /**
   * Returns true if the HTML5 history API is supported. Taken from Modernizr.
   *
   * https://github.com/Modernizr/Modernizr/blob/master/LICENSE
   * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js
   * changed to avoid false negatives for Windows Phones: https://github.com/reactjs/react-router/issues/586
   */
  var supportsHistory = exports.supportsHistory = function supportsHistory() {
    var ua = window.navigator.userAgent;

    if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) return false;

    return window.history && 'pushState' in window.history;
  };

  /**
   * Returns true if browser fires popstate on hash change.
   * IE10 and IE11 do not.
   */
  var supportsPopStateOnHashChange = exports.supportsPopStateOnHashChange = function supportsPopStateOnHashChange() {
    return window.navigator.userAgent.indexOf('Trident') === -1;
  };

  /**
   * Returns false if using go(n) with hash history causes a full page reload.
   */
  var supportsGoWithoutReloadUsingHash = exports.supportsGoWithoutReloadUsingHash = function supportsGoWithoutReloadUsingHash() {
    return window.navigator.userAgent.indexOf('Firefox') === -1;
  };

  /**
   * Returns true if a given popstate event is an extraneous WebKit event.
   * Accounts for the fact that Chrome on iOS fires real popstate events
   * containing undefined state when pressing the back button.
   */
  var isExtraneousPopstateEvent = exports.isExtraneousPopstateEvent = function isExtraneousPopstateEvent(event) {
    return event.state === undefined && navigator.userAgent.indexOf('CriOS') === -1;
  };
});
System.registerDynamic('npm:history@4.7.2/createHashHistory.js', ['npm:warning@3.0.0.js', 'npm:invariant@2.2.4.js', 'npm:history@4.7.2/LocationUtils.js', 'npm:history@4.7.2/PathUtils.js', 'npm:history@4.7.2/createTransitionManager.js', 'npm:history@4.7.2/DOMUtils.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  var _warning = $__require('npm:warning@3.0.0.js');
  var _warning2 = _interopRequireDefault(_warning);
  var _invariant = $__require('npm:invariant@2.2.4.js');
  var _invariant2 = _interopRequireDefault(_invariant);
  var _LocationUtils = $__require('npm:history@4.7.2/LocationUtils.js');
  var _PathUtils = $__require('npm:history@4.7.2/PathUtils.js');
  var _createTransitionManager = $__require('npm:history@4.7.2/createTransitionManager.js');
  var _createTransitionManager2 = _interopRequireDefault(_createTransitionManager);
  var _DOMUtils = $__require('npm:history@4.7.2/DOMUtils.js');
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  var HashChangeEvent = 'hashchange';
  var HashPathCoders = {
    hashbang: {
      encodePath: function encodePath(path) {
        return path.charAt(0) === '!' ? path : '!/' + (0, _PathUtils.stripLeadingSlash)(path);
      },
      decodePath: function decodePath(path) {
        return path.charAt(0) === '!' ? path.substr(1) : path;
      }
    },
    noslash: {
      encodePath: _PathUtils.stripLeadingSlash,
      decodePath: _PathUtils.addLeadingSlash
    },
    slash: {
      encodePath: _PathUtils.addLeadingSlash,
      decodePath: _PathUtils.addLeadingSlash
    }
  };
  var getHashPath = function getHashPath() {
    var href = window.location.href;
    var hashIndex = href.indexOf('#');
    return hashIndex === -1 ? '' : href.substring(hashIndex + 1);
  };
  var pushHashPath = function pushHashPath(path) {
    return window.location.hash = path;
  };
  var replaceHashPath = function replaceHashPath(path) {
    var hashIndex = window.location.href.indexOf('#');
    window.location.replace(window.location.href.slice(0, hashIndex >= 0 ? hashIndex : 0) + '#' + path);
  };
  var createHashHistory = function createHashHistory() {
    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    (0, _invariant2.default)(_DOMUtils.canUseDOM, 'Hash history needs a DOM');
    var globalHistory = window.history;
    var canGoWithoutReload = (0, _DOMUtils.supportsGoWithoutReloadUsingHash)();
    var _props$getUserConfirm = props.getUserConfirmation,
        getUserConfirmation = _props$getUserConfirm === undefined ? _DOMUtils.getConfirmation : _props$getUserConfirm,
        _props$hashType = props.hashType,
        hashType = _props$hashType === undefined ? 'slash' : _props$hashType;
    var basename = props.basename ? (0, _PathUtils.stripTrailingSlash)((0, _PathUtils.addLeadingSlash)(props.basename)) : '';
    var _HashPathCoders$hashT = HashPathCoders[hashType],
        encodePath = _HashPathCoders$hashT.encodePath,
        decodePath = _HashPathCoders$hashT.decodePath;
    var getDOMLocation = function getDOMLocation() {
      var path = decodePath(getHashPath());
      (0, _warning2.default)(!basename || (0, _PathUtils.hasBasename)(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path "' + path + '" to begin with "' + basename + '".');
      if (basename) path = (0, _PathUtils.stripBasename)(path, basename);
      return (0, _LocationUtils.createLocation)(path);
    };
    var transitionManager = (0, _createTransitionManager2.default)();
    var setState = function setState(nextState) {
      _extends(history, nextState);
      history.length = globalHistory.length;
      transitionManager.notifyListeners(history.location, history.action);
    };
    var forceNextPop = false;
    var ignorePath = null;
    var handleHashChange = function handleHashChange() {
      var path = getHashPath();
      var encodedPath = encodePath(path);
      if (path !== encodedPath) {
        replaceHashPath(encodedPath);
      } else {
        var location = getDOMLocation();
        var prevLocation = history.location;
        if (!forceNextPop && (0, _LocationUtils.locationsAreEqual)(prevLocation, location)) return;
        if (ignorePath === (0, _PathUtils.createPath)(location)) return;
        ignorePath = null;
        handlePop(location);
      }
    };
    var handlePop = function handlePop(location) {
      if (forceNextPop) {
        forceNextPop = false;
        setState();
      } else {
        var action = 'POP';
        transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
          if (ok) {
            setState({
              action: action,
              location: location
            });
          } else {
            revertPop(location);
          }
        });
      }
    };
    var revertPop = function revertPop(fromLocation) {
      var toLocation = history.location;
      var toIndex = allPaths.lastIndexOf((0, _PathUtils.createPath)(toLocation));
      if (toIndex === -1) toIndex = 0;
      var fromIndex = allPaths.lastIndexOf((0, _PathUtils.createPath)(fromLocation));
      if (fromIndex === -1) fromIndex = 0;
      var delta = toIndex - fromIndex;
      if (delta) {
        forceNextPop = true;
        go(delta);
      }
    };
    var path = getHashPath();
    var encodedPath = encodePath(path);
    if (path !== encodedPath) replaceHashPath(encodedPath);
    var initialLocation = getDOMLocation();
    var allPaths = [(0, _PathUtils.createPath)(initialLocation)];
    var createHref = function createHref(location) {
      return '#' + encodePath(basename + (0, _PathUtils.createPath)(location));
    };
    var push = function push(path, state) {
      (0, _warning2.default)(state === undefined, 'Hash history cannot push state; it is ignored');
      var action = 'PUSH';
      var location = (0, _LocationUtils.createLocation)(path, undefined, undefined, history.location);
      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
        if (!ok) return;
        var path = (0, _PathUtils.createPath)(location);
        var encodedPath = encodePath(basename + path);
        var hashChanged = getHashPath() !== encodedPath;
        if (hashChanged) {
          ignorePath = path;
          pushHashPath(encodedPath);
          var prevIndex = allPaths.lastIndexOf((0, _PathUtils.createPath)(history.location));
          var nextPaths = allPaths.slice(0, prevIndex === -1 ? 0 : prevIndex + 1);
          nextPaths.push(path);
          allPaths = nextPaths;
          setState({
            action: action,
            location: location
          });
        } else {
          (0, _warning2.default)(false, 'Hash history cannot PUSH the same path; a new entry will not be added to the history stack');
          setState();
        }
      });
    };
    var replace = function replace(path, state) {
      (0, _warning2.default)(state === undefined, 'Hash history cannot replace state; it is ignored');
      var action = 'REPLACE';
      var location = (0, _LocationUtils.createLocation)(path, undefined, undefined, history.location);
      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
        if (!ok) return;
        var path = (0, _PathUtils.createPath)(location);
        var encodedPath = encodePath(basename + path);
        var hashChanged = getHashPath() !== encodedPath;
        if (hashChanged) {
          ignorePath = path;
          replaceHashPath(encodedPath);
        }
        var prevIndex = allPaths.indexOf((0, _PathUtils.createPath)(history.location));
        if (prevIndex !== -1) allPaths[prevIndex] = path;
        setState({
          action: action,
          location: location
        });
      });
    };
    var go = function go(n) {
      (0, _warning2.default)(canGoWithoutReload, 'Hash history go(n) causes a full page reload in this browser');
      globalHistory.go(n);
    };
    var goBack = function goBack() {
      return go(-1);
    };
    var goForward = function goForward() {
      return go(1);
    };
    var listenerCount = 0;
    var checkDOMListeners = function checkDOMListeners(delta) {
      listenerCount += delta;
      if (listenerCount === 1) {
        (0, _DOMUtils.addEventListener)(window, HashChangeEvent, handleHashChange);
      } else if (listenerCount === 0) {
        (0, _DOMUtils.removeEventListener)(window, HashChangeEvent, handleHashChange);
      }
    };
    var isBlocked = false;
    var block = function block() {
      var prompt = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
      var unblock = transitionManager.setPrompt(prompt);
      if (!isBlocked) {
        checkDOMListeners(1);
        isBlocked = true;
      }
      return function () {
        if (isBlocked) {
          isBlocked = false;
          checkDOMListeners(-1);
        }
        return unblock();
      };
    };
    var listen = function listen(listener) {
      var unlisten = transitionManager.appendListener(listener);
      checkDOMListeners(1);
      return function () {
        checkDOMListeners(-1);
        unlisten();
      };
    };
    var history = {
      length: globalHistory.length,
      action: 'POP',
      location: initialLocation,
      createHref: createHref,
      push: push,
      replace: replace,
      go: go,
      goBack: goBack,
      goForward: goForward,
      block: block,
      listen: listen
    };
    return history;
  };
  exports.default = createHashHistory;
});
System.registerDynamic('npm:resolve-pathname@2.2.0/cjs/index.js', [], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  function isAbsolute(pathname) {
    return pathname.charAt(0) === '/';
  }

  // About 1.5x faster than the two-arg version of Array#splice()
  function spliceOne(list, index) {
    for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1) {
      list[i] = list[k];
    }

    list.pop();
  }

  // This implementation is based heavily on node's url.parse
  function resolvePathname(to) {
    var from = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';

    var toParts = to && to.split('/') || [];
    var fromParts = from && from.split('/') || [];

    var isToAbs = to && isAbsolute(to);
    var isFromAbs = from && isAbsolute(from);
    var mustEndAbs = isToAbs || isFromAbs;

    if (to && isAbsolute(to)) {
      // to is absolute
      fromParts = toParts;
    } else if (toParts.length) {
      // to is relative, drop the filename
      fromParts.pop();
      fromParts = fromParts.concat(toParts);
    }

    if (!fromParts.length) return '/';

    var hasTrailingSlash = void 0;
    if (fromParts.length) {
      var last = fromParts[fromParts.length - 1];
      hasTrailingSlash = last === '.' || last === '..' || last === '';
    } else {
      hasTrailingSlash = false;
    }

    var up = 0;
    for (var i = fromParts.length; i >= 0; i--) {
      var part = fromParts[i];

      if (part === '.') {
        spliceOne(fromParts, i);
      } else if (part === '..') {
        spliceOne(fromParts, i);
        up++;
      } else if (up) {
        spliceOne(fromParts, i);
        up--;
      }
    }

    if (!mustEndAbs) for (; up--; up) {
      fromParts.unshift('..');
    }if (mustEndAbs && fromParts[0] !== '' && (!fromParts[0] || !isAbsolute(fromParts[0]))) fromParts.unshift('');

    var result = fromParts.join('/');

    if (hasTrailingSlash && result.substr(-1) !== '/') result += '/';

    return result;
  }

  exports.default = resolvePathname;
  module.exports = exports['default'];
});
System.registerDynamic("npm:resolve-pathname@2.2.0.js", ["npm:resolve-pathname@2.2.0/cjs/index.js"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("npm:resolve-pathname@2.2.0/cjs/index.js");
});
System.registerDynamic("npm:value-equal@0.4.0/cjs/index.js", [], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;

  var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
    return typeof obj;
  } : function (obj) {
    return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
  };

  function valueEqual(a, b) {
    if (a === b) return true;

    if (a == null || b == null) return false;

    if (Array.isArray(a)) {
      return Array.isArray(b) && a.length === b.length && a.every(function (item, index) {
        return valueEqual(item, b[index]);
      });
    }

    var aType = typeof a === 'undefined' ? 'undefined' : _typeof(a);
    var bType = typeof b === 'undefined' ? 'undefined' : _typeof(b);

    if (aType !== bType) return false;

    if (aType === 'object') {
      var aValue = a.valueOf();
      var bValue = b.valueOf();

      if (aValue !== a || bValue !== b) return valueEqual(aValue, bValue);

      var aKeys = Object.keys(a);
      var bKeys = Object.keys(b);

      if (aKeys.length !== bKeys.length) return false;

      return aKeys.every(function (key) {
        return valueEqual(a[key], b[key]);
      });
    }

    return false;
  }

  exports.default = valueEqual;
  module.exports = exports['default'];
});
System.registerDynamic("npm:value-equal@0.4.0.js", ["npm:value-equal@0.4.0/cjs/index.js"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("npm:value-equal@0.4.0/cjs/index.js");
});
System.registerDynamic('npm:history@4.7.2/PathUtils.js', [], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var addLeadingSlash = exports.addLeadingSlash = function addLeadingSlash(path) {
    return path.charAt(0) === '/' ? path : '/' + path;
  };

  var stripLeadingSlash = exports.stripLeadingSlash = function stripLeadingSlash(path) {
    return path.charAt(0) === '/' ? path.substr(1) : path;
  };

  var hasBasename = exports.hasBasename = function hasBasename(path, prefix) {
    return new RegExp('^' + prefix + '(\\/|\\?|#|$)', 'i').test(path);
  };

  var stripBasename = exports.stripBasename = function stripBasename(path, prefix) {
    return hasBasename(path, prefix) ? path.substr(prefix.length) : path;
  };

  var stripTrailingSlash = exports.stripTrailingSlash = function stripTrailingSlash(path) {
    return path.charAt(path.length - 1) === '/' ? path.slice(0, -1) : path;
  };

  var parsePath = exports.parsePath = function parsePath(path) {
    var pathname = path || '/';
    var search = '';
    var hash = '';

    var hashIndex = pathname.indexOf('#');
    if (hashIndex !== -1) {
      hash = pathname.substr(hashIndex);
      pathname = pathname.substr(0, hashIndex);
    }

    var searchIndex = pathname.indexOf('?');
    if (searchIndex !== -1) {
      search = pathname.substr(searchIndex);
      pathname = pathname.substr(0, searchIndex);
    }

    return {
      pathname: pathname,
      search: search === '?' ? '' : search,
      hash: hash === '#' ? '' : hash
    };
  };

  var createPath = exports.createPath = function createPath(location) {
    var pathname = location.pathname,
        search = location.search,
        hash = location.hash;

    var path = pathname || '/';

    if (search && search !== '?') path += search.charAt(0) === '?' ? search : '?' + search;

    if (hash && hash !== '#') path += hash.charAt(0) === '#' ? hash : '#' + hash;

    return path;
  };
});
System.registerDynamic('npm:history@4.7.2/LocationUtils.js', ['npm:resolve-pathname@2.2.0.js', 'npm:value-equal@0.4.0.js', 'npm:history@4.7.2/PathUtils.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  exports.locationsAreEqual = exports.createLocation = undefined;
  var _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  var _resolvePathname = $__require('npm:resolve-pathname@2.2.0.js');
  var _resolvePathname2 = _interopRequireDefault(_resolvePathname);
  var _valueEqual = $__require('npm:value-equal@0.4.0.js');
  var _valueEqual2 = _interopRequireDefault(_valueEqual);
  var _PathUtils = $__require('npm:history@4.7.2/PathUtils.js');
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  var createLocation = exports.createLocation = function createLocation(path, state, key, currentLocation) {
    var location = void 0;
    if (typeof path === 'string') {
      location = (0, _PathUtils.parsePath)(path);
      location.state = state;
    } else {
      location = _extends({}, path);
      if (location.pathname === undefined) location.pathname = '';
      if (location.search) {
        if (location.search.charAt(0) !== '?') location.search = '?' + location.search;
      } else {
        location.search = '';
      }
      if (location.hash) {
        if (location.hash.charAt(0) !== '#') location.hash = '#' + location.hash;
      } else {
        location.hash = '';
      }
      if (state !== undefined && location.state === undefined) location.state = state;
    }
    try {
      location.pathname = decodeURI(location.pathname);
    } catch (e) {
      if (e instanceof URIError) {
        throw new URIError('Pathname "' + location.pathname + '" could not be decoded. ' + 'This is likely caused by an invalid percent-encoding.');
      } else {
        throw e;
      }
    }
    if (key) location.key = key;
    if (currentLocation) {
      if (!location.pathname) {
        location.pathname = currentLocation.pathname;
      } else if (location.pathname.charAt(0) !== '/') {
        location.pathname = (0, _resolvePathname2.default)(location.pathname, currentLocation.pathname);
      }
    } else {
      if (!location.pathname) {
        location.pathname = '/';
      }
    }
    return location;
  };
  var locationsAreEqual = exports.locationsAreEqual = function locationsAreEqual(a, b) {
    return a.pathname === b.pathname && a.search === b.search && a.hash === b.hash && a.key === b.key && (0, _valueEqual2.default)(a.state, b.state);
  };
});
System.registerDynamic('npm:warning@3.0.0/browser.js', ['github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var warning = function () {};
    if ('production' !== 'production') {
      warning = function (condition, format, args) {
        var len = arguments.length;
        args = new Array(len > 2 ? len - 2 : 0);
        for (var key = 2; key < len; key++) {
          args[key - 2] = arguments[key];
        }
        if (format === undefined) {
          throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
        }
        if (format.length < 10 || /^[s\W]*$/.test(format)) {
          throw new Error('The warning format should be able to uniquely identify this ' + 'warning. Please, use a more descriptive format than: ' + format);
        }
        if (!condition) {
          var argIndex = 0;
          var message = 'Warning: ' + format.replace(/%s/g, function () {
            return args[argIndex++];
          });
          if (typeof console !== 'undefined') {
            console.error(message);
          }
          try {
            throw new Error(message);
          } catch (x) {}
        }
      };
    }
    module.exports = warning;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic("npm:warning@3.0.0.js", ["npm:warning@3.0.0/browser.js"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("npm:warning@3.0.0/browser.js");
});
System.registerDynamic('npm:history@4.7.2/createTransitionManager.js', ['npm:warning@3.0.0.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;

  var _warning = $__require('npm:warning@3.0.0.js');

  var _warning2 = _interopRequireDefault(_warning);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  var createTransitionManager = function createTransitionManager() {
    var prompt = null;

    var setPrompt = function setPrompt(nextPrompt) {
      (0, _warning2.default)(prompt == null, 'A history supports only one prompt at a time');

      prompt = nextPrompt;

      return function () {
        if (prompt === nextPrompt) prompt = null;
      };
    };

    var confirmTransitionTo = function confirmTransitionTo(location, action, getUserConfirmation, callback) {
      // TODO: If another transition starts while we're still confirming
      // the previous one, we may end up in a weird state. Figure out the
      // best way to handle this.
      if (prompt != null) {
        var result = typeof prompt === 'function' ? prompt(location, action) : prompt;

        if (typeof result === 'string') {
          if (typeof getUserConfirmation === 'function') {
            getUserConfirmation(result, callback);
          } else {
            (0, _warning2.default)(false, 'A history needs a getUserConfirmation function in order to use a prompt message');

            callback(true);
          }
        } else {
          // Return false from a transition hook to cancel the transition.
          callback(result !== false);
        }
      } else {
        callback(true);
      }
    };

    var listeners = [];

    var appendListener = function appendListener(fn) {
      var isActive = true;

      var listener = function listener() {
        if (isActive) fn.apply(undefined, arguments);
      };

      listeners.push(listener);

      return function () {
        isActive = false;
        listeners = listeners.filter(function (item) {
          return item !== listener;
        });
      };
    };

    var notifyListeners = function notifyListeners() {
      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      listeners.forEach(function (listener) {
        return listener.apply(undefined, args);
      });
    };

    return {
      setPrompt: setPrompt,
      confirmTransitionTo: confirmTransitionTo,
      appendListener: appendListener,
      notifyListeners: notifyListeners
    };
  };

  exports.default = createTransitionManager;
});
System.registerDynamic("npm:history@4.7.2/createMemoryHistory.js", ["npm:warning@3.0.0.js", "npm:history@4.7.2/PathUtils.js", "npm:history@4.7.2/LocationUtils.js", "npm:history@4.7.2/createTransitionManager.js"], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
    return typeof obj;
  } : function (obj) {
    return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
  };
  var _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  var _warning = $__require("npm:warning@3.0.0.js");
  var _warning2 = _interopRequireDefault(_warning);
  var _PathUtils = $__require("npm:history@4.7.2/PathUtils.js");
  var _LocationUtils = $__require("npm:history@4.7.2/LocationUtils.js");
  var _createTransitionManager = $__require("npm:history@4.7.2/createTransitionManager.js");
  var _createTransitionManager2 = _interopRequireDefault(_createTransitionManager);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  var clamp = function clamp(n, lowerBound, upperBound) {
    return Math.min(Math.max(n, lowerBound), upperBound);
  };
  var createMemoryHistory = function createMemoryHistory() {
    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var getUserConfirmation = props.getUserConfirmation,
        _props$initialEntries = props.initialEntries,
        initialEntries = _props$initialEntries === undefined ? ['/'] : _props$initialEntries,
        _props$initialIndex = props.initialIndex,
        initialIndex = _props$initialIndex === undefined ? 0 : _props$initialIndex,
        _props$keyLength = props.keyLength,
        keyLength = _props$keyLength === undefined ? 6 : _props$keyLength;
    var transitionManager = (0, _createTransitionManager2.default)();
    var setState = function setState(nextState) {
      _extends(history, nextState);
      history.length = history.entries.length;
      transitionManager.notifyListeners(history.location, history.action);
    };
    var createKey = function createKey() {
      return Math.random().toString(36).substr(2, keyLength);
    };
    var index = clamp(initialIndex, 0, initialEntries.length - 1);
    var entries = initialEntries.map(function (entry) {
      return typeof entry === 'string' ? (0, _LocationUtils.createLocation)(entry, undefined, createKey()) : (0, _LocationUtils.createLocation)(entry, undefined, entry.key || createKey());
    });
    var createHref = _PathUtils.createPath;
    var push = function push(path, state) {
      (0, _warning2.default)(!((typeof path === 'undefined' ? 'undefined' : _typeof(path)) === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored');
      var action = 'PUSH';
      var location = (0, _LocationUtils.createLocation)(path, state, createKey(), history.location);
      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
        if (!ok) return;
        var prevIndex = history.index;
        var nextIndex = prevIndex + 1;
        var nextEntries = history.entries.slice(0);
        if (nextEntries.length > nextIndex) {
          nextEntries.splice(nextIndex, nextEntries.length - nextIndex, location);
        } else {
          nextEntries.push(location);
        }
        setState({
          action: action,
          location: location,
          index: nextIndex,
          entries: nextEntries
        });
      });
    };
    var replace = function replace(path, state) {
      (0, _warning2.default)(!((typeof path === 'undefined' ? 'undefined' : _typeof(path)) === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored');
      var action = 'REPLACE';
      var location = (0, _LocationUtils.createLocation)(path, state, createKey(), history.location);
      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
        if (!ok) return;
        history.entries[history.index] = location;
        setState({
          action: action,
          location: location
        });
      });
    };
    var go = function go(n) {
      var nextIndex = clamp(history.index + n, 0, history.entries.length - 1);
      var action = 'POP';
      var location = history.entries[nextIndex];
      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
        if (ok) {
          setState({
            action: action,
            location: location,
            index: nextIndex
          });
        } else {
          setState();
        }
      });
    };
    var goBack = function goBack() {
      return go(-1);
    };
    var goForward = function goForward() {
      return go(1);
    };
    var canGo = function canGo(n) {
      var nextIndex = history.index + n;
      return nextIndex >= 0 && nextIndex < history.entries.length;
    };
    var block = function block() {
      var prompt = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
      return transitionManager.setPrompt(prompt);
    };
    var listen = function listen(listener) {
      return transitionManager.appendListener(listener);
    };
    var history = {
      length: entries.length,
      action: 'POP',
      location: entries[index],
      index: index,
      entries: entries,
      createHref: createHref,
      push: push,
      replace: replace,
      go: go,
      goBack: goBack,
      goForward: goForward,
      canGo: canGo,
      block: block,
      listen: listen
    };
    return history;
  };
  exports.default = createMemoryHistory;
});
System.registerDynamic('npm:history@4.7.2/index.js', ['npm:history@4.7.2/LocationUtils.js', 'npm:history@4.7.2/PathUtils.js', 'npm:history@4.7.2/createBrowserHistory.js', 'npm:history@4.7.2/createHashHistory.js', 'npm:history@4.7.2/createMemoryHistory.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  exports.createPath = exports.parsePath = exports.locationsAreEqual = exports.createLocation = exports.createMemoryHistory = exports.createHashHistory = exports.createBrowserHistory = undefined;
  var _LocationUtils = $__require('npm:history@4.7.2/LocationUtils.js');
  Object.defineProperty(exports, 'createLocation', {
    enumerable: true,
    get: function get() {
      return _LocationUtils.createLocation;
    }
  });
  Object.defineProperty(exports, 'locationsAreEqual', {
    enumerable: true,
    get: function get() {
      return _LocationUtils.locationsAreEqual;
    }
  });
  var _PathUtils = $__require('npm:history@4.7.2/PathUtils.js');
  Object.defineProperty(exports, 'parsePath', {
    enumerable: true,
    get: function get() {
      return _PathUtils.parsePath;
    }
  });
  Object.defineProperty(exports, 'createPath', {
    enumerable: true,
    get: function get() {
      return _PathUtils.createPath;
    }
  });
  var _createBrowserHistory2 = $__require('npm:history@4.7.2/createBrowserHistory.js');
  var _createBrowserHistory3 = _interopRequireDefault(_createBrowserHistory2);
  var _createHashHistory2 = $__require('npm:history@4.7.2/createHashHistory.js');
  var _createHashHistory3 = _interopRequireDefault(_createHashHistory2);
  var _createMemoryHistory2 = $__require('npm:history@4.7.2/createMemoryHistory.js');
  var _createMemoryHistory3 = _interopRequireDefault(_createMemoryHistory2);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  exports.createBrowserHistory = _createBrowserHistory3.default;
  exports.createHashHistory = _createHashHistory3.default;
  exports.createMemoryHistory = _createMemoryHistory3.default;
});
System.registerDynamic("npm:history@4.7.2.js", ["npm:history@4.7.2/index.js"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("npm:history@4.7.2/index.js");
});
System.registerDynamic("npm:react-router@4.3.1/Router.js", ["npm:warning@4.0.2.js", "npm:invariant@2.2.4.js", "npm:react@16.7.0.js", "npm:prop-types@15.6.2.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;

  var _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }return target;
  };

  var _warning = $__require("npm:warning@4.0.2.js");

  var _warning2 = _interopRequireDefault(_warning);

  var _invariant = $__require("npm:invariant@2.2.4.js");

  var _invariant2 = _interopRequireDefault(_invariant);

  var _react = $__require("npm:react@16.7.0.js");

  var _react2 = _interopRequireDefault(_react);

  var _propTypes = $__require("npm:prop-types@15.6.2.js");

  var _propTypes2 = _interopRequireDefault(_propTypes);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }return call && (typeof call === "object" || typeof call === "function") ? call : self;
  }

  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }

  /**
   * The public API for putting history on context.
   */
  var Router = function (_React$Component) {
    _inherits(Router, _React$Component);

    function Router() {
      var _temp, _this, _ret;

      _classCallCheck(this, Router);

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {
        match: _this.computeMatch(_this.props.history.location.pathname)
      }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    Router.prototype.getChildContext = function getChildContext() {
      return {
        router: _extends({}, this.context.router, {
          history: this.props.history,
          route: {
            location: this.props.history.location,
            match: this.state.match
          }
        })
      };
    };

    Router.prototype.computeMatch = function computeMatch(pathname) {
      return {
        path: "/",
        url: "/",
        params: {},
        isExact: pathname === "/"
      };
    };

    Router.prototype.componentWillMount = function componentWillMount() {
      var _this2 = this;

      var _props = this.props,
          children = _props.children,
          history = _props.history;

      (0, _invariant2.default)(children == null || _react2.default.Children.count(children) === 1, "A <Router> may have only one child element");

      // Do this here so we can setState when a <Redirect> changes the
      // location in componentWillMount. This happens e.g. when doing
      // server rendering using a <StaticRouter>.
      this.unlisten = history.listen(function () {
        _this2.setState({
          match: _this2.computeMatch(history.location.pathname)
        });
      });
    };

    Router.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
      (0, _warning2.default)(this.props.history === nextProps.history, "You cannot change <Router history>");
    };

    Router.prototype.componentWillUnmount = function componentWillUnmount() {
      this.unlisten();
    };

    Router.prototype.render = function render() {
      var children = this.props.children;

      return children ? _react2.default.Children.only(children) : null;
    };

    return Router;
  }(_react2.default.Component);

  Router.propTypes = {
    history: _propTypes2.default.object.isRequired,
    children: _propTypes2.default.node
  };
  Router.contextTypes = {
    router: _propTypes2.default.object
  };
  Router.childContextTypes = {
    router: _propTypes2.default.object.isRequired
  };
  exports.default = Router;
});
System.registerDynamic('npm:react-router@4.3.1/StaticRouter.js', ['npm:warning@4.0.2.js', 'npm:invariant@2.2.4.js', 'npm:react@16.7.0.js', 'npm:prop-types@15.6.2.js', 'npm:history@4.7.2.js', 'npm:react-router@4.3.1/Router.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  var _warning = $__require('npm:warning@4.0.2.js');
  var _warning2 = _interopRequireDefault(_warning);
  var _invariant = $__require('npm:invariant@2.2.4.js');
  var _invariant2 = _interopRequireDefault(_invariant);
  var _react = $__require('npm:react@16.7.0.js');
  var _react2 = _interopRequireDefault(_react);
  var _propTypes = $__require('npm:prop-types@15.6.2.js');
  var _propTypes2 = _interopRequireDefault(_propTypes);
  var _history = $__require('npm:history@4.7.2.js');
  var _Router = $__require('npm:react-router@4.3.1/Router.js');
  var _Router2 = _interopRequireDefault(_Router);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  function _objectWithoutProperties(obj, keys) {
    var target = {};
    for (var i in obj) {
      if (keys.indexOf(i) >= 0) continue;
      if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
      target[i] = obj[i];
    }
    return target;
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return call && (typeof call === "object" || typeof call === "function") ? call : self;
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      } });
    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var addLeadingSlash = function addLeadingSlash(path) {
    return path.charAt(0) === "/" ? path : "/" + path;
  };
  var addBasename = function addBasename(basename, location) {
    if (!basename) return location;
    return _extends({}, location, { pathname: addLeadingSlash(basename) + location.pathname });
  };
  var stripBasename = function stripBasename(basename, location) {
    if (!basename) return location;
    var base = addLeadingSlash(basename);
    if (location.pathname.indexOf(base) !== 0) return location;
    return _extends({}, location, { pathname: location.pathname.substr(base.length) });
  };
  var createURL = function createURL(location) {
    return typeof location === "string" ? location : (0, _history.createPath)(location);
  };
  var staticHandler = function staticHandler(methodName) {
    return function () {
      (0, _invariant2.default)(false, "You cannot %s with <StaticRouter>", methodName);
    };
  };
  var noop = function noop() {};
  var StaticRouter = function (_React$Component) {
    _inherits(StaticRouter, _React$Component);
    function StaticRouter() {
      var _temp, _this, _ret;
      _classCallCheck(this, StaticRouter);
      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.createHref = function (path) {
        return addLeadingSlash(_this.props.basename + createURL(path));
      }, _this.handlePush = function (location) {
        var _this$props = _this.props,
            basename = _this$props.basename,
            context = _this$props.context;
        context.action = "PUSH";
        context.location = addBasename(basename, (0, _history.createLocation)(location));
        context.url = createURL(context.location);
      }, _this.handleReplace = function (location) {
        var _this$props2 = _this.props,
            basename = _this$props2.basename,
            context = _this$props2.context;
        context.action = "REPLACE";
        context.location = addBasename(basename, (0, _history.createLocation)(location));
        context.url = createURL(context.location);
      }, _this.handleListen = function () {
        return noop;
      }, _this.handleBlock = function () {
        return noop;
      }, _temp), _possibleConstructorReturn(_this, _ret);
    }
    StaticRouter.prototype.getChildContext = function getChildContext() {
      return { router: { staticContext: this.props.context } };
    };
    StaticRouter.prototype.componentWillMount = function componentWillMount() {
      (0, _warning2.default)(!this.props.history, "<StaticRouter> ignores the history prop. To use a custom history, " + "use `import { Router }` instead of `import { StaticRouter as Router }`.");
    };
    StaticRouter.prototype.render = function render() {
      var _props = this.props,
          basename = _props.basename,
          context = _props.context,
          location = _props.location,
          props = _objectWithoutProperties(_props, ["basename", "context", "location"]);
      var history = {
        createHref: this.createHref,
        action: "POP",
        location: stripBasename(basename, (0, _history.createLocation)(location)),
        push: this.handlePush,
        replace: this.handleReplace,
        go: staticHandler("go"),
        goBack: staticHandler("goBack"),
        goForward: staticHandler("goForward"),
        listen: this.handleListen,
        block: this.handleBlock
      };
      return _react2.default.createElement(_Router2.default, _extends({}, props, { history: history }));
    };
    return StaticRouter;
  }(_react2.default.Component);
  StaticRouter.propTypes = {
    basename: _propTypes2.default.string,
    context: _propTypes2.default.object.isRequired,
    location: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.object])
  };
  StaticRouter.defaultProps = {
    basename: "",
    location: "/"
  };
  StaticRouter.childContextTypes = { router: _propTypes2.default.object.isRequired };
  exports.default = StaticRouter;
});
System.registerDynamic("npm:react-router-dom@4.3.1/StaticRouter.js", ["npm:react-router@4.3.1/StaticRouter.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;

  var _StaticRouter = $__require("npm:react-router@4.3.1/StaticRouter.js");

  var _StaticRouter2 = _interopRequireDefault(_StaticRouter);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  exports.default = _StaticRouter2.default; // Written in this round about way for babel-transform-imports
});
System.registerDynamic('npm:react-router@4.3.1/Switch.js', ['npm:react@16.7.0.js', 'npm:prop-types@15.6.2.js', 'npm:warning@4.0.2.js', 'npm:invariant@2.2.4.js', 'npm:react-router@4.3.1/matchPath.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _react = $__require('npm:react@16.7.0.js');
  var _react2 = _interopRequireDefault(_react);
  var _propTypes = $__require('npm:prop-types@15.6.2.js');
  var _propTypes2 = _interopRequireDefault(_propTypes);
  var _warning = $__require('npm:warning@4.0.2.js');
  var _warning2 = _interopRequireDefault(_warning);
  var _invariant = $__require('npm:invariant@2.2.4.js');
  var _invariant2 = _interopRequireDefault(_invariant);
  var _matchPath = $__require('npm:react-router@4.3.1/matchPath.js');
  var _matchPath2 = _interopRequireDefault(_matchPath);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return call && (typeof call === "object" || typeof call === "function") ? call : self;
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      } });
    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var Switch = function (_React$Component) {
    _inherits(Switch, _React$Component);
    function Switch() {
      _classCallCheck(this, Switch);
      return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
    }
    Switch.prototype.componentWillMount = function componentWillMount() {
      (0, _invariant2.default)(this.context.router, "You should not use <Switch> outside a <Router>");
    };
    Switch.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
      (0, _warning2.default)(!(nextProps.location && !this.props.location), '<Switch> elements should not change from uncontrolled to controlled (or vice versa). You initially used no "location" prop and then provided one on a subsequent render.');
      (0, _warning2.default)(!(!nextProps.location && this.props.location), '<Switch> elements should not change from controlled to uncontrolled (or vice versa). You provided a "location" prop initially but omitted it on a subsequent render.');
    };
    Switch.prototype.render = function render() {
      var route = this.context.router.route;
      var children = this.props.children;
      var location = this.props.location || route.location;
      var match = void 0,
          child = void 0;
      _react2.default.Children.forEach(children, function (element) {
        if (match == null && _react2.default.isValidElement(element)) {
          var _element$props = element.props,
              pathProp = _element$props.path,
              exact = _element$props.exact,
              strict = _element$props.strict,
              sensitive = _element$props.sensitive,
              from = _element$props.from;
          var path = pathProp || from;
          child = element;
          match = (0, _matchPath2.default)(location.pathname, {
            path: path,
            exact: exact,
            strict: strict,
            sensitive: sensitive
          }, route.match);
        }
      });
      return match ? _react2.default.cloneElement(child, {
        location: location,
        computedMatch: match
      }) : null;
    };
    return Switch;
  }(_react2.default.Component);
  Switch.contextTypes = { router: _propTypes2.default.shape({ route: _propTypes2.default.object.isRequired }).isRequired };
  Switch.propTypes = {
    children: _propTypes2.default.node,
    location: _propTypes2.default.object
  };
  exports.default = Switch;
});
System.registerDynamic("npm:react-router-dom@4.3.1/Switch.js", ["npm:react-router@4.3.1/Switch.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;

  var _Switch = $__require("npm:react-router@4.3.1/Switch.js");

  var _Switch2 = _interopRequireDefault(_Switch);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  exports.default = _Switch2.default; // Written in this round about way for babel-transform-imports
});
System.registerDynamic("npm:react-router@4.3.1/generatePath.js", ["npm:path-to-regexp@1.7.0.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;

  var _pathToRegexp = $__require("npm:path-to-regexp@1.7.0.js");

  var _pathToRegexp2 = _interopRequireDefault(_pathToRegexp);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  var patternCache = {};
  var cacheLimit = 10000;
  var cacheCount = 0;

  var compileGenerator = function compileGenerator(pattern) {
    var cacheKey = pattern;
    var cache = patternCache[cacheKey] || (patternCache[cacheKey] = {});

    if (cache[pattern]) return cache[pattern];

    var compiledGenerator = _pathToRegexp2.default.compile(pattern);

    if (cacheCount < cacheLimit) {
      cache[pattern] = compiledGenerator;
      cacheCount++;
    }

    return compiledGenerator;
  };

  /**
   * Public API for generating a URL pathname from a pattern and parameters.
   */
  var generatePath = function generatePath() {
    var pattern = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "/";
    var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    if (pattern === "/") {
      return pattern;
    }
    var generator = compileGenerator(pattern);
    return generator(params, { pretty: true });
  };

  exports.default = generatePath;
});
System.registerDynamic("npm:react-router-dom@4.3.1/generatePath.js", ["npm:react-router@4.3.1/generatePath.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;

  var _generatePath = $__require("npm:react-router@4.3.1/generatePath.js");

  var _generatePath2 = _interopRequireDefault(_generatePath);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  exports.default = _generatePath2.default; // Written in this round about way for babel-transform-imports
});
System.registerDynamic("npm:react-router-dom@4.3.1/matchPath.js", ["npm:react-router@4.3.1/matchPath.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;

  var _matchPath = $__require("npm:react-router@4.3.1/matchPath.js");

  var _matchPath2 = _interopRequireDefault(_matchPath);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  exports.default = _matchPath2.default; // Written in this round about way for babel-transform-imports
});
System.registerDynamic('npm:hoist-non-react-statics@2.5.5/dist/hoist-non-react-statics.cjs.js', [], true, function ($__require, exports, module) {
    /* */
    'use strict';

    /**
     * Copyright 2015, Yahoo! Inc.
     * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
     */

    var global = this || self,
        GLOBAL = global;
    var REACT_STATICS = {
        childContextTypes: true,
        contextTypes: true,
        defaultProps: true,
        displayName: true,
        getDefaultProps: true,
        getDerivedStateFromProps: true,
        mixins: true,
        propTypes: true,
        type: true
    };

    var KNOWN_STATICS = {
        name: true,
        length: true,
        prototype: true,
        caller: true,
        callee: true,
        arguments: true,
        arity: true
    };

    var defineProperty = Object.defineProperty;
    var getOwnPropertyNames = Object.getOwnPropertyNames;
    var getOwnPropertySymbols = Object.getOwnPropertySymbols;
    var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
    var getPrototypeOf = Object.getPrototypeOf;
    var objectPrototype = getPrototypeOf && getPrototypeOf(Object);

    function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {
        if (typeof sourceComponent !== 'string') {
            // don't hoist over string (html) components

            if (objectPrototype) {
                var inheritedComponent = getPrototypeOf(sourceComponent);
                if (inheritedComponent && inheritedComponent !== objectPrototype) {
                    hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);
                }
            }

            var keys = getOwnPropertyNames(sourceComponent);

            if (getOwnPropertySymbols) {
                keys = keys.concat(getOwnPropertySymbols(sourceComponent));
            }

            for (var i = 0; i < keys.length; ++i) {
                var key = keys[i];
                if (!REACT_STATICS[key] && !KNOWN_STATICS[key] && (!blacklist || !blacklist[key])) {
                    var descriptor = getOwnPropertyDescriptor(sourceComponent, key);
                    try {
                        // Avoid failures from read-only properties
                        defineProperty(targetComponent, key, descriptor);
                    } catch (e) {}
                }
            }

            return targetComponent;
        }

        return targetComponent;
    }

    module.exports = hoistNonReactStatics;
});
System.registerDynamic("npm:hoist-non-react-statics@2.5.5.js", ["npm:hoist-non-react-statics@2.5.5/dist/hoist-non-react-statics.cjs.js"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("npm:hoist-non-react-statics@2.5.5/dist/hoist-non-react-statics.cjs.js");
});
System.registerDynamic('npm:invariant@2.2.4/browser.js', ['github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var invariant = function (condition, format, a, b, c, d, e, f) {
      if ('production' !== 'production') {
        if (format === undefined) {
          throw new Error('invariant requires an error message argument');
        }
      }
      if (!condition) {
        var error;
        if (format === undefined) {
          error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
        } else {
          var args = [a, b, c, d, e, f];
          var argIndex = 0;
          error = new Error(format.replace(/%s/g, function () {
            return args[argIndex++];
          }));
          error.name = 'Invariant Violation';
        }
        error.framesToPop = 1;
        throw error;
      }
    };
    module.exports = invariant;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic("npm:invariant@2.2.4.js", ["npm:invariant@2.2.4/browser.js"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("npm:invariant@2.2.4/browser.js");
});
System.registerDynamic('npm:isarray@0.0.1/index.js', [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  module.exports = Array.isArray || function (arr) {
    return Object.prototype.toString.call(arr) == '[object Array]';
  };
});
System.registerDynamic("npm:isarray@0.0.1.js", ["npm:isarray@0.0.1/index.js"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("npm:isarray@0.0.1/index.js");
});
System.registerDynamic('npm:path-to-regexp@1.7.0/index.js', ['npm:isarray@0.0.1.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var isarray = $__require('npm:isarray@0.0.1.js');

  /**
   * Expose `pathToRegexp`.
   */
  module.exports = pathToRegexp;
  module.exports.parse = parse;
  module.exports.compile = compile;
  module.exports.tokensToFunction = tokensToFunction;
  module.exports.tokensToRegExp = tokensToRegExp;

  /**
   * The main path matching regexp utility.
   *
   * @type {RegExp}
   */
  var PATH_REGEXP = new RegExp([
  // Match escaped characters that would otherwise appear in future matches.
  // This allows the user to escape special characters that won't transform.
  '(\\\\.)',
  // Match Express-style parameters and un-named parameters with a prefix
  // and optional suffixes. Matches appear as:
  //
  // "/:test(\\d+)?" => ["/", "test", "\d+", undefined, "?", undefined]
  // "/route(\\d+)"  => [undefined, undefined, undefined, "\d+", undefined, undefined]
  // "/*"            => ["/", undefined, undefined, undefined, undefined, "*"]
  '([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))'].join('|'), 'g');

  /**
   * Parse a string for the raw tokens.
   *
   * @param  {string}  str
   * @param  {Object=} options
   * @return {!Array}
   */
  function parse(str, options) {
    var tokens = [];
    var key = 0;
    var index = 0;
    var path = '';
    var defaultDelimiter = options && options.delimiter || '/';
    var res;

    while ((res = PATH_REGEXP.exec(str)) != null) {
      var m = res[0];
      var escaped = res[1];
      var offset = res.index;
      path += str.slice(index, offset);
      index = offset + m.length;

      // Ignore already escaped sequences.
      if (escaped) {
        path += escaped[1];
        continue;
      }

      var next = str[index];
      var prefix = res[2];
      var name = res[3];
      var capture = res[4];
      var group = res[5];
      var modifier = res[6];
      var asterisk = res[7];

      // Push the current path onto the tokens.
      if (path) {
        tokens.push(path);
        path = '';
      }

      var partial = prefix != null && next != null && next !== prefix;
      var repeat = modifier === '+' || modifier === '*';
      var optional = modifier === '?' || modifier === '*';
      var delimiter = res[2] || defaultDelimiter;
      var pattern = capture || group;

      tokens.push({
        name: name || key++,
        prefix: prefix || '',
        delimiter: delimiter,
        optional: optional,
        repeat: repeat,
        partial: partial,
        asterisk: !!asterisk,
        pattern: pattern ? escapeGroup(pattern) : asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?'
      });
    }

    // Match any characters still remaining.
    if (index < str.length) {
      path += str.substr(index);
    }

    // If the path exists, push it onto the end.
    if (path) {
      tokens.push(path);
    }

    return tokens;
  }

  /**
   * Compile a string to a template function for the path.
   *
   * @param  {string}             str
   * @param  {Object=}            options
   * @return {!function(Object=, Object=)}
   */
  function compile(str, options) {
    return tokensToFunction(parse(str, options));
  }

  /**
   * Prettier encoding of URI path segments.
   *
   * @param  {string}
   * @return {string}
   */
  function encodeURIComponentPretty(str) {
    return encodeURI(str).replace(/[\/?#]/g, function (c) {
      return '%' + c.charCodeAt(0).toString(16).toUpperCase();
    });
  }

  /**
   * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.
   *
   * @param  {string}
   * @return {string}
   */
  function encodeAsterisk(str) {
    return encodeURI(str).replace(/[?#]/g, function (c) {
      return '%' + c.charCodeAt(0).toString(16).toUpperCase();
    });
  }

  /**
   * Expose a method for transforming tokens into the path function.
   */
  function tokensToFunction(tokens) {
    // Compile all the tokens into regexps.
    var matches = new Array(tokens.length);

    // Compile all the patterns before compilation.
    for (var i = 0; i < tokens.length; i++) {
      if (typeof tokens[i] === 'object') {
        matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$');
      }
    }

    return function (obj, opts) {
      var path = '';
      var data = obj || {};
      var options = opts || {};
      var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent;

      for (var i = 0; i < tokens.length; i++) {
        var token = tokens[i];

        if (typeof token === 'string') {
          path += token;

          continue;
        }

        var value = data[token.name];
        var segment;

        if (value == null) {
          if (token.optional) {
            // Prepend partial segment prefixes.
            if (token.partial) {
              path += token.prefix;
            }

            continue;
          } else {
            throw new TypeError('Expected "' + token.name + '" to be defined');
          }
        }

        if (isarray(value)) {
          if (!token.repeat) {
            throw new TypeError('Expected "' + token.name + '" to not repeat, but received `' + JSON.stringify(value) + '`');
          }

          if (value.length === 0) {
            if (token.optional) {
              continue;
            } else {
              throw new TypeError('Expected "' + token.name + '" to not be empty');
            }
          }

          for (var j = 0; j < value.length; j++) {
            segment = encode(value[j]);

            if (!matches[i].test(segment)) {
              throw new TypeError('Expected all "' + token.name + '" to match "' + token.pattern + '", but received `' + JSON.stringify(segment) + '`');
            }

            path += (j === 0 ? token.prefix : token.delimiter) + segment;
          }

          continue;
        }

        segment = token.asterisk ? encodeAsterisk(value) : encode(value);

        if (!matches[i].test(segment)) {
          throw new TypeError('Expected "' + token.name + '" to match "' + token.pattern + '", but received "' + segment + '"');
        }

        path += token.prefix + segment;
      }

      return path;
    };
  }

  /**
   * Escape a regular expression string.
   *
   * @param  {string} str
   * @return {string}
   */
  function escapeString(str) {
    return str.replace(/([.+*?=^!:${}()[\]|\/\\])/g, '\\$1');
  }

  /**
   * Escape the capturing group by escaping special characters and meaning.
   *
   * @param  {string} group
   * @return {string}
   */
  function escapeGroup(group) {
    return group.replace(/([=!:$\/()])/g, '\\$1');
  }

  /**
   * Attach the keys as a property of the regexp.
   *
   * @param  {!RegExp} re
   * @param  {Array}   keys
   * @return {!RegExp}
   */
  function attachKeys(re, keys) {
    re.keys = keys;
    return re;
  }

  /**
   * Get the flags for a regexp from the options.
   *
   * @param  {Object} options
   * @return {string}
   */
  function flags(options) {
    return options.sensitive ? '' : 'i';
  }

  /**
   * Pull out keys from a regexp.
   *
   * @param  {!RegExp} path
   * @param  {!Array}  keys
   * @return {!RegExp}
   */
  function regexpToRegexp(path, keys) {
    // Use a negative lookahead to match only capturing groups.
    var groups = path.source.match(/\((?!\?)/g);

    if (groups) {
      for (var i = 0; i < groups.length; i++) {
        keys.push({
          name: i,
          prefix: null,
          delimiter: null,
          optional: false,
          repeat: false,
          partial: false,
          asterisk: false,
          pattern: null
        });
      }
    }

    return attachKeys(path, keys);
  }

  /**
   * Transform an array into a regexp.
   *
   * @param  {!Array}  path
   * @param  {Array}   keys
   * @param  {!Object} options
   * @return {!RegExp}
   */
  function arrayToRegexp(path, keys, options) {
    var parts = [];

    for (var i = 0; i < path.length; i++) {
      parts.push(pathToRegexp(path[i], keys, options).source);
    }

    var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options));

    return attachKeys(regexp, keys);
  }

  /**
   * Create a path regexp from string input.
   *
   * @param  {string}  path
   * @param  {!Array}  keys
   * @param  {!Object} options
   * @return {!RegExp}
   */
  function stringToRegexp(path, keys, options) {
    return tokensToRegExp(parse(path, options), keys, options);
  }

  /**
   * Expose a function for taking tokens and returning a RegExp.
   *
   * @param  {!Array}          tokens
   * @param  {(Array|Object)=} keys
   * @param  {Object=}         options
   * @return {!RegExp}
   */
  function tokensToRegExp(tokens, keys, options) {
    if (!isarray(keys)) {
      options = /** @type {!Object} */keys || options;
      keys = [];
    }

    options = options || {};

    var strict = options.strict;
    var end = options.end !== false;
    var route = '';

    // Iterate over the tokens and create our regexp string.
    for (var i = 0; i < tokens.length; i++) {
      var token = tokens[i];

      if (typeof token === 'string') {
        route += escapeString(token);
      } else {
        var prefix = escapeString(token.prefix);
        var capture = '(?:' + token.pattern + ')';

        keys.push(token);

        if (token.repeat) {
          capture += '(?:' + prefix + capture + ')*';
        }

        if (token.optional) {
          if (!token.partial) {
            capture = '(?:' + prefix + '(' + capture + '))?';
          } else {
            capture = prefix + '(' + capture + ')?';
          }
        } else {
          capture = prefix + '(' + capture + ')';
        }

        route += capture;
      }
    }

    var delimiter = escapeString(options.delimiter || '/');
    var endsWithDelimiter = route.slice(-delimiter.length) === delimiter;

    // In non-strict mode we allow a slash at the end of match. If the path to
    // match already ends with a slash, we remove it for consistency. The slash
    // is valid at the end of a path match, not in the middle. This is important
    // in non-ending mode, where "/test/" shouldn't match "/test//route".
    if (!strict) {
      route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?';
    }

    if (end) {
      route += '$';
    } else {
      // In non-ending mode, we need the capturing groups to match as much as
      // possible by using a positive lookahead to the end or next path segment.
      route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)';
    }

    return attachKeys(new RegExp('^' + route, flags(options)), keys);
  }

  /**
   * Normalize the given path string, returning a regular expression.
   *
   * An empty array can be passed in for the keys, which will hold the
   * placeholder key descriptions. For example, using `/user/:id`, `keys` will
   * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.
   *
   * @param  {(string|RegExp|Array)} path
   * @param  {(Array|Object)=}       keys
   * @param  {Object=}               options
   * @return {!RegExp}
   */
  function pathToRegexp(path, keys, options) {
    if (!isarray(keys)) {
      options = /** @type {!Object} */keys || options;
      keys = [];
    }

    options = options || {};

    if (path instanceof RegExp) {
      return regexpToRegexp(path, /** @type {!Array} */keys);
    }

    if (isarray(path)) {
      return arrayToRegexp( /** @type {!Array} */path, /** @type {!Array} */keys, options);
    }

    return stringToRegexp( /** @type {string} */path, /** @type {!Array} */keys, options);
  }
});
System.registerDynamic("npm:path-to-regexp@1.7.0.js", ["npm:path-to-regexp@1.7.0/index.js"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("npm:path-to-regexp@1.7.0/index.js");
});
System.registerDynamic("npm:react-router@4.3.1/matchPath.js", ["npm:path-to-regexp@1.7.0.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;

  var _pathToRegexp = $__require("npm:path-to-regexp@1.7.0.js");

  var _pathToRegexp2 = _interopRequireDefault(_pathToRegexp);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  var patternCache = {};
  var cacheLimit = 10000;
  var cacheCount = 0;

  var compilePath = function compilePath(pattern, options) {
    var cacheKey = "" + options.end + options.strict + options.sensitive;
    var cache = patternCache[cacheKey] || (patternCache[cacheKey] = {});

    if (cache[pattern]) return cache[pattern];

    var keys = [];
    var re = (0, _pathToRegexp2.default)(pattern, keys, options);
    var compiledPattern = { re: re, keys: keys };

    if (cacheCount < cacheLimit) {
      cache[pattern] = compiledPattern;
      cacheCount++;
    }

    return compiledPattern;
  };

  /**
   * Public API for matching a URL pathname to a path pattern.
   */
  var matchPath = function matchPath(pathname) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var parent = arguments[2];

    if (typeof options === "string") options = { path: options };

    var _options = options,
        path = _options.path,
        _options$exact = _options.exact,
        exact = _options$exact === undefined ? false : _options$exact,
        _options$strict = _options.strict,
        strict = _options$strict === undefined ? false : _options$strict,
        _options$sensitive = _options.sensitive,
        sensitive = _options$sensitive === undefined ? false : _options$sensitive;

    if (path == null) return parent;

    var _compilePath = compilePath(path, { end: exact, strict: strict, sensitive: sensitive }),
        re = _compilePath.re,
        keys = _compilePath.keys;

    var match = re.exec(pathname);

    if (!match) return null;

    var url = match[0],
        values = match.slice(1);

    var isExact = pathname === url;

    if (exact && !isExact) return null;

    return {
      path: path, // the path pattern used to match
      url: path === "/" && url === "" ? "/" : url, // the matched portion of the URL
      isExact: isExact, // whether or not we matched exactly
      params: keys.reduce(function (memo, key, index) {
        memo[key.name] = values[index];
        return memo;
      }, {})
    };
  };

  exports.default = matchPath;
});
System.registerDynamic('npm:react-router@4.3.1/Route.js', ['npm:warning@4.0.2.js', 'npm:invariant@2.2.4.js', 'npm:react@16.7.0.js', 'npm:prop-types@15.6.2.js', 'npm:react-router@4.3.1/matchPath.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  var _warning = $__require('npm:warning@4.0.2.js');
  var _warning2 = _interopRequireDefault(_warning);
  var _invariant = $__require('npm:invariant@2.2.4.js');
  var _invariant2 = _interopRequireDefault(_invariant);
  var _react = $__require('npm:react@16.7.0.js');
  var _react2 = _interopRequireDefault(_react);
  var _propTypes = $__require('npm:prop-types@15.6.2.js');
  var _propTypes2 = _interopRequireDefault(_propTypes);
  var _matchPath = $__require('npm:react-router@4.3.1/matchPath.js');
  var _matchPath2 = _interopRequireDefault(_matchPath);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return call && (typeof call === "object" || typeof call === "function") ? call : self;
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      } });
    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var isEmptyChildren = function isEmptyChildren(children) {
    return _react2.default.Children.count(children) === 0;
  };
  var Route = function (_React$Component) {
    _inherits(Route, _React$Component);
    function Route() {
      var _temp, _this, _ret;
      _classCallCheck(this, Route);
      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = { match: _this.computeMatch(_this.props, _this.context.router) }, _temp), _possibleConstructorReturn(_this, _ret);
    }
    Route.prototype.getChildContext = function getChildContext() {
      return { router: _extends({}, this.context.router, { route: {
            location: this.props.location || this.context.router.route.location,
            match: this.state.match
          } }) };
    };
    Route.prototype.computeMatch = function computeMatch(_ref, router) {
      var computedMatch = _ref.computedMatch,
          location = _ref.location,
          path = _ref.path,
          strict = _ref.strict,
          exact = _ref.exact,
          sensitive = _ref.sensitive;
      if (computedMatch) return computedMatch;
      (0, _invariant2.default)(router, "You should not use <Route> or withRouter() outside a <Router>");
      var route = router.route;
      var pathname = (location || route.location).pathname;
      return (0, _matchPath2.default)(pathname, {
        path: path,
        strict: strict,
        exact: exact,
        sensitive: sensitive
      }, route.match);
    };
    Route.prototype.componentWillMount = function componentWillMount() {
      (0, _warning2.default)(!(this.props.component && this.props.render), "You should not use <Route component> and <Route render> in the same route; <Route render> will be ignored");
      (0, _warning2.default)(!(this.props.component && this.props.children && !isEmptyChildren(this.props.children)), "You should not use <Route component> and <Route children> in the same route; <Route children> will be ignored");
      (0, _warning2.default)(!(this.props.render && this.props.children && !isEmptyChildren(this.props.children)), "You should not use <Route render> and <Route children> in the same route; <Route children> will be ignored");
    };
    Route.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps, nextContext) {
      (0, _warning2.default)(!(nextProps.location && !this.props.location), '<Route> elements should not change from uncontrolled to controlled (or vice versa). You initially used no "location" prop and then provided one on a subsequent render.');
      (0, _warning2.default)(!(!nextProps.location && this.props.location), '<Route> elements should not change from controlled to uncontrolled (or vice versa). You provided a "location" prop initially but omitted it on a subsequent render.');
      this.setState({ match: this.computeMatch(nextProps, nextContext.router) });
    };
    Route.prototype.render = function render() {
      var match = this.state.match;
      var _props = this.props,
          children = _props.children,
          component = _props.component,
          render = _props.render;
      var _context$router = this.context.router,
          history = _context$router.history,
          route = _context$router.route,
          staticContext = _context$router.staticContext;
      var location = this.props.location || route.location;
      var props = {
        match: match,
        location: location,
        history: history,
        staticContext: staticContext
      };
      if (component) return match ? _react2.default.createElement(component, props) : null;
      if (render) return match ? render(props) : null;
      if (typeof children === "function") return children(props);
      if (children && !isEmptyChildren(children)) return _react2.default.Children.only(children);
      return null;
    };
    return Route;
  }(_react2.default.Component);
  Route.propTypes = {
    computedMatch: _propTypes2.default.object,
    path: _propTypes2.default.string,
    exact: _propTypes2.default.bool,
    strict: _propTypes2.default.bool,
    sensitive: _propTypes2.default.bool,
    component: _propTypes2.default.func,
    render: _propTypes2.default.func,
    children: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.node]),
    location: _propTypes2.default.object
  };
  Route.contextTypes = { router: _propTypes2.default.shape({
      history: _propTypes2.default.object.isRequired,
      route: _propTypes2.default.object.isRequired,
      staticContext: _propTypes2.default.object
    }) };
  Route.childContextTypes = { router: _propTypes2.default.object.isRequired };
  exports.default = Route;
});
System.registerDynamic('npm:react-router@4.3.1/withRouter.js', ['npm:react@16.7.0.js', 'npm:prop-types@15.6.2.js', 'npm:hoist-non-react-statics@2.5.5.js', 'npm:react-router@4.3.1/Route.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  var _react = $__require('npm:react@16.7.0.js');
  var _react2 = _interopRequireDefault(_react);
  var _propTypes = $__require('npm:prop-types@15.6.2.js');
  var _propTypes2 = _interopRequireDefault(_propTypes);
  var _hoistNonReactStatics = $__require('npm:hoist-non-react-statics@2.5.5.js');
  var _hoistNonReactStatics2 = _interopRequireDefault(_hoistNonReactStatics);
  var _Route = $__require('npm:react-router@4.3.1/Route.js');
  var _Route2 = _interopRequireDefault(_Route);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  function _objectWithoutProperties(obj, keys) {
    var target = {};
    for (var i in obj) {
      if (keys.indexOf(i) >= 0) continue;
      if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
      target[i] = obj[i];
    }
    return target;
  }
  var withRouter = function withRouter(Component) {
    var C = function C(props) {
      var wrappedComponentRef = props.wrappedComponentRef,
          remainingProps = _objectWithoutProperties(props, ["wrappedComponentRef"]);
      return _react2.default.createElement(_Route2.default, { children: function children(routeComponentProps) {
          return _react2.default.createElement(Component, _extends({}, remainingProps, routeComponentProps, { ref: wrappedComponentRef }));
        } });
    };
    C.displayName = "withRouter(" + (Component.displayName || Component.name) + ")";
    C.WrappedComponent = Component;
    C.propTypes = { wrappedComponentRef: _propTypes2.default.func };
    return (0, _hoistNonReactStatics2.default)(C, Component);
  };
  exports.default = withRouter;
});
System.registerDynamic("npm:react-router-dom@4.3.1/withRouter.js", ["npm:react-router@4.3.1/withRouter.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;

  var _withRouter = $__require("npm:react-router@4.3.1/withRouter.js");

  var _withRouter2 = _interopRequireDefault(_withRouter);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  exports.default = _withRouter2.default; // Written in this round about way for babel-transform-imports
});
System.registerDynamic('npm:react-router-dom@4.3.1/index.js', ['npm:react-router-dom@4.3.1/BrowserRouter.js', 'npm:react-router-dom@4.3.1/HashRouter.js', 'npm:react-router-dom@4.3.1/Link.js', 'npm:react-router-dom@4.3.1/MemoryRouter.js', 'npm:react-router-dom@4.3.1/NavLink.js', 'npm:react-router-dom@4.3.1/Prompt.js', 'npm:react-router-dom@4.3.1/Redirect.js', 'npm:react-router-dom@4.3.1/Route.js', 'npm:react-router-dom@4.3.1/Router.js', 'npm:react-router-dom@4.3.1/StaticRouter.js', 'npm:react-router-dom@4.3.1/Switch.js', 'npm:react-router-dom@4.3.1/generatePath.js', 'npm:react-router-dom@4.3.1/matchPath.js', 'npm:react-router-dom@4.3.1/withRouter.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  exports.withRouter = exports.matchPath = exports.generatePath = exports.Switch = exports.StaticRouter = exports.Router = exports.Route = exports.Redirect = exports.Prompt = exports.NavLink = exports.MemoryRouter = exports.Link = exports.HashRouter = exports.BrowserRouter = undefined;
  var _BrowserRouter2 = $__require('npm:react-router-dom@4.3.1/BrowserRouter.js');
  var _BrowserRouter3 = _interopRequireDefault(_BrowserRouter2);
  var _HashRouter2 = $__require('npm:react-router-dom@4.3.1/HashRouter.js');
  var _HashRouter3 = _interopRequireDefault(_HashRouter2);
  var _Link2 = $__require('npm:react-router-dom@4.3.1/Link.js');
  var _Link3 = _interopRequireDefault(_Link2);
  var _MemoryRouter2 = $__require('npm:react-router-dom@4.3.1/MemoryRouter.js');
  var _MemoryRouter3 = _interopRequireDefault(_MemoryRouter2);
  var _NavLink2 = $__require('npm:react-router-dom@4.3.1/NavLink.js');
  var _NavLink3 = _interopRequireDefault(_NavLink2);
  var _Prompt2 = $__require('npm:react-router-dom@4.3.1/Prompt.js');
  var _Prompt3 = _interopRequireDefault(_Prompt2);
  var _Redirect2 = $__require('npm:react-router-dom@4.3.1/Redirect.js');
  var _Redirect3 = _interopRequireDefault(_Redirect2);
  var _Route2 = $__require('npm:react-router-dom@4.3.1/Route.js');
  var _Route3 = _interopRequireDefault(_Route2);
  var _Router2 = $__require('npm:react-router-dom@4.3.1/Router.js');
  var _Router3 = _interopRequireDefault(_Router2);
  var _StaticRouter2 = $__require('npm:react-router-dom@4.3.1/StaticRouter.js');
  var _StaticRouter3 = _interopRequireDefault(_StaticRouter2);
  var _Switch2 = $__require('npm:react-router-dom@4.3.1/Switch.js');
  var _Switch3 = _interopRequireDefault(_Switch2);
  var _generatePath2 = $__require('npm:react-router-dom@4.3.1/generatePath.js');
  var _generatePath3 = _interopRequireDefault(_generatePath2);
  var _matchPath2 = $__require('npm:react-router-dom@4.3.1/matchPath.js');
  var _matchPath3 = _interopRequireDefault(_matchPath2);
  var _withRouter2 = $__require('npm:react-router-dom@4.3.1/withRouter.js');
  var _withRouter3 = _interopRequireDefault(_withRouter2);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  exports.BrowserRouter = _BrowserRouter3.default;
  exports.HashRouter = _HashRouter3.default;
  exports.Link = _Link3.default;
  exports.MemoryRouter = _MemoryRouter3.default;
  exports.NavLink = _NavLink3.default;
  exports.Prompt = _Prompt3.default;
  exports.Redirect = _Redirect3.default;
  exports.Route = _Route3.default;
  exports.Router = _Router3.default;
  exports.StaticRouter = _StaticRouter3.default;
  exports.Switch = _Switch3.default;
  exports.generatePath = _generatePath3.default;
  exports.matchPath = _matchPath3.default;
  exports.withRouter = _withRouter3.default;
});
System.registerDynamic("npm:react-router-dom@4.3.1.js", ["npm:react-router-dom@4.3.1/index.js"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("npm:react-router-dom@4.3.1/index.js");
});
System.registerDynamic("app/components/User.js", ["npm:react@16.7.0.js", "npm:react-router-dom@4.3.1.js", "app/utils/MiscUtils.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const ReactRouter = $__require("npm:react-router-dom@4.3.1.js");
    const MiscUtils = $__require("app/utils/MiscUtils.js");
    const css = {
        card: {
            display: 'table-row',
            width: '100%',
            padding: 0,
            boxShadow: 'none'
        },
        select: {
            margin: '2px 0 0 0',
            paddingTop: '1px',
            minHeight: '18px'
        },
        name: {
            verticalAlign: 'top',
            display: 'table-cell',
            padding: '8px'
        },
        type: {
            verticalAlign: 'top',
            display: 'table-cell',
            padding: '9px'
        },
        lastActivity: {
            verticalAlign: 'top',
            display: 'table-cell',
            padding: '9px',
            whiteSpace: 'nowrap'
        },
        roles: {
            verticalAlign: 'top',
            display: 'table-cell',
            padding: '0 8px 8px 8px'
        },
        tag: {
            margin: '8px 5px 0 5px',
            height: '20px'
        },
        nameLink: {
            margin: '0 5px 0 0'
        }
    };
    class User extends React.Component {
        render() {
            let user = this.props.user;
            let roles = [];
            for (let role of user.roles || []) {
                roles.push(React.createElement("div", { className: "bp3-tag bp3-intent-primary", style: css.tag, key: role }, role));
            }
            let cardStyle = Object.assign({}, css.card);
            if (user.disabled) {
                cardStyle.opacity = 0.6;
            }
            let userType;
            switch (user.type) {
                case 'local':
                    userType = 'Local';
                    break;
                case 'google':
                    userType = 'Google';
                    break;
                case 'onelogin':
                    userType = 'OneLogin';
                    break;
                case 'okta':
                    userType = 'Okta';
                    break;
                case 'authzero':
                    userType = 'Auth0';
                    break;
                case 'azure':
                    userType = 'Azure';
                    break;
                case 'api':
                    userType = 'API';
                    break;
                default:
                    userType = user.type;
            }
            return React.createElement("div", { className: "bp3-card bp3-row", style: cardStyle }, React.createElement("div", { className: "bp3-cell", style: css.name }, React.createElement("div", { className: "layout horizontal" }, React.createElement("label", { className: "bp3-control bp3-checkbox", style: css.select }, React.createElement("input", { type: "checkbox", checked: this.props.selected, onClick: evt => {
                    this.props.onSelect(evt.shiftKey);
                } }), React.createElement("span", { className: "bp3-control-indicator" })), React.createElement(ReactRouter.Link, { to: '/user/' + user.id, style: css.nameLink }, user.username))), React.createElement("div", { className: "bp3-cell", style: css.type }, userType), React.createElement("div", { className: "bp3-cell", style: css.lastActivity }, MiscUtils.formatDateShortTime(user.last_active) || 'Inactive'), React.createElement("div", { className: "flex bp3-cell", style: css.roles }, React.createElement("span", { className: "bp3-tag bp3-intent-danger", style: css.tag, hidden: !user.administrator }, "admin"), roles));
        }
    }
    exports.default = User;
    
});
System.registerDynamic("app/components/UsersFilter.js", ["npm:react@16.7.0.js", "app/components/SearchInput.js", "app/components/SwitchNull.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const SearchInput_1 = $__require("app/components/SearchInput.js");
    const SwitchNull_1 = $__require("app/components/SwitchNull.js");
    const css = {
        filters: {
            margin: '-15px 0 5px 0'
        },
        input: {
            width: '200px',
            margin: '5px'
        },
        role: {
            width: '150px',
            margin: '5px'
        },
        type: {
            margin: '5px'
        },
        check: {
            margin: '12px 5px 8px 5px'
        }
    };
    class UsersFilter extends React.Component {
        constructor(props, context) {
            super(props, context);
            this.state = {
                menu: false
            };
        }
        render() {
            if (this.props.filter === null) {
                return React.createElement("div", null);
            }
            return React.createElement("div", { className: "layout horizontal wrap", style: css.filters }, React.createElement(SearchInput_1.default, { style: css.input, placeholder: "User ID", value: this.props.filter.id, onChange: val => {
                    let filter = Object.assign({}, this.props.filter);
                    if (val) {
                        filter.id = val;
                    } else {
                        delete filter.id;
                    }
                    this.props.onFilter(filter);
                } }), React.createElement(SearchInput_1.default, { style: css.input, placeholder: "Username", value: this.props.filter.username, onChange: val => {
                    let filter = Object.assign({}, this.props.filter);
                    if (val) {
                        filter.username = val;
                    } else {
                        delete filter.username;
                    }
                    this.props.onFilter(filter);
                } }), React.createElement(SearchInput_1.default, { style: css.role, placeholder: "Role", value: this.props.filter.role, onChange: val => {
                    let filter = Object.assign({}, this.props.filter);
                    if (val) {
                        filter.role = val;
                    } else {
                        delete filter.role;
                    }
                    this.props.onFilter(filter);
                } }), React.createElement("div", { className: "bp3-select", style: css.type }, React.createElement("select", { value: this.props.filter.type || 'any', onChange: evt => {
                    let filter = Object.assign({}, this.props.filter);
                    let val = evt.target.value;
                    if (val === 'any') {
                        delete filter.type;
                    } else {
                        filter.type = val;
                    }
                    this.props.onFilter(filter);
                } }, React.createElement("option", { value: "any" }, "Any"), React.createElement("option", { value: "local" }, "Local"), React.createElement("option", { value: "azure" }, "Azure"), React.createElement("option", { value: "google" }, "Google"), React.createElement("option", { value: "onelogin" }, "OneLogin"), React.createElement("option", { value: "okta" }, "Okta"), React.createElement("option", { value: "api" }, "API"))), React.createElement(SwitchNull_1.default, { style: css.check, label: "Administrator", checked: this.props.filter.administrator, onToggle: () => {
                    let filter = Object.assign({}, this.props.filter);
                    if (filter.administrator === undefined) {
                        filter.administrator = true;
                    } else if (filter.administrator === true) {
                        filter.administrator = false;
                    } else {
                        delete filter.administrator;
                    }
                    this.props.onFilter(filter);
                } }), React.createElement(SwitchNull_1.default, { style: css.check, label: "Disabled", checked: this.props.filter.disabled, onToggle: () => {
                    let filter = Object.assign({}, this.props.filter);
                    if (filter.disabled === undefined) {
                        filter.disabled = true;
                    } else if (filter.disabled === true) {
                        filter.disabled = false;
                    } else {
                        delete filter.disabled;
                    }
                    this.props.onFilter(filter);
                } }));
        }
    }
    exports.default = UsersFilter;
    
});
System.registerDynamic("app/components/UsersPage.js", ["npm:react@16.7.0.js", "app/stores/UsersStore.js", "app/actions/UserActions.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const UsersStore_1 = $__require("app/stores/UsersStore.js");
    const UserActions = $__require("app/actions/UserActions.js");
    const css = {
        button: {
            userSelect: 'none',
            margin: '0 5px 0 0'
        },
        buttonLast: {
            userSelect: 'none',
            margin: '0 0 0 0'
        },
        link: {
            cursor: 'pointer',
            userSelect: 'none',
            margin: '7px 5px 0 0'
        },
        current: {
            opacity: 0.5
        }
    };
    class UsersPage extends React.Component {
        constructor(props, context) {
            super(props, context);
            this.onChange = () => {
                this.setState(Object.assign({}, this.state, { page: UsersStore_1.default.page, pageCount: UsersStore_1.default.pageCount, pages: UsersStore_1.default.pages, count: UsersStore_1.default.count }));
            };
            this.state = {
                page: UsersStore_1.default.page,
                pageCount: UsersStore_1.default.pageCount,
                pages: UsersStore_1.default.pages,
                count: UsersStore_1.default.count
            };
        }
        componentDidMount() {
            UsersStore_1.default.addChangeListener(this.onChange);
        }
        componentWillUnmount() {
            UsersStore_1.default.removeChangeListener(this.onChange);
        }
        render() {
            let page = this.state.page;
            let pages = this.state.pages;
            if (pages <= 1) {
                return React.createElement("div", null);
            }
            let links = [];
            let start = Math.max(0, page - 7);
            let end = Math.min(pages, start + 15);
            for (let i = start; i < end; i++) {
                links.push(React.createElement("span", { key: i, style: page === i ? Object.assign({}, css.link, css.current) : css.link, onClick: () => {
                        UserActions.traverse(i);
                        if (this.props.onPage) {
                            this.props.onPage();
                        }
                    } }, i + 1));
            }
            return React.createElement("div", { className: "layout horizontal center-justified" }, React.createElement("button", { className: "bp3-button bp3-minimal bp3-icon-chevron-backward", hidden: pages < 5, disabled: page === 0, type: "button", onClick: () => {
                    UserActions.traverse(0);
                    if (this.props.onPage) {
                        this.props.onPage();
                    }
                } }), React.createElement("button", { className: "bp3-button bp3-minimal bp3-icon-chevron-left", style: css.button, disabled: page === 0, type: "button", onClick: () => {
                    UserActions.traverse(Math.max(0, this.state.page - 1));
                    if (this.props.onPage) {
                        this.props.onPage();
                    }
                } }), links, React.createElement("button", { className: "bp3-button bp3-minimal bp3-icon-chevron-right", style: css.button, disabled: page === pages - 1, type: "button", onClick: () => {
                    UserActions.traverse(Math.min(this.state.pages - 1, this.state.page + 1));
                    if (this.props.onPage) {
                        this.props.onPage();
                    }
                } }), React.createElement("button", { className: "bp3-button bp3-minimal bp3-icon-chevron-forward", hidden: pages < 5, disabled: page === pages - 1, type: "button", onClick: () => {
                    UserActions.traverse(this.state.pages - 1);
                    if (this.props.onPage) {
                        this.props.onPage();
                    }
                } }));
        }
    }
    exports.default = UsersPage;
    
});
System.registerDynamic("app/components/Users.js", ["npm:react@16.7.0.js", "npm:react-router-dom@4.3.1.js", "app/stores/UsersStore.js", "app/actions/UserActions.js", "app/actions/AuditActions.js", "app/components/User.js", "app/components/UsersFilter.js", "app/components/Page.js", "app/components/PageHeader.js", "app/components/UsersPage.js", "app/components/ConfirmButton.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const ReactRouter = $__require("npm:react-router-dom@4.3.1.js");
    const UsersStore_1 = $__require("app/stores/UsersStore.js");
    const UserActions = $__require("app/actions/UserActions.js");
    const AuditActions = $__require("app/actions/AuditActions.js");
    const User_1 = $__require("app/components/User.js");
    const UsersFilter_1 = $__require("app/components/UsersFilter.js");
    const Page_1 = $__require("app/components/Page.js");
    const PageHeader_1 = $__require("app/components/PageHeader.js");
    const UsersPage_1 = $__require("app/components/UsersPage.js");
    const ConfirmButton_1 = $__require("app/components/ConfirmButton.js");
    const css = {
        users: {
            width: '100%',
            marginTop: '-5px',
            display: 'table',
            borderSpacing: '0 5px'
        },
        usersBox: {
            width: '100%',
            overflowY: 'auto'
        },
        header: {
            marginTop: '-19px'
        },
        heading: {
            margin: '19px 0 0 0'
        },
        button: {
            margin: '8px 0 0 8px'
        },
        buttons: {
            marginTop: '8px'
        }
    };
    class Users extends React.Component {
        constructor(props, context) {
            super(props, context);
            this.onChange = () => {
                let users = UsersStore_1.default.users;
                let selected = {};
                let curSelected = this.state.selected;
                users.forEach(user => {
                    if (curSelected[user.id]) {
                        selected[user.id] = true;
                    }
                });
                this.setState(Object.assign({}, this.state, { users: users, filter: UsersStore_1.default.filter, selected: selected }));
            };
            this.onDelete = () => {
                this.setState(Object.assign({}, this.state, { disabled: true }));
                UserActions.remove(Object.keys(this.state.selected)).then(() => {
                    this.setState(Object.assign({}, this.state, { selected: {}, disabled: false }));
                }).catch(() => {
                    this.setState(Object.assign({}, this.state, { disabled: false }));
                });
            };
            this.state = {
                users: UsersStore_1.default.users,
                filter: UsersStore_1.default.filter,
                selected: {},
                lastSelected: null,
                disabled: false
            };
        }
        get selected() {
            for (let key in this.state.selected) {
                if (this.state.selected[key]) {
                    return true;
                }
            }
            return false;
        }
        componentDidMount() {
            UsersStore_1.default.addChangeListener(this.onChange);
            AuditActions.traverse(0);
            UserActions.sync();
        }
        componentWillUnmount() {
            UsersStore_1.default.removeChangeListener(this.onChange);
        }
        render() {
            let usersDom = [];
            this.state.users.forEach(user => {
                usersDom.push(React.createElement(User_1.default, { key: user.id, user: user, selected: !!this.state.selected[user.id], onSelect: shift => {
                        let selected = Object.assign({}, this.state.selected);
                        if (shift) {
                            let users = this.state.users;
                            let start;
                            let end;
                            for (let i = 0; i < users.length; i++) {
                                let usr = users[i];
                                if (usr.id === user.id) {
                                    start = i;
                                } else if (usr.id === this.state.lastSelected) {
                                    end = i;
                                }
                            }
                            if (start !== undefined && end !== undefined) {
                                if (start > end) {
                                    end = [start, start = end][0];
                                }
                                for (let i = start; i <= end; i++) {
                                    selected[users[i].id] = true;
                                }
                                this.setState(Object.assign({}, this.state, { lastSelected: user.id, selected: selected }));
                                return;
                            }
                        }
                        if (selected[user.id]) {
                            delete selected[user.id];
                        } else {
                            selected[user.id] = true;
                        }
                        this.setState(Object.assign({}, this.state, { lastSelected: user.id, selected: selected }));
                    } }));
            });
            let filterClass = 'bp3-button bp3-intent-primary bp3-icon-filter ';
            if (this.state.filter) {
                filterClass += 'bp3-active';
            }
            return React.createElement(Page_1.default, null, React.createElement(PageHeader_1.default, null, React.createElement("div", { className: "layout horizontal wrap", style: css.header }, React.createElement("h2", { style: css.heading }, "Users"), React.createElement("div", { className: "flex" }), React.createElement("div", { style: css.buttons }, React.createElement("button", { className: filterClass, style: css.button, type: "button", onClick: () => {
                    if (this.state.filter === null) {
                        UserActions.filter({});
                    } else {
                        UserActions.filter(null);
                    }
                } }, "Filters"), React.createElement(ConfirmButton_1.default, { label: "Delete Selected", className: "bp3-intent-danger bp3-icon-delete", progressClassName: "bp3-intent-danger", style: css.button, disabled: !this.selected || this.state.disabled, onConfirm: this.onDelete }), React.createElement(ReactRouter.Link, { className: "bp3-button bp3-intent-success bp3-icon-add", style: css.button, to: "/user" }, "New")))), React.createElement(UsersFilter_1.default, { filter: this.state.filter, onFilter: filter => {
                    UserActions.filter(filter);
                } }), React.createElement("div", { style: css.usersBox }, React.createElement("div", { style: css.users }, usersDom)), React.createElement(UsersPage_1.default, { onPage: () => {
                    this.setState({
                        lastSelected: null
                    });
                } }));
        }
    }
    exports.default = Users;
    
});
System.registerDynamic("app/components/Session.js", ["npm:react@16.7.0.js", "app/utils/MiscUtils.js", "app/utils/AgentUtils.js", "app/Constants.js", "app/actions/SessionActions.js", "app/components/PageInfo.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const MiscUtils = $__require("app/utils/MiscUtils.js");
    const AgentUtils = $__require("app/utils/AgentUtils.js");
    const Constants = $__require("app/Constants.js");
    const SessionActions = $__require("app/actions/SessionActions.js");
    const PageInfo_1 = $__require("app/components/PageInfo.js");
    const css = {
        card: {
            position: 'relative',
            padding: '10px',
            marginBottom: '5px'
        },
        info: {
            marginBottom: '-5px'
        },
        group: {
            flex: 1,
            minWidth: '290px'
        },
        remove: {
            position: 'absolute',
            top: '5px',
            right: '5px'
        }
    };
    class Session extends React.Component {
        constructor(props, context) {
            super(props, context);
            this.onDelete = () => {
                this.setState(Object.assign({}, this.state, { disabled: true }));
                SessionActions.remove(this.props.session.id).then(() => {
                    this.setState(Object.assign({}, this.state, { disabled: false }));
                }).catch(() => {
                    this.setState(Object.assign({}, this.state, { disabled: false }));
                });
            };
            this.state = {
                disabled: false
            };
        }
        render() {
            let session = this.props.session;
            let agent = session.agent || {};
            let cardStyle = Object.assign({}, css.card);
            if (session.removed) {
                cardStyle.opacity = 0.6;
            }
            return React.createElement("div", { className: "bp3-card", style: cardStyle }, React.createElement("div", { className: "layout horizontal wrap" }, React.createElement("div", { style: css.group }, React.createElement("div", { style: css.remove }, React.createElement("button", { className: "bp3-button bp3-minimal bp3-intent-danger bp3-icon-trash", type: "button", hidden: session.removed, disabled: this.state.disabled, onClick: this.onDelete })), React.createElement(PageInfo_1.default, { style: css.info, fields: [{
                    label: 'ID',
                    value: session.id || 'None'
                }, {
                    label: 'Created',
                    value: MiscUtils.formatDate(session.timestamp) || 'Unknown'
                }, {
                    label: 'Last Active',
                    value: MiscUtils.formatDate(session.last_active) || 'Unknown'
                }] })), React.createElement("div", { style: css.group }, React.createElement(PageInfo_1.default, { style: css.info, fields: [{
                    label: 'Session Type',
                    value: Constants.sessionTypes[session.type] || 'Unknown'
                }, {
                    label: 'Browser',
                    value: (Constants.operatingSystems[agent.operating_system] || 'Unknown') + ' ' + (Constants.browsers[agent.browser] || 'Unknown')
                }, {
                    label: 'ISP',
                    value: agent.isp || 'Unknown'
                }] })), React.createElement("div", { style: css.group }, React.createElement(PageInfo_1.default, { style: css.info, fields: [{
                    label: 'Location',
                    value: [AgentUtils.formatLocation(agent), AgentUtils.formatCountry(agent), AgentUtils.formatContinent(agent)]
                }, {
                    label: 'Coordinates',
                    value: AgentUtils.formatCoordinates(agent)
                }] }))));
        }
    }
    exports.default = Session;
    
});
System.registerDynamic("app/components/Sessions.js", ["npm:react@16.7.0.js", "app/stores/SessionsStore.js", "app/actions/SessionActions.js", "app/components/NonState.js", "app/components/Session.js", "app/components/PageHeader.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const SessionsStore_1 = $__require("app/stores/SessionsStore.js");
    const SessionActions = $__require("app/actions/SessionActions.js");
    const NonState_1 = $__require("app/components/NonState.js");
    const Session_1 = $__require("app/components/Session.js");
    const PageHeader_1 = $__require("app/components/PageHeader.js");
    const css = {
        header: {
            marginTop: '5px'
        },
        heading: {
            margin: '19px 0 0 0'
        },
        button: {
            margin: '15px 0 -5px 0'
        }
    };
    class Sessions extends React.Component {
        constructor(props, context) {
            super(props, context);
            this.onChange = () => {
                this.setState(Object.assign({}, this.state, { sessions: SessionsStore_1.default.sessions }));
            };
            this.state = {
                sessions: SessionsStore_1.default.sessions,
                showEnded: false,
                disabled: false
            };
        }
        componentDidMount() {
            SessionsStore_1.default.addChangeListener(this.onChange);
            if (this.props.userId) {
                SessionActions.load(this.props.userId);
            }
        }
        componentWillUnmount() {
            SessionsStore_1.default.removeChangeListener(this.onChange);
        }
        render() {
            if (!this.props.userId) {
                return React.createElement("div", null);
            }
            let sessions = [];
            this.state.sessions.forEach(session => {
                if (session.removed && !this.state.showEnded) {
                    return;
                }
                sessions.push(React.createElement(Session_1.default, { key: session.id, session: session }));
            });
            return React.createElement("div", null, React.createElement(PageHeader_1.default, null, React.createElement("div", { className: "layout horizontal wrap", style: css.header }, React.createElement("h2", { style: css.heading }, "User Sessions"), React.createElement("div", { className: "flex" }), React.createElement("div", null, React.createElement("button", { className: "bp3-button bp3-minimal", style: css.button, type: "button", onClick: () => {
                    this.setState(Object.assign({}, this.state, { showEnded: !this.state.showEnded }));
                    SessionActions.showRemoved(!this.state.showEnded);
                } }, (this.state.showEnded ? 'Hide' : 'Show') + ' ended sessions')))), React.createElement("div", null, sessions), React.createElement(NonState_1.default, { hidden: !!sessions.length, iconClass: "bp3-icon-user", title: "No sessions" }));
        }
    }
    exports.default = Sessions;
    
});
System.registerDynamic("app/types/DeviceTypes.js", [], true, function ($__require, exports, module) {
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.SYNC = 'device.sync';
  exports.CHANGE = 'device.change';
  
});
System.registerDynamic("app/stores/DevicesStore.js", ["app/dispatcher/Dispatcher.js", "app/EventEmitter.js", "app/types/DeviceTypes.js", "app/types/GlobalTypes.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const Dispatcher_1 = $__require("app/dispatcher/Dispatcher.js");
    const EventEmitter_1 = $__require("app/EventEmitter.js");
    const DeviceTypes = $__require("app/types/DeviceTypes.js");
    const GlobalTypes = $__require("app/types/GlobalTypes.js");
    class DevicesStore extends EventEmitter_1.default {
        constructor() {
            super(...arguments);
            this._devices = Object.freeze([]);
            this._token = Dispatcher_1.default.register(this._callback.bind(this));
        }
        get userId() {
            return this._userId;
        }
        get devices() {
            return this._devices;
        }
        get devicesM() {
            let devices = [];
            this._devices.forEach(device => {
                devices.push(Object.assign({}, device));
            });
            return devices;
        }
        emitChange() {
            this.emitDefer(GlobalTypes.CHANGE);
        }
        addChangeListener(callback) {
            this.on(GlobalTypes.CHANGE, callback);
        }
        removeChangeListener(callback) {
            this.removeListener(GlobalTypes.CHANGE, callback);
        }
        _sync(userId, devices) {
            this._userId = userId;
            for (let i = 0; i < devices.length; i++) {
                devices[i] = Object.freeze(devices[i]);
            }
            this._devices = Object.freeze(devices);
            this.emitChange();
        }
        _callback(action) {
            switch (action.type) {
                case DeviceTypes.SYNC:
                    this._sync(action.data.userId, action.data.devices);
                    break;
            }
        }
    }
    exports.default = new DevicesStore();
    
});
System.registerDynamic("app/actions/DeviceActions.js", ["npm:superagent@4.1.0.js", "app/dispatcher/Dispatcher.js", "app/dispatcher/EventDispatcher.js", "app/Alert.js", "app/Csrf.js", "app/Loader.js", "app/types/DeviceTypes.js", "app/utils/MiscUtils.js", "app/stores/DevicesStore.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const SuperAgent = $__require("npm:superagent@4.1.0.js");
    const Dispatcher_1 = $__require("app/dispatcher/Dispatcher.js");
    const EventDispatcher_1 = $__require("app/dispatcher/EventDispatcher.js");
    const Alert = $__require("app/Alert.js");
    const Csrf = $__require("app/Csrf.js");
    const Loader_1 = $__require("app/Loader.js");
    const DeviceTypes = $__require("app/types/DeviceTypes.js");
    const MiscUtils = $__require("app/utils/MiscUtils.js");
    const DevicesStore_1 = $__require("app/stores/DevicesStore.js");
    let syncId;
    function load(userId) {
        if (!userId) {
            return Promise.resolve();
        }
        let curSyncId = MiscUtils.uuid();
        syncId = curSyncId;
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.get('/device/' + userId).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (curSyncId !== syncId) {
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to load devices');
                    reject(err);
                    return;
                }
                Dispatcher_1.default.dispatch({
                    type: DeviceTypes.SYNC,
                    data: {
                        userId: userId,
                        devices: res.body
                    }
                });
                resolve();
            });
        });
    }
    exports.load = load;
    function reload() {
        return load(DevicesStore_1.default.userId);
    }
    exports.reload = reload;
    function create(device) {
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.post('/device').send(device).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to create device');
                    reject(err);
                    return;
                }
                resolve();
            });
        });
    }
    exports.create = create;
    function commit(device) {
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.put('/device/' + device.user + '/' + device.id).send(device).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to save device');
                    reject(err);
                    return;
                }
                resolve();
            });
        });
    }
    exports.commit = commit;
    function remove(deviceId) {
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.delete('/device/' + deviceId).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to delete device');
                    reject(err);
                    return;
                }
                resolve();
            });
        });
    }
    exports.remove = remove;
    EventDispatcher_1.default.register(action => {
        switch (action.type) {
            case DeviceTypes.CHANGE:
                reload();
                break;
        }
    });
    
});
System.registerDynamic("app/components/Device.js", ["npm:react@16.7.0.js", "app/utils/MiscUtils.js", "app/actions/DeviceActions.js", "app/components/PageInfo.js", "app/components/ConfirmButton.js", "app/Alert.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const MiscUtils = $__require("app/utils/MiscUtils.js");
    const DeviceActions = $__require("app/actions/DeviceActions.js");
    const PageInfo_1 = $__require("app/components/PageInfo.js");
    const ConfirmButton_1 = $__require("app/components/ConfirmButton.js");
    const Alert = $__require("app/Alert.js");
    const css = {
        card: {
            position: 'relative',
            padding: '10px',
            marginBottom: '5px'
        },
        info: {
            marginBottom: '-5px'
        },
        group: {
            flex: 1,
            minWidth: '280px',
            margin: '0 10px'
        },
        inputGroup: {
            marginBottom: '11px',
            width: '100%',
            maxWidth: '280px'
        },
        remove: {
            position: 'absolute',
            top: '5px',
            right: '5px'
        }
    };
    class Device extends React.Component {
        constructor(props, context) {
            super(props, context);
            this.onSave = () => {
                this.setState(Object.assign({}, this.state, { disabled: true }));
                DeviceActions.commit(this.state.device).then(() => {
                    Alert.success('Device name updated');
                    this.setState(Object.assign({}, this.state, { disabled: false, changed: false }));
                    setTimeout(() => {
                        if (!this.state.changed) {
                            this.setState(Object.assign({}, this.state, { changed: false, device: null }));
                        }
                    }, 3000);
                }).catch(() => {
                    this.setState(Object.assign({}, this.state, { disabled: false }));
                });
            };
            this.onDelete = () => {
                this.setState(Object.assign({}, this.state, { disabled: true }));
                DeviceActions.remove(this.props.device.id).then(() => {
                    this.setState(Object.assign({}, this.state, { disabled: false }));
                }).catch(() => {
                    this.setState(Object.assign({}, this.state, { disabled: false }));
                });
            };
            this.state = {
                disabled: false,
                changed: false,
                device: null
            };
        }
        set(name, val) {
            let device;
            if (this.state.changed) {
                device = Object.assign({}, this.state.device);
            } else {
                device = Object.assign({}, this.props.device);
            }
            device[name] = val;
            this.setState(Object.assign({}, this.state, { changed: true, device: device }));
        }
        render() {
            let device = this.state.device || this.props.device;
            let deviceType = 'Unknown';
            switch (device.type) {
                case 'u2f':
                    deviceType = 'U2F';
                    break;
            }
            let deviceMode = 'Unknown';
            switch (device.mode) {
                case 'secondary':
                    deviceMode = 'Secondary';
                    break;
            }
            let cardStyle = Object.assign({}, css.card);
            if (device.disabled) {
                cardStyle.opacity = 0.6;
            }
            return React.createElement("div", { className: "bp3-card", style: cardStyle }, React.createElement("div", { className: "layout horizontal wrap" }, React.createElement("div", { style: css.group }, React.createElement("div", { style: css.remove }, React.createElement(ConfirmButton_1.default, { className: "bp3-minimal bp3-intent-danger bp3-icon-trash", progressClassName: "bp3-intent-danger", confirmMsg: "Confirm node remove", disabled: this.state.disabled, onConfirm: this.onDelete })), React.createElement("div", { className: "bp3-input-group flex", style: css.inputGroup }, React.createElement("input", { className: "bp3-input", type: "text", placeholder: "Device name", value: device.name, onChange: evt => {
                    this.set('name', evt.target.value);
                }, onKeyPress: evt => {
                    if (evt.key === 'Enter') {
                        this.onSave();
                    }
                } }), React.createElement("button", { className: "bp3-button bp3-minimal bp3-intent-primary bp3-icon-tick", hidden: !this.state.device, disabled: this.state.disabled, onClick: this.onSave })), React.createElement(PageInfo_1.default, { style: css.info, fields: [{
                    label: 'ID',
                    value: device.id || 'None'
                }, {
                    label: 'Type',
                    value: deviceType
                }] })), React.createElement("div", { style: css.group }, React.createElement(PageInfo_1.default, { style: css.info, fields: [{
                    label: 'Registered',
                    value: MiscUtils.formatDate(device.timestamp) || 'Unknown'
                }, {
                    label: 'Last Active',
                    value: MiscUtils.formatDate(device.last_active) || 'Unknown'
                }, {
                    label: 'Mode',
                    value: deviceMode
                }] }))));
        }
    }
    exports.default = Device;
    
});
System.registerDynamic("app/components/Devices.js", ["npm:react@16.7.0.js", "npm:superagent@4.1.0.js", "app/stores/DevicesStore.js", "app/actions/DeviceActions.js", "app/Constants.js", "app/components/NonState.js", "app/components/Device.js", "app/components/PageHeader.js", "app/Loader.js", "app/Csrf.js", "app/Alert.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const SuperAgent = $__require("npm:superagent@4.1.0.js");
    const DevicesStore_1 = $__require("app/stores/DevicesStore.js");
    const DeviceActions = $__require("app/actions/DeviceActions.js");
    const Constants = $__require("app/Constants.js");
    const NonState_1 = $__require("app/components/NonState.js");
    const Device_1 = $__require("app/components/Device.js");
    const PageHeader_1 = $__require("app/components/PageHeader.js");
    const Loader_1 = $__require("app/Loader.js");
    const Csrf = $__require("app/Csrf.js");
    const Alert = $__require("app/Alert.js");
    const css = {
        header: {
            marginTop: '5px'
        },
        heading: {
            margin: '19px 0 0 0'
        },
        button: {
            margin: '15px 0 -5px 0'
        },
        group: {
            marginTop: '18px'
        },
        groupBox: {},
        inputBox: {
            flex: '1'
        }
    };
    class Devices extends React.Component {
        constructor(props, context) {
            super(props, context);
            this.onChange = () => {
                this.setState(Object.assign({}, this.state, { devices: DevicesStore_1.default.devices }));
            };
            this.u2fRegistered = resp => {
                Alert.dismiss(this.alertKey);
                if (resp.errorCode) {
                    this.u2fToken = null;
                    this.setState({
                        disabled: false
                    });
                    let errorMsg = 'U2F error code ' + resp.errorCode;
                    let u2fMsg = Constants.u2fErrorCodes[resp.errorCode];
                    if (u2fMsg) {
                        errorMsg += ': ' + u2fMsg;
                    }
                    Alert.error(errorMsg);
                    return;
                }
                let loader = new Loader_1.default().loading();
                SuperAgent.post('/device/' + DevicesStore_1.default.userId + '/register').send({
                    token: this.u2fToken,
                    name: this.state.deviceName,
                    response: resp
                }).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).end((err, res) => {
                    loader.done();
                    this.u2fToken = null;
                    this.setState(Object.assign({}, this.state, { disabled: false, deviceName: '' }));
                    if (err) {
                        Alert.errorRes(res, 'Failed to register device');
                        return;
                    }
                    Alert.success('Successfully registered device');
                });
            };
            this.registerSign = () => {
                this.setState({
                    disabled: true
                });
                let loader = new Loader_1.default().loading();
                SuperAgent.get('/device/' + DevicesStore_1.default.userId + '/register').set('Accept', 'application/json').set('Csrf-Token', Csrf.token).end((err, res) => {
                    loader.done();
                    if (err) {
                        Alert.errorRes(res, 'Failed to request device registration');
                        return;
                    }
                    this.u2fToken = res.body.token;
                    this.alertKey = Alert.info('Insert security key and tap the button', 30000);
                    window.u2f.register(res.body.request.appId, res.body.request.registerRequests, res.body.request.registeredKeys, this.u2fRegistered, 30);
                });
            };
            this.addDevice = () => {
                if (this.state.deviceType === 'smart_card') {
                    this.setState({
                        disabled: true
                    });
                    DeviceActions.create({
                        id: null,
                        user: this.props.userId,
                        name: this.state.deviceName,
                        type: this.state.deviceType
                    }).then(() => {
                        this.setState(Object.assign({}, this.state, { disabled: false, deviceName: '', devicePubKey: '' }));
                        Alert.success('Successfully registered device');
                    }).catch(() => {
                        this.setState(Object.assign({}, this.state, { disabled: false }));
                    });
                } else {
                    this.registerSign();
                }
            };
            this.state = {
                devices: DevicesStore_1.default.devices,
                deviceName: '',
                deviceType: '',
                devicePubKey: '',
                showEnded: false,
                disabled: false
            };
        }
        componentDidMount() {
            DevicesStore_1.default.addChangeListener(this.onChange);
            if (this.props.userId) {
                DeviceActions.load(this.props.userId);
            }
        }
        componentWillUnmount() {
            DevicesStore_1.default.removeChangeListener(this.onChange);
        }
        render() {
            if (!this.props.userId) {
                return React.createElement("div", null);
            }
            let devices = [];
            this.state.devices.forEach(device => {
                devices.push(React.createElement(Device_1.default, { key: device.id, device: device }));
            });
            return React.createElement("div", null, React.createElement(PageHeader_1.default, null, React.createElement("div", { className: "layout horizontal wrap", style: css.header }, React.createElement("h2", { style: css.heading }, "User Security Devices"), React.createElement("div", { className: "flex" }), React.createElement("div", { style: css.groupBox, className: "layout horizontal" }, React.createElement("div", { className: "bp3-control-group", style: css.group }, React.createElement("div", { className: "bp3-select" }, React.createElement("select", { value: this.state.deviceType, onChange: evt => {
                    this.setState(Object.assign({}, this.state, { deviceType: evt.target.value, devicePubKey: '' }));
                } }, React.createElement("option", { value: "u2f" }, "U2F"))), React.createElement("div", { className: "layout horizontal", style: css.inputBox }, React.createElement("input", { className: "bp3-input", type: "text", placeholder: "Device name", value: this.state.deviceName, onChange: evt => {
                    this.setState(Object.assign({}, this.state, { deviceName: evt.target.value }));
                }, onKeyPress: evt => {
                    if (this.state.deviceType !== 'smart_card' && evt.key === 'Enter') {
                        this.addDevice();
                    }
                } })), React.createElement("div", null, React.createElement("button", { className: "bp3-button bp3-intent-success bp3-icon-add", disabled: this.state.disabled, onClick: this.addDevice }, "Add Device")))))), React.createElement("div", null, devices), React.createElement(NonState_1.default, { hidden: !!devices.length, iconClass: "bp3-icon-id-number", title: "No devices" }));
        }
    }
    exports.default = Devices;
    
});
System.registerDynamic("app/utils/AgentUtils.js", [], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    function formatContinent(agent) {
        return agent.continent && agent.continent_code ? agent.continent + (agent.continent_code && agent.continent_code !== 'XX' ? ' (' + agent.continent_code + ')' : '') : agent.continent || agent.continent_code || 'Unknown';
    }
    exports.formatContinent = formatContinent;
    function formatLocation(agent) {
        return (agent.city && agent.city !== 'Unknown' ? agent.city + ', ' : '') + (agent.region || 'Unknown') + (agent.region_code && agent.region_code !== 'XX' ? ' (' + agent.region_code + ')' : '');
    }
    exports.formatLocation = formatLocation;
    function formatCountry(agent) {
        return (agent.country || 'Unknown') + (agent.country_code && agent.country_code !== 'XX' ? ' (' + agent.country_code + ')' : '');
    }
    exports.formatCountry = formatCountry;
    function formatCoordinates(agent) {
        return agent.latitude && agent.longitude ? agent.latitude + ', ' + agent.longitude : 'Unknown';
    }
    exports.formatCoordinates = formatCoordinates;
    
});
System.registerDynamic("app/components/Audit.js", ["npm:react@16.7.0.js", "app/Constants.js", "app/utils/AgentUtils.js", "app/utils/MiscUtils.js", "app/components/PageInfo.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const Constants = $__require("app/Constants.js");
    const AgentUtils = $__require("app/utils/AgentUtils.js");
    const MiscUtils = $__require("app/utils/MiscUtils.js");
    const PageInfo_1 = $__require("app/components/PageInfo.js");
    const css = {
        card: {
            position: 'relative',
            padding: '10px',
            marginBottom: '5px'
        },
        info: {
            marginBottom: '-5px'
        },
        group: {
            flex: 1,
            minWidth: '290px'
        }
    };
    class Audit extends React.Component {
        render() {
            let audit = this.props.audit;
            let agent = audit.agent || {};
            let fields = [];
            for (let key in audit.fields) {
                if (!audit.fields.hasOwnProperty(key)) {
                    continue;
                }
                fields.push(key + ': ' + audit.fields[key]);
            }
            return React.createElement("div", { className: "bp3-card", style: css.card }, React.createElement("div", { className: "layout horizontal wrap" }, React.createElement("div", { style: css.group }, React.createElement(PageInfo_1.default, { style: css.info, fields: [{
                    label: 'ID',
                    value: audit.id || 'None'
                }, {
                    label: 'Timestamp',
                    value: MiscUtils.formatDate(audit.timestamp) || 'Unknown'
                }, {
                    label: 'Fields',
                    value: fields
                }] })), React.createElement("div", { style: css.group }, React.createElement(PageInfo_1.default, { style: css.info, fields: [{
                    label: 'Type',
                    value: audit.type
                }, {
                    label: 'Operating System',
                    value: Constants.operatingSystems[agent.operating_system] || 'Unknown'
                }, {
                    label: 'Browser',
                    value: Constants.browsers[agent.browser] || 'Unknown'
                }, {
                    label: 'ISP',
                    value: agent.isp || 'Unknown'
                }] })), React.createElement("div", { style: css.group }, React.createElement(PageInfo_1.default, { style: css.info, fields: [{
                    label: 'Location',
                    value: [AgentUtils.formatLocation(agent), AgentUtils.formatCountry(agent), AgentUtils.formatContinent(agent)]
                }, {
                    label: 'Coordinates',
                    value: AgentUtils.formatCoordinates(agent)
                }] }))));
        }
    }
    exports.default = Audit;
    
});
System.registerDynamic("app/components/AuditsPage.js", ["npm:react@16.7.0.js", "app/stores/AuditsStore.js", "app/actions/AuditActions.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const AuditsStore_1 = $__require("app/stores/AuditsStore.js");
    const AuditActions = $__require("app/actions/AuditActions.js");
    const css = {
        button: {
            userSelect: 'none',
            margin: '0 5px 0 0'
        },
        buttonLast: {
            userSelect: 'none',
            margin: '0 0 0 0'
        },
        link: {
            userSelect: 'none',
            margin: '7px 5px 0 0'
        },
        current: {
            opacity: 0.5
        }
    };
    class AuditsPage extends React.Component {
        constructor(props, context) {
            super(props, context);
            this.onChange = () => {
                this.setState(Object.assign({}, this.state, { page: AuditsStore_1.default.page, pageCount: AuditsStore_1.default.pageCount, pages: AuditsStore_1.default.pages, count: AuditsStore_1.default.count }));
            };
            this.state = {
                page: AuditsStore_1.default.page,
                pageCount: AuditsStore_1.default.pageCount,
                pages: AuditsStore_1.default.pages,
                count: AuditsStore_1.default.count
            };
        }
        componentDidMount() {
            AuditsStore_1.default.addChangeListener(this.onChange);
        }
        componentWillUnmount() {
            AuditsStore_1.default.removeChangeListener(this.onChange);
        }
        render() {
            let page = this.state.page;
            let pages = this.state.pages;
            if (pages <= 1) {
                return React.createElement("div", null);
            }
            let links = [];
            let start = Math.max(0, page - 7);
            let end = Math.min(pages, start + 15);
            for (let i = start; i < end; i++) {
                links.push(React.createElement("span", { key: i, style: page === i ? Object.assign({}, css.link, css.current) : css.link, onClick: () => {
                        AuditActions.traverse(i);
                        if (this.props.onPage) {
                            this.props.onPage();
                        }
                    } }, i + 1));
            }
            return React.createElement("div", { className: "layout horizontal center-justified" }, React.createElement("button", { className: "bp3-button bp3-minimal bp3-icon-chevron-backward", hidden: pages < 5, disabled: page === 0, type: "button", onClick: () => {
                    AuditActions.traverse(0);
                    if (this.props.onPage) {
                        this.props.onPage();
                    }
                } }), React.createElement("button", { className: "bp3-button bp3-minimal bp3-icon-chevron-left", style: css.button, disabled: page === 0, type: "button", onClick: () => {
                    AuditActions.traverse(Math.max(0, this.state.page - 1));
                    if (this.props.onPage) {
                        this.props.onPage();
                    }
                } }), links, React.createElement("button", { className: "bp3-button bp3-minimal bp3-icon-chevron-right", style: css.button, disabled: page === pages - 1, type: "button", onClick: () => {
                    AuditActions.traverse(Math.min(this.state.pages - 1, this.state.page + 1));
                    if (this.props.onPage) {
                        this.props.onPage();
                    }
                } }), React.createElement("button", { className: "bp3-button bp3-minimal bp3-icon-chevron-forward", hidden: pages < 5, disabled: page === pages - 1, type: "button", onClick: () => {
                    AuditActions.traverse(this.state.pages - 1);
                    if (this.props.onPage) {
                        this.props.onPage();
                    }
                } }));
        }
    }
    exports.default = AuditsPage;
    
});
System.registerDynamic("app/components/Audits.js", ["npm:react@16.7.0.js", "app/stores/AuditsStore.js", "app/actions/AuditActions.js", "app/components/NonState.js", "app/components/Audit.js", "app/components/PageHeader.js", "app/components/AuditsPage.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const AuditsStore_1 = $__require("app/stores/AuditsStore.js");
    const AuditActions = $__require("app/actions/AuditActions.js");
    const NonState_1 = $__require("app/components/NonState.js");
    const Audit_1 = $__require("app/components/Audit.js");
    const PageHeader_1 = $__require("app/components/PageHeader.js");
    const AuditsPage_1 = $__require("app/components/AuditsPage.js");
    const css = {
        header: {
            marginTop: '5px'
        },
        heading: {
            margin: '19px 0 0 0'
        }
    };
    class Audits extends React.Component {
        constructor(props, context) {
            super(props, context);
            this.onChange = () => {
                this.setState(Object.assign({}, this.state, { audits: AuditsStore_1.default.audits }));
            };
            this.state = {
                audits: AuditsStore_1.default.audits,
                disabled: false
            };
        }
        componentDidMount() {
            AuditsStore_1.default.addChangeListener(this.onChange);
            if (this.props.userId) {
                AuditActions.load(this.props.userId);
            }
        }
        componentWillUnmount() {
            AuditsStore_1.default.removeChangeListener(this.onChange);
        }
        render() {
            if (!this.props.userId) {
                return React.createElement("div", null);
            }
            let audits = [];
            this.state.audits.forEach(audit => {
                audits.push(React.createElement(Audit_1.default, { key: audit.id, audit: audit }));
            });
            return React.createElement("div", null, React.createElement(PageHeader_1.default, null, React.createElement("div", { className: "layout horizontal wrap", style: css.header }, React.createElement("h2", { style: css.heading }, "User Audit Events"), React.createElement("div", { className: "flex" }))), React.createElement("div", null, audits), React.createElement(NonState_1.default, { hidden: !!audits.length, iconClass: "bp3-icon-search-template", title: "No audit events" }), React.createElement(AuditsPage_1.default, null));
        }
    }
    exports.default = Audits;
    
});
System.registerDynamic("npm:@blueprintjs/datetime@3.6.0/lib/cjs/dateInput.js", ["npm:tslib@1.9.3.js", "npm:classnames@2.2.6.js", "npm:react@16.7.0.js", "npm:@blueprintjs/core@3.11.0.js", "npm:@blueprintjs/datetime@3.6.0/lib/cjs/common/classes.js", "npm:@blueprintjs/datetime@3.6.0/lib/cjs/common/dateUtils.js", "npm:@blueprintjs/datetime@3.6.0/lib/cjs/dateFormat.js", "npm:@blueprintjs/datetime@3.6.0/lib/cjs/datePicker.js", "npm:@blueprintjs/datetime@3.6.0/lib/cjs/datePickerCore.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  var classnames_1 = tslib_1.__importDefault($__require("npm:classnames@2.2.6.js"));
  var React = tslib_1.__importStar($__require("npm:react@16.7.0.js"));
  var core_1 = $__require("npm:@blueprintjs/core@3.11.0.js");
  var Classes = tslib_1.__importStar($__require("npm:@blueprintjs/datetime@3.6.0/lib/cjs/common/classes.js"));
  var dateUtils_1 = $__require("npm:@blueprintjs/datetime@3.6.0/lib/cjs/common/dateUtils.js");
  var dateFormat_1 = $__require("npm:@blueprintjs/datetime@3.6.0/lib/cjs/dateFormat.js");
  var datePicker_1 = $__require("npm:@blueprintjs/datetime@3.6.0/lib/cjs/datePicker.js");
  var datePickerCore_1 = $__require("npm:@blueprintjs/datetime@3.6.0/lib/cjs/datePickerCore.js");
  var DateInput = function (_super) {
    tslib_1.__extends(DateInput, _super);
    function DateInput() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.state = {
        isInputFocused: false,
        isOpen: false,
        value: _this.props.value !== undefined ? _this.props.value : _this.props.defaultValue,
        valueString: null
      };
      _this.inputEl = null;
      _this.popoverContentEl = null;
      _this.lastElementInPopover = null;
      _this.inputRef = function (ref) {
        _this.inputEl = ref;
        var _a = _this.props.inputProps,
            inputProps = _a === void 0 ? {} : _a;
        core_1.Utils.safeInvoke(inputProps.inputRef, ref);
      };
      _this.handleClosePopover = function (e) {
        var _a = _this.props.popoverProps,
            popoverProps = _a === void 0 ? {} : _a;
        core_1.Utils.safeInvoke(popoverProps.onClose, e);
        _this.setState({ isOpen: false });
      };
      _this.handleDateChange = function (newDate, isUserChange, didSubmitWithEnter) {
        if (didSubmitWithEnter === void 0) {
          didSubmitWithEnter = false;
        }
        var prevDate = _this.state.value;
        var isOpen = !isUserChange || !_this.props.closeOnSelection || prevDate != null && (_this.hasMonthChanged(prevDate, newDate) || _this.hasTimeChanged(prevDate, newDate));
        var isInputFocused = didSubmitWithEnter ? true : false;
        if (_this.props.value === undefined) {
          var valueString = dateFormat_1.getFormattedDateString(newDate, _this.props);
          _this.setState({
            isInputFocused: isInputFocused,
            isOpen: isOpen,
            value: newDate,
            valueString: valueString
          });
        } else {
          _this.setState({
            isInputFocused: isInputFocused,
            isOpen: isOpen
          });
        }
        core_1.Utils.safeInvoke(_this.props.onChange, newDate, isUserChange);
      };
      _this.handleInputFocus = function (e) {
        var valueString = _this.state.value == null ? "" : _this.formatDate(_this.state.value);
        _this.setState({
          isInputFocused: true,
          isOpen: true,
          valueString: valueString
        });
        _this.safeInvokeInputProp("onFocus", e);
      };
      _this.handleInputClick = function (e) {
        e.stopPropagation();
        _this.safeInvokeInputProp("onClick", e);
      };
      _this.handleInputChange = function (e) {
        var valueString = e.target.value;
        var value = _this.parseDate(valueString);
        if (dateUtils_1.isDateValid(value) && _this.isDateInRange(value)) {
          if (_this.props.value === undefined) {
            _this.setState({
              value: value,
              valueString: valueString
            });
          } else {
            _this.setState({ valueString: valueString });
          }
          core_1.Utils.safeInvoke(_this.props.onChange, value, true);
        } else {
          if (valueString.length === 0) {
            core_1.Utils.safeInvoke(_this.props.onChange, null, true);
          }
          _this.setState({ valueString: valueString });
        }
        _this.safeInvokeInputProp("onChange", e);
      };
      _this.handleInputBlur = function (e) {
        var valueString = _this.state.valueString;
        var date = _this.parseDate(valueString);
        if (valueString.length > 0 && valueString !== dateFormat_1.getFormattedDateString(_this.state.value, _this.props) && (!dateUtils_1.isDateValid(date) || !_this.isDateInRange(date))) {
          if (_this.props.value === undefined) {
            _this.setState({
              isInputFocused: false,
              value: date,
              valueString: null
            });
          } else {
            _this.setState({ isInputFocused: false });
          }
          if (isNaN(date.valueOf())) {
            core_1.Utils.safeInvoke(_this.props.onError, new Date(undefined));
          } else if (!_this.isDateInRange(date)) {
            core_1.Utils.safeInvoke(_this.props.onError, date);
          } else {
            core_1.Utils.safeInvoke(_this.props.onChange, date, true);
          }
        } else {
          if (valueString.length === 0) {
            _this.setState({
              isInputFocused: false,
              value: null,
              valueString: null
            });
          } else {
            _this.setState({ isInputFocused: false });
          }
        }
        _this.registerPopoverBlurHandler();
        _this.safeInvokeInputProp("onBlur", e);
      };
      _this.handleInputKeyDown = function (e) {
        if (e.which === core_1.Keys.ENTER) {
          var nextDate = _this.parseDate(_this.state.valueString);
          _this.handleDateChange(nextDate, true, true);
        } else if (e.which === core_1.Keys.TAB) {
          _this.setState({ isOpen: false });
        } else if (e.which === core_1.Keys.ESCAPE) {
          _this.setState({ isOpen: false });
          _this.inputEl.blur();
        }
        _this.safeInvokeInputProp("onKeyDown", e);
      };
      _this.handlePopoverBlur = function (e) {
        var relatedTarget = e.relatedTarget;
        if (relatedTarget == null || !_this.popoverContentEl.contains(relatedTarget)) {
          _this.handleClosePopover();
        } else if (relatedTarget != null) {
          _this.unregisterPopoverBlurHandler();
          _this.lastElementInPopover = relatedTarget;
          _this.lastElementInPopover.addEventListener("blur", _this.handlePopoverBlur);
        }
      };
      _this.registerPopoverBlurHandler = function () {
        if (_this.popoverContentEl != null) {
          var lastTabbableElement = _this.popoverContentEl.contains(document.activeElement) ? document.activeElement : undefined;
          if (lastTabbableElement == null) {
            var tabbableElements = _this.popoverContentEl.querySelectorAll("input, [tabindex]:not([tabindex='-1'])");
            var numOfElements = tabbableElements.length;
            if (numOfElements > 0) {
              lastTabbableElement = tabbableElements[numOfElements - 1];
            }
          }
          _this.unregisterPopoverBlurHandler();
          _this.lastElementInPopover = lastTabbableElement;
          _this.lastElementInPopover.addEventListener("blur", _this.handlePopoverBlur);
        }
      };
      _this.unregisterPopoverBlurHandler = function () {
        if (_this.lastElementInPopover != null) {
          _this.lastElementInPopover.removeEventListener("blur", _this.handlePopoverBlur);
        }
      };
      return _this;
    }
    DateInput.prototype.componentWillUnmount = function () {
      _super.prototype.componentWillUnmount.call(this);
      this.unregisterPopoverBlurHandler();
    };
    DateInput.prototype.render = function () {
      var _this = this;
      var _a = this.state,
          value = _a.value,
          valueString = _a.valueString;
      var dateString = this.state.isInputFocused ? valueString : dateFormat_1.getFormattedDateString(value, this.props);
      var dateValue = dateUtils_1.isDateValid(value) ? value : null;
      var dayPickerProps = tslib_1.__assign({}, this.props.dayPickerProps, { onMonthChange: function (month) {
          core_1.Utils.safeInvoke(_this.props.dayPickerProps.onMonthChange, month);
          _this.setTimeout(_this.registerPopoverBlurHandler);
        } });
      var wrappedPopoverContent = React.createElement("div", { ref: function (ref) {
          return _this.popoverContentEl = ref;
        } }, React.createElement(datePicker_1.DatePicker, tslib_1.__assign({}, this.props, {
        dayPickerProps: dayPickerProps,
        onChange: this.handleDateChange,
        value: dateValue
      })));
      var _b = this.props,
          _c = _b.inputProps,
          inputProps = _c === void 0 ? {} : _c,
          _d = _b.popoverProps,
          popoverProps = _d === void 0 ? {} : _d;
      var isErrorState = value != null && (!dateUtils_1.isDateValid(value) || !this.isDateInRange(value));
      return React.createElement(core_1.Popover, tslib_1.__assign({ isOpen: this.state.isOpen && !this.props.disabled }, popoverProps, {
        autoFocus: false,
        className: classnames_1.default(popoverProps.className, this.props.className),
        content: wrappedPopoverContent,
        enforceFocus: false,
        onClose: this.handleClosePopover,
        popoverClassName: classnames_1.default(Classes.DATEINPUT_POPOVER, popoverProps.popoverClassName)
      }), React.createElement(core_1.InputGroup, tslib_1.__assign({
        autoComplete: "off",
        intent: isErrorState ? core_1.Intent.DANGER : core_1.Intent.NONE,
        placeholder: this.props.placeholder,
        rightElement: this.props.rightElement,
        type: "text"
      }, inputProps, {
        disabled: this.props.disabled,
        inputRef: this.inputRef,
        onBlur: this.handleInputBlur,
        onChange: this.handleInputChange,
        onClick: this.handleInputClick,
        onFocus: this.handleInputFocus,
        onKeyDown: this.handleInputKeyDown,
        value: dateString
      })));
    };
    DateInput.prototype.componentWillReceiveProps = function (nextProps) {
      _super.prototype.componentWillReceiveProps.call(this, nextProps);
      if (nextProps.value !== this.props.value) {
        this.setState({ value: nextProps.value });
      }
    };
    DateInput.prototype.isDateInRange = function (value) {
      return dateUtils_1.isDayInRange(value, [this.props.minDate, this.props.maxDate]);
    };
    DateInput.prototype.hasMonthChanged = function (prevDate, nextDate) {
      return prevDate == null !== (nextDate == null) || nextDate.getMonth() !== prevDate.getMonth();
    };
    DateInput.prototype.hasTimeChanged = function (prevDate, nextDate) {
      if (this.props.timePrecision == null) {
        return false;
      }
      return prevDate == null !== (nextDate == null) || nextDate.getHours() !== prevDate.getHours() || nextDate.getMinutes() !== prevDate.getMinutes() || nextDate.getSeconds() !== prevDate.getSeconds() || nextDate.getMilliseconds() !== prevDate.getMilliseconds();
    };
    DateInput.prototype.safeInvokeInputProp = function (name, e) {
      var _a = this.props.inputProps,
          inputProps = _a === void 0 ? {} : _a;
      core_1.Utils.safeInvoke(inputProps[name], e);
    };
    DateInput.prototype.parseDate = function (dateString) {
      if (dateString === this.props.outOfRangeMessage || dateString === this.props.invalidDateMessage) {
        return null;
      }
      var _a = this.props,
          locale = _a.locale,
          parseDate = _a.parseDate;
      var newDate = parseDate(dateString, locale);
      return newDate === false ? new Date(undefined) : newDate;
    };
    DateInput.prototype.formatDate = function (date) {
      if (!dateUtils_1.isDateValid(date) || !this.isDateInRange(date)) {
        return "";
      }
      var _a = this.props,
          locale = _a.locale,
          formatDate = _a.formatDate;
      return formatDate(date, locale);
    };
    DateInput.displayName = core_1.DISPLAYNAME_PREFIX + ".DateInput";
    DateInput.defaultProps = {
      closeOnSelection: true,
      dayPickerProps: {},
      disabled: false,
      invalidDateMessage: "Invalid date",
      maxDate: datePickerCore_1.getDefaultMaxDate(),
      minDate: datePickerCore_1.getDefaultMinDate(),
      outOfRangeMessage: "Out of range",
      reverseMonthAndYearMenus: false
    };
    return DateInput;
  }(core_1.AbstractPureComponent);
  exports.DateInput = DateInput;
});
System.registerDynamic("npm:@blueprintjs/datetime@3.6.0/lib/cjs/datePicker.js", ["npm:tslib@1.9.3.js", "npm:@blueprintjs/core@3.11.0.js", "npm:classnames@2.2.6.js", "npm:react@16.7.0.js", "npm:react-day-picker@7.2.4.js", "npm:@blueprintjs/datetime@3.6.0/lib/cjs/common/classes.js", "npm:@blueprintjs/datetime@3.6.0/lib/cjs/common/dateUtils.js", "npm:@blueprintjs/datetime@3.6.0/lib/cjs/common/errors.js", "npm:@blueprintjs/datetime@3.6.0/lib/cjs/datePickerCaption.js", "npm:@blueprintjs/datetime@3.6.0/lib/cjs/datePickerCore.js", "npm:@blueprintjs/datetime@3.6.0/lib/cjs/datePickerNavbar.js", "npm:@blueprintjs/datetime@3.6.0/lib/cjs/timePicker.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  var core_1 = $__require("npm:@blueprintjs/core@3.11.0.js");
  var classnames_1 = tslib_1.__importDefault($__require("npm:classnames@2.2.6.js"));
  var React = tslib_1.__importStar($__require("npm:react@16.7.0.js"));
  var react_day_picker_1 = tslib_1.__importDefault($__require("npm:react-day-picker@7.2.4.js"));
  var Classes = tslib_1.__importStar($__require("npm:@blueprintjs/datetime@3.6.0/lib/cjs/common/classes.js"));
  var DateUtils = tslib_1.__importStar($__require("npm:@blueprintjs/datetime@3.6.0/lib/cjs/common/dateUtils.js"));
  var Errors = tslib_1.__importStar($__require("npm:@blueprintjs/datetime@3.6.0/lib/cjs/common/errors.js"));
  var datePickerCaption_1 = $__require("npm:@blueprintjs/datetime@3.6.0/lib/cjs/datePickerCaption.js");
  var datePickerCore_1 = $__require("npm:@blueprintjs/datetime@3.6.0/lib/cjs/datePickerCore.js");
  var datePickerNavbar_1 = $__require("npm:@blueprintjs/datetime@3.6.0/lib/cjs/datePickerNavbar.js");
  var timePicker_1 = $__require("npm:@blueprintjs/datetime@3.6.0/lib/cjs/timePicker.js");
  var DatePicker = function (_super) {
    tslib_1.__extends(DatePicker, _super);
    function DatePicker(props, context) {
      var _this = _super.call(this, props, context) || this;
      _this.ignoreNextMonthChange = false;
      _this.disabledDays = function (day) {
        return !DateUtils.isDayInRange(day, [_this.props.minDate, _this.props.maxDate]);
      };
      _this.getDisabledDaysModifier = function () {
        var disabledDays = _this.props.dayPickerProps.disabledDays;
        return Array.isArray(disabledDays) ? [_this.disabledDays].concat(disabledDays) : [_this.disabledDays, disabledDays];
      };
      _this.renderCaption = function (props) {
        return React.createElement(datePickerCaption_1.DatePickerCaption, tslib_1.__assign({}, props, {
          maxDate: _this.props.maxDate,
          minDate: _this.props.minDate,
          onDateChange: _this.handleMonthChange,
          reverseMonthAndYearMenus: _this.props.reverseMonthAndYearMenus
        }));
      };
      _this.renderNavbar = function (props) {
        return React.createElement(datePickerNavbar_1.DatePickerNavbar, tslib_1.__assign({}, props, {
          maxDate: _this.props.maxDate,
          minDate: _this.props.minDate
        }));
      };
      _this.handleDayClick = function (day, modifiers, e) {
        core_1.Utils.safeInvoke(_this.props.dayPickerProps.onDayClick, day, modifiers, e);
        if (modifiers.disabled) {
          return;
        }
        if (_this.props.value === undefined) {
          _this.setState({
            displayMonth: day.getMonth(),
            displayYear: day.getFullYear(),
            selectedDay: day.getDate()
          });
        }
        if (_this.state.value == null || _this.state.value.getMonth() !== day.getMonth()) {
          _this.ignoreNextMonthChange = true;
        }
        var newValue = _this.props.canClearSelection && modifiers.selected ? null : DateUtils.getDateTime(day, _this.state.value);
        _this.updateValue(newValue, true);
      };
      _this.handleClearClick = function () {
        return _this.updateValue(null, true);
      };
      _this.handleMonthChange = function (newDate) {
        var date = _this.computeValidDateInSpecifiedMonthYear(newDate.getFullYear(), newDate.getMonth());
        _this.setState({
          displayMonth: date.getMonth(),
          displayYear: date.getFullYear()
        });
        if (_this.state.value !== null) {
          _this.updateValue(date, false, _this.ignoreNextMonthChange);
          _this.ignoreNextMonthChange = false;
        }
        core_1.Utils.safeInvoke(_this.props.dayPickerProps.onMonthChange, date);
      };
      _this.handleTodayClick = function () {
        var value = new Date();
        var displayMonth = value.getMonth();
        var displayYear = value.getFullYear();
        var selectedDay = value.getDate();
        _this.setState({
          displayMonth: displayMonth,
          displayYear: displayYear,
          selectedDay: selectedDay
        });
        _this.updateValue(value, true);
      };
      _this.handleTimeChange = function (time) {
        core_1.Utils.safeInvoke(_this.props.timePickerProps.onChange, time);
        var value = _this.state.value;
        var newValue = DateUtils.getDateTime(value != null ? value : new Date(), time);
        _this.updateValue(newValue, true);
      };
      var value = getInitialValue(props);
      var initialMonth = getInitialMonth(props, value);
      _this.state = {
        displayMonth: initialMonth.getMonth(),
        displayYear: initialMonth.getFullYear(),
        selectedDay: value == null ? null : value.getDate(),
        value: value
      };
      return _this;
    }
    DatePicker.prototype.render = function () {
      var _a = this.props,
          className = _a.className,
          dayPickerProps = _a.dayPickerProps,
          locale = _a.locale,
          localeUtils = _a.localeUtils,
          maxDate = _a.maxDate,
          minDate = _a.minDate,
          modifiers = _a.modifiers,
          showActionsBar = _a.showActionsBar;
      var _b = this.state,
          displayMonth = _b.displayMonth,
          displayYear = _b.displayYear;
      return React.createElement("div", { className: classnames_1.default(Classes.DATEPICKER, className) }, React.createElement(react_day_picker_1.default, tslib_1.__assign({
        showOutsideDays: true,
        locale: locale,
        localeUtils: localeUtils,
        modifiers: modifiers
      }, dayPickerProps, {
        canChangeMonth: true,
        captionElement: this.renderCaption,
        navbarElement: this.renderNavbar,
        disabledDays: this.getDisabledDaysModifier(),
        fromMonth: minDate,
        month: new Date(displayYear, displayMonth),
        onDayClick: this.handleDayClick,
        onMonthChange: this.handleMonthChange,
        selectedDays: this.state.value,
        toMonth: maxDate
      })), this.maybeRenderTimePicker(), showActionsBar && this.renderOptionsBar());
    };
    DatePicker.prototype.componentWillReceiveProps = function (nextProps) {
      _super.prototype.componentWillReceiveProps.call(this, nextProps);
      var value = nextProps.value;
      if (value === this.props.value) {
        return;
      } else if (value == null) {
        this.setState({ value: value });
      } else {
        this.setState({
          displayMonth: value.getMonth(),
          displayYear: value.getFullYear(),
          selectedDay: value.getDate(),
          value: value
        });
      }
    };
    DatePicker.prototype.validateProps = function (props) {
      var defaultValue = props.defaultValue,
          initialMonth = props.initialMonth,
          maxDate = props.maxDate,
          minDate = props.minDate,
          value = props.value;
      if (defaultValue != null && !DateUtils.isDayInRange(defaultValue, [minDate, maxDate])) {
        throw new Error(Errors.DATEPICKER_DEFAULT_VALUE_INVALID);
      }
      if (initialMonth != null && !DateUtils.isMonthInRange(initialMonth, [minDate, maxDate])) {
        throw new Error(Errors.DATEPICKER_INITIAL_MONTH_INVALID);
      }
      if (maxDate != null && minDate != null && maxDate < minDate && !DateUtils.areSameDay(maxDate, minDate)) {
        throw new Error(Errors.DATEPICKER_MAX_DATE_INVALID);
      }
      if (value != null && !DateUtils.isDayInRange(value, [minDate, maxDate])) {
        throw new Error(Errors.DATEPICKER_VALUE_INVALID);
      }
    };
    DatePicker.prototype.renderOptionsBar = function () {
      var _a = this.props,
          clearButtonText = _a.clearButtonText,
          todayButtonText = _a.todayButtonText;
      return [React.createElement(core_1.Divider, { key: "div" }), React.createElement("div", {
        className: Classes.DATEPICKER_FOOTER,
        key: "footer"
      }, React.createElement(core_1.Button, {
        minimal: true,
        onClick: this.handleTodayClick,
        text: todayButtonText
      }), React.createElement(core_1.Button, {
        minimal: true,
        onClick: this.handleClearClick,
        text: clearButtonText
      }))];
    };
    DatePicker.prototype.maybeRenderTimePicker = function () {
      var _a = this.props,
          timePrecision = _a.timePrecision,
          timePickerProps = _a.timePickerProps;
      if (timePrecision == null && timePickerProps === DatePicker.defaultProps.timePickerProps) {
        return null;
      }
      return React.createElement(timePicker_1.TimePicker, tslib_1.__assign({ precision: timePrecision }, timePickerProps, {
        onChange: this.handleTimeChange,
        value: this.state.value
      }));
    };
    DatePicker.prototype.computeValidDateInSpecifiedMonthYear = function (displayYear, displayMonth) {
      var _a = this.props,
          minDate = _a.minDate,
          maxDate = _a.maxDate;
      var selectedDay = this.state.selectedDay;
      var maxDaysInMonth = new Date(displayYear, displayMonth + 1, 0).getDate();
      var displayDate = selectedDay == null ? 1 : Math.min(selectedDay, maxDaysInMonth);
      var value = DateUtils.getDateTime(new Date(displayYear, displayMonth, displayDate, 12), this.state.value);
      if (value < minDate) {
        return minDate;
      } else if (value > maxDate) {
        return maxDate;
      }
      return value;
    };
    DatePicker.prototype.updateValue = function (value, isUserChange, skipOnChange) {
      if (skipOnChange === void 0) {
        skipOnChange = false;
      }
      if (!skipOnChange) {
        core_1.Utils.safeInvoke(this.props.onChange, value, isUserChange);
      }
      if (this.props.value === undefined) {
        this.setState({ value: value });
      }
    };
    DatePicker.defaultProps = {
      canClearSelection: true,
      clearButtonText: "Clear",
      dayPickerProps: {},
      maxDate: datePickerCore_1.getDefaultMaxDate(),
      minDate: datePickerCore_1.getDefaultMinDate(),
      reverseMonthAndYearMenus: false,
      showActionsBar: false,
      timePickerProps: {},
      todayButtonText: "Today"
    };
    DatePicker.displayName = core_1.DISPLAYNAME_PREFIX + ".DatePicker";
    return DatePicker;
  }(core_1.AbstractPureComponent);
  exports.DatePicker = DatePicker;
  function getInitialValue(props) {
    if (props.value !== undefined) {
      return props.value;
    }
    if (props.defaultValue !== undefined) {
      return props.defaultValue;
    }
    return null;
  }
  function getInitialMonth(props, value) {
    var today = new Date();
    if (props.initialMonth != null) {
      return props.initialMonth;
    } else if (value != null) {
      return value;
    } else if (DateUtils.isDayInRange(today, [props.minDate, props.maxDate])) {
      return today;
    } else {
      return DateUtils.getDateBetween([props.minDate, props.maxDate]);
    }
  }
});
System.registerDynamic("npm:@blueprintjs/datetime@3.6.0/lib/cjs/dateTimePicker.js", ["npm:tslib@1.9.3.js", "npm:classnames@2.2.6.js", "npm:react@16.7.0.js", "npm:@blueprintjs/core@3.11.0.js", "npm:@blueprintjs/datetime@3.6.0/lib/cjs/common/classes.js", "npm:@blueprintjs/datetime@3.6.0/lib/cjs/common/dateUtils.js", "npm:@blueprintjs/datetime@3.6.0/lib/cjs/datePicker.js", "npm:@blueprintjs/datetime@3.6.0/lib/cjs/timePicker.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  var classnames_1 = tslib_1.__importDefault($__require("npm:classnames@2.2.6.js"));
  var React = tslib_1.__importStar($__require("npm:react@16.7.0.js"));
  var core_1 = $__require("npm:@blueprintjs/core@3.11.0.js");
  var Classes = tslib_1.__importStar($__require("npm:@blueprintjs/datetime@3.6.0/lib/cjs/common/classes.js"));
  var DateUtils = tslib_1.__importStar($__require("npm:@blueprintjs/datetime@3.6.0/lib/cjs/common/dateUtils.js"));
  var datePicker_1 = $__require("npm:@blueprintjs/datetime@3.6.0/lib/cjs/datePicker.js");
  var timePicker_1 = $__require("npm:@blueprintjs/datetime@3.6.0/lib/cjs/timePicker.js");
  var DateTimePicker = function (_super) {
    tslib_1.__extends(DateTimePicker, _super);
    function DateTimePicker(props, context) {
      var _this = _super.call(this, props, context) || this;
      _this.handleDateChange = function (dateValue, isUserChange) {
        if (_this.props.value === undefined) {
          _this.setState({ dateValue: dateValue });
        }
        var value = DateUtils.getDateTime(dateValue, _this.state.timeValue);
        core_1.Utils.safeInvoke(_this.props.onChange, value, isUserChange);
      };
      _this.handleTimeChange = function (timeValue) {
        if (_this.props.value === undefined) {
          _this.setState({ timeValue: timeValue });
        }
        var value = DateUtils.getDateTime(_this.state.dateValue, timeValue);
        core_1.Utils.safeInvoke(_this.props.onChange, value, true);
      };
      var initialValue = _this.props.value !== undefined ? _this.props.value : _this.props.defaultValue;
      _this.state = {
        dateValue: initialValue,
        timeValue: initialValue
      };
      return _this;
    }
    DateTimePicker.prototype.render = function () {
      var value = DateUtils.getDateTime(this.state.dateValue, this.state.timeValue);
      return React.createElement("div", { className: classnames_1.default(Classes.DATETIMEPICKER, this.props.className) }, React.createElement(datePicker_1.DatePicker, tslib_1.__assign({}, this.props.datePickerProps, {
        canClearSelection: this.props.canClearSelection,
        onChange: this.handleDateChange,
        value: value
      })), React.createElement(timePicker_1.TimePicker, tslib_1.__assign({}, this.props.timePickerProps, {
        onChange: this.handleTimeChange,
        value: value
      })));
    };
    DateTimePicker.prototype.componentWillReceiveProps = function (nextProps) {
      if (this.props.value === nextProps.value) {
        return;
      } else if (nextProps.value != null) {
        this.setState({
          dateValue: nextProps.value,
          timeValue: nextProps.value
        });
      } else {
        this.setState({ dateValue: null });
      }
    };
    DateTimePicker.defaultProps = {
      canClearSelection: true,
      defaultValue: new Date()
    };
    DateTimePicker.displayName = core_1.DISPLAYNAME_PREFIX + ".DateTimePicker";
    return DateTimePicker;
  }(core_1.AbstractPureComponent);
  exports.DateTimePicker = DateTimePicker;
});
System.registerDynamic("npm:@blueprintjs/datetime@3.6.0/lib/cjs/dateFormat.js", ["npm:@blueprintjs/datetime@3.6.0/lib/cjs/common/dateUtils.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var dateUtils_1 = $__require("npm:@blueprintjs/datetime@3.6.0/lib/cjs/common/dateUtils.js");
  function getFormattedDateString(date, props, ignoreRange) {
    if (ignoreRange === void 0) {
      ignoreRange = false;
    }
    if (date == null) {
      return "";
    } else if (!dateUtils_1.isDateValid(date)) {
      return props.invalidDateMessage;
    } else if (ignoreRange || dateUtils_1.isDayInRange(date, [props.minDate, props.maxDate])) {
      return props.formatDate(date, props.locale);
    } else {
      return props.outOfRangeMessage;
    }
  }
  exports.getFormattedDateString = getFormattedDateString;
});
System.registerDynamic("npm:@blueprintjs/datetime@3.6.0/lib/cjs/dateRangeInput.js", ["npm:tslib@1.9.3.js", "npm:classnames@2.2.6.js", "npm:react@16.7.0.js", "npm:react-day-picker@7.2.4.js", "npm:@blueprintjs/core@3.11.0.js", "npm:@blueprintjs/datetime@3.6.0/lib/cjs/common/dateUtils.js", "npm:@blueprintjs/datetime@3.6.0/lib/cjs/common/errors.js", "npm:@blueprintjs/datetime@3.6.0/lib/cjs/dateFormat.js", "npm:@blueprintjs/datetime@3.6.0/lib/cjs/datePickerCore.js", "npm:@blueprintjs/datetime@3.6.0/lib/cjs/dateRangePicker.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  var classnames_1 = tslib_1.__importDefault($__require("npm:classnames@2.2.6.js"));
  var React = tslib_1.__importStar($__require("npm:react@16.7.0.js"));
  var react_day_picker_1 = tslib_1.__importDefault($__require("npm:react-day-picker@7.2.4.js"));
  var core_1 = $__require("npm:@blueprintjs/core@3.11.0.js");
  var dateUtils_1 = $__require("npm:@blueprintjs/datetime@3.6.0/lib/cjs/common/dateUtils.js");
  var Errors = tslib_1.__importStar($__require("npm:@blueprintjs/datetime@3.6.0/lib/cjs/common/errors.js"));
  var dateFormat_1 = $__require("npm:@blueprintjs/datetime@3.6.0/lib/cjs/dateFormat.js");
  var datePickerCore_1 = $__require("npm:@blueprintjs/datetime@3.6.0/lib/cjs/datePickerCore.js");
  var dateRangePicker_1 = $__require("npm:@blueprintjs/datetime@3.6.0/lib/cjs/dateRangePicker.js");
  var DateRangeInput = function (_super) {
    tslib_1.__extends(DateRangeInput, _super);
    function DateRangeInput(props, context) {
      var _this = _super.call(this, props, context) || this;
      _this.refHandlers = {
        endInputRef: function (ref) {
          _this.endInputRef = ref;
          core_1.Utils.safeInvoke(_this.props.endInputProps.inputRef, ref);
        },
        startInputRef: function (ref) {
          _this.startInputRef = ref;
          core_1.Utils.safeInvoke(_this.props.startInputProps.inputRef, ref);
        }
      };
      _this.renderInputGroup = function (boundary) {
        var inputProps = _this.getInputProps(boundary);
        var handleInputEvent = boundary === core_1.Boundary.START ? _this.handleStartInputEvent : _this.handleEndInputEvent;
        return React.createElement(core_1.InputGroup, tslib_1.__assign({ autoComplete: "off" }, inputProps, {
          disabled: _this.props.disabled,
          intent: _this.isInputInErrorState(boundary) ? core_1.Intent.DANGER : inputProps.intent,
          inputRef: _this.getInputRef(boundary),
          onBlur: handleInputEvent,
          onChange: handleInputEvent,
          onClick: handleInputEvent,
          onFocus: handleInputEvent,
          onKeyDown: handleInputEvent,
          onMouseDown: handleInputEvent,
          placeholder: _this.getInputPlaceholderString(boundary),
          value: _this.getInputDisplayString(boundary)
        }));
      };
      _this.handleDateRangePickerChange = function (selectedRange, didSubmitWithEnter) {
        if (didSubmitWithEnter === void 0) {
          didSubmitWithEnter = false;
        }
        if (!_this.state.isOpen) {
          return;
        }
        var selectedStart = selectedRange[0],
            selectedEnd = selectedRange[1];
        var isOpen = true;
        var isStartInputFocused;
        var isEndInputFocused;
        var startHoverString;
        var endHoverString;
        if (selectedStart == null) {
          isStartInputFocused = true;
          isEndInputFocused = false;
          startHoverString = null;
        } else if (selectedEnd == null) {
          isStartInputFocused = false;
          isEndInputFocused = true;
          endHoverString = null;
        } else if (_this.props.closeOnSelection) {
          isOpen = false;
          isStartInputFocused = false;
          isEndInputFocused = didSubmitWithEnter ? true : false;
        } else if (_this.state.lastFocusedField === core_1.Boundary.START) {
          isStartInputFocused = true;
          isEndInputFocused = false;
        } else {
          isStartInputFocused = false;
          isEndInputFocused = true;
        }
        var baseStateChange = {
          endHoverString: endHoverString,
          endInputString: _this.formatDate(selectedEnd),
          isEndInputFocused: isEndInputFocused,
          isOpen: isOpen,
          isStartInputFocused: isStartInputFocused,
          startHoverString: startHoverString,
          startInputString: _this.formatDate(selectedStart),
          wasLastFocusChangeDueToHover: false
        };
        if (_this.isControlled()) {
          _this.setState(baseStateChange);
        } else {
          _this.setState(tslib_1.__assign({}, baseStateChange, {
            selectedEnd: selectedEnd,
            selectedStart: selectedStart
          }));
        }
        core_1.Utils.safeInvoke(_this.props.onChange, selectedRange);
      };
      _this.handleDateRangePickerHoverChange = function (hoveredRange, _hoveredDay, hoveredBoundary) {
        if (!_this.state.isOpen) {
          return;
        }
        if (hoveredRange == null) {
          var isEndInputFocused = _this.state.boundaryToModify === core_1.Boundary.END;
          _this.setState({
            endHoverString: null,
            isEndInputFocused: isEndInputFocused,
            isStartInputFocused: !isEndInputFocused,
            lastFocusedField: _this.state.boundaryToModify,
            startHoverString: null
          });
        } else {
          var hoveredStart = hoveredRange[0],
              hoveredEnd = hoveredRange[1];
          var isStartInputFocused = hoveredBoundary != null ? hoveredBoundary === core_1.Boundary.START : _this.state.isStartInputFocused;
          var isEndInputFocused = hoveredBoundary != null ? hoveredBoundary === core_1.Boundary.END : _this.state.isEndInputFocused;
          _this.setState({
            endHoverString: _this.formatDate(hoveredEnd),
            isEndInputFocused: isEndInputFocused,
            isStartInputFocused: isStartInputFocused,
            lastFocusedField: isStartInputFocused ? core_1.Boundary.START : core_1.Boundary.END,
            shouldSelectAfterUpdate: _this.props.selectAllOnFocus,
            startHoverString: _this.formatDate(hoveredStart),
            wasLastFocusChangeDueToHover: true
          });
        }
      };
      _this.handleStartInputEvent = function (e) {
        _this.handleInputEvent(e, core_1.Boundary.START);
      };
      _this.handleEndInputEvent = function (e) {
        _this.handleInputEvent(e, core_1.Boundary.END);
      };
      _this.handleInputEvent = function (e, boundary) {
        switch (e.type) {
          case "blur":
            _this.handleInputBlur(e, boundary);
            break;
          case "change":
            _this.handleInputChange(e, boundary);
            break;
          case "click":
            _this.handleInputClick(e);
            break;
          case "focus":
            _this.handleInputFocus(e, boundary);
            break;
          case "keydown":
            _this.handleInputKeyDown(e);
            break;
          case "mousedown":
            _this.handleInputMouseDown();
            break;
          default:
            break;
        }
        var inputProps = _this.getInputProps(boundary);
        var callbackFn = _this.getInputGroupCallbackForEvent(e, inputProps);
        core_1.Utils.safeInvoke(callbackFn, e);
      };
      _this.handleInputKeyDown = function (e) {
        var isTabPressed = e.which === core_1.Keys.TAB;
        var isEnterPressed = e.which === core_1.Keys.ENTER;
        var isShiftPressed = e.shiftKey;
        var _a = _this.state,
            selectedStart = _a.selectedStart,
            selectedEnd = _a.selectedEnd;
        var wasStartFieldFocused = _this.state.lastFocusedField === core_1.Boundary.START;
        var wasEndFieldFocused = _this.state.lastFocusedField === core_1.Boundary.END;
        if (isTabPressed) {
          var isEndInputFocused = void 0;
          var isStartInputFocused = void 0;
          var isOpen = true;
          if (wasStartFieldFocused && !isShiftPressed) {
            isStartInputFocused = false;
            isEndInputFocused = true;
            e.preventDefault();
          } else if (wasEndFieldFocused && isShiftPressed) {
            isStartInputFocused = true;
            isEndInputFocused = false;
            e.preventDefault();
          } else {
            isStartInputFocused = false;
            isEndInputFocused = false;
            isOpen = false;
          }
          _this.setState({
            isEndInputFocused: isEndInputFocused,
            isOpen: isOpen,
            isStartInputFocused: isStartInputFocused,
            wasLastFocusChangeDueToHover: false
          });
        } else if (wasStartFieldFocused && isEnterPressed) {
          var nextStartDate = _this.parseDate(_this.state.startInputString);
          _this.handleDateRangePickerChange([nextStartDate, selectedEnd], true);
        } else if (wasEndFieldFocused && isEnterPressed) {
          var nextEndDate = _this.parseDate(_this.state.endInputString);
          _this.handleDateRangePickerChange([selectedStart, nextEndDate], true);
        } else {
          return;
        }
      };
      _this.handleInputMouseDown = function () {
        _this.setState({ wasLastFocusChangeDueToHover: false });
      };
      _this.handleInputClick = function (e) {
        e.stopPropagation();
      };
      _this.handleInputFocus = function (_e, boundary) {
        var _a = _this.getStateKeysAndValuesForBoundary(boundary),
            keys = _a.keys,
            values = _a.values;
        var inputString = dateFormat_1.getFormattedDateString(values.selectedValue, _this.props, true);
        var boundaryToModify = _this.state.wasLastFocusChangeDueToHover ? _this.state.boundaryToModify : boundary;
        _this.setState((_b = {}, _b[keys.inputString] = inputString, _b[keys.isInputFocused] = true, _b.boundaryToModify = boundaryToModify, _b.isOpen = true, _b.lastFocusedField = boundary, _b.shouldSelectAfterUpdate = _this.props.selectAllOnFocus, _b.wasLastFocusChangeDueToHover = false, _b));
        var _b;
      };
      _this.handleInputBlur = function (_e, boundary) {
        var _a = _this.getStateKeysAndValuesForBoundary(boundary),
            keys = _a.keys,
            values = _a.values;
        var maybeNextDate = _this.parseDate(values.inputString);
        var isValueControlled = _this.isControlled();
        var nextState = (_b = {}, _b[keys.isInputFocused] = false, _b.shouldSelectAfterUpdate = false, _b);
        if (_this.isInputEmpty(values.inputString)) {
          if (isValueControlled) {
            nextState = tslib_1.__assign({}, nextState, (_c = {}, _c[keys.inputString] = dateFormat_1.getFormattedDateString(values.controlledValue, _this.props), _c));
          } else {
            nextState = tslib_1.__assign({}, nextState, (_d = {}, _d[keys.inputString] = null, _d[keys.selectedValue] = null, _d));
          }
        } else if (!_this.isNextDateRangeValid(maybeNextDate, boundary)) {
          if (!isValueControlled) {
            nextState = tslib_1.__assign({}, nextState, (_f = {}, _f[keys.inputString] = null, _f[keys.selectedValue] = maybeNextDate, _f));
          }
          core_1.Utils.safeInvoke(_this.props.onError, _this.getDateRangeForCallback(maybeNextDate, boundary));
        }
        _this.setState(nextState);
        var _b, _c, _d, _f;
      };
      _this.handleInputChange = function (e, boundary) {
        var inputString = e.target.value;
        var keys = _this.getStateKeysAndValuesForBoundary(boundary).keys;
        var maybeNextDate = _this.parseDate(inputString);
        var isValueControlled = _this.isControlled();
        var nextState = { shouldSelectAfterUpdate: false };
        if (inputString.length === 0) {
          var baseState = tslib_1.__assign({}, nextState, (_a = {}, _a[keys.inputString] = "", _a));
          if (isValueControlled) {
            nextState = baseState;
          } else {
            nextState = tslib_1.__assign({}, baseState, (_b = {}, _b[keys.selectedValue] = null, _b));
          }
          core_1.Utils.safeInvoke(_this.props.onChange, _this.getDateRangeForCallback(null, boundary));
        } else if (_this.isDateValidAndInRange(maybeNextDate)) {
          var baseState = tslib_1.__assign({}, nextState, (_c = {}, _c[keys.hoverString] = null, _c[keys.inputString] = inputString, _c));
          if (isValueControlled) {
            nextState = baseState;
          } else {
            nextState = tslib_1.__assign({}, baseState, (_d = {}, _d[keys.selectedValue] = maybeNextDate, _d));
          }
          if (_this.isNextDateRangeValid(maybeNextDate, boundary)) {
            core_1.Utils.safeInvoke(_this.props.onChange, _this.getDateRangeForCallback(maybeNextDate, boundary));
          }
        } else {
          nextState = tslib_1.__assign({}, nextState, (_f = {}, _f[keys.inputString] = inputString, _f[keys.hoverString] = null, _f));
        }
        _this.setState(nextState);
        var _a, _b, _c, _d, _f;
      };
      _this.handlePopoverClose = function () {
        _this.setState({ isOpen: false });
        core_1.Utils.safeInvoke(_this.props.popoverProps.onClose);
      };
      _this.getInitialRange = function (props) {
        if (props === void 0) {
          props = _this.props;
        }
        var defaultValue = props.defaultValue,
            value = props.value;
        if (value != null) {
          return value;
        } else if (defaultValue != null) {
          return defaultValue;
        } else {
          return [null, null];
        }
      };
      _this.getSelectedRange = function () {
        var selectedStart;
        var selectedEnd;
        if (_this.isControlled()) {
          _a = _this.props.value, selectedStart = _a[0], selectedEnd = _a[1];
        } else {
          selectedStart = _this.state.selectedStart;
          selectedEnd = _this.state.selectedEnd;
        }
        var doBoundaryDatesOverlap = _this.doBoundaryDatesOverlap(selectedStart, core_1.Boundary.START);
        var dateRange = [selectedStart, doBoundaryDatesOverlap ? undefined : selectedEnd];
        return dateRange.map(function (selectedBound) {
          return _this.isDateValidAndInRange(selectedBound) ? selectedBound : undefined;
        });
        var _a;
      };
      _this.getInputGroupCallbackForEvent = function (e, inputProps) {
        switch (e.type) {
          case "blur":
            return inputProps.onBlur;
          case "change":
            return inputProps.onChange;
          case "click":
            return inputProps.onClick;
          case "focus":
            return inputProps.onFocus;
          case "keydown":
            return inputProps.onKeyDown;
          case "mousedown":
            return inputProps.onMouseDown;
          default:
            return undefined;
        }
      };
      _this.getInputDisplayString = function (boundary) {
        var values = _this.getStateKeysAndValuesForBoundary(boundary).values;
        var isInputFocused = values.isInputFocused,
            inputString = values.inputString,
            selectedValue = values.selectedValue,
            hoverString = values.hoverString;
        if (hoverString != null) {
          return hoverString;
        } else if (isInputFocused) {
          return inputString == null ? "" : inputString;
        } else if (selectedValue == null) {
          return "";
        } else if (_this.doesEndBoundaryOverlapStartBoundary(selectedValue, boundary)) {
          return _this.props.overlappingDatesMessage;
        } else {
          return dateFormat_1.getFormattedDateString(selectedValue, _this.props);
        }
      };
      _this.getInputPlaceholderString = function (boundary) {
        var isStartBoundary = boundary === core_1.Boundary.START;
        var isEndBoundary = boundary === core_1.Boundary.END;
        var inputProps = _this.getInputProps(boundary);
        var isInputFocused = _this.getStateKeysAndValuesForBoundary(boundary).values.isInputFocused;
        if (inputProps.placeholder != null) {
          return inputProps.placeholder;
        } else if (isStartBoundary) {
          return isInputFocused ? _this.state.formattedMinDateString : "Start date";
        } else if (isEndBoundary) {
          return isInputFocused ? _this.state.formattedMaxDateString : "End date";
        } else {
          return "";
        }
      };
      _this.getInputProps = function (boundary) {
        return boundary === core_1.Boundary.START ? _this.props.startInputProps : _this.props.endInputProps;
      };
      _this.getInputRef = function (boundary) {
        return boundary === core_1.Boundary.START ? _this.refHandlers.startInputRef : _this.refHandlers.endInputRef;
      };
      _this.getStateKeysAndValuesForBoundary = function (boundary) {
        var controlledRange = _this.props.value;
        if (boundary === core_1.Boundary.START) {
          return {
            keys: {
              hoverString: "startHoverString",
              inputString: "startInputString",
              isInputFocused: "isStartInputFocused",
              selectedValue: "selectedStart"
            },
            values: {
              controlledValue: controlledRange != null ? controlledRange[0] : undefined,
              hoverString: _this.state.startHoverString,
              inputString: _this.state.startInputString,
              isInputFocused: _this.state.isStartInputFocused,
              selectedValue: _this.state.selectedStart
            }
          };
        } else {
          return {
            keys: {
              hoverString: "endHoverString",
              inputString: "endInputString",
              isInputFocused: "isEndInputFocused",
              selectedValue: "selectedEnd"
            },
            values: {
              controlledValue: controlledRange != null ? controlledRange[1] : undefined,
              hoverString: _this.state.endHoverString,
              inputString: _this.state.endInputString,
              isInputFocused: _this.state.isEndInputFocused,
              selectedValue: _this.state.selectedEnd
            }
          };
        }
      };
      _this.getDateRangeForCallback = function (currDate, currBoundary) {
        var otherBoundary = _this.getOtherBoundary(currBoundary);
        var otherDate = _this.getStateKeysAndValuesForBoundary(otherBoundary).values.selectedValue;
        return currBoundary === core_1.Boundary.START ? [currDate, otherDate] : [otherDate, currDate];
      };
      _this.getOtherBoundary = function (boundary) {
        return boundary === core_1.Boundary.START ? core_1.Boundary.END : core_1.Boundary.START;
      };
      _this.doBoundaryDatesOverlap = function (date, boundary) {
        var allowSingleDayRange = _this.props.allowSingleDayRange;
        var otherBoundary = _this.getOtherBoundary(boundary);
        var otherBoundaryDate = _this.getStateKeysAndValuesForBoundary(otherBoundary).values.selectedValue;
        if (date == null || otherBoundaryDate == null) {
          return false;
        }
        if (boundary === core_1.Boundary.START) {
          var isAfter = react_day_picker_1.default.DateUtils.isDayAfter(date, otherBoundaryDate);
          return isAfter || !allowSingleDayRange && react_day_picker_1.default.DateUtils.isSameDay(date, otherBoundaryDate);
        } else {
          var isBefore = react_day_picker_1.default.DateUtils.isDayBefore(date, otherBoundaryDate);
          return isBefore || !allowSingleDayRange && react_day_picker_1.default.DateUtils.isSameDay(date, otherBoundaryDate);
        }
      };
      _this.doesEndBoundaryOverlapStartBoundary = function (boundaryDate, boundary) {
        return boundary === core_1.Boundary.START ? false : _this.doBoundaryDatesOverlap(boundaryDate, boundary);
      };
      _this.isControlled = function () {
        return _this.props.value !== undefined;
      };
      _this.isInputEmpty = function (inputString) {
        return inputString == null || inputString.length === 0;
      };
      _this.isInputInErrorState = function (boundary) {
        var values = _this.getStateKeysAndValuesForBoundary(boundary).values;
        var isInputFocused = values.isInputFocused,
            hoverString = values.hoverString,
            inputString = values.inputString,
            selectedValue = values.selectedValue;
        if (hoverString != null || _this.isInputEmpty(inputString)) {
          return false;
        }
        var boundaryValue = isInputFocused ? _this.parseDate(inputString) : selectedValue;
        return boundaryValue != null && (!_this.isDateValidAndInRange(boundaryValue) || _this.doesEndBoundaryOverlapStartBoundary(boundaryValue, boundary));
      };
      _this.isDateValidAndInRange = function (date) {
        return dateUtils_1.isDateValid(date) && dateUtils_1.isDayInRange(date, [_this.props.minDate, _this.props.maxDate]);
      };
      _this.reset(props);
      return _this;
    }
    DateRangeInput.prototype.reset = function (props) {
      if (props === void 0) {
        props = this.props;
      }
      var _a = this.getInitialRange(),
          selectedStart = _a[0],
          selectedEnd = _a[1];
      this.state = {
        formattedMaxDateString: this.getFormattedMinMaxDateString(props, "maxDate"),
        formattedMinDateString: this.getFormattedMinMaxDateString(props, "minDate"),
        isOpen: false,
        selectedEnd: selectedEnd,
        selectedStart: selectedStart
      };
    };
    DateRangeInput.prototype.componentDidUpdate = function () {
      var _a = this.state,
          isStartInputFocused = _a.isStartInputFocused,
          isEndInputFocused = _a.isEndInputFocused,
          shouldSelectAfterUpdate = _a.shouldSelectAfterUpdate;
      var shouldFocusStartInput = this.shouldFocusInputRef(isStartInputFocused, this.startInputRef);
      var shouldFocusEndInput = this.shouldFocusInputRef(isEndInputFocused, this.endInputRef);
      if (shouldFocusStartInput) {
        this.startInputRef.focus();
      } else if (shouldFocusEndInput) {
        this.endInputRef.focus();
      }
      if (isStartInputFocused && shouldSelectAfterUpdate) {
        this.startInputRef.select();
      } else if (isEndInputFocused && shouldSelectAfterUpdate) {
        this.endInputRef.select();
      }
    };
    DateRangeInput.prototype.render = function () {
      var _a = this.props.popoverProps,
          popoverProps = _a === void 0 ? {} : _a;
      var popoverContent = React.createElement(dateRangePicker_1.DateRangePicker, tslib_1.__assign({}, this.props, {
        boundaryToModify: this.state.boundaryToModify,
        onChange: this.handleDateRangePickerChange,
        onHoverChange: this.handleDateRangePickerHoverChange,
        value: this.getSelectedRange()
      }));
      var popoverClassName = classnames_1.default(popoverProps.className, this.props.className);
      return React.createElement(core_1.Popover, tslib_1.__assign({
        isOpen: this.state.isOpen,
        position: core_1.Position.BOTTOM_LEFT
      }, this.props.popoverProps, {
        autoFocus: false,
        className: popoverClassName,
        content: popoverContent,
        enforceFocus: false,
        onClose: this.handlePopoverClose
      }), React.createElement("div", { className: core_1.Classes.CONTROL_GROUP }, this.renderInputGroup(core_1.Boundary.START), this.renderInputGroup(core_1.Boundary.END)));
    };
    DateRangeInput.prototype.componentWillReceiveProps = function (nextProps) {
      _super.prototype.componentWillReceiveProps.call(this, nextProps);
      var nextState = {};
      if (nextProps.value !== this.props.value) {
        var _a = this.getInitialRange(nextProps),
            selectedStart = _a[0],
            selectedEnd = _a[1];
        nextState = tslib_1.__assign({}, nextState, {
          selectedStart: selectedStart,
          selectedEnd: selectedEnd
        });
      }
      if (nextProps.minDate !== this.props.minDate) {
        var formattedMinDateString = this.getFormattedMinMaxDateString(nextProps, "minDate");
        nextState = tslib_1.__assign({}, nextState, { formattedMinDateString: formattedMinDateString });
      }
      if (nextProps.maxDate !== this.props.maxDate) {
        var formattedMaxDateString = this.getFormattedMinMaxDateString(nextProps, "maxDate");
        nextState = tslib_1.__assign({}, nextState, { formattedMaxDateString: formattedMaxDateString });
      }
      this.setState(nextState);
    };
    DateRangeInput.prototype.validateProps = function (props) {
      if (props.value === null) {
        throw new Error(Errors.DATERANGEINPUT_NULL_VALUE);
      }
    };
    DateRangeInput.prototype.shouldFocusInputRef = function (isFocused, inputRef) {
      return isFocused && inputRef !== undefined && document.activeElement !== inputRef;
    };
    DateRangeInput.prototype.isNextDateRangeValid = function (nextDate, boundary) {
      return this.isDateValidAndInRange(nextDate) && !this.doBoundaryDatesOverlap(nextDate, boundary);
    };
    DateRangeInput.prototype.getFormattedMinMaxDateString = function (props, propName) {
      var date = props[propName];
      var defaultDate = DateRangeInput.defaultProps[propName];
      return dateFormat_1.getFormattedDateString(date === undefined ? defaultDate : date, this.props);
    };
    DateRangeInput.prototype.parseDate = function (dateString) {
      if (dateString === this.props.outOfRangeMessage || dateString === this.props.invalidDateMessage) {
        return null;
      }
      var _a = this.props,
          locale = _a.locale,
          parseDate = _a.parseDate;
      var newDate = parseDate(dateString, locale);
      return newDate === false ? new Date(undefined) : newDate;
    };
    DateRangeInput.prototype.formatDate = function (date) {
      if (!this.isDateValidAndInRange(date)) {
        return "";
      }
      var _a = this.props,
          locale = _a.locale,
          formatDate = _a.formatDate;
      return formatDate(date, locale);
    };
    DateRangeInput.defaultProps = {
      allowSingleDayRange: false,
      closeOnSelection: true,
      contiguousCalendarMonths: true,
      dayPickerProps: {},
      disabled: false,
      endInputProps: {},
      invalidDateMessage: "Invalid date",
      maxDate: datePickerCore_1.getDefaultMaxDate(),
      minDate: datePickerCore_1.getDefaultMinDate(),
      outOfRangeMessage: "Out of range",
      overlappingDatesMessage: "Overlapping dates",
      popoverProps: {},
      selectAllOnFocus: false,
      shortcuts: true,
      singleMonthOnly: false,
      startInputProps: {}
    };
    DateRangeInput.displayName = core_1.DISPLAYNAME_PREFIX + ".DateRangeInput";
    return DateRangeInput;
  }(core_1.AbstractPureComponent);
  exports.DateRangeInput = DateRangeInput;
});
System.registerDynamic("npm:react-day-picker@7.2.4/lib/src/Caption.js", ["npm:react@16.7.0.js", "npm:prop-types@15.6.2.js", "npm:react-day-picker@7.2.4/lib/src/LocaleUtils.js", "npm:react-day-picker@7.2.4/lib/src/keys.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    Object.defineProperty(exports, "__esModule", { value: true });
    var _createClass = function () {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor) descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      return function (Constructor, protoProps, staticProps) {
        if (protoProps) defineProperties(Constructor.prototype, protoProps);
        if (staticProps) defineProperties(Constructor, staticProps);
        return Constructor;
      };
    }();
    var _react = $__require("npm:react@16.7.0.js");
    var _react2 = _interopRequireDefault(_react);
    var _propTypes = $__require("npm:prop-types@15.6.2.js");
    var _propTypes2 = _interopRequireDefault(_propTypes);
    var _LocaleUtils = $__require("npm:react-day-picker@7.2.4/lib/src/LocaleUtils.js");
    var _LocaleUtils2 = _interopRequireDefault(_LocaleUtils);
    var _keys = $__require("npm:react-day-picker@7.2.4/lib/src/keys.js");
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _possibleConstructorReturn(self, call) {
      if (!self) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return call && (typeof call === "object" || typeof call === "function") ? call : self;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: {
          value: subClass,
          enumerable: false,
          writable: true,
          configurable: true
        } });
      if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    var Caption = function (_Component) {
      _inherits(Caption, _Component);
      function Caption(props) {
        _classCallCheck(this, Caption);
        var _this = _possibleConstructorReturn(this, (Caption.__proto__ || Object.getPrototypeOf(Caption)).call(this, props));
        _this.handleKeyUp = _this.handleKeyUp.bind(_this);
        return _this;
      }
      _createClass(Caption, [{
        key: 'shouldComponentUpdate',
        value: function shouldComponentUpdate(nextProps) {
          return nextProps.locale !== this.props.locale || nextProps.classNames !== this.props.classNames || nextProps.date.getMonth() !== this.props.date.getMonth() || nextProps.date.getFullYear() !== this.props.date.getFullYear();
        }
      }, {
        key: 'handleKeyUp',
        value: function handleKeyUp(e) {
          if (e.keyCode === _keys.ENTER) {
            this.props.onClick(e);
          }
        }
      }, {
        key: 'render',
        value: function render() {
          var _props = this.props,
              classNames = _props.classNames,
              date = _props.date,
              months = _props.months,
              locale = _props.locale,
              localeUtils = _props.localeUtils,
              onClick = _props.onClick;
          return _react2.default.createElement('div', {
            className: classNames.caption,
            role: 'heading'
          }, _react2.default.createElement('div', {
            onClick: onClick,
            onKeyUp: this.handleKeyUp
          }, months ? months[date.getMonth()] + ' ' + date.getFullYear() : localeUtils.formatMonthTitle(date, locale)));
        }
      }]);
      return Caption;
    }(_react.Component);
    Caption.defaultProps = { localeUtils: _LocaleUtils2.default };
    exports.default = Caption;
    Caption.propTypes = "production" !== "production" ? {
      date: _propTypes2.default.instanceOf(Date),
      months: _propTypes2.default.arrayOf(_propTypes2.default.string),
      locale: _propTypes2.default.string,
      localeUtils: _propTypes2.default.object,
      onClick: _propTypes2.default.func,
      classNames: _propTypes2.default.shape({ caption: _propTypes2.default.string.isRequired }).isRequired
    } : {};
  })($__require("github:jspm/nodelibs-process@0.1.2.js"));
});
System.registerDynamic("npm:react-day-picker@7.2.4/lib/src/Weekdays.js", ["npm:react@16.7.0.js", "npm:prop-types@15.6.2.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    Object.defineProperty(exports, "__esModule", { value: true });
    var _createClass = function () {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor) descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      return function (Constructor, protoProps, staticProps) {
        if (protoProps) defineProperties(Constructor.prototype, protoProps);
        if (staticProps) defineProperties(Constructor, staticProps);
        return Constructor;
      };
    }();
    var _react = $__require("npm:react@16.7.0.js");
    var _react2 = _interopRequireDefault(_react);
    var _propTypes = $__require("npm:prop-types@15.6.2.js");
    var _propTypes2 = _interopRequireDefault(_propTypes);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _possibleConstructorReturn(self, call) {
      if (!self) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return call && (typeof call === "object" || typeof call === "function") ? call : self;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: {
          value: subClass,
          enumerable: false,
          writable: true,
          configurable: true
        } });
      if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    var Weekdays = function (_Component) {
      _inherits(Weekdays, _Component);
      function Weekdays() {
        _classCallCheck(this, Weekdays);
        return _possibleConstructorReturn(this, (Weekdays.__proto__ || Object.getPrototypeOf(Weekdays)).apply(this, arguments));
      }
      _createClass(Weekdays, [{
        key: 'shouldComponentUpdate',
        value: function shouldComponentUpdate(nextProps) {
          return this.props !== nextProps;
        }
      }, {
        key: 'render',
        value: function render() {
          var _props = this.props,
              classNames = _props.classNames,
              firstDayOfWeek = _props.firstDayOfWeek,
              showWeekNumbers = _props.showWeekNumbers,
              weekdaysLong = _props.weekdaysLong,
              weekdaysShort = _props.weekdaysShort,
              locale = _props.locale,
              localeUtils = _props.localeUtils,
              weekdayElement = _props.weekdayElement;
          var days = [];
          for (var i = 0; i < 7; i += 1) {
            var weekday = (i + firstDayOfWeek) % 7;
            var elementProps = {
              key: i,
              className: classNames.weekday,
              weekday: weekday,
              weekdaysLong: weekdaysLong,
              weekdaysShort: weekdaysShort,
              localeUtils: localeUtils,
              locale: locale
            };
            var element = _react2.default.isValidElement(weekdayElement) ? _react2.default.cloneElement(weekdayElement, elementProps) : _react2.default.createElement(weekdayElement, elementProps);
            days.push(element);
          }
          return _react2.default.createElement('div', {
            className: classNames.weekdays,
            role: 'rowgroup'
          }, _react2.default.createElement('div', {
            className: classNames.weekdaysRow,
            role: 'row'
          }, showWeekNumbers && _react2.default.createElement('div', { className: classNames.weekday }), days));
        }
      }]);
      return Weekdays;
    }(_react.Component);
    exports.default = Weekdays;
    Weekdays.propTypes = "production" !== "production" ? {
      classNames: _propTypes2.default.shape({
        weekday: _propTypes2.default.string.isRequired,
        weekdays: _propTypes2.default.string.isRequired,
        weekdaysRow: _propTypes2.default.string.isRequired
      }).isRequired,
      firstDayOfWeek: _propTypes2.default.number.isRequired,
      weekdaysLong: _propTypes2.default.arrayOf(_propTypes2.default.string),
      weekdaysShort: _propTypes2.default.arrayOf(_propTypes2.default.string),
      showWeekNumbers: _propTypes2.default.bool,
      locale: _propTypes2.default.string.isRequired,
      localeUtils: _propTypes2.default.object.isRequired,
      weekdayElement: _propTypes2.default.oneOfType([_propTypes2.default.element, _propTypes2.default.func, _propTypes2.default.instanceOf(_react2.default.Component)])
    } : {};
  })($__require("github:jspm/nodelibs-process@0.1.2.js"));
});
System.registerDynamic("npm:react-day-picker@7.2.4/lib/src/Day.js", ["npm:react@16.7.0.js", "npm:prop-types@15.6.2.js", "npm:react-day-picker@7.2.4/lib/src/DateUtils.js", "npm:react-day-picker@7.2.4/lib/src/Helpers.js", "npm:react-day-picker@7.2.4/lib/src/classNames.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    Object.defineProperty(exports, "__esModule", { value: true });
    var _extends = Object.assign || function (target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    var _createClass = function () {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor) descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      return function (Constructor, protoProps, staticProps) {
        if (protoProps) defineProperties(Constructor.prototype, protoProps);
        if (staticProps) defineProperties(Constructor, staticProps);
        return Constructor;
      };
    }();
    var _react = $__require("npm:react@16.7.0.js");
    var _react2 = _interopRequireDefault(_react);
    var _propTypes = $__require("npm:prop-types@15.6.2.js");
    var _propTypes2 = _interopRequireDefault(_propTypes);
    var _DateUtils = $__require("npm:react-day-picker@7.2.4/lib/src/DateUtils.js");
    var _Helpers = $__require("npm:react-day-picker@7.2.4/lib/src/Helpers.js");
    var _classNames = $__require("npm:react-day-picker@7.2.4/lib/src/classNames.js");
    var _classNames2 = _interopRequireDefault(_classNames);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _possibleConstructorReturn(self, call) {
      if (!self) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return call && (typeof call === "object" || typeof call === "function") ? call : self;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: {
          value: subClass,
          enumerable: false,
          writable: true,
          configurable: true
        } });
      if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    function handleEvent(handler, day, modifiers) {
      if (!handler) {
        return undefined;
      }
      return function (e) {
        e.persist();
        handler(day, modifiers, e);
      };
    }
    var Day = function (_Component) {
      _inherits(Day, _Component);
      function Day() {
        _classCallCheck(this, Day);
        return _possibleConstructorReturn(this, (Day.__proto__ || Object.getPrototypeOf(Day)).apply(this, arguments));
      }
      _createClass(Day, [{
        key: 'shouldComponentUpdate',
        value: function shouldComponentUpdate(nextProps) {
          var _this2 = this;
          var propNames = Object.keys(this.props);
          var nextPropNames = Object.keys(nextProps);
          if (propNames.length !== nextPropNames.length) {
            return true;
          }
          return propNames.some(function (name) {
            if (name === 'modifiers' || name === 'modifiersStyles' || name === 'classNames') {
              var prop = _this2.props[name];
              var nextProp = nextProps[name];
              var modifiers = Object.keys(prop);
              var nextModifiers = Object.keys(nextProp);
              if (modifiers.length !== nextModifiers.length) {
                return true;
              }
              return modifiers.some(function (mod) {
                return !(0, _Helpers.hasOwnProp)(nextProp, mod) || prop[mod] !== nextProp[mod];
              });
            }
            if (name === 'day') {
              return !(0, _DateUtils.isSameDay)(_this2.props[name], nextProps[name]);
            }
            return !(0, _Helpers.hasOwnProp)(nextProps, name) || _this2.props[name] !== nextProps[name];
          });
        }
      }, {
        key: 'render',
        value: function render() {
          var _props = this.props,
              classNames = _props.classNames,
              modifiersStyles = _props.modifiersStyles,
              day = _props.day,
              tabIndex = _props.tabIndex,
              empty = _props.empty,
              modifiers = _props.modifiers,
              onMouseEnter = _props.onMouseEnter,
              onMouseLeave = _props.onMouseLeave,
              onMouseUp = _props.onMouseUp,
              onMouseDown = _props.onMouseDown,
              onClick = _props.onClick,
              onKeyDown = _props.onKeyDown,
              onTouchStart = _props.onTouchStart,
              onTouchEnd = _props.onTouchEnd,
              onFocus = _props.onFocus,
              ariaLabel = _props.ariaLabel,
              ariaDisabled = _props.ariaDisabled,
              ariaSelected = _props.ariaSelected,
              children = _props.children;
          var className = classNames.day;
          if (classNames !== _classNames2.default) {
            className += ' ' + Object.keys(modifiers).join(' ');
          } else {
            className += Object.keys(modifiers).map(function (modifier) {
              return ' ' + className + '--' + modifier;
            }).join('');
          }
          var style = void 0;
          if (modifiersStyles) {
            Object.keys(modifiers).filter(function (modifier) {
              return !!modifiersStyles[modifier];
            }).forEach(function (modifier) {
              style = _extends({}, style, modifiersStyles[modifier]);
            });
          }
          if (empty) {
            return _react2.default.createElement('div', {
              'aria-disabled': true,
              className: className,
              style: style
            });
          }
          return _react2.default.createElement('div', {
            className: className,
            tabIndex: tabIndex,
            style: style,
            role: 'gridcell',
            'aria-label': ariaLabel,
            'aria-disabled': ariaDisabled,
            'aria-selected': ariaSelected,
            onClick: handleEvent(onClick, day, modifiers),
            onKeyDown: handleEvent(onKeyDown, day, modifiers),
            onMouseEnter: handleEvent(onMouseEnter, day, modifiers),
            onMouseLeave: handleEvent(onMouseLeave, day, modifiers),
            onMouseUp: handleEvent(onMouseUp, day, modifiers),
            onMouseDown: handleEvent(onMouseDown, day, modifiers),
            onTouchEnd: handleEvent(onTouchEnd, day, modifiers),
            onTouchStart: handleEvent(onTouchStart, day, modifiers),
            onFocus: handleEvent(onFocus, day, modifiers)
          }, children);
        }
      }]);
      return Day;
    }(_react.Component);
    Day.defaultProps = { tabIndex: -1 };
    Day.defaultProps = {
      modifiers: {},
      modifiersStyles: {},
      empty: false
    };
    exports.default = Day;
    Day.propTypes = "production" !== "production" ? {
      classNames: _propTypes2.default.shape({ day: _propTypes2.default.string.isRequired }).isRequired,
      day: _propTypes2.default.instanceOf(Date).isRequired,
      children: _propTypes2.default.node.isRequired,
      ariaDisabled: _propTypes2.default.bool,
      ariaLabel: _propTypes2.default.string,
      ariaSelected: _propTypes2.default.bool,
      empty: _propTypes2.default.bool,
      modifiers: _propTypes2.default.object,
      modifiersStyles: _propTypes2.default.object,
      onClick: _propTypes2.default.func,
      onKeyDown: _propTypes2.default.func,
      onMouseEnter: _propTypes2.default.func,
      onMouseLeave: _propTypes2.default.func,
      onMouseDown: _propTypes2.default.func,
      onMouseUp: _propTypes2.default.func,
      onTouchEnd: _propTypes2.default.func,
      onTouchStart: _propTypes2.default.func,
      onFocus: _propTypes2.default.func,
      tabIndex: _propTypes2.default.number
    } : {};
  })($__require("github:jspm/nodelibs-process@0.1.2.js"));
});
System.registerDynamic("npm:react-day-picker@7.2.4/lib/src/Month.js", ["npm:react@16.7.0.js", "npm:prop-types@15.6.2.js", "npm:react-day-picker@7.2.4/lib/src/Weekdays.js", "npm:react-day-picker@7.2.4/lib/src/Day.js", "npm:react-day-picker@7.2.4/lib/src/keys.js", "npm:react-day-picker@7.2.4/lib/src/ModifiersUtils.js", "npm:react-day-picker@7.2.4/lib/src/Helpers.js", "npm:react-day-picker@7.2.4/lib/src/DateUtils.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    Object.defineProperty(exports, "__esModule", { value: true });
    var _createClass = function () {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor) descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      return function (Constructor, protoProps, staticProps) {
        if (protoProps) defineProperties(Constructor.prototype, protoProps);
        if (staticProps) defineProperties(Constructor, staticProps);
        return Constructor;
      };
    }();
    var _react = $__require("npm:react@16.7.0.js");
    var _react2 = _interopRequireDefault(_react);
    var _propTypes = $__require("npm:prop-types@15.6.2.js");
    var _propTypes2 = _interopRequireDefault(_propTypes);
    var _Weekdays = $__require("npm:react-day-picker@7.2.4/lib/src/Weekdays.js");
    var _Weekdays2 = _interopRequireDefault(_Weekdays);
    var _Day = $__require("npm:react-day-picker@7.2.4/lib/src/Day.js");
    var _Day2 = _interopRequireDefault(_Day);
    var _keys = $__require("npm:react-day-picker@7.2.4/lib/src/keys.js");
    var _ModifiersUtils = $__require("npm:react-day-picker@7.2.4/lib/src/ModifiersUtils.js");
    var ModifiersUtils = _interopRequireWildcard(_ModifiersUtils);
    var _Helpers = $__require("npm:react-day-picker@7.2.4/lib/src/Helpers.js");
    var Helpers = _interopRequireWildcard(_Helpers);
    var _DateUtils = $__require("npm:react-day-picker@7.2.4/lib/src/DateUtils.js");
    var DateUtils = _interopRequireWildcard(_DateUtils);
    function _interopRequireWildcard(obj) {
      if (obj && obj.__esModule) {
        return obj;
      } else {
        var newObj = {};
        if (obj != null) {
          for (var key in obj) {
            if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
          }
        }
        newObj.default = obj;
        return newObj;
      }
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _possibleConstructorReturn(self, call) {
      if (!self) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return call && (typeof call === "object" || typeof call === "function") ? call : self;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: {
          value: subClass,
          enumerable: false,
          writable: true,
          configurable: true
        } });
      if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    var Month = function (_Component) {
      _inherits(Month, _Component);
      function Month() {
        var _ref;
        var _temp, _this, _ret;
        _classCallCheck(this, Month);
        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Month.__proto__ || Object.getPrototypeOf(Month)).call.apply(_ref, [this].concat(args))), _this), _this.renderDay = function (day) {
          var monthNumber = _this.props.month.getMonth();
          var propModifiers = Helpers.getModifiersFromProps(_this.props);
          var dayModifiers = ModifiersUtils.getModifiersForDay(day, propModifiers);
          if (DateUtils.isSameDay(day, new Date()) && !Object.prototype.hasOwnProperty.call(propModifiers, _this.props.classNames.today)) {
            dayModifiers.push(_this.props.classNames.today);
          }
          if (day.getMonth() !== monthNumber) {
            dayModifiers.push(_this.props.classNames.outside);
          }
          var isOutside = day.getMonth() !== monthNumber;
          var tabIndex = -1;
          if (_this.props.onDayClick && !isOutside && day.getDate() === 1) {
            tabIndex = _this.props.tabIndex;
          }
          var key = '' + day.getFullYear() + day.getMonth() + day.getDate();
          var modifiers = {};
          dayModifiers.forEach(function (modifier) {
            modifiers[modifier] = true;
          });
          return _react2.default.createElement(_Day2.default, {
            key: '' + (isOutside ? 'outside-' : '') + key,
            classNames: _this.props.classNames,
            day: day,
            modifiers: modifiers,
            modifiersStyles: _this.props.modifiersStyles,
            empty: isOutside && !_this.props.showOutsideDays && !_this.props.fixedWeeks,
            tabIndex: tabIndex,
            ariaLabel: _this.props.localeUtils.formatDay(day, _this.props.locale),
            ariaDisabled: isOutside || dayModifiers.indexOf('disabled') > -1,
            ariaSelected: dayModifiers.indexOf('selected') > -1,
            onClick: _this.props.onDayClick,
            onFocus: _this.props.onDayFocus,
            onKeyDown: _this.props.onDayKeyDown,
            onMouseEnter: _this.props.onDayMouseEnter,
            onMouseLeave: _this.props.onDayMouseLeave,
            onMouseDown: _this.props.onDayMouseDown,
            onMouseUp: _this.props.onDayMouseUp,
            onTouchEnd: _this.props.onDayTouchEnd,
            onTouchStart: _this.props.onDayTouchStart
          }, _this.props.renderDay(day, modifiers));
        }, _temp), _possibleConstructorReturn(_this, _ret);
      }
      _createClass(Month, [{
        key: 'render',
        value: function render() {
          var _this2 = this;
          var _props = this.props,
              classNames = _props.classNames,
              month = _props.month,
              months = _props.months,
              fixedWeeks = _props.fixedWeeks,
              captionElement = _props.captionElement,
              weekdayElement = _props.weekdayElement,
              locale = _props.locale,
              localeUtils = _props.localeUtils,
              weekdaysLong = _props.weekdaysLong,
              weekdaysShort = _props.weekdaysShort,
              firstDayOfWeek = _props.firstDayOfWeek,
              onCaptionClick = _props.onCaptionClick,
              showWeekNumbers = _props.showWeekNumbers,
              showWeekDays = _props.showWeekDays,
              onWeekClick = _props.onWeekClick;
          var captionProps = {
            date: month,
            classNames: classNames,
            months: months,
            localeUtils: localeUtils,
            locale: locale,
            onClick: onCaptionClick ? function (e) {
              return onCaptionClick(month, e);
            } : undefined
          };
          var caption = _react2.default.isValidElement(captionElement) ? _react2.default.cloneElement(captionElement, captionProps) : _react2.default.createElement(captionElement, captionProps);
          var weeks = Helpers.getWeekArray(month, firstDayOfWeek, fixedWeeks);
          return _react2.default.createElement('div', {
            className: classNames.month,
            role: 'grid'
          }, caption, showWeekDays && _react2.default.createElement(_Weekdays2.default, {
            classNames: classNames,
            weekdaysShort: weekdaysShort,
            weekdaysLong: weekdaysLong,
            firstDayOfWeek: firstDayOfWeek,
            showWeekNumbers: showWeekNumbers,
            locale: locale,
            localeUtils: localeUtils,
            weekdayElement: weekdayElement
          }), _react2.default.createElement('div', {
            className: classNames.body,
            role: 'rowgroup'
          }, weeks.map(function (week) {
            var weekNumber = void 0;
            if (showWeekNumbers) {
              weekNumber = DateUtils.getWeekNumber(week[6]);
            }
            return _react2.default.createElement('div', {
              key: week[0].getTime(),
              className: classNames.week,
              role: 'row'
            }, showWeekNumbers && _react2.default.createElement('div', {
              className: classNames.weekNumber,
              tabIndex: 0,
              role: 'gridcell',
              onClick: onWeekClick ? function (e) {
                return onWeekClick(weekNumber, week, e);
              } : undefined,
              onKeyUp: onWeekClick ? function (e) {
                return e.keyCode === _keys.ENTER && onWeekClick(weekNumber, week, e);
              } : undefined
            }, _this2.props.renderWeek(weekNumber, week, month)), week.map(_this2.renderDay));
          })));
        }
      }]);
      return Month;
    }(_react.Component);
    exports.default = Month;
    Month.propTypes = "production" !== "production" ? {
      classNames: _propTypes2.default.shape({
        body: _propTypes2.default.string.isRequired,
        month: _propTypes2.default.string.isRequired,
        outside: _propTypes2.default.string.isRequired,
        today: _propTypes2.default.string.isRequired,
        week: _propTypes2.default.string.isRequired
      }).isRequired,
      tabIndex: _propTypes2.default.number,
      month: _propTypes2.default.instanceOf(Date).isRequired,
      months: _propTypes2.default.arrayOf(_propTypes2.default.string),
      modifiersStyles: _propTypes2.default.object,
      showWeekDays: _propTypes2.default.bool,
      showOutsideDays: _propTypes2.default.bool,
      renderDay: _propTypes2.default.func.isRequired,
      renderWeek: _propTypes2.default.func.isRequired,
      captionElement: _propTypes2.default.oneOfType([_propTypes2.default.element, _propTypes2.default.func, _propTypes2.default.instanceOf(_react2.default.Component)]).isRequired,
      weekdayElement: _propTypes2.default.oneOfType([_propTypes2.default.element, _propTypes2.default.func, _propTypes2.default.instanceOf(_react2.default.Component)]),
      fixedWeeks: _propTypes2.default.bool,
      showWeekNumbers: _propTypes2.default.bool,
      locale: _propTypes2.default.string.isRequired,
      localeUtils: _propTypes2.default.object.isRequired,
      weekdaysLong: _propTypes2.default.arrayOf(_propTypes2.default.string),
      weekdaysShort: _propTypes2.default.arrayOf(_propTypes2.default.string),
      firstDayOfWeek: _propTypes2.default.number.isRequired,
      onCaptionClick: _propTypes2.default.func,
      onDayClick: _propTypes2.default.func,
      onDayFocus: _propTypes2.default.func,
      onDayKeyDown: _propTypes2.default.func,
      onDayMouseEnter: _propTypes2.default.func,
      onDayMouseLeave: _propTypes2.default.func,
      onDayMouseDown: _propTypes2.default.func,
      onDayMouseUp: _propTypes2.default.func,
      onDayTouchEnd: _propTypes2.default.func,
      onDayTouchStart: _propTypes2.default.func,
      onWeekClick: _propTypes2.default.func
    } : {};
  })($__require("github:jspm/nodelibs-process@0.1.2.js"));
});
System.registerDynamic("npm:react-day-picker@7.2.4/lib/src/DayPicker.js", ["npm:react@16.7.0.js", "npm:prop-types@15.6.2.js", "npm:react-day-picker@7.2.4/lib/src/Caption.js", "npm:react-day-picker@7.2.4/lib/src/Navbar.js", "npm:react-day-picker@7.2.4/lib/src/Month.js", "npm:react-day-picker@7.2.4/lib/src/Weekday.js", "npm:react-day-picker@7.2.4/lib/src/Helpers.js", "npm:react-day-picker@7.2.4/lib/src/DateUtils.js", "npm:react-day-picker@7.2.4/lib/src/LocaleUtils.js", "npm:react-day-picker@7.2.4/lib/src/ModifiersUtils.js", "npm:react-day-picker@7.2.4/lib/src/classNames.js", "npm:react-day-picker@7.2.4/lib/src/keys.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ModifiersUtils = exports.LocaleUtils = exports.DateUtils = exports.DayPicker = undefined;
    var _extends = Object.assign || function (target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    var _createClass = function () {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor) descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      return function (Constructor, protoProps, staticProps) {
        if (protoProps) defineProperties(Constructor.prototype, protoProps);
        if (staticProps) defineProperties(Constructor, staticProps);
        return Constructor;
      };
    }();
    var _react = $__require("npm:react@16.7.0.js");
    var _react2 = _interopRequireDefault(_react);
    var _propTypes = $__require("npm:prop-types@15.6.2.js");
    var _propTypes2 = _interopRequireDefault(_propTypes);
    var _Caption = $__require("npm:react-day-picker@7.2.4/lib/src/Caption.js");
    var _Caption2 = _interopRequireDefault(_Caption);
    var _Navbar = $__require("npm:react-day-picker@7.2.4/lib/src/Navbar.js");
    var _Navbar2 = _interopRequireDefault(_Navbar);
    var _Month = $__require("npm:react-day-picker@7.2.4/lib/src/Month.js");
    var _Month2 = _interopRequireDefault(_Month);
    var _Weekday = $__require("npm:react-day-picker@7.2.4/lib/src/Weekday.js");
    var _Weekday2 = _interopRequireDefault(_Weekday);
    var _Helpers = $__require("npm:react-day-picker@7.2.4/lib/src/Helpers.js");
    var Helpers = _interopRequireWildcard(_Helpers);
    var _DateUtils = $__require("npm:react-day-picker@7.2.4/lib/src/DateUtils.js");
    var DateUtils = _interopRequireWildcard(_DateUtils);
    var _LocaleUtils = $__require("npm:react-day-picker@7.2.4/lib/src/LocaleUtils.js");
    var LocaleUtils = _interopRequireWildcard(_LocaleUtils);
    var _ModifiersUtils = $__require("npm:react-day-picker@7.2.4/lib/src/ModifiersUtils.js");
    var ModifiersUtils = _interopRequireWildcard(_ModifiersUtils);
    var _classNames = $__require("npm:react-day-picker@7.2.4/lib/src/classNames.js");
    var _classNames2 = _interopRequireDefault(_classNames);
    var _keys = $__require("npm:react-day-picker@7.2.4/lib/src/keys.js");
    function _interopRequireWildcard(obj) {
      if (obj && obj.__esModule) {
        return obj;
      } else {
        var newObj = {};
        if (obj != null) {
          for (var key in obj) {
            if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
          }
        }
        newObj.default = obj;
        return newObj;
      }
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectWithoutProperties(obj, keys) {
      var target = {};
      for (var i in obj) {
        if (keys.indexOf(i) >= 0) continue;
        if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
        target[i] = obj[i];
      }
      return target;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _possibleConstructorReturn(self, call) {
      if (!self) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return call && (typeof call === "object" || typeof call === "function") ? call : self;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: {
          value: subClass,
          enumerable: false,
          writable: true,
          configurable: true
        } });
      if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    var DayPicker = exports.DayPicker = function (_Component) {
      _inherits(DayPicker, _Component);
      function DayPicker(props) {
        _classCallCheck(this, DayPicker);
        var _this = _possibleConstructorReturn(this, (DayPicker.__proto__ || Object.getPrototypeOf(DayPicker)).call(this, props));
        _this.dayPicker = null;
        _this.showNextMonth = function (callback) {
          if (!_this.allowNextMonth()) {
            return;
          }
          var deltaMonths = _this.props.pagedNavigation ? _this.props.numberOfMonths : 1;
          var nextMonth = DateUtils.addMonths(_this.state.currentMonth, deltaMonths);
          _this.showMonth(nextMonth, callback);
        };
        _this.showPreviousMonth = function (callback) {
          if (!_this.allowPreviousMonth()) {
            return;
          }
          var deltaMonths = _this.props.pagedNavigation ? _this.props.numberOfMonths : 1;
          var previousMonth = DateUtils.addMonths(_this.state.currentMonth, -deltaMonths);
          _this.showMonth(previousMonth, callback);
        };
        _this.handleKeyDown = function (e) {
          e.persist();
          switch (e.keyCode) {
            case _keys.LEFT:
              _this.showPreviousMonth();
              break;
            case _keys.RIGHT:
              _this.showNextMonth();
              break;
            case _keys.UP:
              _this.showPreviousYear();
              break;
            case _keys.DOWN:
              _this.showNextYear();
              break;
            default:
              break;
          }
          if (_this.props.onKeyDown) {
            _this.props.onKeyDown(e);
          }
        };
        _this.handleDayKeyDown = function (day, modifiers, e) {
          e.persist();
          switch (e.keyCode) {
            case _keys.LEFT:
              Helpers.cancelEvent(e);
              _this.focusPreviousDay(e.target);
              break;
            case _keys.RIGHT:
              Helpers.cancelEvent(e);
              _this.focusNextDay(e.target);
              break;
            case _keys.UP:
              Helpers.cancelEvent(e);
              _this.focusPreviousWeek(e.target);
              break;
            case _keys.DOWN:
              Helpers.cancelEvent(e);
              _this.focusNextWeek(e.target);
              break;
            case _keys.ENTER:
            case _keys.SPACE:
              Helpers.cancelEvent(e);
              if (_this.props.onDayClick) {
                _this.handleDayClick(day, modifiers, e);
              }
              break;
            default:
              break;
          }
          if (_this.props.onDayKeyDown) {
            _this.props.onDayKeyDown(day, modifiers, e);
          }
        };
        _this.handleDayClick = function (day, modifiers, e) {
          e.persist();
          if (modifiers[_this.props.classNames.outside] && _this.props.enableOutsideDaysClick) {
            _this.handleOutsideDayClick(day);
          }
          if (_this.props.onDayClick) {
            _this.props.onDayClick(day, modifiers, e);
          }
        };
        _this.handleTodayButtonClick = function (e) {
          var today = new Date();
          var month = new Date(today.getFullYear(), today.getMonth());
          _this.showMonth(month);
          e.target.blur();
          if (_this.props.onTodayButtonClick) {
            e.persist();
            _this.props.onTodayButtonClick(new Date(today.getFullYear(), today.getMonth(), today.getDate()), ModifiersUtils.getModifiersForDay(today, _this.props.modifiers), e);
          }
        };
        var currentMonth = _this.getCurrentMonthFromProps(props);
        _this.state = { currentMonth: currentMonth };
        return _this;
      }
      _createClass(DayPicker, [{
        key: 'componentDidUpdate',
        value: function componentDidUpdate(prevProps) {
          if (prevProps.month !== this.props.month && !DateUtils.isSameMonth(prevProps.month, this.props.month)) {
            var currentMonth = this.getCurrentMonthFromProps(this.props);
            this.setState({ currentMonth: currentMonth });
          }
        }
      }, {
        key: 'getCurrentMonthFromProps',
        value: function getCurrentMonthFromProps(props) {
          var initialMonth = Helpers.startOfMonth(props.month || props.initialMonth);
          var currentMonth = initialMonth;
          if (props.pagedNavigation && props.numberOfMonths > 1 && props.fromMonth) {
            var fromMonth = Helpers.startOfMonth(props.fromMonth);
            var diffInMonths = Helpers.getMonthsDiff(fromMonth, currentMonth);
            currentMonth = DateUtils.addMonths(fromMonth, Math.floor(diffInMonths / props.numberOfMonths) * props.numberOfMonths);
          } else if (props.toMonth && props.numberOfMonths > 1 && Helpers.getMonthsDiff(currentMonth, props.toMonth) <= 0) {
            currentMonth = DateUtils.addMonths(Helpers.startOfMonth(props.toMonth), 1 - this.props.numberOfMonths);
          }
          return currentMonth;
        }
      }, {
        key: 'getNextNavigableMonth',
        value: function getNextNavigableMonth() {
          return DateUtils.addMonths(this.state.currentMonth, this.props.numberOfMonths);
        }
      }, {
        key: 'getPreviousNavigableMonth',
        value: function getPreviousNavigableMonth() {
          return DateUtils.addMonths(this.state.currentMonth, -1);
        }
      }, {
        key: 'allowPreviousMonth',
        value: function allowPreviousMonth() {
          var previousMonth = DateUtils.addMonths(this.state.currentMonth, -1);
          return this.allowMonth(previousMonth);
        }
      }, {
        key: 'allowNextMonth',
        value: function allowNextMonth() {
          var nextMonth = DateUtils.addMonths(this.state.currentMonth, this.props.numberOfMonths);
          return this.allowMonth(nextMonth);
        }
      }, {
        key: 'allowMonth',
        value: function allowMonth(d) {
          var _props = this.props,
              fromMonth = _props.fromMonth,
              toMonth = _props.toMonth,
              canChangeMonth = _props.canChangeMonth;
          if (!canChangeMonth || fromMonth && Helpers.getMonthsDiff(fromMonth, d) < 0 || toMonth && Helpers.getMonthsDiff(toMonth, d) > 0) {
            return false;
          }
          return true;
        }
      }, {
        key: 'allowYearChange',
        value: function allowYearChange() {
          return this.props.canChangeMonth;
        }
      }, {
        key: 'showMonth',
        value: function showMonth(d, callback) {
          var _this2 = this;
          if (!this.allowMonth(d)) {
            return;
          }
          this.setState({ currentMonth: Helpers.startOfMonth(d) }, function () {
            if (callback) {
              callback();
            }
            if (_this2.props.onMonthChange) {
              _this2.props.onMonthChange(_this2.state.currentMonth);
            }
          });
        }
      }, {
        key: 'showNextYear',
        value: function showNextYear() {
          if (!this.allowYearChange()) {
            return;
          }
          var nextMonth = DateUtils.addMonths(this.state.currentMonth, 12);
          this.showMonth(nextMonth);
        }
      }, {
        key: 'showPreviousYear',
        value: function showPreviousYear() {
          if (!this.allowYearChange()) {
            return;
          }
          var nextMonth = DateUtils.addMonths(this.state.currentMonth, -12);
          this.showMonth(nextMonth);
        }
      }, {
        key: 'focusFirstDayOfMonth',
        value: function focusFirstDayOfMonth() {
          Helpers.getDayNodes(this.dayPicker, this.props.classNames)[0].focus();
        }
      }, {
        key: 'focusLastDayOfMonth',
        value: function focusLastDayOfMonth() {
          var dayNodes = Helpers.getDayNodes(this.dayPicker, this.props.classNames);
          dayNodes[dayNodes.length - 1].focus();
        }
      }, {
        key: 'focusPreviousDay',
        value: function focusPreviousDay(dayNode) {
          var _this3 = this;
          var dayNodes = Helpers.getDayNodes(this.dayPicker, this.props.classNames);
          var dayNodeIndex = Helpers.nodeListToArray(dayNodes).indexOf(dayNode);
          if (dayNodeIndex === -1) return;
          if (dayNodeIndex === 0) {
            this.showPreviousMonth(function () {
              return _this3.focusLastDayOfMonth();
            });
          } else {
            dayNodes[dayNodeIndex - 1].focus();
          }
        }
      }, {
        key: 'focusNextDay',
        value: function focusNextDay(dayNode) {
          var _this4 = this;
          var dayNodes = Helpers.getDayNodes(this.dayPicker, this.props.classNames);
          var dayNodeIndex = Helpers.nodeListToArray(dayNodes).indexOf(dayNode);
          if (dayNodeIndex === -1) return;
          if (dayNodeIndex === dayNodes.length - 1) {
            this.showNextMonth(function () {
              return _this4.focusFirstDayOfMonth();
            });
          } else {
            dayNodes[dayNodeIndex + 1].focus();
          }
        }
      }, {
        key: 'focusNextWeek',
        value: function focusNextWeek(dayNode) {
          var _this5 = this;
          var dayNodes = Helpers.getDayNodes(this.dayPicker, this.props.classNames);
          var dayNodeIndex = Helpers.nodeListToArray(dayNodes).indexOf(dayNode);
          var isInLastWeekOfMonth = dayNodeIndex > dayNodes.length - 8;
          if (isInLastWeekOfMonth) {
            this.showNextMonth(function () {
              var daysAfterIndex = dayNodes.length - dayNodeIndex;
              var nextMonthDayNodeIndex = 7 - daysAfterIndex;
              Helpers.getDayNodes(_this5.dayPicker, _this5.props.classNames)[nextMonthDayNodeIndex].focus();
            });
          } else {
            dayNodes[dayNodeIndex + 7].focus();
          }
        }
      }, {
        key: 'focusPreviousWeek',
        value: function focusPreviousWeek(dayNode) {
          var _this6 = this;
          var dayNodes = Helpers.getDayNodes(this.dayPicker, this.props.classNames);
          var dayNodeIndex = Helpers.nodeListToArray(dayNodes).indexOf(dayNode);
          var isInFirstWeekOfMonth = dayNodeIndex <= 6;
          if (isInFirstWeekOfMonth) {
            this.showPreviousMonth(function () {
              var previousMonthDayNodes = Helpers.getDayNodes(_this6.dayPicker, _this6.props.classNames);
              var startOfLastWeekOfMonth = previousMonthDayNodes.length - 7;
              var previousMonthDayNodeIndex = startOfLastWeekOfMonth + dayNodeIndex;
              previousMonthDayNodes[previousMonthDayNodeIndex].focus();
            });
          } else {
            dayNodes[dayNodeIndex - 7].focus();
          }
        }
      }, {
        key: 'handleOutsideDayClick',
        value: function handleOutsideDayClick(day) {
          var currentMonth = this.state.currentMonth;
          var numberOfMonths = this.props.numberOfMonths;
          var diffInMonths = Helpers.getMonthsDiff(currentMonth, day);
          if (diffInMonths > 0 && diffInMonths >= numberOfMonths) {
            this.showNextMonth();
          } else if (diffInMonths < 0) {
            this.showPreviousMonth();
          }
        }
      }, {
        key: 'renderNavbar',
        value: function renderNavbar() {
          var _props2 = this.props,
              labels = _props2.labels,
              locale = _props2.locale,
              localeUtils = _props2.localeUtils,
              canChangeMonth = _props2.canChangeMonth,
              navbarElement = _props2.navbarElement,
              attributes = _objectWithoutProperties(_props2, ['labels', 'locale', 'localeUtils', 'canChangeMonth', 'navbarElement']);
          if (!canChangeMonth) return null;
          var props = {
            month: this.state.currentMonth,
            classNames: this.props.classNames,
            className: this.props.classNames.navBar,
            nextMonth: this.getNextNavigableMonth(),
            previousMonth: this.getPreviousNavigableMonth(),
            showPreviousButton: this.allowPreviousMonth(),
            showNextButton: this.allowNextMonth(),
            onNextClick: this.showNextMonth,
            onPreviousClick: this.showPreviousMonth,
            dir: attributes.dir,
            labels: labels,
            locale: locale,
            localeUtils: localeUtils
          };
          return _react2.default.isValidElement(navbarElement) ? _react2.default.cloneElement(navbarElement, props) : _react2.default.createElement(navbarElement, props);
        }
      }, {
        key: 'renderMonths',
        value: function renderMonths() {
          var months = [];
          var firstDayOfWeek = Helpers.getFirstDayOfWeekFromProps(this.props);
          for (var i = 0; i < this.props.numberOfMonths; i += 1) {
            var month = DateUtils.addMonths(this.state.currentMonth, i);
            months.push(_react2.default.createElement(_Month2.default, _extends({ key: i }, this.props, {
              month: month,
              firstDayOfWeek: firstDayOfWeek,
              onDayKeyDown: this.handleDayKeyDown,
              onDayClick: this.handleDayClick
            })));
          }
          if (this.props.reverseMonths) {
            months.reverse();
          }
          return months;
        }
      }, {
        key: 'renderFooter',
        value: function renderFooter() {
          if (this.props.todayButton) {
            return _react2.default.createElement('div', { className: this.props.classNames.footer }, this.renderTodayButton());
          }
          return null;
        }
      }, {
        key: 'renderTodayButton',
        value: function renderTodayButton() {
          return _react2.default.createElement('button', {
            type: 'button',
            tabIndex: 0,
            className: this.props.classNames.todayButton,
            'aria-label': this.props.todayButton,
            onClick: this.handleTodayButtonClick
          }, this.props.todayButton);
        }
      }, {
        key: 'render',
        value: function render() {
          var _this7 = this;
          var className = this.props.classNames.container;
          if (!this.props.onDayClick) {
            className = className + ' ' + this.props.classNames.interactionDisabled;
          }
          if (this.props.className) {
            className = className + ' ' + this.props.className;
          }
          return _react2.default.createElement('div', _extends({}, this.props.containerProps, {
            className: className,
            ref: function ref(el) {
              return _this7.dayPicker = el;
            },
            lang: this.props.locale
          }), _react2.default.createElement('div', {
            className: this.props.classNames.wrapper,
            tabIndex: this.props.canChangeMonth && typeof this.props.tabIndex !== 'undefined' ? this.props.tabIndex : -1,
            onKeyDown: this.handleKeyDown,
            onFocus: this.props.onFocus,
            onBlur: this.props.onBlur
          }, this.renderNavbar(), _react2.default.createElement('div', { className: this.props.classNames.months }, this.renderMonths()), this.renderFooter()));
        }
      }]);
      return DayPicker;
    }(_react.Component);
    DayPicker.VERSION = '7.2.4';
    DayPicker.defaultProps = {
      classNames: _classNames2.default,
      tabIndex: 0,
      initialMonth: new Date(),
      numberOfMonths: 1,
      labels: {
        previousMonth: 'Previous Month',
        nextMonth: 'Next Month'
      },
      locale: 'en',
      localeUtils: LocaleUtils,
      showOutsideDays: false,
      enableOutsideDaysClick: true,
      fixedWeeks: false,
      canChangeMonth: true,
      reverseMonths: false,
      pagedNavigation: false,
      showWeekNumbers: false,
      showWeekDays: true,
      renderDay: function renderDay(day) {
        return day.getDate();
      },
      renderWeek: function renderWeek(weekNumber) {
        return weekNumber;
      },
      weekdayElement: _react2.default.createElement(_Weekday2.default, null),
      navbarElement: _react2.default.createElement(_Navbar2.default, { classNames: _classNames2.default }),
      captionElement: _react2.default.createElement(_Caption2.default, { classNames: _classNames2.default })
    };
    DayPicker.propTypes = "production" !== "production" ? {
      initialMonth: _propTypes2.default.instanceOf(Date),
      month: _propTypes2.default.instanceOf(Date),
      numberOfMonths: _propTypes2.default.number,
      fromMonth: _propTypes2.default.instanceOf(Date),
      toMonth: _propTypes2.default.instanceOf(Date),
      canChangeMonth: _propTypes2.default.bool,
      reverseMonths: _propTypes2.default.bool,
      pagedNavigation: _propTypes2.default.bool,
      todayButton: _propTypes2.default.string,
      showWeekNumbers: _propTypes2.default.bool,
      showWeekDays: _propTypes2.default.bool,
      selectedDays: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.func, _propTypes2.default.array]),
      disabledDays: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.func, _propTypes2.default.array]),
      modifiers: _propTypes2.default.object,
      modifiersStyles: _propTypes2.default.object,
      dir: _propTypes2.default.string,
      firstDayOfWeek: _propTypes2.default.oneOf([0, 1, 2, 3, 4, 5, 6]),
      labels: _propTypes2.default.shape({
        nextMonth: _propTypes2.default.string.isRequired,
        previousMonth: _propTypes2.default.string.isRequired
      }),
      locale: _propTypes2.default.string,
      localeUtils: _propTypes2.default.shape({
        formatMonthTitle: _propTypes2.default.func,
        formatWeekdayShort: _propTypes2.default.func,
        formatWeekdayLong: _propTypes2.default.func,
        getFirstDayOfWeek: _propTypes2.default.func
      }),
      months: _propTypes2.default.arrayOf(_propTypes2.default.string),
      weekdaysLong: _propTypes2.default.arrayOf(_propTypes2.default.string),
      weekdaysShort: _propTypes2.default.arrayOf(_propTypes2.default.string),
      showOutsideDays: _propTypes2.default.bool,
      enableOutsideDaysClick: _propTypes2.default.bool,
      fixedWeeks: _propTypes2.default.bool,
      classNames: _propTypes2.default.shape({
        body: _propTypes2.default.string,
        container: _propTypes2.default.string,
        day: _propTypes2.default.string.isRequired,
        disabled: _propTypes2.default.string.isRequired,
        footer: _propTypes2.default.string,
        interactionDisabled: _propTypes2.default.string,
        months: _propTypes2.default.string,
        month: _propTypes2.default.string,
        navBar: _propTypes2.default.string,
        outside: _propTypes2.default.string.isRequired,
        selected: _propTypes2.default.string.isRequired,
        today: _propTypes2.default.string.isRequired,
        todayButton: _propTypes2.default.string,
        week: _propTypes2.default.string,
        wrapper: _propTypes2.default.string
      }),
      className: _propTypes2.default.string,
      containerProps: _propTypes2.default.object,
      tabIndex: _propTypes2.default.number,
      renderDay: _propTypes2.default.func,
      renderWeek: _propTypes2.default.func,
      weekdayElement: _propTypes2.default.oneOfType([_propTypes2.default.element, _propTypes2.default.func, _propTypes2.default.instanceOf(_react.Component)]),
      navbarElement: _propTypes2.default.oneOfType([_propTypes2.default.element, _propTypes2.default.func, _propTypes2.default.instanceOf(_react.Component)]),
      captionElement: _propTypes2.default.oneOfType([_propTypes2.default.element, _propTypes2.default.func, _propTypes2.default.instanceOf(_react.Component)]),
      onBlur: _propTypes2.default.func,
      onFocus: _propTypes2.default.func,
      onKeyDown: _propTypes2.default.func,
      onDayClick: _propTypes2.default.func,
      onDayKeyDown: _propTypes2.default.func,
      onDayMouseEnter: _propTypes2.default.func,
      onDayMouseLeave: _propTypes2.default.func,
      onDayMouseDown: _propTypes2.default.func,
      onDayMouseUp: _propTypes2.default.func,
      onDayTouchStart: _propTypes2.default.func,
      onDayTouchEnd: _propTypes2.default.func,
      onDayFocus: _propTypes2.default.func,
      onMonthChange: _propTypes2.default.func,
      onCaptionClick: _propTypes2.default.func,
      onWeekClick: _propTypes2.default.func,
      onTodayButtonClick: _propTypes2.default.func
    } : {};
    DayPicker.DateUtils = DateUtils;
    DayPicker.LocaleUtils = LocaleUtils;
    DayPicker.ModifiersUtils = ModifiersUtils;
    exports.DateUtils = DateUtils;
    exports.LocaleUtils = LocaleUtils;
    exports.ModifiersUtils = ModifiersUtils;
    exports.default = DayPicker;
  })($__require("github:jspm/nodelibs-process@0.1.2.js"));
});
System.registerDynamic("npm:react-day-picker@7.2.4/lib/src/DateUtils.js", [], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.clone = clone;
  exports.isDate = isDate;
  exports.addMonths = addMonths;
  exports.isSameDay = isSameDay;
  exports.isSameMonth = isSameMonth;
  exports.isDayBefore = isDayBefore;
  exports.isDayAfter = isDayAfter;
  exports.isPastDay = isPastDay;
  exports.isFutureDay = isFutureDay;
  exports.isDayBetween = isDayBetween;
  exports.addDayToRange = addDayToRange;
  exports.isDayInRange = isDayInRange;
  exports.getWeekNumber = getWeekNumber;
  /**
   * Clone a date object.
   *
   * @export
   * @param  {Date} d The date to clone
   * @return {Date} The cloned date
   */
  function clone(d) {
    return new Date(d.getTime());
  }

  /**
   * Return `true` if the passed value is a valid JavaScript Date object.
   *
   * @export
   * @param {any} value
   * @returns {Boolean}
   */
  function isDate(value) {
    return value instanceof Date && !isNaN(value.valueOf());
  }

  /**
   * Return `d` as a new date with `n` months added.
   *
   * @export
   * @param {[type]} d
   * @param {[type]} n
   */
  function addMonths(d, n) {
    var newDate = clone(d);
    newDate.setMonth(d.getMonth() + n);
    return newDate;
  }

  /**
   * Return `true` if two dates are the same day, ignoring the time.
   *
   * @export
   * @param  {Date}  d1
   * @param  {Date}  d2
   * @return {Boolean}
   */
  function isSameDay(d1, d2) {
    if (!d1 || !d2) {
      return false;
    }
    return d1.getDate() === d2.getDate() && d1.getMonth() === d2.getMonth() && d1.getFullYear() === d2.getFullYear();
  }

  /**
   * Return `true` if two dates fall in the same month.
   *
   * @export
   * @param  {Date}  d1
   * @param  {Date}  d2
   * @return {Boolean}
   */
  function isSameMonth(d1, d2) {
    if (!d1 || !d2) {
      return false;
    }
    return d1.getMonth() === d2.getMonth() && d1.getFullYear() === d2.getFullYear();
  }

  /**
   * Returns `true` if the first day is before the second day.
   *
   * @export
   * @param {Date} d1
   * @param {Date} d2
   * @returns {Boolean}
   */
  function isDayBefore(d1, d2) {
    var day1 = clone(d1).setHours(0, 0, 0, 0);
    var day2 = clone(d2).setHours(0, 0, 0, 0);
    return day1 < day2;
  }

  /**
   * Returns `true` if the first day is after the second day.
   *
   * @export
   * @param {Date} d1
   * @param {Date} d2
   * @returns {Boolean}
   */
  function isDayAfter(d1, d2) {
    var day1 = clone(d1).setHours(0, 0, 0, 0);
    var day2 = clone(d2).setHours(0, 0, 0, 0);
    return day1 > day2;
  }

  /**
   * Return `true` if a day is in the past, e.g. yesterday or any day
   * before yesterday.
   *
   * @export
   * @param  {Date}  d
   * @return {Boolean}
   */
  function isPastDay(d) {
    var today = new Date();
    today.setHours(0, 0, 0, 0);
    return isDayBefore(d, today);
  }

  /**
   * Return `true` if a day is in the future, e.g. tomorrow or any day
   * after tomorrow.
   *
   * @export
   * @param  {Date}  d
   * @return {Boolean}
   */
  function isFutureDay(d) {
    var tomorrow = new Date(new Date().getTime() + 24 * 60 * 60 * 1000);
    tomorrow.setHours(0, 0, 0, 0);
    return d >= tomorrow;
  }

  /**
   * Return `true` if day `d` is between days `d1` and `d2`,
   * without including them.
   *
   * @export
   * @param  {Date}  d
   * @param  {Date}  d1
   * @param  {Date}  d2
   * @return {Boolean}
   */
  function isDayBetween(d, d1, d2) {
    var date = clone(d);
    date.setHours(0, 0, 0, 0);
    return isDayAfter(date, d1) && isDayBefore(date, d2) || isDayAfter(date, d2) && isDayBefore(date, d1);
  }

  /**
   * Add a day to a range and return a new range. A range is an object with
   * `from` and `to` days.
   *
   * @export
   * @param {Date} day
   * @param {Object} range
   * @return {Object} Returns a new range object
   */
  function addDayToRange(day) {
    var range = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : { from: null, to: null };
    var from = range.from,
        to = range.to;

    if (!from) {
      from = day;
    } else if (from && to && isSameDay(from, to) && isSameDay(day, from)) {
      from = null;
      to = null;
    } else if (to && isDayBefore(day, from)) {
      from = day;
    } else if (to && isSameDay(day, to)) {
      from = day;
      to = day;
    } else {
      to = day;
      if (isDayBefore(to, from)) {
        to = from;
        from = day;
      }
    }

    return { from: from, to: to };
  }

  /**
   * Return `true` if a day is included in a range of days.
   *
   * @export
   * @param  {Date}  day
   * @param  {Object}  range
   * @return {Boolean}
   */
  function isDayInRange(day, range) {
    var from = range.from,
        to = range.to;

    return from && isSameDay(day, from) || to && isSameDay(day, to) || from && to && isDayBetween(day, from, to);
  }

  /**
   * Return the year's week number (as per ISO, i.e. with the week starting from monday)
   * for the given day.
   *
   * @export
   * @param {Date} day
   * @returns {Number}
   */
  function getWeekNumber(day) {
    var date = clone(day);
    date.setHours(0, 0, 0);
    date.setDate(date.getDate() + 4 - (date.getDay() || 7));
    return Math.ceil(((date - new Date(date.getFullYear(), 0, 1)) / 8.64e7 + 1) / 7);
  }

  exports.default = {
    addDayToRange: addDayToRange,
    addMonths: addMonths,
    clone: clone,
    getWeekNumber: getWeekNumber,
    isDate: isDate,
    isDayAfter: isDayAfter,
    isDayBefore: isDayBefore,
    isDayBetween: isDayBetween,
    isDayInRange: isDayInRange,
    isFutureDay: isFutureDay,
    isPastDay: isPastDay,
    isSameDay: isSameDay,
    isSameMonth: isSameMonth
  };
  
});
System.registerDynamic('npm:react-day-picker@7.2.4/lib/src/LocaleUtils.js', [], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.formatDay = formatDay;
  exports.formatMonthTitle = formatMonthTitle;
  exports.formatWeekdayShort = formatWeekdayShort;
  exports.formatWeekdayLong = formatWeekdayLong;
  exports.getFirstDayOfWeek = getFirstDayOfWeek;
  exports.getMonths = getMonths;
  var WEEKDAYS_LONG = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];

  var WEEKDAYS_SHORT = ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'];

  var MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];

  function formatDay(day) {
    return day.toDateString();
  }

  function formatMonthTitle(d) {
    return MONTHS[d.getMonth()] + ' ' + d.getFullYear();
  }

  function formatWeekdayShort(i) {
    return WEEKDAYS_SHORT[i];
  }

  function formatWeekdayLong(i) {
    return WEEKDAYS_LONG[i];
  }

  function getFirstDayOfWeek() {
    return 0;
  }

  function getMonths() {
    return MONTHS;
  }

  exports.default = {
    formatDay: formatDay,
    formatMonthTitle: formatMonthTitle,
    formatWeekdayShort: formatWeekdayShort,
    formatWeekdayLong: formatWeekdayLong,
    getFirstDayOfWeek: getFirstDayOfWeek,
    getMonths: getMonths
  };
  
});
System.registerDynamic('npm:react-day-picker@7.2.4/lib/src/Helpers.js', ['npm:react-day-picker@7.2.4/lib/src/DateUtils.js', 'npm:react-day-picker@7.2.4/lib/src/LocaleUtils.js', 'npm:react-day-picker@7.2.4/lib/src/classNames.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  exports.cancelEvent = cancelEvent;
  exports.getFirstDayOfMonth = getFirstDayOfMonth;
  exports.getDaysInMonth = getDaysInMonth;
  exports.getModifiersFromProps = getModifiersFromProps;
  exports.getFirstDayOfWeekFromProps = getFirstDayOfWeekFromProps;
  exports.isRangeOfDates = isRangeOfDates;
  exports.getMonthsDiff = getMonthsDiff;
  exports.getWeekArray = getWeekArray;
  exports.startOfMonth = startOfMonth;
  exports.getDayNodes = getDayNodes;
  exports.nodeListToArray = nodeListToArray;
  exports.hasOwnProp = hasOwnProp;
  var _DateUtils = $__require('npm:react-day-picker@7.2.4/lib/src/DateUtils.js');
  var _LocaleUtils = $__require('npm:react-day-picker@7.2.4/lib/src/LocaleUtils.js');
  var _classNames = $__require('npm:react-day-picker@7.2.4/lib/src/classNames.js');
  var _classNames2 = _interopRequireDefault(_classNames);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  function cancelEvent(e) {
    e.preventDefault();
    e.stopPropagation();
  }
  function getFirstDayOfMonth(d) {
    return new Date(d.getFullYear(), d.getMonth(), 1, 12);
  }
  function getDaysInMonth(d) {
    var resultDate = getFirstDayOfMonth(d);
    resultDate.setMonth(resultDate.getMonth() + 1);
    resultDate.setDate(resultDate.getDate() - 1);
    return resultDate.getDate();
  }
  function getModifiersFromProps(props) {
    var modifiers = _extends({}, props.modifiers);
    if (props.selectedDays) {
      modifiers[props.classNames.selected] = props.selectedDays;
    }
    if (props.disabledDays) {
      modifiers[props.classNames.disabled] = props.disabledDays;
    }
    return modifiers;
  }
  function getFirstDayOfWeekFromProps(props) {
    var firstDayOfWeek = props.firstDayOfWeek,
        _props$locale = props.locale,
        locale = _props$locale === undefined ? 'en' : _props$locale,
        _props$localeUtils = props.localeUtils,
        localeUtils = _props$localeUtils === undefined ? {} : _props$localeUtils;
    if (!isNaN(firstDayOfWeek)) {
      return firstDayOfWeek;
    }
    if (localeUtils.getFirstDayOfWeek) {
      return localeUtils.getFirstDayOfWeek(locale);
    }
    return 0;
  }
  function isRangeOfDates(value) {
    return !!(value && value.from && value.to);
  }
  function getMonthsDiff(d1, d2) {
    return d2.getMonth() - d1.getMonth() + 12 * (d2.getFullYear() - d1.getFullYear());
  }
  function getWeekArray(d) {
    var firstDayOfWeek = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (0, _LocaleUtils.getFirstDayOfWeek)();
    var fixedWeeks = arguments[2];
    var daysInMonth = getDaysInMonth(d);
    var dayArray = [];
    var week = [];
    var weekArray = [];
    for (var i = 1; i <= daysInMonth; i += 1) {
      dayArray.push(new Date(d.getFullYear(), d.getMonth(), i, 12));
    }
    dayArray.forEach(function (day) {
      if (week.length > 0 && day.getDay() === firstDayOfWeek) {
        weekArray.push(week);
        week = [];
      }
      week.push(day);
      if (dayArray.indexOf(day) === dayArray.length - 1) {
        weekArray.push(week);
      }
    });
    var firstWeek = weekArray[0];
    for (var _i = 7 - firstWeek.length; _i > 0; _i -= 1) {
      var outsideDate = (0, _DateUtils.clone)(firstWeek[0]);
      outsideDate.setDate(firstWeek[0].getDate() - 1);
      firstWeek.unshift(outsideDate);
    }
    var lastWeek = weekArray[weekArray.length - 1];
    for (var _i2 = lastWeek.length; _i2 < 7; _i2 += 1) {
      var _outsideDate = (0, _DateUtils.clone)(lastWeek[lastWeek.length - 1]);
      _outsideDate.setDate(lastWeek[lastWeek.length - 1].getDate() + 1);
      lastWeek.push(_outsideDate);
    }
    if (fixedWeeks && weekArray.length < 6) {
      var lastExtraWeek = void 0;
      for (var _i3 = weekArray.length; _i3 < 6; _i3 += 1) {
        lastExtraWeek = weekArray[weekArray.length - 1];
        var lastDay = lastExtraWeek[lastExtraWeek.length - 1];
        var extraWeek = [];
        for (var j = 0; j < 7; j += 1) {
          var _outsideDate2 = (0, _DateUtils.clone)(lastDay);
          _outsideDate2.setDate(lastDay.getDate() + j + 1);
          extraWeek.push(_outsideDate2);
        }
        weekArray.push(extraWeek);
      }
    }
    return weekArray;
  }
  function startOfMonth(d) {
    var newDate = (0, _DateUtils.clone)(d);
    newDate.setDate(1);
    newDate.setHours(12, 0, 0, 0);
    return newDate;
  }
  function getDayNodes(node, classNames) {
    var outsideClassName = void 0;
    if (classNames === _classNames2.default) {
      outsideClassName = classNames.day + '--' + classNames.outside;
    } else {
      outsideClassName = '' + classNames.outside;
    }
    var dayQuery = classNames.day.replace(/ /g, '.');
    var outsideDayQuery = outsideClassName.replace(/ /g, '.');
    var selector = '.' + dayQuery + ':not(.' + outsideDayQuery + ')';
    return node.querySelectorAll(selector);
  }
  function nodeListToArray(nodeList) {
    return Array.prototype.slice.call(nodeList, 0);
  }
  function hasOwnProp(obj, prop) {
    return Object.prototype.hasOwnProperty.call(obj, prop);
  }
});
System.registerDynamic('npm:react-day-picker@7.2.4/lib/src/ModifiersUtils.js', ['npm:react-day-picker@7.2.4/lib/src/DateUtils.js', 'npm:react-day-picker@7.2.4/lib/src/Helpers.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.dayMatchesModifier = dayMatchesModifier;
  exports.getModifiersForDay = getModifiersForDay;
  var _DateUtils = $__require('npm:react-day-picker@7.2.4/lib/src/DateUtils.js');
  var _Helpers = $__require('npm:react-day-picker@7.2.4/lib/src/Helpers.js');
  function dayMatchesModifier(day, modifier) {
    if (!modifier) {
      return false;
    }
    var arr = Array.isArray(modifier) ? modifier : [modifier];
    return arr.some(function (mod) {
      if (!mod) {
        return false;
      }
      if (mod instanceof Date) {
        return (0, _DateUtils.isSameDay)(day, mod);
      }
      if ((0, _Helpers.isRangeOfDates)(mod)) {
        return (0, _DateUtils.isDayInRange)(day, mod);
      }
      if (mod.after && mod.before && (0, _DateUtils.isDayAfter)(mod.before, mod.after)) {
        return (0, _DateUtils.isDayAfter)(day, mod.after) && (0, _DateUtils.isDayBefore)(day, mod.before);
      }
      if (mod.after && mod.before && ((0, _DateUtils.isDayAfter)(mod.after, mod.before) || (0, _DateUtils.isSameDay)(mod.after, mod.before))) {
        return (0, _DateUtils.isDayAfter)(day, mod.after) || (0, _DateUtils.isDayBefore)(day, mod.before);
      }
      if (mod.after) {
        return (0, _DateUtils.isDayAfter)(day, mod.after);
      }
      if (mod.before) {
        return (0, _DateUtils.isDayBefore)(day, mod.before);
      }
      if (mod.daysOfWeek) {
        return mod.daysOfWeek.some(function (dayOfWeek) {
          return day.getDay() === dayOfWeek;
        });
      }
      if (typeof mod === 'function') {
        return mod(day);
      }
      return false;
    });
  }
  function getModifiersForDay(day) {
    var modifiersObj = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    return Object.keys(modifiersObj).reduce(function (modifiers, modifierName) {
      var value = modifiersObj[modifierName];
      if (dayMatchesModifier(day, value)) {
        modifiers.push(modifierName);
      }
      return modifiers;
    }, []);
  }
  exports.default = {
    dayMatchesModifier: dayMatchesModifier,
    getModifiersForDay: getModifiersForDay
  };
});
System.registerDynamic("npm:react-day-picker@7.2.4/lib/src/Weekday.js", ["npm:react@16.7.0.js", "npm:prop-types@15.6.2.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    Object.defineProperty(exports, "__esModule", { value: true });
    var _createClass = function () {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor) descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      return function (Constructor, protoProps, staticProps) {
        if (protoProps) defineProperties(Constructor.prototype, protoProps);
        if (staticProps) defineProperties(Constructor, staticProps);
        return Constructor;
      };
    }();
    var _react = $__require("npm:react@16.7.0.js");
    var _react2 = _interopRequireDefault(_react);
    var _propTypes = $__require("npm:prop-types@15.6.2.js");
    var _propTypes2 = _interopRequireDefault(_propTypes);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _possibleConstructorReturn(self, call) {
      if (!self) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return call && (typeof call === "object" || typeof call === "function") ? call : self;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: {
          value: subClass,
          enumerable: false,
          writable: true,
          configurable: true
        } });
      if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    var Weekday = function (_Component) {
      _inherits(Weekday, _Component);
      function Weekday() {
        _classCallCheck(this, Weekday);
        return _possibleConstructorReturn(this, (Weekday.__proto__ || Object.getPrototypeOf(Weekday)).apply(this, arguments));
      }
      _createClass(Weekday, [{
        key: 'shouldComponentUpdate',
        value: function shouldComponentUpdate(nextProps) {
          return this.props !== nextProps;
        }
      }, {
        key: 'render',
        value: function render() {
          var _props = this.props,
              weekday = _props.weekday,
              className = _props.className,
              weekdaysLong = _props.weekdaysLong,
              weekdaysShort = _props.weekdaysShort,
              localeUtils = _props.localeUtils,
              locale = _props.locale;
          var title = void 0;
          if (weekdaysLong) {
            title = weekdaysLong[weekday];
          } else {
            title = localeUtils.formatWeekdayLong(weekday, locale);
          }
          var content = void 0;
          if (weekdaysShort) {
            content = weekdaysShort[weekday];
          } else {
            content = localeUtils.formatWeekdayShort(weekday, locale);
          }
          return _react2.default.createElement('div', {
            className: className,
            role: 'columnheader'
          }, _react2.default.createElement('abbr', { title: title }, content));
        }
      }]);
      return Weekday;
    }(_react.Component);
    exports.default = Weekday;
    Weekday.propTypes = "production" !== "production" ? {
      weekday: _propTypes2.default.number,
      className: _propTypes2.default.string,
      locale: _propTypes2.default.string,
      localeUtils: _propTypes2.default.object,
      weekdaysLong: _propTypes2.default.arrayOf(_propTypes2.default.string),
      weekdaysShort: _propTypes2.default.arrayOf(_propTypes2.default.string)
    } : {};
  })($__require("github:jspm/nodelibs-process@0.1.2.js"));
});
System.registerDynamic('npm:react-day-picker@7.2.4/lib/src/classNames.js', [], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  // Proxy object to map classnames when css modules are not used

  exports.default = {
    container: 'DayPicker',
    wrapper: 'DayPicker-wrapper',
    interactionDisabled: 'DayPicker--interactionDisabled',
    months: 'DayPicker-Months',
    month: 'DayPicker-Month',

    navBar: 'DayPicker-NavBar',
    navButtonPrev: 'DayPicker-NavButton DayPicker-NavButton--prev',
    navButtonNext: 'DayPicker-NavButton DayPicker-NavButton--next',
    navButtonInteractionDisabled: 'DayPicker-NavButton--interactionDisabled',

    caption: 'DayPicker-Caption',
    weekdays: 'DayPicker-Weekdays',
    weekdaysRow: 'DayPicker-WeekdaysRow',
    weekday: 'DayPicker-Weekday',
    body: 'DayPicker-Body',
    week: 'DayPicker-Week',
    weekNumber: 'DayPicker-WeekNumber',
    day: 'DayPicker-Day',
    footer: 'DayPicker-Footer',
    todayButton: 'DayPicker-TodayButton',

    // default modifiers
    today: 'today',
    selected: 'selected',
    disabled: 'disabled',
    outside: 'outside'
  };
  
});
System.registerDynamic("npm:react-day-picker@7.2.4/lib/src/keys.js", [], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var LEFT = exports.LEFT = 37;
  var UP = exports.UP = 38;
  var RIGHT = exports.RIGHT = 39;
  var DOWN = exports.DOWN = 40;
  var ENTER = exports.ENTER = 13;
  var SPACE = exports.SPACE = 32;
  var ESC = exports.ESC = 27;
  var TAB = exports.TAB = 9;
  
});
System.registerDynamic("npm:react-day-picker@7.2.4/lib/src/Navbar.js", ["npm:react@16.7.0.js", "npm:prop-types@15.6.2.js", "npm:react-day-picker@7.2.4/lib/src/classNames.js", "npm:react-day-picker@7.2.4/lib/src/keys.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    Object.defineProperty(exports, "__esModule", { value: true });
    var _createClass = function () {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor) descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      return function (Constructor, protoProps, staticProps) {
        if (protoProps) defineProperties(Constructor.prototype, protoProps);
        if (staticProps) defineProperties(Constructor, staticProps);
        return Constructor;
      };
    }();
    var _react = $__require("npm:react@16.7.0.js");
    var _react2 = _interopRequireDefault(_react);
    var _propTypes = $__require("npm:prop-types@15.6.2.js");
    var _propTypes2 = _interopRequireDefault(_propTypes);
    var _classNames = $__require("npm:react-day-picker@7.2.4/lib/src/classNames.js");
    var _classNames2 = _interopRequireDefault(_classNames);
    var _keys = $__require("npm:react-day-picker@7.2.4/lib/src/keys.js");
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _possibleConstructorReturn(self, call) {
      if (!self) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return call && (typeof call === "object" || typeof call === "function") ? call : self;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: {
          value: subClass,
          enumerable: false,
          writable: true,
          configurable: true
        } });
      if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    var Navbar = function (_Component) {
      _inherits(Navbar, _Component);
      function Navbar() {
        var _ref;
        var _temp, _this, _ret;
        _classCallCheck(this, Navbar);
        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Navbar.__proto__ || Object.getPrototypeOf(Navbar)).call.apply(_ref, [this].concat(args))), _this), _this.handleNextClick = function () {
          if (_this.props.onNextClick) {
            _this.props.onNextClick();
          }
        }, _this.handlePreviousClick = function () {
          if (_this.props.onPreviousClick) {
            _this.props.onPreviousClick();
          }
        }, _this.handleNextKeyDown = function (e) {
          if (e.keyCode !== _keys.ENTER && e.keyCode !== _keys.SPACE) {
            return;
          }
          e.preventDefault();
          _this.handleNextClick();
        }, _this.handlePreviousKeyDown = function (e) {
          if (e.keyCode !== _keys.ENTER && e.keyCode !== _keys.SPACE) {
            return;
          }
          e.preventDefault();
          _this.handlePreviousClick();
        }, _temp), _possibleConstructorReturn(_this, _ret);
      }
      _createClass(Navbar, [{
        key: 'shouldComponentUpdate',
        value: function shouldComponentUpdate(nextProps) {
          return nextProps.labels !== this.props.labels || nextProps.dir !== this.props.dir || this.props.showPreviousButton !== nextProps.showPreviousButton || this.props.showNextButton !== nextProps.showNextButton;
        }
      }, {
        key: 'render',
        value: function render() {
          var _props = this.props,
              classNames = _props.classNames,
              className = _props.className,
              showPreviousButton = _props.showPreviousButton,
              showNextButton = _props.showNextButton,
              labels = _props.labels,
              dir = _props.dir;
          var previousClickHandler = void 0;
          var nextClickHandler = void 0;
          var previousKeyDownHandler = void 0;
          var nextKeyDownHandler = void 0;
          var shouldShowPrevious = void 0;
          var shouldShowNext = void 0;
          if (dir === 'rtl') {
            previousClickHandler = this.handleNextClick;
            nextClickHandler = this.handlePreviousClick;
            previousKeyDownHandler = this.handleNextKeyDown;
            nextKeyDownHandler = this.handlePreviousKeyDown;
            shouldShowNext = showPreviousButton;
            shouldShowPrevious = showNextButton;
          } else {
            previousClickHandler = this.handlePreviousClick;
            nextClickHandler = this.handleNextClick;
            previousKeyDownHandler = this.handlePreviousKeyDown;
            nextKeyDownHandler = this.handleNextKeyDown;
            shouldShowNext = showNextButton;
            shouldShowPrevious = showPreviousButton;
          }
          var previousClassName = shouldShowPrevious ? classNames.navButtonPrev : classNames.navButtonPrev + ' ' + classNames.navButtonInteractionDisabled;
          var nextClassName = shouldShowNext ? classNames.navButtonNext : classNames.navButtonNext + ' ' + classNames.navButtonInteractionDisabled;
          var previousButton = _react2.default.createElement('span', {
            tabIndex: '0',
            role: 'button',
            'aria-label': labels.previousMonth,
            key: 'previous',
            className: previousClassName,
            onKeyDown: shouldShowPrevious ? previousKeyDownHandler : undefined,
            onClick: shouldShowPrevious ? previousClickHandler : undefined
          });
          var nextButton = _react2.default.createElement('span', {
            tabIndex: '0',
            role: 'button',
            'aria-label': labels.nextMonth,
            key: 'right',
            className: nextClassName,
            onKeyDown: shouldShowNext ? nextKeyDownHandler : undefined,
            onClick: shouldShowNext ? nextClickHandler : undefined
          });
          return _react2.default.createElement('div', { className: className || classNames.navBar }, dir === 'rtl' ? [nextButton, previousButton] : [previousButton, nextButton]);
        }
      }]);
      return Navbar;
    }(_react.Component);
    Navbar.defaultProps = {
      classNames: _classNames2.default,
      dir: 'ltr',
      labels: {
        previousMonth: 'Previous Month',
        nextMonth: 'Next Month'
      },
      showPreviousButton: true,
      showNextButton: true
    };
    exports.default = Navbar;
    Navbar.propTypes = "production" !== "production" ? {
      classNames: _propTypes2.default.shape({
        navBar: _propTypes2.default.string.isRequired,
        navButtonPrev: _propTypes2.default.string.isRequired,
        navButtonNext: _propTypes2.default.string.isRequired
      }),
      className: _propTypes2.default.string,
      showPreviousButton: _propTypes2.default.bool,
      showNextButton: _propTypes2.default.bool,
      onPreviousClick: _propTypes2.default.func,
      onNextClick: _propTypes2.default.func,
      dir: _propTypes2.default.string,
      labels: _propTypes2.default.shape({
        previousMonth: _propTypes2.default.string.isRequired,
        nextMonth: _propTypes2.default.string.isRequired
      })
    } : {};
  })($__require("github:jspm/nodelibs-process@0.1.2.js"));
});
System.registerDynamic('npm:react-day-picker@7.2.4/lib/src/PropTypes.js', ['npm:prop-types@15.6.2.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ModifierPropType = undefined;

  var _propTypes = $__require('npm:prop-types@15.6.2.js');

  var _propTypes2 = _interopRequireDefault(_propTypes);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  var PrimitiveTypes = {
    localeUtils: _propTypes2.default.shape({
      formatMonthTitle: _propTypes2.default.func,
      formatWeekdayShort: _propTypes2.default.func,
      formatWeekdayLong: _propTypes2.default.func,
      getFirstDayOfWeek: _propTypes2.default.func
    }),
    range: _propTypes2.default.shape({
      from: _propTypes2.default.instanceOf(Date),
      to: _propTypes2.default.instanceOf(Date)
    }),
    after: _propTypes2.default.shape({
      after: _propTypes2.default.instanceOf(Date)
    }),
    before: _propTypes2.default.shape({
      before: _propTypes2.default.instanceOf(Date)
    })
  };

  var ModifierPropType = exports.ModifierPropType = _propTypes2.default.oneOfType([PrimitiveTypes.after, PrimitiveTypes.before, PrimitiveTypes.range, _propTypes2.default.func, _propTypes2.default.array]);

  exports.default = PrimitiveTypes;
  
});
System.registerDynamic('npm:react-day-picker@7.2.4/DayPicker.js', ['npm:react-day-picker@7.2.4/lib/src/DayPicker.js', 'npm:react-day-picker@7.2.4/lib/src/DateUtils.js', 'npm:react-day-picker@7.2.4/lib/src/LocaleUtils.js', 'npm:react-day-picker@7.2.4/lib/src/ModifiersUtils.js', 'npm:react-day-picker@7.2.4/lib/src/Weekday.js', 'npm:react-day-picker@7.2.4/lib/src/Navbar.js', 'npm:react-day-picker@7.2.4/lib/src/PropTypes.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var DayPicker = $__require('npm:react-day-picker@7.2.4/lib/src/DayPicker.js');
  var DateUtils = $__require('npm:react-day-picker@7.2.4/lib/src/DateUtils.js');
  var LocaleUtils = $__require('npm:react-day-picker@7.2.4/lib/src/LocaleUtils.js');
  var ModifiersUtils = $__require('npm:react-day-picker@7.2.4/lib/src/ModifiersUtils.js');
  var Weekday = $__require('npm:react-day-picker@7.2.4/lib/src/Weekday.js');
  var Navbar = $__require('npm:react-day-picker@7.2.4/lib/src/Navbar.js');
  var PropTypes = $__require('npm:react-day-picker@7.2.4/lib/src/PropTypes.js');
  module.exports = DayPicker;
  module.exports.DateUtils = DateUtils;
  module.exports.LocaleUtils = LocaleUtils;
  module.exports.ModifiersUtils = ModifiersUtils;
  module.exports.WeekdayPropTypes = Weekday.propTypes;
  module.exports.NavbarPropTypes = Navbar.propTypes;
  module.exports.PropTypes = PropTypes;
});
System.registerDynamic("npm:react-day-picker@7.2.4.js", ["npm:react-day-picker@7.2.4/DayPicker.js"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("npm:react-day-picker@7.2.4/DayPicker.js");
});
System.registerDynamic("npm:@blueprintjs/datetime@3.6.0/lib/cjs/common/errors.js", [], true, function ($__require, exports, module) {
  /* */
  "use strict";
  /*
   * Copyright 2015 Palantir Technologies, Inc. All rights reserved.
   *
   * Licensed under the terms of the LICENSE file distributed with this project.
   */

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var ns = "[Blueprint]";
  exports.DATEPICKER_DEFAULT_VALUE_INVALID = ns + " <DatePicker> defaultValue must be within minDate and maxDate bounds.";
  exports.DATEPICKER_INITIAL_MONTH_INVALID = ns + " <DatePicker> initialMonth must be within minDate and maxDate bounds.";
  exports.DATEPICKER_MAX_DATE_INVALID = ns + " <DatePicker> maxDate must be later than minDate.";
  exports.DATEPICKER_VALUE_INVALID = ns + " <DatePicker> value prop must be within minDate and maxDate bounds.";
  exports.DATERANGEPICKER_DEFAULT_VALUE_INVALID = exports.DATEPICKER_DEFAULT_VALUE_INVALID.replace("DatePicker", "DateRangePicker");
  exports.DATERANGEPICKER_INITIAL_MONTH_INVALID = exports.DATEPICKER_INITIAL_MONTH_INVALID.replace("DatePicker", "DateRangePicker");
  exports.DATERANGEPICKER_MAX_DATE_INVALID = exports.DATEPICKER_MAX_DATE_INVALID.replace("DatePicker", "DateRangePicker");
  exports.DATERANGEPICKER_VALUE_INVALID = exports.DATEPICKER_VALUE_INVALID.replace("DatePicker", "DateRangePicker");
  exports.DATERANGEPICKER_PREFERRED_BOUNDARY_TO_MODIFY_INVALID = "<DateRangePicker> preferredBoundaryToModify must be a valid Boundary if defined.";
  exports.DATERANGEINPUT_NULL_VALUE = ns + " <DateRangeInput> value cannot be null. Pass undefined to clear the value and operate in" + " uncontrolled mode, or pass [null, null] to clear the value and continue operating in controlled mode.";
  
});
System.registerDynamic("npm:@blueprintjs/datetime@3.6.0/lib/cjs/common/monthAndYear.js", ["npm:@blueprintjs/datetime@3.6.0/lib/cjs/common/dateUtils.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var dateUtils_1 = $__require("npm:@blueprintjs/datetime@3.6.0/lib/cjs/common/dateUtils.js");
  var MonthAndYear = function () {
    function MonthAndYear(month, year) {
      if (month !== null && year !== null) {
        this.date = new Date(year, month);
      } else {
        this.date = new Date();
      }
    }
    MonthAndYear.fromDate = function (date) {
      return date == null ? undefined : new MonthAndYear(date.getMonth(), date.getFullYear());
    };
    MonthAndYear.prototype.clone = function () {
      return new MonthAndYear(this.getMonth(), this.getYear());
    };
    MonthAndYear.prototype.getFullDate = function () {
      return this.date;
    };
    MonthAndYear.prototype.getMonth = function () {
      return this.date.getMonth();
    };
    MonthAndYear.prototype.getYear = function () {
      return this.date.getFullYear();
    };
    MonthAndYear.prototype.getPreviousMonth = function () {
      var previousMonthDate = dateUtils_1.getDatePreviousMonth(this.date);
      return new MonthAndYear(previousMonthDate.getMonth(), previousMonthDate.getFullYear());
    };
    MonthAndYear.prototype.getNextMonth = function () {
      var nextMonthDate = dateUtils_1.getDateNextMonth(this.date);
      return new MonthAndYear(nextMonthDate.getMonth(), nextMonthDate.getFullYear());
    };
    MonthAndYear.prototype.isBefore = function (monthAndYear) {
      return compareMonthAndYear(this, monthAndYear) < 0;
    };
    MonthAndYear.prototype.isAfter = function (monthAndYear) {
      return compareMonthAndYear(this, monthAndYear) > 0;
    };
    MonthAndYear.prototype.isSame = function (monthAndYear) {
      return compareMonthAndYear(this, monthAndYear) === 0;
    };
    MonthAndYear.prototype.isSameMonth = function (monthAndYear) {
      return this.getMonth() === monthAndYear.getMonth();
    };
    return MonthAndYear;
  }();
  exports.MonthAndYear = MonthAndYear;
  function compareMonthAndYear(firstMonthAndYear, secondMonthAndYear) {
    var firstMonth = firstMonthAndYear.getMonth();
    var firstYear = firstMonthAndYear.getYear();
    var secondMonth = secondMonthAndYear.getMonth();
    var secondYear = secondMonthAndYear.getYear();
    if (firstYear === secondYear) {
      return firstMonth - secondMonth;
    } else {
      return firstYear - secondYear;
    }
  }
});
System.registerDynamic("npm:@blueprintjs/datetime@3.6.0/lib/cjs/datePickerCaption.js", ["npm:tslib@1.9.3.js", "npm:@blueprintjs/core@3.11.0.js", "npm:react@16.7.0.js", "npm:@blueprintjs/datetime@3.6.0/lib/cjs/common/classes.js", "npm:@blueprintjs/datetime@3.6.0/lib/cjs/common/dateUtils.js", "npm:@blueprintjs/datetime@3.6.0/lib/cjs/common/utils.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  var core_1 = $__require("npm:@blueprintjs/core@3.11.0.js");
  var React = tslib_1.__importStar($__require("npm:react@16.7.0.js"));
  var Classes = tslib_1.__importStar($__require("npm:@blueprintjs/datetime@3.6.0/lib/cjs/common/classes.js"));
  var dateUtils_1 = $__require("npm:@blueprintjs/datetime@3.6.0/lib/cjs/common/dateUtils.js");
  var utils_1 = $__require("npm:@blueprintjs/datetime@3.6.0/lib/cjs/common/utils.js");
  var DatePickerCaption = function (_super) {
    tslib_1.__extends(DatePickerCaption, _super);
    function DatePickerCaption() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.state = { monthRightOffset: 0 };
      _this.handleMonthSelectChange = _this.dateChangeHandler(function (d, month) {
        return d.setMonth(month);
      }, _this.props.onMonthChange);
      _this.handleYearSelectChange = _this.dateChangeHandler(function (d, year) {
        return d.setFullYear(year);
      }, _this.props.onYearChange);
      return _this;
    }
    DatePickerCaption.prototype.render = function () {
      var _this = this;
      var _a = this.props,
          date = _a.date,
          locale = _a.locale,
          localeUtils = _a.localeUtils,
          minDate = _a.minDate,
          maxDate = _a.maxDate;
      var minYear = minDate.getFullYear();
      var maxYear = maxDate.getFullYear();
      var displayMonth = date.getMonth();
      var displayYear = date.getFullYear();
      var months = localeUtils.getMonths(locale);
      var startMonth = displayYear === minYear ? minDate.getMonth() : 0;
      var endMonth = displayYear === maxYear ? maxDate.getMonth() + 1 : undefined;
      var monthOptionElements = months.map(function (month, i) {
        return {
          label: month,
          value: i
        };
      }).slice(startMonth, endMonth);
      var years = [minYear];
      for (var year = minYear + 1; year <= maxYear; ++year) {
        years.push(year);
      }
      if (displayYear > maxYear) {
        years.push({
          value: displayYear,
          disabled: true
        });
      }
      this.displayedMonthText = months[displayMonth];
      var monthSelect = React.createElement(core_1.HTMLSelect, {
        iconProps: { style: { right: this.state.monthRightOffset } },
        className: Classes.DATEPICKER_MONTH_SELECT,
        key: "month",
        minimal: true,
        onChange: this.handleMonthSelectChange,
        value: displayMonth,
        options: monthOptionElements
      });
      var yearSelect = React.createElement(core_1.HTMLSelect, {
        className: Classes.DATEPICKER_YEAR_SELECT,
        key: "year",
        minimal: true,
        onChange: this.handleYearSelectChange,
        value: displayYear,
        options: years
      });
      var orderedSelects = this.props.reverseMonthAndYearMenus ? [yearSelect, monthSelect] : [monthSelect, yearSelect];
      return React.createElement("div", { className: this.props.classNames.caption }, React.createElement("div", {
        className: Classes.DATEPICKER_CAPTION,
        ref: function (ref) {
          return _this.containerElement = ref;
        }
      }, orderedSelects), React.createElement(core_1.Divider, null));
    };
    DatePickerCaption.prototype.componentDidMount = function () {
      var _this = this;
      requestAnimationFrame(function () {
        return _this.positionArrows();
      });
    };
    DatePickerCaption.prototype.componentDidUpdate = function () {
      this.positionArrows();
    };
    DatePickerCaption.prototype.positionArrows = function () {
      var monthTextWidth = utils_1.measureTextWidth(this.displayedMonthText, Classes.DATEPICKER_CAPTION_MEASURE, this.containerElement);
      var monthSelectWidth = this.containerElement == null ? 0 : this.containerElement.firstElementChild.clientWidth;
      var rightOffset = Math.max(2, monthSelectWidth - monthTextWidth - core_1.Icon.SIZE_STANDARD - 2);
      this.setState({ monthRightOffset: rightOffset });
    };
    DatePickerCaption.prototype.dateChangeHandler = function (updater, handler) {
      var _this = this;
      return function (e) {
        var value = parseInt(e.target.value, 10);
        var newDate = dateUtils_1.clone(_this.props.date);
        updater(newDate, value);
        core_1.Utils.safeInvoke(_this.props.onDateChange, newDate);
        core_1.Utils.safeInvoke(handler, value);
      };
    };
    return DatePickerCaption;
  }(React.PureComponent);
  exports.DatePickerCaption = DatePickerCaption;
});
System.registerDynamic("npm:@blueprintjs/datetime@3.6.0/lib/cjs/datePickerCore.js", ["npm:@blueprintjs/datetime@3.6.0/lib/cjs/common/months.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var months_1 = $__require("npm:@blueprintjs/datetime@3.6.0/lib/cjs/common/months.js");
  exports.DISABLED_MODIFIER = "disabled";
  exports.HOVERED_RANGE_MODIFIER = "hovered-range";
  exports.OUTSIDE_MODIFIER = "outside";
  exports.SELECTED_MODIFIER = "selected";
  exports.SELECTED_RANGE_MODIFIER = "selected-range";
  exports.DISALLOWED_MODIFIERS = [exports.DISABLED_MODIFIER, exports.HOVERED_RANGE_MODIFIER, exports.OUTSIDE_MODIFIER, exports.SELECTED_MODIFIER, exports.SELECTED_RANGE_MODIFIER];
  function getDefaultMaxDate() {
    var date = new Date();
    date.setFullYear(date.getFullYear());
    date.setMonth(months_1.Months.DECEMBER, 31);
    return date;
  }
  exports.getDefaultMaxDate = getDefaultMaxDate;
  function getDefaultMinDate() {
    var date = new Date();
    date.setFullYear(date.getFullYear() - 20);
    date.setMonth(months_1.Months.JANUARY, 1);
    return date;
  }
  exports.getDefaultMinDate = getDefaultMinDate;
  function combineModifiers(baseModifiers, userModifiers) {
    var modifiers = baseModifiers;
    if (userModifiers != null) {
      modifiers = {};
      for (var _i = 0, _a = Object.keys(userModifiers); _i < _a.length; _i++) {
        var key = _a[_i];
        if (exports.DISALLOWED_MODIFIERS.indexOf(key) === -1) {
          modifiers[key] = userModifiers[key];
        }
      }
      for (var _b = 0, _c = Object.keys(baseModifiers); _b < _c.length; _b++) {
        var key = _c[_b];
        modifiers[key] = baseModifiers[key];
      }
    }
    return modifiers;
  }
  exports.combineModifiers = combineModifiers;
});
System.registerDynamic("npm:@blueprintjs/datetime@3.6.0/lib/cjs/datePickerNavbar.js", ["npm:tslib@1.9.3.js", "npm:@blueprintjs/core@3.11.0.js", "npm:react@16.7.0.js", "npm:classnames@2.2.6.js", "npm:@blueprintjs/datetime@3.6.0/lib/cjs/common/classes.js", "npm:@blueprintjs/datetime@3.6.0/lib/cjs/common/dateUtils.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  var core_1 = $__require("npm:@blueprintjs/core@3.11.0.js");
  var React = tslib_1.__importStar($__require("npm:react@16.7.0.js"));
  var classnames_1 = tslib_1.__importDefault($__require("npm:classnames@2.2.6.js"));
  var Classes = tslib_1.__importStar($__require("npm:@blueprintjs/datetime@3.6.0/lib/cjs/common/classes.js"));
  var dateUtils_1 = $__require("npm:@blueprintjs/datetime@3.6.0/lib/cjs/common/dateUtils.js");
  var DatePickerNavbar = function (_super) {
    tslib_1.__extends(DatePickerNavbar, _super);
    function DatePickerNavbar() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.handleNextClick = function () {
        return _this.props.onNextClick();
      };
      _this.handlePreviousClick = function () {
        return _this.props.onPreviousClick();
      };
      return _this;
    }
    DatePickerNavbar.prototype.render = function () {
      var _a = this.props,
          classes = _a.classNames,
          month = _a.month,
          maxDate = _a.maxDate,
          minDate = _a.minDate;
      return React.createElement("div", { className: classnames_1.default(Classes.DATEPICKER_NAVBAR, classes.navBar) }, this.props.hideLeftNavButton || React.createElement(core_1.Button, {
        className: classes.navButtonPrev,
        disabled: dateUtils_1.areSameMonth(month, minDate),
        icon: "chevron-left",
        minimal: true,
        onClick: this.handlePreviousClick
      }), this.props.hideRightNavButton || React.createElement(core_1.Button, {
        className: classes.navButtonNext,
        disabled: dateUtils_1.areSameMonth(month, maxDate),
        icon: "chevron-right",
        minimal: true,
        onClick: this.handleNextClick
      }));
    };
    return DatePickerNavbar;
  }(React.PureComponent);
  exports.DatePickerNavbar = DatePickerNavbar;
});
System.registerDynamic("npm:@blueprintjs/datetime@3.6.0/lib/cjs/dateRangeSelectionStrategy.js", ["npm:@blueprintjs/core@3.11.0.js", "npm:@blueprintjs/datetime@3.6.0/lib/cjs/common/dateUtils.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var core_1 = $__require("npm:@blueprintjs/core@3.11.0.js");
  var dateUtils_1 = $__require("npm:@blueprintjs/datetime@3.6.0/lib/cjs/common/dateUtils.js");
  var DateRangeSelectionStrategy = function () {
    function DateRangeSelectionStrategy() {}
    DateRangeSelectionStrategy.getNextState = function (currentRange, day, allowSingleDayRange, boundary) {
      if (boundary != null) {
        return this.getNextStateForBoundary(currentRange, day, allowSingleDayRange, boundary);
      } else {
        return this.getDefaultNextState(currentRange, day, allowSingleDayRange);
      }
    };
    DateRangeSelectionStrategy.getNextStateForBoundary = function (currentRange, day, allowSingleDayRange, boundary) {
      var boundaryDate = this.getBoundaryDate(boundary, currentRange);
      var otherBoundary = this.getOtherBoundary(boundary);
      var otherBoundaryDate = this.getBoundaryDate(otherBoundary, currentRange);
      var nextBoundary;
      var nextDateRange;
      if (boundaryDate == null && otherBoundaryDate == null) {
        nextBoundary = boundary;
        nextDateRange = this.createRangeForBoundary(boundary, day, null);
      } else if (boundaryDate != null && otherBoundaryDate == null) {
        var nextBoundaryDate = dateUtils_1.areSameDay(boundaryDate, day) ? null : day;
        nextBoundary = boundary;
        nextDateRange = this.createRangeForBoundary(boundary, nextBoundaryDate, null);
      } else if (boundaryDate == null && otherBoundaryDate != null) {
        if (dateUtils_1.areSameDay(day, otherBoundaryDate)) {
          var nextDate = void 0;
          if (allowSingleDayRange) {
            nextBoundary = boundary;
            nextDate = otherBoundaryDate;
          } else {
            nextBoundary = otherBoundary;
            nextDate = null;
          }
          nextDateRange = this.createRangeForBoundary(boundary, nextDate, nextDate);
        } else if (this.isOverlappingOtherBoundary(boundary, day, otherBoundaryDate)) {
          nextBoundary = otherBoundary;
          nextDateRange = this.createRangeForBoundary(boundary, otherBoundaryDate, day);
        } else {
          nextBoundary = boundary;
          nextDateRange = this.createRangeForBoundary(boundary, day, otherBoundaryDate);
        }
      } else {
        if (dateUtils_1.areSameDay(boundaryDate, day)) {
          var isSingleDayRangeSelected = dateUtils_1.areSameDay(boundaryDate, otherBoundaryDate);
          var nextOtherBoundaryDate = isSingleDayRangeSelected ? null : otherBoundaryDate;
          nextBoundary = boundary;
          nextDateRange = this.createRangeForBoundary(boundary, null, nextOtherBoundaryDate);
        } else if (dateUtils_1.areSameDay(day, otherBoundaryDate)) {
          var _a = allowSingleDayRange ? [otherBoundaryDate, otherBoundaryDate] : [boundaryDate, null],
              nextBoundaryDate = _a[0],
              nextOtherBoundaryDate = _a[1];
          nextBoundary = allowSingleDayRange ? boundary : otherBoundary;
          nextDateRange = this.createRangeForBoundary(boundary, nextBoundaryDate, nextOtherBoundaryDate);
        } else if (this.isOverlappingOtherBoundary(boundary, day, otherBoundaryDate)) {
          nextBoundary = boundary;
          nextDateRange = this.createRangeForBoundary(boundary, day, null);
        } else {
          nextBoundary = boundary;
          nextDateRange = this.createRangeForBoundary(boundary, day, otherBoundaryDate);
        }
      }
      return {
        dateRange: nextDateRange,
        boundary: nextBoundary
      };
    };
    DateRangeSelectionStrategy.getDefaultNextState = function (selectedRange, day, allowSingleDayRange) {
      var start = selectedRange[0],
          end = selectedRange[1];
      var nextDateRange;
      if (start == null && end == null) {
        nextDateRange = [day, null];
      } else if (start != null && end == null) {
        nextDateRange = this.createRange(day, start, allowSingleDayRange);
      } else if (start == null && end != null) {
        nextDateRange = this.createRange(day, end, allowSingleDayRange);
      } else {
        var isStart = dateUtils_1.areSameDay(start, day);
        var isEnd = dateUtils_1.areSameDay(end, day);
        if (isStart && isEnd) {
          nextDateRange = [null, null];
        } else if (isStart) {
          nextDateRange = [null, end];
        } else if (isEnd) {
          nextDateRange = [start, null];
        } else {
          nextDateRange = [day, null];
        }
      }
      return { dateRange: nextDateRange };
    };
    DateRangeSelectionStrategy.getOtherBoundary = function (boundary) {
      return boundary === core_1.Boundary.START ? core_1.Boundary.END : core_1.Boundary.START;
    };
    DateRangeSelectionStrategy.getBoundaryDate = function (boundary, dateRange) {
      return boundary === core_1.Boundary.START ? dateRange[0] : dateRange[1];
    };
    DateRangeSelectionStrategy.isOverlappingOtherBoundary = function (boundary, boundaryDate, otherBoundaryDate) {
      return boundary === core_1.Boundary.START ? boundaryDate > otherBoundaryDate : boundaryDate < otherBoundaryDate;
    };
    DateRangeSelectionStrategy.createRangeForBoundary = function (boundary, boundaryDate, otherBoundaryDate) {
      return boundary === core_1.Boundary.START ? [boundaryDate, otherBoundaryDate] : [otherBoundaryDate, boundaryDate];
    };
    DateRangeSelectionStrategy.createRange = function (a, b, allowSingleDayRange) {
      if (!allowSingleDayRange && dateUtils_1.areSameDay(a, b)) {
        return [null, null];
      }
      return a < b ? [a, b] : [b, a];
    };
    return DateRangeSelectionStrategy;
  }();
  exports.DateRangeSelectionStrategy = DateRangeSelectionStrategy;
});
System.registerDynamic("npm:@blueprintjs/datetime@3.6.0/lib/cjs/shortcuts.js", ["npm:tslib@1.9.3.js", "npm:@blueprintjs/core@3.11.0.js", "npm:react@16.7.0.js", "npm:@blueprintjs/datetime@3.6.0/lib/cjs/common/classes.js", "npm:@blueprintjs/datetime@3.6.0/lib/cjs/common/dateUtils.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  var core_1 = $__require("npm:@blueprintjs/core@3.11.0.js");
  var react_1 = tslib_1.__importDefault($__require("npm:react@16.7.0.js"));
  var classes_1 = $__require("npm:@blueprintjs/datetime@3.6.0/lib/cjs/common/classes.js");
  var dateUtils_1 = $__require("npm:@blueprintjs/datetime@3.6.0/lib/cjs/common/dateUtils.js");
  var Shortcuts = function (_super) {
    tslib_1.__extends(Shortcuts, _super);
    function Shortcuts() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    Shortcuts.prototype.render = function () {
      var _this = this;
      var shortcuts = this.props.shortcuts === true ? createDefaultShortcuts(this.props.allowSingleDayRange) : this.props.shortcuts;
      var shortcutElements = shortcuts.map(function (s, i) {
        return react_1.default.createElement(core_1.MenuItem, {
          className: core_1.Classes.POPOVER_DISMISS_OVERRIDE,
          disabled: !_this.isShortcutInRange(s.dateRange),
          key: i,
          onClick: _this.getShorcutClickHandler(s.dateRange),
          text: s.label
        });
      });
      return react_1.default.createElement(core_1.Menu, { className: classes_1.DATERANGEPICKER_SHORTCUTS }, shortcutElements);
    };
    Shortcuts.prototype.getShorcutClickHandler = function (nextValue) {
      var _this = this;
      return function () {
        return _this.props.onShortcutClick(nextValue);
      };
    };
    Shortcuts.prototype.isShortcutInRange = function (shortcutDateRange) {
      return dateUtils_1.isDayRangeInRange(shortcutDateRange, [this.props.minDate, this.props.maxDate]);
    };
    return Shortcuts;
  }(react_1.default.PureComponent);
  exports.Shortcuts = Shortcuts;
  function createShortcut(label, dateRange) {
    return {
      dateRange: dateRange,
      label: label
    };
  }
  function createDefaultShortcuts(allowSingleDayRange) {
    var today = new Date();
    var makeDate = function (action) {
      var returnVal = dateUtils_1.clone(today);
      action(returnVal);
      returnVal.setDate(returnVal.getDate() + 1);
      return returnVal;
    };
    var yesterday = makeDate(function (d) {
      return d.setDate(d.getDate() - 2);
    });
    var oneWeekAgo = makeDate(function (d) {
      return d.setDate(d.getDate() - 7);
    });
    var oneMonthAgo = makeDate(function (d) {
      return d.setMonth(d.getMonth() - 1);
    });
    var threeMonthsAgo = makeDate(function (d) {
      return d.setMonth(d.getMonth() - 3);
    });
    var sixMonthsAgo = makeDate(function (d) {
      return d.setMonth(d.getMonth() - 6);
    });
    var oneYearAgo = makeDate(function (d) {
      return d.setFullYear(d.getFullYear() - 1);
    });
    var twoYearsAgo = makeDate(function (d) {
      return d.setFullYear(d.getFullYear() - 2);
    });
    var singleDayShortcuts = allowSingleDayRange ? [createShortcut("Today", [today, today]), createShortcut("Yesterday", [yesterday, yesterday])] : [];
    return singleDayShortcuts.concat([createShortcut("Past week", [oneWeekAgo, today]), createShortcut("Past month", [oneMonthAgo, today]), createShortcut("Past 3 months", [threeMonthsAgo, today]), createShortcut("Past 6 months", [sixMonthsAgo, today]), createShortcut("Past year", [oneYearAgo, today]), createShortcut("Past 2 years", [twoYearsAgo, today])]);
  }
});
System.registerDynamic("npm:@blueprintjs/datetime@3.6.0/lib/cjs/dateRangePicker.js", ["npm:tslib@1.9.3.js", "npm:@blueprintjs/core@3.11.0.js", "npm:classnames@2.2.6.js", "npm:react@16.7.0.js", "npm:react-day-picker@7.2.4.js", "npm:@blueprintjs/datetime@3.6.0/lib/cjs/common/classes.js", "npm:@blueprintjs/datetime@3.6.0/lib/cjs/common/dateUtils.js", "npm:@blueprintjs/datetime@3.6.0/lib/cjs/common/errors.js", "npm:@blueprintjs/datetime@3.6.0/lib/cjs/common/monthAndYear.js", "npm:@blueprintjs/datetime@3.6.0/lib/cjs/datePickerCaption.js", "npm:@blueprintjs/datetime@3.6.0/lib/cjs/datePickerCore.js", "npm:@blueprintjs/datetime@3.6.0/lib/cjs/datePickerNavbar.js", "npm:@blueprintjs/datetime@3.6.0/lib/cjs/dateRangeSelectionStrategy.js", "npm:@blueprintjs/datetime@3.6.0/lib/cjs/shortcuts.js", "npm:@blueprintjs/datetime@3.6.0/lib/cjs/timePicker.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  var core_1 = $__require("npm:@blueprintjs/core@3.11.0.js");
  var classnames_1 = tslib_1.__importDefault($__require("npm:classnames@2.2.6.js"));
  var React = tslib_1.__importStar($__require("npm:react@16.7.0.js"));
  var react_day_picker_1 = tslib_1.__importDefault($__require("npm:react-day-picker@7.2.4.js"));
  var DateClasses = tslib_1.__importStar($__require("npm:@blueprintjs/datetime@3.6.0/lib/cjs/common/classes.js"));
  var DateUtils = tslib_1.__importStar($__require("npm:@blueprintjs/datetime@3.6.0/lib/cjs/common/dateUtils.js"));
  var Errors = tslib_1.__importStar($__require("npm:@blueprintjs/datetime@3.6.0/lib/cjs/common/errors.js"));
  var monthAndYear_1 = $__require("npm:@blueprintjs/datetime@3.6.0/lib/cjs/common/monthAndYear.js");
  var datePickerCaption_1 = $__require("npm:@blueprintjs/datetime@3.6.0/lib/cjs/datePickerCaption.js");
  var datePickerCore_1 = $__require("npm:@blueprintjs/datetime@3.6.0/lib/cjs/datePickerCore.js");
  var datePickerNavbar_1 = $__require("npm:@blueprintjs/datetime@3.6.0/lib/cjs/datePickerNavbar.js");
  var dateRangeSelectionStrategy_1 = $__require("npm:@blueprintjs/datetime@3.6.0/lib/cjs/dateRangeSelectionStrategy.js");
  var shortcuts_1 = $__require("npm:@blueprintjs/datetime@3.6.0/lib/cjs/shortcuts.js");
  var timePicker_1 = $__require("npm:@blueprintjs/datetime@3.6.0/lib/cjs/timePicker.js");
  var DateRangePicker = function (_super) {
    tslib_1.__extends(DateRangePicker, _super);
    function DateRangePicker(props, context) {
      var _this = _super.call(this, props, context) || this;
      _this.modifiers = (_a = {}, _a[datePickerCore_1.SELECTED_RANGE_MODIFIER] = function (day) {
        var value = _this.state.value;
        return value[0] != null && value[1] != null && DateUtils.isDayInRange(day, value, true);
      }, _a[datePickerCore_1.SELECTED_RANGE_MODIFIER + "-start"] = function (day) {
        return DateUtils.areSameDay(_this.state.value[0], day);
      }, _a[datePickerCore_1.SELECTED_RANGE_MODIFIER + "-end"] = function (day) {
        return DateUtils.areSameDay(_this.state.value[1], day);
      }, _a[datePickerCore_1.HOVERED_RANGE_MODIFIER] = function (day) {
        var _a = _this.state,
            hoverValue = _a.hoverValue,
            _b = _a.value,
            selectedStart = _b[0],
            selectedEnd = _b[1];
        if (selectedStart == null && selectedEnd == null) {
          return false;
        }
        if (hoverValue == null || hoverValue[0] == null || hoverValue[1] == null) {
          return false;
        }
        return DateUtils.isDayInRange(day, hoverValue, true);
      }, _a[datePickerCore_1.HOVERED_RANGE_MODIFIER + "-start"] = function (day) {
        var hoverValue = _this.state.hoverValue;
        if (hoverValue == null || hoverValue[0] == null) {
          return false;
        }
        return DateUtils.areSameDay(hoverValue[0], day);
      }, _a[datePickerCore_1.HOVERED_RANGE_MODIFIER + "-end"] = function (day) {
        var hoverValue = _this.state.hoverValue;
        if (hoverValue == null || hoverValue[1] == null) {
          return false;
        }
        return DateUtils.areSameDay(hoverValue[1], day);
      }, _a);
      _this.disabledDays = function (day) {
        return !DateUtils.isDayInRange(day, [_this.props.minDate, _this.props.maxDate]);
      };
      _this.getDisabledDaysModifier = function () {
        var disabledDays = _this.props.dayPickerProps.disabledDays;
        return disabledDays instanceof Array ? [_this.disabledDays].concat(disabledDays) : [_this.disabledDays, disabledDays];
      };
      _this.handleTimeChange = function (newTime, dateIndex) {
        core_1.Utils.safeInvoke(_this.props.timePickerProps.onChange, newTime);
        var _a = _this.state,
            value = _a.value,
            time = _a.time;
        var newValue = DateUtils.getDateTime(value[dateIndex] != null ? DateUtils.clone(value[dateIndex]) : new Date(), newTime);
        var newDateRange = [value[0], value[1]];
        newDateRange[dateIndex] = newValue;
        var newTimeRange = [time[0], time[1]];
        newTimeRange[dateIndex] = newTime;
        core_1.Utils.safeInvoke(_this.props.onChange, newDateRange);
        _this.setState({
          value: newDateRange,
          time: newTimeRange
        });
      };
      _this.handleTimeChangeLeftCalendar = function (time) {
        _this.handleTimeChange(time, 0);
      };
      _this.handleTimeChangeRightCalendar = function (time) {
        _this.handleTimeChange(time, 1);
      };
      _this.renderSingleNavbar = function (navbarProps) {
        return React.createElement(datePickerNavbar_1.DatePickerNavbar, tslib_1.__assign({}, navbarProps, {
          maxDate: _this.props.maxDate,
          minDate: _this.props.minDate
        }));
      };
      _this.renderLeftNavbar = function (navbarProps) {
        return React.createElement(datePickerNavbar_1.DatePickerNavbar, tslib_1.__assign({}, navbarProps, {
          hideRightNavButton: _this.props.contiguousCalendarMonths,
          maxDate: _this.props.maxDate,
          minDate: _this.props.minDate
        }));
      };
      _this.renderRightNavbar = function (navbarProps) {
        return React.createElement(datePickerNavbar_1.DatePickerNavbar, tslib_1.__assign({}, navbarProps, {
          hideLeftNavButton: _this.props.contiguousCalendarMonths,
          maxDate: _this.props.maxDate,
          minDate: _this.props.minDate
        }));
      };
      _this.renderSingleCaption = function (captionProps) {
        return React.createElement(datePickerCaption_1.DatePickerCaption, tslib_1.__assign({}, captionProps, {
          maxDate: _this.props.maxDate,
          minDate: _this.props.minDate,
          onMonthChange: _this.handleLeftMonthSelectChange,
          onYearChange: _this.handleLeftYearSelectChange,
          reverseMonthAndYearMenus: _this.props.reverseMonthAndYearMenus
        }));
      };
      _this.renderLeftCaption = function (captionProps) {
        return React.createElement(datePickerCaption_1.DatePickerCaption, tslib_1.__assign({}, captionProps, {
          maxDate: DateUtils.getDatePreviousMonth(_this.props.maxDate),
          minDate: _this.props.minDate,
          onMonthChange: _this.handleLeftMonthSelectChange,
          onYearChange: _this.handleLeftYearSelectChange,
          reverseMonthAndYearMenus: _this.props.reverseMonthAndYearMenus
        }));
      };
      _this.renderRightCaption = function (captionProps) {
        return React.createElement(datePickerCaption_1.DatePickerCaption, tslib_1.__assign({}, captionProps, {
          maxDate: _this.props.maxDate,
          minDate: DateUtils.getDateNextMonth(_this.props.minDate),
          onMonthChange: _this.handleRightMonthSelectChange,
          onYearChange: _this.handleRightYearSelectChange,
          reverseMonthAndYearMenus: _this.props.reverseMonthAndYearMenus
        }));
      };
      _this.handleDayMouseEnter = function (day, modifiers, e) {
        core_1.Utils.safeInvoke(_this.props.dayPickerProps.onDayMouseEnter, day, modifiers, e);
        if (modifiers.disabled) {
          return;
        }
        var _a = dateRangeSelectionStrategy_1.DateRangeSelectionStrategy.getNextState(_this.state.value, day, _this.props.allowSingleDayRange, _this.props.boundaryToModify),
            dateRange = _a.dateRange,
            boundary = _a.boundary;
        _this.setState({ hoverValue: dateRange });
        core_1.Utils.safeInvoke(_this.props.onHoverChange, dateRange, day, boundary);
      };
      _this.handleDayMouseLeave = function (day, modifiers, e) {
        core_1.Utils.safeInvoke(_this.props.dayPickerProps.onDayMouseLeave, day, modifiers, e);
        if (modifiers.disabled) {
          return;
        }
        _this.setState({ hoverValue: undefined });
        core_1.Utils.safeInvoke(_this.props.onHoverChange, undefined, day, undefined);
      };
      _this.handleDayClick = function (day, modifiers, e) {
        core_1.Utils.safeInvoke(_this.props.dayPickerProps.onDayClick, day, modifiers, e);
        if (modifiers.disabled) {
          _this.forceUpdate();
          return;
        }
        var nextValue = dateRangeSelectionStrategy_1.DateRangeSelectionStrategy.getNextState(_this.state.value, day, _this.props.allowSingleDayRange, _this.props.boundaryToModify).dateRange;
        _this.handleDayMouseEnter(day, modifiers, e);
        _this.handleNextState(nextValue);
      };
      _this.handleNextState = function (nextValue) {
        var value = _this.state.value;
        nextValue[0] = DateUtils.getDateTime(nextValue[0], _this.state.time[0]);
        nextValue[1] = DateUtils.getDateTime(nextValue[1], _this.state.time[1]);
        var nextState = getStateChange(value, nextValue, _this.state, _this.props.contiguousCalendarMonths);
        if (_this.props.value == null) {
          _this.setState(nextState);
        }
        core_1.Utils.safeInvoke(_this.props.onChange, nextValue);
      };
      _this.handleLeftMonthChange = function (newDate) {
        var leftView = monthAndYear_1.MonthAndYear.fromDate(newDate);
        core_1.Utils.safeInvoke(_this.props.dayPickerProps.onMonthChange, leftView.getFullDate());
        _this.updateLeftView(leftView);
      };
      _this.handleRightMonthChange = function (newDate) {
        var rightView = monthAndYear_1.MonthAndYear.fromDate(newDate);
        core_1.Utils.safeInvoke(_this.props.dayPickerProps.onMonthChange, rightView.getFullDate());
        _this.updateRightView(rightView);
      };
      _this.handleLeftMonthSelectChange = function (leftMonth) {
        var leftView = new monthAndYear_1.MonthAndYear(leftMonth, _this.state.leftView.getYear());
        core_1.Utils.safeInvoke(_this.props.dayPickerProps.onMonthChange, leftView.getFullDate());
        _this.updateLeftView(leftView);
      };
      _this.handleRightMonthSelectChange = function (rightMonth) {
        var rightView = new monthAndYear_1.MonthAndYear(rightMonth, _this.state.rightView.getYear());
        core_1.Utils.safeInvoke(_this.props.dayPickerProps.onMonthChange, rightView.getFullDate());
        _this.updateRightView(rightView);
      };
      _this.handleLeftYearSelectChange = function (leftDisplayYear) {
        var leftView = new monthAndYear_1.MonthAndYear(_this.state.leftView.getMonth(), leftDisplayYear);
        core_1.Utils.safeInvoke(_this.props.dayPickerProps.onMonthChange, leftView.getFullDate());
        var _a = _this.props,
            minDate = _a.minDate,
            maxDate = _a.maxDate;
        var adjustedMaxDate = DateUtils.getDatePreviousMonth(maxDate);
        var minMonthAndYear = new monthAndYear_1.MonthAndYear(minDate.getMonth(), minDate.getFullYear());
        var maxMonthAndYear = new monthAndYear_1.MonthAndYear(adjustedMaxDate.getMonth(), adjustedMaxDate.getFullYear());
        if (leftView.isBefore(minMonthAndYear)) {
          leftView = minMonthAndYear;
        } else if (leftView.isAfter(maxMonthAndYear)) {
          leftView = maxMonthAndYear;
        }
        var rightView = _this.state.rightView.clone();
        if (!leftView.isBefore(rightView) || _this.props.contiguousCalendarMonths) {
          rightView = leftView.getNextMonth();
        }
        _this.setViews(leftView, rightView);
      };
      _this.handleRightYearSelectChange = function (rightDisplayYear) {
        var rightView = new monthAndYear_1.MonthAndYear(_this.state.rightView.getMonth(), rightDisplayYear);
        core_1.Utils.safeInvoke(_this.props.dayPickerProps.onMonthChange, rightView.getFullDate());
        var _a = _this.props,
            minDate = _a.minDate,
            maxDate = _a.maxDate;
        var adjustedMinDate = DateUtils.getDateNextMonth(minDate);
        var minMonthAndYear = monthAndYear_1.MonthAndYear.fromDate(adjustedMinDate);
        var maxMonthAndYear = monthAndYear_1.MonthAndYear.fromDate(maxDate);
        if (rightView.isBefore(minMonthAndYear)) {
          rightView = minMonthAndYear;
        } else if (rightView.isAfter(maxMonthAndYear)) {
          rightView = maxMonthAndYear;
        }
        var leftView = _this.state.leftView.clone();
        if (!rightView.isAfter(leftView) || _this.props.contiguousCalendarMonths) {
          leftView = rightView.getPreviousMonth();
        }
        _this.setViews(leftView, rightView);
      };
      var value = getInitialValue(props);
      var time = value;
      var initialMonth = getInitialMonth(props, value);
      var initialMonthEqualsMinMonth = DateUtils.areSameMonth(initialMonth, props.minDate);
      var initalMonthEqualsMaxMonth = DateUtils.areSameMonth(initialMonth, props.maxDate);
      if (!initialMonthEqualsMinMonth && initalMonthEqualsMaxMonth) {
        initialMonth.setMonth(initialMonth.getMonth() - 1);
      }
      var leftView = monthAndYear_1.MonthAndYear.fromDate(initialMonth);
      var rightDate = value[1];
      var rightView = !props.contiguousCalendarMonths && rightDate != null && !DateUtils.areSameMonth(initialMonth, rightDate) ? monthAndYear_1.MonthAndYear.fromDate(rightDate) : leftView.getNextMonth();
      _this.state = {
        leftView: leftView,
        rightView: rightView,
        value: value,
        hoverValue: [null, null],
        time: time
      };
      return _this;
      var _a;
    }
    DateRangePicker.prototype.render = function () {
      var _a = this.props,
          className = _a.className,
          contiguousCalendarMonths = _a.contiguousCalendarMonths,
          singleMonthOnly = _a.singleMonthOnly;
      var isShowingOneMonth = singleMonthOnly || DateUtils.areSameMonth(this.props.minDate, this.props.maxDate);
      var classes = classnames_1.default(DateClasses.DATEPICKER, DateClasses.DATERANGEPICKER, className, (_b = {}, _b[DateClasses.DATERANGEPICKER_CONTIGUOUS] = contiguousCalendarMonths, _b[DateClasses.DATERANGEPICKER_SINGLE_MONTH] = isShowingOneMonth, _b));
      return React.createElement("div", { className: classes }, this.maybeRenderShortcuts(), React.createElement("div", null, this.renderCalendars(isShowingOneMonth), this.maybeRenderTimePickers()));
      var _b;
    };
    DateRangePicker.prototype.componentWillReceiveProps = function (nextProps) {
      _super.prototype.componentWillReceiveProps.call(this, nextProps);
      if (!DateUtils.areRangesEqual(this.props.value, nextProps.value) || this.props.contiguousCalendarMonths !== nextProps.contiguousCalendarMonths) {
        var nextState = getStateChange(this.props.value, nextProps.value, this.state, nextProps.contiguousCalendarMonths);
        this.setState(nextState);
      }
    };
    DateRangePicker.prototype.validateProps = function (props) {
      var defaultValue = props.defaultValue,
          initialMonth = props.initialMonth,
          maxDate = props.maxDate,
          minDate = props.minDate,
          boundaryToModify = props.boundaryToModify,
          value = props.value;
      var dateRange = [minDate, maxDate];
      if (defaultValue != null && !DateUtils.isDayRangeInRange(defaultValue, dateRange)) {
        throw new Error(Errors.DATERANGEPICKER_DEFAULT_VALUE_INVALID);
      }
      if (initialMonth != null && !DateUtils.isMonthInRange(initialMonth, dateRange)) {
        throw new Error(Errors.DATERANGEPICKER_INITIAL_MONTH_INVALID);
      }
      if (maxDate != null && minDate != null && maxDate < minDate && !DateUtils.areSameDay(maxDate, minDate)) {
        throw new Error(Errors.DATERANGEPICKER_MAX_DATE_INVALID);
      }
      if (value != null && !DateUtils.isDayRangeInRange(value, dateRange)) {
        throw new Error(Errors.DATERANGEPICKER_VALUE_INVALID);
      }
      if (boundaryToModify != null && boundaryToModify !== core_1.Boundary.START && boundaryToModify !== core_1.Boundary.END) {
        throw new Error(Errors.DATERANGEPICKER_PREFERRED_BOUNDARY_TO_MODIFY_INVALID);
      }
    };
    DateRangePicker.prototype.maybeRenderShortcuts = function () {
      var shortcuts = this.props.shortcuts;
      if (shortcuts == null || shortcuts === false) {
        return null;
      }
      var _a = this.props,
          allowSingleDayRange = _a.allowSingleDayRange,
          maxDate = _a.maxDate,
          minDate = _a.minDate;
      return [React.createElement(shortcuts_1.Shortcuts, tslib_1.__assign({ key: "shortcuts" }, {
        allowSingleDayRange: allowSingleDayRange,
        maxDate: maxDate,
        minDate: minDate,
        shortcuts: shortcuts
      }, { onShortcutClick: this.handleNextState })), React.createElement(core_1.Divider, { key: "div" })];
    };
    DateRangePicker.prototype.maybeRenderTimePickers = function () {
      var _a = this.props,
          timePrecision = _a.timePrecision,
          timePickerProps = _a.timePickerProps;
      if (timePrecision == null && timePickerProps === DateRangePicker.defaultProps.timePickerProps) {
        return null;
      }
      return React.createElement("div", { className: DateClasses.DATERANGEPICKER_TIMEPICKERS }, React.createElement(timePicker_1.TimePicker, tslib_1.__assign({ precision: timePrecision }, timePickerProps, {
        onChange: this.handleTimeChangeLeftCalendar,
        value: this.state.time[0]
      })), React.createElement(timePicker_1.TimePicker, tslib_1.__assign({ precision: timePrecision }, timePickerProps, {
        onChange: this.handleTimeChangeRightCalendar,
        value: this.state.time[1]
      })));
    };
    DateRangePicker.prototype.renderCalendars = function (isShowingOneMonth) {
      var _a = this.props,
          dayPickerProps = _a.dayPickerProps,
          locale = _a.locale,
          localeUtils = _a.localeUtils,
          maxDate = _a.maxDate,
          minDate = _a.minDate;
      var dayPickerBaseProps = tslib_1.__assign({
        locale: locale,
        localeUtils: localeUtils,
        modifiers: datePickerCore_1.combineModifiers(this.modifiers, this.props.modifiers),
        showOutsideDays: true
      }, dayPickerProps, {
        disabledDays: this.getDisabledDaysModifier(),
        onDayClick: this.handleDayClick,
        onDayMouseEnter: this.handleDayMouseEnter,
        onDayMouseLeave: this.handleDayMouseLeave,
        selectedDays: this.state.value
      });
      if (isShowingOneMonth) {
        return React.createElement(react_day_picker_1.default, tslib_1.__assign({}, dayPickerBaseProps, {
          captionElement: this.renderSingleCaption,
          navbarElement: this.renderSingleNavbar,
          fromMonth: minDate,
          month: this.state.leftView.getFullDate(),
          numberOfMonths: 1,
          onMonthChange: this.handleLeftMonthChange,
          toMonth: maxDate
        }));
      } else {
        return [React.createElement(react_day_picker_1.default, tslib_1.__assign({ key: "left" }, dayPickerBaseProps, {
          canChangeMonth: true,
          captionElement: this.renderLeftCaption,
          navbarElement: this.renderLeftNavbar,
          fromMonth: minDate,
          month: this.state.leftView.getFullDate(),
          numberOfMonths: 1,
          onMonthChange: this.handleLeftMonthChange,
          toMonth: DateUtils.getDatePreviousMonth(maxDate)
        })), React.createElement(react_day_picker_1.default, tslib_1.__assign({ key: "right" }, dayPickerBaseProps, {
          canChangeMonth: true,
          captionElement: this.renderRightCaption,
          navbarElement: this.renderRightNavbar,
          fromMonth: DateUtils.getDateNextMonth(minDate),
          month: this.state.rightView.getFullDate(),
          numberOfMonths: 1,
          onMonthChange: this.handleRightMonthChange,
          toMonth: maxDate
        }))];
      }
    };
    DateRangePicker.prototype.updateLeftView = function (leftView) {
      var rightView = this.state.rightView.clone();
      if (!leftView.isBefore(rightView) || this.props.contiguousCalendarMonths) {
        rightView = leftView.getNextMonth();
      }
      this.setViews(leftView, rightView);
    };
    DateRangePicker.prototype.updateRightView = function (rightView) {
      var leftView = this.state.leftView.clone();
      if (!rightView.isAfter(leftView) || this.props.contiguousCalendarMonths) {
        leftView = rightView.getPreviousMonth();
      }
      this.setViews(leftView, rightView);
    };
    DateRangePicker.prototype.setViews = function (leftView, rightView) {
      this.setState({
        leftView: leftView,
        rightView: rightView
      });
    };
    DateRangePicker.defaultProps = {
      allowSingleDayRange: false,
      contiguousCalendarMonths: true,
      dayPickerProps: {},
      maxDate: datePickerCore_1.getDefaultMaxDate(),
      minDate: datePickerCore_1.getDefaultMinDate(),
      reverseMonthAndYearMenus: false,
      shortcuts: true,
      singleMonthOnly: false,
      timePickerProps: {}
    };
    DateRangePicker.displayName = core_1.DISPLAYNAME_PREFIX + ".DateRangePicker";
    return DateRangePicker;
  }(core_1.AbstractPureComponent);
  exports.DateRangePicker = DateRangePicker;
  function getStateChange(value, nextValue, state, contiguousCalendarMonths) {
    if (value != null && nextValue == null) {
      return { value: [null, null] };
    } else if (nextValue != null) {
      var leftView = state.leftView.clone();
      var rightView = state.rightView.clone();
      var nextValueStartView = monthAndYear_1.MonthAndYear.fromDate(nextValue[0]);
      var nextValueEndView = monthAndYear_1.MonthAndYear.fromDate(nextValue[1]);
      if (nextValueStartView == null && nextValueEndView != null) {
        if (!nextValueEndView.isSame(leftView) && !nextValueEndView.isSame(rightView)) {
          rightView = nextValueEndView;
          if (!leftView.isBefore(rightView)) {
            leftView = rightView.getPreviousMonth();
          }
        }
      } else if (nextValueStartView != null && nextValueEndView == null) {
        if (!nextValueStartView.isSame(leftView) && !nextValueStartView.isSame(rightView)) {
          leftView = nextValueStartView;
          if (!rightView.isAfter(leftView)) {
            rightView = leftView.getNextMonth();
          }
        }
      } else if (nextValueStartView != null && nextValueEndView != null) {
        if (nextValueStartView.isSameMonth(nextValueEndView)) {
          if (leftView.isSame(nextValueStartView) || rightView.isSame(nextValueStartView)) {} else {
            leftView = nextValueStartView;
            rightView = nextValueStartView.getNextMonth();
          }
        } else {
          if (!leftView.isSame(nextValueStartView)) {
            leftView = nextValueStartView;
            rightView = nextValueStartView.getNextMonth();
          }
          if (contiguousCalendarMonths === false && !rightView.isSame(nextValueEndView)) {
            rightView = nextValueEndView;
          }
        }
      }
      return {
        leftView: leftView,
        rightView: rightView,
        value: nextValue
      };
    } else if (contiguousCalendarMonths === true) {
      if (!state.leftView.getNextMonth().isSameMonth(state.rightView)) {
        var nextRightView = state.leftView.getNextMonth();
        return { rightView: nextRightView };
      }
    }
    return {};
  }
  function getInitialValue(props) {
    if (props.value != null) {
      return props.value;
    }
    if (props.defaultValue != null) {
      return props.defaultValue;
    }
    return [null, null];
  }
  function getInitialMonth(props, value) {
    var today = new Date();
    if (props.initialMonth != null) {
      return props.initialMonth;
    } else if (value[0] != null) {
      return DateUtils.clone(value[0]);
    } else if (value[1] != null) {
      var month = DateUtils.clone(value[1]);
      if (!DateUtils.areSameMonth(month, props.minDate)) {
        month.setMonth(month.getMonth() - 1);
      }
      return month;
    } else if (DateUtils.isDayInRange(today, [props.minDate, props.maxDate])) {
      return today;
    } else {
      return DateUtils.getDateBetween([props.minDate, props.maxDate]);
    }
  }
});
System.registerDynamic("npm:@blueprintjs/datetime@3.6.0/lib/cjs/common/classes.js", ["npm:@blueprintjs/core@3.11.0.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";
  /*
   * Copyright 2015 Palantir Technologies, Inc. All rights reserved.
   *
   * Licensed under the terms of the LICENSE file distributed with this project.
   */

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var core_1 = $__require("npm:@blueprintjs/core@3.11.0.js");
  var NS = core_1.Classes.getClassNamespace();
  exports.DATEINPUT = NS + "-dateinput";
  exports.DATEINPUT_POPOVER = exports.DATEINPUT + "-popover";
  exports.DATEPICKER = NS + "-datepicker";
  exports.DATEPICKER_CAPTION = exports.DATEPICKER + "-caption";
  exports.DATEPICKER_CAPTION_CARET = exports.DATEPICKER_CAPTION + "-caret";
  exports.DATEPICKER_CAPTION_MEASURE = exports.DATEPICKER_CAPTION + "-measure";
  exports.DATEPICKER_CAPTION_SELECT = exports.DATEPICKER_CAPTION + "-select";
  exports.DATEPICKER_DAY = "DayPicker-Day";
  exports.DATEPICKER_DAY_DISABLED = exports.DATEPICKER_DAY + "--disabled";
  exports.DATEPICKER_DAY_OUTSIDE = exports.DATEPICKER_DAY + "--outside";
  exports.DATEPICKER_DAY_SELECTED = exports.DATEPICKER_DAY + "--selected";
  exports.DATEPICKER_FOOTER = exports.DATEPICKER + "-footer";
  exports.DATEPICKER_MONTH_SELECT = exports.DATEPICKER + "-month-select";
  exports.DATEPICKER_YEAR_SELECT = exports.DATEPICKER + "-year-select";
  exports.DATEPICKER_NAVBAR = exports.DATEPICKER + "-navbar";
  exports.DATERANGEPICKER = NS + "-daterangepicker";
  exports.DATERANGEPICKER_CONTIGUOUS = exports.DATERANGEPICKER + "-contiguous";
  exports.DATERANGEPICKER_SINGLE_MONTH = exports.DATERANGEPICKER + "-single-month";
  exports.DATERANGEPICKER_DAY_SELECTED_RANGE = exports.DATEPICKER_DAY + "--selected-range";
  exports.DATERANGEPICKER_DAY_HOVERED_RANGE = exports.DATEPICKER_DAY + "--hovered-range";
  exports.DATERANGEPICKER_SHORTCUTS = exports.DATERANGEPICKER + "-shortcuts";
  exports.DATERANGEPICKER_TIMEPICKERS = exports.DATERANGEPICKER + "-timepickers";
  exports.DATETIMEPICKER = NS + "-datetimepicker";
  exports.TIMEPICKER = NS + "-timepicker";
  exports.TIMEPICKER_ARROW_BUTTON = exports.TIMEPICKER + "-arrow-button";
  exports.TIMEPICKER_ARROW_ROW = exports.TIMEPICKER + "-arrow-row";
  exports.TIMEPICKER_DIVIDER_TEXT = exports.TIMEPICKER + "-divider-text";
  exports.TIMEPICKER_HOUR = exports.TIMEPICKER + "-hour";
  exports.TIMEPICKER_INPUT = exports.TIMEPICKER + "-input";
  exports.TIMEPICKER_INPUT_ROW = exports.TIMEPICKER + "-input-row";
  exports.TIMEPICKER_MILLISECOND = exports.TIMEPICKER + "-millisecond";
  exports.TIMEPICKER_MINUTE = exports.TIMEPICKER + "-minute";
  exports.TIMEPICKER_SECOND = exports.TIMEPICKER + "-second";
  exports.TIMEPICKER_AMPM_SELECT = exports.TIMEPICKER + "-ampm-select";
  
});
System.registerDynamic("npm:@blueprintjs/datetime@3.6.0/lib/cjs/common/months.js", [], true, function ($__require, exports, module) {
  /* */
  "use strict";
  /*
   * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
   *
   * Licensed under the terms of the LICENSE file distributed with this project.
   */

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  /**
   * Enumeration of calendar months.
   *
   * Note that the enum values are numbers (with January as `0`) so they can be
   * easily compared to `date.getMonth()`.
   */
  var Months;
  (function (Months) {
    Months[Months["JANUARY"] = 0] = "JANUARY";
    Months[Months["FEBRUARY"] = 1] = "FEBRUARY";
    Months[Months["MARCH"] = 2] = "MARCH";
    Months[Months["APRIL"] = 3] = "APRIL";
    Months[Months["MAY"] = 4] = "MAY";
    Months[Months["JUNE"] = 5] = "JUNE";
    Months[Months["JULY"] = 6] = "JULY";
    Months[Months["AUGUST"] = 7] = "AUGUST";
    Months[Months["SEPTEMBER"] = 8] = "SEPTEMBER";
    Months[Months["OCTOBER"] = 9] = "OCTOBER";
    Months[Months["NOVEMBER"] = 10] = "NOVEMBER";
    Months[Months["DECEMBER"] = 11] = "DECEMBER";
  })(Months = exports.Months || (exports.Months = {}));
  
});
System.registerDynamic("npm:@blueprintjs/datetime@3.6.0/lib/cjs/common/dateUtils.js", ["npm:@blueprintjs/datetime@3.6.0/lib/cjs/common/months.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var months_1 = $__require("npm:@blueprintjs/datetime@3.6.0/lib/cjs/common/months.js");
  function isDateValid(date) {
    return date instanceof Date && !isNaN(date.valueOf());
  }
  exports.isDateValid = isDateValid;
  function areEqual(date1, date2) {
    if (date1 == null && date2 == null) {
      return true;
    } else if (date1 == null || date2 == null) {
      return false;
    } else {
      return date1.getTime() === date2.getTime();
    }
  }
  exports.areEqual = areEqual;
  function areRangesEqual(dateRange1, dateRange2) {
    if (dateRange1 == null && dateRange2 == null) {
      return true;
    } else if (dateRange1 == null || dateRange2 == null) {
      return false;
    } else {
      var start1 = dateRange1[0],
          end1 = dateRange1[1];
      var start2 = dateRange2[0],
          end2 = dateRange2[1];
      var areStartsEqual = start1 == null && start2 == null || areSameDay(start1, start2);
      var areEndsEqual = end1 == null && end2 == null || areSameDay(end1, end2);
      return areStartsEqual && areEndsEqual;
    }
  }
  exports.areRangesEqual = areRangesEqual;
  function areSameDay(date1, date2) {
    return areSameMonth(date1, date2) && date1.getDate() === date2.getDate();
  }
  exports.areSameDay = areSameDay;
  function areSameMonth(date1, date2) {
    return date1 != null && date2 != null && date1.getMonth() === date2.getMonth() && date1.getFullYear() === date2.getFullYear();
  }
  exports.areSameMonth = areSameMonth;
  function areSameTime(date1, date2) {
    return date1 != null && date2 != null && date1.getHours() === date2.getHours() && date1.getMinutes() === date2.getMinutes() && date1.getSeconds() === date2.getSeconds() && date1.getMilliseconds() === date2.getMilliseconds();
  }
  exports.areSameTime = areSameTime;
  function clone(d) {
    return new Date(d.getTime());
  }
  exports.clone = clone;
  function isDayInRange(date, dateRange, exclusive) {
    if (exclusive === void 0) {
      exclusive = false;
    }
    if (date == null) {
      return false;
    }
    var day = clone(date);
    var start = clone(dateRange[0]);
    var end = clone(dateRange[1]);
    day.setHours(0, 0, 0, 0);
    start.setHours(0, 0, 0, 0);
    end.setHours(0, 0, 0, 0);
    return start <= day && day <= end && (!exclusive || !areSameDay(start, day) && !areSameDay(day, end));
  }
  exports.isDayInRange = isDayInRange;
  function isDayRangeInRange(innerRange, outerRange) {
    return (innerRange[0] == null || isDayInRange(innerRange[0], outerRange)) && (innerRange[1] == null || isDayInRange(innerRange[1], outerRange));
  }
  exports.isDayRangeInRange = isDayRangeInRange;
  function isMonthInRange(date, dateRange) {
    if (date == null) {
      return false;
    }
    var day = clone(date);
    var start = clone(dateRange[0]);
    var end = clone(dateRange[1]);
    day.setDate(1);
    start.setDate(1);
    end.setDate(1);
    day.setHours(0, 0, 0, 0);
    start.setHours(0, 0, 0, 0);
    end.setHours(0, 0, 0, 0);
    return start <= day && day <= end;
  }
  exports.isMonthInRange = isMonthInRange;
  exports.isTimeEqualOrGreaterThan = function (time, timeToCompare) {
    return time.getTime() >= timeToCompare.getTime();
  };
  exports.isTimeEqualOrSmallerThan = function (time, timeToCompare) {
    return time.getTime() <= timeToCompare.getTime();
  };
  function isTimeInRange(date, minDate, maxDate) {
    var time = getDateOnlyWithTime(date);
    var minTime = getDateOnlyWithTime(minDate);
    var maxTime = getDateOnlyWithTime(maxDate);
    var isTimeGreaterThanMinTime = exports.isTimeEqualOrGreaterThan(time, minTime);
    var isTimeSmallerThanMaxTime = exports.isTimeEqualOrSmallerThan(time, maxTime);
    if (exports.isTimeEqualOrSmallerThan(maxTime, minTime)) {
      return isTimeGreaterThanMinTime || isTimeSmallerThanMaxTime;
    }
    return isTimeGreaterThanMinTime && isTimeSmallerThanMaxTime;
  }
  exports.isTimeInRange = isTimeInRange;
  function getTimeInRange(time, minTime, maxTime) {
    if (areSameTime(minTime, maxTime)) {
      return maxTime;
    } else if (isTimeInRange(time, minTime, maxTime)) {
      return time;
    } else if (isTimeSameOrAfter(time, maxTime)) {
      return maxTime;
    }
    return minTime;
  }
  exports.getTimeInRange = getTimeInRange;
  function isTimeSameOrAfter(date, dateToCompare) {
    var time = getDateOnlyWithTime(date);
    var timeToCompare = getDateOnlyWithTime(dateToCompare);
    return exports.isTimeEqualOrGreaterThan(time, timeToCompare);
  }
  exports.isTimeSameOrAfter = isTimeSameOrAfter;
  function getDateBetween(dateRange) {
    var start = dateRange[0].getTime();
    var end = dateRange[1].getTime();
    var middle = start + (end - start) * 0.5;
    return new Date(middle);
  }
  exports.getDateBetween = getDateBetween;
  function getDateTime(date, time) {
    if (date == null) {
      return null;
    } else if (time == null) {
      return new Date(date.getFullYear(), date.getMonth(), date.getDate(), 0, 0, 0, 0);
    } else {
      return new Date(date.getFullYear(), date.getMonth(), date.getDate(), time.getHours(), time.getMinutes(), time.getSeconds(), time.getMilliseconds());
    }
  }
  exports.getDateTime = getDateTime;
  function getDateOnlyWithTime(date) {
    return new Date(0, 0, 0, date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds());
  }
  exports.getDateOnlyWithTime = getDateOnlyWithTime;
  function getDatePreviousMonth(date) {
    if (date.getMonth() === months_1.Months.JANUARY) {
      return new Date(date.getFullYear() - 1, months_1.Months.DECEMBER);
    } else {
      return new Date(date.getFullYear(), date.getMonth() - 1);
    }
  }
  exports.getDatePreviousMonth = getDatePreviousMonth;
  function getDateNextMonth(date) {
    if (date.getMonth() === months_1.Months.DECEMBER) {
      return new Date(date.getFullYear() + 1, months_1.Months.JANUARY);
    } else {
      return new Date(date.getFullYear(), date.getMonth() + 1);
    }
  }
  exports.getDateNextMonth = getDateNextMonth;
  function convert24HourMeridiem(hour, toPm) {
    if (hour < 0 || hour > 23) {
      throw new Error("hour must be between [0,23] inclusive: got " + hour);
    }
    return toPm ? hour % 12 + 12 : hour % 12;
  }
  exports.convert24HourMeridiem = convert24HourMeridiem;
  function getIsPmFrom24Hour(hour) {
    if (hour < 0 || hour > 23) {
      throw new Error("hour must be between [0,23] inclusive: got " + hour);
    }
    return hour >= 12;
  }
  exports.getIsPmFrom24Hour = getIsPmFrom24Hour;
  function get12HourFrom24Hour(hour) {
    if (hour < 0 || hour > 23) {
      throw new Error("hour must be between [0,23] inclusive: got " + hour);
    }
    var newHour = hour % 12;
    return newHour === 0 ? 12 : newHour;
  }
  exports.get12HourFrom24Hour = get12HourFrom24Hour;
  function get24HourFrom12Hour(hour, isPm) {
    if (hour < 1 || hour > 12) {
      throw new Error("hour must be between [1,12] inclusive: got " + hour);
    }
    var newHour = hour === 12 ? 0 : hour;
    return isPm ? newHour + 12 : newHour;
  }
  exports.get24HourFrom12Hour = get24HourFrom12Hour;
});
System.registerDynamic("npm:@blueprintjs/datetime@3.6.0/lib/cjs/common/timeUnit.js", ["npm:tslib@1.9.3.js", "npm:@blueprintjs/datetime@3.6.0/lib/cjs/common/classes.js", "npm:@blueprintjs/datetime@3.6.0/lib/cjs/common/dateUtils.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  var Classes = tslib_1.__importStar($__require("npm:@blueprintjs/datetime@3.6.0/lib/cjs/common/classes.js"));
  var dateUtils_1 = $__require("npm:@blueprintjs/datetime@3.6.0/lib/cjs/common/dateUtils.js");
  var TimeUnit;
  (function (TimeUnit) {
    TimeUnit["HOUR_24"] = "hour24";
    TimeUnit["HOUR_12"] = "hour12";
    TimeUnit["MINUTE"] = "minute";
    TimeUnit["SECOND"] = "second";
    TimeUnit["MS"] = "ms";
  })(TimeUnit = exports.TimeUnit || (exports.TimeUnit = {}));
  function getTimeUnit(unit, date) {
    switch (unit) {
      case TimeUnit.HOUR_24:
        return date.getHours();
      case TimeUnit.HOUR_12:
        return dateUtils_1.get12HourFrom24Hour(date.getHours());
      case TimeUnit.MINUTE:
        return date.getMinutes();
      case TimeUnit.SECOND:
        return date.getSeconds();
      case TimeUnit.MS:
        return date.getMilliseconds();
      default:
        throw Error("Invalid TimeUnit");
    }
  }
  exports.getTimeUnit = getTimeUnit;
  function setTimeUnit(unit, time, date, isPm) {
    switch (unit) {
      case TimeUnit.HOUR_24:
        date.setHours(time);
        break;
      case TimeUnit.HOUR_12:
        date.setHours(dateUtils_1.get24HourFrom12Hour(time, isPm));
        break;
      case TimeUnit.MINUTE:
        date.setMinutes(time);
        break;
      case TimeUnit.SECOND:
        date.setSeconds(time);
        break;
      case TimeUnit.MS:
        date.setMilliseconds(time);
        break;
      default:
        throw Error("Invalid TimeUnit");
    }
    return date;
  }
  exports.setTimeUnit = setTimeUnit;
  function isTimeUnitValid(unit, time) {
    return time != null && !isNaN(time) && getTimeUnitMin(unit) <= time && time <= getTimeUnitMax(unit);
  }
  exports.isTimeUnitValid = isTimeUnitValid;
  function wrapTimeAtUnit(unit, time) {
    var max = getTimeUnitMax(unit);
    var min = getTimeUnitMin(unit);
    if (time > max) {
      return min;
    } else if (time < min) {
      return max;
    }
    return time;
  }
  exports.wrapTimeAtUnit = wrapTimeAtUnit;
  function getTimeUnitClassName(unit) {
    return TimeUnitMetadata[unit].className;
  }
  exports.getTimeUnitClassName = getTimeUnitClassName;
  function getTimeUnitMax(unit) {
    return TimeUnitMetadata[unit].max;
  }
  exports.getTimeUnitMax = getTimeUnitMax;
  function getTimeUnitMin(unit) {
    return TimeUnitMetadata[unit].min;
  }
  exports.getTimeUnitMin = getTimeUnitMin;
  function getDefaultMinTime() {
    return new Date(0, 0, 0, DEFAULT_MIN_HOUR, DEFAULT_MIN_MINUTE, DEFAULT_MIN_SECOND, DEFAULT_MIN_MILLISECOND);
  }
  exports.getDefaultMinTime = getDefaultMinTime;
  function getDefaultMaxTime() {
    return new Date(0, 0, 0, DEFAULT_MAX_HOUR, DEFAULT_MAX_MINUTE, DEFAULT_MAX_SECOND, DEFAULT_MAX_MILLISECOND);
  }
  exports.getDefaultMaxTime = getDefaultMaxTime;
  var DEFAULT_MIN_HOUR = 0;
  var MERIDIEM_MIN_HOUR = 1;
  var DEFAULT_MIN_MINUTE = 0;
  var DEFAULT_MIN_SECOND = 0;
  var DEFAULT_MIN_MILLISECOND = 0;
  var DEFAULT_MAX_HOUR = 23;
  var MERIDIEM_MAX_HOUR = 12;
  var DEFAULT_MAX_MINUTE = 59;
  var DEFAULT_MAX_SECOND = 59;
  var DEFAULT_MAX_MILLISECOND = 999;
  var TimeUnitMetadata = (_a = {}, _a[TimeUnit.HOUR_24] = {
    className: Classes.TIMEPICKER_HOUR,
    max: DEFAULT_MAX_HOUR,
    min: DEFAULT_MIN_HOUR
  }, _a[TimeUnit.HOUR_12] = {
    className: Classes.TIMEPICKER_HOUR,
    max: MERIDIEM_MAX_HOUR,
    min: MERIDIEM_MIN_HOUR
  }, _a[TimeUnit.MINUTE] = {
    className: Classes.TIMEPICKER_MINUTE,
    max: DEFAULT_MAX_MINUTE,
    min: DEFAULT_MIN_MINUTE
  }, _a[TimeUnit.SECOND] = {
    className: Classes.TIMEPICKER_SECOND,
    max: DEFAULT_MAX_SECOND,
    min: DEFAULT_MIN_SECOND
  }, _a[TimeUnit.MS] = {
    className: Classes.TIMEPICKER_MILLISECOND,
    max: DEFAULT_MAX_MILLISECOND,
    min: DEFAULT_MIN_MILLISECOND
  }, _a);
  var _a;
});
System.registerDynamic("npm:@blueprintjs/datetime@3.6.0/lib/cjs/common/utils.js", [], true, function ($__require, exports, module) {
    /* */
    "use strict";
    /*
     * Copyright 2015 Palantir Technologies, Inc. All rights reserved.
     *
     * Licensed under the terms of the LICENSE file distributed with this project.
     */

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    /**
     * Measure width in pixels of a string displayed with styles provided by `className`.
     * Should only be used if measuring can't be done with existing DOM elements.
     */
    function measureTextWidth(text, className, containerElement) {
        if (className === void 0) {
            className = "";
        }
        if (containerElement === void 0) {
            containerElement = document.body;
        }
        if (containerElement == null) {
            return 0;
        }
        var span = document.createElement("span");
        span.classList.add(className);
        span.textContent = text;
        containerElement.appendChild(span);
        var spanWidth = span.offsetWidth;
        span.remove();
        return spanWidth;
    }
    exports.measureTextWidth = measureTextWidth;
    function padWithZeroes(str, minLength) {
        if (str.length < minLength) {
            return "" + stringRepeat("0", minLength - str.length) + str;
        } else {
            return str;
        }
    }
    exports.padWithZeroes = padWithZeroes;
    function stringRepeat(str, numTimes) {
        return new Array(numTimes + 1).join(str);
    }
    
});
System.registerDynamic("npm:@blueprintjs/datetime@3.6.0/lib/cjs/timePicker.js", ["npm:tslib@1.9.3.js", "npm:@blueprintjs/core@3.11.0.js", "npm:classnames@2.2.6.js", "npm:react@16.7.0.js", "npm:@blueprintjs/datetime@3.6.0/lib/cjs/common/classes.js", "npm:@blueprintjs/datetime@3.6.0/lib/cjs/common/dateUtils.js", "npm:@blueprintjs/datetime@3.6.0/lib/cjs/common/timeUnit.js", "npm:@blueprintjs/datetime@3.6.0/lib/cjs/common/utils.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  var core_1 = $__require("npm:@blueprintjs/core@3.11.0.js");
  var classnames_1 = tslib_1.__importDefault($__require("npm:classnames@2.2.6.js"));
  var React = tslib_1.__importStar($__require("npm:react@16.7.0.js"));
  var Classes = tslib_1.__importStar($__require("npm:@blueprintjs/datetime@3.6.0/lib/cjs/common/classes.js"));
  var DateUtils = tslib_1.__importStar($__require("npm:@blueprintjs/datetime@3.6.0/lib/cjs/common/dateUtils.js"));
  var timeUnit_1 = $__require("npm:@blueprintjs/datetime@3.6.0/lib/cjs/common/timeUnit.js");
  var Utils = tslib_1.__importStar($__require("npm:@blueprintjs/datetime@3.6.0/lib/cjs/common/utils.js"));
  exports.TimePrecision = {
    MILLISECOND: "millisecond",
    MINUTE: "minute",
    SECOND: "second"
  };
  var TimePicker = function (_super) {
    tslib_1.__extends(TimePicker, _super);
    function TimePicker(props, context) {
      var _this = _super.call(this, props, context) || this;
      _this.getInputBlurHandler = function (unit) {
        return function (e) {
          var text = getStringValueFromInputEvent(e);
          _this.updateTime(parseInt(text, 10), unit);
        };
      };
      _this.getInputChangeHandler = function (unit) {
        return function (e) {
          var TWO_DIGITS = /^\d{0,2}$/;
          var THREE_DIGITS = /^\d{0,3}$/;
          var text = getStringValueFromInputEvent(e);
          var isValid = false;
          switch (unit) {
            case timeUnit_1.TimeUnit.HOUR_24:
            case timeUnit_1.TimeUnit.HOUR_12:
            case timeUnit_1.TimeUnit.MINUTE:
            case timeUnit_1.TimeUnit.SECOND:
              isValid = TWO_DIGITS.test(text);
              break;
            case timeUnit_1.TimeUnit.MS:
              isValid = THREE_DIGITS.test(text);
              break;
            default:
              throw Error("Invalid TimeUnit");
          }
          if (isValid) {
            switch (unit) {
              case timeUnit_1.TimeUnit.HOUR_24:
              case timeUnit_1.TimeUnit.HOUR_12:
                _this.updateState({ hourText: text });
                break;
              case timeUnit_1.TimeUnit.MINUTE:
                _this.updateState({ minuteText: text });
                break;
              case timeUnit_1.TimeUnit.SECOND:
                _this.updateState({ secondText: text });
                break;
              case timeUnit_1.TimeUnit.MS:
                _this.updateState({ millisecondText: text });
                break;
              default:
                throw Error("Invalid TimeUnit");
            }
          }
        };
      };
      _this.getInputKeyDownHandler = function (unit) {
        return function (e) {
          handleKeyEvent(e, (_a = {}, _a[core_1.Keys.ARROW_UP] = function () {
            return _this.incrementTime(unit);
          }, _a[core_1.Keys.ARROW_DOWN] = function () {
            return _this.decrementTime(unit);
          }, _a[core_1.Keys.ENTER] = function () {
            e.currentTarget.blur();
          }, _a));
          var _a;
        };
      };
      _this.handleFocus = function (e) {
        if (_this.props.selectAllOnFocus) {
          e.currentTarget.select();
        }
      };
      _this.handleAmPmChange = function (e) {
        var isNextPm = e.currentTarget.value === "pm";
        if (isNextPm !== _this.state.isPm) {
          var hour_1 = DateUtils.convert24HourMeridiem(_this.state.value.getHours(), isNextPm);
          _this.setState({ isPm: isNextPm }, function () {
            return _this.updateTime(hour_1, timeUnit_1.TimeUnit.HOUR_24);
          });
        }
      };
      _this.incrementTime = function (unit) {
        return _this.shiftTime(unit, 1);
      };
      _this.decrementTime = function (unit) {
        return _this.shiftTime(unit, -1);
      };
      var value = props.minTime;
      if (props.value != null) {
        value = props.value;
      } else if (props.defaultValue != null) {
        value = props.defaultValue;
      }
      _this.state = _this.getFullStateFromValue(value, props.useAmPm);
      return _this;
    }
    TimePicker.prototype.render = function () {
      var shouldRenderMilliseconds = this.props.precision === exports.TimePrecision.MILLISECOND;
      var shouldRenderSeconds = shouldRenderMilliseconds || this.props.precision === exports.TimePrecision.SECOND;
      var hourUnit = this.props.useAmPm ? timeUnit_1.TimeUnit.HOUR_12 : timeUnit_1.TimeUnit.HOUR_24;
      var classes = classnames_1.default(Classes.TIMEPICKER, this.props.className, (_a = {}, _a[core_1.Classes.DISABLED] = this.props.disabled, _a));
      return React.createElement("div", { className: classes }, React.createElement("div", { className: Classes.TIMEPICKER_ARROW_ROW }, this.maybeRenderArrowButton(true, hourUnit), this.maybeRenderArrowButton(true, timeUnit_1.TimeUnit.MINUTE), shouldRenderSeconds && this.maybeRenderArrowButton(true, timeUnit_1.TimeUnit.SECOND), shouldRenderMilliseconds && this.maybeRenderArrowButton(true, timeUnit_1.TimeUnit.MS)), React.createElement("div", { className: Classes.TIMEPICKER_INPUT_ROW }, this.renderInput(Classes.TIMEPICKER_HOUR, hourUnit, this.state.hourText), this.renderDivider(), this.renderInput(Classes.TIMEPICKER_MINUTE, timeUnit_1.TimeUnit.MINUTE, this.state.minuteText), shouldRenderSeconds && this.renderDivider(), shouldRenderSeconds && this.renderInput(Classes.TIMEPICKER_SECOND, timeUnit_1.TimeUnit.SECOND, this.state.secondText), shouldRenderMilliseconds && this.renderDivider("."), shouldRenderMilliseconds && this.renderInput(Classes.TIMEPICKER_MILLISECOND, timeUnit_1.TimeUnit.MS, this.state.millisecondText)), this.maybeRenderAmPm(), React.createElement("div", { className: Classes.TIMEPICKER_ARROW_ROW }, this.maybeRenderArrowButton(false, hourUnit), this.maybeRenderArrowButton(false, timeUnit_1.TimeUnit.MINUTE), shouldRenderSeconds && this.maybeRenderArrowButton(false, timeUnit_1.TimeUnit.SECOND), shouldRenderMilliseconds && this.maybeRenderArrowButton(false, timeUnit_1.TimeUnit.MS)));
      var _a;
    };
    TimePicker.prototype.componentWillReceiveProps = function (nextProps) {
      var didMinTimeChange = nextProps.minTime !== this.props.minTime;
      var didMaxTimeChange = nextProps.maxTime !== this.props.maxTime;
      var didBoundsChange = didMinTimeChange || didMaxTimeChange;
      var value = this.state.value;
      if (didBoundsChange) {
        value = DateUtils.getTimeInRange(this.state.value, nextProps.minTime, nextProps.maxTime);
      }
      if (nextProps.value != null && !DateUtils.areSameTime(nextProps.value, this.props.value)) {
        value = nextProps.value;
      }
      this.setState(this.getFullStateFromValue(value, nextProps.useAmPm));
    };
    TimePicker.prototype.maybeRenderArrowButton = function (isDirectionUp, timeUnit) {
      var _this = this;
      if (!this.props.showArrowButtons) {
        return null;
      }
      var classes = classnames_1.default(Classes.TIMEPICKER_ARROW_BUTTON, timeUnit_1.getTimeUnitClassName(timeUnit));
      var onClick = function () {
        return (isDirectionUp ? _this.incrementTime : _this.decrementTime)(timeUnit);
      };
      return React.createElement("span", {
        className: classes,
        onClick: onClick
      }, React.createElement(core_1.Icon, { icon: isDirectionUp ? "chevron-up" : "chevron-down" }));
    };
    TimePicker.prototype.renderDivider = function (text) {
      if (text === void 0) {
        text = ":";
      }
      return React.createElement("span", { className: Classes.TIMEPICKER_DIVIDER_TEXT }, text);
    };
    TimePicker.prototype.renderInput = function (className, unit, value) {
      return React.createElement("input", {
        className: classnames_1.default(Classes.TIMEPICKER_INPUT, className),
        onBlur: this.getInputBlurHandler(unit),
        onChange: this.getInputChangeHandler(unit),
        onFocus: this.handleFocus,
        onKeyDown: this.getInputKeyDownHandler(unit),
        value: value,
        disabled: this.props.disabled
      });
    };
    TimePicker.prototype.maybeRenderAmPm = function () {
      if (!this.props.useAmPm) {
        return null;
      }
      return React.createElement(core_1.HTMLSelect, {
        className: Classes.TIMEPICKER_AMPM_SELECT,
        disabled: this.props.disabled,
        onChange: this.handleAmPmChange,
        value: this.state.isPm ? "pm" : "am"
      }, React.createElement("option", { value: "am" }, "AM"), React.createElement("option", { value: "pm" }, "PM"));
    };
    TimePicker.prototype.getFullStateFromValue = function (value, useAmPm) {
      var timeInRange = DateUtils.getTimeInRange(value, this.props.minTime, this.props.maxTime);
      var hourUnit = useAmPm ? timeUnit_1.TimeUnit.HOUR_12 : timeUnit_1.TimeUnit.HOUR_24;
      return {
        hourText: formatTime(timeInRange.getHours(), hourUnit),
        minuteText: formatTime(timeInRange.getMinutes(), timeUnit_1.TimeUnit.MINUTE),
        secondText: formatTime(timeInRange.getSeconds(), timeUnit_1.TimeUnit.SECOND),
        millisecondText: formatTime(timeInRange.getMilliseconds(), timeUnit_1.TimeUnit.MS),
        value: timeInRange,
        isPm: DateUtils.getIsPmFrom24Hour(timeInRange.getHours())
      };
    };
    TimePicker.prototype.shiftTime = function (unit, amount) {
      if (this.props.disabled) {
        return;
      }
      var newTime = timeUnit_1.getTimeUnit(unit, this.state.value) + amount;
      this.updateTime(timeUnit_1.wrapTimeAtUnit(unit, newTime), unit);
    };
    TimePicker.prototype.updateTime = function (time, unit) {
      var newValue = DateUtils.clone(this.state.value);
      if (timeUnit_1.isTimeUnitValid(unit, time)) {
        timeUnit_1.setTimeUnit(unit, time, newValue, this.state.isPm);
        if (DateUtils.isTimeInRange(newValue, this.props.minTime, this.props.maxTime)) {
          this.updateState({ value: newValue });
        } else {
          this.updateState(this.getFullStateFromValue(this.state.value, this.props.useAmPm));
        }
      } else {
        this.updateState(this.getFullStateFromValue(this.state.value, this.props.useAmPm));
      }
    };
    TimePicker.prototype.updateState = function (state) {
      var newState = state;
      var hasNewValue = newState.value != null && !DateUtils.areSameTime(newState.value, this.state.value);
      if (this.props.value == null) {
        if (hasNewValue) {
          newState = this.getFullStateFromValue(newState.value, this.props.useAmPm);
        }
        this.setState(newState);
      } else {
        if (hasNewValue) {
          this.setState(this.getFullStateFromValue(this.state.value, this.props.useAmPm));
        } else {
          this.setState(tslib_1.__assign({}, newState, { value: DateUtils.clone(this.state.value) }));
        }
      }
      if (hasNewValue) {
        core_1.Utils.safeInvoke(this.props.onChange, newState.value);
      }
    };
    TimePicker.defaultProps = {
      disabled: false,
      maxTime: timeUnit_1.getDefaultMaxTime(),
      minTime: timeUnit_1.getDefaultMinTime(),
      precision: exports.TimePrecision.MINUTE,
      selectAllOnFocus: false,
      showArrowButtons: false,
      useAmPm: false
    };
    TimePicker.displayName = core_1.DISPLAYNAME_PREFIX + ".TimePicker";
    return TimePicker;
  }(React.Component);
  exports.TimePicker = TimePicker;
  function formatTime(time, unit) {
    switch (unit) {
      case timeUnit_1.TimeUnit.HOUR_24:
        return time.toString();
      case timeUnit_1.TimeUnit.HOUR_12:
        return DateUtils.get12HourFrom24Hour(time).toString();
      case timeUnit_1.TimeUnit.MINUTE:
      case timeUnit_1.TimeUnit.SECOND:
        return Utils.padWithZeroes(time.toString(), 2);
      case timeUnit_1.TimeUnit.MS:
        return Utils.padWithZeroes(time.toString(), 3);
      default:
        throw Error("Invalid TimeUnit");
    }
  }
  function getStringValueFromInputEvent(e) {
    return e.target.value;
  }
  function handleKeyEvent(e, actions, preventDefault) {
    if (preventDefault === void 0) {
      preventDefault = true;
    }
    for (var _i = 0, _a = Object.keys(actions); _i < _a.length; _i++) {
      var k = _a[_i];
      var key = Number(k);
      if (e.which === key) {
        if (preventDefault) {
          e.preventDefault();
        }
        actions[key]();
      }
    }
  }
});
System.registerDynamic("npm:@blueprintjs/datetime@3.6.0/lib/cjs/index.js", ["npm:tslib@1.9.3.js", "npm:@blueprintjs/datetime@3.6.0/lib/cjs/common/classes.js", "npm:@blueprintjs/datetime@3.6.0/lib/cjs/common/months.js", "npm:@blueprintjs/datetime@3.6.0/lib/cjs/dateInput.js", "npm:@blueprintjs/datetime@3.6.0/lib/cjs/datePicker.js", "npm:@blueprintjs/datetime@3.6.0/lib/cjs/dateTimePicker.js", "npm:@blueprintjs/datetime@3.6.0/lib/cjs/dateRangeInput.js", "npm:@blueprintjs/datetime@3.6.0/lib/cjs/dateRangePicker.js", "npm:@blueprintjs/datetime@3.6.0/lib/cjs/timePicker.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  var classes = tslib_1.__importStar($__require("npm:@blueprintjs/datetime@3.6.0/lib/cjs/common/classes.js"));
  exports.Classes = classes;
  var months_1 = $__require("npm:@blueprintjs/datetime@3.6.0/lib/cjs/common/months.js");
  exports.Months = months_1.Months;
  var dateInput_1 = $__require("npm:@blueprintjs/datetime@3.6.0/lib/cjs/dateInput.js");
  exports.DateInput = dateInput_1.DateInput;
  var datePicker_1 = $__require("npm:@blueprintjs/datetime@3.6.0/lib/cjs/datePicker.js");
  exports.DatePicker = datePicker_1.DatePicker;
  var dateTimePicker_1 = $__require("npm:@blueprintjs/datetime@3.6.0/lib/cjs/dateTimePicker.js");
  exports.DateTimePicker = dateTimePicker_1.DateTimePicker;
  var dateRangeInput_1 = $__require("npm:@blueprintjs/datetime@3.6.0/lib/cjs/dateRangeInput.js");
  exports.DateRangeInput = dateRangeInput_1.DateRangeInput;
  var dateRangePicker_1 = $__require("npm:@blueprintjs/datetime@3.6.0/lib/cjs/dateRangePicker.js");
  exports.DateRangePicker = dateRangePicker_1.DateRangePicker;
  var timePicker_1 = $__require("npm:@blueprintjs/datetime@3.6.0/lib/cjs/timePicker.js");
  exports.TimePicker = timePicker_1.TimePicker;
  exports.TimePrecision = timePicker_1.TimePrecision;
});
System.registerDynamic("npm:@blueprintjs/datetime@3.6.0.js", ["npm:@blueprintjs/datetime@3.6.0/lib/cjs/index.js"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("npm:@blueprintjs/datetime@3.6.0/lib/cjs/index.js");
});
System.registerDynamic("app/components/PageDateTime.js", ["npm:react@16.7.0.js", "npm:@blueprintjs/datetime@3.6.0.js", "app/components/Help.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const BlueprintDateTime = $__require("npm:@blueprintjs/datetime@3.6.0.js");
    const Help_1 = $__require("app/components/Help.js");
    const css = {
        group: {
            display: 'inline-block'
        },
        label: {
            marginBottom: '5px'
        }
    };
    class PageDateTime extends React.Component {
        render() {
            let dateStyle = {};
            let date = new Date(this.props.value);
            if (!this.props.value || this.props.value.includes('0000-12-31') || this.props.value.includes('0001-01-01')) {
                date = null;
            }
            if (!date || this.props.disabled) {
                dateStyle.opacity = 0.5;
            }
            return React.createElement("div", { hidden: this.props.hidden }, React.createElement("div", { style: css.group }, React.createElement("label", { className: "bp3-label", style: css.label }, this.props.label, React.createElement(Help_1.default, { title: this.props.label, content: this.props.help })), React.createElement("div", { style: dateStyle }, React.createElement(BlueprintDateTime.DateTimePicker, { value: this.props.disabled ? null : date, timePickerProps: {
                    showArrowButtons: true
                }, datePickerProps: {
                    showActionsBar: true
                }, onChange: newDate => {
                    if (this.props.disabled) {
                        return;
                    }
                    if (newDate) {
                        this.props.onChange(newDate.toJSON());
                    } else {
                        this.props.onChange(null);
                    }
                } }))));
        }
    }
    exports.default = PageDateTime;
    
});
System.registerDynamic("app/components/PageNew.js", ["npm:react@16.7.0.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const css = {
        message: {
            marginTop: '6px'
        },
        box: {
            marginTop: '15px'
        },
        button: {
            marginLeft: '10px'
        },
        buttons: {
            flexShrink: 0
        }
    };
    class PageNew extends React.Component {
        render() {
            return React.createElement("div", { className: "layout horizontal", style: css.box }, React.createElement("div", { className: "flex" }), React.createElement("div", { className: "layout horizontal" }, React.createElement("span", { style: css.message, hidden: !this.props.message }, this.props.message), React.createElement("div", { style: css.buttons }, React.createElement("button", { className: "bp3-button bp3-intent-success bp3-icon-add", style: css.button, type: "button", disabled: !this.props.changed || this.props.disabled, onClick: this.props.onSave }, "New"))));
        }
    }
    exports.default = PageNew;
    
});
System.registerDynamic("app/components/UserDetailed.js", ["npm:react@16.7.0.js", "app/actions/UserActions.js", "app/utils/MiscUtils.js", "app/stores/UserStore.js", "app/components/Sessions.js", "app/components/Devices.js", "app/components/Audits.js", "app/components/Page.js", "app/components/PageHeader.js", "app/components/PagePanel.js", "app/components/PageSplit.js", "app/components/PageInfo.js", "app/components/PageInput.js", "app/components/PageInputButton.js", "app/components/PageSwitch.js", "app/components/PageSelect.js", "app/components/PageDateTime.js", "app/components/PageSave.js", "app/components/PageNew.js", "app/components/ConfirmButton.js", "app/components/Help.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const UserActions = $__require("app/actions/UserActions.js");
    const MiscUtils = $__require("app/utils/MiscUtils.js");
    const UserStore_1 = $__require("app/stores/UserStore.js");
    const Sessions_1 = $__require("app/components/Sessions.js");
    const Devices_1 = $__require("app/components/Devices.js");
    const Audits_1 = $__require("app/components/Audits.js");
    const Page_1 = $__require("app/components/Page.js");
    const PageHeader_1 = $__require("app/components/PageHeader.js");
    const PagePanel_1 = $__require("app/components/PagePanel.js");
    const PageSplit_1 = $__require("app/components/PageSplit.js");
    const PageInfo_1 = $__require("app/components/PageInfo.js");
    const PageInput_1 = $__require("app/components/PageInput.js");
    const PageInputButton_1 = $__require("app/components/PageInputButton.js");
    const PageSwitch_1 = $__require("app/components/PageSwitch.js");
    const PageSelect_1 = $__require("app/components/PageSelect.js");
    const PageDateTime_1 = $__require("app/components/PageDateTime.js");
    const PageSave_1 = $__require("app/components/PageSave.js");
    const PageNew_1 = $__require("app/components/PageNew.js");
    const ConfirmButton_1 = $__require("app/components/ConfirmButton.js");
    const Help_1 = $__require("app/components/Help.js");
    const css = {
        header: {
            marginTop: '-19px'
        },
        heading: {
            margin: '19px 0 0 0'
        },
        button: {
            margin: '10px 0 0 0'
        },
        role: {
            margin: '9px 5px 0 5px',
            height: '20px'
        }
    };
    class UserDetailed extends React.Component {
        constructor(props, context) {
            super(props, context);
            this.onChange = () => {
                this.setState(Object.assign({}, this.state, { user: UserStore_1.default.userM }));
            };
            this.onSave = () => {
                this.setState(Object.assign({}, this.state, { disabled: true }));
                UserActions.commit(this.state.user).then(() => {
                    this.setState(Object.assign({}, this.state, { message: 'Your changes have been saved', changed: false, disabled: false }));
                }).catch(() => {
                    this.setState(Object.assign({}, this.state, { message: '', disabled: false }));
                });
            };
            this.onNew = () => {
                this.setState(Object.assign({}, this.state, { disabled: true }));
                UserActions.create(this.state.user).then(() => {
                    this.setState(Object.assign({}, this.state, { message: 'User has been created', changed: false, disabled: false, locked: true }));
                }).catch(() => {
                    this.setState(Object.assign({}, this.state, { message: '', disabled: false }));
                });
            };
            this.set = (name, val) => {
                let user = Object.assign({}, this.state.user);
                user[name] = val;
                this.setState(Object.assign({}, this.state, { changed: true, message: '', user: user }));
            };
            this.onAddRole = () => {
                let roles = [...this.state.user.roles];
                if (!this.state.addRole) {
                    return;
                }
                if (roles.indexOf(this.state.addRole) === -1) {
                    roles.push(this.state.addRole);
                }
                roles.sort();
                this.setState(Object.assign({}, this.state, { changed: true, message: '', addRole: '', user: Object.assign({}, this.state.user, { roles: roles }) }));
            };
            this.onRemoveRole = role => {
                let roles = [...this.state.user.roles];
                let i = roles.indexOf(role);
                if (i === -1) {
                    return;
                }
                roles.splice(i, 1);
                this.setState(Object.assign({}, this.state, { changed: true, message: '', addRole: '', user: Object.assign({}, this.state.user, { roles: roles }) }));
            };
            this.onDelete = () => {
                this.setState(Object.assign({}, this.state, { disabled: true }));
                UserActions.remove([this.props.userId]).then(() => {
                    this.setState(Object.assign({}, this.state, { message: 'User has been deleted', changed: false, disabled: false, locked: true }));
                }).catch(() => {
                    this.setState(Object.assign({}, this.state, { disabled: false }));
                });
            };
            this.state = {
                changed: false,
                disabled: false,
                locked: false,
                message: '',
                addRole: '',
                user: UserStore_1.default.userM
            };
        }
        componentDidMount() {
            UserStore_1.default.addChangeListener(this.onChange);
            UserActions.load(this.props.userId);
        }
        componentWillUnmount() {
            UserStore_1.default.removeChangeListener(this.onChange);
            UserActions.unload();
        }
        render() {
            let userId = this.props.userId;
            let user = this.state.user;
            if (!user) {
                return React.createElement("div", null);
            }
            let roles = [];
            for (let role of user.roles || []) {
                roles.push(React.createElement("div", { className: "bp3-tag bp3-tag-removable bp3-intent-primary", style: css.role, key: role }, role, React.createElement("button", { className: "bp3-tag-remove", disabled: this.state.locked, onMouseUp: () => {
                        this.onRemoveRole(role);
                    } })));
            }
            return React.createElement(Page_1.default, null, React.createElement(PageHeader_1.default, null, React.createElement("div", { className: "layout horizontal wrap", style: css.header }, React.createElement("h2", { style: css.heading }, userId ? 'User Info' : 'New User'), React.createElement("div", { className: "flex" }), React.createElement("div", null, React.createElement(ConfirmButton_1.default, { label: "Delete", className: "bp3-intent-danger bp3-icon-delete", progressClassName: "bp3-intent-danger", style: css.button, disabled: this.state.disabled || this.state.locked, hidden: !userId, onConfirm: this.onDelete })))), React.createElement(PageSplit_1.default, null, React.createElement(PagePanel_1.default, { className: "layout vertical" }, React.createElement(PageInput_1.default, { disabled: this.state.locked, label: "Username", help: "Username, if using single sign-on username must match", type: "text", placeholder: "Enter username", value: user.username, onChange: val => {
                    this.set('username', val);
                } }), React.createElement(PageInput_1.default, { hidden: user.type !== 'local', disabled: this.state.locked, label: "Password", help: "Password, leave blank to keep current password", type: "password", placeholder: "Change password", value: user.password, onChange: val => {
                    this.set('password', val);
                } }), React.createElement(PageInput_1.default, { hidden: user.type !== 'api', disabled: this.state.locked, readOnly: true, autoSelect: true, label: "Token", help: "API token", type: "text", placeholder: "Save to generate token", value: user.token }), React.createElement(PageInput_1.default, { hidden: user.type !== 'api' || !user.token || !user.secret, disabled: this.state.locked, readOnly: true, autoSelect: true, label: "Secret", help: "API secret, will only be shown once", type: "text", placeholder: "", value: user.secret }), React.createElement(PageSwitch_1.default, { hidden: user.type !== 'api' || !user.token || !!user.secret, label: "Generate new token and secret", help: "Enable to generate a new token and secret on save. Secret can only be shown by generating new credentials.", disabled: this.state.locked, checked: user.generate_secret, onToggle: () => {
                    this.set('generate_secret', !user.generate_secret);
                } }), React.createElement(PageSelect_1.default, { disabled: this.state.locked, label: "Type", help: "A local user is a user that is created on the Pritunl Cloud database that has a username and password. The other user types can be used to create users for single sign-on services. Generally single sign-on users will be created automatically when the user authenticates for the first time. It can sometimes be desired to manaully create a single sign-on user to provide roles in advanced of the first login.", value: user.type, onChange: val => {
                    this.set('type', val);
                } }, React.createElement("option", { value: "local" }, "Local"), React.createElement("option", { value: "authzero" }, "Auth0"), React.createElement("option", { value: "azure" }, "Azure"), React.createElement("option", { value: "google" }, "Google"), React.createElement("option", { value: "onelogin" }, "OneLogin"), React.createElement("option", { value: "okta" }, "Okta"), React.createElement("option", { value: "api" }, "API")), React.createElement("label", { className: "bp3-label" }, "Roles", React.createElement(Help_1.default, { title: "Roles", content: "User roles will be used to match with service roles. A user must have a matching role to access a service." }), React.createElement("div", null, roles)), React.createElement(PageInputButton_1.default, { disabled: this.state.locked, buttonClass: "bp3-intent-success bp3-icon-add", label: "Add", type: "text", placeholder: "Add role", value: this.state.addRole, onChange: val => {
                    this.setState(Object.assign({}, this.state, { addRole: val }));
                }, onSubmit: this.onAddRole }), React.createElement(PageSwitch_1.default, { label: "Administrator", help: "Enable to give user administrator access to the management console", disabled: this.state.locked, checked: user.administrator === 'super', onToggle: () => {
                    if (this.state.user.administrator === 'super') {
                        this.set('administrator', '');
                    } else {
                        this.set('administrator', 'super');
                    }
                } }), React.createElement(PageSwitch_1.default, { label: "Disabled", help: "Disables the user ending all active sessions and prevents new authentications", disabled: this.state.locked, checked: user.disabled, onToggle: () => {
                    this.set('disabled', !this.state.user.disabled);
                } })), React.createElement(PagePanel_1.default, null, React.createElement(PageInfo_1.default, { fields: [{
                    label: 'ID',
                    value: user.id || 'None'
                }, {
                    label: 'Last Active',
                    value: MiscUtils.formatDate(user.last_active) || 'Inactive'
                }] }), React.createElement(PageDateTime_1.default, { label: "Active Until", help: "Set this to schedule the user to be disabled at the set date and time. This is useful to give a user temporary access to a service.", value: user.active_until, disabled: user.disabled || this.state.locked, onChange: val => {
                    this.set('active_until', val);
                } }))), userId ? React.createElement(PageSave_1.default, { message: this.state.message, changed: this.state.changed, disabled: this.state.disabled || this.state.locked, onCancel: () => {
                    this.setState(Object.assign({}, this.state, { changed: false, message: 'Your changes have been discarded', addRole: '', user: UserStore_1.default.userM }));
                }, onSave: this.onSave }) : React.createElement(PageNew_1.default, { message: this.state.message, changed: this.state.changed, disabled: this.state.disabled || this.state.locked, onSave: this.onNew }), this.state.locked ? null : React.createElement(Sessions_1.default, { userId: userId }), this.state.locked ? null : React.createElement(Devices_1.default, { userId: userId }), this.state.locked ? null : React.createElement(Audits_1.default, { userId: userId }));
        }
    }
    exports.default = UserDetailed;
    
});
System.registerDynamic("app/components/PageInputSwitch.js", ["npm:react@16.7.0.js", "app/components/Help.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const Help_1 = $__require("app/components/Help.js");
    const css = {
        switchLabel: {
            display: 'inline-block',
            marginBottom: 0
        },
        inputLabel: {
            width: '100%',
            maxWidth: '280px'
        },
        input: {
            width: '100%'
        }
    };
    class PageInputSwitch extends React.Component {
        render() {
            return React.createElement("div", { hidden: this.props.hidden }, React.createElement("label", { className: "bp3-control bp3-switch", style: css.switchLabel }, React.createElement("input", { type: "checkbox", disabled: this.props.disabled, checked: !!this.props.value || this.props.checked, onChange: () => {
                    if (!!this.props.value || this.props.checked) {
                        this.props.onChange(false, null);
                    } else {
                        this.props.onChange(true, this.props.defaultValue);
                    }
                } }), React.createElement("span", { className: "bp3-control-indicator" }), this.props.label), React.createElement(Help_1.default, { title: this.props.label, content: this.props.help }), React.createElement("label", { className: "bp3-label", style: css.inputLabel }, React.createElement("input", { className: "bp3-input", style: css.input, disabled: this.props.disabled, hidden: !this.props.value && !this.props.checked, type: this.props.type, autoCapitalize: "off", spellCheck: false, placeholder: this.props.placeholder, value: this.props.value || '', onChange: evt => {
                    this.props.onChange(true, evt.target.value);
                } })));
        }
    }
    exports.default = PageInputSwitch;
    
});
System.registerDynamic("app/components/NodeBlock.js", ["npm:react@16.7.0.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const css = {
        group: {
            width: '100%',
            maxWidth: '310px',
            marginTop: '5px'
        },
        sourceGroup: {
            width: '100%',
            maxWidth: '219px',
            marginTop: '5px'
        },
        control: {
            marginTop: '5px'
        },
        protocol: {
            flex: '0 1 auto'
        },
        port: {
            width: '100%'
        },
        portBox: {
            flex: '1'
        },
        other: {
            flex: '0 1 auto',
            width: '52px',
            borderRadius: '0 3px 3px 0'
        }
    };
    class NodeBlock extends React.Component {
        clone() {
            return Object.assign({}, this.props.block);
        }
        render() {
            let block = this.props.block;
            let ifaceMatch = false;
            let ifacesSelect = [];
            for (let iface of this.props.interfaces || []) {
                if (block.interface === iface) {
                    ifaceMatch = true;
                }
                ifacesSelect.push(React.createElement("option", { key: iface, value: iface }, iface));
            }
            if (!ifaceMatch) {
                ifacesSelect.push(React.createElement("option", { key: block.interface, value: block.interface }, block.interface));
            }
            let blocksSelect = [];
            for (let blck of this.props.blocks || []) {
                blocksSelect.push(React.createElement("option", { key: blck.id, value: blck.id }, blck.name));
            }
            if (blocksSelect.length === 0) {
                blocksSelect.push(React.createElement("option", { key: "null", value: "" }, "No Blocks"));
            }
            return React.createElement("div", null, React.createElement("div", { className: "bp3-control-group", style: css.group }, React.createElement("div", { className: "bp3-select", style: css.protocol }, React.createElement("select", { value: block.interface, onChange: evt => {
                    let state = this.clone();
                    state.interface = evt.target.value;
                    this.props.onChange(state);
                } }, ifacesSelect)), React.createElement("div", { className: "bp3-select", style: css.protocol }, React.createElement("select", { value: block.block, onChange: evt => {
                    let state = this.clone();
                    state.block = evt.target.value;
                    this.props.onChange(state);
                } }, blocksSelect)), React.createElement("button", { className: "bp3-button bp3-minimal bp3-intent-danger bp3-icon-remove", style: css.control, onClick: () => {
                    this.props.onRemove();
                } }), React.createElement("button", { className: "bp3-button bp3-minimal bp3-intent-success bp3-icon-add", style: css.control, onClick: () => {
                    this.props.onAdd();
                } })));
        }
    }
    exports.default = NodeBlock;
    
});
System.registerDynamic("app/components/NodeDetailed.js", ["npm:react@16.7.0.js", "app/actions/NodeActions.js", "app/utils/MiscUtils.js", "app/stores/CertificatesStore.js", "app/components/PageInput.js", "app/components/PageSwitch.js", "app/components/PageInputSwitch.js", "app/components/PageSelect.js", "app/components/PageSelectButton.js", "app/components/PageInputButton.js", "app/components/PageTextArea.js", "app/components/PageInfo.js", "app/components/PageSave.js", "app/components/NodeBlock.js", "app/components/ConfirmButton.js", "app/components/Help.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const NodeActions = $__require("app/actions/NodeActions.js");
    const MiscUtils = $__require("app/utils/MiscUtils.js");
    const CertificatesStore_1 = $__require("app/stores/CertificatesStore.js");
    const PageInput_1 = $__require("app/components/PageInput.js");
    const PageSwitch_1 = $__require("app/components/PageSwitch.js");
    const PageInputSwitch_1 = $__require("app/components/PageInputSwitch.js");
    const PageSelect_1 = $__require("app/components/PageSelect.js");
    const PageSelectButton_1 = $__require("app/components/PageSelectButton.js");
    const PageInputButton_1 = $__require("app/components/PageInputButton.js");
    const PageTextArea_1 = $__require("app/components/PageTextArea.js");
    const PageInfo_1 = $__require("app/components/PageInfo.js");
    const PageSave_1 = $__require("app/components/PageSave.js");
    const NodeBlock_1 = $__require("app/components/NodeBlock.js");
    const ConfirmButton_1 = $__require("app/components/ConfirmButton.js");
    const Help_1 = $__require("app/components/Help.js");
    const css = {
        card: {
            position: 'relative',
            padding: '48px 10px 0 10px',
            width: '100%'
        },
        button: {
            height: '30px'
        },
        buttons: {
            cursor: 'pointer',
            position: 'absolute',
            top: 0,
            left: 0,
            right: 0,
            padding: '4px',
            height: '39px',
            backgroundColor: 'rgba(0, 0, 0, 0.13)'
        },
        item: {
            margin: '9px 5px 0 5px',
            height: '20px'
        },
        itemsLabel: {
            display: 'block'
        },
        itemsAdd: {
            margin: '8px 0 15px 0'
        },
        group: {
            flex: 1,
            minWidth: '280px',
            margin: '0 10px'
        },
        save: {
            paddingBottom: '10px'
        },
        label: {
            width: '100%',
            maxWidth: '280px'
        },
        inputGroup: {
            width: '100%'
        },
        protocol: {
            minWidth: '90px',
            flex: '0 1 auto'
        },
        port: {
            minWidth: '120px',
            flex: '1'
        },
        select: {
            margin: '7px 0px 0px 6px'
        },
        role: {
            margin: '9px 5px 0 5px',
            height: '20px'
        },
        blocks: {
            marginBottom: '15px'
        }
    };
    class NodeDetailed extends React.Component {
        constructor(props, context) {
            super(props, context);
            this.onAddNetworkRole = () => {
                let node;
                if (!this.state.addNetworkRole) {
                    return;
                }
                if (this.state.changed) {
                    node = Object.assign({}, this.state.node);
                } else {
                    node = Object.assign({}, this.props.node);
                }
                let networkRoles = [...(node.network_roles || [])];
                if (networkRoles.indexOf(this.state.addNetworkRole) === -1) {
                    networkRoles.push(this.state.addNetworkRole);
                }
                networkRoles.sort();
                node.network_roles = networkRoles;
                this.setState(Object.assign({}, this.state, { changed: true, message: '', addNetworkRole: '', node: node }));
            };
            this.onRemoveNetworkRole = networkRole => {
                let node;
                if (this.state.changed) {
                    node = Object.assign({}, this.state.node);
                } else {
                    node = Object.assign({}, this.props.node);
                }
                let networkRoles = [...(node.network_roles || [])];
                let i = networkRoles.indexOf(networkRole);
                if (i === -1) {
                    return;
                }
                networkRoles.splice(i, 1);
                node.network_roles = networkRoles;
                this.setState(Object.assign({}, this.state, { changed: true, message: '', addNetworkRole: '', node: node }));
            };
            this.onSave = () => {
                this.setState(Object.assign({}, this.state, { disabled: true }));
                let node = Object.assign({}, this.state.node);
                if (!this.props.node.zone) {
                    let zone = this.state.zone;
                    if (!zone && this.props.datacenters.length && this.props.zones.length) {
                        let datacenter = this.state.datacenter || this.props.datacenters[0].id;
                        for (let zne of this.props.zones) {
                            if (zne.datacenter === datacenter) {
                                zone = zne.id;
                            }
                        }
                    }
                    if (zone) {
                        node.zone = zone;
                    }
                }
                NodeActions.commit(node).then(() => {
                    this.setState(Object.assign({}, this.state, { message: 'Your changes have been saved', changed: false, disabled: false }));
                    setTimeout(() => {
                        if (!this.state.changed) {
                            this.setState(Object.assign({}, this.state, { message: '', changed: false, node: null }));
                        }
                    }, 3000);
                }).catch(() => {
                    this.setState(Object.assign({}, this.state, { message: '', disabled: false }));
                });
            };
            this.onDelete = () => {
                this.setState(Object.assign({}, this.state, { disabled: true }));
                NodeActions.remove(this.props.node.id).then(() => {
                    this.setState(Object.assign({}, this.state, { disabled: false }));
                }).catch(() => {
                    this.setState(Object.assign({}, this.state, { disabled: false }));
                });
            };
            this.onAddExternalIface = () => {
                let node;
                if (!this.state.addExternalIface && !this.props.node.available_bridges.length) {
                    return;
                }
                let certId = this.state.addExternalIface || this.props.node.available_bridges[0];
                if (this.state.changed) {
                    node = Object.assign({}, this.state.node);
                } else {
                    node = Object.assign({}, this.props.node);
                }
                let ifaces = [...(node.external_interfaces || [])];
                if (ifaces.indexOf(certId) === -1) {
                    ifaces.push(certId);
                }
                ifaces.sort();
                node.external_interfaces = ifaces;
                this.setState(Object.assign({}, this.state, { changed: true, node: node }));
            };
            this.onRemoveExternalIface = iface => {
                let node;
                if (this.state.changed) {
                    node = Object.assign({}, this.state.node);
                } else {
                    node = Object.assign({}, this.props.node);
                }
                let ifaces = [...(node.external_interfaces || [])];
                let i = ifaces.indexOf(iface);
                if (i === -1) {
                    return;
                }
                ifaces.splice(i, 1);
                node.external_interfaces = ifaces;
                this.setState(Object.assign({}, this.state, { changed: true, node: node }));
            };
            this.onAddInternalIface = () => {
                let node;
                let availableIfaces = this.ifaces();
                if (!this.state.addInternalIface && !availableIfaces.length) {
                    return;
                }
                let certId = this.state.addInternalIface || availableIfaces[0];
                if (this.state.changed) {
                    node = Object.assign({}, this.state.node);
                } else {
                    node = Object.assign({}, this.props.node);
                }
                let ifaces = [...(node.internal_interfaces || [])];
                if (ifaces.indexOf(certId) === -1) {
                    ifaces.push(certId);
                }
                ifaces.sort();
                node.internal_interfaces = ifaces;
                this.setState(Object.assign({}, this.state, { changed: true, node: node }));
            };
            this.onRemoveInternalIface = iface => {
                let node;
                if (this.state.changed) {
                    node = Object.assign({}, this.state.node);
                } else {
                    node = Object.assign({}, this.props.node);
                }
                let ifaces = [...(node.internal_interfaces || [])];
                let i = ifaces.indexOf(iface);
                if (i === -1) {
                    return;
                }
                ifaces.splice(i, 1);
                node.internal_interfaces = ifaces;
                this.setState(Object.assign({}, this.state, { changed: true, node: node }));
            };
            this.onAddCert = () => {
                let node;
                if (!this.state.addCert && !this.props.certificates.length) {
                    return;
                }
                let certId = this.state.addCert || this.props.certificates[0].id;
                if (this.state.changed) {
                    node = Object.assign({}, this.state.node);
                } else {
                    node = Object.assign({}, this.props.node);
                }
                let certificates = [...(node.certificates || [])];
                if (certificates.indexOf(certId) === -1) {
                    certificates.push(certId);
                }
                certificates.sort();
                node.certificates = certificates;
                this.setState(Object.assign({}, this.state, { changed: true, node: node }));
            };
            this.onRemoveCert = certId => {
                let node;
                if (this.state.changed) {
                    node = Object.assign({}, this.state.node);
                } else {
                    node = Object.assign({}, this.props.node);
                }
                let certificates = [...(node.certificates || [])];
                let i = certificates.indexOf(certId);
                if (i === -1) {
                    return;
                }
                certificates.splice(i, 1);
                node.certificates = certificates;
                this.setState(Object.assign({}, this.state, { changed: true, node: node }));
            };
            this.newBlock = () => {
                let defBlock = '';
                if (this.props.blocks.length) {
                    defBlock = this.props.blocks[0].id;
                }
                return {
                    interface: this.props.node.available_bridges[0],
                    block: defBlock
                };
            };
            this.onNetworkMode = mode => {
                let node;
                if (this.state.changed) {
                    node = Object.assign({}, this.state.node);
                } else {
                    node = Object.assign({}, this.props.node);
                }
                if (mode === 'static' && (node.blocks || []).length === 0) {
                    node.blocks = [this.newBlock()];
                }
                node.network_mode = mode;
                this.setState(Object.assign({}, this.state, { changed: true, node: node }));
            };
            this.onAddBlock = i => {
                let node;
                if (this.state.changed) {
                    node = Object.assign({}, this.state.node);
                } else {
                    node = Object.assign({}, this.props.node);
                }
                let blocks = [...node.blocks];
                blocks.splice(i + 1, 0, this.newBlock());
                node.blocks = blocks;
                this.setState(Object.assign({}, this.state, { changed: true, message: '', node: node }));
            };
            this.onAddHostNatExclude = () => {
                let node;
                if (!this.state.addHostNatExclude) {
                    return;
                }
                if (this.state.changed) {
                    node = Object.assign({}, this.state.node);
                } else {
                    node = Object.assign({}, this.props.node);
                }
                let hostNatExcludes = [...(node.host_nat_excludes || [])];
                let addHostNatExclude = this.state.addHostNatExclude.trim();
                if (hostNatExcludes.indexOf(addHostNatExclude) === -1) {
                    hostNatExcludes.push(addHostNatExclude);
                }
                hostNatExcludes.sort();
                node.host_nat_excludes = hostNatExcludes;
                this.setState(Object.assign({}, this.state, { changed: true, message: '', addHostNatExclude: '', node: node }));
            };
            this.onRemoveHostNatExclude = exclude => {
                let node;
                if (this.state.changed) {
                    node = Object.assign({}, this.state.node);
                } else {
                    node = Object.assign({}, this.props.node);
                }
                let hostNatExcludes = [...(node.host_nat_excludes || [])];
                let i = hostNatExcludes.indexOf(exclude);
                if (i === -1) {
                    return;
                }
                hostNatExcludes.splice(i, 1);
                node.host_nat_excludes = hostNatExcludes;
                this.setState(Object.assign({}, this.state, { changed: true, message: '', addHostNatExclude: '', node: node }));
            };
            this.state = {
                disabled: false,
                datacenter: '',
                zone: '',
                changed: false,
                message: '',
                node: null,
                addExternalIface: null,
                addInternalIface: null,
                addCert: null,
                addNetworkRole: null,
                addHostNatExclude: null,
                forwardedChecked: false,
                forwardedProtoChecked: false
            };
        }
        set(name, val) {
            let node;
            if (this.state.changed) {
                node = Object.assign({}, this.state.node);
            } else {
                node = Object.assign({}, this.props.node);
            }
            node[name] = val;
            this.setState(Object.assign({}, this.state, { changed: true, node: node }));
        }
        toggleFirewall() {
            let node;
            if (this.state.changed) {
                node = Object.assign({}, this.state.node);
            } else {
                node = Object.assign({}, this.props.node);
            }
            node.firewall = !node.firewall;
            if (!node.firewall) {
                node.network_roles = [];
            }
            this.setState(Object.assign({}, this.state, { changed: true, node: node }));
        }
        toggleType(typ) {
            let node = this.state.node || this.props.node;
            let vals = node.types;
            let i = vals.indexOf(typ);
            if (i === -1) {
                vals.push(typ);
            } else {
                vals.splice(i, 1);
            }
            vals = vals.filter(val => {
                return !!val;
            });
            vals.sort();
            this.set('types', vals);
        }
        ifaces() {
            let node;
            if (this.state.changed) {
                node = Object.assign({}, this.state.node);
            } else {
                node = Object.assign({}, this.props.node);
            }
            let zoneId = node.zone;
            if (this.state.zone) {
                zoneId = this.state.zone;
            }
            let vxlan = false;
            for (let zne of this.props.zones) {
                if (zne.id === zoneId) {
                    if (zne.network_mode === 'vxlan_vlan') {
                        vxlan = true;
                    }
                    break;
                }
            }
            if (vxlan) {
                return node.available_interfaces;
            } else {
                return node.available_bridges;
            }
        }
        onChangeBlock(i, block) {
            let node;
            if (this.state.changed) {
                node = Object.assign({}, this.state.node);
            } else {
                node = Object.assign({}, this.props.node);
            }
            let blocks = [...node.blocks];
            blocks[i] = block;
            node.blocks = blocks;
            this.setState(Object.assign({}, this.state, { changed: true, message: '', node: node }));
        }
        onRemoveBlock(i) {
            let node;
            if (this.state.changed) {
                node = Object.assign({}, this.state.node);
            } else {
                node = Object.assign({}, this.props.node);
            }
            let blocks = [...node.blocks];
            blocks.splice(i, 1);
            if (!blocks.length) {
                blocks = [this.newBlock()];
            }
            node.blocks = blocks;
            this.setState(Object.assign({}, this.state, { changed: true, message: '', node: node }));
        }
        render() {
            let node = this.state.node || this.props.node;
            let active = node.requests_min !== 0 || node.memory !== 0 || node.load1 !== 0 || node.load5 !== 0 || node.load15 !== 0;
            let types = node.types || [];
            let publicIps = this.props.node.public_ips;
            if (!publicIps || !publicIps.length) {
                publicIps = 'None';
            }
            let publicIps6 = this.props.node.public_ips6;
            if (!publicIps6 || !publicIps6.length) {
                publicIps6 = 'None';
            }
            let externalIfaces = [];
            for (let iface of node.external_interfaces || []) {
                externalIfaces.push(React.createElement("div", { className: "bp3-tag bp3-tag-removable bp3-intent-primary", style: css.item, key: iface }, iface, React.createElement("button", { disabled: this.state.disabled, className: "bp3-tag-remove", onMouseUp: () => {
                        this.onRemoveExternalIface(iface);
                    } })));
            }
            let internalIfaces = [];
            for (let iface of node.internal_interfaces || []) {
                internalIfaces.push(React.createElement("div", { className: "bp3-tag bp3-tag-removable bp3-intent-primary", style: css.item, key: iface }, iface, React.createElement("button", { disabled: this.state.disabled, className: "bp3-tag-remove", onMouseUp: () => {
                        this.onRemoveInternalIface(iface);
                    } })));
            }
            let externalIfacesSelect = [];
            for (let iface of this.props.node.available_bridges || []) {
                externalIfacesSelect.push(React.createElement("option", { key: iface, value: iface }, iface));
            }
            let availableIfaces = this.ifaces();
            let internalIfacesSelect = [];
            for (let iface of availableIfaces || []) {
                internalIfacesSelect.push(React.createElement("option", { key: iface, value: iface }, iface));
            }
            let hostBlocksSelect = [React.createElement("option", { key: "null", value: "" }, "Disabled")];
            for (let blck of this.props.blocks || []) {
                hostBlocksSelect.push(React.createElement("option", { key: blck.id, value: blck.id }, blck.name));
            }
            let hostNatExcludes = [];
            for (let hostNatExclude of node.host_nat_excludes || []) {
                hostNatExcludes.push(React.createElement("div", { className: "bp3-tag bp3-tag-removable bp3-intent-primary", style: css.item, key: hostNatExclude }, hostNatExclude, React.createElement("button", { className: "bp3-tag-remove", disabled: this.state.disabled, onMouseUp: () => {
                        this.onRemoveHostNatExclude(hostNatExclude);
                    } })));
            }
            let certificates = [];
            for (let certId of node.certificates || []) {
                let cert = CertificatesStore_1.default.certificate(certId);
                if (!cert) {
                    continue;
                }
                certificates.push(React.createElement("div", { className: "bp3-tag bp3-tag-removable bp3-intent-primary", style: css.item, key: cert.id }, cert.name, React.createElement("button", { disabled: this.state.disabled, className: "bp3-tag-remove", onMouseUp: () => {
                        this.onRemoveCert(cert.id);
                    } })));
            }
            let certificatesSelect = [];
            if (this.props.certificates.length) {
                for (let certificate of this.props.certificates) {
                    certificatesSelect.push(React.createElement("option", { key: certificate.id, value: certificate.id }, certificate.name));
                }
            }
            let defaultDatacenter = '';
            let hasDatacenters = false;
            let datacentersSelect = [];
            if (this.props.datacenters.length) {
                hasDatacenters = true;
                defaultDatacenter = this.props.datacenters[0].id;
                for (let datacenter of this.props.datacenters) {
                    datacentersSelect.push(React.createElement("option", { key: datacenter.id, value: datacenter.id }, datacenter.name));
                }
            }
            if (!hasDatacenters) {
                datacentersSelect.push(React.createElement("option", { key: "null", value: "" }, "No Datacenters"));
            }
            let datacenter = this.state.datacenter || defaultDatacenter;
            let hasZones = false;
            let zonesSelect = [];
            if (this.props.zones.length) {
                zonesSelect.push(React.createElement("option", { key: "null", value: "" }, "Select Zone"));
                for (let zone of this.props.zones) {
                    if (!this.props.node.zone && zone.datacenter !== datacenter) {
                        continue;
                    }
                    hasZones = true;
                    zonesSelect.push(React.createElement("option", { key: zone.id, value: zone.id }, zone.name));
                }
            }
            if (!hasZones) {
                zonesSelect = [React.createElement("option", { key: "null", value: "" }, "No Zones")];
            }
            let networkRoles = [];
            for (let networkRole of node.network_roles || []) {
                networkRoles.push(React.createElement("div", { className: "bp3-tag bp3-tag-removable bp3-intent-primary", style: css.role, key: networkRole }, networkRole, React.createElement("button", { className: "bp3-tag-remove", disabled: this.state.disabled, onMouseUp: () => {
                        this.onRemoveNetworkRole(networkRole);
                    } })));
            }
            let nodeBlocks = node.blocks || [];
            let blocks = [];
            for (let i = 0; i < nodeBlocks.length; i++) {
                let index = i;
                blocks.push(React.createElement(NodeBlock_1.default, { key: index, interfaces: this.props.node.available_bridges, blocks: this.props.blocks, block: nodeBlocks[index], onChange: state => {
                        this.onChangeBlock(index, state);
                    }, onAdd: () => {
                        this.onAddBlock(index);
                    }, onRemove: () => {
                        this.onRemoveBlock(index);
                    } }));
            }
            return React.createElement("td", { className: "bp3-cell", colSpan: 4, style: css.card }, React.createElement("div", { className: "layout horizontal wrap" }, React.createElement("div", { style: css.group }, React.createElement("div", { className: "layout horizontal", style: css.buttons, onClick: evt => {
                    let target = evt.target;
                    if (target.className.indexOf('open-ignore') !== -1) {
                        return;
                    }
                    this.props.onClose();
                } }, React.createElement("div", { className: "flex" }), React.createElement(ConfirmButton_1.default, { className: "bp3-minimal bp3-intent-danger bp3-icon-trash open-ignore", progressClassName: "bp3-intent-danger", confirmMsg: "Confirm node remove", disabled: active || this.state.disabled, onConfirm: this.onDelete })), React.createElement(PageInput_1.default, { disabled: this.state.disabled, label: "Name", help: "Name of node", type: "text", placeholder: "Enter name", value: node.name, onChange: val => {
                    this.set('name', val);
                } }), React.createElement(PageSwitch_1.default, { disabled: this.state.disabled, label: "Admin", help: "Provides access to the admin console on this node.", checked: types.indexOf('admin') !== -1, onToggle: () => {
                    this.toggleType('admin');
                } }), React.createElement(PageSwitch_1.default, { disabled: this.state.disabled, label: "User", help: "Provides access to the user console on this node for SSH certificates.", checked: types.indexOf('user') !== -1, onToggle: () => {
                    this.toggleType('user');
                } }), React.createElement(PageSwitch_1.default, { disabled: this.state.disabled, label: "Hypervisor", help: "Run instances with hypervisor on this node.", checked: types.indexOf('hypervisor') !== -1, onToggle: () => {
                    this.toggleType('hypervisor');
                } }), React.createElement(PageSwitch_1.default, { disabled: this.state.disabled, label: "Pritunl Link", help: "Run Pritunl Link IPSec connections on this node.", checked: types.indexOf('ipsec') !== -1, onToggle: () => {
                    this.toggleType('ipsec');
                } }), React.createElement(PageInput_1.default, { disabled: this.state.disabled, hidden: types.indexOf('admin') === -1 || types.indexOf('user') === -1, label: "Admin Domain", help: "Domain that will be used to access the admin interface.", type: "text", placeholder: "Enter admin domain", value: node.admin_domain, onChange: val => {
                    this.set('admin_domain', val);
                } }), React.createElement(PageInput_1.default, { disabled: this.state.disabled, hidden: types.indexOf('admin') === -1 || types.indexOf('user') === -1, label: "User Domain", help: "Domain that will be used to access the user interface.", type: "text", placeholder: "Enter user domain", value: node.user_domain, onChange: val => {
                    this.set('user_domain', val);
                } }), React.createElement("label", { className: "bp3-label", style: css.label }, "Protocol and Port", React.createElement("div", { className: "bp3-control-group", style: css.inputGroup }, React.createElement("div", { className: "bp3-select", style: css.protocol }, React.createElement("select", { disabled: this.state.disabled, value: node.protocol || 'https', onChange: evt => {
                    this.set('protocol', evt.target.value);
                } }, React.createElement("option", { value: "http" }, "HTTP"), React.createElement("option", { value: "https" }, "HTTPS"))), React.createElement("input", { className: "bp3-input", disabled: this.state.disabled, style: css.port, type: "text", autoCapitalize: "off", spellCheck: false, placeholder: "Port", value: node.port || 443, onChange: evt => {
                    this.set('port', parseInt(evt.target.value, 10));
                } }))), React.createElement(PageSwitch_1.default, { disabled: this.state.disabled, label: "Web redirect server", help: "Enable redirect server for HTTP requests to HTTPS. Required for Lets Encrypt certificates.", checked: !node.no_redirect_server, onToggle: () => {
                    this.set('no_redirect_server', !node.no_redirect_server);
                } }), React.createElement(PageSelect_1.default, { disabled: this.state.disabled || !hasDatacenters, hidden: !!this.props.node.zone, label: "Datacenter", help: "Node datacenter, cannot be changed once set.", value: this.state.datacenter, onChange: val => {
                    if (this.state.changed) {
                        node = Object.assign({}, this.state.node);
                    } else {
                        node = Object.assign({}, this.props.node);
                    }
                    this.setState(Object.assign({}, this.state, { changed: true, node: node, datacenter: val, zone: '' }));
                } }, datacentersSelect), React.createElement(PageSelect_1.default, { disabled: !!this.props.node.zone || this.state.disabled || !hasZones, label: "Zone", help: "Node zone, cannot be changed once set.", value: this.props.node.zone ? this.props.node.zone : this.state.zone, onChange: val => {
                    let node;
                    if (this.state.changed) {
                        node = Object.assign({}, this.state.node);
                    } else {
                        node = Object.assign({}, this.props.node);
                    }
                    this.setState(Object.assign({}, this.state, { changed: true, node: node, zone: val }));
                } }, zonesSelect), React.createElement(PageSelect_1.default, { disabled: this.state.disabled, label: "Network Mode", help: "Network mode for public IP addresses. Cannot be changed with instances running.", value: node.network_mode, onChange: val => {
                    this.onNetworkMode(val);
                } }, React.createElement("option", { value: "dhcp" }, "DHCP"), React.createElement("option", { value: "static" }, "Static"), React.createElement("option", { value: "internal" }, "Internal Only")), React.createElement("label", { className: "bp3-label", style: css.label, hidden: node.network_mode !== 'dhcp' && node.network_mode !== '' }, "External Interfaces", React.createElement(Help_1.default, { title: "External Interfaces", content: "External interfaces for instance public interface, must be a bridge interface. Leave blank for automatic configuration." }), React.createElement("div", null, externalIfaces)), React.createElement(PageSelectButton_1.default, { hidden: node.network_mode !== 'dhcp' && node.network_mode !== '', label: "Add Interface", value: this.state.addExternalIface, disabled: !externalIfacesSelect.length || this.state.disabled, buttonClass: "bp3-intent-success", onChange: val => {
                    this.setState(Object.assign({}, this.state, { addExternalIface: val }));
                }, onSubmit: this.onAddExternalIface }, externalIfacesSelect), React.createElement("label", { className: "bp3-label", style: css.label }, "Internal Interfaces", React.createElement(Help_1.default, { title: "Internal Interfaces", content: "Internal interfaces for instance private VPC interface, must be a bridge interface. Leave blank for to use external interface." }), React.createElement("div", null, internalIfaces)), React.createElement(PageSelectButton_1.default, { label: "Add Interface", value: this.state.addInternalIface, disabled: !internalIfacesSelect.length || this.state.disabled, buttonClass: "bp3-intent-success", onChange: val => {
                    this.setState(Object.assign({}, this.state, { addInternalIface: val }));
                }, onSubmit: this.onAddInternalIface }, internalIfacesSelect), React.createElement("label", { className: "bp3-label", hidden: node.network_mode !== 'static', style: css.label }, "Interface Block Attachments", blocks), React.createElement(PageSelect_1.default, { disabled: this.state.disabled, label: "Host Network Block", help: "IP address block to use for static address on host network.", value: node.host_block, onChange: val => {
                    this.set('host_block', val);
                } }, hostBlocksSelect), React.createElement(PageSwitch_1.default, { disabled: this.state.disabled, hidden: !node.host_block, label: "Host Network NAT", help: "Enable NAT to on the host network.", checked: node.host_nat, onToggle: () => {
                    this.set('host_nat', !node.host_nat);
                } }), React.createElement("label", { className: "bp3-label", hidden: !node.host_block || !node.host_nat }, "Host Network NAT Excludes", React.createElement(Help_1.default, { title: "Host network NAT excludes", content: "Networks that will be excluded from host network NAT. These networks will still be routable without NAT." }), React.createElement("div", null, hostNatExcludes)), React.createElement(PageInputButton_1.default, { disabled: this.state.disabled, hidden: !node.host_block || !node.host_nat, buttonClass: "bp3-intent-success bp3-icon-add", label: "Add", type: "text", placeholder: "Add exclude", value: this.state.addHostNatExclude, onChange: val => {
                    this.setState(Object.assign({}, this.state, { addHostNatExclude: val }));
                }, onSubmit: this.onAddHostNatExclude }), React.createElement(PageSwitch_1.default, { disabled: this.state.disabled, hidden: !node.host_block, label: "Oracle Cloud host routing", help: "Automatically update Oracle Cloud routing tables with host network.", checked: node.oracle_host_route, onToggle: () => {
                    this.set('oracle_host_route', !node.oracle_host_route);
                } }), React.createElement(PageInput_1.default, { disabled: this.state.disabled, hidden: !node.oracle_host_route, label: "Oracle Cloud User OCID", help: "User OCID for Oracle Cloud API authentication.", type: "text", placeholder: "Enter user OCID", value: node.oracle_user, onChange: val => {
                    this.set('oracle_user', val);
                } }), React.createElement(PageTextArea_1.default, { disabled: this.state.disabled, hidden: !node.oracle_host_route, label: "Oracle Cloud Public Key", help: "Public key for Oracle Cloud API authentication.", placeholder: "Oracle Cloud public key", readOnly: true, rows: 6, value: node.oracle_public_key, onChange: val => {
                    this.set('oracle_public_key', val);
                } }), React.createElement(PageSwitch_1.default, { disabled: this.state.disabled, label: "Jumbo frames", help: "Enable jumbo frames on all interfaces, requires node restart when changed.", checked: node.jumbo_frames, onToggle: () => {
                    this.set('jumbo_frames', !node.jumbo_frames);
                } }), React.createElement(PageSwitch_1.default, { disabled: this.state.disabled, label: "USB Passthough", help: "Enable USB passthrough support for instances.", checked: node.usb_passthrough, onToggle: () => {
                    this.set('usb_passthrough', !node.usb_passthrough);
                } }), React.createElement(PageSwitch_1.default, { disabled: this.state.disabled, label: "Firewall", help: "Configure firewall on node. Incorrectly configuring the firewall can block access to the node.", checked: node.firewall, onToggle: () => {
                    this.toggleFirewall();
                } }), React.createElement("label", { className: "bp3-label" }, "Network Roles", React.createElement(Help_1.default, { title: "Network Roles", content: "Network roles that will be matched with firewall rules. Network roles are case-sensitive. Only firewall roles without an organization will match." }), React.createElement("div", null, networkRoles)), React.createElement(PageInputButton_1.default, { disabled: this.state.disabled, buttonClass: "bp3-intent-success bp3-icon-add", label: "Add", type: "text", placeholder: "Add role", value: this.state.addNetworkRole, onChange: val => {
                    this.setState(Object.assign({}, this.state, { addNetworkRole: val }));
                }, onSubmit: this.onAddNetworkRole })), React.createElement("div", { style: css.group }, React.createElement(PageInfo_1.default, { fields: [{
                    label: 'ID',
                    value: this.props.node.id || 'None'
                }, {
                    label: 'Version',
                    value: node.software_version || 'Unknown'
                }, {
                    valueClass: active ? '' : 'bp3-text-intent-danger',
                    label: 'Timestamp',
                    value: MiscUtils.formatDate(this.props.node.timestamp) || 'Inactive'
                }, {
                    label: 'CPU Units',
                    value: (this.props.node.cpu_units || 'Unknown').toString()
                }, {
                    label: 'Memory Units',
                    value: (this.props.node.memory_units || 'Unknown').toString()
                }, {
                    label: 'Default Interface',
                    value: this.props.node.default_interface || 'Unknown'
                }, {
                    label: 'Hostname',
                    value: node.hostname || 'Unknown'
                }, {
                    label: 'Public IPv4',
                    value: publicIps,
                    copy: true
                }, {
                    label: 'Public IPv6',
                    value: publicIps6,
                    copy: true
                }, {
                    label: 'Requests',
                    value: this.props.node.requests_min + '/min'
                }], bars: [{
                    progressClass: 'bp3-no-stripes bp3-intent-primary',
                    label: 'Memory',
                    value: this.props.node.memory
                }, {
                    progressClass: 'bp3-no-stripes bp3-intent-success',
                    label: 'Load1',
                    value: this.props.node.load1
                }, {
                    progressClass: 'bp3-no-stripes bp3-intent-warning',
                    label: 'Load5',
                    value: this.props.node.load5
                }, {
                    progressClass: 'bp3-no-stripes bp3-intent-danger',
                    label: 'Load15',
                    value: this.props.node.load15
                }] }), React.createElement(PageSelect_1.default, { hidden: types.indexOf('hypervisor') === -1, disabled: this.state.disabled, label: "Hypervisor Mode", help: "Hypervisor mode, select KVM if CPU has hardware virtualization support.", value: node.hypervisor, onChange: val => {
                    this.set('hypervisor', val);
                } }, React.createElement("option", { value: "qemu" }, "QEMU"), React.createElement("option", { value: "kvm" }, "KVM")), React.createElement(PageSelect_1.default, { hidden: types.indexOf('hypervisor') === -1, disabled: this.state.disabled, label: "Hypervisor VGA Type", help: "Type of VGA card to emulate. Virtio provides the best performance but requires Oracle Linux 7 with the KVM repository. VMware provides better performance then standard.", value: node.vga, onChange: val => {
                    this.set('vga', val);
                } }, React.createElement("option", { value: "vmware" }, "VMware"), React.createElement("option", { value: "virtio" }, "Virtio"), React.createElement("option", { value: "std" }, "Standard")), React.createElement("label", { className: "bp3-label", style: css.label, hidden: node.protocol === 'http' }, "Certificates", React.createElement(Help_1.default, { title: "Certificates", content: "The certificates to use for this nodes web server. The certificates must be valid for all the domains that this node provides access to. This includes the management domain and any service domains." }), React.createElement("div", null, certificates)), React.createElement(PageSelectButton_1.default, { hidden: node.protocol === 'http', label: "Add Certificate", value: this.state.addCert, disabled: !this.props.certificates.length || this.state.disabled, buttonClass: "bp3-intent-success", onChange: val => {
                    this.setState(Object.assign({}, this.state, { addCert: val }));
                }, onSubmit: this.onAddCert }, certificatesSelect), React.createElement(PageInputSwitch_1.default, { disabled: this.state.disabled, label: "Forwarded for header", help: "Enable when using a load balancer. This header value will be used to get the users IP address. It is important to only enable this when a load balancer is used. If it is enabled without a load balancer users can spoof their IP address by providing a value for the header that will not be overwritten by a load balancer. Additionally the nodes firewall should be configured to only accept requests from the load balancer to prevent requests being sent directly to the node bypassing the load balancer.", type: "text", placeholder: "Forwarded for header", value: node.forwarded_for_header, checked: this.state.forwardedChecked, defaultValue: "X-Forwarded-For", onChange: (state, val) => {
                    let nde;
                    if (this.state.changed) {
                        nde = Object.assign({}, this.state.node);
                    } else {
                        nde = Object.assign({}, this.props.node);
                    }
                    nde.forwarded_for_header = val;
                    this.setState(Object.assign({}, this.state, { changed: true, forwardedChecked: state, node: nde }));
                } }), React.createElement(PageInputSwitch_1.default, { label: "Forwarded proto header", help: "Enable when using a load balancer. This header value will be used to get the users protocol. This will redirect users to https when the forwarded protocol is http.", type: "text", placeholder: "Forwarded proto header", value: node.forwarded_proto_header, checked: this.state.forwardedProtoChecked, defaultValue: "X-Forwarded-Proto", onChange: (state, val) => {
                    let nde;
                    if (this.state.changed) {
                        nde = Object.assign({}, this.state.node);
                    } else {
                        nde = Object.assign({}, this.props.node);
                    }
                    nde.forwarded_proto_header = val;
                    this.setState(Object.assign({}, this.state, { changed: true, forwardedProtoChecked: state, node: nde }));
                } }))), React.createElement(PageSave_1.default, { style: css.save, hidden: !this.state.node, message: this.state.message, changed: this.state.changed, disabled: this.state.disabled, light: true, onCancel: () => {
                    this.setState(Object.assign({}, this.state, { changed: false, forwardedChecked: false, forwardedProtoChecked: false, node: null }));
                }, onSave: this.onSave }));
        }
    }
    exports.default = NodeDetailed;
    
});
System.registerDynamic("app/components/Node.js", ["npm:react@16.7.0.js", "app/utils/MiscUtils.js", "app/components/NodeDetailed.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const MiscUtils = $__require("app/utils/MiscUtils.js");
    const NodeDetailed_1 = $__require("app/components/NodeDetailed.js");
    const css = {
        card: {
            display: 'table-row',
            width: '100%',
            padding: 0,
            boxShadow: 'none',
            cursor: 'pointer'
        },
        cardOpen: {
            display: 'table-row',
            width: '100%',
            padding: 0,
            boxShadow: 'none',
            position: 'relative'
        },
        select: {
            margin: '2px 0 0 0',
            paddingTop: '1px',
            minHeight: '18px'
        },
        name: {
            verticalAlign: 'top',
            display: 'table-cell',
            padding: '8px'
        },
        nameSpan: {
            margin: '1px 5px 0 0'
        },
        item: {
            verticalAlign: 'top',
            display: 'table-cell',
            padding: '9px',
            whiteSpace: 'nowrap'
        },
        bars: {
            verticalAlign: 'top',
            display: 'table-cell',
            padding: '8px',
            width: '30px'
        },
        bar: {
            height: '6px',
            marginBottom: '1px'
        },
        barLast: {
            height: '6px'
        }
    };
    class Node extends React.Component {
        render() {
            let node = this.props.node;
            if (this.props.open) {
                return React.createElement("div", { className: "bp3-card bp3-row", style: css.cardOpen }, React.createElement(NodeDetailed_1.default, { node: this.props.node, certificates: this.props.certificates, datacenters: this.props.datacenters, zones: this.props.zones, blocks: this.props.blocks, selected: this.props.selected, onSelect: this.props.onSelect, onClose: () => {
                        this.props.onOpen();
                    } }));
            }
            let active = node.requests_min !== 0 || node.memory !== 0 || node.load1 !== 0 || node.load5 !== 0 || node.load15 !== 0;
            let cardStyle = Object.assign({}, css.card);
            if (!active) {
                cardStyle.opacity = 0.6;
            }
            let memoryStyle = {
                width: (node.memory || 0) + '%'
            };
            let load1Style = {
                width: (node.load1 || 0) + '%'
            };
            let load5Style = {
                width: (node.load5 || 0) + '%'
            };
            return React.createElement("div", { className: "bp3-card bp3-row", style: cardStyle, onClick: evt => {
                    let target = evt.target;
                    if (target.className.indexOf('open-ignore') !== -1) {
                        return;
                    }
                    this.props.onOpen();
                } }, React.createElement("div", { className: "bp3-cell", style: css.name }, React.createElement("div", { className: "layout horizontal" }, React.createElement("label", { className: "bp3-control bp3-checkbox open-ignore", style: css.select }, React.createElement("input", { type: "checkbox", className: "open-ignore", checked: this.props.selected, onClick: evt => {
                    this.props.onSelect(evt.shiftKey);
                } }), React.createElement("span", { className: "bp3-control-indicator open-ignore" })), React.createElement("div", { style: css.nameSpan }, node.name))), React.createElement("div", { className: "bp3-cell", style: css.item }, node.requests_min + '/min'), React.createElement("div", { className: "bp3-cell", style: css.item }, MiscUtils.formatDateShortTime(node.timestamp) || 'Inactive'), React.createElement("div", { className: "bp3-cell", style: css.bars }, React.createElement("div", { className: "bp3-progress-bar bp3-no-stripes bp3-intent-primary", style: css.bar }, React.createElement("div", { className: "bp3-progress-meter", style: memoryStyle })), React.createElement("div", { className: "bp3-progress-bar bp3-no-stripes bp3-intent-success", style: css.bar }, React.createElement("div", { className: "bp3-progress-meter", style: load1Style })), React.createElement("div", { className: "bp3-progress-bar bp3-no-stripes bp3-intent-warning", style: css.barLast }, React.createElement("div", { className: "bp3-progress-meter", style: load5Style }))));
        }
    }
    exports.default = Node;
    
});
System.registerDynamic("app/components/SwitchNull.js", ["npm:react@16.7.0.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    class SwitchNull extends React.Component {
        render() {
            let style = Object.assign({}, this.props.style);
            if (this.props.checked === null || this.props.checked === undefined) {
                style.opacity = 0.5;
            }
            return React.createElement("label", { className: "bp3-control bp3-switch", style: style }, React.createElement("input", { type: "checkbox", checked: !!this.props.checked, onChange: this.props.onToggle }), React.createElement("span", { className: "bp3-control-indicator" }), this.props.label);
        }
    }
    exports.default = SwitchNull;
    
});
System.registerDynamic("app/components/NodesFilter.js", ["npm:react@16.7.0.js", "app/components/SearchInput.js", "app/components/SwitchNull.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const SearchInput_1 = $__require("app/components/SearchInput.js");
    const SwitchNull_1 = $__require("app/components/SwitchNull.js");
    const css = {
        filters: {
            margin: '-15px 0 5px 0'
        },
        input: {
            width: '200px',
            margin: '5px'
        },
        role: {
            width: '150px',
            margin: '5px'
        },
        type: {
            margin: '5px'
        },
        check: {
            margin: '12px 5px 8px 5px'
        }
    };
    class NodesFilter extends React.Component {
        constructor(props, context) {
            super(props, context);
            this.state = {
                menu: false
            };
        }
        render() {
            if (this.props.filter === null) {
                return React.createElement("div", null);
            }
            let zonesSelect = [React.createElement("option", { key: "key", value: "any" }, "Any")];
            if (this.props.zones && this.props.zones.length) {
                for (let zone of this.props.zones) {
                    zonesSelect.push(React.createElement("option", { key: zone.id, value: zone.id }, zone.name));
                }
            }
            return React.createElement("div", { className: "layout horizontal wrap", style: css.filters }, React.createElement(SearchInput_1.default, { style: css.input, placeholder: "Node ID", value: this.props.filter.id, onChange: val => {
                    let filter = Object.assign({}, this.props.filter);
                    if (val) {
                        filter.id = val;
                    } else {
                        delete filter.id;
                    }
                    this.props.onFilter(filter);
                } }), React.createElement(SearchInput_1.default, { style: css.input, placeholder: "Name", value: this.props.filter.name, onChange: val => {
                    let filter = Object.assign({}, this.props.filter);
                    if (val) {
                        filter.name = val;
                    } else {
                        delete filter.name;
                    }
                    this.props.onFilter(filter);
                } }), React.createElement(SearchInput_1.default, { style: css.role, placeholder: "Network Role", value: this.props.filter.network_role, onChange: val => {
                    let filter = Object.assign({}, this.props.filter);
                    if (val) {
                        filter.network_role = val;
                    } else {
                        delete filter.network_role;
                    }
                    this.props.onFilter(filter);
                } }), React.createElement("div", { className: "bp3-select", style: css.type }, React.createElement("select", { value: this.props.filter.zone || 'any', onChange: evt => {
                    let filter = Object.assign({}, this.props.filter);
                    let val = evt.target.value;
                    if (val === 'any') {
                        delete filter.zone;
                    } else {
                        filter.zone = val;
                    }
                    this.props.onFilter(filter);
                } }, zonesSelect)), React.createElement(SwitchNull_1.default, { style: css.check, label: "Admin", checked: this.props.filter.admin, onToggle: () => {
                    let filter = Object.assign({}, this.props.filter);
                    if (filter.admin === undefined) {
                        filter.admin = true;
                    } else if (filter.admin === true) {
                        filter.admin = false;
                    } else {
                        delete filter.admin;
                    }
                    this.props.onFilter(filter);
                } }), React.createElement(SwitchNull_1.default, { style: css.check, label: "User", checked: this.props.filter.user, onToggle: () => {
                    let filter = Object.assign({}, this.props.filter);
                    if (filter.user === undefined) {
                        filter.user = true;
                    } else if (filter.user === true) {
                        filter.user = false;
                    } else {
                        delete filter.user;
                    }
                    this.props.onFilter(filter);
                } }), React.createElement(SwitchNull_1.default, { style: css.check, label: "Hypervisor", checked: this.props.filter.hypervisor, onToggle: () => {
                    let filter = Object.assign({}, this.props.filter);
                    if (filter.hypervisor === undefined) {
                        filter.hypervisor = true;
                    } else if (filter.hypervisor === true) {
                        filter.hypervisor = false;
                    } else {
                        delete filter.hypervisor;
                    }
                    this.props.onFilter(filter);
                } }));
        }
    }
    exports.default = NodesFilter;
    
});
System.registerDynamic("app/components/NodesPage.js", ["npm:react@16.7.0.js", "app/stores/NodesStore.js", "app/actions/NodeActions.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const NodesStore_1 = $__require("app/stores/NodesStore.js");
    const NodeActions = $__require("app/actions/NodeActions.js");
    const css = {
        button: {
            userSelect: 'none',
            margin: '0 5px 0 0'
        },
        buttonLast: {
            userSelect: 'none',
            margin: '0 0 0 0'
        },
        link: {
            cursor: 'pointer',
            userSelect: 'none',
            margin: '7px 5px 0 0'
        },
        current: {
            opacity: 0.5
        }
    };
    class NodesPages extends React.Component {
        constructor(props, context) {
            super(props, context);
            this.onChange = () => {
                this.setState(Object.assign({}, this.state, { page: NodesStore_1.default.page, pageCount: NodesStore_1.default.pageCount, pages: NodesStore_1.default.pages, count: NodesStore_1.default.count }));
            };
            this.state = {
                page: NodesStore_1.default.page,
                pageCount: NodesStore_1.default.pageCount,
                pages: NodesStore_1.default.pages,
                count: NodesStore_1.default.count
            };
        }
        componentDidMount() {
            NodesStore_1.default.addChangeListener(this.onChange);
        }
        componentWillUnmount() {
            NodesStore_1.default.removeChangeListener(this.onChange);
        }
        render() {
            let page = this.state.page;
            let pages = this.state.pages;
            if (pages <= 1) {
                return React.createElement("div", null);
            }
            let links = [];
            let start = Math.max(0, page - 7);
            let end = Math.min(pages, start + 15);
            for (let i = start; i < end; i++) {
                links.push(React.createElement("span", { key: i, style: page === i ? Object.assign({}, css.link, css.current) : css.link, onClick: () => {
                        NodeActions.traverse(i);
                        if (this.props.onPage) {
                            this.props.onPage();
                        }
                    } }, i + 1));
            }
            return React.createElement("div", { className: "layout horizontal center-justified" }, React.createElement("button", { className: "bp3-button bp3-minimal bp3-icon-chevron-backward", hidden: pages < 5, disabled: page === 0, type: "button", onClick: () => {
                    NodeActions.traverse(0);
                    if (this.props.onPage) {
                        this.props.onPage();
                    }
                } }), React.createElement("button", { className: "bp3-button bp3-minimal bp3-icon-chevron-left", style: css.button, disabled: page === 0, type: "button", onClick: () => {
                    NodeActions.traverse(Math.max(0, this.state.page - 1));
                    if (this.props.onPage) {
                        this.props.onPage();
                    }
                } }), links, React.createElement("button", { className: "bp3-button bp3-minimal bp3-icon-chevron-right", style: css.button, disabled: page === pages - 1, type: "button", onClick: () => {
                    NodeActions.traverse(Math.min(this.state.pages - 1, this.state.page + 1));
                    if (this.props.onPage) {
                        this.props.onPage();
                    }
                } }), React.createElement("button", { className: "bp3-button bp3-minimal bp3-icon-chevron-forward", hidden: pages < 5, disabled: page === pages - 1, type: "button", onClick: () => {
                    NodeActions.traverse(this.state.pages - 1);
                    if (this.props.onPage) {
                        this.props.onPage();
                    }
                } }));
        }
    }
    exports.default = NodesPages;
    
});
System.registerDynamic("app/components/Nodes.js", ["npm:react@16.7.0.js", "app/stores/NodesStore.js", "app/stores/CertificatesStore.js", "app/stores/DatacentersStore.js", "app/stores/ZonesStore.js", "app/stores/BlocksStore.js", "app/actions/NodeActions.js", "app/actions/CertificateActions.js", "app/actions/DatacenterActions.js", "app/actions/ZoneActions.js", "app/actions/BlockActions.js", "app/components/Node.js", "app/components/NodesFilter.js", "app/components/NodesPage.js", "app/components/Page.js", "app/components/PageHeader.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const NodesStore_1 = $__require("app/stores/NodesStore.js");
    const CertificatesStore_1 = $__require("app/stores/CertificatesStore.js");
    const DatacentersStore_1 = $__require("app/stores/DatacentersStore.js");
    const ZonesStore_1 = $__require("app/stores/ZonesStore.js");
    const BlocksStore_1 = $__require("app/stores/BlocksStore.js");
    const NodeActions = $__require("app/actions/NodeActions.js");
    const CertificateActions = $__require("app/actions/CertificateActions.js");
    const DatacenterActions = $__require("app/actions/DatacenterActions.js");
    const ZoneActions = $__require("app/actions/ZoneActions.js");
    const BlockActions = $__require("app/actions/BlockActions.js");
    const Node_1 = $__require("app/components/Node.js");
    const NodesFilter_1 = $__require("app/components/NodesFilter.js");
    const NodesPage_1 = $__require("app/components/NodesPage.js");
    const Page_1 = $__require("app/components/Page.js");
    const PageHeader_1 = $__require("app/components/PageHeader.js");
    const css = {
        items: {
            width: '100%',
            marginTop: '-5px',
            display: 'table',
            borderSpacing: '0 5px'
        },
        itemsBox: {
            width: '100%',
            overflowY: 'auto'
        },
        placeholder: {
            opacity: 0,
            width: '100%'
        },
        header: {
            marginTop: '-19px'
        },
        heading: {
            margin: '19px 0 0 0'
        },
        button: {
            margin: '8px 0 0 8px'
        },
        buttons: {
            marginTop: '8px'
        }
    };
    class Nodes extends React.Component {
        constructor(props, context) {
            super(props, context);
            this.onChange = () => {
                let nodes = NodesStore_1.default.nodes;
                let selected = {};
                let curSelected = this.state.selected;
                let opened = {};
                let curOpened = this.state.opened;
                nodes.forEach(node => {
                    if (curSelected[node.id]) {
                        selected[node.id] = true;
                    }
                    if (curOpened[node.id]) {
                        opened[node.id] = true;
                    }
                });
                this.setState(Object.assign({}, this.state, { nodes: nodes, filter: NodesStore_1.default.filter, certificates: CertificatesStore_1.default.certificates, datacenters: DatacentersStore_1.default.datacenters, zones: ZonesStore_1.default.zones, blocks: BlocksStore_1.default.blocks, selected: selected, opened: opened }));
            };
            this.state = {
                nodes: NodesStore_1.default.nodes,
                filter: NodesStore_1.default.filter,
                certificates: CertificatesStore_1.default.certificates,
                datacenters: DatacentersStore_1.default.datacenters,
                zones: ZonesStore_1.default.zones,
                blocks: BlocksStore_1.default.blocks,
                selected: {},
                opened: {},
                lastSelected: null,
                disabled: false
            };
        }
        get selected() {
            return !!Object.keys(this.state.selected).length;
        }
        get opened() {
            return !!Object.keys(this.state.opened).length;
        }
        componentDidMount() {
            NodesStore_1.default.addChangeListener(this.onChange);
            CertificatesStore_1.default.addChangeListener(this.onChange);
            DatacentersStore_1.default.addChangeListener(this.onChange);
            ZonesStore_1.default.addChangeListener(this.onChange);
            BlocksStore_1.default.addChangeListener(this.onChange);
            NodeActions.sync();
            CertificateActions.sync();
            DatacenterActions.sync();
            ZoneActions.sync();
            BlockActions.sync();
        }
        componentWillUnmount() {
            NodesStore_1.default.removeChangeListener(this.onChange);
            CertificatesStore_1.default.removeChangeListener(this.onChange);
            DatacentersStore_1.default.removeChangeListener(this.onChange);
            ZonesStore_1.default.removeChangeListener(this.onChange);
            BlocksStore_1.default.removeChangeListener(this.onChange);
        }
        render() {
            let nodesDom = [];
            this.state.nodes.forEach(node => {
                nodesDom.push(React.createElement(Node_1.default, { key: node.id, node: node, certificates: this.state.certificates, datacenters: this.state.datacenters, zones: this.state.zones, blocks: this.state.blocks, selected: !!this.state.selected[node.id], open: !!this.state.opened[node.id], onSelect: shift => {
                        let selected = Object.assign({}, this.state.selected);
                        if (shift) {
                            let nodes = this.state.nodes;
                            let start;
                            let end;
                            for (let i = 0; i < nodes.length; i++) {
                                let usr = nodes[i];
                                if (usr.id === node.id) {
                                    start = i;
                                } else if (usr.id === this.state.lastSelected) {
                                    end = i;
                                }
                            }
                            if (start !== undefined && end !== undefined) {
                                if (start > end) {
                                    end = [start, start = end][0];
                                }
                                for (let i = start; i <= end; i++) {
                                    selected[nodes[i].id] = true;
                                }
                                this.setState(Object.assign({}, this.state, { lastSelected: node.id, selected: selected }));
                                return;
                            }
                        }
                        if (selected[node.id]) {
                            delete selected[node.id];
                        } else {
                            selected[node.id] = true;
                        }
                        this.setState(Object.assign({}, this.state, { lastSelected: node.id, selected: selected }));
                    }, onOpen: () => {
                        let opened = Object.assign({}, this.state.opened);
                        if (opened[node.id]) {
                            delete opened[node.id];
                        } else {
                            opened[node.id] = true;
                        }
                        this.setState(Object.assign({}, this.state, { opened: opened }));
                    } }));
            });
            let filterClass = 'bp3-button bp3-intent-primary bp3-icon-filter ';
            if (this.state.filter) {
                filterClass += 'bp3-active';
            }
            return React.createElement(Page_1.default, null, React.createElement(PageHeader_1.default, null, React.createElement("div", { className: "layout horizontal wrap", style: css.header }, React.createElement("h2", { style: css.heading }, "Nodes"), React.createElement("div", { className: "flex" }), React.createElement("div", { style: css.buttons }, React.createElement("button", { className: filterClass, style: css.button, type: "button", onClick: () => {
                    if (this.state.filter === null) {
                        NodeActions.filter({});
                    } else {
                        NodeActions.filter(null);
                    }
                } }, "Filters"), React.createElement("button", { className: "bp3-button bp3-intent-warning bp3-icon-chevron-up", style: css.button, disabled: !this.opened, type: "button", onClick: () => {
                    this.setState(Object.assign({}, this.state, { opened: {} }));
                } }, "Collapse All")))), React.createElement(NodesFilter_1.default, { filter: this.state.filter, onFilter: filter => {
                    NodeActions.filter(filter);
                }, zones: this.state.zones }), React.createElement("div", { style: css.itemsBox }, React.createElement("div", { style: css.items }, nodesDom, React.createElement("tr", { className: "bp3-card bp3-row", style: css.placeholder }, React.createElement("td", { colSpan: 4, style: css.placeholder })))), React.createElement(NodesPage_1.default, { onPage: () => {
                    this.setState({
                        lastSelected: null
                    });
                } }));
        }
    }
    exports.default = Nodes;
    
});
System.registerDynamic("app/stores/PoliciesStore.js", ["app/dispatcher/Dispatcher.js", "app/EventEmitter.js", "app/types/PolicyTypes.js", "app/types/GlobalTypes.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const Dispatcher_1 = $__require("app/dispatcher/Dispatcher.js");
    const EventEmitter_1 = $__require("app/EventEmitter.js");
    const PolicyTypes = $__require("app/types/PolicyTypes.js");
    const GlobalTypes = $__require("app/types/GlobalTypes.js");
    class PoliciesStore extends EventEmitter_1.default {
        constructor() {
            super(...arguments);
            this._policies = Object.freeze([]);
            this._map = {};
            this._token = Dispatcher_1.default.register(this._callback.bind(this));
        }
        _reset() {
            this._policies = Object.freeze([]);
            this._map = {};
            this.emitChange();
        }
        get policies() {
            return this._policies;
        }
        get policiesM() {
            let policies = [];
            this._policies.forEach(policy => {
                policies.push(Object.assign({}, policy));
            });
            return policies;
        }
        policy(id) {
            let i = this._map[id];
            if (i === undefined) {
                return null;
            }
            return this._policies[i];
        }
        emitChange() {
            this.emitDefer(GlobalTypes.CHANGE);
        }
        addChangeListener(callback) {
            this.on(GlobalTypes.CHANGE, callback);
        }
        removeChangeListener(callback) {
            this.removeListener(GlobalTypes.CHANGE, callback);
        }
        _sync(policies) {
            this._map = {};
            for (let i = 0; i < policies.length; i++) {
                policies[i] = Object.freeze(policies[i]);
                this._map[policies[i].id] = i;
            }
            this._policies = Object.freeze(policies);
            this.emitChange();
        }
        _callback(action) {
            switch (action.type) {
                case GlobalTypes.RESET:
                    this._reset();
                    break;
                case PolicyTypes.SYNC:
                    this._sync(action.data.policies);
                    break;
            }
        }
    }
    exports.default = new PoliciesStore();
    
});
System.registerDynamic("app/components/PolicyRule.js", ["npm:react@16.7.0.js", "app/Constants.js", "app/components/PageSwitch.js", "app/components/PageInputButton.js", "app/components/PageSelectButton.js", "app/components/Help.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const Constants = $__require("app/Constants.js");
    const PageSwitch_1 = $__require("app/components/PageSwitch.js");
    const PageInputButton_1 = $__require("app/components/PageInputButton.js");
    const PageSelectButton_1 = $__require("app/components/PageSelectButton.js");
    const Help_1 = $__require("app/components/Help.js");
    const css = {
        item: {
            margin: '9px 5px 0 5px',
            height: '20px'
        }
    };
    class PolicyRule extends React.Component {
        constructor(props, context) {
            super(props, context);
            this.onAddValue = value => {
                if (!value) {
                    return;
                }
                let rule = this.clone();
                let values = [...rule.values];
                if (values.indexOf(value) === -1) {
                    values.push(value);
                }
                values.sort();
                rule.values = values;
                this.props.onChange(rule);
            };
            this.state = {
                addValue: ''
            };
        }
        clone() {
            return Object.assign({}, this.props.rule);
        }
        onRemoveValue(value) {
            let rule = this.clone();
            let values = [...rule.values];
            let i = values.indexOf(value);
            if (i === -1) {
                return;
            }
            values.splice(i, 1);
            rule.values = values;
            this.props.onChange(rule);
        }
        render() {
            let rule = this.props.rule;
            let defaultOption;
            let label;
            let selectLabel;
            let selectPlaceholder;
            let options;
            switch (this.props.rule.type) {
                case 'operating_system':
                    label = 'Permitted Operating Systems';
                    selectLabel = 'Operating system policies';
                    options = Constants.operatingSystems;
                    break;
                case 'browser':
                    label = 'Permitted Browsers';
                    selectLabel = 'Browser policies';
                    options = Constants.browsers;
                    break;
                case 'location':
                    label = 'Permitted Locations';
                    selectLabel = 'Location policies';
                    options = Constants.locations;
                    break;
                case 'whitelist_networks':
                    label = 'Whitelisted Networks';
                    selectLabel = 'Whitelisted network policies';
                    selectPlaceholder = 'Add network';
                    break;
                case 'blacklist_networks':
                    label = 'Blacklisted Networks';
                    selectLabel = 'Blacklisted network policies';
                    selectPlaceholder = 'Add network';
                    break;
            }
            let optionsSelect = [];
            for (let option in options) {
                if (!options.hasOwnProperty(option)) {
                    continue;
                }
                if (!defaultOption) {
                    defaultOption = option;
                }
                optionsSelect.push(React.createElement("option", { key: option, value: option }, options[option]));
            }
            let values = [];
            for (let value of rule.values || []) {
                values.push(React.createElement("div", { className: "bp3-tag bp3-tag-removable bp3-intent-primary", style: css.item, key: value }, options ? options[value] || value : value, React.createElement("button", { className: "bp3-tag-remove", onMouseUp: () => {
                        this.onRemoveValue(value);
                    } })));
            }
            let inputElem;
            if (options) {
                inputElem = React.createElement(PageSelectButton_1.default, { hidden: rule.values == null, buttonClass: "bp3-intent-success bp3-icon-add", label: "Add", value: this.state.addValue, onChange: val => {
                        this.setState(Object.assign({}, this.state, { addValue: val }));
                    }, onSubmit: () => {
                        this.onAddValue(this.state.addValue || defaultOption);
                    } }, optionsSelect);
            } else {
                inputElem = React.createElement(PageInputButton_1.default, { hidden: rule.values == null, buttonClass: "bp3-intent-success bp3-icon-add", label: "Add", type: "text", placeholder: selectPlaceholder, value: this.state.addValue, onChange: val => {
                        this.setState(Object.assign({}, this.state, { addValue: val }));
                    }, onSubmit: () => {
                        this.onAddValue(this.state.addValue);
                        this.setState(Object.assign({}, this.state, { addValue: null }));
                    } });
            }
            return React.createElement("div", null, React.createElement(PageSwitch_1.default, { label: selectLabel, help: "Turn on to enable policy.", checked: rule.values != null, onToggle: () => {
                    let state = this.clone();
                    state.values = rule.values == null ? [] : null;
                    this.props.onChange(state);
                } }), React.createElement(PageSwitch_1.default, { label: "Disabled user on failure", help: "This will disable the user when the policy check fails. It is generally only useful for the location check to disable a user account when an authentication occurs from a foreign country. It is important to consider that the policy check is the last check that occurs during authentication. An authentication attempt with an incorrect password from a foreign country would not trigger a policy failure or disable the user.", checked: rule.disable, hidden: rule.values == null, onToggle: () => {
                    let state = this.clone();
                    state.disable = !state.disable;
                    this.props.onChange(state);
                } }), React.createElement("label", { className: "bp3-label", hidden: rule.values == null }, label, React.createElement(Help_1.default, { title: label, content: "One of the values must match for the check to pass." }), React.createElement("div", null, values)), inputElem);
        }
    }
    exports.default = PolicyRule;
    
});
System.registerDynamic("app/components/Policy.js", ["npm:react@16.7.0.js", "app/actions/PolicyActions.js", "app/components/PolicyRule.js", "app/components/PageInput.js", "app/components/PageSwitch.js", "app/components/PageSelect.js", "app/components/PageInputButton.js", "app/components/PageInfo.js", "app/components/PageSave.js", "app/components/ConfirmButton.js", "app/components/Help.js", "app/Alert.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const PolicyActions = $__require("app/actions/PolicyActions.js");
    const PolicyRule_1 = $__require("app/components/PolicyRule.js");
    const PageInput_1 = $__require("app/components/PageInput.js");
    const PageSwitch_1 = $__require("app/components/PageSwitch.js");
    const PageSelect_1 = $__require("app/components/PageSelect.js");
    const PageInputButton_1 = $__require("app/components/PageInputButton.js");
    const PageInfo_1 = $__require("app/components/PageInfo.js");
    const PageSave_1 = $__require("app/components/PageSave.js");
    const ConfirmButton_1 = $__require("app/components/ConfirmButton.js");
    const Help_1 = $__require("app/components/Help.js");
    const Alert = $__require("app/Alert.js");
    const css = {
        card: {
            position: 'relative',
            padding: '10px 10px 0 10px',
            marginBottom: '5px'
        },
        remove: {
            position: 'absolute',
            top: '5px',
            right: '5px'
        },
        item: {
            margin: '9px 5px 0 5px',
            height: '20px'
        },
        itemsLabel: {
            display: 'block'
        },
        itemsAdd: {
            margin: '8px 0 15px 0'
        },
        group: {
            flex: 1,
            minWidth: '280px',
            margin: '0 10px'
        },
        save: {
            paddingBottom: '10px'
        },
        label: {
            width: '100%',
            maxWidth: '280px'
        },
        inputGroup: {
            width: '100%'
        },
        protocol: {
            flex: '0 1 auto'
        },
        port: {
            flex: '1'
        }
    };
    class Policy extends React.Component {
        constructor(props, context) {
            super(props, context);
            this.onSave = () => {
                this.setState(Object.assign({}, this.state, { disabled: true }));
                PolicyActions.commit(this.state.policy).then(() => {
                    this.setState(Object.assign({}, this.state, { message: 'Your changes have been saved', changed: false, disabled: false }));
                    setTimeout(() => {
                        if (!this.state.changed) {
                            this.setState(Object.assign({}, this.state, { message: '', changed: false, policy: null }));
                        }
                    }, 3000);
                }).catch(() => {
                    this.setState(Object.assign({}, this.state, { message: '', disabled: false }));
                });
            };
            this.onDelete = () => {
                this.setState(Object.assign({}, this.state, { disabled: true }));
                PolicyActions.remove(this.props.policy.id).then(() => {
                    this.setState(Object.assign({}, this.state, { disabled: false }));
                }).catch(() => {
                    this.setState(Object.assign({}, this.state, { disabled: false }));
                });
            };
            this.onAddRole = () => {
                let policy;
                if (this.state.changed) {
                    policy = Object.assign({}, this.state.policy);
                } else {
                    policy = Object.assign({}, this.props.policy);
                }
                let roles = [...(policy.roles || [])];
                if (!this.state.addRole) {
                    return;
                }
                if (roles.indexOf(this.state.addRole) === -1) {
                    roles.push(this.state.addRole);
                }
                roles.sort();
                policy.roles = roles;
                this.setState(Object.assign({}, this.state, { changed: true, message: '', addRole: '', policy: policy }));
            };
            this.state = {
                disabled: false,
                changed: false,
                message: '',
                policy: null,
                addRole: null
            };
        }
        set(name, val) {
            let policy;
            if (this.state.changed) {
                policy = Object.assign({}, this.state.policy);
            } else {
                policy = Object.assign({}, this.props.policy);
            }
            policy[name] = val;
            this.setState(Object.assign({}, this.state, { changed: true, policy: policy }));
        }
        setRule(name, rule) {
            let policy;
            if (this.state.changed) {
                policy = Object.assign({}, this.state.policy);
            } else {
                policy = Object.assign({}, this.props.policy);
            }
            let rules = Object.assign({}, policy.rules || {});
            if (rule.values == null) {
                delete rules[name];
            } else {
                rules[name] = rule;
            }
            policy.rules = rules;
            this.setState(Object.assign({}, this.state, { changed: true, policy: policy }));
        }
        onRemoveRole(role) {
            let policy;
            if (this.state.changed) {
                policy = Object.assign({}, this.state.policy);
            } else {
                policy = Object.assign({}, this.props.policy);
            }
            let roles = [...(policy.roles || [])];
            let i = roles.indexOf(role);
            if (i === -1) {
                return;
            }
            roles.splice(i, 1);
            policy.roles = roles;
            this.setState(Object.assign({}, this.state, { changed: true, message: '', addRole: '', policy: policy }));
        }
        render() {
            let policy = this.state.policy || this.props.policy;
            let roles = [];
            for (let role of policy.roles || []) {
                roles.push(React.createElement("div", { className: "bp3-tag bp3-tag-removable bp3-intent-primary", style: css.item, key: role }, role, React.createElement("button", { className: "bp3-tag-remove", onMouseUp: () => {
                        this.onRemoveRole(role);
                    } })));
            }
            let rules = policy.rules || {};
            let operatingSystem = rules.operating_system || {
                type: 'operating_system'
            };
            let browser = rules.browser || {
                type: 'browser'
            };
            let location = rules.location || {
                type: 'location'
            };
            let whitelistNetworks = rules.whitelist_networks || {
                type: 'whitelist_networks'
            };
            let blacklistNetworks = rules.blacklist_networks || {
                type: 'blacklist_networks'
            };
            let providerIds = [];
            let adminProviders = [];
            let userProviders = [];
            if (this.props.providers.length) {
                for (let provider of this.props.providers) {
                    providerIds.push(provider.id);
                    adminProviders.push(React.createElement("option", { key: provider.id, value: provider.id }, provider.name));
                    userProviders.push(React.createElement("option", { key: provider.id, value: provider.id }, provider.name));
                }
            } else {
                adminProviders.push(React.createElement("option", { key: "null", value: "" }, "None"));
                userProviders.push(React.createElement("option", { key: "null", value: "" }, "None"));
            }
            let adminProvider = policy.admin_secondary && providerIds.indexOf(policy.admin_secondary) !== -1;
            let userProvider = policy.user_secondary && providerIds.indexOf(policy.user_secondary) !== -1;
            return React.createElement("div", { className: "bp3-card", style: css.card }, React.createElement("div", { className: "layout horizontal wrap" }, React.createElement("div", { style: css.group }, React.createElement("div", { style: css.remove }, React.createElement(ConfirmButton_1.default, { className: "bp3-minimal bp3-intent-danger bp3-icon-trash", progressClassName: "bp3-intent-danger", confirmMsg: "Confirm policy remove", disabled: this.state.disabled, onConfirm: this.onDelete })), React.createElement(PageInput_1.default, { label: "Name", help: "Name of policy", type: "text", placeholder: "Enter name", value: policy.name, onChange: val => {
                    this.set('name', val);
                } }), React.createElement("label", { className: "bp3-label" }, "Roles", React.createElement(Help_1.default, { title: "Roles", content: "Roles associated with this policy. All requests from users with associated roles must pass this policy check." }), React.createElement("div", null, roles)), React.createElement(PageInputButton_1.default, { buttonClass: "bp3-intent-success bp3-icon-add", label: "Add", type: "text", placeholder: "Add role", value: this.state.addRole, onChange: val => {
                    this.setState(Object.assign({}, this.state, { addRole: val }));
                }, onSubmit: this.onAddRole }), React.createElement(PageSwitch_1.default, { label: "Admin two-factor authentication", help: "Require admins to use two-factor authentication.", checked: adminProvider, onToggle: () => {
                    if (adminProvider) {
                        this.set('admin_secondary', null);
                    } else {
                        if (this.props.providers.length === 0) {
                            Alert.warning('No two-factor authentication providers exist');
                            return;
                        }
                        this.set('admin_secondary', this.props.providers[0].id);
                    }
                } }), React.createElement(PageSelect_1.default, { disabled: this.state.disabled, label: "Admin Two-Factor Provider", help: "Two-factor authentication provider that will be used. For users matching multiple policies the first provider will be used.", hidden: !adminProvider, value: policy.admin_secondary, onChange: val => {
                    this.set('admin_secondary', val);
                } }, adminProviders), React.createElement(PageSwitch_1.default, { label: "User two-factor authentication", help: "Require users to use two-factor authentication.", checked: userProvider, onToggle: () => {
                    if (userProvider) {
                        this.set('user_secondary', null);
                    } else {
                        if (this.props.providers.length === 0) {
                            Alert.warning('No two-factor authentication providers exist');
                            return;
                        }
                        this.set('user_secondary', this.props.providers[0].id);
                    }
                } }), React.createElement(PageSelect_1.default, { disabled: this.state.disabled, label: "User Two-Factor Provider", help: "Two-factor authentication provider that will be used. For users matching multiple policies the first provider will be used.", hidden: !userProvider, value: policy.user_secondary, onChange: val => {
                    this.set('user_secondary', val);
                } }, userProviders), React.createElement(PolicyRule_1.default, { rule: whitelistNetworks, onChange: val => {
                    this.setRule('whitelist_networks', val);
                } }), React.createElement(PolicyRule_1.default, { rule: blacklistNetworks, onChange: val => {
                    this.setRule('blacklist_networks', val);
                } })), React.createElement("div", { style: css.group }, React.createElement(PageInfo_1.default, { fields: [{
                    label: 'ID',
                    value: this.props.policy.id || 'None'
                }] }), React.createElement(PageSwitch_1.default, { label: "Enabled", help: "Enable or disable policy.", checked: !policy.disabled, onToggle: () => {
                    this.set('disabled', !policy.disabled);
                } }), React.createElement(PolicyRule_1.default, { rule: location, onChange: val => {
                    this.setRule('location', val);
                } }), React.createElement(PolicyRule_1.default, { rule: operatingSystem, onChange: val => {
                    this.setRule('operating_system', val);
                } }), React.createElement(PolicyRule_1.default, { rule: browser, onChange: val => {
                    this.setRule('browser', val);
                } }), React.createElement(PageSwitch_1.default, { label: "Admin U2F device authentication", help: "Require admins to use U2F device authentication.", checked: policy.admin_device_secondary, onToggle: () => {
                    this.set('admin_device_secondary', !policy.admin_device_secondary);
                } }), React.createElement(PageSwitch_1.default, { label: "User U2F device authentication", help: "Require users to use U2F device authentication.", checked: policy.user_device_secondary, onToggle: () => {
                    this.set('user_device_secondary', !policy.user_device_secondary);
                } }))), React.createElement(PageSave_1.default, { style: css.save, hidden: !this.state.policy, message: this.state.message, changed: this.state.changed, disabled: this.state.disabled, light: true, onCancel: () => {
                    this.setState(Object.assign({}, this.state, { changed: false, policy: null }));
                }, onSave: this.onSave }));
        }
    }
    exports.default = Policy;
    
});
System.registerDynamic("app/components/Policies.js", ["npm:react@16.7.0.js", "app/stores/PoliciesStore.js", "app/stores/SettingsStore.js", "app/actions/PolicyActions.js", "app/actions/SettingsActions.js", "app/components/NonState.js", "app/components/Policy.js", "app/components/Page.js", "app/components/PageHeader.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const PoliciesStore_1 = $__require("app/stores/PoliciesStore.js");
    const SettingsStore_1 = $__require("app/stores/SettingsStore.js");
    const PolicyActions = $__require("app/actions/PolicyActions.js");
    const SettingsActions = $__require("app/actions/SettingsActions.js");
    const NonState_1 = $__require("app/components/NonState.js");
    const Policy_1 = $__require("app/components/Policy.js");
    const Page_1 = $__require("app/components/Page.js");
    const PageHeader_1 = $__require("app/components/PageHeader.js");
    const css = {
        header: {
            marginTop: '-19px'
        },
        heading: {
            margin: '19px 0 0 0'
        },
        button: {
            margin: '8px 0 0 8px'
        },
        buttons: {
            marginTop: '8px'
        }
    };
    class Policies extends React.Component {
        constructor(props, context) {
            super(props, context);
            this.onChange = () => {
                this.setState(Object.assign({}, this.state, { policies: PoliciesStore_1.default.policies, providers: SettingsStore_1.default.settings ? SettingsStore_1.default.settings.auth_secondary_providers : [] }));
            };
            this.state = {
                policies: PoliciesStore_1.default.policies,
                providers: SettingsStore_1.default.settings ? SettingsStore_1.default.settings.auth_secondary_providers : [],
                disabled: false
            };
        }
        componentDidMount() {
            PoliciesStore_1.default.addChangeListener(this.onChange);
            SettingsStore_1.default.addChangeListener(this.onChange);
            PolicyActions.sync();
            SettingsActions.sync();
        }
        componentWillUnmount() {
            PoliciesStore_1.default.removeChangeListener(this.onChange);
            SettingsStore_1.default.removeChangeListener(this.onChange);
        }
        render() {
            let policiesDom = [];
            this.state.policies.forEach(policy => {
                policiesDom.push(React.createElement(Policy_1.default, { key: policy.id, policy: policy, providers: this.state.providers }));
            });
            return React.createElement(Page_1.default, null, React.createElement(PageHeader_1.default, null, React.createElement("div", { className: "layout horizontal wrap", style: css.header }, React.createElement("h2", { style: css.heading }, "Policies"), React.createElement("div", { className: "flex" }), React.createElement("div", { style: css.buttons }, React.createElement("button", { className: "bp3-button bp3-intent-success bp3-icon-add", style: css.button, disabled: this.state.disabled, type: "button", onClick: () => {
                    this.setState(Object.assign({}, this.state, { disabled: true }));
                    PolicyActions.create(null).then(() => {
                        this.setState(Object.assign({}, this.state, { disabled: false }));
                    }).catch(() => {
                        this.setState(Object.assign({}, this.state, { disabled: false }));
                    });
                } }, "New")))), React.createElement("div", null, policiesDom), React.createElement(NonState_1.default, { hidden: !!policiesDom.length, iconClass: "bp3-icon-filter", title: "No policies", description: "Add a new policy to get started." }));
        }
    }
    exports.default = Policies;
    
});
System.registerDynamic("app/stores/CertificatesStore.js", ["app/dispatcher/Dispatcher.js", "app/EventEmitter.js", "app/types/CertificateTypes.js", "app/types/GlobalTypes.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const Dispatcher_1 = $__require("app/dispatcher/Dispatcher.js");
    const EventEmitter_1 = $__require("app/EventEmitter.js");
    const CertificateTypes = $__require("app/types/CertificateTypes.js");
    const GlobalTypes = $__require("app/types/GlobalTypes.js");
    class CertificatesStore extends EventEmitter_1.default {
        constructor() {
            super(...arguments);
            this._certificates = Object.freeze([]);
            this._map = {};
            this._token = Dispatcher_1.default.register(this._callback.bind(this));
        }
        _reset() {
            this._certificates = Object.freeze([]);
            this._map = {};
            this.emitChange();
        }
        get certificates() {
            return this._certificates;
        }
        get certificatesM() {
            let certificates = [];
            this._certificates.forEach(certificate => {
                certificates.push(Object.assign({}, certificate));
            });
            return certificates;
        }
        certificate(id) {
            let i = this._map[id];
            if (i === undefined) {
                return null;
            }
            return this._certificates[i];
        }
        emitChange() {
            this.emitDefer(GlobalTypes.CHANGE);
        }
        addChangeListener(callback) {
            this.on(GlobalTypes.CHANGE, callback);
        }
        removeChangeListener(callback) {
            this.removeListener(GlobalTypes.CHANGE, callback);
        }
        _sync(certificates) {
            this._map = {};
            for (let i = 0; i < certificates.length; i++) {
                certificates[i] = Object.freeze(certificates[i]);
                this._map[certificates[i].id] = i;
            }
            this._certificates = Object.freeze(certificates);
            this.emitChange();
        }
        _callback(action) {
            switch (action.type) {
                case GlobalTypes.RESET:
                    this._reset();
                    break;
                case CertificateTypes.SYNC:
                    this._sync(action.data.certificates);
                    break;
            }
        }
    }
    exports.default = new CertificatesStore();
    
});
System.registerDynamic("app/components/CertificateDomain.js", ["npm:react@16.7.0.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const css = {
        group: {
            width: '100%',
            maxWidth: '310px',
            marginTop: '5px'
        },
        domain: {
            width: '100%',
            borderRadius: '0 3px 3px 0'
        },
        domainBox: {
            flex: '1'
        }
    };
    class CertificateDomain extends React.Component {
        render() {
            return React.createElement("div", { className: "bp3-control-group", style: css.group }, React.createElement("div", { style: css.domainBox }, React.createElement("input", { className: "bp3-input", style: css.domain, type: "text", autoCapitalize: "off", spellCheck: false, placeholder: "Domain", value: this.props.domain || '', onChange: evt => {
                    this.props.onChange(evt.target.value);
                } })), React.createElement("button", { className: "bp3-button bp3-minimal bp3-intent-danger bp3-icon-remove", onClick: () => {
                    this.props.onRemove();
                } }));
        }
    }
    exports.default = CertificateDomain;
    
});
System.registerDynamic("app/components/Certificate.js", ["npm:react@16.7.0.js", "app/actions/CertificateActions.js", "app/utils/MiscUtils.js", "app/components/CertificateDomain.js", "app/components/PageInput.js", "app/components/PageSelect.js", "app/components/PageInfo.js", "app/components/PageTextArea.js", "app/components/PageSave.js", "app/components/ConfirmButton.js", "app/components/Help.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const CertificateActions = $__require("app/actions/CertificateActions.js");
    const MiscUtils = $__require("app/utils/MiscUtils.js");
    const CertificateDomain_1 = $__require("app/components/CertificateDomain.js");
    const PageInput_1 = $__require("app/components/PageInput.js");
    const PageSelect_1 = $__require("app/components/PageSelect.js");
    const PageInfo_1 = $__require("app/components/PageInfo.js");
    const PageTextArea_1 = $__require("app/components/PageTextArea.js");
    const PageSave_1 = $__require("app/components/PageSave.js");
    const ConfirmButton_1 = $__require("app/components/ConfirmButton.js");
    const Help_1 = $__require("app/components/Help.js");
    const css = {
        card: {
            position: 'relative',
            padding: '10px 10px 0 10px',
            marginBottom: '5px'
        },
        remove: {
            position: 'absolute',
            top: '5px',
            right: '5px'
        },
        domain: {
            margin: '9px 5px 0 5px',
            height: '20px'
        },
        itemsLabel: {
            display: 'block'
        },
        itemsAdd: {
            margin: '8px 0 15px 0'
        },
        group: {
            flex: 1,
            minWidth: '280px',
            margin: '0 10px'
        },
        save: {
            paddingBottom: '10px'
        },
        label: {
            width: '100%',
            maxWidth: '280px'
        },
        inputGroup: {
            width: '100%'
        }
    };
    class Certificate extends React.Component {
        constructor(props, context) {
            super(props, context);
            this.onSave = () => {
                this.setState(Object.assign({}, this.state, { disabled: true }));
                CertificateActions.commit(this.state.certificate).then(() => {
                    this.setState(Object.assign({}, this.state, { message: 'Your changes have been saved', changed: false, disabled: false }));
                    setTimeout(() => {
                        if (!this.state.changed) {
                            this.setState(Object.assign({}, this.state, { message: '', changed: false, certificate: null }));
                        }
                    }, 3000);
                }).catch(() => {
                    this.setState(Object.assign({}, this.state, { message: '', disabled: false }));
                });
            };
            this.onDelete = () => {
                this.setState(Object.assign({}, this.state, { disabled: true }));
                CertificateActions.remove(this.props.certificate.id).then(() => {
                    this.setState(Object.assign({}, this.state, { disabled: false }));
                }).catch(() => {
                    this.setState(Object.assign({}, this.state, { disabled: false }));
                });
            };
            this.onAddDomain = () => {
                let cert;
                if (this.state.changed) {
                    cert = Object.assign({}, this.state.certificate);
                } else {
                    cert = Object.assign({}, this.props.certificate);
                }
                let acmeDomains = [...cert.acme_domains, ''];
                cert.acme_domains = acmeDomains;
                this.setState(Object.assign({}, this.state, { changed: true, message: '', addDomain: '', certificate: cert }));
            };
            this.state = {
                disabled: false,
                changed: false,
                message: '',
                certificate: null,
                addDomain: null
            };
        }
        set(name, val) {
            let certificate;
            if (this.state.changed) {
                certificate = Object.assign({}, this.state.certificate);
            } else {
                certificate = Object.assign({}, this.props.certificate);
            }
            certificate[name] = val;
            this.setState(Object.assign({}, this.state, { changed: true, certificate: certificate }));
        }
        onChangeDomain(i, state) {
            let cert;
            if (this.state.changed) {
                cert = Object.assign({}, this.state.certificate);
            } else {
                cert = Object.assign({}, this.props.certificate);
            }
            let acmeDomains = [...cert.acme_domains];
            acmeDomains[i] = state;
            cert.acme_domains = acmeDomains;
            this.setState(Object.assign({}, this.state, { changed: true, message: '', certificate: cert }));
        }
        onRemoveDomain(i) {
            let cert;
            if (this.state.changed) {
                cert = Object.assign({}, this.state.certificate);
            } else {
                cert = Object.assign({}, this.props.certificate);
            }
            let acmeDomains = [...cert.acme_domains];
            acmeDomains.splice(i, 1);
            cert.acme_domains = acmeDomains;
            this.setState(Object.assign({}, this.state, { changed: true, message: '', addDomain: '', certificate: cert }));
        }
        render() {
            let cert = this.state.certificate || this.props.certificate;
            let info = this.props.certificate.info || {};
            let domains = [];
            for (let i = 0; i < cert.acme_domains.length; i++) {
                let index = i;
                domains.push(React.createElement(CertificateDomain_1.default, { key: index, domain: cert.acme_domains[index], onChange: state => {
                        this.onChangeDomain(index, state);
                    }, onRemove: () => {
                        this.onRemoveDomain(index);
                    } }));
            }
            return React.createElement("div", { className: "bp3-card", style: css.card }, React.createElement("div", { className: "layout horizontal wrap" }, React.createElement("div", { style: css.group }, React.createElement("div", { style: css.remove }, React.createElement(ConfirmButton_1.default, { className: "bp3-minimal bp3-intent-danger bp3-icon-trash", progressClassName: "bp3-intent-danger", confirmMsg: "Confirm certificate remove", disabled: this.state.disabled, onConfirm: this.onDelete })), React.createElement(PageInput_1.default, { label: "Name", help: "Name of certificate", type: "text", placeholder: "Name", value: cert.name, onChange: val => {
                    this.set('name', val);
                } }), React.createElement(PageTextArea_1.default, { readOnly: cert.type !== 'text', label: "Private Key", help: "Certificate private key in PEM format", placeholder: "Private key", rows: 6, value: cert.key, onChange: val => {
                    this.set('key', val);
                } }), React.createElement(PageTextArea_1.default, { readOnly: cert.type !== 'text', label: "Certificate Chain", help: "Certificate followed by certificate chain in PEM format", placeholder: "Certificate chain", rows: 6, value: cert.certificate, onChange: val => {
                    this.set('certificate', val);
                } }), React.createElement("label", { style: css.itemsLabel, hidden: cert.type !== 'lets_encrypt' }, "LetsEncrypt Domains", React.createElement(Help_1.default, { title: "LetsEncrypt Domains", content: "Enter domain names for the certificate. All domains names must point to a Pritunl Cloud server in the cluster. The servers must also have port 80 publicy open. The port will need to stay open to renew the certificate." })), React.createElement("div", { hidden: cert.type !== 'lets_encrypt' }, domains), React.createElement("button", { className: "bp3-button bp3-intent-success bp3-icon-add", style: css.itemsAdd, hidden: cert.type !== 'lets_encrypt', type: "button", onClick: this.onAddDomain }, "Add Domain")), React.createElement("div", { style: css.group }, React.createElement(PageInfo_1.default, { fields: [{
                    label: 'ID',
                    value: this.props.certificate.id || 'None'
                }, {
                    label: 'Signature Algorithm',
                    value: info.signature_alg || 'Unknown'
                }, {
                    label: 'Public Key Algorithm',
                    value: info.public_key_alg || 'Unknown'
                }, {
                    label: 'Issuer',
                    value: info.issuer || 'Unknown'
                }, {
                    label: 'Issued On',
                    value: MiscUtils.formatDate(info.issued_on) || 'Unknown'
                }, {
                    label: 'Expires On',
                    value: MiscUtils.formatDate(info.expires_on) || 'Unknown'
                }, {
                    label: 'DNS Names',
                    value: info.dns_names || 'Unknown'
                }] }), React.createElement(PageSelect_1.default, { label: "Type", help: "Certificate type, use text to provide a certificate. LetsEncrypt provides free certificates that automatically renew.", value: cert.type, onChange: val => {
                    this.set('type', val);
                } }, React.createElement("option", { value: "text" }, "Text"), React.createElement("option", { value: "lets_encrypt" }, "LetsEncrypt")))), React.createElement(PageSave_1.default, { style: css.save, hidden: !this.state.certificate, message: this.state.message, changed: this.state.changed, disabled: this.state.disabled, light: true, onCancel: () => {
                    this.setState(Object.assign({}, this.state, { changed: false, certificate: null }));
                }, onSave: this.onSave }));
        }
    }
    exports.default = Certificate;
    
});
System.registerDynamic("app/components/Certificates.js", ["npm:react@16.7.0.js", "app/stores/CertificatesStore.js", "app/actions/CertificateActions.js", "app/components/NonState.js", "app/components/Certificate.js", "app/components/Page.js", "app/components/PageHeader.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const CertificatesStore_1 = $__require("app/stores/CertificatesStore.js");
    const CertificateActions = $__require("app/actions/CertificateActions.js");
    const NonState_1 = $__require("app/components/NonState.js");
    const Certificate_1 = $__require("app/components/Certificate.js");
    const Page_1 = $__require("app/components/Page.js");
    const PageHeader_1 = $__require("app/components/PageHeader.js");
    const css = {
        header: {
            marginTop: '-19px'
        },
        heading: {
            margin: '19px 0 0 0'
        },
        button: {
            margin: '8px 0 0 8px'
        },
        buttons: {
            marginTop: '8px'
        },
        noCerts: {
            height: 'auto'
        }
    };
    class Certificates extends React.Component {
        constructor(props, context) {
            super(props, context);
            this.onChange = () => {
                this.setState(Object.assign({}, this.state, { certificates: CertificatesStore_1.default.certificates }));
            };
            this.state = {
                certificates: CertificatesStore_1.default.certificates,
                disabled: false
            };
        }
        componentDidMount() {
            CertificatesStore_1.default.addChangeListener(this.onChange);
            CertificateActions.sync();
        }
        componentWillUnmount() {
            CertificatesStore_1.default.removeChangeListener(this.onChange);
        }
        render() {
            let certsDom = [];
            this.state.certificates.forEach(cert => {
                certsDom.push(React.createElement(Certificate_1.default, { key: cert.id, certificate: cert }));
            });
            return React.createElement(Page_1.default, null, React.createElement(PageHeader_1.default, null, React.createElement("div", { className: "layout horizontal wrap", style: css.header }, React.createElement("h2", { style: css.heading }, "Certificates"), React.createElement("div", { className: "flex" }), React.createElement("div", { style: css.buttons }, React.createElement("button", { className: "bp3-button bp3-intent-success bp3-icon-add", style: css.button, disabled: this.state.disabled, type: "button", onClick: () => {
                    this.setState(Object.assign({}, this.state, { disabled: true }));
                    CertificateActions.create(null).then(() => {
                        this.setState(Object.assign({}, this.state, { disabled: false }));
                    }).catch(() => {
                        this.setState(Object.assign({}, this.state, { disabled: false }));
                    });
                } }, "New")))), React.createElement("div", null, certsDom), React.createElement(NonState_1.default, { hidden: !!certsDom.length, iconClass: "bp3-icon-endorsed", title: "No certificates", description: "Add a new certificate to get started." }));
        }
    }
    exports.default = Certificates;
    
});
System.registerDynamic("app/components/Organization.js", ["npm:react@16.7.0.js", "app/actions/OrganizationActions.js", "app/components/PageInput.js", "app/components/PageInfo.js", "app/components/PageSave.js", "app/components/PageInputButton.js", "app/components/ConfirmButton.js", "app/components/Help.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const OrganizationActions = $__require("app/actions/OrganizationActions.js");
    const PageInput_1 = $__require("app/components/PageInput.js");
    const PageInfo_1 = $__require("app/components/PageInfo.js");
    const PageSave_1 = $__require("app/components/PageSave.js");
    const PageInputButton_1 = $__require("app/components/PageInputButton.js");
    const ConfirmButton_1 = $__require("app/components/ConfirmButton.js");
    const Help_1 = $__require("app/components/Help.js");
    const css = {
        card: {
            position: 'relative',
            padding: '10px 10px 0 10px',
            marginBottom: '5px'
        },
        remove: {
            position: 'absolute',
            top: '5px',
            right: '5px'
        },
        role: {
            margin: '9px 5px 0 5px',
            height: '20px'
        },
        group: {
            flex: 1,
            minWidth: '280px',
            margin: '0 10px'
        },
        save: {
            paddingBottom: '10px'
        }
    };
    class Organization extends React.Component {
        constructor(props, context) {
            super(props, context);
            this.onAddRole = () => {
                let organization;
                if (this.state.changed) {
                    organization = Object.assign({}, this.state.organization);
                } else {
                    organization = Object.assign({}, this.props.organization);
                }
                let roles = [...organization.roles];
                if (!this.state.addRole) {
                    return;
                }
                if (roles.indexOf(this.state.addRole) === -1) {
                    roles.push(this.state.addRole);
                }
                roles.sort();
                organization.roles = roles;
                this.setState(Object.assign({}, this.state, { changed: true, message: '', addRole: '', organization: organization }));
            };
            this.onSave = () => {
                this.setState(Object.assign({}, this.state, { disabled: true }));
                OrganizationActions.commit(this.state.organization).then(() => {
                    this.setState(Object.assign({}, this.state, { message: 'Your changes have been saved', changed: false, disabled: false }));
                    setTimeout(() => {
                        if (!this.state.changed) {
                            this.setState(Object.assign({}, this.state, { message: '', changed: false, organization: null }));
                        }
                    }, 3000);
                }).catch(() => {
                    this.setState(Object.assign({}, this.state, { message: '', disabled: false }));
                });
            };
            this.onDelete = () => {
                this.setState(Object.assign({}, this.state, { disabled: true }));
                OrganizationActions.remove(this.props.organization.id).then(() => {
                    this.setState(Object.assign({}, this.state, { disabled: false }));
                }).catch(() => {
                    this.setState(Object.assign({}, this.state, { disabled: false }));
                });
            };
            this.state = {
                disabled: false,
                changed: false,
                message: '',
                addRole: '',
                organization: null
            };
        }
        set(name, val) {
            let organization;
            if (this.state.changed) {
                organization = Object.assign({}, this.state.organization);
            } else {
                organization = Object.assign({}, this.props.organization);
            }
            organization[name] = val;
            this.setState(Object.assign({}, this.state, { changed: true, organization: organization }));
        }
        onRemoveRole(role) {
            let organization;
            if (this.state.changed) {
                organization = Object.assign({}, this.state.organization);
            } else {
                organization = Object.assign({}, this.props.organization);
            }
            let roles = [...organization.roles];
            let i = roles.indexOf(role);
            if (i === -1) {
                return;
            }
            roles.splice(i, 1);
            organization.roles = roles;
            this.setState(Object.assign({}, this.state, { changed: true, message: '', addRole: '', organization: organization }));
        }
        render() {
            let org = this.state.organization || this.props.organization;
            let roles = [];
            for (let role of org.roles || []) {
                roles.push(React.createElement("div", { className: "bp3-tag bp3-tag-removable bp3-intent-primary", style: css.role, key: role }, role, React.createElement("button", { className: "bp3-tag-remove", disabled: this.state.disabled, onMouseUp: () => {
                        this.onRemoveRole(role);
                    } })));
            }
            return React.createElement("div", { className: "bp3-card", style: css.card }, React.createElement("div", { className: "layout horizontal wrap" }, React.createElement("div", { style: css.group }, React.createElement("div", { style: css.remove }, React.createElement(ConfirmButton_1.default, { className: "bp3-minimal bp3-intent-danger bp3-icon-trash", progressClassName: "bp3-intent-danger", confirmMsg: "Confirm organization remove", disabled: this.state.disabled, onConfirm: this.onDelete })), React.createElement(PageInput_1.default, { label: "Name", help: "Name of organization", type: "text", placeholder: "Name", value: org.name, onChange: val => {
                    this.set('name', val);
                } }), React.createElement("label", { className: "bp3-label" }, "Roles", React.createElement(Help_1.default, { title: "Roles", content: "User roles will be used to match with organization roles. A user must have a matching role to access an organization." }), React.createElement("div", null, roles)), React.createElement(PageInputButton_1.default, { disabled: this.state.disabled, buttonClass: "bp3-intent-success bp3-icon-add", label: "Add", type: "text", placeholder: "Add role", value: this.state.addRole, onChange: val => {
                    this.setState(Object.assign({}, this.state, { addRole: val }));
                }, onSubmit: this.onAddRole })), React.createElement("div", { style: css.group }, React.createElement(PageInfo_1.default, { fields: [{
                    label: 'ID',
                    value: this.props.organization.id || 'None'
                }] }))), React.createElement(PageSave_1.default, { style: css.save, hidden: !this.state.organization, message: this.state.message, changed: this.state.changed, disabled: this.state.disabled, light: true, onCancel: () => {
                    this.setState(Object.assign({}, this.state, { changed: false, organization: null }));
                }, onSave: this.onSave }));
        }
    }
    exports.default = Organization;
    
});
System.registerDynamic("app/components/Organizations.js", ["npm:react@16.7.0.js", "app/stores/OrganizationsStore.js", "app/actions/OrganizationActions.js", "app/components/NonState.js", "app/components/Organization.js", "app/components/Page.js", "app/components/PageHeader.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const OrganizationsStore_1 = $__require("app/stores/OrganizationsStore.js");
    const OrganizationActions = $__require("app/actions/OrganizationActions.js");
    const NonState_1 = $__require("app/components/NonState.js");
    const Organization_1 = $__require("app/components/Organization.js");
    const Page_1 = $__require("app/components/Page.js");
    const PageHeader_1 = $__require("app/components/PageHeader.js");
    const css = {
        header: {
            marginTop: '-19px'
        },
        heading: {
            margin: '19px 0 0 0'
        },
        button: {
            margin: '8px 0 0 8px'
        },
        buttons: {
            marginTop: '8px'
        },
        noCerts: {
            height: 'auto'
        }
    };
    class Organizations extends React.Component {
        constructor(props, context) {
            super(props, context);
            this.onChange = () => {
                this.setState(Object.assign({}, this.state, { organizations: OrganizationsStore_1.default.organizations }));
            };
            this.state = {
                organizations: OrganizationsStore_1.default.organizations,
                disabled: false
            };
        }
        componentDidMount() {
            OrganizationsStore_1.default.addChangeListener(this.onChange);
            OrganizationActions.sync();
        }
        componentWillUnmount() {
            OrganizationsStore_1.default.removeChangeListener(this.onChange);
        }
        render() {
            let orgsDom = [];
            this.state.organizations.forEach(org => {
                orgsDom.push(React.createElement(Organization_1.default, { key: org.id, organization: org }));
            });
            return React.createElement(Page_1.default, null, React.createElement(PageHeader_1.default, null, React.createElement("div", { className: "layout horizontal wrap", style: css.header }, React.createElement("h2", { style: css.heading }, "Organizations"), React.createElement("div", { className: "flex" }), React.createElement("div", { style: css.buttons }, React.createElement("button", { className: "bp3-button bp3-intent-success bp3-icon-add", style: css.button, disabled: this.state.disabled, type: "button", onClick: () => {
                    this.setState(Object.assign({}, this.state, { disabled: true }));
                    OrganizationActions.create(null).then(() => {
                        this.setState(Object.assign({}, this.state, { disabled: false }));
                    }).catch(() => {
                        this.setState(Object.assign({}, this.state, { disabled: false }));
                    });
                } }, "New")))), React.createElement("div", null, orgsDom), React.createElement(NonState_1.default, { hidden: !!orgsDom.length, iconClass: "bp3-icon-people", title: "No organizations", description: "Add a new organization to get started." }));
        }
    }
    exports.default = Organizations;
    
});
System.registerDynamic("app/components/Datacenter.js", ["npm:react@16.7.0.js", "app/actions/DatacenterActions.js", "app/stores/StoragesStore.js", "app/stores/OrganizationsStore.js", "app/components/PageInput.js", "app/components/PageInfo.js", "app/components/PageSelect.js", "app/components/PageSelectButton.js", "app/components/PageSwitch.js", "app/components/PageSave.js", "app/components/ConfirmButton.js", "app/components/Help.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const DatacenterActions = $__require("app/actions/DatacenterActions.js");
    const StoragesStore_1 = $__require("app/stores/StoragesStore.js");
    const OrganizationsStore_1 = $__require("app/stores/OrganizationsStore.js");
    const PageInput_1 = $__require("app/components/PageInput.js");
    const PageInfo_1 = $__require("app/components/PageInfo.js");
    const PageSelect_1 = $__require("app/components/PageSelect.js");
    const PageSelectButton_1 = $__require("app/components/PageSelectButton.js");
    const PageSwitch_1 = $__require("app/components/PageSwitch.js");
    const PageSave_1 = $__require("app/components/PageSave.js");
    const ConfirmButton_1 = $__require("app/components/ConfirmButton.js");
    const Help_1 = $__require("app/components/Help.js");
    const css = {
        card: {
            position: 'relative',
            padding: '10px 10px 0 10px',
            marginBottom: '5px'
        },
        remove: {
            position: 'absolute',
            top: '5px',
            right: '5px'
        },
        item: {
            margin: '9px 5px 0 5px',
            height: '20px'
        },
        itemsLabel: {
            display: 'block'
        },
        itemsAdd: {
            margin: '8px 0 15px 0'
        },
        group: {
            flex: 1,
            minWidth: '280px',
            margin: '0 10px'
        },
        save: {
            paddingBottom: '10px'
        },
        label: {
            width: '100%',
            maxWidth: '280px'
        },
        inputGroup: {
            width: '100%'
        },
        protocol: {
            flex: '0 1 auto'
        },
        port: {
            flex: '1'
        }
    };
    class Datacenter extends React.Component {
        constructor(props, context) {
            super(props, context);
            this.onSave = () => {
                this.setState(Object.assign({}, this.state, { disabled: true }));
                DatacenterActions.commit(this.state.datacenter).then(() => {
                    this.setState(Object.assign({}, this.state, { message: 'Your changes have been saved', changed: false, disabled: false }));
                    setTimeout(() => {
                        if (!this.state.changed) {
                            this.setState(Object.assign({}, this.state, { message: '', changed: false, datacenter: null }));
                        }
                    }, 3000);
                }).catch(() => {
                    this.setState(Object.assign({}, this.state, { message: '', disabled: false }));
                });
            };
            this.onDelete = () => {
                this.setState(Object.assign({}, this.state, { disabled: true }));
                DatacenterActions.remove(this.props.datacenter.id).then(() => {
                    this.setState(Object.assign({}, this.state, { disabled: false }));
                }).catch(() => {
                    this.setState(Object.assign({}, this.state, { disabled: false }));
                });
            };
            this.onAddStorage = () => {
                let datacenter;
                if (!this.state.addStorage && !this.props.storages.length) {
                    return;
                }
                let storageId = this.state.addStorage || this.props.storages[0].id;
                if (this.state.changed) {
                    datacenter = Object.assign({}, this.state.datacenter);
                } else {
                    datacenter = Object.assign({}, this.props.datacenter);
                }
                let publicStorages = [...(datacenter.public_storages || [])];
                if (publicStorages.indexOf(storageId) === -1) {
                    publicStorages.push(storageId);
                }
                publicStorages.sort();
                datacenter.public_storages = publicStorages;
                this.setState(Object.assign({}, this.state, { changed: true, datacenter: datacenter }));
            };
            this.onRemoveStorage = storage => {
                let datacenter;
                if (this.state.changed) {
                    datacenter = Object.assign({}, this.state.datacenter);
                } else {
                    datacenter = Object.assign({}, this.props.datacenter);
                }
                let publicStorages = [...(datacenter.public_storages || [])];
                let i = publicStorages.indexOf(storage);
                if (i === -1) {
                    return;
                }
                publicStorages.splice(i, 1);
                datacenter.public_storages = publicStorages;
                this.setState(Object.assign({}, this.state, { changed: true, datacenter: datacenter }));
            };
            this.onAddOrganization = () => {
                let datacenter;
                if (!this.state.addOrganization && !this.props.organizations.length) {
                    return;
                }
                let organizationId = this.state.addOrganization || this.props.organizations[0].id;
                if (this.state.changed) {
                    datacenter = Object.assign({}, this.state.datacenter);
                } else {
                    datacenter = Object.assign({}, this.props.datacenter);
                }
                let organizations = [...(datacenter.organizations || [])];
                if (organizations.indexOf(organizationId) === -1) {
                    organizations.push(organizationId);
                }
                organizations.sort();
                datacenter.organizations = organizations;
                this.setState(Object.assign({}, this.state, { changed: true, datacenter: datacenter }));
            };
            this.onRemoveOrganization = organization => {
                let datacenter;
                if (this.state.changed) {
                    datacenter = Object.assign({}, this.state.datacenter);
                } else {
                    datacenter = Object.assign({}, this.props.datacenter);
                }
                let organizations = [...(datacenter.organizations || [])];
                let i = organizations.indexOf(organization);
                if (i === -1) {
                    return;
                }
                organizations.splice(i, 1);
                datacenter.organizations = organizations;
                this.setState(Object.assign({}, this.state, { changed: true, datacenter: datacenter }));
            };
            this.state = {
                disabled: false,
                changed: false,
                message: '',
                datacenter: null,
                addStorage: '',
                addOrganization: null
            };
        }
        set(name, val) {
            let datacenter;
            if (this.state.changed) {
                datacenter = Object.assign({}, this.state.datacenter);
            } else {
                datacenter = Object.assign({}, this.props.datacenter);
            }
            datacenter[name] = val;
            this.setState(Object.assign({}, this.state, { changed: true, datacenter: datacenter }));
        }
        toggle(name) {
            let datacenter;
            if (this.state.changed) {
                datacenter = Object.assign({}, this.state.datacenter);
            } else {
                datacenter = Object.assign({}, this.props.datacenter);
            }
            datacenter[name] = !datacenter[name];
            this.setState(Object.assign({}, this.state, { changed: true, datacenter: datacenter }));
        }
        render() {
            let datacenter = this.state.datacenter || this.props.datacenter;
            let organizations = [];
            for (let organizationId of datacenter.organizations || []) {
                let organization = OrganizationsStore_1.default.organization(organizationId);
                if (!organization) {
                    continue;
                }
                organizations.push(React.createElement("div", { className: "bp3-tag bp3-tag-removable bp3-intent-primary", style: css.item, key: organization.id }, organization.name, React.createElement("button", { className: "bp3-tag-remove", onMouseUp: () => {
                        this.onRemoveOrganization(organization.id);
                    } })));
            }
            let organizationsSelect = [];
            if (this.props.organizations.length) {
                for (let organization of this.props.organizations) {
                    organizationsSelect.push(React.createElement("option", { key: organization.id, value: organization.id }, organization.name));
                }
            } else {
                organizationsSelect.push(React.createElement("option", { key: "null", value: "" }, "None"));
            }
            let publicStorages = [];
            for (let storageId of datacenter.public_storages || []) {
                let storage = StoragesStore_1.default.storage(storageId);
                if (!storage) {
                    continue;
                }
                publicStorages.push(React.createElement("div", { className: "bp3-tag bp3-tag-removable bp3-intent-primary", style: css.item, key: storage.id }, storage.name, React.createElement("button", { disabled: this.state.disabled, className: "bp3-tag-remove", onMouseUp: () => {
                        this.onRemoveStorage(storage.id);
                    } })));
            }
            let hasStorages = false;
            let privateStoragesSelect = [React.createElement("option", { key: "null", value: "" }, "None")];
            let backupStoragesSelect = [React.createElement("option", { key: "null", value: "" }, "None")];
            let publicStoragesSelect = [];
            if (this.props.storages.length) {
                for (let storage of this.props.storages) {
                    if (storage.type === 'public') {
                        hasStorages = true;
                        publicStoragesSelect.push(React.createElement("option", { key: storage.id, value: storage.id }, storage.name));
                    } else if (storage.type === 'private') {
                        privateStoragesSelect.push(React.createElement("option", { key: storage.id, value: storage.id }, storage.name));
                        backupStoragesSelect.push(React.createElement("option", { key: storage.id, value: storage.id }, storage.name));
                    }
                }
            }
            if (!hasStorages) {
                publicStoragesSelect.push(React.createElement("option", { key: "null", value: "" }, "No Storages"));
            }
            return React.createElement("div", { className: "bp3-card", style: css.card }, React.createElement("div", { className: "layout horizontal wrap" }, React.createElement("div", { style: css.group }, React.createElement("div", { style: css.remove }, React.createElement(ConfirmButton_1.default, { className: "bp3-minimal bp3-intent-danger bp3-icon-trash", progressClassName: "bp3-intent-danger", confirmMsg: "Confirm datacenter remove", disabled: this.state.disabled, onConfirm: this.onDelete })), React.createElement(PageInput_1.default, { disabled: this.state.disabled, label: "Name", help: "Name of datacenter", type: "text", placeholder: "Enter name", value: datacenter.name, onChange: val => {
                    this.set('name', val);
                } }), React.createElement(PageSelect_1.default, { disabled: this.state.disabled, label: "Private Storage", help: "Private storage that will store instance snapshots.", value: datacenter.private_storage, onChange: val => {
                    this.set('private_storage', val);
                } }, privateStoragesSelect), React.createElement(PageSelect_1.default, { disabled: this.state.disabled, label: "Private Storage Class", help: "Private storage class to use when upload new objects.", value: datacenter.private_storage_class, onChange: val => {
                    this.set('private_storage_class', val);
                } }, React.createElement("option", { value: "" }, "Default"), React.createElement("option", { value: "aws_standard" }, "AWS Standard"), React.createElement("option", { value: "aws_infrequent_access" }, "AWS Standard-IA"), React.createElement("option", { value: "aws_glacier" }, "AWS Glacier")), React.createElement(PageSelect_1.default, { disabled: this.state.disabled, label: "Backup Storage", help: "Backup storage that will store instance backups.", value: datacenter.backup_storage, onChange: val => {
                    this.set('backup_storage', val);
                } }, backupStoragesSelect), React.createElement(PageSelect_1.default, { disabled: this.state.disabled, label: "Backup Storage Class", help: "Backup storage class to use when upload new objects.", value: datacenter.backup_storage_class, onChange: val => {
                    this.set('backup_storage_class', val);
                } }, React.createElement("option", { value: "" }, "Default"), React.createElement("option", { value: "aws_standard" }, "AWS Standard"), React.createElement("option", { value: "aws_infrequent_access" }, "AWS Standard-IA"), React.createElement("option", { value: "aws_glacier" }, "AWS Glacier")), React.createElement("label", { className: "bp3-label", style: css.label }, "Public Storages", React.createElement(Help_1.default, { title: "Public Storages", content: "Public storages that can be used for new instance images." }), React.createElement("div", null, publicStorages)), React.createElement(PageSelectButton_1.default, { label: "Add Storage", value: this.state.addStorage, disabled: !hasStorages || this.state.disabled, buttonClass: "bp3-intent-success", onChange: val => {
                    this.setState(Object.assign({}, this.state, { addStorage: val }));
                }, onSubmit: this.onAddStorage }, publicStoragesSelect)), React.createElement("div", { style: css.group }, React.createElement(PageInfo_1.default, { fields: [{
                    label: 'ID',
                    value: this.props.datacenter.id || 'None'
                }] }), React.createElement(PageSwitch_1.default, { label: "Match organizations", help: "Limit what organizations can access this datacenter, by default all organizations will have access.", checked: datacenter.match_organizations, onToggle: () => {
                    this.toggle('match_organizations');
                } }), React.createElement("label", { className: "bp3-label", style: css.label, hidden: !datacenter.match_organizations }, "Organizations", React.createElement(Help_1.default, { title: "Organizations", content: "Organizations that can access this zone." }), React.createElement("div", null, organizations)), React.createElement(PageSelectButton_1.default, { label: "Add Organization", value: this.state.addOrganization, disabled: !this.props.organizations.length, hidden: !datacenter.match_organizations, buttonClass: "bp3-intent-success", onChange: val => {
                    this.setState(Object.assign({}, this.state, { addOrganization: val }));
                }, onSubmit: this.onAddOrganization }, organizationsSelect))), React.createElement(PageSave_1.default, { style: css.save, hidden: !this.state.datacenter, message: this.state.message, changed: this.state.changed, disabled: this.state.disabled, light: true, onCancel: () => {
                    this.setState(Object.assign({}, this.state, { changed: false, datacenter: null }));
                }, onSave: this.onSave }));
        }
    }
    exports.default = Datacenter;
    
});
System.registerDynamic("app/components/Datacenters.js", ["npm:react@16.7.0.js", "app/stores/DatacentersStore.js", "app/stores/StoragesStore.js", "app/stores/OrganizationsStore.js", "app/actions/DatacenterActions.js", "app/actions/StorageActions.js", "app/actions/OrganizationActions.js", "app/components/NonState.js", "app/components/Datacenter.js", "app/components/Page.js", "app/components/PageHeader.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const DatacentersStore_1 = $__require("app/stores/DatacentersStore.js");
    const StoragesStore_1 = $__require("app/stores/StoragesStore.js");
    const OrganizationsStore_1 = $__require("app/stores/OrganizationsStore.js");
    const DatacenterActions = $__require("app/actions/DatacenterActions.js");
    const StorageActions = $__require("app/actions/StorageActions.js");
    const OrganizationActions = $__require("app/actions/OrganizationActions.js");
    const NonState_1 = $__require("app/components/NonState.js");
    const Datacenter_1 = $__require("app/components/Datacenter.js");
    const Page_1 = $__require("app/components/Page.js");
    const PageHeader_1 = $__require("app/components/PageHeader.js");
    const css = {
        header: {
            marginTop: '-19px'
        },
        heading: {
            margin: '19px 0 0 0'
        },
        button: {
            margin: '8px 0 0 8px'
        },
        buttons: {
            marginTop: '8px'
        },
        noCerts: {
            height: 'auto'
        }
    };
    class Datacenters extends React.Component {
        constructor(props, context) {
            super(props, context);
            this.onChange = () => {
                this.setState(Object.assign({}, this.state, { datacenters: DatacentersStore_1.default.datacenters, storages: StoragesStore_1.default.storages, organizations: OrganizationsStore_1.default.organizations }));
            };
            this.state = {
                datacenters: DatacentersStore_1.default.datacenters,
                storages: StoragesStore_1.default.storages,
                organizations: OrganizationsStore_1.default.organizations,
                disabled: false
            };
        }
        componentDidMount() {
            DatacentersStore_1.default.addChangeListener(this.onChange);
            StoragesStore_1.default.addChangeListener(this.onChange);
            OrganizationsStore_1.default.addChangeListener(this.onChange);
            DatacenterActions.sync();
            StorageActions.sync();
            OrganizationActions.sync();
        }
        componentWillUnmount() {
            DatacentersStore_1.default.removeChangeListener(this.onChange);
            StoragesStore_1.default.removeChangeListener(this.onChange);
            OrganizationsStore_1.default.removeChangeListener(this.onChange);
        }
        render() {
            let datacentersDom = [];
            this.state.datacenters.forEach(datacenter => {
                datacentersDom.push(React.createElement(Datacenter_1.default, { key: datacenter.id, datacenter: datacenter, storages: this.state.storages, organizations: this.state.organizations }));
            });
            return React.createElement(Page_1.default, null, React.createElement(PageHeader_1.default, null, React.createElement("div", { className: "layout horizontal wrap", style: css.header }, React.createElement("h2", { style: css.heading }, "Datacenters"), React.createElement("div", { className: "flex" }), React.createElement("div", { style: css.buttons }, React.createElement("button", { className: "bp3-button bp3-intent-success bp3-icon-add", style: css.button, disabled: this.state.disabled, type: "button", onClick: () => {
                    this.setState(Object.assign({}, this.state, { disabled: true }));
                    DatacenterActions.create(null).then(() => {
                        this.setState(Object.assign({}, this.state, { disabled: false }));
                    }).catch(() => {
                        this.setState(Object.assign({}, this.state, { disabled: false }));
                    });
                } }, "New")))), React.createElement("div", null, datacentersDom), React.createElement(NonState_1.default, { hidden: !!datacentersDom.length, iconClass: "bp3-icon-cloud", title: "No datacenters", description: "Add a new datacenter to get started." }));
        }
    }
    exports.default = Datacenters;
    
});
System.registerDynamic("app/components/Zone.js", ["npm:react@16.7.0.js", "app/actions/ZoneActions.js", "app/stores/DatacentersStore.js", "app/components/PageInput.js", "app/components/PageInfo.js", "app/components/PageSave.js", "app/components/PageSelect.js", "app/components/ConfirmButton.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const ZoneActions = $__require("app/actions/ZoneActions.js");
    const DatacentersStore_1 = $__require("app/stores/DatacentersStore.js");
    const PageInput_1 = $__require("app/components/PageInput.js");
    const PageInfo_1 = $__require("app/components/PageInfo.js");
    const PageSave_1 = $__require("app/components/PageSave.js");
    const PageSelect_1 = $__require("app/components/PageSelect.js");
    const ConfirmButton_1 = $__require("app/components/ConfirmButton.js");
    const css = {
        card: {
            position: 'relative',
            padding: '10px 10px 0 10px',
            marginBottom: '5px'
        },
        remove: {
            position: 'absolute',
            top: '5px',
            right: '5px'
        },
        item: {
            margin: '9px 5px 0 5px',
            height: '20px'
        },
        itemsLabel: {
            display: 'block'
        },
        itemsAdd: {
            margin: '8px 0 15px 0'
        },
        group: {
            flex: 1,
            minWidth: '280px',
            margin: '0 10px'
        },
        save: {
            paddingBottom: '10px'
        },
        label: {
            width: '100%',
            maxWidth: '280px'
        },
        inputGroup: {
            width: '100%'
        },
        protocol: {
            flex: '0 1 auto'
        },
        port: {
            flex: '1'
        }
    };
    class Zone extends React.Component {
        constructor(props, context) {
            super(props, context);
            this.onSave = () => {
                this.setState(Object.assign({}, this.state, { disabled: true }));
                ZoneActions.commit(this.state.zone).then(() => {
                    this.setState(Object.assign({}, this.state, { message: 'Your changes have been saved', changed: false, disabled: false }));
                    setTimeout(() => {
                        if (!this.state.changed) {
                            this.setState(Object.assign({}, this.state, { message: '', changed: false, zone: null }));
                        }
                    }, 3000);
                }).catch(() => {
                    this.setState(Object.assign({}, this.state, { message: '', disabled: false }));
                });
            };
            this.onDelete = () => {
                this.setState(Object.assign({}, this.state, { disabled: true }));
                ZoneActions.remove(this.props.zone.id).then(() => {
                    this.setState(Object.assign({}, this.state, { disabled: false }));
                }).catch(() => {
                    this.setState(Object.assign({}, this.state, { disabled: false }));
                });
            };
            this.state = {
                disabled: false,
                changed: false,
                message: '',
                zone: null,
                addCert: null,
                forwardedChecked: false
            };
        }
        set(name, val) {
            let zone;
            if (this.state.changed) {
                zone = Object.assign({}, this.state.zone);
            } else {
                zone = Object.assign({}, this.props.zone);
            }
            zone[name] = val;
            this.setState(Object.assign({}, this.state, { changed: true, zone: zone }));
        }
        render() {
            let zone = this.state.zone || this.props.zone;
            let datacenter = DatacentersStore_1.default.datacenter(this.props.zone.datacenter);
            return React.createElement("div", { className: "bp3-card", style: css.card }, React.createElement("div", { className: "layout horizontal wrap" }, React.createElement("div", { style: css.group }, React.createElement("div", { style: css.remove }, React.createElement(ConfirmButton_1.default, { className: "bp3-minimal bp3-intent-danger bp3-icon-trash", progressClassName: "bp3-intent-danger", confirmMsg: "Confirm zone remove", disabled: this.state.disabled, onConfirm: this.onDelete })), React.createElement(PageInput_1.default, { label: "Name", help: "Name of zone", type: "text", placeholder: "Enter name", value: zone.name, onChange: val => {
                    this.set('name', val);
                } }), React.createElement(PageSelect_1.default, { disabled: this.state.disabled, label: "Network Mode", help: "Network mode for internal VPC networking. If layer 2 networking with VLAN support isn't available VXLan must be used.", value: zone.network_mode, onChange: val => {
                    this.set('network_mode', val);
                } }, React.createElement("option", { value: "default" }, "Default"), React.createElement("option", { value: "vxlan_vlan" }, "VXLAN"))), React.createElement("div", { style: css.group }, React.createElement(PageInfo_1.default, { fields: [{
                    label: 'ID',
                    value: this.props.zone.id || 'None'
                }, {
                    label: 'Datacenter',
                    value: datacenter ? datacenter.name : this.props.zone.datacenter || 'None'
                }] }))), React.createElement(PageSave_1.default, { style: css.save, hidden: !this.state.zone, message: this.state.message, changed: this.state.changed, disabled: this.state.disabled, light: true, onCancel: () => {
                    this.setState(Object.assign({}, this.state, { changed: false, forwardedChecked: false, zone: null }));
                }, onSave: this.onSave }));
        }
    }
    exports.default = Zone;
    
});
System.registerDynamic("app/components/Zones.js", ["npm:react@16.7.0.js", "app/stores/ZonesStore.js", "app/stores/DatacentersStore.js", "app/actions/ZoneActions.js", "app/actions/DatacenterActions.js", "app/components/NonState.js", "app/components/Zone.js", "app/components/Page.js", "app/components/PageHeader.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const ZonesStore_1 = $__require("app/stores/ZonesStore.js");
    const DatacentersStore_1 = $__require("app/stores/DatacentersStore.js");
    const ZoneActions = $__require("app/actions/ZoneActions.js");
    const DatacenterActions = $__require("app/actions/DatacenterActions.js");
    const NonState_1 = $__require("app/components/NonState.js");
    const Zone_1 = $__require("app/components/Zone.js");
    const Page_1 = $__require("app/components/Page.js");
    const PageHeader_1 = $__require("app/components/PageHeader.js");
    const css = {
        header: {
            marginTop: '-19px'
        },
        heading: {
            margin: '19px 0 0 0'
        },
        group: {
            margin: '15px 0 0 0',
            width: '220px'
        },
        select: {
            width: '100%',
            borderTopLeftRadius: '3px',
            borderBottomLeftRadius: '3px'
        },
        selectInner: {
            width: '100%'
        },
        selectBox: {
            flex: '1'
        }
    };
    class Zones extends React.Component {
        constructor(props, context) {
            super(props, context);
            this.onChange = () => {
                this.setState(Object.assign({}, this.state, { zones: ZonesStore_1.default.zones, datacenters: DatacentersStore_1.default.datacenters }));
            };
            this.state = {
                zones: ZonesStore_1.default.zones,
                datacenters: DatacentersStore_1.default.datacenters,
                datacenter: '',
                disabled: false
            };
        }
        componentDidMount() {
            ZonesStore_1.default.addChangeListener(this.onChange);
            DatacentersStore_1.default.addChangeListener(this.onChange);
            ZoneActions.sync();
            DatacenterActions.sync();
        }
        componentWillUnmount() {
            ZonesStore_1.default.removeChangeListener(this.onChange);
            DatacentersStore_1.default.removeChangeListener(this.onChange);
        }
        render() {
            let zonesDom = [];
            this.state.zones.forEach(zone => {
                zonesDom.push(React.createElement(Zone_1.default, { key: zone.id, zone: zone }));
            });
            let hasDatacenters = false;
            let datacentersSelect = [];
            if (this.state.datacenters.length) {
                hasDatacenters = true;
                for (let datacenter of this.state.datacenters) {
                    datacentersSelect.push(React.createElement("option", { key: datacenter.id, value: datacenter.id }, datacenter.name));
                }
            } else {
                datacentersSelect.push(React.createElement("option", { key: "null", value: "" }, "No Datacenters"));
            }
            return React.createElement(Page_1.default, null, React.createElement(PageHeader_1.default, null, React.createElement("div", { className: "layout horizontal wrap", style: css.header }, React.createElement("h2", { style: css.heading }, "Zones"), React.createElement("div", { className: "flex" }), React.createElement("div", null, React.createElement("div", { className: "bp3-control-group", style: css.group }, React.createElement("div", { style: css.selectBox }, React.createElement("div", { className: "bp3-select", style: css.select }, React.createElement("select", { style: css.selectInner, disabled: !hasDatacenters || this.state.disabled, value: this.state.datacenter, onChange: evt => {
                    this.setState(Object.assign({}, this.state, { datacenter: evt.target.value }));
                } }, datacentersSelect))), React.createElement("button", { className: "bp3-button bp3-intent-success bp3-icon-add", disabled: !hasDatacenters || this.state.disabled, type: "button", onClick: () => {
                    this.setState(Object.assign({}, this.state, { disabled: true }));
                    ZoneActions.create({
                        id: null,
                        datacenter: this.state.datacenter || this.state.datacenters[0].id
                    }).then(() => {
                        this.setState(Object.assign({}, this.state, { disabled: false }));
                    }).catch(() => {
                        this.setState(Object.assign({}, this.state, { disabled: false }));
                    });
                } }, "New"))))), React.createElement("div", null, zonesDom), React.createElement(NonState_1.default, { hidden: !!zonesDom.length, iconClass: "bp3-icon-layout-circle", title: "No zones", description: "Add a new zone to get started." }));
        }
    }
    exports.default = Zones;
    
});
System.registerDynamic("app/stores/BlocksStore.js", ["app/dispatcher/Dispatcher.js", "app/EventEmitter.js", "app/types/BlockTypes.js", "app/types/GlobalTypes.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const Dispatcher_1 = $__require("app/dispatcher/Dispatcher.js");
    const EventEmitter_1 = $__require("app/EventEmitter.js");
    const BlockTypes = $__require("app/types/BlockTypes.js");
    const GlobalTypes = $__require("app/types/GlobalTypes.js");
    class BlocksStore extends EventEmitter_1.default {
        constructor() {
            super(...arguments);
            this._blocks = Object.freeze([]);
            this._map = {};
            this._token = Dispatcher_1.default.register(this._callback.bind(this));
        }
        _reset() {
            this._blocks = Object.freeze([]);
            this._map = {};
            this.emitChange();
        }
        get blocks() {
            return this._blocks;
        }
        get blocksM() {
            let blocks = [];
            this._blocks.forEach(block => {
                blocks.push(Object.assign({}, block));
            });
            return blocks;
        }
        block(id) {
            let i = this._map[id];
            if (i === undefined) {
                return null;
            }
            return this._blocks[i];
        }
        emitChange() {
            this.emitDefer(GlobalTypes.CHANGE);
        }
        addChangeListener(callback) {
            this.on(GlobalTypes.CHANGE, callback);
        }
        removeChangeListener(callback) {
            this.removeListener(GlobalTypes.CHANGE, callback);
        }
        _sync(blocks) {
            this._map = {};
            for (let i = 0; i < blocks.length; i++) {
                blocks[i] = Object.freeze(blocks[i]);
                this._map[blocks[i].id] = i;
            }
            this._blocks = Object.freeze(blocks);
            this.emitChange();
        }
        _callback(action) {
            switch (action.type) {
                case GlobalTypes.RESET:
                    this._reset();
                    break;
                case BlockTypes.SYNC:
                    this._sync(action.data.blocks);
                    break;
            }
        }
    }
    exports.default = new BlocksStore();
    
});
System.registerDynamic("app/components/Block.js", ["npm:react@16.7.0.js", "app/actions/BlockActions.js", "app/components/PageInput.js", "app/components/PageInfo.js", "app/components/PageSave.js", "app/components/PageInputButton.js", "app/components/ConfirmButton.js", "app/Alert.js", "app/components/Help.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const BlockActions = $__require("app/actions/BlockActions.js");
    const PageInput_1 = $__require("app/components/PageInput.js");
    const PageInfo_1 = $__require("app/components/PageInfo.js");
    const PageSave_1 = $__require("app/components/PageSave.js");
    const PageInputButton_1 = $__require("app/components/PageInputButton.js");
    const ConfirmButton_1 = $__require("app/components/ConfirmButton.js");
    const Alert = $__require("app/Alert.js");
    const Help_1 = $__require("app/components/Help.js");
    const css = {
        card: {
            position: 'relative',
            padding: '10px 10px 0 10px',
            marginBottom: '5px'
        },
        remove: {
            position: 'absolute',
            top: '5px',
            right: '5px'
        },
        item: {
            margin: '9px 5px 0 5px',
            height: '20px'
        },
        itemsLabel: {
            display: 'block'
        },
        itemsAdd: {
            margin: '8px 0 15px 0'
        },
        group: {
            flex: 1,
            minWidth: '280px',
            margin: '0 10px'
        },
        save: {
            paddingBottom: '10px'
        },
        label: {
            width: '100%',
            maxWidth: '280px'
        },
        inputGroup: {
            width: '100%'
        },
        protocol: {
            flex: '0 1 auto'
        },
        port: {
            flex: '1'
        },
        controlButton: {
            marginRight: '10px'
        }
    };
    class Block extends React.Component {
        constructor(props, context) {
            super(props, context);
            this.onSave = () => {
                this.setState(Object.assign({}, this.state, { disabled: true }));
                BlockActions.commit(this.state.block).then(() => {
                    this.setState(Object.assign({}, this.state, { message: 'Your changes have been saved', changed: false, disabled: false }));
                    setTimeout(() => {
                        if (!this.state.changed) {
                            this.setState(Object.assign({}, this.state, { message: '', changed: false, block: null }));
                        }
                    }, 3000);
                }).catch(() => {
                    this.setState(Object.assign({}, this.state, { message: '', disabled: false }));
                });
            };
            this.onSync = () => {
                this.setState(Object.assign({}, this.state, { disabled: true }));
                BlockActions.commit(this.props.block).then(() => {
                    this.setState(Object.assign({}, this.state, { disabled: false }));
                    Alert.success('Block sync started');
                }).catch(() => {
                    this.setState(Object.assign({}, this.state, { disabled: false }));
                });
            };
            this.onDelete = () => {
                this.setState(Object.assign({}, this.state, { disabled: true }));
                BlockActions.remove(this.props.block.id).then(() => {
                    this.setState(Object.assign({}, this.state, { disabled: false }));
                }).catch(() => {
                    this.setState(Object.assign({}, this.state, { disabled: false }));
                });
            };
            this.onAddSubnet = () => {
                let block;
                if (!this.state.addSubnet) {
                    return;
                }
                if (this.state.changed) {
                    block = Object.assign({}, this.state.block);
                } else {
                    block = Object.assign({}, this.props.block);
                }
                let subnets = [...(block.subnets || [])];
                let addSubnet = this.state.addSubnet.trim();
                if (subnets.indexOf(addSubnet) === -1) {
                    subnets.push(addSubnet);
                }
                subnets.sort();
                block.subnets = subnets;
                this.setState(Object.assign({}, this.state, { changed: true, message: '', addSubnet: '', block: block }));
            };
            this.onRemoveSubnet = subnet => {
                let block;
                if (this.state.changed) {
                    block = Object.assign({}, this.state.block);
                } else {
                    block = Object.assign({}, this.props.block);
                }
                let subnets = [...(block.subnets || [])];
                let i = subnets.indexOf(subnet);
                if (i === -1) {
                    return;
                }
                subnets.splice(i, 1);
                block.subnets = subnets;
                this.setState(Object.assign({}, this.state, { changed: true, message: '', addSubnet: '', block: block }));
            };
            this.onAddExclude = () => {
                let block;
                if (!this.state.addExclude) {
                    return;
                }
                if (this.state.changed) {
                    block = Object.assign({}, this.state.block);
                } else {
                    block = Object.assign({}, this.props.block);
                }
                let excludes = [...(block.excludes || [])];
                let addExclude = this.state.addExclude.trim();
                if (excludes.indexOf(addExclude) === -1) {
                    excludes.push(addExclude);
                }
                excludes.sort();
                block.excludes = excludes;
                this.setState(Object.assign({}, this.state, { changed: true, message: '', addExclude: '', block: block }));
            };
            this.onRemoveExclude = exclude => {
                let block;
                if (this.state.changed) {
                    block = Object.assign({}, this.state.block);
                } else {
                    block = Object.assign({}, this.props.block);
                }
                let excludes = [...(block.excludes || [])];
                let i = excludes.indexOf(exclude);
                if (i === -1) {
                    return;
                }
                excludes.splice(i, 1);
                block.excludes = excludes;
                this.setState(Object.assign({}, this.state, { changed: true, message: '', addExclude: '', block: block }));
            };
            this.state = {
                disabled: false,
                changed: false,
                message: '',
                addSubnet: '',
                addExclude: '',
                block: null
            };
        }
        set(name, val) {
            let block;
            if (this.state.changed) {
                block = Object.assign({}, this.state.block);
            } else {
                block = Object.assign({}, this.props.block);
            }
            block[name] = val;
            this.setState(Object.assign({}, this.state, { changed: true, block: block }));
        }
        render() {
            let block = this.state.block || this.props.block;
            let subnets = [];
            for (let subnet of block.subnets || []) {
                subnets.push(React.createElement("div", { className: "bp3-tag bp3-tag-removable bp3-intent-primary", style: css.item, key: subnet }, subnet, React.createElement("button", { className: "bp3-tag-remove", disabled: this.state.disabled, onMouseUp: () => {
                        this.onRemoveSubnet(subnet);
                    } })));
            }
            let excludes = [];
            for (let exclude of block.excludes || []) {
                excludes.push(React.createElement("div", { className: "bp3-tag bp3-tag-removable bp3-intent-primary", style: css.item, key: exclude }, exclude, React.createElement("button", { className: "bp3-tag-remove", disabled: this.state.disabled, onMouseUp: () => {
                        this.onRemoveExclude(exclude);
                    } })));
            }
            return React.createElement("div", { className: "bp3-card", style: css.card }, React.createElement("div", { className: "layout horizontal wrap" }, React.createElement("div", { style: css.group }, React.createElement("div", { style: css.remove }, React.createElement(ConfirmButton_1.default, { className: "bp3-minimal bp3-intent-danger bp3-icon-trash", progressClassName: "bp3-intent-danger", confirmMsg: "Confirm block remove", disabled: this.state.disabled, onConfirm: this.onDelete })), React.createElement(PageInput_1.default, { disabled: this.state.disabled, label: "Name", help: "Name of IP block", type: "text", placeholder: "Enter name", value: block.name, onChange: val => {
                    this.set('name', val);
                } }), React.createElement("label", { className: "bp3-label" }, "IP Addresses", React.createElement(Help_1.default, { title: "IP Addresses", content: "IP addresses that are available for instances." }), React.createElement("div", null, subnets)), React.createElement(PageInputButton_1.default, { disabled: this.state.disabled, buttonClass: "bp3-intent-success bp3-icon-add", label: "Add", type: "text", placeholder: "Add addresses", value: this.state.addSubnet, onChange: val => {
                    this.setState(Object.assign({}, this.state, { addSubnet: val }));
                }, onSubmit: this.onAddSubnet }), React.createElement("label", { className: "bp3-label" }, "IP Excludes", React.createElement(Help_1.default, { title: "IP Excludes", content: "IP addresses that are excluded from block. Add host or other reserved addresses here." }), React.createElement("div", null, excludes)), React.createElement(PageInputButton_1.default, { disabled: this.state.disabled, buttonClass: "bp3-intent-success bp3-icon-add", label: "Add", type: "text", placeholder: "Add exclude", value: this.state.addExclude, onChange: val => {
                    this.setState(Object.assign({}, this.state, { addExclude: val }));
                }, onSubmit: this.onAddExclude })), React.createElement("div", { style: css.group }, React.createElement(PageInfo_1.default, { fields: [{
                    label: 'ID',
                    value: this.props.block.id || 'None'
                }] }), React.createElement(PageInput_1.default, { disabled: this.state.disabled, label: "Netmask", help: "Netmask of IP block", type: "text", placeholder: "Enter netmask", value: block.netmask, onChange: val => {
                    this.set('netmask', val);
                } }), React.createElement(PageInput_1.default, { disabled: this.state.disabled, label: "Gateway", help: "Gateway address of IP block", type: "text", placeholder: "Enter gateway", value: block.gateway, onChange: val => {
                    this.set('gateway', val);
                } }))), React.createElement(PageSave_1.default, { style: css.save, hidden: !this.state.block, message: this.state.message, changed: this.state.changed, disabled: this.state.disabled, light: true, onCancel: () => {
                    this.setState(Object.assign({}, this.state, { changed: false, block: null }));
                }, onSave: this.onSave }));
        }
    }
    exports.default = Block;
    
});
System.registerDynamic("app/components/Blocks.js", ["npm:react@16.7.0.js", "app/stores/BlocksStore.js", "app/actions/BlockActions.js", "app/components/NonState.js", "app/components/Block.js", "app/components/Page.js", "app/components/PageHeader.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const BlocksStore_1 = $__require("app/stores/BlocksStore.js");
    const BlockActions = $__require("app/actions/BlockActions.js");
    const NonState_1 = $__require("app/components/NonState.js");
    const Block_1 = $__require("app/components/Block.js");
    const Page_1 = $__require("app/components/Page.js");
    const PageHeader_1 = $__require("app/components/PageHeader.js");
    const css = {
        header: {
            marginTop: '-19px'
        },
        heading: {
            margin: '19px 0 0 0'
        },
        button: {
            margin: '8px 0 0 8px'
        },
        buttons: {
            marginTop: '8px'
        },
        noCerts: {
            height: 'auto'
        }
    };
    class Blocks extends React.Component {
        constructor(props, context) {
            super(props, context);
            this.onChange = () => {
                this.setState(Object.assign({}, this.state, { blocks: BlocksStore_1.default.blocks }));
            };
            this.state = {
                blocks: BlocksStore_1.default.blocks,
                disabled: false
            };
        }
        componentDidMount() {
            BlocksStore_1.default.addChangeListener(this.onChange);
            BlockActions.sync();
        }
        componentWillUnmount() {
            BlocksStore_1.default.removeChangeListener(this.onChange);
        }
        render() {
            let blocksDom = [];
            this.state.blocks.forEach(block => {
                blocksDom.push(React.createElement(Block_1.default, { key: block.id, block: block }));
            });
            return React.createElement(Page_1.default, null, React.createElement(PageHeader_1.default, null, React.createElement("div", { className: "layout horizontal wrap", style: css.header }, React.createElement("h2", { style: css.heading }, "Blocks"), React.createElement("div", { className: "flex" }), React.createElement("div", { style: css.buttons }, React.createElement("button", { className: "bp3-button bp3-intent-success bp3-icon-add", style: css.button, disabled: this.state.disabled, type: "button", onClick: () => {
                    this.setState(Object.assign({}, this.state, { disabled: true }));
                    BlockActions.create(null).then(() => {
                        this.setState(Object.assign({}, this.state, { disabled: false }));
                    }).catch(() => {
                        this.setState(Object.assign({}, this.state, { disabled: false }));
                    });
                } }, "New")))), React.createElement("div", null, blocksDom), React.createElement(NonState_1.default, { hidden: !!blocksDom.length, iconClass: "bp3-icon-ip-address", title: "No IP blocks", description: "Add a new IP block to get started." }));
        }
    }
    exports.default = Blocks;
    
});
System.registerDynamic("app/components/VpcRoute.js", ["npm:react@16.7.0.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const css = {
        group: {
            width: '100%',
            maxWidth: '310px',
            marginTop: '5px'
        },
        input: {
            width: '100%'
        },
        inputBox: {
            flex: '1'
        }
    };
    class VpcRoute extends React.Component {
        clone() {
            return Object.assign({}, this.props.route);
        }
        render() {
            let route = this.props.route;
            return React.createElement("div", null, React.createElement("div", { className: "bp3-control-group", style: css.group }, React.createElement("div", { style: css.inputBox }, React.createElement("input", { className: "bp3-input", style: css.input, disabled: this.props.disabled, type: "text", autoCapitalize: "off", spellCheck: false, placeholder: "Destination", value: route.destination || '', onChange: evt => {
                    let state = this.clone();
                    state.destination = evt.target.value;
                    this.props.onChange(state);
                } })), React.createElement("div", { style: css.inputBox }, React.createElement("input", { className: "bp3-input", style: css.input, disabled: this.props.disabled, type: "text", autoCapitalize: "off", spellCheck: false, placeholder: "Target", value: route.target || '', onChange: evt => {
                    let state = this.clone();
                    state.target = evt.target.value;
                    this.props.onChange(state);
                } })), React.createElement("button", { className: "bp3-button bp3-minimal bp3-intent-danger bp3-icon-remove", disabled: this.props.disabled, onClick: () => {
                    this.props.onRemove();
                } }), React.createElement("button", { className: "bp3-button bp3-minimal bp3-intent-success bp3-icon-add", onClick: () => {
                    this.props.onAdd();
                } })));
        }
    }
    exports.default = VpcRoute;
    
});
System.registerDynamic("app/components/VpcLinkUri.js", ["npm:react@16.7.0.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const css = {
        group: {
            width: '100%',
            maxWidth: '310px',
            marginTop: '5px'
        },
        input: {
            width: '100%'
        },
        inputBox: {
            flex: '1'
        }
    };
    class VpcUriLink extends React.Component {
        render() {
            return React.createElement("div", null, React.createElement("div", { className: "bp3-control-group", style: css.group }, React.createElement("div", { style: css.inputBox }, React.createElement("input", { className: "bp3-input", style: css.input, disabled: this.props.disabled, type: "text", autoCapitalize: "off", spellCheck: false, placeholder: "Link URI", value: this.props.linkUri || '', onChange: evt => {
                    this.props.onChange(evt.target.value);
                } })), React.createElement("button", { className: "bp3-button bp3-minimal bp3-intent-danger bp3-icon-remove", disabled: this.props.disabled, onClick: () => {
                    this.props.onRemove();
                } }), React.createElement("button", { className: "bp3-button bp3-minimal bp3-intent-success bp3-icon-add", onClick: () => {
                    this.props.onAdd();
                } })));
        }
    }
    exports.default = VpcUriLink;
    
});
System.registerDynamic("app/components/VpcDetailed.js", ["npm:react@16.7.0.js", "app/actions/VpcActions.js", "app/stores/DatacentersStore.js", "app/stores/OrganizationsStore.js", "app/components/VpcRoute.js", "app/components/VpcLinkUri.js", "app/components/PageInput.js", "app/components/PageInfo.js", "app/components/PageSave.js", "app/components/ConfirmButton.js", "app/components/Help.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const VpcActions = $__require("app/actions/VpcActions.js");
    const DatacentersStore_1 = $__require("app/stores/DatacentersStore.js");
    const OrganizationsStore_1 = $__require("app/stores/OrganizationsStore.js");
    const VpcRoute_1 = $__require("app/components/VpcRoute.js");
    const VpcLinkUri_1 = $__require("app/components/VpcLinkUri.js");
    const PageInput_1 = $__require("app/components/PageInput.js");
    const PageInfo_1 = $__require("app/components/PageInfo.js");
    const PageSave_1 = $__require("app/components/PageSave.js");
    const ConfirmButton_1 = $__require("app/components/ConfirmButton.js");
    const Help_1 = $__require("app/components/Help.js");
    const css = {
        card: {
            position: 'relative',
            padding: '48px 10px 0 10px',
            width: '100%'
        },
        button: {
            height: '30px'
        },
        buttons: {
            cursor: 'pointer',
            position: 'absolute',
            top: 0,
            left: 0,
            right: 0,
            padding: '4px',
            height: '39px',
            backgroundColor: 'rgba(0, 0, 0, 0.13)'
        },
        item: {
            margin: '9px 5px 0 5px',
            height: '20px'
        },
        itemsLabel: {
            display: 'block'
        },
        itemsAdd: {
            margin: '8px 0 15px 0'
        },
        group: {
            flex: 1,
            minWidth: '280px',
            margin: '0 10px'
        },
        save: {
            paddingBottom: '10px'
        },
        label: {
            width: '100%',
            maxWidth: '280px'
        },
        status: {
            margin: '6px 0 0 1px'
        },
        icon: {
            marginRight: '3px'
        },
        inputGroup: {
            width: '100%'
        },
        protocol: {
            flex: '0 1 auto'
        },
        port: {
            flex: '1'
        },
        select: {
            margin: '7px 0px 0px 6px'
        },
        role: {
            margin: '9px 5px 0 5px',
            height: '20px'
        },
        list: {
            marginBottom: '15px'
        }
    };
    class VpcDetailed extends React.Component {
        constructor(props, context) {
            super(props, context);
            this.onAddRoute = i => {
                let vpc;
                if (this.state.changed) {
                    vpc = Object.assign({}, this.state.vpc);
                } else {
                    vpc = Object.assign({}, this.props.vpc);
                }
                let routes = [...(vpc.routes || [])];
                routes.splice(i + 1, 0, {});
                vpc.routes = routes;
                this.setState(Object.assign({}, this.state, { changed: true, message: '', vpc: vpc }));
            };
            this.onAddLinkUri = i => {
                let vpc;
                if (this.state.changed) {
                    vpc = Object.assign({}, this.state.vpc);
                } else {
                    vpc = Object.assign({}, this.props.vpc);
                }
                let linkUris = [...(vpc.link_uris || [])];
                if (!linkUris.length) {
                    linkUris = [''];
                }
                linkUris.splice(i + 1, 0, '');
                vpc.link_uris = linkUris;
                this.setState(Object.assign({}, this.state, { changed: true, message: '', vpc: vpc }));
            };
            this.onSave = () => {
                this.setState(Object.assign({}, this.state, { disabled: true }));
                VpcActions.commit(this.state.vpc).then(() => {
                    this.setState(Object.assign({}, this.state, { message: 'Your changes have been saved', changed: false, disabled: false }));
                    setTimeout(() => {
                        if (!this.state.changed) {
                            this.setState(Object.assign({}, this.state, { vpc: null, changed: false }));
                        }
                    }, 1000);
                    setTimeout(() => {
                        if (!this.state.changed) {
                            this.setState(Object.assign({}, this.state, { message: '' }));
                        }
                    }, 3000);
                }).catch(() => {
                    this.setState(Object.assign({}, this.state, { message: '', disabled: false }));
                });
            };
            this.onDelete = () => {
                this.setState(Object.assign({}, this.state, { disabled: true }));
                VpcActions.remove(this.props.vpc.id).then(() => {
                    this.setState(Object.assign({}, this.state, { disabled: false }));
                }).catch(() => {
                    this.setState(Object.assign({}, this.state, { disabled: false }));
                });
            };
            this.state = {
                disabled: false,
                changed: false,
                message: '',
                addNetworkRole: null,
                addVpc: null,
                vpc: null
            };
        }
        set(name, val) {
            let vpc;
            if (this.state.changed) {
                vpc = Object.assign({}, this.state.vpc);
            } else {
                vpc = Object.assign({}, this.props.vpc);
            }
            vpc[name] = val;
            this.setState(Object.assign({}, this.state, { changed: true, vpc: vpc }));
        }
        onChangeRoute(i, route) {
            let vpc;
            if (this.state.changed) {
                vpc = Object.assign({}, this.state.vpc);
            } else {
                vpc = Object.assign({}, this.props.vpc);
            }
            let routes = [...vpc.routes];
            routes[i] = route;
            vpc.routes = routes;
            this.setState(Object.assign({}, this.state, { changed: true, message: '', vpc: vpc }));
        }
        onRemoveRoute(i) {
            let vpc;
            if (this.state.changed) {
                vpc = Object.assign({}, this.state.vpc);
            } else {
                vpc = Object.assign({}, this.props.vpc);
            }
            let routes = [...vpc.routes];
            routes.splice(i, 1);
            vpc.routes = routes;
            this.setState(Object.assign({}, this.state, { changed: true, message: '', vpc: vpc }));
        }
        onChangeLinkUri(i, linkUri) {
            let vpc;
            if (this.state.changed) {
                vpc = Object.assign({}, this.state.vpc);
            } else {
                vpc = Object.assign({}, this.props.vpc);
            }
            let linkUris = [...(vpc.link_uris || [])];
            if (!linkUris.length) {
                linkUris = [''];
            }
            linkUris[i] = linkUri;
            vpc.link_uris = linkUris;
            this.setState(Object.assign({}, this.state, { changed: true, message: '', vpc: vpc }));
        }
        onRemoveLinkUri(i) {
            let vpc;
            if (this.state.changed) {
                vpc = Object.assign({}, this.state.vpc);
            } else {
                vpc = Object.assign({}, this.props.vpc);
            }
            let linkUris = [...(vpc.link_uris || [])];
            if (!linkUris.length) {
                linkUris = [''];
            }
            linkUris.splice(i, 1);
            vpc.link_uris = linkUris;
            this.setState(Object.assign({}, this.state, { changed: true, message: '', vpc: vpc }));
        }
        render() {
            let vpc = this.state.vpc || this.props.vpc;
            let datacenter = DatacentersStore_1.default.datacenter(vpc.datacenter);
            let datacenterName = datacenter ? datacenter.name : vpc.datacenter;
            let org = OrganizationsStore_1.default.organization(this.props.vpc.organization);
            let routes = [React.createElement(VpcRoute_1.default, { disabled: true, key: -1, route: {
                    destination: '0.0.0.0/0',
                    target: '0.0.0.0'
                }, onAdd: () => {
                    this.onAddRoute(-1);
                } })];
            if (vpc.routes) {
                for (let i = 0; i < vpc.routes.length; i++) {
                    let index = i;
                    routes.push(React.createElement(VpcRoute_1.default, { key: index, route: vpc.routes[index], onChange: state => {
                            this.onChangeRoute(index, state);
                        }, onAdd: () => {
                            this.onAddRoute(index);
                        }, onRemove: () => {
                            this.onRemoveRoute(index);
                        } }));
                }
            }
            let linkUris = [];
            if (vpc.link_uris) {
                for (let i = 0; i < vpc.link_uris.length; i++) {
                    let index = i;
                    linkUris.push(React.createElement(VpcLinkUri_1.default, { key: index, linkUri: vpc.link_uris[index], onChange: linkUri => {
                            this.onChangeLinkUri(index, linkUri);
                        }, onAdd: () => {
                            this.onAddLinkUri(index);
                        }, onRemove: () => {
                            this.onRemoveLinkUri(index);
                        } }));
                }
            }
            if (!linkUris.length) {
                linkUris.push(React.createElement(VpcLinkUri_1.default, { key: 0, linkUri: "", onChange: linkUri => {
                        this.onChangeLinkUri(0, linkUri);
                    }, onAdd: () => {
                        this.onAddLinkUri(0);
                    }, onRemove: () => {
                        this.onRemoveLinkUri(0);
                    } }));
            }
            let fields = [{
                label: 'ID',
                value: this.props.vpc.id || 'Unknown'
            }, {
                label: 'Datacenter',
                value: datacenterName
            }, {
                label: 'Organization',
                value: org ? org.name : this.props.vpc.organization
            }, {
                label: 'VLAN Number',
                value: this.props.vpc.vpc_id || 'Unknown'
            }, {
                label: 'Private IPv6 Network',
                value: this.props.vpc.network6 || 'Unknown',
                copy: true
            }];
            if (this.props.vpc.link_node) {
                fields.push({
                    label: 'Link Node',
                    value: this.props.vpc.link_node
                });
            }
            return React.createElement("td", { className: "bp3-cell", colSpan: 6, style: css.card }, React.createElement("div", { className: "layout horizontal wrap" }, React.createElement("div", { style: css.group }, React.createElement("div", { className: "layout horizontal", style: css.buttons, onClick: evt => {
                    let target = evt.target;
                    if (target.className.indexOf('open-ignore') !== -1) {
                        return;
                    }
                    this.props.onClose();
                } }, React.createElement("div", null, React.createElement("label", { className: "bp3-control bp3-checkbox open-ignore", style: css.select }, React.createElement("input", { type: "checkbox", className: "open-ignore", checked: this.props.selected, onClick: evt => {
                    this.props.onSelect(evt.shiftKey);
                } }), React.createElement("span", { className: "bp3-control-indicator open-ignore" }))), React.createElement("div", { className: "flex" }), React.createElement(ConfirmButton_1.default, { className: "bp3-minimal bp3-intent-danger bp3-icon-trash open-ignore", style: css.button, progressClassName: "bp3-intent-danger", confirmMsg: "Confirm vpc remove", disabled: this.state.disabled, onConfirm: this.onDelete })), React.createElement(PageInput_1.default, { label: "Name", help: "Name of vpc", type: "text", placeholder: "Enter name", value: vpc.name, onChange: val => {
                    this.set('name', val);
                } }), React.createElement(PageInput_1.default, { label: "Network", help: "Network address of vpc with cidr.", type: "text", placeholder: "Enter network", value: vpc.network, onChange: val => {
                    this.set('network', val);
                } }), React.createElement("label", { style: css.itemsLabel }, "Route Table", React.createElement(Help_1.default, { title: "Route Table", content: "VPC routing table, enter a CIDR network for the desitnation and IP address for taget." })), React.createElement("div", { style: css.list }, routes), React.createElement("label", { style: css.itemsLabel }, "Pritunl Link URIs", React.createElement(Help_1.default, { title: "Pritunl Link URIs", content: "Pritunl Link URIs for automated IPsec linking with a Pritunl server." })), React.createElement("div", { style: css.list }, linkUris)), React.createElement("div", { style: css.group }, React.createElement(PageInfo_1.default, { fields: fields }))), React.createElement(PageSave_1.default, { style: css.save, hidden: !this.state.vpc && !this.state.message, message: this.state.message, changed: this.state.changed, disabled: this.state.disabled, light: true, onCancel: () => {
                    this.setState(Object.assign({}, this.state, { changed: false, vpc: null }));
                }, onSave: this.onSave }));
        }
    }
    exports.default = VpcDetailed;
    
});
System.registerDynamic("app/components/Vpc.js", ["npm:react@16.7.0.js", "app/stores/OrganizationsStore.js", "app/stores/DatacentersStore.js", "app/components/VpcDetailed.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const OrganizationsStore_1 = $__require("app/stores/OrganizationsStore.js");
    const DatacentersStore_1 = $__require("app/stores/DatacentersStore.js");
    const VpcDetailed_1 = $__require("app/components/VpcDetailed.js");
    const css = {
        card: {
            display: 'table-row',
            width: '100%',
            padding: 0,
            boxShadow: 'none',
            cursor: 'pointer'
        },
        cardOpen: {
            display: 'table-row',
            width: '100%',
            padding: 0,
            boxShadow: 'none',
            position: 'relative'
        },
        select: {
            margin: '2px 0 0 0',
            paddingTop: '1px',
            minHeight: '18px'
        },
        name: {
            verticalAlign: 'top',
            display: 'table-cell',
            padding: '8px'
        },
        nameSpan: {
            margin: '1px 5px 0 0'
        },
        item: {
            verticalAlign: 'top',
            display: 'table-cell',
            padding: '9px',
            whiteSpace: 'nowrap'
        },
        icon: {
            marginRight: '3px'
        },
        bars: {
            verticalAlign: 'top',
            display: 'table-cell',
            padding: '8px',
            width: '30px'
        },
        bar: {
            height: '6px',
            marginBottom: '1px'
        },
        barLast: {
            height: '6px'
        },
        roles: {
            verticalAlign: 'top',
            display: 'table-cell',
            padding: '0 8px 8px 8px'
        },
        tag: {
            margin: '8px 5px 0 5px',
            height: '20px'
        }
    };
    class Vpc extends React.Component {
        render() {
            let vpc = this.props.vpc;
            if (this.props.open) {
                return React.createElement("div", { className: "bp3-card bp3-row", style: css.cardOpen }, React.createElement(VpcDetailed_1.default, { organizations: this.props.organizations, vpc: this.props.vpc, selected: this.props.selected, onSelect: this.props.onSelect, onClose: () => {
                        this.props.onOpen();
                    } }));
            }
            let active = true;
            let cardStyle = Object.assign({}, css.card);
            if (!active) {
                cardStyle.opacity = 0.6;
            }
            let orgName = '';
            if (vpc.organization) {
                let org = OrganizationsStore_1.default.organization(vpc.organization);
                orgName = org ? org.name : vpc.organization;
            } else {
                orgName = 'Unknown';
            }
            let datacenter = DatacentersStore_1.default.datacenter(vpc.datacenter);
            let datacenterName = datacenter ? datacenter.name : vpc.datacenter;
            return React.createElement("div", { className: "bp3-card bp3-row", style: cardStyle, onClick: evt => {
                    let target = evt.target;
                    if (target.className.indexOf('open-ignore') !== -1) {
                        return;
                    }
                    this.props.onOpen();
                } }, React.createElement("div", { className: "bp3-cell", style: css.name }, React.createElement("div", { className: "layout horizontal" }, React.createElement("label", { className: "bp3-control bp3-checkbox open-ignore", style: css.select }, React.createElement("input", { type: "checkbox", className: "open-ignore", checked: this.props.selected, onClick: evt => {
                    this.props.onSelect(evt.shiftKey);
                } }), React.createElement("span", { className: "bp3-control-indicator open-ignore" })), React.createElement("div", { style: css.nameSpan }, vpc.name))), React.createElement("div", { className: "bp3-cell", style: css.item }, React.createElement("span", { style: css.icon, className: 'bp3-icon-standard bp3-text-muted ' + (vpc.organization ? 'bp3-icon-people' : 'bp3-icon-layers') }), orgName), React.createElement("div", { className: "bp3-cell", style: css.item }, React.createElement("span", { style: css.icon, className: "bp3-icon-standard bp3-text-muted bp3-icon-cloud" }), datacenterName), React.createElement("div", { className: "bp3-cell", style: css.item }, React.createElement("span", { style: css.icon, className: "bp3-icon-standard bp3-text-muted bp3-icon-layout-auto" }), vpc.network));
        }
    }
    exports.default = Vpc;
    
});
System.registerDynamic("app/components/VpcsFilter.js", ["npm:react@16.7.0.js", "app/Constants.js", "app/components/SearchInput.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const Constants = $__require("app/Constants.js");
    const SearchInput_1 = $__require("app/components/SearchInput.js");
    const css = {
        filters: {
            margin: '-15px 0 5px 0'
        },
        input: {
            width: '200px',
            margin: '5px'
        },
        role: {
            width: '150px',
            margin: '5px'
        },
        type: {
            margin: '5px'
        },
        check: {
            margin: '12px 5px 8px 5px'
        }
    };
    class VpcsFilter extends React.Component {
        constructor(props, context) {
            super(props, context);
            this.state = {
                menu: false
            };
        }
        render() {
            if (this.props.filter === null) {
                return React.createElement("div", null);
            }
            let datacentersSelect = [React.createElement("option", { key: "key", value: "any" }, "Any")];
            if (this.props.datacenters && this.props.datacenters.length) {
                for (let datacenter of this.props.datacenters) {
                    datacentersSelect.push(React.createElement("option", { key: datacenter.id, value: datacenter.id }, datacenter.name));
                }
            }
            let organizationsSelect = [React.createElement("option", { key: "key", value: "any" }, "Any")];
            if (this.props.organizations && this.props.organizations.length) {
                for (let organization of this.props.organizations) {
                    organizationsSelect.push(React.createElement("option", { key: organization.id, value: organization.id }, organization.name));
                }
            }
            return React.createElement("div", { className: "layout horizontal wrap", style: css.filters }, React.createElement(SearchInput_1.default, { style: css.input, placeholder: "VPC ID", value: this.props.filter.id, onChange: val => {
                    let filter = Object.assign({}, this.props.filter);
                    if (val) {
                        filter.id = val;
                    } else {
                        delete filter.id;
                    }
                    this.props.onFilter(filter);
                } }), React.createElement(SearchInput_1.default, { style: css.input, placeholder: "Name", value: this.props.filter.name, onChange: val => {
                    let filter = Object.assign({}, this.props.filter);
                    if (val) {
                        filter.name = val;
                    } else {
                        delete filter.name;
                    }
                    this.props.onFilter(filter);
                } }), React.createElement(SearchInput_1.default, { style: css.role, placeholder: "Network", value: this.props.filter.network, onChange: val => {
                    let filter = Object.assign({}, this.props.filter);
                    if (val) {
                        filter.network = val;
                    } else {
                        delete filter.network;
                    }
                    this.props.onFilter(filter);
                } }), React.createElement("div", { className: "bp3-select", style: css.type }, React.createElement("select", { value: this.props.filter.datacenter || 'any', onChange: evt => {
                    let filter = Object.assign({}, this.props.filter);
                    let val = evt.target.value;
                    if (val === 'any') {
                        delete filter.datacenter;
                    } else {
                        filter.datacenter = val;
                    }
                    this.props.onFilter(filter);
                } }, datacentersSelect)), React.createElement("div", { className: "bp3-select", style: css.type, hidden: Constants.user }, React.createElement("select", { value: this.props.filter.organization || 'any', onChange: evt => {
                    let filter = Object.assign({}, this.props.filter);
                    let val = evt.target.value;
                    if (val === 'any') {
                        delete filter.organization;
                    } else {
                        filter.organization = val;
                    }
                    this.props.onFilter(filter);
                } }, organizationsSelect)));
        }
    }
    exports.default = VpcsFilter;
    
});
System.registerDynamic("app/components/VpcsPage.js", ["npm:react@16.7.0.js", "app/stores/VpcsStore.js", "app/actions/VpcActions.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const VpcsStore_1 = $__require("app/stores/VpcsStore.js");
    const VpcActions = $__require("app/actions/VpcActions.js");
    const css = {
        button: {
            userSelect: 'none',
            margin: '0 5px 0 0'
        },
        buttonLast: {
            userSelect: 'none',
            margin: '0 0 0 0'
        },
        link: {
            cursor: 'pointer',
            userSelect: 'none',
            margin: '7px 5px 0 0'
        },
        current: {
            opacity: 0.5
        }
    };
    class VpcsPage extends React.Component {
        constructor(props, context) {
            super(props, context);
            this.onChange = () => {
                this.setState(Object.assign({}, this.state, { page: VpcsStore_1.default.page, pageCount: VpcsStore_1.default.pageCount, pages: VpcsStore_1.default.pages, count: VpcsStore_1.default.count }));
            };
            this.state = {
                page: VpcsStore_1.default.page,
                pageCount: VpcsStore_1.default.pageCount,
                pages: VpcsStore_1.default.pages,
                count: VpcsStore_1.default.count
            };
        }
        componentDidMount() {
            VpcsStore_1.default.addChangeListener(this.onChange);
        }
        componentWillUnmount() {
            VpcsStore_1.default.removeChangeListener(this.onChange);
        }
        render() {
            let page = this.state.page;
            let pages = this.state.pages;
            if (pages <= 1) {
                return React.createElement("div", null);
            }
            let links = [];
            let start = Math.max(0, page - 7);
            let end = Math.min(pages, start + 15);
            for (let i = start; i < end; i++) {
                links.push(React.createElement("span", { key: i, style: page === i ? Object.assign({}, css.link, css.current) : css.link, onClick: () => {
                        VpcActions.traverse(i);
                        if (this.props.onPage) {
                            this.props.onPage();
                        }
                    } }, i + 1));
            }
            return React.createElement("div", { className: "layout horizontal center-justified" }, React.createElement("button", { className: "bp3-button bp3-minimal bp3-icon-chevron-backward", hidden: pages < 5, disabled: page === 0, type: "button", onClick: () => {
                    VpcActions.traverse(0);
                    if (this.props.onPage) {
                        this.props.onPage();
                    }
                } }), React.createElement("button", { className: "bp3-button bp3-minimal bp3-icon-chevron-left", style: css.button, disabled: page === 0, type: "button", onClick: () => {
                    VpcActions.traverse(Math.max(0, this.state.page - 1));
                    if (this.props.onPage) {
                        this.props.onPage();
                    }
                } }), links, React.createElement("button", { className: "bp3-button bp3-minimal bp3-icon-chevron-right", style: css.button, disabled: page === pages - 1, type: "button", onClick: () => {
                    VpcActions.traverse(Math.min(this.state.pages - 1, this.state.page + 1));
                    if (this.props.onPage) {
                        this.props.onPage();
                    }
                } }), React.createElement("button", { className: "bp3-button bp3-minimal bp3-icon-chevron-forward", hidden: pages < 5, disabled: page === pages - 1, type: "button", onClick: () => {
                    VpcActions.traverse(this.state.pages - 1);
                    if (this.props.onPage) {
                        this.props.onPage();
                    }
                } }));
        }
    }
    exports.default = VpcsPage;
    
});
System.registerDynamic("app/components/Vpcs.js", ["npm:react@16.7.0.js", "app/Constants.js", "app/stores/VpcsStore.js", "app/stores/OrganizationsStore.js", "app/actions/VpcActions.js", "app/actions/OrganizationActions.js", "app/components/Vpc.js", "app/components/VpcsFilter.js", "app/components/VpcsPage.js", "app/components/Page.js", "app/components/PageHeader.js", "app/components/NonState.js", "app/stores/DatacentersStore.js", "app/actions/DatacenterActions.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const Constants = $__require("app/Constants.js");
    const VpcsStore_1 = $__require("app/stores/VpcsStore.js");
    const OrganizationsStore_1 = $__require("app/stores/OrganizationsStore.js");
    const VpcActions = $__require("app/actions/VpcActions.js");
    const OrganizationActions = $__require("app/actions/OrganizationActions.js");
    const Vpc_1 = $__require("app/components/Vpc.js");
    const VpcsFilter_1 = $__require("app/components/VpcsFilter.js");
    const VpcsPage_1 = $__require("app/components/VpcsPage.js");
    const Page_1 = $__require("app/components/Page.js");
    const PageHeader_1 = $__require("app/components/PageHeader.js");
    const NonState_1 = $__require("app/components/NonState.js");
    const DatacentersStore_1 = $__require("app/stores/DatacentersStore.js");
    const DatacenterActions = $__require("app/actions/DatacenterActions.js");
    const css = {
        items: {
            width: '100%',
            marginTop: '-5px',
            display: 'table',
            borderSpacing: '0 5px'
        },
        itemsBox: {
            width: '100%',
            overflowY: 'auto'
        },
        group: {
            width: '100%'
        },
        groupBox: {
            margin: '16px 0 0 0',
            width: '100%',
            maxWidth: '420px'
        },
        groupBoxUser: {
            margin: '16px 0 0 0',
            width: '100%',
            maxWidth: '310px'
        },
        placeholder: {
            opacity: 0,
            width: '100%'
        },
        header: {
            marginTop: '-19px'
        },
        heading: {
            margin: '19px 0 0 0'
        },
        input: {
            width: '107px'
        },
        select: {
            width: '100%'
        },
        selectFirst: {
            width: '100%',
            borderTopLeftRadius: '3px',
            borderBottomLeftRadius: '3px'
        },
        selectInner: {
            width: '100%'
        },
        selectBox: {
            flex: '1'
        },
        button: {
            margin: '8px 0 0 8px'
        },
        buttons: {
            margin: '8px 8px 0 0'
        }
    };
    class Vpcs extends React.Component {
        constructor(props, context) {
            super(props, context);
            this.onChange = () => {
                let vpcs = VpcsStore_1.default.vpcs;
                let selected = {};
                let curSelected = this.state.selected;
                let opened = {};
                let curOpened = this.state.opened;
                vpcs.forEach(vpc => {
                    if (curSelected[vpc.id]) {
                        selected[vpc.id] = true;
                    }
                    if (curOpened[vpc.id]) {
                        opened[vpc.id] = true;
                    }
                });
                this.setState(Object.assign({}, this.state, { vpcs: vpcs, filter: VpcsStore_1.default.filter, datacenters: DatacentersStore_1.default.datacenters, organizations: OrganizationsStore_1.default.organizations, selected: selected, opened: opened }));
            };
            this.onDelete = () => {
                this.setState(Object.assign({}, this.state, { disabled: true }));
                VpcActions.removeMulti(Object.keys(this.state.selected)).then(() => {
                    this.setState(Object.assign({}, this.state, { selected: {}, disabled: false }));
                }).catch(() => {
                    this.setState(Object.assign({}, this.state, { disabled: false }));
                });
            };
            this.state = {
                vpcs: VpcsStore_1.default.vpcs,
                filter: VpcsStore_1.default.filter,
                datacenters: DatacentersStore_1.default.datacenters,
                organizations: OrganizationsStore_1.default.organizations,
                network: '',
                organization: '',
                datacenter: '',
                selected: {},
                opened: {},
                newOpened: false,
                lastSelected: null,
                disabled: false
            };
        }
        get selected() {
            return !!Object.keys(this.state.selected).length;
        }
        get opened() {
            return !!Object.keys(this.state.opened).length;
        }
        componentDidMount() {
            VpcsStore_1.default.addChangeListener(this.onChange);
            DatacentersStore_1.default.addChangeListener(this.onChange);
            OrganizationsStore_1.default.addChangeListener(this.onChange);
            VpcActions.sync();
            DatacenterActions.sync();
            OrganizationActions.sync();
        }
        componentWillUnmount() {
            VpcsStore_1.default.removeChangeListener(this.onChange);
            DatacentersStore_1.default.removeChangeListener(this.onChange);
            OrganizationsStore_1.default.removeChangeListener(this.onChange);
        }
        render() {
            let vpcsDom = [];
            let hasOrganizations = false;
            let organizationsSelect = [];
            if (this.state.organizations.length) {
                hasOrganizations = true;
                for (let organization of this.state.organizations) {
                    organizationsSelect.push(React.createElement("option", { key: organization.id, value: organization.id }, organization.name));
                }
            } else {
                organizationsSelect.push(React.createElement("option", { key: "null", value: "" }, "No Organizations"));
            }
            let hasDatacenters = false;
            let datacentersSelect = [];
            if (this.state.datacenters.length) {
                hasDatacenters = true;
                for (let datacenter of this.state.datacenters) {
                    datacentersSelect.push(React.createElement("option", { key: datacenter.id, value: datacenter.id }, datacenter.name));
                }
            } else {
                datacentersSelect.push(React.createElement("option", { key: "null", value: "" }, "No Datacenters"));
            }
            this.state.vpcs.forEach(vpc => {
                vpcsDom.push(React.createElement(Vpc_1.default, { key: vpc.id, vpc: vpc, organizations: this.state.organizations, selected: !!this.state.selected[vpc.id], open: !!this.state.opened[vpc.id], onSelect: shift => {
                        let selected = Object.assign({}, this.state.selected);
                        if (shift) {
                            let vpcs = this.state.vpcs;
                            let start;
                            let end;
                            for (let i = 0; i < vpcs.length; i++) {
                                let usr = vpcs[i];
                                if (usr.id === vpc.id) {
                                    start = i;
                                } else if (usr.id === this.state.lastSelected) {
                                    end = i;
                                }
                            }
                            if (start !== undefined && end !== undefined) {
                                if (start > end) {
                                    end = [start, start = end][0];
                                }
                                for (let i = start; i <= end; i++) {
                                    selected[vpcs[i].id] = true;
                                }
                                this.setState(Object.assign({}, this.state, { lastSelected: vpc.id, selected: selected }));
                                return;
                            }
                        }
                        if (selected[vpc.id]) {
                            delete selected[vpc.id];
                        } else {
                            selected[vpc.id] = true;
                        }
                        this.setState(Object.assign({}, this.state, { lastSelected: vpc.id, selected: selected }));
                    }, onOpen: () => {
                        let opened = Object.assign({}, this.state.opened);
                        if (opened[vpc.id]) {
                            delete opened[vpc.id];
                        } else {
                            opened[vpc.id] = true;
                        }
                        this.setState(Object.assign({}, this.state, { opened: opened }));
                    } }));
            });
            let filterClass = 'bp3-button bp3-intent-primary bp3-icon-filter ';
            if (this.state.filter) {
                filterClass += 'bp3-active';
            }
            return React.createElement(Page_1.default, null, React.createElement(PageHeader_1.default, null, React.createElement("div", { className: "layout horizontal wrap", style: css.header }, React.createElement("h2", { style: css.heading }, "VPCs"), React.createElement("div", { className: "flex" }), React.createElement("div", { style: css.buttons }, React.createElement("button", { className: filterClass, style: css.button, type: "button", onClick: () => {
                    if (this.state.filter === null) {
                        VpcActions.filter({});
                    } else {
                        VpcActions.filter(null);
                    }
                } }, "Filters")), React.createElement("div", { style: Constants.user ? css.groupBoxUser : css.groupBox }, React.createElement("div", { className: "bp3-control-group", style: css.group }, React.createElement("input", { className: "bp3-input", style: css.input, type: "text", disabled: !hasOrganizations || this.state.disabled, autoCapitalize: "off", spellCheck: false, placeholder: "Enter network", value: this.state.network, onChange: evt => {
                    this.setState(Object.assign({}, this.state, { network: evt.target.value }));
                } }), React.createElement("div", { style: css.selectBox, hidden: Constants.user }, React.createElement("div", { className: "bp3-select", style: css.selectFirst }, React.createElement("select", { style: css.selectInner, disabled: !hasOrganizations || this.state.disabled, value: this.state.organization, onChange: evt => {
                    this.setState(Object.assign({}, this.state, { organization: evt.target.value }));
                } }, organizationsSelect))), React.createElement("div", { style: css.selectBox }, React.createElement("div", { className: "bp3-select", style: css.select }, React.createElement("select", { style: css.selectInner, disabled: !hasDatacenters || this.state.disabled, value: this.state.datacenter, onChange: evt => {
                    this.setState(Object.assign({}, this.state, { datacenter: evt.target.value }));
                } }, datacentersSelect))), React.createElement("button", { className: "bp3-button bp3-intent-success bp3-icon-add", disabled: !hasDatacenters || !hasOrganizations || this.state.disabled, type: "button", onClick: () => {
                    this.setState(Object.assign({}, this.state, { disabled: true }));
                    VpcActions.create({
                        id: null,
                        network: this.state.network,
                        organization: this.state.organization || this.state.organizations[0].id,
                        datacenter: this.state.datacenter || this.state.datacenters[0].id
                    }).then(() => {
                        this.setState(Object.assign({}, this.state, { network: '', disabled: false }));
                    }).catch(() => {
                        this.setState(Object.assign({}, this.state, { disabled: false }));
                    });
                } }, "New"))))), React.createElement(VpcsFilter_1.default, { filter: this.state.filter, onFilter: filter => {
                    VpcActions.filter(filter);
                }, organizations: this.state.organizations, datacenters: this.state.datacenters }), React.createElement("div", { style: css.itemsBox }, React.createElement("div", { style: css.items }, vpcsDom, React.createElement("tr", { className: "bp3-card bp3-row", style: css.placeholder }, React.createElement("td", { colSpan: 6, style: css.placeholder })))), React.createElement(NonState_1.default, { hidden: !!vpcsDom.length, iconClass: "bp3-icon-layout-auto", title: "No vpcs", description: "Add a new vpc to get started." }), React.createElement(VpcsPage_1.default, { onPage: () => {
                    this.setState({
                        lastSelected: null
                    });
                } }));
        }
    }
    exports.default = Vpcs;
    
});
System.registerDynamic("app/components/DomainDetailed.js", ["npm:react@16.7.0.js", "app/actions/DomainActions.js", "app/stores/OrganizationsStore.js", "app/components/PageInput.js", "app/components/PageInfo.js", "app/components/PageSave.js", "app/components/ConfirmButton.js", "app/components/PageSelect.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const DomainActions = $__require("app/actions/DomainActions.js");
    const OrganizationsStore_1 = $__require("app/stores/OrganizationsStore.js");
    const PageInput_1 = $__require("app/components/PageInput.js");
    const PageInfo_1 = $__require("app/components/PageInfo.js");
    const PageSave_1 = $__require("app/components/PageSave.js");
    const ConfirmButton_1 = $__require("app/components/ConfirmButton.js");
    const PageSelect_1 = $__require("app/components/PageSelect.js");
    const css = {
        card: {
            position: 'relative',
            padding: '48px 10px 0 10px',
            width: '100%'
        },
        button: {
            height: '30px'
        },
        buttons: {
            cursor: 'pointer',
            position: 'absolute',
            top: 0,
            left: 0,
            right: 0,
            padding: '4px',
            height: '39px',
            backgroundColor: 'rgba(0, 0, 0, 0.13)'
        },
        item: {
            margin: '9px 5px 0 5px',
            height: '20px'
        },
        itemsLabel: {
            display: 'block'
        },
        itemsAdd: {
            margin: '8px 0 15px 0'
        },
        group: {
            flex: 1,
            minWidth: '280px',
            margin: '0 10px'
        },
        save: {
            paddingBottom: '10px'
        },
        label: {
            width: '100%',
            maxWidth: '280px'
        },
        status: {
            margin: '6px 0 0 1px'
        },
        icon: {
            marginRight: '3px'
        },
        inputGroup: {
            width: '100%'
        },
        protocol: {
            flex: '0 1 auto'
        },
        port: {
            flex: '1'
        },
        select: {
            margin: '7px 0px 0px 6px'
        },
        role: {
            margin: '9px 5px 0 5px',
            height: '20px'
        },
        rules: {
            marginBottom: '15px'
        }
    };
    class DomainDetailed extends React.Component {
        constructor(props, context) {
            super(props, context);
            this.onSave = () => {
                this.setState(Object.assign({}, this.state, { disabled: true }));
                DomainActions.commit(this.state.domain).then(() => {
                    this.setState(Object.assign({}, this.state, { message: 'Your changes have been saved', changed: false, disabled: false }));
                    setTimeout(() => {
                        if (!this.state.changed) {
                            this.setState(Object.assign({}, this.state, { domain: null, changed: false }));
                        }
                    }, 1000);
                    setTimeout(() => {
                        if (!this.state.changed) {
                            this.setState(Object.assign({}, this.state, { message: '' }));
                        }
                    }, 3000);
                }).catch(() => {
                    this.setState(Object.assign({}, this.state, { message: '', disabled: false }));
                });
            };
            this.onDelete = () => {
                this.setState(Object.assign({}, this.state, { disabled: true }));
                DomainActions.remove(this.props.domain.id).then(() => {
                    this.setState(Object.assign({}, this.state, { disabled: false }));
                }).catch(() => {
                    this.setState(Object.assign({}, this.state, { disabled: false }));
                });
            };
            this.state = {
                disabled: false,
                changed: false,
                message: '',
                domain: null
            };
        }
        set(name, val) {
            let domain;
            if (this.state.changed) {
                domain = Object.assign({}, this.state.domain);
            } else {
                domain = Object.assign({}, this.props.domain);
            }
            domain[name] = val;
            this.setState(Object.assign({}, this.state, { changed: true, domain: domain }));
        }
        render() {
            let domain = this.state.domain || this.props.domain;
            let org = OrganizationsStore_1.default.organization(this.props.domain.organization);
            return React.createElement("td", { className: "bp3-cell", colSpan: 5, style: css.card }, React.createElement("div", { className: "layout horizontal wrap" }, React.createElement("div", { style: css.group }, React.createElement("div", { className: "layout horizontal", style: css.buttons, onClick: evt => {
                    let target = evt.target;
                    if (target.className.indexOf('open-ignore') !== -1) {
                        return;
                    }
                    this.props.onClose();
                } }, React.createElement("div", null, React.createElement("label", { className: "bp3-control bp3-checkbox open-ignore", style: css.select }, React.createElement("input", { type: "checkbox", className: "open-ignore", checked: this.props.selected, onClick: evt => {
                    this.props.onSelect(evt.shiftKey);
                } }), React.createElement("span", { className: "bp3-control-indicator open-ignore" }))), React.createElement("div", { className: "flex" }), React.createElement(ConfirmButton_1.default, { className: "bp3-minimal bp3-intent-danger bp3-icon-trash open-ignore", style: css.button, progressClassName: "bp3-intent-danger", confirmMsg: "Confirm domain remove", disabled: this.state.disabled, onConfirm: this.onDelete })), React.createElement(PageInput_1.default, { label: "Domain", help: "Domain name.", type: "text", placeholder: "Enter domain", value: domain.name, onChange: val => {
                    this.set('name', val);
                } }), React.createElement(PageSelect_1.default, { label: "Type", help: "Domain type.", value: domain.type, onChange: val => {
                    this.set('type', val);
                } }, React.createElement("option", { value: "" }, "Select Type"), React.createElement("option", { value: "route_53" }, "AWS Route53")), React.createElement(PageInput_1.default, { hidden: domain.type !== 'route_53', label: "AWS Access Key ID", help: "AWS access key ID.", type: "text", placeholder: "Enter access key ID", value: domain.aws_id, onChange: val => {
                    this.set('aws_id', val);
                } }), React.createElement(PageInput_1.default, { hidden: domain.type !== 'route_53', label: "AWS Secret Access Key", help: "AWS secret access key.", type: "text", placeholder: "Enter secret access key", value: domain.aws_secret, onChange: val => {
                    this.set('aws_secret', val);
                } })), React.createElement("div", { style: css.group }, React.createElement(PageInfo_1.default, { fields: [{
                    label: 'ID',
                    value: this.props.domain.id || 'Unknown'
                }, {
                    label: 'Organization',
                    value: org ? org.name : this.props.domain.organization
                }] }))), React.createElement(PageSave_1.default, { style: css.save, hidden: !this.state.domain && !this.state.message, message: this.state.message, changed: this.state.changed, disabled: this.state.disabled, light: true, onCancel: () => {
                    this.setState(Object.assign({}, this.state, { changed: false, domain: null }));
                }, onSave: this.onSave }));
        }
    }
    exports.default = DomainDetailed;
    
});
System.registerDynamic("app/components/Domain.js", ["npm:react@16.7.0.js", "app/stores/OrganizationsStore.js", "app/components/DomainDetailed.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const OrganizationsStore_1 = $__require("app/stores/OrganizationsStore.js");
    const DomainDetailed_1 = $__require("app/components/DomainDetailed.js");
    const css = {
        card: {
            display: 'table-row',
            width: '100%',
            padding: 0,
            boxShadow: 'none',
            cursor: 'pointer'
        },
        cardOpen: {
            display: 'table-row',
            width: '100%',
            padding: 0,
            boxShadow: 'none',
            position: 'relative'
        },
        select: {
            margin: '2px 0 0 0',
            paddingTop: '1px',
            minHeight: '18px'
        },
        name: {
            verticalAlign: 'top',
            display: 'table-cell',
            padding: '8px'
        },
        nameSpan: {
            margin: '1px 5px 0 0'
        },
        item: {
            verticalAlign: 'top',
            display: 'table-cell',
            padding: '9px',
            whiteSpace: 'nowrap'
        },
        icon: {
            marginRight: '3px'
        },
        bars: {
            verticalAlign: 'top',
            display: 'table-cell',
            padding: '8px',
            width: '30px'
        },
        bar: {
            height: '6px',
            marginBottom: '1px'
        },
        barLast: {
            height: '6px'
        },
        roles: {
            verticalAlign: 'top',
            display: 'table-cell',
            padding: '0 8px 8px 8px'
        },
        tag: {
            margin: '8px 5px 0 5px',
            height: '20px'
        }
    };
    class Domain extends React.Component {
        render() {
            let domain = this.props.domain;
            if (this.props.open) {
                return React.createElement("div", { className: "bp3-card bp3-row", style: css.cardOpen }, React.createElement(DomainDetailed_1.default, { organizations: this.props.organizations, domain: this.props.domain, selected: this.props.selected, onSelect: this.props.onSelect, onClose: () => {
                        this.props.onOpen();
                    } }));
            }
            let active = true;
            let cardStyle = Object.assign({}, css.card);
            if (!active) {
                cardStyle.opacity = 0.6;
            }
            let orgName = '';
            if (domain.organization) {
                let org = OrganizationsStore_1.default.organization(domain.organization);
                orgName = org ? org.name : domain.organization;
            } else {
                orgName = 'Node Domain';
            }
            return React.createElement("div", { className: "bp3-card bp3-row", style: cardStyle, onClick: evt => {
                    let target = evt.target;
                    if (target.className.indexOf('open-ignore') !== -1) {
                        return;
                    }
                    this.props.onOpen();
                } }, React.createElement("div", { className: "bp3-cell", style: css.name }, React.createElement("div", { className: "layout horizontal" }, React.createElement("label", { className: "bp3-control bp3-checkbox open-ignore", style: css.select }, React.createElement("input", { type: "checkbox", className: "open-ignore", checked: this.props.selected, onClick: evt => {
                    this.props.onSelect(evt.shiftKey);
                } }), React.createElement("span", { className: "bp3-control-indicator open-ignore" })), React.createElement("div", { style: css.nameSpan }, domain.name))), React.createElement("div", { className: "bp3-cell", style: css.item }, React.createElement("span", { style: css.icon, className: 'bp3-icon-standard bp3-text-muted ' + (domain.organization ? 'bp3-icon-people' : 'bp3-icon-layers') }), orgName));
        }
    }
    exports.default = Domain;
    
});
System.registerDynamic("app/components/DomainsFilter.js", ["npm:react@16.7.0.js", "app/Constants.js", "app/components/SearchInput.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const Constants = $__require("app/Constants.js");
    const SearchInput_1 = $__require("app/components/SearchInput.js");
    const css = {
        filters: {
            margin: '-15px 0 5px 0'
        },
        input: {
            width: '200px',
            margin: '5px'
        },
        role: {
            width: '150px',
            margin: '5px'
        },
        type: {
            margin: '5px'
        },
        check: {
            margin: '12px 5px 8px 5px'
        }
    };
    class DomainsFilter extends React.Component {
        constructor(props, context) {
            super(props, context);
            this.state = {
                menu: false
            };
        }
        render() {
            if (this.props.filter === null) {
                return React.createElement("div", null);
            }
            let organizationsSelect = [React.createElement("option", { key: "key", value: "any" }, "Any")];
            if (this.props.organizations && this.props.organizations.length) {
                for (let organization of this.props.organizations) {
                    organizationsSelect.push(React.createElement("option", { key: organization.id, value: organization.id }, organization.name));
                }
            }
            return React.createElement("div", { className: "layout horizontal wrap", style: css.filters }, React.createElement(SearchInput_1.default, { style: css.input, placeholder: "Domain ID", value: this.props.filter.id, onChange: val => {
                    let filter = Object.assign({}, this.props.filter);
                    if (val) {
                        filter.id = val;
                    } else {
                        delete filter.id;
                    }
                    this.props.onFilter(filter);
                } }), React.createElement(SearchInput_1.default, { style: css.input, placeholder: "Name", value: this.props.filter.name, onChange: val => {
                    let filter = Object.assign({}, this.props.filter);
                    if (val) {
                        filter.name = val;
                    } else {
                        delete filter.name;
                    }
                    this.props.onFilter(filter);
                } }), React.createElement("div", { className: "bp3-select", style: css.type, hidden: Constants.user }, React.createElement("select", { value: this.props.filter.organization || 'any', onChange: evt => {
                    let filter = Object.assign({}, this.props.filter);
                    let val = evt.target.value;
                    if (val === 'any') {
                        delete filter.organization;
                    } else {
                        filter.organization = val;
                    }
                    this.props.onFilter(filter);
                } }, organizationsSelect)));
        }
    }
    exports.default = DomainsFilter;
    
});
System.registerDynamic("app/components/DomainsPage.js", ["npm:react@16.7.0.js", "app/stores/DomainsStore.js", "app/actions/DomainActions.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const DomainsStore_1 = $__require("app/stores/DomainsStore.js");
    const DomainActions = $__require("app/actions/DomainActions.js");
    const css = {
        button: {
            userSelect: 'none',
            margin: '0 5px 0 0'
        },
        buttonLast: {
            userSelect: 'none',
            margin: '0 0 0 0'
        },
        link: {
            cursor: 'pointer',
            userSelect: 'none',
            margin: '7px 5px 0 0'
        },
        current: {
            opacity: 0.5
        }
    };
    class DomainsPage extends React.Component {
        constructor(props, context) {
            super(props, context);
            this.onChange = () => {
                this.setState(Object.assign({}, this.state, { page: DomainsStore_1.default.page, pageCount: DomainsStore_1.default.pageCount, pages: DomainsStore_1.default.pages, count: DomainsStore_1.default.count }));
            };
            this.state = {
                page: DomainsStore_1.default.page,
                pageCount: DomainsStore_1.default.pageCount,
                pages: DomainsStore_1.default.pages,
                count: DomainsStore_1.default.count
            };
        }
        componentDidMount() {
            DomainsStore_1.default.addChangeListener(this.onChange);
        }
        componentWillUnmount() {
            DomainsStore_1.default.removeChangeListener(this.onChange);
        }
        render() {
            let page = this.state.page;
            let pages = this.state.pages;
            if (pages <= 1) {
                return React.createElement("div", null);
            }
            let links = [];
            let start = Math.max(0, page - 7);
            let end = Math.min(pages, start + 15);
            for (let i = start; i < end; i++) {
                links.push(React.createElement("span", { key: i, style: page === i ? Object.assign({}, css.link, css.current) : css.link, onClick: () => {
                        DomainActions.traverse(i);
                        if (this.props.onPage) {
                            this.props.onPage();
                        }
                    } }, i + 1));
            }
            return React.createElement("div", { className: "layout horizontal center-justified" }, React.createElement("button", { className: "bp3-button bp3-minimal bp3-icon-chevron-backward", hidden: pages < 5, disabled: page === 0, type: "button", onClick: () => {
                    DomainActions.traverse(0);
                    if (this.props.onPage) {
                        this.props.onPage();
                    }
                } }), React.createElement("button", { className: "bp3-button bp3-minimal bp3-icon-chevron-left", style: css.button, disabled: page === 0, type: "button", onClick: () => {
                    DomainActions.traverse(Math.max(0, this.state.page - 1));
                    if (this.props.onPage) {
                        this.props.onPage();
                    }
                } }), links, React.createElement("button", { className: "bp3-button bp3-minimal bp3-icon-chevron-right", style: css.button, disabled: page === pages - 1, type: "button", onClick: () => {
                    DomainActions.traverse(Math.min(this.state.pages - 1, this.state.page + 1));
                    if (this.props.onPage) {
                        this.props.onPage();
                    }
                } }), React.createElement("button", { className: "bp3-button bp3-minimal bp3-icon-chevron-forward", hidden: pages < 5, disabled: page === pages - 1, type: "button", onClick: () => {
                    DomainActions.traverse(this.state.pages - 1);
                    if (this.props.onPage) {
                        this.props.onPage();
                    }
                } }));
        }
    }
    exports.default = DomainsPage;
    
});
System.registerDynamic("app/components/Domains.js", ["npm:react@16.7.0.js", "app/Constants.js", "app/stores/DomainsStore.js", "app/stores/OrganizationsStore.js", "app/actions/DomainActions.js", "app/actions/OrganizationActions.js", "app/components/Domain.js", "app/components/DomainsFilter.js", "app/components/DomainsPage.js", "app/components/Page.js", "app/components/PageHeader.js", "app/components/NonState.js", "app/components/ConfirmButton.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const Constants = $__require("app/Constants.js");
    const DomainsStore_1 = $__require("app/stores/DomainsStore.js");
    const OrganizationsStore_1 = $__require("app/stores/OrganizationsStore.js");
    const DomainActions = $__require("app/actions/DomainActions.js");
    const OrganizationActions = $__require("app/actions/OrganizationActions.js");
    const Domain_1 = $__require("app/components/Domain.js");
    const DomainsFilter_1 = $__require("app/components/DomainsFilter.js");
    const DomainsPage_1 = $__require("app/components/DomainsPage.js");
    const Page_1 = $__require("app/components/Page.js");
    const PageHeader_1 = $__require("app/components/PageHeader.js");
    const NonState_1 = $__require("app/components/NonState.js");
    const ConfirmButton_1 = $__require("app/components/ConfirmButton.js");
    const css = {
        items: {
            width: '100%',
            marginTop: '-5px',
            display: 'table',
            borderSpacing: '0 5px'
        },
        itemsBox: {
            width: '100%',
            overflowY: 'auto'
        },
        group: {
            width: '100%'
        },
        groupBox: {
            margin: '16px 0 0 8px',
            width: '100%',
            maxWidth: '200px'
        },
        placeholder: {
            opacity: 0,
            width: '100%'
        },
        header: {
            marginTop: '-19px'
        },
        heading: {
            margin: '19px 0 0 0'
        },
        selectFirst: {
            width: '100%',
            borderTopLeftRadius: '3px',
            borderBottomLeftRadius: '3px'
        },
        selectInner: {
            width: '100%'
        },
        selectBox: {
            flex: '1'
        },
        button: {
            margin: '8px 0 0 8px'
        },
        buttons: {
            marginTop: '8px'
        }
    };
    class Domains extends React.Component {
        constructor(props, context) {
            super(props, context);
            this.onChange = () => {
                let domains = DomainsStore_1.default.domains;
                let selected = {};
                let curSelected = this.state.selected;
                let opened = {};
                let curOpened = this.state.opened;
                domains.forEach(domain => {
                    if (curSelected[domain.id]) {
                        selected[domain.id] = true;
                    }
                    if (curOpened[domain.id]) {
                        opened[domain.id] = true;
                    }
                });
                this.setState(Object.assign({}, this.state, { domains: domains, filter: DomainsStore_1.default.filter, organizations: OrganizationsStore_1.default.organizations, selected: selected, opened: opened }));
            };
            this.onDelete = () => {
                this.setState(Object.assign({}, this.state, { disabled: true }));
                DomainActions.removeMulti(Object.keys(this.state.selected)).then(() => {
                    this.setState(Object.assign({}, this.state, { selected: {}, disabled: false }));
                }).catch(() => {
                    this.setState(Object.assign({}, this.state, { disabled: false }));
                });
            };
            this.state = {
                domains: DomainsStore_1.default.domains,
                filter: DomainsStore_1.default.filter,
                organizations: OrganizationsStore_1.default.organizations,
                organization: '',
                selected: {},
                opened: {},
                newOpened: false,
                lastSelected: null,
                disabled: false
            };
        }
        get selected() {
            return !!Object.keys(this.state.selected).length;
        }
        get opened() {
            return !!Object.keys(this.state.opened).length;
        }
        componentDidMount() {
            DomainsStore_1.default.addChangeListener(this.onChange);
            OrganizationsStore_1.default.addChangeListener(this.onChange);
            DomainActions.sync();
            OrganizationActions.sync();
        }
        componentWillUnmount() {
            DomainsStore_1.default.removeChangeListener(this.onChange);
            OrganizationsStore_1.default.removeChangeListener(this.onChange);
        }
        render() {
            let domainsDom = [];
            let hasOrganizations = false;
            let organizationsSelect = [];
            if (this.state.organizations.length) {
                hasOrganizations = true;
                for (let organization of this.state.organizations) {
                    organizationsSelect.push(React.createElement("option", { key: organization.id, value: organization.id }, organization.name));
                }
            } else {
                organizationsSelect.push(React.createElement("option", { key: "null", value: "" }, "No Organizations"));
            }
            this.state.domains.forEach(domain => {
                domainsDom.push(React.createElement(Domain_1.default, { key: domain.id, domain: domain, organizations: this.state.organizations, selected: !!this.state.selected[domain.id], open: !!this.state.opened[domain.id], onSelect: shift => {
                        let selected = Object.assign({}, this.state.selected);
                        if (shift) {
                            let domains = this.state.domains;
                            let start;
                            let end;
                            for (let i = 0; i < domains.length; i++) {
                                let usr = domains[i];
                                if (usr.id === domain.id) {
                                    start = i;
                                } else if (usr.id === this.state.lastSelected) {
                                    end = i;
                                }
                            }
                            if (start !== undefined && end !== undefined) {
                                if (start > end) {
                                    end = [start, start = end][0];
                                }
                                for (let i = start; i <= end; i++) {
                                    selected[domains[i].id] = true;
                                }
                                this.setState(Object.assign({}, this.state, { lastSelected: domain.id, selected: selected }));
                                return;
                            }
                        }
                        if (selected[domain.id]) {
                            delete selected[domain.id];
                        } else {
                            selected[domain.id] = true;
                        }
                        this.setState(Object.assign({}, this.state, { lastSelected: domain.id, selected: selected }));
                    }, onOpen: () => {
                        let opened = Object.assign({}, this.state.opened);
                        if (opened[domain.id]) {
                            delete opened[domain.id];
                        } else {
                            opened[domain.id] = true;
                        }
                        this.setState(Object.assign({}, this.state, { opened: opened }));
                    } }));
            });
            let filterClass = 'bp3-button bp3-intent-primary bp3-icon-filter ';
            if (this.state.filter) {
                filterClass += 'bp3-active';
            }
            return React.createElement(Page_1.default, null, React.createElement(PageHeader_1.default, null, React.createElement("div", { className: "layout horizontal wrap", style: css.header }, React.createElement("h2", { style: css.heading }, "Domains"), React.createElement("div", { className: "flex" }), React.createElement("div", { style: css.buttons }, React.createElement("button", { className: filterClass, style: css.button, type: "button", onClick: () => {
                    if (this.state.filter === null) {
                        DomainActions.filter({});
                    } else {
                        DomainActions.filter(null);
                    }
                } }, "Filters"), React.createElement("button", { className: "bp3-button bp3-intent-warning bp3-icon-chevron-up", style: css.button, disabled: !this.opened, type: "button", onClick: () => {
                    this.setState(Object.assign({}, this.state, { opened: {} }));
                } }, "Collapse All"), React.createElement("button", { className: "bp3-button bp3-intent-success bp3-icon-add", hidden: !Constants.user, disabled: this.state.disabled, style: css.button, type: "button", onClick: () => {
                    this.setState(Object.assign({}, this.state, { disabled: true }));
                    DomainActions.create({
                        id: null
                    }).then(() => {
                        this.setState(Object.assign({}, this.state, { disabled: false }));
                    }).catch(() => {
                        this.setState(Object.assign({}, this.state, { disabled: false }));
                    });
                } }, "New"), React.createElement(ConfirmButton_1.default, { label: "Delete Selected", className: "bp3-intent-danger bp3-icon-delete", progressClassName: "bp3-intent-danger", style: css.button, disabled: !this.selected || this.state.disabled, onConfirm: this.onDelete })), React.createElement("div", { style: css.groupBox, hidden: Constants.user }, React.createElement("div", { className: "bp3-control-group", style: css.group }, React.createElement("div", { style: css.selectBox }, React.createElement("div", { className: "bp3-select", style: css.selectFirst }, React.createElement("select", { style: css.selectInner, disabled: !hasOrganizations || this.state.disabled, value: this.state.organization, onChange: evt => {
                    this.setState(Object.assign({}, this.state, { organization: evt.target.value }));
                } }, organizationsSelect))), React.createElement("button", { className: "bp3-button bp3-intent-success bp3-icon-add", disabled: !hasOrganizations || this.state.disabled, type: "button", onClick: () => {
                    this.setState(Object.assign({}, this.state, { disabled: true }));
                    DomainActions.create({
                        id: null,
                        organization: this.state.organization || this.state.organizations[0].id
                    }).then(() => {
                        this.setState(Object.assign({}, this.state, { disabled: false }));
                    }).catch(() => {
                        this.setState(Object.assign({}, this.state, { disabled: false }));
                    });
                } }, "New"))))), React.createElement(DomainsFilter_1.default, { filter: this.state.filter, onFilter: filter => {
                    DomainActions.filter(filter);
                }, organizations: this.state.organizations }), React.createElement("div", { style: css.itemsBox }, React.createElement("div", { style: css.items }, domainsDom, React.createElement("tr", { className: "bp3-card bp3-row", style: css.placeholder }, React.createElement("td", { colSpan: 5, style: css.placeholder })))), React.createElement(NonState_1.default, { hidden: !!domainsDom.length, iconClass: "bp3-icon-map-marker", title: "No domains", description: "Add a new domain to get started." }), React.createElement(DomainsPage_1.default, { onPage: () => {
                    this.setState({
                        lastSelected: null
                    });
                } }));
        }
    }
    exports.default = Domains;
    
});
System.registerDynamic("app/components/Storage.js", ["npm:react@16.7.0.js", "app/actions/StorageActions.js", "app/components/PageInput.js", "app/components/PageInfo.js", "app/components/PageSave.js", "app/components/PageSelect.js", "app/components/PageSwitch.js", "app/components/ConfirmButton.js", "app/Alert.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const StorageActions = $__require("app/actions/StorageActions.js");
    const PageInput_1 = $__require("app/components/PageInput.js");
    const PageInfo_1 = $__require("app/components/PageInfo.js");
    const PageSave_1 = $__require("app/components/PageSave.js");
    const PageSelect_1 = $__require("app/components/PageSelect.js");
    const PageSwitch_1 = $__require("app/components/PageSwitch.js");
    const ConfirmButton_1 = $__require("app/components/ConfirmButton.js");
    const Alert = $__require("app/Alert.js");
    const css = {
        card: {
            position: 'relative',
            padding: '10px 10px 0 10px',
            marginBottom: '5px'
        },
        remove: {
            position: 'absolute',
            top: '5px',
            right: '5px'
        },
        item: {
            margin: '9px 5px 0 5px',
            height: '20px'
        },
        itemsLabel: {
            display: 'block'
        },
        itemsAdd: {
            margin: '8px 0 15px 0'
        },
        group: {
            flex: 1,
            minWidth: '280px',
            margin: '0 10px'
        },
        save: {
            paddingBottom: '10px'
        },
        label: {
            width: '100%',
            maxWidth: '280px'
        },
        inputGroup: {
            width: '100%'
        },
        protocol: {
            flex: '0 1 auto'
        },
        port: {
            flex: '1'
        },
        controlButton: {
            marginRight: '10px'
        }
    };
    class Storage extends React.Component {
        constructor(props, context) {
            super(props, context);
            this.onSave = () => {
                this.setState(Object.assign({}, this.state, { disabled: true }));
                StorageActions.commit(this.state.storage).then(() => {
                    this.setState(Object.assign({}, this.state, { message: 'Your changes have been saved', changed: false, disabled: false }));
                    setTimeout(() => {
                        if (!this.state.changed) {
                            this.setState(Object.assign({}, this.state, { message: '', changed: false, storage: null }));
                        }
                    }, 3000);
                }).catch(() => {
                    this.setState(Object.assign({}, this.state, { message: '', disabled: false }));
                });
            };
            this.onSync = () => {
                this.setState(Object.assign({}, this.state, { disabled: true }));
                StorageActions.commit(this.props.storage).then(() => {
                    this.setState(Object.assign({}, this.state, { disabled: false }));
                    Alert.success('Storage sync started');
                }).catch(() => {
                    this.setState(Object.assign({}, this.state, { disabled: false }));
                });
            };
            this.onDelete = () => {
                this.setState(Object.assign({}, this.state, { disabled: true }));
                StorageActions.remove(this.props.storage.id).then(() => {
                    this.setState(Object.assign({}, this.state, { disabled: false }));
                }).catch(() => {
                    this.setState(Object.assign({}, this.state, { disabled: false }));
                });
            };
            this.state = {
                disabled: false,
                changed: false,
                message: '',
                storage: null
            };
        }
        set(name, val) {
            let storage;
            if (this.state.changed) {
                storage = Object.assign({}, this.state.storage);
            } else {
                storage = Object.assign({}, this.props.storage);
            }
            storage[name] = val;
            this.setState(Object.assign({}, this.state, { changed: true, storage: storage }));
        }
        render() {
            let storage = this.state.storage || this.props.storage;
            return React.createElement("div", { className: "bp3-card", style: css.card }, React.createElement("div", { className: "layout horizontal wrap" }, React.createElement("div", { style: css.group }, React.createElement("div", { style: css.remove }, React.createElement(ConfirmButton_1.default, { className: "bp3-minimal bp3-intent-danger bp3-icon-trash", progressClassName: "bp3-intent-danger", confirmMsg: "Confirm storage remove", disabled: this.state.disabled, onConfirm: this.onDelete })), React.createElement(PageInput_1.default, { disabled: this.state.disabled, label: "Name", help: "Name of storage", type: "text", placeholder: "Enter name", value: storage.name, onChange: val => {
                    this.set('name', val);
                } }), React.createElement(PageInput_1.default, { disabled: this.state.disabled, label: "Endpoint", help: "Storage endpoint domain and port", type: "text", placeholder: "Enter endpoint", value: storage.endpoint, onChange: val => {
                    this.set('endpoint', val);
                } }), React.createElement(PageInput_1.default, { disabled: this.state.disabled, label: "Bucket", help: "Storage bucket name", type: "text", placeholder: "Enter bucket", value: storage.bucket, onChange: val => {
                    this.set('bucket', val);
                } }), React.createElement(PageSelect_1.default, { disabled: this.state.disabled, label: "Type", help: "Select public for read only storages with virtual machine images. Select private for read-write storages for snapshots.", value: storage.type, onChange: val => {
                    this.set('type', val);
                } }, React.createElement("option", { value: "public" }, "Public"), React.createElement("option", { value: "private" }, "Private"))), React.createElement("div", { style: css.group }, React.createElement(PageInfo_1.default, { fields: [{
                    label: 'ID',
                    value: this.props.storage.id || 'None'
                }] }), React.createElement(PageInput_1.default, { disabled: this.state.disabled, label: "Access Key", help: "Storage access key", type: "text", placeholder: "Enter access key", value: storage.access_key, onChange: val => {
                    this.set('access_key', val);
                } }), React.createElement(PageInput_1.default, { disabled: this.state.disabled, label: "Secret Key", help: "Storage secret key", type: "text", placeholder: "Enter secret key", value: storage.secret_key, onChange: val => {
                    this.set('secret_key', val);
                } }), React.createElement(PageSwitch_1.default, { label: "SSL Connection", help: "Use secure SSL connection.", disabled: this.state.disabled, checked: !storage.insecure, onToggle: () => {
                    this.set('insecure', !storage.insecure);
                } }))), React.createElement(PageSave_1.default, { style: css.save, hidden: !this.state.storage, message: this.state.message, changed: this.state.changed, disabled: this.state.disabled, light: true, onCancel: () => {
                    this.setState(Object.assign({}, this.state, { changed: false, storage: null }));
                }, onSave: this.onSave }, React.createElement(ConfirmButton_1.default, { label: "Sync", className: "bp3-intent-success bp3-icon-refresh", progressClassName: "bp3-intent-success", style: css.controlButton, disabled: this.state.disabled, onConfirm: () => {
                    this.onSync();
                } })));
        }
    }
    exports.default = Storage;
    
});
System.registerDynamic("app/components/Storages.js", ["npm:react@16.7.0.js", "app/stores/StoragesStore.js", "app/actions/StorageActions.js", "app/components/NonState.js", "app/components/Storage.js", "app/components/Page.js", "app/components/PageHeader.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const StoragesStore_1 = $__require("app/stores/StoragesStore.js");
    const StorageActions = $__require("app/actions/StorageActions.js");
    const NonState_1 = $__require("app/components/NonState.js");
    const Storage_1 = $__require("app/components/Storage.js");
    const Page_1 = $__require("app/components/Page.js");
    const PageHeader_1 = $__require("app/components/PageHeader.js");
    const css = {
        header: {
            marginTop: '-19px'
        },
        heading: {
            margin: '19px 0 0 0'
        },
        button: {
            margin: '8px 0 0 8px'
        },
        buttons: {
            marginTop: '8px'
        },
        noCerts: {
            height: 'auto'
        }
    };
    class Storages extends React.Component {
        constructor(props, context) {
            super(props, context);
            this.onChange = () => {
                this.setState(Object.assign({}, this.state, { storages: StoragesStore_1.default.storages }));
            };
            this.state = {
                storages: StoragesStore_1.default.storages,
                disabled: false
            };
        }
        componentDidMount() {
            StoragesStore_1.default.addChangeListener(this.onChange);
            StorageActions.sync();
        }
        componentWillUnmount() {
            StoragesStore_1.default.removeChangeListener(this.onChange);
        }
        render() {
            let storagesDom = [];
            this.state.storages.forEach(storage => {
                storagesDom.push(React.createElement(Storage_1.default, { key: storage.id, storage: storage }));
            });
            return React.createElement(Page_1.default, null, React.createElement(PageHeader_1.default, null, React.createElement("div", { className: "layout horizontal wrap", style: css.header }, React.createElement("h2", { style: css.heading }, "Storages"), React.createElement("div", { className: "flex" }), React.createElement("div", { style: css.buttons }, React.createElement("button", { className: "bp3-button bp3-intent-success bp3-icon-add", style: css.button, disabled: this.state.disabled, type: "button", onClick: () => {
                    this.setState(Object.assign({}, this.state, { disabled: true }));
                    StorageActions.create(null).then(() => {
                        this.setState(Object.assign({}, this.state, { disabled: false }));
                    }).catch(() => {
                        this.setState(Object.assign({}, this.state, { disabled: false }));
                    });
                } }, "New")))), React.createElement("div", null, storagesDom), React.createElement(NonState_1.default, { hidden: !!storagesDom.length, iconClass: "bp3-icon-database", title: "No storages", description: "Add a new storage to get started." }));
        }
    }
    exports.default = Storages;
    
});
System.registerDynamic("app/stores/StoragesStore.js", ["app/dispatcher/Dispatcher.js", "app/EventEmitter.js", "app/types/StorageTypes.js", "app/types/GlobalTypes.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const Dispatcher_1 = $__require("app/dispatcher/Dispatcher.js");
    const EventEmitter_1 = $__require("app/EventEmitter.js");
    const StorageTypes = $__require("app/types/StorageTypes.js");
    const GlobalTypes = $__require("app/types/GlobalTypes.js");
    class StoragesStore extends EventEmitter_1.default {
        constructor() {
            super(...arguments);
            this._storages = Object.freeze([]);
            this._map = {};
            this._token = Dispatcher_1.default.register(this._callback.bind(this));
        }
        _reset() {
            this._storages = Object.freeze([]);
            this._map = {};
            this.emitChange();
        }
        get storages() {
            return this._storages;
        }
        get storagesM() {
            let storages = [];
            this._storages.forEach(storage => {
                storages.push(Object.assign({}, storage));
            });
            return storages;
        }
        storage(id) {
            let i = this._map[id];
            if (i === undefined) {
                return null;
            }
            return this._storages[i];
        }
        emitChange() {
            this.emitDefer(GlobalTypes.CHANGE);
        }
        addChangeListener(callback) {
            this.on(GlobalTypes.CHANGE, callback);
        }
        removeChangeListener(callback) {
            this.removeListener(GlobalTypes.CHANGE, callback);
        }
        _sync(storages) {
            this._map = {};
            for (let i = 0; i < storages.length; i++) {
                storages[i] = Object.freeze(storages[i]);
                this._map[storages[i].id] = i;
            }
            this._storages = Object.freeze(storages);
            this.emitChange();
        }
        _callback(action) {
            switch (action.type) {
                case GlobalTypes.RESET:
                    this._reset();
                    break;
                case StorageTypes.SYNC:
                    this._sync(action.data.storages);
                    break;
            }
        }
    }
    exports.default = new StoragesStore();
    
});
System.registerDynamic("app/components/ImageDetailed.js", ["npm:react@16.7.0.js", "app/actions/ImageActions.js", "app/utils/MiscUtils.js", "app/stores/OrganizationsStore.js", "app/stores/StoragesStore.js", "app/components/PageInput.js", "app/components/PageInfo.js", "app/components/PageSave.js", "app/components/ConfirmButton.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const ImageActions = $__require("app/actions/ImageActions.js");
    const MiscUtils = $__require("app/utils/MiscUtils.js");
    const OrganizationsStore_1 = $__require("app/stores/OrganizationsStore.js");
    const StoragesStore_1 = $__require("app/stores/StoragesStore.js");
    const PageInput_1 = $__require("app/components/PageInput.js");
    const PageInfo_1 = $__require("app/components/PageInfo.js");
    const PageSave_1 = $__require("app/components/PageSave.js");
    const ConfirmButton_1 = $__require("app/components/ConfirmButton.js");
    const css = {
        card: {
            position: 'relative',
            padding: '48px 10px 0 10px',
            width: '100%'
        },
        button: {
            height: '30px'
        },
        buttons: {
            cursor: 'pointer',
            position: 'absolute',
            top: 0,
            left: 0,
            right: 0,
            padding: '4px',
            height: '39px',
            backgroundColor: 'rgba(0, 0, 0, 0.13)'
        },
        item: {
            margin: '9px 5px 0 5px',
            height: '20px'
        },
        itemsLabel: {
            display: 'block'
        },
        itemsAdd: {
            margin: '8px 0 15px 0'
        },
        group: {
            flex: 1,
            minWidth: '280px',
            margin: '0 10px'
        },
        save: {
            paddingBottom: '10px'
        },
        label: {
            width: '100%',
            maxWidth: '280px'
        },
        status: {
            margin: '6px 0 0 1px'
        },
        icon: {
            marginRight: '3px'
        },
        inputGroup: {
            width: '100%'
        },
        protocol: {
            flex: '0 1 auto'
        },
        port: {
            flex: '1'
        },
        select: {
            margin: '7px 0px 0px 6px'
        }
    };
    class ImageDetailed extends React.Component {
        constructor(props, context) {
            super(props, context);
            this.onSave = () => {
                this.setState(Object.assign({}, this.state, { disabled: true }));
                ImageActions.commit(this.state.image).then(() => {
                    this.setState(Object.assign({}, this.state, { message: 'Your changes have been saved', changed: false, disabled: false }));
                    setTimeout(() => {
                        if (!this.state.changed) {
                            this.setState(Object.assign({}, this.state, { image: null, changed: false }));
                        }
                    }, 1000);
                    setTimeout(() => {
                        if (!this.state.changed) {
                            this.setState(Object.assign({}, this.state, { message: '' }));
                        }
                    }, 3000);
                }).catch(() => {
                    this.setState(Object.assign({}, this.state, { message: '', disabled: false }));
                });
            };
            this.onDelete = () => {
                this.setState(Object.assign({}, this.state, { disabled: true }));
                ImageActions.remove(this.props.image.id).then(() => {
                    this.setState(Object.assign({}, this.state, { disabled: false }));
                }).catch(() => {
                    this.setState(Object.assign({}, this.state, { disabled: false }));
                });
            };
            this.state = {
                disabled: false,
                changed: false,
                message: '',
                image: null
            };
        }
        set(name, val) {
            let image;
            if (this.state.changed) {
                image = Object.assign({}, this.state.image);
            } else {
                image = Object.assign({}, this.props.image);
            }
            image[name] = val;
            this.setState(Object.assign({}, this.state, { changed: true, image: image }));
        }
        render() {
            let image = this.state.image || this.props.image;
            let org = OrganizationsStore_1.default.organization(this.props.image.organization);
            let store = StoragesStore_1.default.storage(this.props.image.storage);
            let imgType = image.type;
            if (imgType) {
                imgType = imgType.charAt(0).toUpperCase() + imgType.slice(1);
            }
            let orgName = '';
            if (image.organization) {
                orgName = org ? org.name : image.organization;
            } else {
                orgName = 'Public Image';
            }
            if (image.signed) {
                orgName = 'Signed Public Image';
            }
            let storageClass = 'Default';
            switch (this.props.image.storage_class) {
                case 'aws_standard':
                    storageClass = 'AWS Standard';
                    break;
                case 'aws_infrequent_access':
                    storageClass = 'AWS Standard-IA';
                    break;
                case 'aws_glacier':
                    storageClass = 'AWS Glacier';
                    break;
                case 'oracle_standard':
                    storageClass = 'Oracle Standard';
                    break;
                case 'oracle_archive':
                    storageClass = 'Oracle Archive';
                    break;
            }
            return React.createElement("td", { className: "bp3-cell", colSpan: 5, style: css.card }, React.createElement("div", { className: "layout horizontal wrap" }, React.createElement("div", { style: css.group }, React.createElement("div", { className: "layout horizontal", style: css.buttons, onClick: evt => {
                    let target = evt.target;
                    if (target.className.indexOf('open-ignore') !== -1) {
                        return;
                    }
                    this.props.onClose();
                } }, React.createElement("div", null, React.createElement("label", { className: "bp3-control bp3-checkbox open-ignore", style: css.select }, React.createElement("input", { type: "checkbox", className: "open-ignore", checked: this.props.selected, onClick: evt => {
                    this.props.onSelect(evt.shiftKey);
                } }), React.createElement("span", { className: "bp3-control-indicator open-ignore" }))), React.createElement("div", { className: "flex" }), React.createElement(ConfirmButton_1.default, { className: "bp3-minimal bp3-intent-danger bp3-icon-trash open-ignore", style: css.button, progressClassName: "bp3-intent-danger", confirmMsg: "Confirm image remove", disabled: this.props.image.type === 'public' || this.state.disabled, onConfirm: this.onDelete })), React.createElement(PageInput_1.default, { label: "Name", help: "Name of image", type: "text", placeholder: "Enter name", value: image.name, onChange: val => {
                    this.set('name', val);
                } })), React.createElement("div", { style: css.group }, React.createElement(PageInfo_1.default, { fields: [{
                    label: 'ID',
                    value: this.props.image.id || 'Unknown'
                }, {
                    label: 'Storage',
                    value: store ? store.name : this.props.image.storage || 'Unknown'
                }, {
                    label: 'Organization',
                    value: orgName
                }, {
                    label: 'Type',
                    value: imgType || 'Unknown'
                }, {
                    label: 'Key',
                    value: this.props.image.key || 'Unknown'
                }, {
                    label: 'Storage Class',
                    value: storageClass
                }, {
                    label: 'Last Modified',
                    value: MiscUtils.formatDate(this.props.image.last_modified) || 'Unknown'
                }, {
                    label: 'ETag',
                    value: this.props.image.etag || 'Unknown'
                }] }))), React.createElement(PageSave_1.default, { style: css.save, hidden: !this.state.image && !this.state.message, message: this.state.message, changed: this.state.changed, disabled: this.state.disabled, light: true, onCancel: () => {
                    this.setState(Object.assign({}, this.state, { changed: false, image: null }));
                }, onSave: this.onSave }));
        }
    }
    exports.default = ImageDetailed;
    
});
System.registerDynamic("app/components/Image.js", ["npm:react@16.7.0.js", "app/components/ImageDetailed.js", "app/stores/OrganizationsStore.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const ImageDetailed_1 = $__require("app/components/ImageDetailed.js");
    const OrganizationsStore_1 = $__require("app/stores/OrganizationsStore.js");
    const css = {
        card: {
            display: 'table-row',
            width: '100%',
            padding: 0,
            boxShadow: 'none',
            cursor: 'pointer'
        },
        cardOpen: {
            display: 'table-row',
            width: '100%',
            padding: 0,
            boxShadow: 'none',
            position: 'relative'
        },
        select: {
            margin: '2px 0 0 0',
            paddingTop: '1px',
            minHeight: '18px'
        },
        name: {
            verticalAlign: 'top',
            display: 'table-cell',
            padding: '8px'
        },
        nameSpan: {
            margin: '1px 5px 0 0'
        },
        item: {
            verticalAlign: 'top',
            display: 'table-cell',
            padding: '9px',
            whiteSpace: 'nowrap'
        },
        icon: {
            marginRight: '3px'
        },
        bars: {
            verticalAlign: 'top',
            display: 'table-cell',
            padding: '8px',
            width: '30px'
        },
        bar: {
            height: '6px',
            marginBottom: '1px'
        },
        barLast: {
            height: '6px'
        }
    };
    class Image extends React.Component {
        render() {
            let image = this.props.image;
            if (this.props.open) {
                return React.createElement("div", { className: "bp3-card bp3-row", style: css.cardOpen }, React.createElement(ImageDetailed_1.default, { image: this.props.image, selected: this.props.selected, onSelect: this.props.onSelect, onClose: () => {
                        this.props.onOpen();
                    } }));
            }
            let active = true;
            let cardStyle = Object.assign({}, css.card);
            if (!active) {
                cardStyle.opacity = 0.6;
            }
            let orgClass = '';
            let orgIcon = '';
            let orgName = '';
            if (image.organization) {
                let org = OrganizationsStore_1.default.organization(image.organization);
                orgIcon = 'bp3-text-muted bp3-icon-people';
                orgName = org ? org.name : image.organization;
            } else {
                orgIcon = 'bp3-text-muted bp3-icon-globe';
                orgName = 'Public Image';
            }
            if (image.signed) {
                orgClass = 'bp3-text-intent-success';
                orgIcon = 'bp3-icon-endorsed';
                orgName = 'Signed Public Image';
            }
            let diskIcon = 'bp3-icon-box';
            switch (this.props.image.storage_class) {
                case 'aws_standard':
                    diskIcon = 'bp3-icon-box';
                    break;
                case 'aws_infrequent_access':
                    diskIcon = 'bp3-icon-compressed';
                    break;
                case 'aws_glacier':
                    diskIcon = 'bp3-icon-snowflake';
                    break;
                case 'oracle_standard':
                    diskIcon = 'bp3-icon-box';
                    break;
                case 'oracle_archive':
                    diskIcon = 'bp3-icon-snowflake';
                    break;
            }
            return React.createElement("div", { className: "bp3-card bp3-row", style: cardStyle, onClick: evt => {
                    let target = evt.target;
                    if (target.className.indexOf('open-ignore') !== -1) {
                        return;
                    }
                    this.props.onOpen();
                } }, React.createElement("div", { className: "bp3-cell", style: css.name }, React.createElement("div", { className: "layout horizontal" }, React.createElement("label", { className: "bp3-control bp3-checkbox open-ignore", style: css.select }, React.createElement("input", { type: "checkbox", className: "open-ignore", checked: this.props.selected, onClick: evt => {
                    this.props.onSelect(evt.shiftKey);
                } }), React.createElement("span", { className: "bp3-control-indicator open-ignore" })), React.createElement("div", { style: css.nameSpan }, image.name))), React.createElement("div", { className: 'bp3-cell ' + orgClass, style: css.item }, React.createElement("span", { style: css.icon, className: 'bp3-icon-standard ' + orgIcon }), orgName), React.createElement("div", { className: "bp3-cell", style: css.item }, React.createElement("span", { style: css.icon, hidden: !image.key, className: 'bp3-icon-standard bp3-text-muted ' + diskIcon }), image.key));
        }
    }
    exports.default = Image;
    
});
System.registerDynamic("app/components/ImagesFilter.js", ["npm:react@16.7.0.js", "app/Constants.js", "app/components/SearchInput.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const Constants = $__require("app/Constants.js");
    const SearchInput_1 = $__require("app/components/SearchInput.js");
    const css = {
        filters: {
            margin: '-15px 0 5px 0'
        },
        input: {
            width: '200px',
            margin: '5px'
        },
        role: {
            width: '150px',
            margin: '5px'
        },
        type: {
            margin: '5px'
        },
        check: {
            margin: '12px 5px 8px 5px'
        }
    };
    class ImagesFilter extends React.Component {
        constructor(props, context) {
            super(props, context);
            this.state = {
                menu: false
            };
        }
        render() {
            if (this.props.filter === null) {
                return React.createElement("div", null);
            }
            let organizationsSelect = [React.createElement("option", { key: "key", value: "any" }, "Any")];
            if (this.props.organizations && this.props.organizations.length) {
                for (let organization of this.props.organizations) {
                    organizationsSelect.push(React.createElement("option", { key: organization.id, value: organization.id }, organization.name));
                }
            }
            return React.createElement("div", { className: "layout horizontal wrap", style: css.filters }, React.createElement(SearchInput_1.default, { style: css.input, placeholder: "Image ID", value: this.props.filter.id, onChange: val => {
                    let filter = Object.assign({}, this.props.filter);
                    if (val) {
                        filter.id = val;
                    } else {
                        delete filter.id;
                    }
                    this.props.onFilter(filter);
                } }), React.createElement(SearchInput_1.default, { style: css.input, placeholder: "Name", value: this.props.filter.name, onChange: val => {
                    let filter = Object.assign({}, this.props.filter);
                    if (val) {
                        filter.name = val;
                    } else {
                        delete filter.name;
                    }
                    this.props.onFilter(filter);
                } }), React.createElement("div", { className: "bp3-select", style: css.type }, React.createElement("select", { value: this.props.filter.type || 'any', onChange: evt => {
                    let filter = Object.assign({}, this.props.filter);
                    let val = evt.target.value;
                    if (val === 'any') {
                        delete filter.type;
                    } else {
                        filter.type = val;
                    }
                    this.props.onFilter(filter);
                } }, React.createElement("option", { value: "any" }, "Any"), React.createElement("option", { value: "private" }, "Private"), React.createElement("option", { value: "public" }, "Public"))), React.createElement("div", { className: "bp3-select", style: css.type, hidden: Constants.user }, React.createElement("select", { value: this.props.filter.organization || 'any', onChange: evt => {
                    let filter = Object.assign({}, this.props.filter);
                    let val = evt.target.value;
                    if (val === 'any') {
                        delete filter.organization;
                    } else {
                        filter.organization = val;
                    }
                    this.props.onFilter(filter);
                } }, organizationsSelect)));
        }
    }
    exports.default = ImagesFilter;
    
});
System.registerDynamic("app/components/ImagesPage.js", ["npm:react@16.7.0.js", "app/stores/ImagesStore.js", "app/actions/ImageActions.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const ImagesStore_1 = $__require("app/stores/ImagesStore.js");
    const ImageActions = $__require("app/actions/ImageActions.js");
    const css = {
        button: {
            userSelect: 'none',
            margin: '0 5px 0 0'
        },
        buttonLast: {
            userSelect: 'none',
            margin: '0 0 0 0'
        },
        link: {
            cursor: 'pointer',
            userSelect: 'none',
            margin: '7px 5px 0 0'
        },
        current: {
            opacity: 0.5
        }
    };
    class ImagesPage extends React.Component {
        constructor(props, context) {
            super(props, context);
            this.onChange = () => {
                this.setState(Object.assign({}, this.state, { page: ImagesStore_1.default.page, pageCount: ImagesStore_1.default.pageCount, pages: ImagesStore_1.default.pages, count: ImagesStore_1.default.count }));
            };
            this.state = {
                page: ImagesStore_1.default.page,
                pageCount: ImagesStore_1.default.pageCount,
                pages: ImagesStore_1.default.pages,
                count: ImagesStore_1.default.count
            };
        }
        componentDidMount() {
            ImagesStore_1.default.addChangeListener(this.onChange);
        }
        componentWillUnmount() {
            ImagesStore_1.default.removeChangeListener(this.onChange);
        }
        render() {
            let page = this.state.page;
            let pages = this.state.pages;
            if (pages <= 1) {
                return React.createElement("div", null);
            }
            let links = [];
            let start = Math.max(0, page - 7);
            let end = Math.min(pages, start + 15);
            for (let i = start; i < end; i++) {
                links.push(React.createElement("span", { key: i, style: page === i ? Object.assign({}, css.link, css.current) : css.link, onClick: () => {
                        ImageActions.traverse(i);
                        if (this.props.onPage) {
                            this.props.onPage();
                        }
                    } }, i + 1));
            }
            return React.createElement("div", { className: "layout horizontal center-justified" }, React.createElement("button", { className: "bp3-button bp3-minimal bp3-icon-chevron-backward", hidden: pages < 5, disabled: page === 0, type: "button", onClick: () => {
                    ImageActions.traverse(0);
                    if (this.props.onPage) {
                        this.props.onPage();
                    }
                } }), React.createElement("button", { className: "bp3-button bp3-minimal bp3-icon-chevron-left", style: css.button, disabled: page === 0, type: "button", onClick: () => {
                    ImageActions.traverse(Math.max(0, this.state.page - 1));
                    if (this.props.onPage) {
                        this.props.onPage();
                    }
                } }), links, React.createElement("button", { className: "bp3-button bp3-minimal bp3-icon-chevron-right", style: css.button, disabled: page === pages - 1, type: "button", onClick: () => {
                    ImageActions.traverse(Math.min(this.state.pages - 1, this.state.page + 1));
                    if (this.props.onPage) {
                        this.props.onPage();
                    }
                } }), React.createElement("button", { className: "bp3-button bp3-minimal bp3-icon-chevron-forward", hidden: pages < 5, disabled: page === pages - 1, type: "button", onClick: () => {
                    ImageActions.traverse(this.state.pages - 1);
                    if (this.props.onPage) {
                        this.props.onPage();
                    }
                } }));
        }
    }
    exports.default = ImagesPage;
    
});
System.registerDynamic("app/components/Images.js", ["npm:react@16.7.0.js", "app/stores/ImagesStore.js", "app/stores/OrganizationsStore.js", "app/actions/ImageActions.js", "app/actions/OrganizationActions.js", "app/components/Image.js", "app/components/ImagesFilter.js", "app/components/ImagesPage.js", "app/components/Page.js", "app/components/PageHeader.js", "app/components/NonState.js", "app/components/ConfirmButton.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const ImagesStore_1 = $__require("app/stores/ImagesStore.js");
    const OrganizationsStore_1 = $__require("app/stores/OrganizationsStore.js");
    const ImageActions = $__require("app/actions/ImageActions.js");
    const OrganizationActions = $__require("app/actions/OrganizationActions.js");
    const Image_1 = $__require("app/components/Image.js");
    const ImagesFilter_1 = $__require("app/components/ImagesFilter.js");
    const ImagesPage_1 = $__require("app/components/ImagesPage.js");
    const Page_1 = $__require("app/components/Page.js");
    const PageHeader_1 = $__require("app/components/PageHeader.js");
    const NonState_1 = $__require("app/components/NonState.js");
    const ConfirmButton_1 = $__require("app/components/ConfirmButton.js");
    const css = {
        items: {
            width: '100%',
            marginTop: '-5px',
            display: 'table',
            borderSpacing: '0 5px'
        },
        itemsBox: {
            width: '100%',
            overflowY: 'auto'
        },
        placeholder: {
            opacity: 0,
            width: '100%'
        },
        header: {
            marginTop: '-19px'
        },
        heading: {
            margin: '19px 0 0 0'
        },
        button: {
            margin: '8px 0 0 8px'
        },
        buttons: {
            marginTop: '8px'
        }
    };
    class Images extends React.Component {
        constructor(props, context) {
            super(props, context);
            this.onChange = () => {
                let images = ImagesStore_1.default.images;
                let selected = {};
                let curSelected = this.state.selected;
                let opened = {};
                let curOpened = this.state.opened;
                images.forEach(image => {
                    if (curSelected[image.id]) {
                        selected[image.id] = true;
                    }
                    if (curOpened[image.id]) {
                        opened[image.id] = true;
                    }
                });
                this.setState(Object.assign({}, this.state, { images: images, filter: ImagesStore_1.default.filter, organizations: OrganizationsStore_1.default.organizations, selected: selected, opened: opened }));
            };
            this.onDelete = () => {
                this.setState(Object.assign({}, this.state, { disabled: true }));
                ImageActions.removeMulti(Object.keys(this.state.selected)).then(() => {
                    this.setState(Object.assign({}, this.state, { selected: {}, disabled: false }));
                }).catch(() => {
                    this.setState(Object.assign({}, this.state, { disabled: false }));
                });
            };
            this.state = {
                images: ImagesStore_1.default.images,
                filter: ImagesStore_1.default.filter,
                organizations: OrganizationsStore_1.default.organizations,
                selected: {},
                opened: {},
                newOpened: false,
                lastSelected: null,
                disabled: false
            };
        }
        get selected() {
            return !!Object.keys(this.state.selected).length;
        }
        get opened() {
            return !!Object.keys(this.state.opened).length;
        }
        componentDidMount() {
            ImagesStore_1.default.addChangeListener(this.onChange);
            OrganizationsStore_1.default.addChangeListener(this.onChange);
            ImageActions.sync();
            OrganizationActions.sync();
        }
        componentWillUnmount() {
            ImagesStore_1.default.removeChangeListener(this.onChange);
            OrganizationsStore_1.default.removeChangeListener(this.onChange);
        }
        render() {
            let imagesDom = [];
            this.state.images.forEach(image => {
                imagesDom.push(React.createElement(Image_1.default, { key: image.id, image: image, selected: !!this.state.selected[image.id], open: !!this.state.opened[image.id], onSelect: shift => {
                        let selected = Object.assign({}, this.state.selected);
                        if (shift) {
                            let images = this.state.images;
                            let start;
                            let end;
                            for (let i = 0; i < images.length; i++) {
                                let usr = images[i];
                                if (usr.id === image.id) {
                                    start = i;
                                } else if (usr.id === this.state.lastSelected) {
                                    end = i;
                                }
                            }
                            if (start !== undefined && end !== undefined) {
                                if (start > end) {
                                    end = [start, start = end][0];
                                }
                                for (let i = start; i <= end; i++) {
                                    selected[images[i].id] = true;
                                }
                                this.setState(Object.assign({}, this.state, { lastSelected: image.id, selected: selected }));
                                return;
                            }
                        }
                        if (selected[image.id]) {
                            delete selected[image.id];
                        } else {
                            selected[image.id] = true;
                        }
                        this.setState(Object.assign({}, this.state, { lastSelected: image.id, selected: selected }));
                    }, onOpen: () => {
                        let opened = Object.assign({}, this.state.opened);
                        if (opened[image.id]) {
                            delete opened[image.id];
                        } else {
                            opened[image.id] = true;
                        }
                        this.setState(Object.assign({}, this.state, { opened: opened }));
                    } }));
            });
            let filterClass = 'bp3-button bp3-intent-primary bp3-icon-filter ';
            if (this.state.filter) {
                filterClass += 'bp3-active';
            }
            return React.createElement(Page_1.default, null, React.createElement(PageHeader_1.default, null, React.createElement("div", { className: "layout horizontal wrap", style: css.header }, React.createElement("h2", { style: css.heading }, "Images"), React.createElement("div", { className: "flex" }), React.createElement("div", { style: css.buttons }, React.createElement("button", { className: filterClass, style: css.button, type: "button", onClick: () => {
                    if (this.state.filter === null) {
                        ImageActions.filter({});
                    } else {
                        ImageActions.filter(null);
                    }
                } }, "Filters"), React.createElement("button", { className: "bp3-button bp3-intent-warning bp3-icon-chevron-up", style: css.button, disabled: !this.opened, type: "button", onClick: () => {
                    this.setState(Object.assign({}, this.state, { opened: {} }));
                } }, "Collapse All"), React.createElement(ConfirmButton_1.default, { label: "Delete Selected", className: "bp3-intent-danger bp3-icon-delete", progressClassName: "bp3-intent-danger", style: css.button, disabled: !this.selected || this.state.disabled, onConfirm: this.onDelete })))), React.createElement(ImagesFilter_1.default, { filter: this.state.filter, onFilter: filter => {
                    ImageActions.filter(filter);
                }, organizations: this.state.organizations }), React.createElement("div", { style: css.itemsBox }, React.createElement("div", { style: css.items }, imagesDom, React.createElement("tr", { className: "bp3-card bp3-row", style: css.placeholder }, React.createElement("td", { colSpan: 5, style: css.placeholder })))), React.createElement(NonState_1.default, { hidden: !!imagesDom.length, iconClass: "bp3-icon-compressed", title: "No images", description: "Add a new image to get started." }), React.createElement(ImagesPage_1.default, { onPage: () => {
                    this.setState({
                        lastSelected: null
                    });
                } }));
        }
    }
    exports.default = Images;
    
});
System.registerDynamic("app/components/PageSelectButtonConfirm.js", ["npm:react@16.7.0.js", "app/components/ConfirmButton.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const ConfirmButton_1 = $__require("app/components/ConfirmButton.js");
    const css = {
        group: {
            marginBottom: '15px',
            width: '100%',
            maxWidth: '280px'
        },
        select: {
            width: '100%',
            borderTopLeftRadius: '3px',
            borderBottomLeftRadius: '3px'
        },
        selectInner: {
            width: '100%'
        },
        selectBox: {
            flex: '1'
        }
    };
    class PageSelectButton extends React.Component {
        render() {
            let buttonClass = 'bp3-button';
            if (this.props.buttonClass) {
                buttonClass += ' ' + this.props.buttonClass;
            }
            return React.createElement("div", { className: "bp3-control-group", style: css.group, hidden: this.props.hidden }, React.createElement("div", { style: css.selectBox }, React.createElement("div", { className: "bp3-select", style: css.select }, React.createElement("select", { style: css.selectInner, disabled: this.props.disabled, value: this.props.value || '', onChange: evt => {
                    this.props.onChange(evt.target.value);
                } }, this.props.children))), React.createElement(ConfirmButton_1.default, { label: this.props.label, className: buttonClass, progressClassName: this.props.progressClassName, confirmMsg: this.props.confirmMsg, disabled: this.props.disabled, onConfirm: this.props.onSubmit }));
        }
    }
    exports.default = PageSelectButton;
    
});
System.registerDynamic("app/components/DiskDetailed.js", ["npm:react@16.7.0.js", "app/actions/DiskActions.js", "app/components/PageInput.js", "app/components/PageSelect.js", "app/components/PageSwitch.js", "app/components/PageNumInput.js", "app/components/PageInfo.js", "app/components/PageSelectButtonConfirm.js", "app/components/Help.js", "app/components/PageSave.js", "app/components/ConfirmButton.js", "app/stores/NodesStore.js", "app/stores/OrganizationsStore.js", "app/actions/InstanceActions.js", "app/stores/InstancesNodeStore.js", "app/Alert.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const DiskActions = $__require("app/actions/DiskActions.js");
    const PageInput_1 = $__require("app/components/PageInput.js");
    const PageSelect_1 = $__require("app/components/PageSelect.js");
    const PageSwitch_1 = $__require("app/components/PageSwitch.js");
    const PageNumInput_1 = $__require("app/components/PageNumInput.js");
    const PageInfo_1 = $__require("app/components/PageInfo.js");
    const PageSelectButtonConfirm_1 = $__require("app/components/PageSelectButtonConfirm.js");
    const Help_1 = $__require("app/components/Help.js");
    const PageSave_1 = $__require("app/components/PageSave.js");
    const ConfirmButton_1 = $__require("app/components/ConfirmButton.js");
    const NodesStore_1 = $__require("app/stores/NodesStore.js");
    const OrganizationsStore_1 = $__require("app/stores/OrganizationsStore.js");
    const InstanceActions = $__require("app/actions/InstanceActions.js");
    const InstancesNodeStore_1 = $__require("app/stores/InstancesNodeStore.js");
    const Alert = $__require("app/Alert.js");
    const css = {
        card: {
            position: 'relative',
            padding: '48px 10px 0 10px',
            width: '100%'
        },
        button: {
            height: '30px'
        },
        buttons: {
            cursor: 'pointer',
            position: 'absolute',
            top: 0,
            left: 0,
            right: 0,
            padding: '4px',
            height: '39px',
            backgroundColor: 'rgba(0, 0, 0, 0.13)'
        },
        item: {
            margin: '9px 5px 0 5px',
            height: '20px'
        },
        itemsLabel: {
            display: 'block'
        },
        itemsAdd: {
            margin: '8px 0 15px 0'
        },
        group: {
            flex: 1,
            minWidth: '280px',
            margin: '0 10px'
        },
        save: {
            paddingBottom: '10px'
        },
        label: {
            width: '100%',
            maxWidth: '280px'
        },
        status: {
            margin: '6px 0 0 1px'
        },
        icon: {
            marginRight: '3px'
        },
        inputGroup: {
            width: '100%'
        },
        protocol: {
            flex: '0 1 auto'
        },
        port: {
            flex: '1'
        },
        select: {
            margin: '7px 0px 0px 6px'
        },
        role: {
            margin: '9px 5px 0 5px',
            height: '20px'
        },
        rules: {
            marginBottom: '15px'
        }
    };
    class DiskDetailed extends React.Component {
        constructor(props, context) {
            super(props, context);
            this.onChange = () => {
                this.setState(Object.assign({}, this.state, { instances: InstancesNodeStore_1.default.instances(this.props.disk.node) }));
            };
            this.onSave = () => {
                this.setState(Object.assign({}, this.state, { disabled: true }));
                DiskActions.commit(this.state.disk).then(() => {
                    this.setState(Object.assign({}, this.state, { message: 'Your changes have been saved', changed: false, disabled: false }));
                    setTimeout(() => {
                        if (!this.state.changed) {
                            this.setState(Object.assign({}, this.state, { disk: null, changed: false }));
                        }
                    }, 1000);
                    setTimeout(() => {
                        if (!this.state.changed) {
                            this.setState(Object.assign({}, this.state, { message: '' }));
                        }
                    }, 3000);
                }).catch(() => {
                    this.setState(Object.assign({}, this.state, { message: '', disabled: false }));
                });
            };
            this.onDelete = () => {
                this.setState(Object.assign({}, this.state, { disabled: true }));
                DiskActions.remove(this.props.disk.id).then(() => {
                    this.setState(Object.assign({}, this.state, { disabled: false }));
                }).catch(() => {
                    this.setState(Object.assign({}, this.state, { disabled: false }));
                });
            };
            this.onRestoreBackup = () => {
                let restoreImage;
                if (this.state.restoreImage) {
                    restoreImage = this.state.restoreImage;
                } else if (this.props.disk.backups && this.props.disk.backups.length) {
                    restoreImage = this.props.disk.backups[0].image;
                } else {
                    return;
                }
                this.setState(Object.assign({}, this.state, { disabled: true }));
                let disk;
                if (this.state.changed) {
                    disk = Object.assign({}, this.state.disk);
                } else {
                    disk = Object.assign({}, this.props.disk);
                }
                disk.state = 'restore';
                disk.restore_image = restoreImage;
                DiskActions.commit(disk).then(() => {
                    Alert.success('Disk restore started');
                    this.setState(Object.assign({}, this.state, { disabled: false }));
                }).catch(() => {
                    this.setState(Object.assign({}, this.state, { disabled: false }));
                });
            };
            this.state = {
                disabled: false,
                changed: false,
                message: '',
                disk: null,
                instances: null,
                restoreImage: null
            };
        }
        componentDidMount() {
            InstancesNodeStore_1.default.addChangeListener(this.onChange);
            InstanceActions.syncNode(this.props.disk.node);
        }
        componentWillUnmount() {
            InstancesNodeStore_1.default.removeChangeListener(this.onChange);
        }
        set(name, val) {
            let disk;
            if (this.state.changed) {
                disk = Object.assign({}, this.state.disk);
            } else {
                disk = Object.assign({}, this.props.disk);
            }
            disk[name] = val;
            this.setState(Object.assign({}, this.state, { changed: true, disk: disk }));
        }
        render() {
            let disk = this.state.disk || this.props.disk;
            let node = NodesStore_1.default.node(this.props.disk.node);
            let org = OrganizationsStore_1.default.organization(this.props.disk.organization);
            let hasInstances = false;
            let instancesSelect = [];
            if (this.state.instances === null) {
                instancesSelect = [React.createElement("option", { key: "null", value: "" }, "Loading")];
            } else {
                if (this.state.instances.length) {
                    instancesSelect.push(React.createElement("option", { key: "null", value: "" }, "Detached Disk"));
                    hasInstances = true;
                    for (let instance of this.state.instances) {
                        instancesSelect.push(React.createElement("option", { key: instance.id, value: instance.id }, instance.name));
                    }
                }
                if (!hasInstances) {
                    instancesSelect = [React.createElement("option", { key: "null", value: "" }, "No Instances")];
                }
            }
            let backupsSelect = [];
            for (let backup of disk.backups || []) {
                backupsSelect.push(React.createElement("option", { key: backup.image, value: backup.image }, backup.name));
            }
            let hasBackups = false;
            if (!backupsSelect.length) {
                backupsSelect = [React.createElement("option", { key: "null", value: "" }, "No Backups")];
            } else {
                hasBackups = true;
            }
            let statusText = 'Unknown';
            let statusClass = '';
            switch (this.props.disk.state) {
                case 'provision':
                    statusText = 'Provisioning';
                    statusClass += ' bp3-text-intent-primary';
                    break;
                case 'available':
                    if (this.props.disk.instance !== "") {
                        statusText = 'Connected';
                    } else {
                        statusText = 'Available';
                    }
                    statusClass += ' bp3-text-intent-success';
                    break;
                case 'destroy':
                    statusText = 'Destroying';
                    statusClass += ' bp3-text-intent-danger';
                    break;
                case 'snapshot':
                    statusText = 'Snapshotting';
                    statusClass += ' bp3-text-intent-primary';
                    break;
                case 'backup':
                    statusText = 'Backing Up';
                    statusClass += ' bp3-text-intent-primary';
                    break;
                case 'restore':
                    statusText = 'Restoring';
                    statusClass += ' bp3-text-intent-primary';
                    break;
            }
            let fields = [{
                label: 'ID',
                value: this.props.disk.id || 'Unknown'
            }, {
                label: 'Image',
                value: this.props.disk.image || 'Unknown'
            }, {
                label: 'Organization',
                value: org ? org.name : this.props.disk.organization
            }, {
                label: 'Node',
                value: node ? node.name : this.props.disk.node
            }, {
                label: 'Size',
                value: this.props.disk.size + 'GB'
            }];
            let backingImage = this.props.disk.backing_image;
            if (backingImage) {
                backingImage = backingImage.replace('-', '\n');
                fields.splice(2, 0, {
                    label: 'Backing Image',
                    value: backingImage
                });
            }
            return React.createElement("td", { className: "bp3-cell", colSpan: 5, style: css.card }, React.createElement("div", { className: "layout horizontal wrap" }, React.createElement("div", { style: css.group }, React.createElement("div", { className: "layout horizontal", style: css.buttons, onClick: evt => {
                    let target = evt.target;
                    if (target.className.indexOf('open-ignore') !== -1) {
                        return;
                    }
                    this.props.onClose();
                } }, React.createElement("div", null, React.createElement("label", { className: "bp3-control bp3-checkbox open-ignore", style: css.select }, React.createElement("input", { type: "checkbox", className: "open-ignore", checked: this.props.selected, onClick: evt => {
                    this.props.onSelect(evt.shiftKey);
                } }), React.createElement("span", { className: "bp3-control-indicator open-ignore" }))), React.createElement("div", { className: statusClass, style: css.status }, React.createElement("span", { style: css.icon, className: "bp3-icon-standard bp3-icon-pulse" }), statusText), React.createElement("div", { className: "flex" }), React.createElement(ConfirmButton_1.default, { className: "bp3-minimal bp3-intent-danger bp3-icon-trash open-ignore", style: css.button, progressClassName: "bp3-intent-danger", confirmMsg: "Confirm disk remove", disabled: this.state.disabled, onConfirm: this.onDelete })), React.createElement(PageInput_1.default, { label: "Name", help: "Name of disk.", type: "text", placeholder: "Enter name", value: disk.name, onChange: val => {
                    this.set('name', val);
                } }), React.createElement(PageSelect_1.default, { disabled: this.state.disabled || !hasInstances, label: "Instance", help: "Instance to attach disk to.", value: disk.instance, onChange: val => {
                    this.set('instance', val);
                } }, instancesSelect), React.createElement(PageNumInput_1.default, { label: "Index", help: "Index to attach disk.", hidden: !disk.instance, min: 0, max: 8, minorStepSize: 1, stepSize: 1, majorStepSize: 1, disabled: this.state.disabled, selectAllOnFocus: true, value: Number(disk.index), onChange: val => {
                    this.set('index', String(val));
                } }), React.createElement(PageSwitch_1.default, { disabled: this.state.disabled, label: "Delete protection", help: "Block disk from being deleted.", checked: disk.delete_protection, onToggle: () => {
                    this.set('delete_protection', !disk.delete_protection);
                } }), React.createElement(PageSwitch_1.default, { disabled: this.state.disabled, label: "Automatic backup", help: "Automatically backup disk daily.", checked: disk.backup, onToggle: () => {
                    this.set('backup', !disk.backup);
                } }), React.createElement("label", { className: "bp3-label", style: css.label }, "Restore Backup", React.createElement(Help_1.default, { title: "Restore Backup", content: "Select a backup to restore and replace the existing disk with the backup image." })), React.createElement(PageSelectButtonConfirm_1.default, { label: "Restore", value: this.state.restoreImage, disabled: !hasBackups || this.state.disabled, confirmMsg: "Confirm disk restore", buttonClass: "bp3-intent-success bp3-icon-box", progressClassName: "bp3-intent-success", onChange: val => {
                    this.setState(Object.assign({}, this.state, { restoreImage: val }));
                }, onSubmit: this.onRestoreBackup }, backupsSelect)), React.createElement("div", { style: css.group }, React.createElement(PageInfo_1.default, { fields: fields }))), React.createElement(PageSave_1.default, { style: css.save, hidden: !this.state.disk && !this.state.message, message: this.state.message, changed: this.state.changed, disabled: this.state.disabled, light: true, onCancel: () => {
                    this.setState(Object.assign({}, this.state, { changed: false, disk: null }));
                }, onSave: this.onSave }));
        }
    }
    exports.default = DiskDetailed;
    
});
System.registerDynamic("app/components/Disk.js", ["npm:react@16.7.0.js", "app/stores/OrganizationsStore.js", "app/components/DiskDetailed.js", "app/stores/NodesStore.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const OrganizationsStore_1 = $__require("app/stores/OrganizationsStore.js");
    const DiskDetailed_1 = $__require("app/components/DiskDetailed.js");
    const NodesStore_1 = $__require("app/stores/NodesStore.js");
    const css = {
        card: {
            display: 'table-row',
            width: '100%',
            padding: 0,
            boxShadow: 'none',
            cursor: 'pointer'
        },
        cardOpen: {
            display: 'table-row',
            width: '100%',
            padding: 0,
            boxShadow: 'none',
            position: 'relative'
        },
        select: {
            margin: '2px 0 0 0',
            paddingTop: '1px',
            minHeight: '18px'
        },
        name: {
            verticalAlign: 'top',
            display: 'table-cell',
            padding: '8px'
        },
        nameSpan: {
            margin: '1px 5px 0 0'
        },
        item: {
            verticalAlign: 'top',
            display: 'table-cell',
            padding: '9px',
            whiteSpace: 'nowrap'
        },
        icon: {
            marginRight: '3px'
        },
        bars: {
            verticalAlign: 'top',
            display: 'table-cell',
            padding: '8px',
            width: '30px'
        },
        bar: {
            height: '6px',
            marginBottom: '1px'
        },
        barLast: {
            height: '6px'
        },
        roles: {
            verticalAlign: 'top',
            display: 'table-cell',
            padding: '0 8px 8px 8px'
        },
        tag: {
            margin: '8px 5px 0 5px',
            height: '20px'
        }
    };
    class Disk extends React.Component {
        render() {
            let disk = this.props.disk;
            let node = NodesStore_1.default.node(this.props.disk.node);
            if (this.props.open) {
                return React.createElement("div", { className: "bp3-card bp3-row", style: css.cardOpen }, React.createElement(DiskDetailed_1.default, { organizations: this.props.organizations, disk: this.props.disk, selected: this.props.selected, onSelect: this.props.onSelect, onClose: () => {
                        this.props.onOpen();
                    } }));
            }
            let orgName = '';
            if (disk.organization) {
                let org = OrganizationsStore_1.default.organization(disk.organization);
                orgName = org ? org.name : disk.organization;
            } else {
                orgName = 'Node Disk';
            }
            let statusText = 'Unknown';
            let statusClass = 'bp3-cell';
            switch (disk.state) {
                case 'provision':
                    statusText = 'Provisioning';
                    statusClass += ' bp3-text-intent-primary';
                    break;
                case 'available':
                    if (disk.instance !== "") {
                        statusText = 'Connected';
                    } else {
                        statusText = 'Available';
                    }
                    statusClass += ' bp3-text-intent-success';
                    break;
                case 'destroy':
                    statusText = 'Destroying';
                    statusClass += ' bp3-text-intent-danger';
                    break;
                case 'snapshot':
                    statusText = 'Snapshotting';
                    statusClass += ' bp3-text-intent-primary';
                    break;
                case 'backup':
                    statusText = 'Backing Up';
                    statusClass += ' bp3-text-intent-primary';
                    break;
                case 'restore':
                    statusText = 'Restoring';
                    statusClass += ' bp3-text-intent-primary';
                    break;
            }
            return React.createElement("div", { className: "bp3-card bp3-row", style: css.card, onClick: evt => {
                    let target = evt.target;
                    if (target.className.indexOf('open-ignore') !== -1) {
                        return;
                    }
                    this.props.onOpen();
                } }, React.createElement("div", { className: "bp3-cell", style: css.name }, React.createElement("div", { className: "layout horizontal" }, React.createElement("label", { className: "bp3-control bp3-checkbox open-ignore", style: css.select }, React.createElement("input", { type: "checkbox", className: "open-ignore", checked: this.props.selected, onClick: evt => {
                    this.props.onSelect(evt.shiftKey);
                } }), React.createElement("span", { className: "bp3-control-indicator open-ignore" })), React.createElement("div", { style: css.nameSpan }, disk.name))), React.createElement("div", { className: statusClass, style: css.item }, React.createElement("span", { style: css.icon, className: "bp3-icon-standard bp3-icon-pulse" }), statusText), React.createElement("div", { className: "bp3-cell", style: css.item }, React.createElement("span", { style: css.icon, className: 'bp3-icon-standard bp3-text-muted ' + (disk.organization ? 'bp3-icon-people' : 'bp3-icon-layers') }), orgName), React.createElement("div", { className: "bp3-cell", style: css.item }, React.createElement("span", { style: css.icon, className: "bp3-icon-standard bp3-text-muted bp3-icon-layers" }), node ? node.name : this.props.disk.node), React.createElement("div", { className: "bp3-cell", style: css.item }, React.createElement("span", { style: css.icon, className: "bp3-icon-standard bp3-text-muted bp3-icon-database" }), disk.size, "GB"));
        }
    }
    exports.default = Disk;
    
});
System.registerDynamic("app/components/DisksFilter.js", ["npm:react@16.7.0.js", "app/Constants.js", "app/components/SearchInput.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const Constants = $__require("app/Constants.js");
    const SearchInput_1 = $__require("app/components/SearchInput.js");
    const css = {
        filters: {
            margin: '-15px 0 5px 0'
        },
        input: {
            width: '200px',
            margin: '5px'
        },
        role: {
            width: '150px',
            margin: '5px'
        },
        type: {
            margin: '5px'
        },
        check: {
            margin: '12px 5px 8px 5px'
        }
    };
    class DisksFilter extends React.Component {
        constructor(props, context) {
            super(props, context);
            this.state = {
                menu: false
            };
        }
        render() {
            if (this.props.filter === null) {
                return React.createElement("div", null);
            }
            let organizationsSelect = [React.createElement("option", { key: "key", value: "any" }, "Any")];
            if (this.props.organizations && this.props.organizations.length) {
                for (let organization of this.props.organizations) {
                    organizationsSelect.push(React.createElement("option", { key: organization.id, value: organization.id }, organization.name));
                }
            }
            return React.createElement("div", { className: "layout horizontal wrap", style: css.filters }, React.createElement(SearchInput_1.default, { style: css.input, placeholder: "Disk ID", value: this.props.filter.id, onChange: val => {
                    let filter = Object.assign({}, this.props.filter);
                    if (val) {
                        filter.id = val;
                    } else {
                        delete filter.id;
                    }
                    this.props.onFilter(filter);
                } }), React.createElement(SearchInput_1.default, { style: css.input, placeholder: "Name", value: this.props.filter.name, onChange: val => {
                    let filter = Object.assign({}, this.props.filter);
                    if (val) {
                        filter.name = val;
                    } else {
                        delete filter.name;
                    }
                    this.props.onFilter(filter);
                } }), React.createElement(SearchInput_1.default, { style: css.input, placeholder: "Instance ID", value: this.props.filter.instance, onChange: val => {
                    let filter = Object.assign({}, this.props.filter);
                    if (val) {
                        filter.instance = val;
                    } else {
                        delete filter.instance;
                    }
                    this.props.onFilter(filter);
                } }), React.createElement("div", { className: "bp3-select", style: css.type, hidden: Constants.user }, React.createElement("select", { value: this.props.filter.organization || 'any', onChange: evt => {
                    let filter = Object.assign({}, this.props.filter);
                    let val = evt.target.value;
                    if (val === 'any') {
                        delete filter.organization;
                    } else {
                        filter.organization = val;
                    }
                    this.props.onFilter(filter);
                } }, organizationsSelect)));
        }
    }
    exports.default = DisksFilter;
    
});
System.registerDynamic("app/components/DisksPage.js", ["npm:react@16.7.0.js", "app/stores/DisksStore.js", "app/actions/DiskActions.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const DisksStore_1 = $__require("app/stores/DisksStore.js");
    const DiskActions = $__require("app/actions/DiskActions.js");
    const css = {
        button: {
            userSelect: 'none',
            margin: '0 5px 0 0'
        },
        buttonLast: {
            userSelect: 'none',
            margin: '0 0 0 0'
        },
        link: {
            cursor: 'pointer',
            userSelect: 'none',
            margin: '7px 5px 0 0'
        },
        current: {
            opacity: 0.5
        }
    };
    class DisksPage extends React.Component {
        constructor(props, context) {
            super(props, context);
            this.onChange = () => {
                this.setState(Object.assign({}, this.state, { page: DisksStore_1.default.page, pageCount: DisksStore_1.default.pageCount, pages: DisksStore_1.default.pages, count: DisksStore_1.default.count }));
            };
            this.state = {
                page: DisksStore_1.default.page,
                pageCount: DisksStore_1.default.pageCount,
                pages: DisksStore_1.default.pages,
                count: DisksStore_1.default.count
            };
        }
        componentDidMount() {
            DisksStore_1.default.addChangeListener(this.onChange);
        }
        componentWillUnmount() {
            DisksStore_1.default.removeChangeListener(this.onChange);
        }
        render() {
            let page = this.state.page;
            let pages = this.state.pages;
            if (pages <= 1) {
                return React.createElement("div", null);
            }
            let links = [];
            let start = Math.max(0, page - 7);
            let end = Math.min(pages, start + 15);
            for (let i = start; i < end; i++) {
                links.push(React.createElement("span", { key: i, style: page === i ? Object.assign({}, css.link, css.current) : css.link, onClick: () => {
                        DiskActions.traverse(i);
                        if (this.props.onPage) {
                            this.props.onPage();
                        }
                    } }, i + 1));
            }
            return React.createElement("div", { className: "layout horizontal center-justified" }, React.createElement("button", { className: "bp3-button bp3-minimal bp3-icon-chevron-backward", hidden: pages < 5, disabled: page === 0, type: "button", onClick: () => {
                    DiskActions.traverse(0);
                    if (this.props.onPage) {
                        this.props.onPage();
                    }
                } }), React.createElement("button", { className: "bp3-button bp3-minimal bp3-icon-chevron-left", style: css.button, disabled: page === 0, type: "button", onClick: () => {
                    DiskActions.traverse(Math.max(0, this.state.page - 1));
                    if (this.props.onPage) {
                        this.props.onPage();
                    }
                } }), links, React.createElement("button", { className: "bp3-button bp3-minimal bp3-icon-chevron-right", style: css.button, disabled: page === pages - 1, type: "button", onClick: () => {
                    DiskActions.traverse(Math.min(this.state.pages - 1, this.state.page + 1));
                    if (this.props.onPage) {
                        this.props.onPage();
                    }
                } }), React.createElement("button", { className: "bp3-button bp3-minimal bp3-icon-chevron-forward", hidden: pages < 5, disabled: page === pages - 1, type: "button", onClick: () => {
                    DiskActions.traverse(this.state.pages - 1);
                    if (this.props.onPage) {
                        this.props.onPage();
                    }
                } }));
        }
    }
    exports.default = DisksPage;
    
});
System.registerDynamic("app/stores/InstancesNodeStore.js", ["app/dispatcher/Dispatcher.js", "app/EventEmitter.js", "app/types/InstanceTypes.js", "app/types/GlobalTypes.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const Dispatcher_1 = $__require("app/dispatcher/Dispatcher.js");
    const EventEmitter_1 = $__require("app/EventEmitter.js");
    const InstanceTypes = $__require("app/types/InstanceTypes.js");
    const GlobalTypes = $__require("app/types/GlobalTypes.js");
    class InstancesNodeStore extends EventEmitter_1.default {
        constructor() {
            super(...arguments);
            this._instances = new Map(Object.freeze([]));
            this._map = {};
            this._token = Dispatcher_1.default.register(this._callback.bind(this));
        }
        _reset() {
            this._instances = new Map(Object.freeze([]));
            this._map = {};
            this.emitChange();
        }
        instances(node) {
            return this._instances.get(node) || [];
        }
        instance(id) {
            let x = this._map[id];
            if (x === undefined) {
                return null;
            }
            return this._instances.get(x[0])[x[1]];
        }
        emitChange() {
            this.emitDefer(GlobalTypes.CHANGE);
        }
        addChangeListener(callback) {
            this.on(GlobalTypes.CHANGE, callback);
        }
        removeChangeListener(callback) {
            this.removeListener(GlobalTypes.CHANGE, callback);
        }
        _sync(node, instances) {
            for (let i = 0; i < instances.length; i++) {
                instances[i] = Object.freeze(instances[i]);
            }
            this._instances.set(node, Object.freeze(instances));
            this._map = {};
            for (let item of this._instances.entries()) {
                let insts = item[1];
                for (let i = 0; i < insts.length; i++) {
                    this._map[insts[i].id] = [item[0], i];
                }
            }
            this.emitChange();
        }
        _callback(action) {
            switch (action.type) {
                case GlobalTypes.RESET:
                    this._reset();
                    break;
                case InstanceTypes.SYNC_NODE:
                    this._sync(action.data.node, action.data.instances);
                    break;
            }
        }
    }
    exports.default = new InstancesNodeStore();
    
});
System.registerDynamic("app/components/DiskNew.js", ["npm:react@16.7.0.js", "app/actions/DiskActions.js", "app/actions/ImageActions.js", "app/actions/InstanceActions.js", "app/actions/NodeActions.js", "app/stores/ImagesDatacenterStore.js", "app/stores/InstancesNodeStore.js", "app/stores/NodesZoneStore.js", "app/components/PageInput.js", "app/components/PageCreate.js", "app/components/PageSelect.js", "app/components/PageSwitch.js", "app/components/PageNumInput.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const DiskActions = $__require("app/actions/DiskActions.js");
    const ImageActions = $__require("app/actions/ImageActions.js");
    const InstanceActions = $__require("app/actions/InstanceActions.js");
    const NodeActions = $__require("app/actions/NodeActions.js");
    const ImagesDatacenterStore_1 = $__require("app/stores/ImagesDatacenterStore.js");
    const InstancesNodeStore_1 = $__require("app/stores/InstancesNodeStore.js");
    const NodesZoneStore_1 = $__require("app/stores/NodesZoneStore.js");
    const PageInput_1 = $__require("app/components/PageInput.js");
    const PageCreate_1 = $__require("app/components/PageCreate.js");
    const PageSelect_1 = $__require("app/components/PageSelect.js");
    const PageSwitch_1 = $__require("app/components/PageSwitch.js");
    const PageNumInput_1 = $__require("app/components/PageNumInput.js");
    const css = {
        row: {
            display: 'table-row',
            width: '100%',
            padding: 0,
            boxShadow: 'none',
            position: 'relative'
        },
        card: {
            position: 'relative',
            padding: '10px 10px 0 10px',
            width: '100%'
        },
        buttons: {
            position: 'absolute',
            top: '5px',
            right: '5px'
        },
        item: {
            margin: '9px 5px 0 5px',
            height: '20px'
        },
        itemsLabel: {
            display: 'block'
        },
        itemsAdd: {
            margin: '8px 0 15px 0'
        },
        group: {
            flex: 1,
            minWidth: '280px',
            margin: '0 10px'
        },
        save: {
            paddingBottom: '10px'
        },
        label: {
            width: '100%',
            maxWidth: '280px'
        },
        inputGroup: {
            width: '100%'
        },
        protocol: {
            flex: '0 1 auto'
        },
        port: {
            flex: '1'
        },
        role: {
            margin: '9px 5px 0 5px',
            height: '20px'
        }
    };
    class DiskNew extends React.Component {
        constructor(props, context) {
            super(props, context);
            this.onChange = () => {
                this.setState(Object.assign({}, this.state, { images: ImagesDatacenterStore_1.default.images, nodes: NodesZoneStore_1.default.nodes, instances: InstancesNodeStore_1.default.instances(this.state.disk.node) }));
            };
            this.onCreate = () => {
                this.setState(Object.assign({}, this.state, { disabled: true }));
                let disk = Object.assign({}, this.state.disk);
                if (this.props.organizations.length && !disk.organization) {
                    disk.organization = this.props.organizations[0].id;
                }
                DiskActions.create(disk).then(() => {
                    this.setState(Object.assign({}, this.state, { message: 'Disk created successfully', closed: true, changed: false }));
                }).catch(() => {
                    this.setState(Object.assign({}, this.state, { message: '', disabled: false }));
                });
            };
            this.state = {
                closed: false,
                disabled: false,
                changed: false,
                message: '',
                disk: {
                    name: 'New Disk',
                    index: "1",
                    size: 10
                },
                datacenter: '',
                zone: '',
                images: [],
                nodes: [],
                instances: []
            };
        }
        componentDidMount() {
            ImagesDatacenterStore_1.default.addChangeListener(this.onChange);
            NodesZoneStore_1.default.addChangeListener(this.onChange);
            InstancesNodeStore_1.default.addChangeListener(this.onChange);
            ImageActions.syncDatacenter('');
            NodeActions.syncZone('');
        }
        componentWillUnmount() {
            ImagesDatacenterStore_1.default.removeChangeListener(this.onChange);
            NodesZoneStore_1.default.removeChangeListener(this.onChange);
            InstancesNodeStore_1.default.removeChangeListener(this.onChange);
        }
        set(name, val) {
            let disk = Object.assign({}, this.state.disk);
            disk[name] = val;
            this.setState(Object.assign({}, this.state, { changed: true, disk: disk }));
        }
        render() {
            let disk = this.state.disk;
            let organizationsSelect = [];
            if (this.props.organizations.length) {
                for (let organization of this.props.organizations) {
                    organizationsSelect.push(React.createElement("option", { key: organization.id, value: organization.id }, organization.name));
                }
            }
            let hasDatacenters = false;
            let datacentersSelect = [];
            if (this.props.datacenters.length) {
                datacentersSelect.push(React.createElement("option", { key: "null", value: "" }, "Select Datacenter"));
                hasDatacenters = true;
                for (let datacenter of this.props.datacenters) {
                    datacentersSelect.push(React.createElement("option", { key: datacenter.id, value: datacenter.id }, datacenter.name));
                }
            }
            if (!hasDatacenters) {
                datacentersSelect.push(React.createElement("option", { key: "null", value: "" }, "No Datacenters"));
            }
            let datacenter = this.state.datacenter;
            let hasZones = false;
            let zonesSelect = [];
            if (this.props.zones.length) {
                zonesSelect.push(React.createElement("option", { key: "null", value: "" }, "Select Zone"));
                for (let zone of this.props.zones) {
                    if (zone.datacenter !== datacenter) {
                        continue;
                    }
                    hasZones = true;
                    zonesSelect.push(React.createElement("option", { key: zone.id, value: zone.id }, zone.name));
                }
            }
            if (!hasZones) {
                zonesSelect = [React.createElement("option", { key: "null", value: "" }, "No Zones")];
            }
            let hasNodes = false;
            let nodesSelect = [];
            if (this.state.nodes.length) {
                nodesSelect.push(React.createElement("option", { key: "null", value: "" }, "Select Node"));
                hasNodes = true;
                for (let node of this.state.nodes) {
                    nodesSelect.push(React.createElement("option", { key: node.id, value: node.id }, node.name));
                }
            }
            if (!hasNodes) {
                nodesSelect = [React.createElement("option", { key: "null", value: "" }, "No Nodes")];
            }
            let hasInstances = false;
            let instancesSelect = [];
            if (this.state.instances.length) {
                instancesSelect.push(React.createElement("option", { key: "null", value: "" }, "Detached Disk"));
                hasInstances = true;
                for (let instance of this.state.instances) {
                    instancesSelect.push(React.createElement("option", { key: instance.id, value: instance.id }, instance.name));
                }
            }
            if (!hasInstances) {
                instancesSelect = [React.createElement("option", { key: "null", value: "" }, "No Instances")];
            }
            let imagesSelect = [React.createElement("option", { key: "null", value: "" }, "Blank Disk")];
            if (this.state.images.length) {
                for (let image of this.state.images) {
                    imagesSelect.push(React.createElement("option", { key: image.id, value: image.id }, image.name));
                }
            }
            return React.createElement("div", { className: "bp3-card bp3-row", style: css.row }, React.createElement("td", { className: "bp3-cell", colSpan: 5, style: css.card }, React.createElement("div", { className: "layout horizontal wrap" }, React.createElement("div", { style: css.group }, React.createElement("div", { style: css.buttons }), React.createElement(PageInput_1.default, { label: "Name", help: "Name of disk", type: "text", placeholder: "Enter name", disabled: this.state.disabled, value: disk.name, onChange: val => {
                    this.set('name', val);
                } }), React.createElement(PageSelect_1.default, { disabled: this.state.disabled, label: "Organization", help: "Organization for disk.", value: disk.organization, onChange: val => {
                    this.set('organization', val);
                } }, organizationsSelect), React.createElement(PageSelect_1.default, { disabled: this.state.disabled || !hasDatacenters, label: "Datacenter", help: "Datacenter for disk.", value: this.state.datacenter, onChange: val => {
                    this.setState(Object.assign({}, this.state, { datacenter: val, disk: Object.assign({}, this.state.disk, { node: '', image: '' }) }));
                    ImageActions.syncDatacenter(val);
                    NodeActions.syncZone('');
                } }, datacentersSelect), React.createElement(PageSelect_1.default, { disabled: this.state.disabled || !hasZones, label: "Zone", help: "Zone for disk.", value: this.state.zone, onChange: val => {
                    this.setState(Object.assign({}, this.state, { zone: val, disk: Object.assign({}, this.state.disk, { node: '', instance: '' }) }));
                    NodeActions.syncZone(val);
                } }, zonesSelect), React.createElement(PageSelect_1.default, { disabled: this.state.disabled || !hasNodes, label: "Node", help: "Node to run disk on.", value: disk.node, onChange: val => {
                    this.setState(Object.assign({}, this.state, { disk: Object.assign({}, this.state.disk, { node: val, instance: '' }) }));
                    InstanceActions.syncNode(val);
                } }, nodesSelect), React.createElement(PageSwitch_1.default, { disabled: this.state.disabled, label: "Delete protection", help: "Block disk from being deleted.", checked: disk.delete_protection, onToggle: () => {
                    this.set('delete_protection', !disk.delete_protection);
                } })), React.createElement("div", { style: css.group }, React.createElement(PageSelect_1.default, { disabled: this.state.disabled || !hasInstances, label: "Instance", help: "Instance to attach disk to.", value: disk.instance, onChange: val => {
                    this.set('instance', val);
                } }, instancesSelect), React.createElement(PageNumInput_1.default, { label: "Index", help: "Index to attach disk.", hidden: !disk.instance, min: 0, max: 8, minorStepSize: 1, stepSize: 1, majorStepSize: 1, disabled: this.state.disabled, selectAllOnFocus: true, value: Number(disk.index), onChange: val => {
                    this.set('index', String(val));
                } }), React.createElement(PageSelect_1.default, { disabled: this.state.disabled, label: "Image", help: "Starting image for disk.", value: disk.image, onChange: val => {
                    this.set('image', val);
                } }, imagesSelect), React.createElement(PageSwitch_1.default, { label: "Linked disk image", help: "Link to source disk image instead of creating full copy. This will reduce disk size and provide faster creation.", checked: disk.backing, onToggle: () => {
                    this.set('backing', !disk.backing);
                } }), React.createElement(PageNumInput_1.default, { label: "Size", help: "Disk size in gigabytes.", min: 10, minorStepSize: 1, stepSize: 1, majorStepSize: 2, disabled: this.state.disabled, selectAllOnFocus: true, value: disk.size, onChange: val => {
                    this.set('size', val);
                } }))), React.createElement(PageCreate_1.default, { style: css.save, hidden: !this.state.disk, message: this.state.message, changed: this.state.changed, disabled: this.state.disabled, closed: this.state.closed, light: true, onCancel: this.props.onClose, onCreate: this.onCreate })));
        }
    }
    exports.default = DiskNew;
    
});
System.registerDynamic("app/components/Disks.js", ["npm:react@16.7.0.js", "app/Constants.js", "app/stores/DisksStore.js", "app/stores/OrganizationsStore.js", "app/actions/DiskActions.js", "app/actions/OrganizationActions.js", "app/components/Disk.js", "app/components/DisksFilter.js", "app/components/DisksPage.js", "app/components/DiskNew.js", "app/components/Page.js", "app/components/PageHeader.js", "app/components/NonState.js", "app/components/ConfirmButton.js", "app/stores/ZonesStore.js", "app/stores/DatacentersStore.js", "app/stores/InstancesStore.js", "app/actions/InstanceActions.js", "app/actions/DatacenterActions.js", "app/actions/ZoneActions.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const Constants = $__require("app/Constants.js");
    const DisksStore_1 = $__require("app/stores/DisksStore.js");
    const OrganizationsStore_1 = $__require("app/stores/OrganizationsStore.js");
    const DiskActions = $__require("app/actions/DiskActions.js");
    const OrganizationActions = $__require("app/actions/OrganizationActions.js");
    const Disk_1 = $__require("app/components/Disk.js");
    const DisksFilter_1 = $__require("app/components/DisksFilter.js");
    const DisksPage_1 = $__require("app/components/DisksPage.js");
    const DiskNew_1 = $__require("app/components/DiskNew.js");
    const Page_1 = $__require("app/components/Page.js");
    const PageHeader_1 = $__require("app/components/PageHeader.js");
    const NonState_1 = $__require("app/components/NonState.js");
    const ConfirmButton_1 = $__require("app/components/ConfirmButton.js");
    const ZonesStore_1 = $__require("app/stores/ZonesStore.js");
    const DatacentersStore_1 = $__require("app/stores/DatacentersStore.js");
    const InstancesStore_1 = $__require("app/stores/InstancesStore.js");
    const InstanceActions = $__require("app/actions/InstanceActions.js");
    const DatacenterActions = $__require("app/actions/DatacenterActions.js");
    const ZoneActions = $__require("app/actions/ZoneActions.js");
    const css = {
        items: {
            width: '100%',
            marginTop: '-5px',
            display: 'table',
            borderSpacing: '0 5px'
        },
        itemsBox: {
            width: '100%',
            overflowY: 'auto'
        },
        placeholder: {
            opacity: 0,
            width: '100%'
        },
        header: {
            marginTop: '-19px'
        },
        heading: {
            margin: '19px 0 0 0'
        },
        button: {
            margin: '8px 0 0 8px'
        },
        buttons: {
            marginTop: '8px'
        },
        debug: {
            margin: '0 0 4px 0'
        },
        debugButton: {
            opacity: 0.5,
            margin: '8px 0 0 8px'
        }
    };
    class Disks extends React.Component {
        constructor(props, context) {
            super(props, context);
            this.onChange = () => {
                let disks = DisksStore_1.default.disks;
                let selected = {};
                let curSelected = this.state.selected;
                let opened = {};
                let curOpened = this.state.opened;
                disks.forEach(disk => {
                    if (curSelected[disk.id]) {
                        selected[disk.id] = true;
                    }
                    if (curOpened[disk.id]) {
                        opened[disk.id] = true;
                    }
                });
                this.setState(Object.assign({}, this.state, { disks: disks, filter: DisksStore_1.default.filter, organizations: OrganizationsStore_1.default.organizations, datacenters: DatacentersStore_1.default.datacenters, zones: ZonesStore_1.default.zones, selected: selected, opened: opened }));
            };
            this.onDelete = () => {
                this.setState(Object.assign({}, this.state, { disabled: true }));
                DiskActions.removeMulti(Object.keys(this.state.selected)).then(() => {
                    this.setState(Object.assign({}, this.state, { selected: {}, disabled: false }));
                }).catch(() => {
                    this.setState(Object.assign({}, this.state, { disabled: false }));
                });
            };
            this.onForceDelete = () => {
                this.setState(Object.assign({}, this.state, { disabled: true }));
                DiskActions.forceRemoveMulti(Object.keys(this.state.selected)).then(() => {
                    this.setState(Object.assign({}, this.state, { selected: {}, disabled: false }));
                }).catch(() => {
                    this.setState(Object.assign({}, this.state, { disabled: false }));
                });
            };
            this.onSnapshot = () => {
                this.setState(Object.assign({}, this.state, { disabled: true }));
                DiskActions.updateMulti(Object.keys(this.state.selected), 'snapshot').then(() => {
                    this.setState(Object.assign({}, this.state, { selected: {}, disabled: false }));
                }).catch(() => {
                    this.setState(Object.assign({}, this.state, { disabled: false }));
                });
            };
            this.onBackup = () => {
                this.setState(Object.assign({}, this.state, { disabled: true }));
                DiskActions.updateMulti(Object.keys(this.state.selected), 'backup').then(() => {
                    this.setState(Object.assign({}, this.state, { selected: {}, disabled: false }));
                }).catch(() => {
                    this.setState(Object.assign({}, this.state, { disabled: false }));
                });
            };
            this.state = {
                disks: DisksStore_1.default.disks,
                filter: DisksStore_1.default.filter,
                debug: false,
                organizations: OrganizationsStore_1.default.organizations,
                datacenters: DatacentersStore_1.default.datacenters,
                zones: ZonesStore_1.default.zones,
                selected: {},
                opened: {},
                newOpened: false,
                lastSelected: null,
                disabled: false
            };
        }
        get selected() {
            return !!Object.keys(this.state.selected).length;
        }
        get opened() {
            return !!Object.keys(this.state.opened).length;
        }
        componentDidMount() {
            InstancesStore_1.default.addChangeListener(this.onChange);
            DisksStore_1.default.addChangeListener(this.onChange);
            OrganizationsStore_1.default.addChangeListener(this.onChange);
            DatacentersStore_1.default.addChangeListener(this.onChange);
            InstanceActions.sync();
            DiskActions.sync();
            OrganizationActions.sync();
            DatacenterActions.sync();
            ZoneActions.sync();
        }
        componentWillUnmount() {
            InstancesStore_1.default.removeChangeListener(this.onChange);
            DisksStore_1.default.removeChangeListener(this.onChange);
            OrganizationsStore_1.default.removeChangeListener(this.onChange);
            DatacentersStore_1.default.removeChangeListener(this.onChange);
            ZonesStore_1.default.removeChangeListener(this.onChange);
        }
        render() {
            let disksDom = [];
            this.state.disks.forEach(disk => {
                disksDom.push(React.createElement(Disk_1.default, { key: disk.id, disk: disk, organizations: this.state.organizations, selected: !!this.state.selected[disk.id], open: !!this.state.opened[disk.id], onSelect: shift => {
                        let selected = Object.assign({}, this.state.selected);
                        if (shift) {
                            let disks = this.state.disks;
                            let start;
                            let end;
                            for (let i = 0; i < disks.length; i++) {
                                let usr = disks[i];
                                if (usr.id === disk.id) {
                                    start = i;
                                } else if (usr.id === this.state.lastSelected) {
                                    end = i;
                                }
                            }
                            if (start !== undefined && end !== undefined) {
                                if (start > end) {
                                    end = [start, start = end][0];
                                }
                                for (let i = start; i <= end; i++) {
                                    selected[disks[i].id] = true;
                                }
                                this.setState(Object.assign({}, this.state, { lastSelected: disk.id, selected: selected }));
                                return;
                            }
                        }
                        if (selected[disk.id]) {
                            delete selected[disk.id];
                        } else {
                            selected[disk.id] = true;
                        }
                        this.setState(Object.assign({}, this.state, { lastSelected: disk.id, selected: selected }));
                    }, onOpen: () => {
                        let opened = Object.assign({}, this.state.opened);
                        if (opened[disk.id]) {
                            delete opened[disk.id];
                        } else {
                            opened[disk.id] = true;
                        }
                        this.setState(Object.assign({}, this.state, { opened: opened }));
                    } }));
            });
            let newDiskDom;
            if (this.state.newOpened) {
                newDiskDom = React.createElement(DiskNew_1.default, { organizations: this.state.organizations, datacenters: this.state.datacenters, zones: this.state.zones, onClose: () => {
                        this.setState(Object.assign({}, this.state, { newOpened: false }));
                    } });
            }
            let debugClass = 'bp3-button bp3-icon-console ';
            if (this.state.debug) {
                debugClass += 'bp3-active';
            }
            let filterClass = 'bp3-button bp3-intent-primary bp3-icon-filter ';
            if (this.state.filter) {
                filterClass += 'bp3-active';
            }
            return React.createElement(Page_1.default, null, React.createElement(PageHeader_1.default, null, React.createElement("div", { className: "layout horizontal wrap", style: css.header }, React.createElement("h2", { style: css.heading }, "Disks"), React.createElement("div", { className: "flex" }), React.createElement("div", { style: css.buttons }, React.createElement("button", { className: debugClass, style: css.debugButton, hidden: Constants.user, type: "button", onClick: () => {
                    this.setState(Object.assign({}, this.state, { debug: !this.state.debug }));
                } }, "Debug"), React.createElement("button", { className: filterClass, style: css.button, type: "button", onClick: () => {
                    if (this.state.filter === null) {
                        DiskActions.filter({});
                    } else {
                        DiskActions.filter(null);
                    }
                } }, "Filters"), React.createElement("button", { className: "bp3-button bp3-intent-warning bp3-icon-chevron-up", style: css.button, disabled: !this.opened, type: "button", onClick: () => {
                    this.setState(Object.assign({}, this.state, { opened: {} }));
                } }, "Collapse All"), React.createElement(ConfirmButton_1.default, { label: "Snapshot Selected", className: "bp3-intent-primary bp3-icon-floppy-disk", progressClassName: "bp3-intent-primary", style: css.button, disabled: !this.selected || this.state.disabled, onConfirm: this.onSnapshot }), React.createElement(ConfirmButton_1.default, { label: "Backup Selected", className: "bp3-intent-primary bp3-icon-compressed", progressClassName: "bp3-intent-primary", style: css.button, disabled: !this.selected || this.state.disabled, onConfirm: this.onBackup }), React.createElement(ConfirmButton_1.default, { label: "Delete Selected", className: "bp3-intent-danger bp3-icon-delete", progressClassName: "bp3-intent-danger", style: css.button, disabled: !this.selected || this.state.disabled, onConfirm: this.onDelete }), React.createElement("button", { className: "bp3-button bp3-intent-success bp3-icon-add", style: css.button, disabled: this.state.disabled || this.state.newOpened, type: "button", onClick: () => {
                    this.setState(Object.assign({}, this.state, { newOpened: true }));
                } }, "New"))), React.createElement("div", { className: "layout horizontal wrap", style: css.debug, hidden: !this.state.debug }, React.createElement(ConfirmButton_1.default, { label: "Force Delete Selected", className: "bp3-intent-danger bp3-icon-warning-sign", progressClassName: "bp3-intent-danger", style: css.button, disabled: !this.selected || this.state.disabled, onConfirm: this.onForceDelete }))), React.createElement(DisksFilter_1.default, { filter: this.state.filter, onFilter: filter => {
                    DiskActions.filter(filter);
                }, organizations: this.state.organizations }), React.createElement("div", { style: css.itemsBox }, React.createElement("div", { style: css.items }, newDiskDom, disksDom, React.createElement("tr", { className: "bp3-card bp3-row", style: css.placeholder }, React.createElement("td", { colSpan: 5, style: css.placeholder })))), React.createElement(NonState_1.default, { hidden: !!disksDom.length, iconClass: "bp3-icon-floppy-disk", title: "No disks", description: "Add a new disk to get started." }), React.createElement(DisksPage_1.default, { onPage: () => {
                    this.setState({
                        lastSelected: null
                    });
                } }));
        }
    }
    exports.default = Disks;
    
});
System.registerDynamic("app/stores/DomainsNameStore.js", ["app/dispatcher/Dispatcher.js", "app/EventEmitter.js", "app/types/DomainTypes.js", "app/types/GlobalTypes.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const Dispatcher_1 = $__require("app/dispatcher/Dispatcher.js");
    const EventEmitter_1 = $__require("app/EventEmitter.js");
    const DomainTypes = $__require("app/types/DomainTypes.js");
    const GlobalTypes = $__require("app/types/GlobalTypes.js");
    class DomainsNameStore extends EventEmitter_1.default {
        constructor() {
            super(...arguments);
            this._domains = Object.freeze([]);
            this._map = {};
            this._token = Dispatcher_1.default.register(this._callback.bind(this));
        }
        _reset() {
            this._domains = Object.freeze([]);
            this._map = {};
            this.emitChange();
        }
        get domains() {
            return this._domains;
        }
        get domainsM() {
            let domains = [];
            this._domains.forEach(domain => {
                domains.push(Object.assign({}, domain));
            });
            return domains;
        }
        domain(id) {
            let i = this._map[id];
            if (i === undefined) {
                return null;
            }
            return this._domains[i];
        }
        emitChange() {
            this.emitDefer(GlobalTypes.CHANGE);
        }
        addChangeListener(callback) {
            this.on(GlobalTypes.CHANGE, callback);
        }
        removeChangeListener(callback) {
            this.removeListener(GlobalTypes.CHANGE, callback);
        }
        _sync(domains) {
            this._map = {};
            for (let i = 0; i < domains.length; i++) {
                domains[i] = Object.freeze(domains[i]);
                this._map[domains[i].id] = i;
            }
            this._domains = Object.freeze(domains);
            this.emitChange();
        }
        _callback(action) {
            switch (action.type) {
                case GlobalTypes.RESET:
                    this._reset();
                    break;
                case DomainTypes.SYNC_NAME:
                    this._sync(action.data.domains);
                    break;
            }
        }
    }
    exports.default = new DomainsNameStore();
    
});
System.registerDynamic("app/stores/VpcsNameStore.js", ["app/dispatcher/Dispatcher.js", "app/EventEmitter.js", "app/types/VpcTypes.js", "app/types/GlobalTypes.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const Dispatcher_1 = $__require("app/dispatcher/Dispatcher.js");
    const EventEmitter_1 = $__require("app/EventEmitter.js");
    const VpcTypes = $__require("app/types/VpcTypes.js");
    const GlobalTypes = $__require("app/types/GlobalTypes.js");
    class VpcsZoneStore extends EventEmitter_1.default {
        constructor() {
            super(...arguments);
            this._vpcs = Object.freeze([]);
            this._map = {};
            this._token = Dispatcher_1.default.register(this._callback.bind(this));
        }
        _reset() {
            this._vpcs = Object.freeze([]);
            this._map = {};
            this.emitChange();
        }
        get vpcs() {
            return this._vpcs;
        }
        get vpcsM() {
            let vpcs = [];
            this._vpcs.forEach(vpc => {
                vpcs.push(Object.assign({}, vpc));
            });
            return vpcs;
        }
        vpc(id) {
            let i = this._map[id];
            if (i === undefined) {
                return null;
            }
            return this._vpcs[i];
        }
        emitChange() {
            this.emitDefer(GlobalTypes.CHANGE);
        }
        addChangeListener(callback) {
            this.on(GlobalTypes.CHANGE, callback);
        }
        removeChangeListener(callback) {
            this.removeListener(GlobalTypes.CHANGE, callback);
        }
        _sync(vpcs) {
            this._map = {};
            for (let i = 0; i < vpcs.length; i++) {
                vpcs[i] = Object.freeze(vpcs[i]);
                this._map[vpcs[i].id] = i;
            }
            this._vpcs = Object.freeze(vpcs);
            this.emitChange();
        }
        _callback(action) {
            switch (action.type) {
                case GlobalTypes.RESET:
                    this._reset();
                    break;
                case VpcTypes.SYNC_NAMES:
                    this._sync(action.data.vpcs);
                    break;
            }
        }
    }
    exports.default = new VpcsZoneStore();
    
});
System.registerDynamic("app/stores/DatacentersStore.js", ["app/dispatcher/Dispatcher.js", "app/EventEmitter.js", "app/types/DatacenterTypes.js", "app/types/GlobalTypes.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const Dispatcher_1 = $__require("app/dispatcher/Dispatcher.js");
    const EventEmitter_1 = $__require("app/EventEmitter.js");
    const DatacenterTypes = $__require("app/types/DatacenterTypes.js");
    const GlobalTypes = $__require("app/types/GlobalTypes.js");
    class DatacentersStore extends EventEmitter_1.default {
        constructor() {
            super(...arguments);
            this._datacenters = Object.freeze([]);
            this._map = {};
            this._token = Dispatcher_1.default.register(this._callback.bind(this));
        }
        _reset() {
            this._datacenters = Object.freeze([]);
            this._map = {};
            this.emitChange();
        }
        get datacenters() {
            return this._datacenters;
        }
        get datacentersM() {
            let datacenters = [];
            this._datacenters.forEach(datacenter => {
                datacenters.push(Object.assign({}, datacenter));
            });
            return datacenters;
        }
        datacenter(id) {
            let i = this._map[id];
            if (i === undefined) {
                return null;
            }
            return this._datacenters[i];
        }
        emitChange() {
            this.emitDefer(GlobalTypes.CHANGE);
        }
        addChangeListener(callback) {
            this.on(GlobalTypes.CHANGE, callback);
        }
        removeChangeListener(callback) {
            this.removeListener(GlobalTypes.CHANGE, callback);
        }
        _sync(datacenters) {
            this._map = {};
            for (let i = 0; i < datacenters.length; i++) {
                datacenters[i] = Object.freeze(datacenters[i]);
                this._map[datacenters[i].id] = i;
            }
            this._datacenters = Object.freeze(datacenters);
            this.emitChange();
        }
        _callback(action) {
            switch (action.type) {
                case GlobalTypes.RESET:
                    this._reset();
                    break;
                case DatacenterTypes.SYNC:
                    this._sync(action.data.datacenters);
                    break;
            }
        }
    }
    exports.default = new DatacentersStore();
    
});
System.registerDynamic("app/components/InstanceDetailed.js", ["npm:react@16.7.0.js", "app/actions/InstanceActions.js", "app/stores/OrganizationsStore.js", "app/stores/ZonesStore.js", "app/components/PageInput.js", "app/components/PageInputButton.js", "app/components/PageInfo.js", "app/components/PageSwitch.js", "app/components/PageSelect.js", "app/components/PageSave.js", "app/components/PageNumInput.js", "app/components/ConfirmButton.js", "app/components/Help.js", "app/components/PageSelectButton.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const InstanceActions = $__require("app/actions/InstanceActions.js");
    const OrganizationsStore_1 = $__require("app/stores/OrganizationsStore.js");
    const ZonesStore_1 = $__require("app/stores/ZonesStore.js");
    const PageInput_1 = $__require("app/components/PageInput.js");
    const PageInputButton_1 = $__require("app/components/PageInputButton.js");
    const PageInfo_1 = $__require("app/components/PageInfo.js");
    const PageSwitch_1 = $__require("app/components/PageSwitch.js");
    const PageSelect_1 = $__require("app/components/PageSelect.js");
    const PageSave_1 = $__require("app/components/PageSave.js");
    const PageNumInput_1 = $__require("app/components/PageNumInput.js");
    const ConfirmButton_1 = $__require("app/components/ConfirmButton.js");
    const Help_1 = $__require("app/components/Help.js");
    const PageSelectButton_1 = $__require("app/components/PageSelectButton.js");
    const css = {
        card: {
            position: 'relative',
            padding: '48px 10px 0 10px',
            width: '100%'
        },
        button: {
            height: '30px'
        },
        controlButton: {
            marginRight: '10px'
        },
        buttons: {
            cursor: 'pointer',
            position: 'absolute',
            top: 0,
            left: 0,
            right: 0,
            padding: '4px',
            height: '39px',
            backgroundColor: 'rgba(0, 0, 0, 0.13)'
        },
        item: {
            margin: '9px 5px 0 5px',
            height: '20px'
        },
        itemsLabel: {
            display: 'block'
        },
        itemsAdd: {
            margin: '8px 0 15px 0'
        },
        group: {
            flex: 1,
            minWidth: '280px',
            margin: '0 10px'
        },
        save: {
            paddingBottom: '10px'
        },
        label: {
            width: '100%',
            maxWidth: '280px'
        },
        status: {
            margin: '6px 0 0 1px'
        },
        icon: {
            marginRight: '3px'
        },
        inputGroup: {
            width: '100%'
        },
        protocol: {
            flex: '0 1 auto'
        },
        port: {
            flex: '1'
        },
        select: {
            margin: '7px 0px 0px 6px'
        },
        role: {
            margin: '9px 5px 0 5px',
            height: '20px'
        }
    };
    class InstanceDetailed extends React.Component {
        constructor(props, context) {
            super(props, context);
            this.onAddNetworkRole = () => {
                let instance;
                if (!this.state.addNetworkRole) {
                    return;
                }
                if (this.state.changed) {
                    instance = Object.assign({}, this.state.instance);
                } else {
                    instance = Object.assign({}, this.props.instance);
                }
                let networkRoles = [...(instance.network_roles || [])];
                if (networkRoles.indexOf(this.state.addNetworkRole) === -1) {
                    networkRoles.push(this.state.addNetworkRole);
                }
                networkRoles.sort();
                instance.network_roles = networkRoles;
                this.setState(Object.assign({}, this.state, { changed: true, message: '', addNetworkRole: '', instance: instance }));
            };
            this.onRemoveNetworkRole = networkRole => {
                let instance;
                if (this.state.changed) {
                    instance = Object.assign({}, this.state.instance);
                } else {
                    instance = Object.assign({}, this.props.instance);
                }
                let networkRoles = [...(instance.network_roles || [])];
                let i = networkRoles.indexOf(networkRole);
                if (i === -1) {
                    return;
                }
                networkRoles.splice(i, 1);
                instance.network_roles = networkRoles;
                this.setState(Object.assign({}, this.state, { changed: true, message: '', addNetworkRole: '', instance: instance }));
            };
            this.onAddUsbDevice = () => {
                let instance;
                let infoUsbDevices = this.props.instance.info.usb_devices || [];
                if (!this.state.addUsbDevice && !infoUsbDevices.length) {
                    return;
                }
                let addDevice = this.state.addUsbDevice;
                if (!addDevice) {
                    addDevice = infoUsbDevices[0].vendor + ':' + infoUsbDevices[0].product;
                }
                if (this.state.changed) {
                    instance = Object.assign({}, this.state.instance);
                } else {
                    instance = Object.assign({}, this.props.instance);
                }
                let usbDevices = [...(instance.usb_devices || [])];
                let index = -1;
                for (let i = 0; i < usbDevices.length; i++) {
                    let dev = usbDevices[i];
                    if (dev.vendor + ':' + dev.product === addDevice) {
                        index = i;
                        break;
                    }
                }
                let device = addDevice.split(':');
                if (index === -1) {
                    usbDevices.push({
                        vendor: device[0],
                        product: device[1]
                    });
                }
                instance.usb_devices = usbDevices;
                this.setState(Object.assign({}, this.state, { changed: true, message: '', addUsbDevice: '', instance: instance }));
            };
            this.onRemoveUsbDevice = device => {
                let instance;
                if (this.state.changed) {
                    instance = Object.assign({}, this.state.instance);
                } else {
                    instance = Object.assign({}, this.props.instance);
                }
                let usbDevices = [...(instance.usb_devices || [])];
                let index = -1;
                for (let i = 0; i < usbDevices.length; i++) {
                    let dev = usbDevices[i];
                    if (dev.vendor + ':' + dev.product == device) {
                        index = i;
                        break;
                    }
                }
                if (index === -1) {
                    return;
                }
                usbDevices.splice(index, 1);
                instance.usb_devices = usbDevices;
                this.setState(Object.assign({}, this.state, { changed: true, message: '', addUsbDevice: '', instance: instance }));
            };
            this.onSave = () => {
                this.setState(Object.assign({}, this.state, { disabled: true }));
                InstanceActions.commit(Object.assign({}, this.state.instance, { state: null })).then(() => {
                    this.setState(Object.assign({}, this.state, { message: 'Your changes have been saved', changed: false, disabled: false }));
                    setTimeout(() => {
                        if (!this.state.changed) {
                            this.setState(Object.assign({}, this.state, { instance: null, changed: false }));
                        }
                    }, 1000);
                    setTimeout(() => {
                        if (!this.state.changed) {
                            this.setState(Object.assign({}, this.state, { message: '' }));
                        }
                    }, 3000);
                }).catch(() => {
                    this.setState(Object.assign({}, this.state, { message: '', disabled: false }));
                });
            };
            this.onDelete = () => {
                this.setState(Object.assign({}, this.state, { disabled: true }));
                InstanceActions.remove(this.props.instance.id).then(() => {
                    this.setState(Object.assign({}, this.state, { disabled: false }));
                }).catch(() => {
                    this.setState(Object.assign({}, this.state, { disabled: false }));
                });
            };
            this.state = {
                disabled: false,
                changed: false,
                message: '',
                instance: null,
                addCert: null,
                addNetworkRole: '',
                addVpc: '',
                addUsbDevice: '',
                forwardedChecked: false
            };
        }
        set(name, val) {
            let instance;
            if (this.state.changed) {
                instance = Object.assign({}, this.state.instance);
            } else {
                instance = Object.assign({}, this.props.instance);
            }
            instance[name] = val;
            this.setState(Object.assign({}, this.state, { changed: true, instance: instance }));
        }
        update(state) {
            this.setState(Object.assign({}, this.state, { disabled: true }));
            InstanceActions.updateMulti([this.props.instance.id], state).then(() => {
                setTimeout(() => {
                    this.setState(Object.assign({}, this.state, { disabled: false }));
                }, 250);
            }).catch(() => {
                this.setState(Object.assign({}, this.state, { disabled: false }));
            });
        }
        render() {
            let instance = this.state.instance || this.props.instance;
            let info = this.props.instance.info || {};
            let org = OrganizationsStore_1.default.organization(this.props.instance.organization);
            let zone = ZonesStore_1.default.zone(this.props.instance.zone);
            let privateIps = this.props.instance.private_ips;
            if (!privateIps || !privateIps.length) {
                privateIps = 'None';
            }
            let privateIps6 = this.props.instance.private_ips6;
            if (!privateIps6 || !privateIps6.length) {
                privateIps6 = 'None';
            }
            let publicIps = this.props.instance.public_ips;
            if (!publicIps || !publicIps.length) {
                publicIps = 'None';
            }
            let publicIps6 = this.props.instance.public_ips6;
            if (!publicIps6 || !publicIps6.length) {
                publicIps6 = 'None';
            }
            let hostIps = this.props.instance.host_ips;
            if (!hostIps || !hostIps.length) {
                hostIps = 'None';
            }
            let statusClass = '';
            switch (instance.status) {
                case 'Running':
                    statusClass += 'bp3-text-intent-success';
                    break;
                case 'Restart Required':
                    statusClass += ' bp3-text-intent-warning';
                    break;
                case 'Stopped':
                case 'Failed':
                case 'Destroying':
                    statusClass += 'bp3-text-intent-danger';
                    break;
            }
            let networkRoles = [];
            for (let networkRole of instance.network_roles || []) {
                networkRoles.push(React.createElement("div", { className: "bp3-tag bp3-tag-removable bp3-intent-primary", style: css.role, key: networkRole }, networkRole, React.createElement("button", { className: "bp3-tag-remove", disabled: this.state.disabled, onMouseUp: () => {
                        this.onRemoveNetworkRole(networkRole);
                    } })));
            }
            let hasVpcs = false;
            let vpcsSelect = [];
            if (this.props.vpcs && this.props.vpcs.length) {
                vpcsSelect.push(React.createElement("option", { key: "null", value: "" }, "Select Vpc"));
                for (let vpc of this.props.vpcs) {
                    if (vpc.organization !== instance.organization) {
                        continue;
                    }
                    hasVpcs = true;
                    vpcsSelect.push(React.createElement("option", { key: vpc.id, value: vpc.id }, vpc.name));
                }
            }
            if (!hasVpcs) {
                vpcsSelect = [React.createElement("option", { key: "null", value: "" }, "No Vpcs")];
            }
            let domainsSelect = [React.createElement("option", { key: "null", value: "" }, "No Domain")];
            if (this.props.domains && this.props.domains.length) {
                for (let domain of this.props.domains) {
                    if (domain.organization !== instance.organization) {
                        continue;
                    }
                    domainsSelect.push(React.createElement("option", { key: domain.id, value: domain.id }, domain.name));
                }
            }
            let usbDevices = [];
            for (let device of instance.usb_devices || []) {
                let key = device.vendor + ':' + device.product;
                usbDevices.push(React.createElement("div", { className: "bp3-tag bp3-tag-removable bp3-intent-primary", style: css.item, key: key }, key, React.createElement("button", { disabled: this.state.disabled, className: "bp3-tag-remove", onMouseUp: () => {
                        this.onRemoveUsbDevice(key);
                    } })));
            }
            let infoUsbDevices = this.props.instance.info.usb_devices;
            let usbDevicesSelect = [];
            for (let i = 0; i < (infoUsbDevices || []).length; i++) {
                let device = infoUsbDevices[i];
                usbDevicesSelect.push(React.createElement("option", { key: i, value: device.vendor + ':' + device.product }, device.name + ' (' + device.vendor + ':' + device.product + ')'));
            }
            let fields = [{
                label: 'ID',
                value: this.props.instance.id || 'None'
            }, {
                label: 'Organization',
                value: org ? org.name : this.props.instance.organization || 'None'
            }, {
                label: 'Zone',
                value: zone ? zone.name : this.props.instance.zone || 'None'
            }, {
                label: 'Node',
                value: info.node || 'None'
            }, {
                label: 'State',
                value: (this.props.instance.state || 'None') + ':' + (this.props.instance.vm_state || 'None')
            }, {
                label: 'Uptime',
                value: this.props.instance.uptime || '-'
            }, {
                label: 'Public MAC Address',
                value: this.props.instance.public_mac || 'Unknown',
                copy: true
            }, {
                label: 'Public IPv4',
                value: publicIps,
                copy: true
            }, {
                label: 'Public IPv6',
                value: publicIps6,
                copy: true
            }, {
                label: 'Private IPv4',
                value: privateIps,
                copy: true
            }, {
                label: 'Private IPv6',
                value: privateIps6,
                copy: true
            }, {
                label: 'Host IPv4',
                value: hostIps,
                copy: true
            }];
            if (this.props.instance.vnc) {
                fields.push({
                    label: 'VNC Port',
                    value: this.props.instance.vnc_display + 5900
                }, {
                    label: 'VNC Password',
                    value: this.props.instance.vnc_password
                });
            }
            fields.push({
                label: 'Disks',
                value: info.disks || ''
            }, {
                label: 'Firewall Rules',
                value: this.props.instance.info.firewall_rules || ''
            }, {
                label: 'Authorities',
                value: this.props.instance.info.authorities || ''
            });
            return React.createElement("td", { className: "bp3-cell", colSpan: 6, style: css.card }, React.createElement("div", { className: "layout horizontal wrap" }, React.createElement("div", { style: css.group }, React.createElement("div", { className: "layout horizontal", style: css.buttons, onClick: evt => {
                    let target = evt.target;
                    if (target.className.indexOf('open-ignore') !== -1) {
                        return;
                    }
                    this.props.onClose();
                } }, React.createElement("div", null, React.createElement("label", { className: "bp3-control bp3-checkbox open-ignore", style: css.select }, React.createElement("input", { type: "checkbox", className: "open-ignore", checked: this.props.selected, onClick: evt => {
                    this.props.onSelect(evt.shiftKey);
                } }), React.createElement("span", { className: "bp3-control-indicator open-ignore" }))), React.createElement("div", { className: statusClass, style: css.status }, React.createElement("span", { style: css.icon, hidden: !instance.status, className: "bp3-icon-standard bp3-icon-power" }), instance.status), React.createElement("div", { className: "flex" }), React.createElement(ConfirmButton_1.default, { className: "bp3-minimal bp3-intent-danger bp3-icon-trash open-ignore", style: css.button, progressClassName: "bp3-intent-danger", confirmMsg: "Confirm instance remove", disabled: this.state.disabled, onConfirm: this.onDelete })), React.createElement(PageInput_1.default, { label: "Name", help: "Name of instance", type: "text", placeholder: "Enter name", value: instance.name, onChange: val => {
                    this.set('name', val);
                } }), React.createElement(PageNumInput_1.default, { label: "Memory Size", help: "Instance memory size in megabytes.", min: 256, minorStepSize: 256, stepSize: 512, majorStepSize: 1024, disabled: this.state.disabled, selectAllOnFocus: true, onChange: val => {
                    this.set('memory', val);
                }, value: instance.memory }), React.createElement(PageNumInput_1.default, { label: "Processors", help: "Number of instance processors.", min: 1, minorStepSize: 1, stepSize: 1, majorStepSize: 2, disabled: this.state.disabled, selectAllOnFocus: true, onChange: val => {
                    this.set('processors', val);
                }, value: instance.processors }), React.createElement("label", { className: "bp3-label" }, "Network Roles", React.createElement(Help_1.default, { title: "Network Roles", content: "Network roles that will be matched with firewall rules. Network roles are case-sensitive." }), React.createElement("div", null, networkRoles)), React.createElement(PageInputButton_1.default, { disabled: this.state.disabled, buttonClass: "bp3-intent-success bp3-icon-add", label: "Add", type: "text", placeholder: "Add role", value: this.state.addNetworkRole, onChange: val => {
                    this.setState(Object.assign({}, this.state, { addNetworkRole: val }));
                }, onSubmit: this.onAddNetworkRole }), React.createElement("label", { className: "bp3-label", style: css.label, hidden: infoUsbDevices === null }, "USB Devices", React.createElement(Help_1.default, { title: "USB Devices", content: "USB devices to for host passthrough to instance." }), React.createElement("div", null, usbDevices)), React.createElement(PageSelectButton_1.default, { hidden: infoUsbDevices === null, label: "Add Device", value: this.state.addUsbDevice, disabled: !usbDevicesSelect.length || this.state.disabled, buttonClass: "bp3-intent-success", onChange: val => {
                    this.setState(Object.assign({}, this.state, { addUsbDevice: val }));
                }, onSubmit: this.onAddUsbDevice }, usbDevicesSelect), React.createElement(PageSelect_1.default, { disabled: this.state.disabled || !hasVpcs, label: "VPC", help: "VPC for instance.", value: instance.vpc, onChange: val => {
                    this.set('vpc', val);
                } }, vpcsSelect), React.createElement(PageSelect_1.default, { disabled: this.state.disabled, label: "DNS Domain", help: "Domain to create DNS name using instance name.", value: instance.domain, onChange: val => {
                    this.set('domain', val);
                } }, domainsSelect), React.createElement(PageSwitch_1.default, { disabled: this.state.disabled, label: "VNC server", help: "Enable VNC server for remote control of instance.", checked: instance.vnc, onToggle: () => {
                    this.set('vnc', !instance.vnc);
                } }), React.createElement(PageSwitch_1.default, { disabled: this.state.disabled, label: "Delete protection", help: "Block instance and any attached disks from being deleted.", checked: instance.delete_protection, onToggle: () => {
                    this.set('delete_protection', !instance.delete_protection);
                } }), React.createElement(PageSwitch_1.default, { label: "Public address", help: "Enable or disable public address for instance. Node must have network mode configured to assign public address.", checked: !instance.no_public_address, onToggle: () => {
                    this.set('no_public_address', !instance.no_public_address);
                } }), React.createElement(PageSwitch_1.default, { label: "Host address", help: "Enable or disable host address for instance. Node must have host networking configured to assign host address.", checked: !instance.no_host_address, onToggle: () => {
                    this.set('no_host_address', !instance.no_host_address);
                } })), React.createElement("div", { style: css.group }, React.createElement(PageInfo_1.default, { fields: fields }))), React.createElement(PageSave_1.default, { style: css.save, hidden: !this.state.instance && !this.state.message, message: this.state.message, changed: this.state.changed, disabled: this.state.disabled, light: true, onCancel: () => {
                    this.setState(Object.assign({}, this.state, { changed: false, forwardedChecked: false, instance: null }));
                }, onSave: this.onSave }, React.createElement(ConfirmButton_1.default, { label: "Start", className: "bp3-intent-success bp3-icon-power", progressClassName: "bp3-intent-success", style: css.controlButton, hidden: this.props.instance.state !== 'stop', disabled: this.state.disabled, onConfirm: () => {
                    this.update('start');
                } }), React.createElement(ConfirmButton_1.default, { label: "Stop", className: "bp3-intent-danger bp3-icon-power", progressClassName: "bp3-intent-danger", style: css.controlButton, hidden: this.props.instance.state !== 'start', disabled: this.state.disabled, onConfirm: () => {
                    this.update('stop');
                } })));
        }
    }
    exports.default = InstanceDetailed;
    
});
System.registerDynamic("app/stores/ZonesStore.js", ["app/dispatcher/Dispatcher.js", "app/EventEmitter.js", "app/types/ZoneTypes.js", "app/types/GlobalTypes.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const Dispatcher_1 = $__require("app/dispatcher/Dispatcher.js");
    const EventEmitter_1 = $__require("app/EventEmitter.js");
    const ZoneTypes = $__require("app/types/ZoneTypes.js");
    const GlobalTypes = $__require("app/types/GlobalTypes.js");
    class ZonesStore extends EventEmitter_1.default {
        constructor() {
            super(...arguments);
            this._zones = Object.freeze([]);
            this._map = {};
            this._token = Dispatcher_1.default.register(this._callback.bind(this));
        }
        _reset() {
            this._zones = Object.freeze([]);
            this._map = {};
            this.emitChange();
        }
        get zones() {
            return this._zones;
        }
        get zonesM() {
            let zones = [];
            this._zones.forEach(zone => {
                zones.push(Object.assign({}, zone));
            });
            return zones;
        }
        zone(id) {
            let i = this._map[id];
            if (i === undefined) {
                return null;
            }
            return this._zones[i];
        }
        emitChange() {
            this.emitDefer(GlobalTypes.CHANGE);
        }
        addChangeListener(callback) {
            this.on(GlobalTypes.CHANGE, callback);
        }
        removeChangeListener(callback) {
            this.removeListener(GlobalTypes.CHANGE, callback);
        }
        _sync(zones) {
            this._map = {};
            for (let i = 0; i < zones.length; i++) {
                zones[i] = Object.freeze(zones[i]);
                this._map[zones[i].id] = i;
            }
            this._zones = Object.freeze(zones);
            this.emitChange();
        }
        _callback(action) {
            switch (action.type) {
                case GlobalTypes.RESET:
                    this._reset();
                    break;
                case ZoneTypes.SYNC:
                    this._sync(action.data.zones);
                    break;
            }
        }
    }
    exports.default = new ZonesStore();
    
});
System.registerDynamic("app/components/Instance.js", ["npm:react@16.7.0.js", "app/components/InstanceDetailed.js", "app/stores/ZonesStore.js", "app/stores/NodesStore.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const InstanceDetailed_1 = $__require("app/components/InstanceDetailed.js");
    const ZonesStore_1 = $__require("app/stores/ZonesStore.js");
    const NodesStore_1 = $__require("app/stores/NodesStore.js");
    const css = {
        card: {
            display: 'table-row',
            width: '100%',
            padding: 0,
            boxShadow: 'none',
            cursor: 'pointer'
        },
        cardOpen: {
            display: 'table-row',
            width: '100%',
            padding: 0,
            boxShadow: 'none',
            position: 'relative'
        },
        select: {
            margin: '2px 0 0 0',
            paddingTop: '1px',
            minHeight: '18px'
        },
        name: {
            verticalAlign: 'top',
            display: 'table-cell',
            padding: '8px'
        },
        nameSpan: {
            margin: '1px 5px 0 0'
        },
        item: {
            verticalAlign: 'top',
            display: 'table-cell',
            padding: '9px',
            whiteSpace: 'nowrap'
        },
        icon: {
            marginRight: '3px'
        },
        bars: {
            verticalAlign: 'top',
            display: 'table-cell',
            padding: '8px',
            width: '30px'
        },
        bar: {
            height: '6px',
            marginBottom: '1px'
        },
        barLast: {
            height: '6px'
        }
    };
    class Instance extends React.Component {
        render() {
            let instance = this.props.instance;
            if (this.props.open) {
                return React.createElement("div", { className: "bp3-card bp3-row", style: css.cardOpen }, React.createElement(InstanceDetailed_1.default, { instance: this.props.instance, vpcs: this.props.vpcs, domains: this.props.domains, selected: this.props.selected, onSelect: this.props.onSelect, onClose: () => {
                        this.props.onOpen();
                    } }));
            }
            let active = true;
            let node = NodesStore_1.default.node(this.props.instance.node);
            let nodeName = node ? node.name : null;
            let zone = ZonesStore_1.default.zone(this.props.instance.zone);
            let zoneName = zone ? zone.name : null;
            let cardStyle = Object.assign({}, css.card);
            if (!active) {
                cardStyle.opacity = 0.6;
            }
            let publicIp = '';
            let privateIp = '';
            if (instance.public_ips && instance.public_ips.length > 0) {
                publicIp = instance.public_ips[0];
            } else if (instance.host_ips && instance.host_ips.length > 0) {
                publicIp = instance.host_ips[0];
            }
            if (instance.private_ips && instance.private_ips.length > 0) {
                privateIp = instance.private_ips[0];
            }
            let statusClass = 'bp3-cell';
            switch (instance.status) {
                case 'Running':
                    statusClass += ' bp3-text-intent-success';
                    break;
                case 'Restart Required':
                    statusClass += ' bp3-text-intent-warning';
                    break;
                case 'Stopped':
                case 'Failed':
                case 'Destroying':
                    statusClass += ' bp3-text-intent-danger';
                    break;
            }
            return React.createElement("div", { className: "bp3-card bp3-row", style: cardStyle, onClick: evt => {
                    let target = evt.target;
                    if (target.className.indexOf('open-ignore') !== -1) {
                        return;
                    }
                    this.props.onOpen();
                } }, React.createElement("div", { className: "bp3-cell", style: css.name }, React.createElement("div", { className: "layout horizontal" }, React.createElement("label", { className: "bp3-control bp3-checkbox open-ignore", style: css.select }, React.createElement("input", { type: "checkbox", className: "open-ignore", checked: this.props.selected, onClick: evt => {
                    this.props.onSelect(evt.shiftKey);
                } }), React.createElement("span", { className: "bp3-control-indicator open-ignore" })), React.createElement("div", { style: css.nameSpan }, instance.name))), React.createElement("div", { className: statusClass, style: css.item }, React.createElement("span", { style: css.icon, hidden: !instance.status, className: "bp3-icon-standard bp3-icon-power" }), instance.status), React.createElement("div", { className: "bp3-cell", style: css.item }, React.createElement("span", { style: css.icon, hidden: !nodeName, className: "bp3-icon-standard bp3-text-muted bp3-icon-layers" }), nodeName), React.createElement("div", { className: "bp3-cell", style: css.item }, React.createElement("span", { style: css.icon, hidden: !zoneName, className: "bp3-icon-standard bp3-text-muted bp3-icon-layout-circle" }), zoneName), React.createElement("div", { className: "bp3-cell", style: css.item }, React.createElement("span", { style: css.icon, hidden: !publicIp, className: "bp3-icon-standard bp3-text-muted bp3-icon-ip-address" }), publicIp), React.createElement("div", { className: "bp3-cell", style: css.item }, React.createElement("span", { style: css.icon, hidden: !privateIp, className: "bp3-icon-standard bp3-text-muted bp3-icon-ip-address" }), privateIp));
        }
    }
    exports.default = Instance;
    
});
System.registerDynamic("app/stores/ImagesDatacenterStore.js", ["app/dispatcher/Dispatcher.js", "app/EventEmitter.js", "app/types/ImageTypes.js", "app/types/GlobalTypes.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const Dispatcher_1 = $__require("app/dispatcher/Dispatcher.js");
    const EventEmitter_1 = $__require("app/EventEmitter.js");
    const ImageTypes = $__require("app/types/ImageTypes.js");
    const GlobalTypes = $__require("app/types/GlobalTypes.js");
    class ImagesDatacenterStore extends EventEmitter_1.default {
        constructor() {
            super(...arguments);
            this._images = Object.freeze([]);
            this._map = {};
            this._token = Dispatcher_1.default.register(this._callback.bind(this));
        }
        _reset() {
            this._images = Object.freeze([]);
            this._map = {};
            this.emitChange();
        }
        get images() {
            return this._images;
        }
        get imagesM() {
            let images = [];
            this._images.forEach(image => {
                images.push(Object.assign({}, image));
            });
            return images;
        }
        image(id) {
            let i = this._map[id];
            if (i === undefined) {
                return null;
            }
            return this._images[i];
        }
        emitChange() {
            this.emitDefer(GlobalTypes.CHANGE);
        }
        addChangeListener(callback) {
            this.on(GlobalTypes.CHANGE, callback);
        }
        removeChangeListener(callback) {
            this.removeListener(GlobalTypes.CHANGE, callback);
        }
        _sync(images) {
            this._map = {};
            for (let i = 0; i < images.length; i++) {
                images[i] = Object.freeze(images[i]);
                this._map[images[i].id] = i;
            }
            this._images = Object.freeze(images);
            this.emitChange();
        }
        _callback(action) {
            switch (action.type) {
                case GlobalTypes.RESET:
                    this._reset();
                    break;
                case ImageTypes.SYNC_DATACENTER:
                    this._sync(action.data.images);
                    break;
            }
        }
    }
    exports.default = new ImagesDatacenterStore();
    
});
System.registerDynamic("app/stores/NodesZoneStore.js", ["app/dispatcher/Dispatcher.js", "app/EventEmitter.js", "app/types/NodeTypes.js", "app/types/GlobalTypes.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const Dispatcher_1 = $__require("app/dispatcher/Dispatcher.js");
    const EventEmitter_1 = $__require("app/EventEmitter.js");
    const NodeTypes = $__require("app/types/NodeTypes.js");
    const GlobalTypes = $__require("app/types/GlobalTypes.js");
    class NodesZoneStore extends EventEmitter_1.default {
        constructor() {
            super(...arguments);
            this._nodes = Object.freeze([]);
            this._map = {};
            this._token = Dispatcher_1.default.register(this._callback.bind(this));
        }
        _reset() {
            this._nodes = Object.freeze([]);
            this._map = {};
            this.emitChange();
        }
        get nodes() {
            return this._nodes;
        }
        get nodesM() {
            let nodes = [];
            this._nodes.forEach(node => {
                nodes.push(Object.assign({}, node));
            });
            return nodes;
        }
        node(id) {
            let i = this._map[id];
            if (i === undefined) {
                return null;
            }
            return this._nodes[i];
        }
        emitChange() {
            this.emitDefer(GlobalTypes.CHANGE);
        }
        addChangeListener(callback) {
            this.on(GlobalTypes.CHANGE, callback);
        }
        removeChangeListener(callback) {
            this.removeListener(GlobalTypes.CHANGE, callback);
        }
        _sync(nodes) {
            this._map = {};
            for (let i = 0; i < nodes.length; i++) {
                nodes[i] = Object.freeze(nodes[i]);
                this._map[nodes[i].id] = i;
            }
            this._nodes = Object.freeze(nodes);
            this.emitChange();
        }
        _callback(action) {
            switch (action.type) {
                case GlobalTypes.RESET:
                    this._reset();
                    break;
                case NodeTypes.SYNC_ZONE:
                    this._sync(action.data.nodes);
                    break;
            }
        }
    }
    exports.default = new NodesZoneStore();
    
});
System.registerDynamic("app/components/InstanceLicense.js", ["npm:react@16.7.0.js", "npm:@blueprintjs/core@3.11.0.js", "app/License.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const Blueprint = $__require("npm:@blueprintjs/core@3.11.0.js");
    const License = $__require("app/License.js");
    const css = {
        dialog: {
            height: '500px',
            width: '90%',
            maxWidth: '700px'
        },
        textarea: {
            resize: 'none',
            fontSize: '12px',
            fontFamily: '"Lucida Console", Monaco, monospace'
        }
    };
    const license = `ORACLE LINUX LICENSE AGREEMENT 

“We,” “us,” “our” and “Oracle” refers to Oracle America, Inc.  “You” and “your” refers to the 
individual or entity that has acquired the Oracle Linux programs.  “Oracle Linux programs” 
refers to the Linux software product which you have acquired.  “License” refers to your right to 
use the Oracle Linux programs under the terms of this Agreement and the licenses referenced 
herein.  This Agreement is governed by the substantive and procedural laws of the United States 
and the State of California and you and Oracle agree to submit to the exclusive jurisdiction of, 
and venue in, the courts of San Francisco or Santa Clara counties in California in any dispute 
arising out of or relating to this Agreement.

We are willing to provide a copy of the Oracle Linux programs to you only upon the condition 
that you accept all of the terms contained in this Agreement.  Read the terms carefully and 
indicate your acceptance by either selecting the “Accept” button at the bottom of the page to 
confirm your acceptance, if you are downloading the Oracle Linux programs, or continuing to 
install the Oracle Linux programs, if you have received this Agreement during the installation 
process.  If you are not willing to be bound by these terms, select the “Do Not Accept” button or 
discontinue the installation process.

1. Grant of Licenses to the Oracle Linux programs. Subject to the terms of this Agreement, 
Oracle grants to you a license to the Oracle Linux programs under the GNU General Public 
License version 2.0. The Oracle Linux programs contain many components developed by Oracle 
and various third parties. The license for each component is located in the licensing 
documentation and/or in the component's source code.  In addition, a list of components may be 
delivered with the Oracle Linux programs and the Additional Oracle Linux programs (as defined 
below) or accessed online at http://oss.oracle.com/linux/legal/oracle-list.html.  The source code 
for the Oracle Linux Programs and the Additional Oracle Linux programs can be found and 
accessed online at https://oss.oracle.com/sources/.  This agreement does not limit, supersede or 
modify your rights under the license associated with any separately licensed individual 
component.

2. Licenses to Additional Oracle Linux programs.  Certain third-party technology (collectively 
the “Additional Oracle Linux programs”) may be included on the same medium or as part of the 
download of Oracle Linux programs you receive, but is not part of the Oracle Linux programs.  
Each Additional Oracle Linux program is licensed solely under the terms of the Mozilla Public 
License, Apache License, Common Public License, GNU Lesser General Public License, 
Netscape Public License or similar license that is included with the relevant Additional Oracle 
Linux program.  

3. Ownership. The Oracle Linux programs and their components and the Additional Oracle 
Linux programs are owned by Oracle or its licensors.  Subject to the licenses granted and/or 
referenced herein, title to the Oracle Linux programs and their components and the Additional 
Oracle Linux programs remains with Oracle and/or its licensors. 

4. Trademark License. You are permitted to distribute unmodified Oracle Linux programs or 
unmodified Additional Oracle Linux programs without removing the trademark(s) owned by 
Oracle or its affiliates that are included in the unmodified Oracle Linux programs or unmodified 
Additional Oracle Linux programs (the “Oracle Linux trademarks”). You may only distribute 
modified Oracle Linux programs or modified Additional Oracle Linux programs if you remove 
relevant images containing the Oracle Linux trademarks. Certain files, identified in 
http://oss.oracle.com/linux/legal/oracle-list.html, include such trademarks. Do not delete these 
files, as deletion may corrupt the Oracle Linux programs or Additional Oracle Linux programs. 
You are not granted any other rights to Oracle Linux trademarks, and you acknowledge that you 
shall not gain any proprietary interest in the Oracle Linux trademarks. All goodwill arising out of 
use of the Oracle Linux trademarks shall inure to the benefit of Oracle or its affiliates. You may 
not use any trademarks owned by Oracle or its affiliates (including “ORACLE”) or potentially 
confusing variations (such as, “ORA”) as a part of your logo(s), product name(s), service 
name(s), company name, or domain name(s) even if such products, services or domains include, 
or are related to, the Oracle Linux programs or Additional Oracle Linux programs. 

5. Limited Warranty. THE ORACLE LINUX PROGRAMS AND ADDITIONAL ORACLE 
LINUX PROGRAMS ARE PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  
WE FURTHER DISCLAIM ALL WARRANTIES, EXPRESS AND IMPLIED, INCLUDING 
WITHOUT LIMITATION, ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR 
FITNESS FOR A PARTICULAR PURPOSE.

6. Limitation of Liability. IN NO EVENT SHALL WE BE LIABLE FOR ANY INDIRECT, 
INCIDENTAL, SPECIAL, PUNITIVE OR CONSEQUENTIAL DAMAGES, OR DAMAGES 
FOR LOSS OF PROFITS, REVENUE, DATA OR DATA USE, INCURRED BY YOU OR 
ANY THIRD PARTY, WHETHER IN AN ACTION IN CONTRACT OR TORT, EVEN IF WE 
HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.  OUR ENTIRE 
LIABILITY FOR DAMAGES HEREUNDER SHALL IN NO EVENT EXCEED ONE 
HUNDRED DOLLARS (U.S.).

7. No Technical Support.  Our technical support organization will not provide technical support, 
phone support, or updates to you for the materials licensed under this Agreement.  Technical 
support, if available, may be acquired from Oracle or its affiliates under a separate agreement.

8. Relationship Between the Parties. The relationship between you and us is that of 
licensee/licensor.  Neither party will represent that it has any authority to assume or create any 
obligation, express or implied, on behalf of the other party, nor to represent the other party as 
agent, employee, franchisee, or in any other capacity.  Nothing in this Agreement shall be 
construed to limit either party's right to independently develop or distribute programs that are 
functionally similar to the other party’s products, so long as proprietary information of the other 
party is not included in such programs.

9. Entire Agreement.  You agree that this Agreement is the complete Agreement for the Oracle 
Linux programs and the Additional Oracle Linux programs, and this Agreement supersedes all 
prior or contemporaneous Agreements or representations.  If any term of this Agreement is found 
to be invalid or unenforceable, the remaining provisions will remain effective. Neither the 
Uniform Computer Information Transactions Act nor the United Nations Convention on the 
International Sale of Goods applies to this agreement.

You can find a copy of the GNU General Public License version 2.0 in the “copying” or 
“license” file included with the Oracle Linux programs or here: 
http://oss.oracle.com/licenses/GPL-2.

OFFER TO PROVIDE SOURCE CODE

For software that you receive from Oracle in binary form that is licensed under an open source 
license that gives you the right to receive the source code for that binary, you can obtain a copy 
of the applicable source code from https://oss.oracle.com/sources/ or 
http://www.oracle.com/goto/opensourcecode.  Alternatively, if the source code for the 
technology was not provided to you with the binary, you can also receive a copy of the source 
code on physical media by submitting a written request to:
 
Oracle America, Inc. 
Attn: Associate General Counsel 
Development and Engineering Legal 
500 Oracle Parkway, 10th Floor 
Redwood Shores, CA 94065 
 
Or, you may send an email to Oracle using the form linked from 
http://www.oracle.com/goto/opensourcecode.  Your written or emailed request should include:
•	The name of the component or binary file(s) for which you are requesting the source code
•	The name and version number of the Oracle product
•	The date you received the Oracle product
•	Your name
•	Your company name (if applicable)
•	Your return mailing address and email
•	A telephone number in the event we need to reach you.
We may charge you a fee to cover the cost of physical media and processing. Your request must 
be sent (i) within three (3) years of the date you received the Oracle product that included the 
component or binary file(s) that are the subject of your request, or (ii) in the case of code 
licensed under the GPL v3, for as long as Oracle offers spare parts or customer support for that 
product model or version.

Last updated 24 March 2017`;
    class Organization extends React.Component {
        render() {
            if (!this.props.open) {
                return React.createElement("div", null);
            }
            return React.createElement("div", null, React.createElement(Blueprint.Dialog, { title: "Oracle Linux End-User License Agreement", style: css.dialog, isOpen: this.props.open, onClose: () => {
                    this.props.onClose();
                } }, React.createElement("textarea", { className: "bp3-dialog-body bp3-input", style: css.textarea, autoCapitalize: "off", spellCheck: false, readOnly: true, value: license }), React.createElement("div", { className: "bp3-dialog-footer" }, React.createElement("div", { className: "bp3-dialog-footer-actions" }, React.createElement("button", { className: "bp3-button bp3-intent-danger", type: "button", onClick: () => {
                    this.props.onClose();
                } }, "Decline"), React.createElement("button", { className: "bp3-button bp3-intent-success", type: "button", onClick: () => {
                    License.setOracle(true);
                    License.save();
                    this.props.onClose();
                } }, "Accept")))));
        }
    }
    exports.default = Organization;
    
});
System.registerDynamic("app/components/PageCreate.js", ["npm:react@16.7.0.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const css = {
        message: {
            marginTop: '6px'
        },
        box: {
            marginTop: '15px'
        },
        button: {
            marginLeft: '10px'
        },
        buttons: {
            flexShrink: 0
        }
    };
    class PageCreate extends React.Component {
        render() {
            let style = this.props.light ? null : css.box;
            if (this.props.style) {
                style = Object.assign({}, style, this.props.style);
            }
            let closedDom;
            if (this.props.closed) {
                closedDom = React.createElement("button", { className: "bp3-button bp3-intent-success bp3-icon-cross", style: css.button, type: "button", onClick: this.props.onCancel }, "Close");
            }
            return React.createElement("div", { className: "layout horizontal", style: style, hidden: this.props.hidden }, React.createElement("div", { className: "flex" }), React.createElement("div", { className: "layout horizontal" }, React.createElement("span", { style: css.message, hidden: !this.props.message }, this.props.message), React.createElement("div", { style: css.buttons }, React.createElement("button", { className: "bp3-button bp3-icon-cross", style: css.button, type: "button", hidden: this.props.closed, disabled: this.props.disabled, onClick: this.props.onCancel }, "Cancel"), React.createElement("button", { className: "bp3-button bp3-intent-success bp3-icon-tick", style: css.button, type: "button", hidden: this.props.closed, disabled: !this.props.changed || this.props.disabled, onClick: this.props.onCreate }, "Create"), closedDom)));
        }
    }
    exports.default = PageCreate;
    
});
System.registerDynamic("app/components/PageNumInput.js", ["npm:react@16.7.0.js", "npm:@blueprintjs/core@3.11.0.js", "app/components/Help.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const Blueprint = $__require("npm:@blueprintjs/core@3.11.0.js");
    const Help_1 = $__require("app/components/Help.js");
    const css = {
        label: {
            display: 'inline-block'
        }
    };
    class PageNumInput extends React.Component {
        render() {
            return React.createElement("div", { hidden: this.props.hidden }, React.createElement("label", { className: "bp3-label", style: css.label }, this.props.label, React.createElement(Help_1.default, { title: this.props.label, content: this.props.help }), React.createElement(Blueprint.NumericInput, { allowNumericCharactersOnly: true, min: this.props.min, minorStepSize: this.props.minorStepSize, stepSize: this.props.stepSize, majorStepSize: this.props.majorStepSize, disabled: this.props.disabled, selectAllOnFocus: this.props.selectAllOnFocus, onValueChange: this.props.onChange, value: this.props.value })));
        }
    }
    exports.default = PageNumInput;
    
});
System.registerDynamic("app/components/InstanceNew.js", ["npm:react@16.7.0.js", "app/Constants.js", "app/License.js", "app/actions/InstanceActions.js", "app/actions/ImageActions.js", "app/actions/NodeActions.js", "app/stores/ImagesDatacenterStore.js", "app/stores/NodesZoneStore.js", "app/components/InstanceLicense.js", "app/components/PageInput.js", "app/components/PageInputButton.js", "app/components/PageCreate.js", "app/components/PageSelect.js", "app/components/PageSwitch.js", "app/components/PageNumInput.js", "app/components/Help.js", "app/stores/OrganizationsStore.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const Constants = $__require("app/Constants.js");
    const License = $__require("app/License.js");
    const InstanceActions = $__require("app/actions/InstanceActions.js");
    const ImageActions = $__require("app/actions/ImageActions.js");
    const NodeActions = $__require("app/actions/NodeActions.js");
    const ImagesDatacenterStore_1 = $__require("app/stores/ImagesDatacenterStore.js");
    const NodesZoneStore_1 = $__require("app/stores/NodesZoneStore.js");
    const InstanceLicense_1 = $__require("app/components/InstanceLicense.js");
    const PageInput_1 = $__require("app/components/PageInput.js");
    const PageInputButton_1 = $__require("app/components/PageInputButton.js");
    const PageCreate_1 = $__require("app/components/PageCreate.js");
    const PageSelect_1 = $__require("app/components/PageSelect.js");
    const PageSwitch_1 = $__require("app/components/PageSwitch.js");
    const PageNumInput_1 = $__require("app/components/PageNumInput.js");
    const Help_1 = $__require("app/components/Help.js");
    const OrganizationsStore_1 = $__require("app/stores/OrganizationsStore.js");
    const css = {
        row: {
            display: 'table-row',
            width: '100%',
            padding: 0,
            boxShadow: 'none',
            position: 'relative'
        },
        card: {
            position: 'relative',
            padding: '10px 10px 0 10px',
            width: '100%'
        },
        buttons: {
            position: 'absolute',
            top: '5px',
            right: '5px'
        },
        item: {
            margin: '9px 5px 0 5px',
            height: '20px'
        },
        itemsLabel: {
            display: 'block'
        },
        itemsAdd: {
            margin: '8px 0 15px 0'
        },
        group: {
            flex: 1,
            minWidth: '280px',
            margin: '0 10px'
        },
        save: {
            paddingBottom: '10px'
        },
        label: {
            width: '100%',
            maxWidth: '280px'
        },
        inputGroup: {
            width: '100%'
        },
        protocol: {
            flex: '0 1 auto'
        },
        port: {
            flex: '1'
        },
        role: {
            margin: '9px 5px 0 5px',
            height: '20px'
        }
    };
    class InstanceNew extends React.Component {
        constructor(props, context) {
            super(props, context);
            this.onChange = () => {
                this.setState(Object.assign({}, this.state, { images: ImagesDatacenterStore_1.default.images, nodes: NodesZoneStore_1.default.nodes }));
            };
            this.onCreate = () => {
                if (this.state.instance.image && this.state.instance.image.indexOf('oracle') && !License.oracle) {
                    this.setState(Object.assign({}, this.state, { licenseOpen: true }));
                    return;
                }
                this.setState(Object.assign({}, this.state, { disabled: true }));
                let instance = Object.assign({}, this.state.instance);
                if (this.props.organizations.length && !instance.organization) {
                    instance.organization = this.props.organizations[0].id;
                }
                InstanceActions.create(instance).then(() => {
                    this.setState(Object.assign({}, this.state, { message: 'Instance created successfully', changed: false }));
                    setTimeout(() => {
                        this.setState(Object.assign({}, this.state, { disabled: false, changed: true }));
                    }, 2000);
                }).catch(() => {
                    this.setState(Object.assign({}, this.state, { message: '', disabled: false }));
                });
            };
            this.onAddNetworkRole = () => {
                if (!this.state.addNetworkRole) {
                    return;
                }
                let instance = Object.assign({}, this.state.instance);
                let networkRoles = [...(instance.network_roles || [])];
                if (networkRoles.indexOf(this.state.addNetworkRole) === -1) {
                    networkRoles.push(this.state.addNetworkRole);
                }
                networkRoles.sort();
                instance.network_roles = networkRoles;
                this.setState(Object.assign({}, this.state, { changed: true, message: '', addNetworkRole: '', instance: instance }));
            };
            this.onRemoveNetworkRole = networkRole => {
                let instance = Object.assign({}, this.state.instance);
                let networkRoles = [...(instance.network_roles || [])];
                let i = networkRoles.indexOf(networkRole);
                if (i === -1) {
                    return;
                }
                networkRoles.splice(i, 1);
                instance.network_roles = networkRoles;
                this.setState(Object.assign({}, this.state, { changed: true, message: '', addNetworkRole: '', instance: instance }));
            };
            this.state = {
                closed: false,
                disabled: false,
                changed: false,
                message: '',
                licenseOpen: false,
                instance: this.default,
                datacenter: '',
                images: [],
                nodes: [],
                addNetworkRole: '',
                addVpc: ''
            };
        }
        componentDidMount() {
            ImagesDatacenterStore_1.default.addChangeListener(this.onChange);
            NodesZoneStore_1.default.addChangeListener(this.onChange);
        }
        componentWillUnmount() {
            ImagesDatacenterStore_1.default.removeChangeListener(this.onChange);
            NodesZoneStore_1.default.removeChangeListener(this.onChange);
        }
        get default() {
            return {
                id: null,
                name: 'New instance',
                init_disk_size: 10,
                memory: 1024,
                processors: 1,
                count: 1
            };
        }
        set(name, val) {
            let instance = Object.assign({}, this.state.instance);
            instance[name] = val;
            this.setState(Object.assign({}, this.state, { changed: true, instance: instance }));
        }
        render() {
            let instance = this.state.instance;
            let hasOrganizations = !!this.props.organizations.length;
            let organizationsSelect = [];
            if (this.props.organizations && this.props.organizations.length) {
                organizationsSelect.push(React.createElement("option", { key: "null", value: "" }, "Select Organization"));
                for (let organization of this.props.organizations) {
                    organizationsSelect.push(React.createElement("option", { key: organization.id, value: organization.id }, organization.name));
                }
            }
            if (!hasOrganizations) {
                organizationsSelect.push(React.createElement("option", { key: "null", value: "" }, "No Organizations"));
            }
            let hasDatacenters = false;
            let datacentersSelect = [];
            if (this.props.datacenters && this.props.datacenters.length) {
                datacentersSelect.push(React.createElement("option", { key: "null", value: "" }, "Select Datacenter"));
                hasDatacenters = true;
                for (let datacenter of this.props.datacenters) {
                    datacentersSelect.push(React.createElement("option", { key: datacenter.id, value: datacenter.id }, datacenter.name));
                }
            }
            if (!hasDatacenters) {
                datacentersSelect.push(React.createElement("option", { key: "null", value: "" }, "No Datacenters"));
            }
            let datacenter = this.state.datacenter;
            let hasZones = false;
            let zonesSelect = [];
            if (this.props.zones && this.props.zones.length) {
                zonesSelect.push(React.createElement("option", { key: "null", value: "" }, "Select Zone"));
                for (let zone of this.props.zones) {
                    if (zone.datacenter !== datacenter) {
                        continue;
                    }
                    hasZones = true;
                    zonesSelect.push(React.createElement("option", { key: zone.id, value: zone.id }, zone.name));
                }
            }
            if (!hasZones) {
                zonesSelect = [React.createElement("option", { key: "null", value: "" }, "No Zones")];
            }
            let hasNodes = false;
            let nodesSelect = [];
            if (this.state.nodes && this.state.nodes.length) {
                nodesSelect.push(React.createElement("option", { key: "null", value: "" }, "Select Node"));
                hasNodes = true;
                for (let node of this.state.nodes) {
                    nodesSelect.push(React.createElement("option", { key: node.id, value: node.id }, node.name));
                }
            }
            if (!hasNodes) {
                nodesSelect = [React.createElement("option", { key: "null", value: "" }, "No Nodes")];
            }
            let hasVpcs = false;
            let vpcsSelect = [];
            if (this.props.vpcs && this.props.vpcs.length) {
                vpcsSelect.push(React.createElement("option", { key: "null", value: "" }, "Select Vpc"));
                for (let vpc of this.props.vpcs) {
                    if (Constants.user) {
                        if (vpc.organization !== OrganizationsStore_1.default.current) {
                            continue;
                        }
                    } else {
                        if (vpc.organization !== instance.organization) {
                            continue;
                        }
                    }
                    hasVpcs = true;
                    vpcsSelect.push(React.createElement("option", { key: vpc.id, value: vpc.id }, vpc.name));
                }
            }
            if (!hasVpcs) {
                vpcsSelect = [React.createElement("option", { key: "null", value: "" }, "No Vpcs")];
            }
            let domainsSelect = [React.createElement("option", { key: "null", value: "" }, "No Domain")];
            if (this.props.domains && this.props.domains.length) {
                for (let domain of this.props.domains) {
                    if (!Constants.user && domain.organization !== instance.organization) {
                        continue;
                    }
                    domainsSelect.push(React.createElement("option", { key: domain.id, value: domain.id }, domain.name));
                }
            }
            let hasImages = false;
            let imagesSelect = [];
            if (this.state.images.length) {
                imagesSelect.push(React.createElement("option", { key: "null", value: "" }, "Select Image"));
                hasImages = true;
                for (let image of this.state.images) {
                    imagesSelect.push(React.createElement("option", { key: image.id, value: image.id }, image.name));
                }
            }
            let networkRoles = [];
            for (let networkRole of instance.network_roles || []) {
                networkRoles.push(React.createElement("div", { className: "bp3-tag bp3-tag-removable bp3-intent-primary", style: css.role, key: networkRole }, networkRole, React.createElement("button", { className: "bp3-tag-remove", disabled: this.state.disabled, onMouseUp: () => {
                        this.onRemoveNetworkRole(networkRole);
                    } })));
            }
            if (!hasImages) {
                imagesSelect = [React.createElement("option", { key: "null", value: "" }, "No Images")];
            }
            return React.createElement("div", { className: "bp3-card bp3-row", style: css.row }, React.createElement("td", { className: "bp3-cell", colSpan: 6, style: css.card }, React.createElement("div", { className: "layout horizontal wrap" }, React.createElement(InstanceLicense_1.default, { open: this.state.licenseOpen, onClose: () => {
                    this.setState(Object.assign({}, this.state, { licenseOpen: false }));
                } }), React.createElement("div", { style: css.group }, React.createElement("div", { style: css.buttons }), React.createElement(PageInput_1.default, { label: "Name", help: "Name of instance. String formatting such as %d or %02d can be used to add the instance number or zero padded number.", type: "text", placeholder: "Enter name", disabled: this.state.disabled, value: instance.name, onChange: val => {
                    this.set('name', val);
                } }), React.createElement(PageSelect_1.default, { disabled: this.state.disabled || !hasOrganizations, hidden: Constants.user, label: "Organization", help: "Organization for instance.", value: instance.organization, onChange: val => {
                    this.set('organization', val);
                } }, organizationsSelect), React.createElement(PageSelect_1.default, { disabled: this.state.disabled || !hasDatacenters, label: "Datacenter", help: "Datacenter for instance.", value: this.state.datacenter, onChange: val => {
                    this.setState(Object.assign({}, this.state, { datacenter: val, instance: Object.assign({}, this.state.instance, { node: '', zone: '', image: '' }) }));
                    ImageActions.syncDatacenter(val);
                    NodeActions.syncZone('');
                } }, datacentersSelect), React.createElement(PageSelect_1.default, { disabled: this.state.disabled || !hasZones, label: "Zone", help: "Zone for instance.", value: instance.zone, onChange: val => {
                    this.setState(Object.assign({}, this.state, { instance: Object.assign({}, this.state.instance, { node: '', zone: val }) }));
                    NodeActions.syncZone(val);
                } }, zonesSelect), React.createElement(PageSelect_1.default, { disabled: this.state.disabled || !hasVpcs, label: "VPC", help: "VPC for instance.", value: instance.vpc, onChange: val => {
                    this.setState(Object.assign({}, this.state, { instance: Object.assign({}, this.state.instance, { vpc: val }) }));
                } }, vpcsSelect), React.createElement(PageSelect_1.default, { disabled: this.state.disabled || !hasNodes, label: "Node", help: "Node to run instance on.", value: instance.node, onChange: val => {
                    this.set('node', val);
                } }, nodesSelect), React.createElement(PageSelect_1.default, { disabled: this.state.disabled, label: "DNS Domain", help: "Domain to create DNS name using instance name.", value: instance.domain, onChange: val => {
                    this.set('domain', val);
                } }, domainsSelect), React.createElement(PageSwitch_1.default, { disabled: this.state.disabled, label: "VNC server", help: "Enable VNC server for remote control of instance.", checked: instance.vnc, onToggle: () => {
                    this.set('vnc', !instance.vnc);
                } }), React.createElement(PageSwitch_1.default, { disabled: this.state.disabled, label: "Start instance", help: "Automatically start instance. Disable to get the public MAC address before instance is started for first time.", checked: !instance.state, onToggle: () => {
                    if (instance.state === 'stop') {
                        this.set('state', '');
                    } else {
                        this.set('state', 'stop');
                    }
                } }), React.createElement(PageSwitch_1.default, { disabled: this.state.disabled, label: "Delete protection", help: "Block instance and any attached disks from being deleted.", checked: instance.delete_protection, onToggle: () => {
                    this.set('delete_protection', !instance.delete_protection);
                } })), React.createElement("div", { style: css.group }, React.createElement(PageSelect_1.default, { disabled: this.state.disabled || !hasImages, label: "Image", help: "Starting image for node.", value: instance.image, onChange: val => {
                    this.set('image', val);
                } }, imagesSelect), React.createElement(PageSwitch_1.default, { label: "Linked disk image", help: "Link to source disk image instead of creating full copy. This will reduce disk size and provide faster startup.", checked: instance.image_backing, onToggle: () => {
                    this.set('image_backing', !instance.image_backing);
                } }), React.createElement("label", { className: "bp3-label" }, "Network Roles", React.createElement(Help_1.default, { title: "Network Roles", content: "Network roles that will be matched with firewall rules. Network roles are case-sensitive." }), React.createElement("div", null, networkRoles)), React.createElement(PageInputButton_1.default, { disabled: this.state.disabled, buttonClass: "bp3-intent-success bp3-icon-add", label: "Add", type: "text", placeholder: "Add role", value: this.state.addNetworkRole, onChange: val => {
                    this.setState(Object.assign({}, this.state, { addNetworkRole: val }));
                }, onSubmit: this.onAddNetworkRole }), React.createElement(PageNumInput_1.default, { label: "Disk Size", help: "Instance memory size in megabytes.", min: 10, minorStepSize: 1, stepSize: 2, majorStepSize: 5, disabled: this.state.disabled, selectAllOnFocus: true, onChange: val => {
                    this.set('init_disk_size', val);
                }, value: instance.init_disk_size }), React.createElement(PageNumInput_1.default, { label: "Memory Size", help: "Instance memory size in megabytes.", min: 256, minorStepSize: 256, stepSize: 512, majorStepSize: 1024, disabled: this.state.disabled, selectAllOnFocus: true, onChange: val => {
                    this.set('memory', val);
                }, value: instance.memory }), React.createElement(PageNumInput_1.default, { label: "Processors", help: "Number of instance processors.", min: 1, minorStepSize: 1, stepSize: 1, majorStepSize: 2, disabled: this.state.disabled, selectAllOnFocus: true, onChange: val => {
                    this.set('processors', val);
                }, value: instance.processors }), React.createElement(PageNumInput_1.default, { label: "Count", help: "Number of instances to create.", min: 1, minorStepSize: 1, stepSize: 1, majorStepSize: 1, disabled: this.state.disabled, selectAllOnFocus: true, onChange: val => {
                    this.set('count', val);
                }, value: instance.count }), React.createElement(PageSwitch_1.default, { label: "Public address", help: "Enable or disable public address for instance. Node must have network mode configured to assign public address.", checked: !instance.no_public_address, onToggle: () => {
                    this.set('no_public_address', !instance.no_public_address);
                } }), React.createElement(PageSwitch_1.default, { label: "Host address", help: "Enable or disable host address for instance. Node must have host networking configured to assign host address.", checked: !instance.no_host_address, onToggle: () => {
                    this.set('no_host_address', !instance.no_host_address);
                } }))), React.createElement(PageCreate_1.default, { style: css.save, hidden: !this.state.instance, message: this.state.message, changed: this.state.changed, disabled: this.state.disabled, closed: this.state.closed, light: true, onCancel: this.props.onClose, onCreate: this.onCreate })));
        }
    }
    exports.default = InstanceNew;
    
});
System.registerDynamic("app/components/InstancesFilter.js", ["npm:react@16.7.0.js", "app/Constants.js", "app/components/SearchInput.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const Constants = $__require("app/Constants.js");
    const SearchInput_1 = $__require("app/components/SearchInput.js");
    const css = {
        filters: {
            margin: '-15px 0 5px 0'
        },
        input: {
            width: '200px',
            margin: '5px'
        },
        role: {
            width: '150px',
            margin: '5px'
        },
        type: {
            margin: '5px'
        },
        check: {
            margin: '12px 5px 8px 5px'
        }
    };
    class InstancesFilter extends React.Component {
        constructor(props, context) {
            super(props, context);
            this.state = {
                menu: false
            };
        }
        render() {
            if (this.props.filter === null) {
                return React.createElement("div", null);
            }
            let organizationsSelect = [React.createElement("option", { key: "key", value: "any" }, "Any Organization")];
            if (this.props.organizations && this.props.organizations.length) {
                for (let organization of this.props.organizations) {
                    organizationsSelect.push(React.createElement("option", { key: organization.id, value: organization.id }, organization.name));
                }
            }
            let nodesSelect = [React.createElement("option", { key: "key", value: "any" }, "Any Node")];
            if (this.props.nodes && this.props.nodes.length) {
                for (let node of this.props.nodes) {
                    nodesSelect.push(React.createElement("option", { key: node.id, value: node.id }, node.name));
                }
            }
            let zonesSelect = [React.createElement("option", { key: "key", value: "any" }, "Any Zone")];
            if (this.props.zones && this.props.zones.length) {
                for (let zone of this.props.zones) {
                    zonesSelect.push(React.createElement("option", { key: zone.id, value: zone.id }, zone.name));
                }
            }
            let vpcsSelect = [React.createElement("option", { key: "key", value: "any" }, "Any VPC")];
            if (this.props.vpcs && this.props.vpcs.length) {
                for (let vpc of this.props.vpcs) {
                    vpcsSelect.push(React.createElement("option", { key: vpc.id, value: vpc.id }, vpc.name));
                }
            }
            return React.createElement("div", { className: "layout horizontal wrap", style: css.filters }, React.createElement(SearchInput_1.default, { style: css.input, placeholder: "Instance ID", value: this.props.filter.id, onChange: val => {
                    let filter = Object.assign({}, this.props.filter);
                    if (val) {
                        filter.id = val;
                    } else {
                        delete filter.id;
                    }
                    this.props.onFilter(filter);
                } }), React.createElement(SearchInput_1.default, { style: css.input, placeholder: "Name", value: this.props.filter.name, onChange: val => {
                    let filter = Object.assign({}, this.props.filter);
                    if (val) {
                        filter.name = val;
                    } else {
                        delete filter.name;
                    }
                    this.props.onFilter(filter);
                } }), React.createElement(SearchInput_1.default, { style: css.role, placeholder: "Network Role", value: this.props.filter.network_role, onChange: val => {
                    let filter = Object.assign({}, this.props.filter);
                    if (val) {
                        filter.network_role = val;
                    } else {
                        delete filter.network_role;
                    }
                    this.props.onFilter(filter);
                } }), React.createElement("div", { className: "bp3-select", style: css.type, hidden: Constants.user }, React.createElement("select", { value: this.props.filter.node || 'any', onChange: evt => {
                    let filter = Object.assign({}, this.props.filter);
                    let val = evt.target.value;
                    if (val === 'any') {
                        delete filter.node;
                    } else {
                        filter.node = val;
                    }
                    this.props.onFilter(filter);
                } }, nodesSelect)), React.createElement("div", { className: "bp3-select", style: css.type }, React.createElement("select", { value: this.props.filter.zone || 'any', onChange: evt => {
                    let filter = Object.assign({}, this.props.filter);
                    let val = evt.target.value;
                    if (val === 'any') {
                        delete filter.zone;
                    } else {
                        filter.zone = val;
                    }
                    this.props.onFilter(filter);
                } }, zonesSelect)), React.createElement("div", { className: "bp3-select", style: css.type }, React.createElement("select", { value: this.props.filter.vpc || 'any', onChange: evt => {
                    let filter = Object.assign({}, this.props.filter);
                    let val = evt.target.value;
                    if (val === 'any') {
                        delete filter.vpc;
                    } else {
                        filter.vpc = val;
                    }
                    this.props.onFilter(filter);
                } }, vpcsSelect)), React.createElement("div", { className: "bp3-select", style: css.type, hidden: Constants.user }, React.createElement("select", { value: this.props.filter.organization || 'any', onChange: evt => {
                    let filter = Object.assign({}, this.props.filter);
                    let val = evt.target.value;
                    if (val === 'any') {
                        delete filter.organization;
                    } else {
                        filter.organization = val;
                    }
                    this.props.onFilter(filter);
                } }, organizationsSelect)));
        }
    }
    exports.default = InstancesFilter;
    
});
System.registerDynamic("app/components/InstancesPage.js", ["npm:react@16.7.0.js", "app/stores/InstancesStore.js", "app/actions/InstanceActions.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const InstancesStore_1 = $__require("app/stores/InstancesStore.js");
    const InstanceActions = $__require("app/actions/InstanceActions.js");
    const css = {
        button: {
            userSelect: 'none',
            margin: '0 5px 0 0'
        },
        buttonLast: {
            userSelect: 'none',
            margin: '0 0 0 0'
        },
        link: {
            cursor: 'pointer',
            userSelect: 'none',
            margin: '7px 5px 0 0'
        },
        current: {
            opacity: 0.5
        }
    };
    class InstancesPage extends React.Component {
        constructor(props, context) {
            super(props, context);
            this.onChange = () => {
                this.setState(Object.assign({}, this.state, { page: InstancesStore_1.default.page, pageCount: InstancesStore_1.default.pageCount, pages: InstancesStore_1.default.pages, count: InstancesStore_1.default.count }));
            };
            this.state = {
                page: InstancesStore_1.default.page,
                pageCount: InstancesStore_1.default.pageCount,
                pages: InstancesStore_1.default.pages,
                count: InstancesStore_1.default.count
            };
        }
        componentDidMount() {
            InstancesStore_1.default.addChangeListener(this.onChange);
        }
        componentWillUnmount() {
            InstancesStore_1.default.removeChangeListener(this.onChange);
        }
        render() {
            let page = this.state.page;
            let pages = this.state.pages;
            if (pages <= 1) {
                return React.createElement("div", null);
            }
            let links = [];
            let start = Math.max(0, page - 7);
            let end = Math.min(pages, start + 15);
            for (let i = start; i < end; i++) {
                links.push(React.createElement("span", { key: i, style: page === i ? Object.assign({}, css.link, css.current) : css.link, onClick: () => {
                        InstanceActions.traverse(i);
                        if (this.props.onPage) {
                            this.props.onPage();
                        }
                    } }, i + 1));
            }
            return React.createElement("div", { className: "layout horizontal center-justified" }, React.createElement("button", { className: "bp3-button bp3-minimal bp3-icon-chevron-backward", hidden: pages < 5, disabled: page === 0, type: "button", onClick: () => {
                    InstanceActions.traverse(0);
                    if (this.props.onPage) {
                        this.props.onPage();
                    }
                } }), React.createElement("button", { className: "bp3-button bp3-minimal bp3-icon-chevron-left", style: css.button, disabled: page === 0, type: "button", onClick: () => {
                    InstanceActions.traverse(Math.max(0, this.state.page - 1));
                    if (this.props.onPage) {
                        this.props.onPage();
                    }
                } }), links, React.createElement("button", { className: "bp3-button bp3-minimal bp3-icon-chevron-right", style: css.button, disabled: page === pages - 1, type: "button", onClick: () => {
                    InstanceActions.traverse(Math.min(this.state.pages - 1, this.state.page + 1));
                    if (this.props.onPage) {
                        this.props.onPage();
                    }
                } }), React.createElement("button", { className: "bp3-button bp3-minimal bp3-icon-chevron-forward", hidden: pages < 5, disabled: page === pages - 1, type: "button", onClick: () => {
                    InstanceActions.traverse(this.state.pages - 1);
                    if (this.props.onPage) {
                        this.props.onPage();
                    }
                } }));
        }
    }
    exports.default = InstancesPage;
    
});
System.registerDynamic("app/components/Instances.js", ["npm:react@16.7.0.js", "app/Constants.js", "app/stores/InstancesStore.js", "app/stores/OrganizationsStore.js", "app/stores/DomainsNameStore.js", "app/stores/VpcsNameStore.js", "app/stores/DatacentersStore.js", "app/stores/NodesStore.js", "app/stores/ZonesStore.js", "app/actions/InstanceActions.js", "app/actions/OrganizationActions.js", "app/actions/DomainActions.js", "app/actions/VpcActions.js", "app/actions/DatacenterActions.js", "app/actions/NodeActions.js", "app/actions/ZoneActions.js", "app/components/Instance.js", "app/components/InstanceNew.js", "app/components/InstancesFilter.js", "app/components/InstancesPage.js", "app/components/Page.js", "app/components/PageHeader.js", "app/components/NonState.js", "app/components/ConfirmButton.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const Constants = $__require("app/Constants.js");
    const InstancesStore_1 = $__require("app/stores/InstancesStore.js");
    const OrganizationsStore_1 = $__require("app/stores/OrganizationsStore.js");
    const DomainsNameStore_1 = $__require("app/stores/DomainsNameStore.js");
    const VpcsNameStore_1 = $__require("app/stores/VpcsNameStore.js");
    const DatacentersStore_1 = $__require("app/stores/DatacentersStore.js");
    const NodesStore_1 = $__require("app/stores/NodesStore.js");
    const ZonesStore_1 = $__require("app/stores/ZonesStore.js");
    const InstanceActions = $__require("app/actions/InstanceActions.js");
    const OrganizationActions = $__require("app/actions/OrganizationActions.js");
    const DomainActions = $__require("app/actions/DomainActions.js");
    const VpcActions = $__require("app/actions/VpcActions.js");
    const DatacenterActions = $__require("app/actions/DatacenterActions.js");
    const NodeActions = $__require("app/actions/NodeActions.js");
    const ZoneActions = $__require("app/actions/ZoneActions.js");
    const Instance_1 = $__require("app/components/Instance.js");
    const InstanceNew_1 = $__require("app/components/InstanceNew.js");
    const InstancesFilter_1 = $__require("app/components/InstancesFilter.js");
    const InstancesPage_1 = $__require("app/components/InstancesPage.js");
    const Page_1 = $__require("app/components/Page.js");
    const PageHeader_1 = $__require("app/components/PageHeader.js");
    const NonState_1 = $__require("app/components/NonState.js");
    const ConfirmButton_1 = $__require("app/components/ConfirmButton.js");
    const css = {
        items: {
            width: '100%',
            marginTop: '-5px',
            display: 'table',
            borderSpacing: '0 5px'
        },
        itemsBox: {
            width: '100%',
            overflowY: 'auto'
        },
        placeholder: {
            opacity: 0,
            width: '100%'
        },
        header: {
            marginTop: '-19px'
        },
        heading: {
            margin: '19px 0 0 0'
        },
        button: {
            margin: '8px 0 0 8px'
        },
        buttons: {
            marginTop: '8px'
        },
        debug: {
            margin: '0 0 4px 0'
        },
        debugButton: {
            opacity: 0.5,
            margin: '8px 0 0 8px'
        }
    };
    class Instances extends React.Component {
        constructor(props, context) {
            super(props, context);
            this.onChange = () => {
                let instances = InstancesStore_1.default.instances;
                let selected = {};
                let curSelected = this.state.selected;
                let opened = {};
                let curOpened = this.state.opened;
                instances.forEach(instance => {
                    if (curSelected[instance.id]) {
                        selected[instance.id] = true;
                    }
                    if (curOpened[instance.id]) {
                        opened[instance.id] = true;
                    }
                });
                this.setState(Object.assign({}, this.state, { instances: instances, filter: InstancesStore_1.default.filter, organizations: OrganizationsStore_1.default.organizations, domains: DomainsNameStore_1.default.domains, vpcs: VpcsNameStore_1.default.vpcs, datacenters: DatacentersStore_1.default.datacenters, nodes: NodesStore_1.default.nodes, zones: ZonesStore_1.default.zones, selected: selected, opened: opened }));
            };
            this.onDelete = () => {
                this.setState(Object.assign({}, this.state, { disabled: true }));
                InstanceActions.removeMulti(Object.keys(this.state.selected)).then(() => {
                    this.setState(Object.assign({}, this.state, { selected: {}, disabled: false }));
                }).catch(() => {
                    this.setState(Object.assign({}, this.state, { disabled: false }));
                });
            };
            this.onForceDelete = () => {
                this.setState(Object.assign({}, this.state, { disabled: true }));
                InstanceActions.forceRemoveMulti(Object.keys(this.state.selected)).then(() => {
                    this.setState(Object.assign({}, this.state, { selected: {}, disabled: false }));
                }).catch(() => {
                    this.setState(Object.assign({}, this.state, { disabled: false }));
                });
            };
            this.state = {
                instances: InstancesStore_1.default.instances,
                filter: InstancesStore_1.default.filter,
                debug: false,
                organizations: OrganizationsStore_1.default.organizations,
                domains: DomainsNameStore_1.default.domains,
                vpcs: VpcsNameStore_1.default.vpcs,
                datacenters: DatacentersStore_1.default.datacenters,
                nodes: NodesStore_1.default.nodes,
                zones: ZonesStore_1.default.zones,
                selected: {},
                opened: {},
                newOpened: false,
                lastSelected: null,
                disabled: false
            };
        }
        get selected() {
            return !!Object.keys(this.state.selected).length;
        }
        get opened() {
            return !!Object.keys(this.state.opened).length;
        }
        componentDidMount() {
            InstancesStore_1.default.addChangeListener(this.onChange);
            OrganizationsStore_1.default.addChangeListener(this.onChange);
            DomainsNameStore_1.default.addChangeListener(this.onChange);
            VpcsNameStore_1.default.addChangeListener(this.onChange);
            DatacentersStore_1.default.addChangeListener(this.onChange);
            NodesStore_1.default.addChangeListener(this.onChange);
            ZonesStore_1.default.addChangeListener(this.onChange);
            InstanceActions.sync();
            OrganizationActions.sync();
            DomainActions.syncName();
            VpcActions.syncNames();
            DatacenterActions.sync();
            NodeActions.sync();
            ZoneActions.sync();
            this.interval = setInterval(() => {
                InstanceActions.sync(true);
            }, 1000);
        }
        componentWillUnmount() {
            InstancesStore_1.default.removeChangeListener(this.onChange);
            OrganizationsStore_1.default.removeChangeListener(this.onChange);
            DomainsNameStore_1.default.removeChangeListener(this.onChange);
            VpcsNameStore_1.default.removeChangeListener(this.onChange);
            DatacentersStore_1.default.removeChangeListener(this.onChange);
            NodesStore_1.default.removeChangeListener(this.onChange);
            ZonesStore_1.default.removeChangeListener(this.onChange);
            clearInterval(this.interval);
        }
        updateSelected(state) {
            this.setState(Object.assign({}, this.state, { disabled: true }));
            InstanceActions.updateMulti(Object.keys(this.state.selected), state).then(() => {
                this.setState(Object.assign({}, this.state, { selected: {}, disabled: false }));
            }).catch(() => {
                this.setState(Object.assign({}, this.state, { disabled: false }));
            });
        }
        render() {
            let instancesDom = [];
            this.state.instances.forEach(instance => {
                instancesDom.push(React.createElement(Instance_1.default, { key: instance.id, instance: instance, domains: this.state.domains, vpcs: this.state.vpcs, selected: !!this.state.selected[instance.id], open: !!this.state.opened[instance.id], onSelect: shift => {
                        let selected = Object.assign({}, this.state.selected);
                        if (shift) {
                            let instances = this.state.instances;
                            let start;
                            let end;
                            for (let i = 0; i < instances.length; i++) {
                                let usr = instances[i];
                                if (usr.id === instance.id) {
                                    start = i;
                                } else if (usr.id === this.state.lastSelected) {
                                    end = i;
                                }
                            }
                            if (start !== undefined && end !== undefined) {
                                if (start > end) {
                                    end = [start, start = end][0];
                                }
                                for (let i = start; i <= end; i++) {
                                    selected[instances[i].id] = true;
                                }
                                this.setState(Object.assign({}, this.state, { lastSelected: instance.id, selected: selected }));
                                return;
                            }
                        }
                        if (selected[instance.id]) {
                            delete selected[instance.id];
                        } else {
                            selected[instance.id] = true;
                        }
                        this.setState(Object.assign({}, this.state, { lastSelected: instance.id, selected: selected }));
                    }, onOpen: () => {
                        let opened = Object.assign({}, this.state.opened);
                        if (opened[instance.id]) {
                            delete opened[instance.id];
                        } else {
                            opened[instance.id] = true;
                        }
                        this.setState(Object.assign({}, this.state, { opened: opened }));
                    } }));
            });
            let newInstanceDom;
            if (this.state.newOpened) {
                newInstanceDom = React.createElement(InstanceNew_1.default, { organizations: this.state.organizations, vpcs: this.state.vpcs, domains: this.state.domains, datacenters: this.state.datacenters, zones: this.state.zones, onClose: () => {
                        this.setState(Object.assign({}, this.state, { newOpened: false }));
                    } });
            }
            let debugClass = 'bp3-button bp3-icon-console ';
            if (this.state.debug) {
                debugClass += 'bp3-active';
            }
            let filterClass = 'bp3-button bp3-intent-primary bp3-icon-filter ';
            if (this.state.filter) {
                filterClass += 'bp3-active';
            }
            return React.createElement(Page_1.default, null, React.createElement(PageHeader_1.default, null, React.createElement("div", { className: "layout horizontal wrap", style: css.header }, React.createElement("h2", { style: css.heading }, "Instances"), React.createElement("div", { className: "flex" }), React.createElement("div", { style: css.buttons }, React.createElement("button", { className: debugClass, style: css.debugButton, hidden: Constants.user, type: "button", onClick: () => {
                    this.setState(Object.assign({}, this.state, { debug: !this.state.debug }));
                } }, "Debug"), React.createElement("button", { className: filterClass, style: css.button, type: "button", onClick: () => {
                    if (this.state.filter === null) {
                        InstanceActions.filter({});
                    } else {
                        InstanceActions.filter(null);
                    }
                } }, "Filters"), React.createElement("button", { className: "bp3-button bp3-intent-warning bp3-icon-chevron-up", style: css.button, disabled: !this.opened, type: "button", onClick: () => {
                    this.setState(Object.assign({}, this.state, { opened: {} }));
                } }, "Collapse All"), React.createElement(ConfirmButton_1.default, { label: "Start Selected", className: "bp3-intent-success bp3-icon-power", progressClassName: "bp3-intent-success", style: css.button, disabled: !this.selected || this.state.disabled, onConfirm: () => {
                    this.updateSelected('start');
                } }), React.createElement(ConfirmButton_1.default, { label: "Stop Selected", className: "bp3-intent-danger bp3-icon-power", progressClassName: "bp3-intent-danger", style: css.button, disabled: !this.selected || this.state.disabled, onConfirm: () => {
                    this.updateSelected('stop');
                } }), React.createElement(ConfirmButton_1.default, { label: "Delete Selected", className: "bp3-intent-danger bp3-icon-delete", progressClassName: "bp3-intent-danger", style: css.button, disabled: !this.selected || this.state.disabled, onConfirm: this.onDelete }), React.createElement("button", { className: "bp3-button bp3-intent-success bp3-icon-add", style: css.button, disabled: this.state.disabled || this.state.newOpened, type: "button", onClick: () => {
                    this.setState(Object.assign({}, this.state, { newOpened: true }));
                } }, "New"))), React.createElement("div", { className: "layout horizontal wrap", style: css.debug, hidden: !this.state.debug }, React.createElement(ConfirmButton_1.default, { label: "Force Delete Selected", className: "bp3-intent-danger bp3-icon-warning-sign", progressClassName: "bp3-intent-danger", style: css.button, disabled: !this.selected || this.state.disabled, onConfirm: this.onForceDelete }))), React.createElement(InstancesFilter_1.default, { filter: this.state.filter, onFilter: filter => {
                    InstanceActions.filter(filter);
                }, nodes: this.state.nodes, zones: this.state.zones, vpcs: this.state.vpcs, organizations: this.state.organizations }), React.createElement("div", { style: css.itemsBox }, React.createElement("div", { style: css.items }, newInstanceDom, instancesDom, React.createElement("tr", { className: "bp3-card bp3-row", style: css.placeholder }, React.createElement("td", { colSpan: 6, style: css.placeholder })))), React.createElement(NonState_1.default, { hidden: !!instancesDom.length, iconClass: "bp3-icon-dashboard", title: "No instances", description: "Add a new instance to get started." }), React.createElement(InstancesPage_1.default, { onPage: () => {
                    this.setState({
                        lastSelected: null
                    });
                } }));
        }
    }
    exports.default = Instances;
    
});
System.registerDynamic("app/components/FirewallRule.js", ["npm:react@16.7.0.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const css = {
        group: {
            width: '100%',
            maxWidth: '310px',
            marginTop: '5px'
        },
        sourceGroup: {
            width: '100%',
            maxWidth: '219px',
            marginTop: '5px'
        },
        protocol: {
            flex: '0 1 auto'
        },
        port: {
            width: '100%'
        },
        portBox: {
            flex: '1'
        },
        other: {
            flex: '0 1 auto',
            width: '52px',
            borderRadius: '0 3px 3px 0'
        }
    };
    class FirewallRule extends React.Component {
        constructor() {
            super(...arguments);
            this.onAddSourceIp = i => {
                let state = this.clone();
                let sourceIps = [...(state.source_ips || [])];
                sourceIps.splice(i + 1, 0, '');
                state.source_ips = sourceIps;
                this.props.onChange(state);
            };
            this.onChangeSourceIp = (i, sourceIp) => {
                let state = this.clone();
                let sourceIps = [...(state.source_ips || [])];
                sourceIps[i] = sourceIp;
                state.source_ips = sourceIps;
                this.props.onChange(state);
            };
            this.onRemoveSourceIp = i => {
                let state = this.clone();
                let sourceIps = [...(state.source_ips || [])];
                sourceIps.splice(i, 1);
                state.source_ips = sourceIps;
                this.props.onChange(state);
            };
        }
        clone() {
            return Object.assign({}, this.props.rule);
        }
        render() {
            let rule = this.props.rule;
            let port = rule.port;
            let placeholder = '';
            switch (rule.protocol) {
                case 'all':
                    port = null;
                    placeholder = 'Allow all traffic';
                    break;
                case 'icmp':
                    port = null;
                    placeholder = 'Allow all ICMP traffic';
                    break;
            }
            let sourceIps = rule.source_ips || [];
            if (sourceIps.length === 0) {
                sourceIps.push('');
            }
            let sourceIpsDoms = [];
            sourceIps.forEach((sourceIp, i) => {
                sourceIpsDoms.push(React.createElement("div", { className: "bp3-control-group", style: css.sourceGroup, key: i }, React.createElement("input", { className: "bp3-input", style: css.port, type: "text", autoCapitalize: "off", spellCheck: false, placeholder: "Source IP range", value: sourceIp, onChange: evt => {
                        this.onChangeSourceIp(i, evt.target.value);
                    } }), React.createElement("button", { className: "bp3-button bp3-minimal bp3-intent-danger bp3-icon-remove", onClick: () => {
                        this.onRemoveSourceIp(i);
                    } }), React.createElement("button", { className: "bp3-button bp3-minimal bp3-intent-success bp3-icon-add", onClick: () => {
                        this.onAddSourceIp(i);
                    } })));
            });
            return React.createElement("div", null, React.createElement("div", { className: "bp3-control-group", style: css.group }, React.createElement("div", { className: "bp3-select", style: css.protocol }, React.createElement("select", { value: rule.protocol, onChange: evt => {
                    let state = this.clone();
                    state.protocol = evt.target.value;
                    if (state.protocol === 'all' || state.protocol === 'icmp') {
                        state.port = null;
                    }
                    this.props.onChange(state);
                } }, React.createElement("option", { value: "all" }, "All Traffic"), React.createElement("option", { value: "icmp" }, "ICMP"), React.createElement("option", { value: "tcp" }, "TCP"), React.createElement("option", { value: "udp" }, "UDP"))), React.createElement("div", { style: css.portBox }, React.createElement("input", { className: "bp3-input", style: css.port, disabled: !!placeholder, type: "text", autoCapitalize: "off", spellCheck: false, placeholder: placeholder || 'Enter port range', value: rule.port || '', onChange: evt => {
                    let state = this.clone();
                    state.port = evt.target.value;
                    this.props.onChange(state);
                } })), React.createElement("button", { className: "bp3-button bp3-minimal bp3-intent-danger bp3-icon-remove", onClick: () => {
                    this.props.onRemove();
                } }), React.createElement("button", { className: "bp3-button bp3-minimal bp3-intent-success bp3-icon-add", onClick: () => {
                    this.props.onAdd();
                } })), sourceIpsDoms);
        }
    }
    exports.default = FirewallRule;
    
});
System.registerDynamic("app/components/FirewallDetailed.js", ["npm:react@16.7.0.js", "app/Constants.js", "app/actions/FirewallActions.js", "app/components/FirewallRule.js", "app/components/PageInput.js", "app/components/PageSelect.js", "app/components/PageInfo.js", "app/components/PageInputButton.js", "app/components/PageSave.js", "app/components/ConfirmButton.js", "app/components/Help.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const Constants = $__require("app/Constants.js");
    const FirewallActions = $__require("app/actions/FirewallActions.js");
    const FirewallRule_1 = $__require("app/components/FirewallRule.js");
    const PageInput_1 = $__require("app/components/PageInput.js");
    const PageSelect_1 = $__require("app/components/PageSelect.js");
    const PageInfo_1 = $__require("app/components/PageInfo.js");
    const PageInputButton_1 = $__require("app/components/PageInputButton.js");
    const PageSave_1 = $__require("app/components/PageSave.js");
    const ConfirmButton_1 = $__require("app/components/ConfirmButton.js");
    const Help_1 = $__require("app/components/Help.js");
    const css = {
        card: {
            position: 'relative',
            padding: '48px 10px 0 10px',
            width: '100%'
        },
        button: {
            height: '30px'
        },
        buttons: {
            cursor: 'pointer',
            position: 'absolute',
            top: 0,
            left: 0,
            right: 0,
            padding: '4px',
            height: '39px',
            backgroundColor: 'rgba(0, 0, 0, 0.13)'
        },
        item: {
            margin: '9px 5px 0 5px',
            height: '20px'
        },
        itemsLabel: {
            display: 'block'
        },
        itemsAdd: {
            margin: '8px 0 15px 0'
        },
        group: {
            flex: 1,
            minWidth: '280px',
            margin: '0 10px'
        },
        save: {
            paddingBottom: '10px'
        },
        label: {
            width: '100%',
            maxWidth: '280px'
        },
        status: {
            margin: '6px 0 0 1px'
        },
        icon: {
            marginRight: '3px'
        },
        inputGroup: {
            width: '100%'
        },
        protocol: {
            flex: '0 1 auto'
        },
        port: {
            flex: '1'
        },
        select: {
            margin: '7px 0px 0px 6px'
        },
        role: {
            margin: '9px 5px 0 5px',
            height: '20px'
        },
        rules: {
            marginBottom: '15px'
        }
    };
    class FirewallDetailed extends React.Component {
        constructor(props, context) {
            super(props, context);
            this.onAddNetworkRole = () => {
                let firewall;
                if (!this.state.addNetworkRole) {
                    return;
                }
                if (this.state.changed) {
                    firewall = Object.assign({}, this.state.firewall);
                } else {
                    firewall = Object.assign({}, this.props.firewall);
                }
                let networkRoles = [...(firewall.network_roles || [])];
                if (networkRoles.indexOf(this.state.addNetworkRole) === -1) {
                    networkRoles.push(this.state.addNetworkRole);
                }
                networkRoles.sort();
                firewall.network_roles = networkRoles;
                this.setState(Object.assign({}, this.state, { changed: true, message: '', addNetworkRole: '', firewall: firewall }));
            };
            this.onRemoveNetworkRole = networkRole => {
                let firewall;
                if (this.state.changed) {
                    firewall = Object.assign({}, this.state.firewall);
                } else {
                    firewall = Object.assign({}, this.props.firewall);
                }
                let networkRoles = [...(firewall.network_roles || [])];
                let i = networkRoles.indexOf(networkRole);
                if (i === -1) {
                    return;
                }
                networkRoles.splice(i, 1);
                firewall.network_roles = networkRoles;
                this.setState(Object.assign({}, this.state, { changed: true, message: '', addNetworkRole: '', firewall: firewall }));
            };
            this.onAddIngress = i => {
                let firewall;
                if (this.state.changed) {
                    firewall = Object.assign({}, this.state.firewall);
                } else {
                    firewall = Object.assign({}, this.props.firewall);
                }
                let ingress = [...firewall.ingress];
                ingress.splice(i + 1, 0, {
                    protocol: 'all',
                    source_ips: ['0.0.0.0/0', '::/0']
                });
                firewall.ingress = ingress;
                this.setState(Object.assign({}, this.state, { changed: true, message: '', firewall: firewall }));
            };
            this.onSave = () => {
                this.setState(Object.assign({}, this.state, { disabled: true }));
                FirewallActions.commit(this.state.firewall).then(() => {
                    this.setState(Object.assign({}, this.state, { message: 'Your changes have been saved', changed: false, disabled: false }));
                    setTimeout(() => {
                        if (!this.state.changed) {
                            this.setState(Object.assign({}, this.state, { firewall: null, changed: false }));
                        }
                    }, 1000);
                    setTimeout(() => {
                        if (!this.state.changed) {
                            this.setState(Object.assign({}, this.state, { message: '' }));
                        }
                    }, 3000);
                }).catch(() => {
                    this.setState(Object.assign({}, this.state, { message: '', disabled: false }));
                });
            };
            this.onDelete = () => {
                this.setState(Object.assign({}, this.state, { disabled: true }));
                FirewallActions.remove(this.props.firewall.id).then(() => {
                    this.setState(Object.assign({}, this.state, { disabled: false }));
                }).catch(() => {
                    this.setState(Object.assign({}, this.state, { disabled: false }));
                });
            };
            this.state = {
                disabled: false,
                changed: false,
                message: '',
                addNetworkRole: null,
                firewall: null,
                ingress: null
            };
        }
        set(name, val) {
            let firewall;
            if (this.state.changed) {
                firewall = Object.assign({}, this.state.firewall);
            } else {
                firewall = Object.assign({}, this.props.firewall);
            }
            firewall[name] = val;
            this.setState(Object.assign({}, this.state, { changed: true, firewall: firewall }));
        }
        onChangeIngress(i, rule) {
            let firewall;
            if (this.state.changed) {
                firewall = Object.assign({}, this.state.firewall);
            } else {
                firewall = Object.assign({}, this.props.firewall);
            }
            let ingress = [...firewall.ingress];
            ingress[i] = rule;
            firewall.ingress = ingress;
            this.setState(Object.assign({}, this.state, { changed: true, message: '', firewall: firewall }));
        }
        onRemoveIngress(i) {
            let firewall;
            if (this.state.changed) {
                firewall = Object.assign({}, this.state.firewall);
            } else {
                firewall = Object.assign({}, this.props.firewall);
            }
            let ingress = [...firewall.ingress];
            ingress.splice(i, 1);
            if (!ingress.length) {
                ingress = [{
                    protocol: 'all',
                    source_ips: ['0.0.0.0/0', '::/0']
                }];
            }
            firewall.ingress = ingress;
            this.setState(Object.assign({}, this.state, { changed: true, message: '', firewall: firewall }));
        }
        render() {
            let firewall = this.state.firewall || this.props.firewall;
            let organizationsSelect = [];
            if (this.props.organizations.length) {
                organizationsSelect.push(React.createElement("option", { key: "null", value: "" }, "Node Firewall"));
                for (let organization of this.props.organizations) {
                    organizationsSelect.push(React.createElement("option", { key: organization.id, value: organization.id }, organization.name));
                }
            }
            let networkRoles = [];
            for (let networkRole of firewall.network_roles || []) {
                networkRoles.push(React.createElement("div", { className: "bp3-tag bp3-tag-removable bp3-intent-primary", style: css.role, key: networkRole }, networkRole, React.createElement("button", { className: "bp3-tag-remove", disabled: this.state.disabled, onMouseUp: () => {
                        this.onRemoveNetworkRole(networkRole);
                    } })));
            }
            let rules = [];
            for (let i = 0; i < firewall.ingress.length; i++) {
                let index = i;
                rules.push(React.createElement(FirewallRule_1.default, { key: index, rule: firewall.ingress[index], onChange: state => {
                        this.onChangeIngress(index, state);
                    }, onAdd: () => {
                        this.onAddIngress(index);
                    }, onRemove: () => {
                        this.onRemoveIngress(index);
                    } }));
            }
            return React.createElement("td", { className: "bp3-cell", colSpan: 5, style: css.card }, React.createElement("div", { className: "layout horizontal wrap" }, React.createElement("div", { style: css.group }, React.createElement("div", { className: "layout horizontal", style: css.buttons, onClick: evt => {
                    let target = evt.target;
                    if (target.className.indexOf('open-ignore') !== -1) {
                        return;
                    }
                    this.props.onClose();
                } }, React.createElement("div", null, React.createElement("label", { className: "bp3-control bp3-checkbox open-ignore", style: css.select }, React.createElement("input", { type: "checkbox", className: "open-ignore", checked: this.props.selected, onClick: evt => {
                    this.props.onSelect(evt.shiftKey);
                } }), React.createElement("span", { className: "bp3-control-indicator open-ignore" }))), React.createElement("div", { className: "flex" }), React.createElement(ConfirmButton_1.default, { className: "bp3-minimal bp3-intent-danger bp3-icon-trash open-ignore", style: css.button, progressClassName: "bp3-intent-danger", confirmMsg: "Confirm firewall remove", disabled: this.state.disabled, onConfirm: this.onDelete })), React.createElement(PageInput_1.default, { label: "Name", help: "Name of firewall", type: "text", placeholder: "Enter name", value: firewall.name, onChange: val => {
                    this.set('name', val);
                } }), React.createElement("label", { style: css.itemsLabel }, "Ingress Rules", React.createElement(Help_1.default, { title: "Ingress Rules", content: "Firewall rules." })), React.createElement("div", { style: css.rules }, rules)), React.createElement("div", { style: css.group }, React.createElement(PageInfo_1.default, { fields: [{
                    label: 'ID',
                    value: this.props.firewall.id || 'Unknown'
                }] }), React.createElement(PageSelect_1.default, { disabled: this.state.disabled, hidden: Constants.user, label: "Organization", help: "Organization for firewall, both the organaization and role must match. Select node firewall to match node network roles.", value: firewall.organization, onChange: val => {
                    this.set('organization', val);
                } }, organizationsSelect), React.createElement("label", { className: "bp3-label" }, "Network Roles", React.createElement(Help_1.default, { title: "Network Roles", content: "Network roles that will be matched with firewall rules. Network roles are case-sensitive." }), React.createElement("div", null, networkRoles)), React.createElement(PageInputButton_1.default, { disabled: this.state.disabled, buttonClass: "bp3-intent-success bp3-icon-add", label: "Add", type: "text", placeholder: "Add role", value: this.state.addNetworkRole, onChange: val => {
                    this.setState(Object.assign({}, this.state, { addNetworkRole: val }));
                }, onSubmit: this.onAddNetworkRole }))), React.createElement(PageSave_1.default, { style: css.save, hidden: !this.state.firewall && !this.state.message, message: this.state.message, changed: this.state.changed, disabled: this.state.disabled, light: true, onCancel: () => {
                    this.setState(Object.assign({}, this.state, { changed: false, firewall: null }));
                }, onSave: this.onSave }));
        }
    }
    exports.default = FirewallDetailed;
    
});
System.registerDynamic("app/components/Firewall.js", ["npm:react@16.7.0.js", "app/utils/MiscUtils.js", "app/stores/OrganizationsStore.js", "app/components/FirewallDetailed.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const MiscUtils = $__require("app/utils/MiscUtils.js");
    const OrganizationsStore_1 = $__require("app/stores/OrganizationsStore.js");
    const FirewallDetailed_1 = $__require("app/components/FirewallDetailed.js");
    const css = {
        card: {
            display: 'table-row',
            width: '100%',
            padding: 0,
            boxShadow: 'none',
            cursor: 'pointer'
        },
        cardOpen: {
            display: 'table-row',
            width: '100%',
            padding: 0,
            boxShadow: 'none',
            position: 'relative'
        },
        select: {
            margin: '2px 0 0 0',
            paddingTop: '1px',
            minHeight: '18px'
        },
        name: {
            verticalAlign: 'top',
            display: 'table-cell',
            padding: '8px'
        },
        nameSpan: {
            margin: '1px 5px 0 0'
        },
        item: {
            verticalAlign: 'top',
            display: 'table-cell',
            padding: '9px',
            whiteSpace: 'nowrap'
        },
        icon: {
            marginRight: '3px'
        },
        bars: {
            verticalAlign: 'top',
            display: 'table-cell',
            padding: '8px',
            width: '30px'
        },
        bar: {
            height: '6px',
            marginBottom: '1px'
        },
        barLast: {
            height: '6px'
        },
        roles: {
            verticalAlign: 'top',
            display: 'table-cell',
            padding: '0 8px 8px 8px'
        },
        tag: {
            margin: '8px 5px 0 5px',
            height: '20px'
        }
    };
    class Firewall extends React.Component {
        render() {
            let firewall = this.props.firewall;
            if (this.props.open) {
                return React.createElement("div", { className: "bp3-card bp3-row", style: css.cardOpen }, React.createElement(FirewallDetailed_1.default, { organizations: this.props.organizations, firewall: this.props.firewall, selected: this.props.selected, onSelect: this.props.onSelect, onClose: () => {
                        this.props.onOpen();
                    } }));
            }
            let active = true;
            let cardStyle = Object.assign({}, css.card);
            if (!active) {
                cardStyle.opacity = 0.6;
            }
            let networkRoles = [];
            for (let networkRole of firewall.network_roles || []) {
                networkRoles.push(React.createElement("div", { className: "bp3-tag bp3-intent-primary", style: css.tag, key: networkRole }, networkRole));
            }
            let orgName = '';
            if (!MiscUtils.objectIdNil(firewall.organization)) {
                let org = OrganizationsStore_1.default.organization(firewall.organization);
                orgName = org ? org.name : firewall.organization;
            } else {
                orgName = 'Node Firewall';
            }
            return React.createElement("div", { className: "bp3-card bp3-row", style: cardStyle, onClick: evt => {
                    let target = evt.target;
                    if (target.className.indexOf('open-ignore') !== -1) {
                        return;
                    }
                    this.props.onOpen();
                } }, React.createElement("div", { className: "bp3-cell", style: css.name }, React.createElement("div", { className: "layout horizontal" }, React.createElement("label", { className: "bp3-control bp3-checkbox open-ignore", style: css.select }, React.createElement("input", { type: "checkbox", className: "open-ignore", checked: this.props.selected, onClick: evt => {
                    this.props.onSelect(evt.shiftKey);
                } }), React.createElement("span", { className: "bp3-control-indicator open-ignore" })), React.createElement("div", { style: css.nameSpan }, firewall.name))), React.createElement("div", { className: "bp3-cell", style: css.item }, React.createElement("span", { style: css.icon, className: 'bp3-icon-standard bp3-text-muted ' + (firewall.organization ? 'bp3-icon-people' : 'bp3-icon-layers') }), orgName), React.createElement("div", { className: "flex bp3-cell", style: css.roles }, networkRoles));
        }
    }
    exports.default = Firewall;
    
});
System.registerDynamic("app/components/FirewallsFilter.js", ["npm:react@16.7.0.js", "app/Constants.js", "app/components/SearchInput.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const Constants = $__require("app/Constants.js");
    const SearchInput_1 = $__require("app/components/SearchInput.js");
    const css = {
        filters: {
            margin: '-15px 0 5px 0'
        },
        input: {
            width: '200px',
            margin: '5px'
        },
        role: {
            width: '150px',
            margin: '5px'
        },
        type: {
            margin: '5px'
        },
        check: {
            margin: '12px 5px 8px 5px'
        }
    };
    class FirewallsFilter extends React.Component {
        constructor(props, context) {
            super(props, context);
            this.state = {
                menu: false
            };
        }
        render() {
            if (this.props.filter === null) {
                return React.createElement("div", null);
            }
            let organizationsSelect = [React.createElement("option", { key: "key", value: "any" }, "Any")];
            if (this.props.organizations && this.props.organizations.length) {
                for (let organization of this.props.organizations) {
                    organizationsSelect.push(React.createElement("option", { key: organization.id, value: organization.id }, organization.name));
                }
            }
            return React.createElement("div", { className: "layout horizontal wrap", style: css.filters }, React.createElement(SearchInput_1.default, { style: css.input, placeholder: "Firewall ID", value: this.props.filter.id, onChange: val => {
                    let filter = Object.assign({}, this.props.filter);
                    if (val) {
                        filter.id = val;
                    } else {
                        delete filter.id;
                    }
                    this.props.onFilter(filter);
                } }), React.createElement(SearchInput_1.default, { style: css.input, placeholder: "Name", value: this.props.filter.name, onChange: val => {
                    let filter = Object.assign({}, this.props.filter);
                    if (val) {
                        filter.name = val;
                    } else {
                        delete filter.name;
                    }
                    this.props.onFilter(filter);
                } }), React.createElement(SearchInput_1.default, { style: css.role, placeholder: "Network Role", value: this.props.filter.network_role, onChange: val => {
                    let filter = Object.assign({}, this.props.filter);
                    if (val) {
                        filter.network_role = val;
                    } else {
                        delete filter.network_role;
                    }
                    this.props.onFilter(filter);
                } }), React.createElement("div", { className: "bp3-select", style: css.type, hidden: Constants.user }, React.createElement("select", { value: this.props.filter.organization || 'any', onChange: evt => {
                    let filter = Object.assign({}, this.props.filter);
                    let val = evt.target.value;
                    if (val === 'any') {
                        delete filter.organization;
                    } else {
                        filter.organization = val;
                    }
                    this.props.onFilter(filter);
                } }, organizationsSelect)));
        }
    }
    exports.default = FirewallsFilter;
    
});
System.registerDynamic("app/components/FirewallsPage.js", ["npm:react@16.7.0.js", "app/stores/FirewallsStore.js", "app/actions/FirewallActions.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const FirewallsStore_1 = $__require("app/stores/FirewallsStore.js");
    const FirewallActions = $__require("app/actions/FirewallActions.js");
    const css = {
        button: {
            userSelect: 'none',
            margin: '0 5px 0 0'
        },
        buttonLast: {
            userSelect: 'none',
            margin: '0 0 0 0'
        },
        link: {
            cursor: 'pointer',
            userSelect: 'none',
            margin: '7px 5px 0 0'
        },
        current: {
            opacity: 0.5
        }
    };
    class FirewallsPage extends React.Component {
        constructor(props, context) {
            super(props, context);
            this.onChange = () => {
                this.setState(Object.assign({}, this.state, { page: FirewallsStore_1.default.page, pageCount: FirewallsStore_1.default.pageCount, pages: FirewallsStore_1.default.pages, count: FirewallsStore_1.default.count }));
            };
            this.state = {
                page: FirewallsStore_1.default.page,
                pageCount: FirewallsStore_1.default.pageCount,
                pages: FirewallsStore_1.default.pages,
                count: FirewallsStore_1.default.count
            };
        }
        componentDidMount() {
            FirewallsStore_1.default.addChangeListener(this.onChange);
        }
        componentWillUnmount() {
            FirewallsStore_1.default.removeChangeListener(this.onChange);
        }
        render() {
            let page = this.state.page;
            let pages = this.state.pages;
            if (pages <= 1) {
                return React.createElement("div", null);
            }
            let links = [];
            let start = Math.max(0, page - 7);
            let end = Math.min(pages, start + 15);
            for (let i = start; i < end; i++) {
                links.push(React.createElement("span", { key: i, style: page === i ? Object.assign({}, css.link, css.current) : css.link, onClick: () => {
                        FirewallActions.traverse(i);
                        if (this.props.onPage) {
                            this.props.onPage();
                        }
                    } }, i + 1));
            }
            return React.createElement("div", { className: "layout horizontal center-justified" }, React.createElement("button", { className: "bp3-button bp3-minimal bp3-icon-chevron-backward", hidden: pages < 5, disabled: page === 0, type: "button", onClick: () => {
                    FirewallActions.traverse(0);
                    if (this.props.onPage) {
                        this.props.onPage();
                    }
                } }), React.createElement("button", { className: "bp3-button bp3-minimal bp3-icon-chevron-left", style: css.button, disabled: page === 0, type: "button", onClick: () => {
                    FirewallActions.traverse(Math.max(0, this.state.page - 1));
                    if (this.props.onPage) {
                        this.props.onPage();
                    }
                } }), links, React.createElement("button", { className: "bp3-button bp3-minimal bp3-icon-chevron-right", style: css.button, disabled: page === pages - 1, type: "button", onClick: () => {
                    FirewallActions.traverse(Math.min(this.state.pages - 1, this.state.page + 1));
                    if (this.props.onPage) {
                        this.props.onPage();
                    }
                } }), React.createElement("button", { className: "bp3-button bp3-minimal bp3-icon-chevron-forward", hidden: pages < 5, disabled: page === pages - 1, type: "button", onClick: () => {
                    FirewallActions.traverse(this.state.pages - 1);
                    if (this.props.onPage) {
                        this.props.onPage();
                    }
                } }));
        }
    }
    exports.default = FirewallsPage;
    
});
System.registerDynamic("app/components/Firewalls.js", ["npm:react@16.7.0.js", "app/stores/FirewallsStore.js", "app/stores/OrganizationsStore.js", "app/actions/FirewallActions.js", "app/actions/OrganizationActions.js", "app/components/Firewall.js", "app/components/FirewallsFilter.js", "app/components/FirewallsPage.js", "app/components/Page.js", "app/components/PageHeader.js", "app/components/NonState.js", "app/components/ConfirmButton.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const FirewallsStore_1 = $__require("app/stores/FirewallsStore.js");
    const OrganizationsStore_1 = $__require("app/stores/OrganizationsStore.js");
    const FirewallActions = $__require("app/actions/FirewallActions.js");
    const OrganizationActions = $__require("app/actions/OrganizationActions.js");
    const Firewall_1 = $__require("app/components/Firewall.js");
    const FirewallsFilter_1 = $__require("app/components/FirewallsFilter.js");
    const FirewallsPage_1 = $__require("app/components/FirewallsPage.js");
    const Page_1 = $__require("app/components/Page.js");
    const PageHeader_1 = $__require("app/components/PageHeader.js");
    const NonState_1 = $__require("app/components/NonState.js");
    const ConfirmButton_1 = $__require("app/components/ConfirmButton.js");
    const css = {
        items: {
            width: '100%',
            marginTop: '-5px',
            display: 'table',
            borderSpacing: '0 5px'
        },
        itemsBox: {
            width: '100%',
            overflowY: 'auto'
        },
        placeholder: {
            opacity: 0,
            width: '100%'
        },
        header: {
            marginTop: '-19px'
        },
        heading: {
            margin: '19px 0 0 0'
        },
        button: {
            margin: '8px 0 0 8px'
        },
        buttons: {
            marginTop: '8px'
        }
    };
    class Firewalls extends React.Component {
        constructor(props, context) {
            super(props, context);
            this.onChange = () => {
                let firewalls = FirewallsStore_1.default.firewalls;
                let selected = {};
                let curSelected = this.state.selected;
                let opened = {};
                let curOpened = this.state.opened;
                firewalls.forEach(firewall => {
                    if (curSelected[firewall.id]) {
                        selected[firewall.id] = true;
                    }
                    if (curOpened[firewall.id]) {
                        opened[firewall.id] = true;
                    }
                });
                this.setState(Object.assign({}, this.state, { firewalls: firewalls, filter: FirewallsStore_1.default.filter, organizations: OrganizationsStore_1.default.organizations, selected: selected, opened: opened }));
            };
            this.onDelete = () => {
                this.setState(Object.assign({}, this.state, { disabled: true }));
                FirewallActions.removeMulti(Object.keys(this.state.selected)).then(() => {
                    this.setState(Object.assign({}, this.state, { selected: {}, disabled: false }));
                }).catch(() => {
                    this.setState(Object.assign({}, this.state, { disabled: false }));
                });
            };
            this.state = {
                firewalls: FirewallsStore_1.default.firewalls,
                filter: FirewallsStore_1.default.filter,
                organizations: OrganizationsStore_1.default.organizations,
                selected: {},
                opened: {},
                newOpened: false,
                lastSelected: null,
                disabled: false
            };
        }
        get selected() {
            return !!Object.keys(this.state.selected).length;
        }
        get opened() {
            return !!Object.keys(this.state.opened).length;
        }
        componentDidMount() {
            FirewallsStore_1.default.addChangeListener(this.onChange);
            OrganizationsStore_1.default.addChangeListener(this.onChange);
            FirewallActions.sync();
            OrganizationActions.sync();
        }
        componentWillUnmount() {
            FirewallsStore_1.default.removeChangeListener(this.onChange);
            OrganizationsStore_1.default.removeChangeListener(this.onChange);
        }
        render() {
            let firewallsDom = [];
            this.state.firewalls.forEach(firewall => {
                firewallsDom.push(React.createElement(Firewall_1.default, { key: firewall.id, firewall: firewall, organizations: this.state.organizations, selected: !!this.state.selected[firewall.id], open: !!this.state.opened[firewall.id], onSelect: shift => {
                        let selected = Object.assign({}, this.state.selected);
                        if (shift) {
                            let firewalls = this.state.firewalls;
                            let start;
                            let end;
                            for (let i = 0; i < firewalls.length; i++) {
                                let usr = firewalls[i];
                                if (usr.id === firewall.id) {
                                    start = i;
                                } else if (usr.id === this.state.lastSelected) {
                                    end = i;
                                }
                            }
                            if (start !== undefined && end !== undefined) {
                                if (start > end) {
                                    end = [start, start = end][0];
                                }
                                for (let i = start; i <= end; i++) {
                                    selected[firewalls[i].id] = true;
                                }
                                this.setState(Object.assign({}, this.state, { lastSelected: firewall.id, selected: selected }));
                                return;
                            }
                        }
                        if (selected[firewall.id]) {
                            delete selected[firewall.id];
                        } else {
                            selected[firewall.id] = true;
                        }
                        this.setState(Object.assign({}, this.state, { lastSelected: firewall.id, selected: selected }));
                    }, onOpen: () => {
                        let opened = Object.assign({}, this.state.opened);
                        if (opened[firewall.id]) {
                            delete opened[firewall.id];
                        } else {
                            opened[firewall.id] = true;
                        }
                        this.setState(Object.assign({}, this.state, { opened: opened }));
                    } }));
            });
            let filterClass = 'bp3-button bp3-intent-primary bp3-icon-filter ';
            if (this.state.filter) {
                filterClass += 'bp3-active';
            }
            return React.createElement(Page_1.default, null, React.createElement(PageHeader_1.default, null, React.createElement("div", { className: "layout horizontal wrap", style: css.header }, React.createElement("h2", { style: css.heading }, "Firewalls"), React.createElement("div", { className: "flex" }), React.createElement("div", { style: css.buttons }, React.createElement("button", { className: filterClass, style: css.button, type: "button", onClick: () => {
                    if (this.state.filter === null) {
                        FirewallActions.filter({});
                    } else {
                        FirewallActions.filter(null);
                    }
                } }, "Filters"), React.createElement("button", { className: "bp3-button bp3-intent-warning bp3-icon-chevron-up", style: css.button, disabled: !this.opened, type: "button", onClick: () => {
                    this.setState(Object.assign({}, this.state, { opened: {} }));
                } }, "Collapse All"), React.createElement(ConfirmButton_1.default, { label: "Delete Selected", className: "bp3-intent-danger bp3-icon-delete", progressClassName: "bp3-intent-danger", style: css.button, disabled: !this.selected || this.state.disabled, onConfirm: this.onDelete }), React.createElement("button", { className: "bp3-button bp3-intent-success bp3-icon-add", style: css.button, disabled: this.state.disabled, type: "button", onClick: () => {
                    this.setState(Object.assign({}, this.state, { disabled: true }));
                    FirewallActions.create({
                        ingress: [{
                            source_ips: ['0.0.0.0/0', '::/0'],
                            protocol: 'icmp'
                        }, {
                            source_ips: ['0.0.0.0/0', '::/0'],
                            protocol: 'tcp',
                            port: '22'
                        }]
                    }).then(() => {
                        this.setState(Object.assign({}, this.state, { disabled: false }));
                    }).catch(() => {
                        this.setState(Object.assign({}, this.state, { disabled: false }));
                    });
                } }, "New")))), React.createElement(FirewallsFilter_1.default, { filter: this.state.filter, onFilter: filter => {
                    FirewallActions.filter(filter);
                }, organizations: this.state.organizations }), React.createElement("div", { style: css.itemsBox }, React.createElement("div", { style: css.items }, firewallsDom, React.createElement("tr", { className: "bp3-card bp3-row", style: css.placeholder }, React.createElement("td", { colSpan: 5, style: css.placeholder })))), React.createElement(NonState_1.default, { hidden: !!firewallsDom.length, iconClass: "bp3-icon-key", title: "No firewalls", description: "Add a new firewall to get started." }), React.createElement(FirewallsPage_1.default, { onPage: () => {
                    this.setState({
                        lastSelected: null
                    });
                } }));
        }
    }
    exports.default = Firewalls;
    
});
System.registerDynamic("app/components/AuthorityDetailed.js", ["npm:react@16.7.0.js", "app/actions/AuthorityActions.js", "app/components/PageInput.js", "app/components/PageSelect.js", "app/components/PageInfo.js", "app/components/PageInputButton.js", "app/components/PageTextArea.js", "app/components/PageSave.js", "app/components/ConfirmButton.js", "app/components/Help.js", "app/Constants.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const AuthorityActions = $__require("app/actions/AuthorityActions.js");
    const PageInput_1 = $__require("app/components/PageInput.js");
    const PageSelect_1 = $__require("app/components/PageSelect.js");
    const PageInfo_1 = $__require("app/components/PageInfo.js");
    const PageInputButton_1 = $__require("app/components/PageInputButton.js");
    const PageTextArea_1 = $__require("app/components/PageTextArea.js");
    const PageSave_1 = $__require("app/components/PageSave.js");
    const ConfirmButton_1 = $__require("app/components/ConfirmButton.js");
    const Help_1 = $__require("app/components/Help.js");
    const Constants = $__require("app/Constants.js");
    const css = {
        card: {
            position: 'relative',
            padding: '48px 10px 0 10px',
            width: '100%'
        },
        button: {
            height: '30px'
        },
        buttons: {
            cursor: 'pointer',
            position: 'absolute',
            top: 0,
            left: 0,
            right: 0,
            padding: '4px',
            height: '39px',
            backgroundColor: 'rgba(0, 0, 0, 0.13)'
        },
        item: {
            margin: '9px 5px 0 5px',
            height: '20px'
        },
        itemsLabel: {
            display: 'block'
        },
        itemsAdd: {
            margin: '8px 0 15px 0'
        },
        group: {
            flex: 1,
            minWidth: '280px',
            margin: '0 10px'
        },
        save: {
            paddingBottom: '10px'
        },
        label: {
            width: '100%',
            maxWidth: '280px'
        },
        status: {
            margin: '6px 0 0 1px'
        },
        icon: {
            marginRight: '3px'
        },
        inputGroup: {
            width: '100%'
        },
        protocol: {
            flex: '0 1 auto'
        },
        port: {
            flex: '1'
        },
        select: {
            margin: '7px 0px 0px 6px'
        },
        role: {
            margin: '9px 5px 0 5px',
            height: '20px'
        },
        rules: {
            marginBottom: '15px'
        }
    };
    class AuthorityDetailed extends React.Component {
        constructor(props, context) {
            super(props, context);
            this.onAddRole = () => {
                let authority;
                if (!this.state.addRole) {
                    return;
                }
                if (this.state.changed) {
                    authority = Object.assign({}, this.state.authority);
                } else {
                    authority = Object.assign({}, this.props.authority);
                }
                let roles = [...(authority.roles || [])];
                if (roles.indexOf(this.state.addRole) === -1) {
                    roles.push(this.state.addRole);
                }
                roles.sort();
                authority.roles = roles;
                this.setState(Object.assign({}, this.state, { changed: true, message: '', addRole: '', authority: authority }));
            };
            this.onRemoveRole = role => {
                let authority;
                if (this.state.changed) {
                    authority = Object.assign({}, this.state.authority);
                } else {
                    authority = Object.assign({}, this.props.authority);
                }
                let roles = [...(authority.roles || [])];
                let i = roles.indexOf(role);
                if (i === -1) {
                    return;
                }
                roles.splice(i, 1);
                authority.roles = roles;
                this.setState(Object.assign({}, this.state, { changed: true, message: '', addRole: '', authority: authority }));
            };
            this.onAddNetworkRole = () => {
                let authority;
                if (!this.state.addNetworkRole) {
                    return;
                }
                if (this.state.changed) {
                    authority = Object.assign({}, this.state.authority);
                } else {
                    authority = Object.assign({}, this.props.authority);
                }
                let networkRoles = [...(authority.network_roles || [])];
                if (networkRoles.indexOf(this.state.addNetworkRole) === -1) {
                    networkRoles.push(this.state.addNetworkRole);
                }
                networkRoles.sort();
                authority.network_roles = networkRoles;
                this.setState(Object.assign({}, this.state, { changed: true, message: '', addNetworkRole: '', authority: authority }));
            };
            this.onRemoveNetworkRole = networkRole => {
                let authority;
                if (this.state.changed) {
                    authority = Object.assign({}, this.state.authority);
                } else {
                    authority = Object.assign({}, this.props.authority);
                }
                let networkRoles = [...(authority.network_roles || [])];
                let i = networkRoles.indexOf(networkRole);
                if (i === -1) {
                    return;
                }
                networkRoles.splice(i, 1);
                authority.network_roles = networkRoles;
                this.setState(Object.assign({}, this.state, { changed: true, message: '', addNetworkRole: '', authority: authority }));
            };
            this.onSave = () => {
                this.setState(Object.assign({}, this.state, { disabled: true }));
                let authority = Object.assign({}, this.state.authority);
                if (this.props.organizations.length && !authority.organization) {
                    authority.organization = this.props.organizations[0].id;
                }
                AuthorityActions.commit(authority).then(() => {
                    this.setState(Object.assign({}, this.state, { message: 'Your changes have been saved', changed: false, disabled: false }));
                    setTimeout(() => {
                        if (!this.state.changed) {
                            this.setState(Object.assign({}, this.state, { authority: null, changed: false }));
                        }
                    }, 1000);
                    setTimeout(() => {
                        if (!this.state.changed) {
                            this.setState(Object.assign({}, this.state, { message: '' }));
                        }
                    }, 3000);
                }).catch(() => {
                    this.setState(Object.assign({}, this.state, { message: '', disabled: false }));
                });
            };
            this.onDelete = () => {
                this.setState(Object.assign({}, this.state, { disabled: true }));
                AuthorityActions.remove(this.props.authority.id).then(() => {
                    this.setState(Object.assign({}, this.state, { disabled: false }));
                }).catch(() => {
                    this.setState(Object.assign({}, this.state, { disabled: false }));
                });
            };
            this.state = {
                disabled: false,
                changed: false,
                message: '',
                addRole: null,
                addNetworkRole: null,
                authority: null
            };
        }
        set(name, val) {
            let authority;
            if (this.state.changed) {
                authority = Object.assign({}, this.state.authority);
            } else {
                authority = Object.assign({}, this.props.authority);
            }
            authority[name] = val;
            this.setState(Object.assign({}, this.state, { changed: true, authority: authority }));
        }
        render() {
            let authority = this.state.authority || this.props.authority;
            let hasOrganizations = !!this.props.organizations.length;
            let organizationsSelect = [];
            if (this.props.organizations.length) {
                for (let organization of this.props.organizations) {
                    organizationsSelect.push(React.createElement("option", { key: organization.id, value: organization.id }, organization.name));
                }
            }
            if (!hasOrganizations) {
                organizationsSelect.push(React.createElement("option", { key: "null", value: "" }, "No Organizations"));
            }
            let roles = [];
            for (let role of authority.roles || []) {
                roles.push(React.createElement("div", { className: "bp3-tag bp3-tag-removable bp3-intent-primary", style: css.role, key: role }, role, React.createElement("button", { className: "bp3-tag-remove", disabled: this.state.disabled, onMouseUp: () => {
                        this.onRemoveRole(role);
                    } })));
            }
            let networkRoles = [];
            for (let networkRole of authority.network_roles || []) {
                networkRoles.push(React.createElement("div", { className: "bp3-tag bp3-tag-removable bp3-intent-primary", style: css.role, key: networkRole }, networkRole, React.createElement("button", { className: "bp3-tag-remove", disabled: this.state.disabled, onMouseUp: () => {
                        this.onRemoveNetworkRole(networkRole);
                    } })));
            }
            return React.createElement("td", { className: "bp3-cell", colSpan: 5, style: css.card }, React.createElement("div", { className: "layout horizontal wrap" }, React.createElement("div", { style: css.group }, React.createElement("div", { className: "layout horizontal", style: css.buttons, onClick: evt => {
                    let target = evt.target;
                    if (target.className.indexOf('open-ignore') !== -1) {
                        return;
                    }
                    this.props.onClose();
                } }, React.createElement("div", null, React.createElement("label", { className: "bp3-control bp3-checkbox open-ignore", style: css.select }, React.createElement("input", { type: "checkbox", className: "open-ignore", checked: this.props.selected, onClick: evt => {
                    this.props.onSelect(evt.shiftKey);
                } }), React.createElement("span", { className: "bp3-control-indicator open-ignore" }))), React.createElement("div", { className: "flex" }), React.createElement(ConfirmButton_1.default, { className: "bp3-minimal bp3-intent-danger bp3-icon-trash open-ignore", style: css.button, progressClassName: "bp3-intent-danger", confirmMsg: "Confirm authority remove", disabled: this.state.disabled, onConfirm: this.onDelete })), React.createElement(PageInput_1.default, { label: "Name", help: "Name of authority", type: "text", placeholder: "Enter name", value: authority.name, onChange: val => {
                    this.set('name', val);
                } }), React.createElement(PageSelect_1.default, { label: "Type", help: "Authority type. SSH keys will be saved to ~/.ssh/authorized_keys. SSH certificates will be saved to the SSH server configuration.", value: authority.type, onChange: val => {
                    this.set('type', val);
                } }, React.createElement("option", { value: "ssh_key" }, "SSH Key"), React.createElement("option", { value: "ssh_certificate" }, "SSH Certificate")), React.createElement(PageTextArea_1.default, { hidden: authority.type !== 'ssh_key', label: "SSH Key", help: "SSH authorized public key in PEM format.", placeholder: "Public key", rows: 6, value: authority.key, onChange: val => {
                    this.set('key', val);
                } }), React.createElement(PageTextArea_1.default, { hidden: authority.type !== 'ssh_certificate', label: "SSH Certificate", help: "SSH certificate authority in PEM format.", placeholder: "Certificate authority", rows: 6, value: authority.certificate, onChange: val => {
                    this.set('certificate', val);
                } }), React.createElement("label", { className: "bp3-label", hidden: authority.type !== 'ssh_certificate' }, "Roles", React.createElement(Help_1.default, { title: "Roles", content: "Roles that will be matched with authority principles. Roles are case-sensitive." }), React.createElement("div", null, roles)), React.createElement(PageInputButton_1.default, { disabled: this.state.disabled, buttonClass: "bp3-intent-success bp3-icon-add", hidden: authority.type !== 'ssh_certificate', label: "Add", type: "text", placeholder: "Add role", value: this.state.addRole, onChange: val => {
                    this.setState(Object.assign({}, this.state, { addRole: val }));
                }, onSubmit: this.onAddRole })), React.createElement("div", { style: css.group }, React.createElement(PageInfo_1.default, { fields: [{
                    label: 'ID',
                    value: this.props.authority.id || 'Unknown'
                }] }), React.createElement(PageSelect_1.default, { disabled: this.state.disabled || !hasOrganizations, hidden: Constants.user, label: "Organization", help: "Organization for authority, both the organaization and role must match. Select node authority to match node network roles.", value: authority.organization, onChange: val => {
                    this.set('organization', val);
                } }, organizationsSelect), React.createElement("label", { className: "bp3-label" }, "Network Roles", React.createElement(Help_1.default, { title: "Network Roles", content: "Network roles that will be matched with authorities. Network roles are case-sensitive." }), React.createElement("div", null, networkRoles)), React.createElement(PageInputButton_1.default, { disabled: this.state.disabled, buttonClass: "bp3-intent-success bp3-icon-add", label: "Add", type: "text", placeholder: "Add role", value: this.state.addNetworkRole, onChange: val => {
                    this.setState(Object.assign({}, this.state, { addNetworkRole: val }));
                }, onSubmit: this.onAddNetworkRole }))), React.createElement(PageSave_1.default, { style: css.save, hidden: !this.state.authority && !this.state.message, message: this.state.message, changed: this.state.changed, disabled: this.state.disabled, light: true, onCancel: () => {
                    this.setState(Object.assign({}, this.state, { changed: false, authority: null }));
                }, onSave: this.onSave }));
        }
    }
    exports.default = AuthorityDetailed;
    
});
System.registerDynamic("app/components/Authority.js", ["npm:react@16.7.0.js", "app/stores/OrganizationsStore.js", "app/components/AuthorityDetailed.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const OrganizationsStore_1 = $__require("app/stores/OrganizationsStore.js");
    const AuthorityDetailed_1 = $__require("app/components/AuthorityDetailed.js");
    const css = {
        card: {
            display: 'table-row',
            width: '100%',
            padding: 0,
            boxShadow: 'none',
            cursor: 'pointer'
        },
        cardOpen: {
            display: 'table-row',
            width: '100%',
            padding: 0,
            boxShadow: 'none',
            position: 'relative'
        },
        select: {
            margin: '2px 0 0 0',
            paddingTop: '1px',
            minHeight: '18px'
        },
        name: {
            verticalAlign: 'top',
            display: 'table-cell',
            padding: '8px'
        },
        nameSpan: {
            margin: '1px 5px 0 0'
        },
        item: {
            verticalAlign: 'top',
            display: 'table-cell',
            padding: '9px',
            whiteSpace: 'nowrap'
        },
        icon: {
            marginRight: '3px'
        },
        bars: {
            verticalAlign: 'top',
            display: 'table-cell',
            padding: '8px',
            width: '30px'
        },
        bar: {
            height: '6px',
            marginBottom: '1px'
        },
        barLast: {
            height: '6px'
        },
        roles: {
            verticalAlign: 'top',
            display: 'table-cell',
            padding: '0 8px 8px 8px'
        },
        tag: {
            margin: '8px 5px 0 5px',
            height: '20px'
        }
    };
    class Authority extends React.Component {
        render() {
            let authority = this.props.authority;
            if (this.props.open) {
                return React.createElement("div", { className: "bp3-card bp3-row", style: css.cardOpen }, React.createElement(AuthorityDetailed_1.default, { organizations: this.props.organizations, authority: this.props.authority, selected: this.props.selected, onSelect: this.props.onSelect, onClose: () => {
                        this.props.onOpen();
                    } }));
            }
            let active = true;
            let cardStyle = Object.assign({}, css.card);
            if (!active) {
                cardStyle.opacity = 0.6;
            }
            let networkRoles = [];
            for (let networkRole of authority.network_roles || []) {
                networkRoles.push(React.createElement("div", { className: "bp3-tag bp3-intent-primary", style: css.tag, key: networkRole }, networkRole));
            }
            let orgName = '';
            if (authority.organization) {
                let org = OrganizationsStore_1.default.organization(authority.organization);
                orgName = org ? org.name : authority.organization;
            } else {
                orgName = 'No Organization';
            }
            return React.createElement("div", { className: "bp3-card bp3-row", style: cardStyle, onClick: evt => {
                    let target = evt.target;
                    if (target.className.indexOf('open-ignore') !== -1) {
                        return;
                    }
                    this.props.onOpen();
                } }, React.createElement("div", { className: "bp3-cell", style: css.name }, React.createElement("div", { className: "layout horizontal" }, React.createElement("label", { className: "bp3-control bp3-checkbox open-ignore", style: css.select }, React.createElement("input", { type: "checkbox", className: "open-ignore", checked: this.props.selected, onClick: evt => {
                    this.props.onSelect(evt.shiftKey);
                } }), React.createElement("span", { className: "bp3-control-indicator open-ignore" })), React.createElement("div", { style: css.nameSpan }, authority.name))), React.createElement("div", { className: "bp3-cell", style: css.item }, React.createElement("span", { style: css.icon, className: "bp3-icon-standard bp3-text-muted bp3-icon-people" }), orgName), React.createElement("div", { className: "flex bp3-cell", style: css.roles }, networkRoles));
        }
    }
    exports.default = Authority;
    
});
System.registerDynamic("app/components/AuthoritiesFilter.js", ["npm:react@16.7.0.js", "app/Constants.js", "app/components/SearchInput.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const Constants = $__require("app/Constants.js");
    const SearchInput_1 = $__require("app/components/SearchInput.js");
    const css = {
        filters: {
            margin: '-15px 0 5px 0'
        },
        input: {
            width: '200px',
            margin: '5px'
        },
        role: {
            width: '150px',
            margin: '5px'
        },
        type: {
            margin: '5px'
        },
        check: {
            margin: '12px 5px 8px 5px'
        }
    };
    class AuthoritiesFilter extends React.Component {
        constructor(props, context) {
            super(props, context);
            this.state = {
                menu: false
            };
        }
        render() {
            if (this.props.filter === null) {
                return React.createElement("div", null);
            }
            let organizationsSelect = [React.createElement("option", { key: "key", value: "any" }, "Any")];
            if (this.props.organizations && this.props.organizations.length) {
                for (let organization of this.props.organizations) {
                    organizationsSelect.push(React.createElement("option", { key: organization.id, value: organization.id }, organization.name));
                }
            }
            return React.createElement("div", { className: "layout horizontal wrap", style: css.filters }, React.createElement(SearchInput_1.default, { style: css.input, placeholder: "Authority ID", value: this.props.filter.id, onChange: val => {
                    let filter = Object.assign({}, this.props.filter);
                    if (val) {
                        filter.id = val;
                    } else {
                        delete filter.id;
                    }
                    this.props.onFilter(filter);
                } }), React.createElement(SearchInput_1.default, { style: css.input, placeholder: "Name", value: this.props.filter.name, onChange: val => {
                    let filter = Object.assign({}, this.props.filter);
                    if (val) {
                        filter.name = val;
                    } else {
                        delete filter.name;
                    }
                    this.props.onFilter(filter);
                } }), React.createElement(SearchInput_1.default, { style: css.role, placeholder: "Role", value: this.props.filter.role, onChange: val => {
                    let filter = Object.assign({}, this.props.filter);
                    if (val) {
                        filter.role = val;
                    } else {
                        delete filter.role;
                    }
                    this.props.onFilter(filter);
                } }), React.createElement(SearchInput_1.default, { style: css.role, placeholder: "Network Role", value: this.props.filter.network_role, onChange: val => {
                    let filter = Object.assign({}, this.props.filter);
                    if (val) {
                        filter.network_role = val;
                    } else {
                        delete filter.network_role;
                    }
                    this.props.onFilter(filter);
                } }), React.createElement("div", { className: "bp3-select", style: css.type, hidden: Constants.user }, React.createElement("select", { value: this.props.filter.organization || 'any', onChange: evt => {
                    let filter = Object.assign({}, this.props.filter);
                    let val = evt.target.value;
                    if (val === 'any') {
                        delete filter.organization;
                    } else {
                        filter.organization = val;
                    }
                    this.props.onFilter(filter);
                } }, organizationsSelect)));
        }
    }
    exports.default = AuthoritiesFilter;
    
});
System.registerDynamic("app/components/AuthoritiesPage.js", ["npm:react@16.7.0.js", "app/stores/AuthoritiesStore.js", "app/actions/AuthorityActions.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const AuthoritiesStore_1 = $__require("app/stores/AuthoritiesStore.js");
    const AuthorityActions = $__require("app/actions/AuthorityActions.js");
    const css = {
        button: {
            userSelect: 'none',
            margin: '0 5px 0 0'
        },
        buttonLast: {
            userSelect: 'none',
            margin: '0 0 0 0'
        },
        link: {
            cursor: 'pointer',
            userSelect: 'none',
            margin: '7px 5px 0 0'
        },
        current: {
            opacity: 0.5
        }
    };
    class AuthoritiesPage extends React.Component {
        constructor(props, context) {
            super(props, context);
            this.onChange = () => {
                this.setState(Object.assign({}, this.state, { page: AuthoritiesStore_1.default.page, pageCount: AuthoritiesStore_1.default.pageCount, pages: AuthoritiesStore_1.default.pages, count: AuthoritiesStore_1.default.count }));
            };
            this.state = {
                page: AuthoritiesStore_1.default.page,
                pageCount: AuthoritiesStore_1.default.pageCount,
                pages: AuthoritiesStore_1.default.pages,
                count: AuthoritiesStore_1.default.count
            };
        }
        componentDidMount() {
            AuthoritiesStore_1.default.addChangeListener(this.onChange);
        }
        componentWillUnmount() {
            AuthoritiesStore_1.default.removeChangeListener(this.onChange);
        }
        render() {
            let page = this.state.page;
            let pages = this.state.pages;
            if (pages <= 1) {
                return React.createElement("div", null);
            }
            let links = [];
            let start = Math.max(0, page - 7);
            let end = Math.min(pages, start + 15);
            for (let i = start; i < end; i++) {
                links.push(React.createElement("span", { key: i, style: page === i ? Object.assign({}, css.link, css.current) : css.link, onClick: () => {
                        AuthorityActions.traverse(i);
                        if (this.props.onPage) {
                            this.props.onPage();
                        }
                    } }, i + 1));
            }
            return React.createElement("div", { className: "layout horizontal center-justified" }, React.createElement("button", { className: "bp3-button bp3-minimal bp3-icon-chevron-backward", hidden: pages < 5, disabled: page === 0, type: "button", onClick: () => {
                    AuthorityActions.traverse(0);
                    if (this.props.onPage) {
                        this.props.onPage();
                    }
                } }), React.createElement("button", { className: "bp3-button bp3-minimal bp3-icon-chevron-left", style: css.button, disabled: page === 0, type: "button", onClick: () => {
                    AuthorityActions.traverse(Math.max(0, this.state.page - 1));
                    if (this.props.onPage) {
                        this.props.onPage();
                    }
                } }), links, React.createElement("button", { className: "bp3-button bp3-minimal bp3-icon-chevron-right", style: css.button, disabled: page === pages - 1, type: "button", onClick: () => {
                    AuthorityActions.traverse(Math.min(this.state.pages - 1, this.state.page + 1));
                    if (this.props.onPage) {
                        this.props.onPage();
                    }
                } }), React.createElement("button", { className: "bp3-button bp3-minimal bp3-icon-chevron-forward", hidden: pages < 5, disabled: page === pages - 1, type: "button", onClick: () => {
                    AuthorityActions.traverse(this.state.pages - 1);
                    if (this.props.onPage) {
                        this.props.onPage();
                    }
                } }));
        }
    }
    exports.default = AuthoritiesPage;
    
});
System.registerDynamic("app/components/Authorities.js", ["npm:react@16.7.0.js", "app/stores/AuthoritiesStore.js", "app/stores/OrganizationsStore.js", "app/actions/AuthorityActions.js", "app/actions/OrganizationActions.js", "app/components/Authority.js", "app/components/AuthoritiesFilter.js", "app/components/AuthoritiesPage.js", "app/components/Page.js", "app/components/PageHeader.js", "app/components/NonState.js", "app/components/ConfirmButton.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const AuthoritiesStore_1 = $__require("app/stores/AuthoritiesStore.js");
    const OrganizationsStore_1 = $__require("app/stores/OrganizationsStore.js");
    const AuthorityActions = $__require("app/actions/AuthorityActions.js");
    const OrganizationActions = $__require("app/actions/OrganizationActions.js");
    const Authority_1 = $__require("app/components/Authority.js");
    const AuthoritiesFilter_1 = $__require("app/components/AuthoritiesFilter.js");
    const AuthoritiesPage_1 = $__require("app/components/AuthoritiesPage.js");
    const Page_1 = $__require("app/components/Page.js");
    const PageHeader_1 = $__require("app/components/PageHeader.js");
    const NonState_1 = $__require("app/components/NonState.js");
    const ConfirmButton_1 = $__require("app/components/ConfirmButton.js");
    const css = {
        items: {
            width: '100%',
            marginTop: '-5px',
            display: 'table',
            borderSpacing: '0 5px'
        },
        itemsBox: {
            width: '100%',
            overflowY: 'auto'
        },
        placeholder: {
            opacity: 0,
            width: '100%'
        },
        header: {
            marginTop: '-19px'
        },
        heading: {
            margin: '19px 0 0 0'
        },
        button: {
            margin: '8px 0 0 8px'
        },
        buttons: {
            marginTop: '8px'
        }
    };
    class Authorities extends React.Component {
        constructor(props, context) {
            super(props, context);
            this.onChange = () => {
                let authorities = AuthoritiesStore_1.default.authorities;
                let selected = {};
                let curSelected = this.state.selected;
                let opened = {};
                let curOpened = this.state.opened;
                authorities.forEach(authority => {
                    if (curSelected[authority.id]) {
                        selected[authority.id] = true;
                    }
                    if (curOpened[authority.id]) {
                        opened[authority.id] = true;
                    }
                });
                this.setState(Object.assign({}, this.state, { authorities: authorities, filter: AuthoritiesStore_1.default.filter, organizations: OrganizationsStore_1.default.organizations, selected: selected, opened: opened }));
            };
            this.onDelete = () => {
                this.setState(Object.assign({}, this.state, { disabled: true }));
                AuthorityActions.removeMulti(Object.keys(this.state.selected)).then(() => {
                    this.setState(Object.assign({}, this.state, { selected: {}, disabled: false }));
                }).catch(() => {
                    this.setState(Object.assign({}, this.state, { disabled: false }));
                });
            };
            this.state = {
                authorities: AuthoritiesStore_1.default.authorities,
                filter: AuthoritiesStore_1.default.filter,
                organizations: OrganizationsStore_1.default.organizations,
                selected: {},
                opened: {},
                newOpened: false,
                lastSelected: null,
                disabled: false
            };
        }
        get selected() {
            return !!Object.keys(this.state.selected).length;
        }
        get opened() {
            return !!Object.keys(this.state.opened).length;
        }
        componentDidMount() {
            AuthoritiesStore_1.default.addChangeListener(this.onChange);
            OrganizationsStore_1.default.addChangeListener(this.onChange);
            AuthorityActions.sync();
            OrganizationActions.sync();
        }
        componentWillUnmount() {
            AuthoritiesStore_1.default.removeChangeListener(this.onChange);
            OrganizationsStore_1.default.removeChangeListener(this.onChange);
        }
        render() {
            let authoritiesDom = [];
            this.state.authorities.forEach(authority => {
                authoritiesDom.push(React.createElement(Authority_1.default, { key: authority.id, authority: authority, organizations: this.state.organizations, selected: !!this.state.selected[authority.id], open: !!this.state.opened[authority.id], onSelect: shift => {
                        let selected = Object.assign({}, this.state.selected);
                        if (shift) {
                            let authorities = this.state.authorities;
                            let start;
                            let end;
                            for (let i = 0; i < authorities.length; i++) {
                                let usr = authorities[i];
                                if (usr.id === authority.id) {
                                    start = i;
                                } else if (usr.id === this.state.lastSelected) {
                                    end = i;
                                }
                            }
                            if (start !== undefined && end !== undefined) {
                                if (start > end) {
                                    end = [start, start = end][0];
                                }
                                for (let i = start; i <= end; i++) {
                                    selected[authorities[i].id] = true;
                                }
                                this.setState(Object.assign({}, this.state, { lastSelected: authority.id, selected: selected }));
                                return;
                            }
                        }
                        if (selected[authority.id]) {
                            delete selected[authority.id];
                        } else {
                            selected[authority.id] = true;
                        }
                        this.setState(Object.assign({}, this.state, { lastSelected: authority.id, selected: selected }));
                    }, onOpen: () => {
                        let opened = Object.assign({}, this.state.opened);
                        if (opened[authority.id]) {
                            delete opened[authority.id];
                        } else {
                            opened[authority.id] = true;
                        }
                        this.setState(Object.assign({}, this.state, { opened: opened }));
                    } }));
            });
            let filterClass = 'bp3-button bp3-intent-primary bp3-icon-filter ';
            if (this.state.filter) {
                filterClass += 'bp3-active';
            }
            return React.createElement(Page_1.default, null, React.createElement(PageHeader_1.default, null, React.createElement("div", { className: "layout horizontal wrap", style: css.header }, React.createElement("h2", { style: css.heading }, "Authorities"), React.createElement("div", { className: "flex" }), React.createElement("div", { style: css.buttons }, React.createElement("button", { className: filterClass, style: css.button, type: "button", onClick: () => {
                    if (this.state.filter === null) {
                        AuthorityActions.filter({});
                    } else {
                        AuthorityActions.filter(null);
                    }
                } }, "Filters"), React.createElement("button", { className: "bp3-button bp3-intent-warning bp3-icon-chevron-up", style: css.button, disabled: !this.opened, type: "button", onClick: () => {
                    this.setState(Object.assign({}, this.state, { opened: {} }));
                } }, "Collapse All"), React.createElement(ConfirmButton_1.default, { label: "Delete Selected", className: "bp3-intent-danger bp3-icon-delete", progressClassName: "bp3-intent-danger", style: css.button, disabled: !this.selected || this.state.disabled, onConfirm: this.onDelete }), React.createElement("button", { className: "bp3-button bp3-intent-success bp3-icon-add", style: css.button, disabled: this.state.disabled, type: "button", onClick: () => {
                    this.setState(Object.assign({}, this.state, { disabled: true }));
                    AuthorityActions.create({
                        name: 'New Authority'
                    }).then(() => {
                        this.setState(Object.assign({}, this.state, { disabled: false }));
                    }).catch(() => {
                        this.setState(Object.assign({}, this.state, { disabled: false }));
                    });
                } }, "New")))), React.createElement(AuthoritiesFilter_1.default, { filter: this.state.filter, onFilter: filter => {
                    AuthorityActions.filter(filter);
                }, organizations: this.state.organizations }), React.createElement("div", { style: css.itemsBox }, React.createElement("div", { style: css.items }, authoritiesDom, React.createElement("tr", { className: "bp3-card bp3-row", style: css.placeholder }, React.createElement("td", { colSpan: 5, style: css.placeholder })))), React.createElement(NonState_1.default, { hidden: !!authoritiesDom.length, iconClass: "bp3-icon-office", title: "No authorities", description: "Add a new authority to get started." }), React.createElement(AuthoritiesPage_1.default, { onPage: () => {
                    this.setState({
                        lastSelected: null
                    });
                } }));
        }
    }
    exports.default = Authorities;
    
});
System.registerDynamic("app/components/Log.js", ["npm:react@16.7.0.js", "npm:@blueprintjs/core@3.11.0.js", "app/utils/MiscUtils.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const Blueprint = $__require("npm:@blueprintjs/core@3.11.0.js");
    const MiscUtils = $__require("app/utils/MiscUtils.js");
    const css = {
        card: {
            display: 'table-row',
            width: '100%',
            padding: 0,
            boxShadow: 'none'
        },
        timestamp: {
            verticalAlign: 'top',
            display: 'table-cell',
            padding: '6px'
        },
        level: {
            verticalAlign: 'top',
            display: 'table-cell',
            padding: '6px'
        },
        message: {
            verticalAlign: 'top',
            display: 'table-cell',
            padding: '6px'
        },
        fields: {
            verticalAlign: 'top',
            display: 'table-cell',
            padding: '6px'
        },
        buttons: {
            verticalAlign: 'top',
            display: 'table-cell',
            padding: '0',
            width: '30px'
        },
        key: {
            fontWeight: 'bold'
        },
        value: {},
        dialog: {
            height: '500px',
            width: '90%',
            maxWidth: '700px'
        },
        dialogBody: {
            height: '100%'
        },
        textarea: {
            resize: 'none',
            fontSize: '12px',
            fontFamily: '"Lucida Console", Monaco, monospace',
            marginBottom: 0
        }
    };
    class Log extends React.Component {
        constructor(props, context) {
            super(props, context);
            this.state = {
                stack: false
            };
        }
        render() {
            let log = this.props.log;
            let className = 'bp3-cell ';
            switch (log.level) {
                case 'debug':
                    className += 'bp3-text-intent-success';
                    break;
                case 'info':
                    className += 'bp3-text-intent-primary';
                    break;
                case 'warning':
                    className += 'bp3-text-intent-warning';
                    break;
                case 'error':
                    className += 'bp3-text-intent-danger';
                    break;
                case 'fatal':
                    className += 'bp3-text-intent-danger';
                    break;
                case 'panic':
                    className += 'bp3-text-intent-danger';
                    break;
            }
            let fields = [];
            for (let key in log.fields) {
                if (!log.fields.hasOwnProperty(key)) {
                    continue;
                }
                let val = log.fields[key];
                fields.push(React.createElement("div", { key: key }, React.createElement("span", { style: css.key }, key, ": "), React.createElement("span", { style: css.value }, JSON.stringify(val))));
            }
            return React.createElement("div", { className: "bp3-card bp3-row", style: css.card }, React.createElement("div", { className: className, style: css.timestamp }, MiscUtils.formatDateShortTime(log.timestamp) || 'Unknown'), React.createElement("div", { className: className, style: css.level }, log.level), React.createElement("div", { className: className, style: css.message }, log.message), React.createElement("div", { className: "bp3-cell", style: css.fields }, fields), React.createElement("div", { className: "bp3-cell", style: css.buttons }, React.createElement("button", { className: "bp3-button bp3-minimal bp3-icon-document-open", hidden: !log.stack, onClick: () => {
                    this.setState(Object.assign({}, this.state, { stack: true }));
                } })), React.createElement(Blueprint.Dialog, { title: "Stack Trace", style: css.dialog, isOpen: this.state.stack, onClose: () => {
                    this.setState(Object.assign({}, this.state, { stack: false }));
                } }, React.createElement("textarea", { className: "bp3-dialog-body bp3-input", style: css.textarea, autoCapitalize: "off", spellCheck: false, readOnly: true, value: log.stack || '' })));
        }
    }
    exports.default = Log;
    
});
System.registerDynamic("app/components/SearchInput.js", ["npm:react@16.7.0.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    class SearchInput extends React.Component {
        render() {
            return React.createElement("div", { className: "bp3-input-group", style: this.props.style }, React.createElement("span", { className: "bp3-icon bp3-icon-search" }), React.createElement("input", { className: "bp3-input bp3-round", type: "text", autoCapitalize: "off", spellCheck: false, placeholder: this.props.placeholder, value: this.props.value || '', onChange: evt => {
                    this.props.onChange(evt.target.value);
                } }));
        }
    }
    exports.default = SearchInput;
    
});
System.registerDynamic("app/components/LogsFilter.js", ["npm:react@16.7.0.js", "app/components/SearchInput.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const SearchInput_1 = $__require("app/components/SearchInput.js");
    const css = {
        filters: {
            margin: '-15px 0 5px 0'
        },
        input: {
            width: '200px',
            margin: '5px'
        },
        role: {
            width: '150px',
            margin: '5px'
        },
        type: {
            margin: '5px'
        },
        check: {
            margin: '12px 5px 8px 5px'
        }
    };
    class LogsFilter extends React.Component {
        constructor(props, context) {
            super(props, context);
            this.state = {
                menu: false
            };
        }
        render() {
            if (this.props.filter === null) {
                return React.createElement("div", null);
            }
            return React.createElement("div", { className: "layout horizontal wrap", style: css.filters }, React.createElement(SearchInput_1.default, { style: css.input, placeholder: "Message", value: this.props.filter.message, onChange: val => {
                    let filter = Object.assign({}, this.props.filter);
                    if (val) {
                        filter.message = val;
                    } else {
                        delete filter.message;
                    }
                    this.props.onFilter(filter);
                } }), React.createElement("div", { className: "bp3-select", style: css.type }, React.createElement("select", { value: this.props.filter.level || 'any', onChange: evt => {
                    let filter = Object.assign({}, this.props.filter);
                    let val = evt.target.value;
                    if (val === 'any') {
                        delete filter.level;
                    } else {
                        filter.level = val;
                    }
                    this.props.onFilter(filter);
                } }, React.createElement("option", { value: "any" }, "Any"), React.createElement("option", { value: "debug" }, "Debug"), React.createElement("option", { value: "info" }, "Info"), React.createElement("option", { value: "warning" }, "Warning"), React.createElement("option", { value: "error" }, "Error"), React.createElement("option", { value: "fatal" }, "Fatal"), React.createElement("option", { value: "panic" }, "Panic"))));
        }
    }
    exports.default = LogsFilter;
    
});
System.registerDynamic("app/components/LogsPage.js", ["npm:react@16.7.0.js", "app/stores/LogsStore.js", "app/actions/LogActions.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const LogsStore_1 = $__require("app/stores/LogsStore.js");
    const LogActions = $__require("app/actions/LogActions.js");
    const css = {
        button: {
            userSelect: 'none',
            margin: '0 5px 0 0'
        },
        buttonLast: {
            userSelect: 'none',
            margin: '0 0 0 0'
        },
        link: {
            cursor: 'pointer',
            userSelect: 'none',
            margin: '7px 5px 0 0'
        },
        current: {
            opacity: 0.5
        }
    };
    class LogsPage extends React.Component {
        constructor(props, context) {
            super(props, context);
            this.onChange = () => {
                this.setState(Object.assign({}, this.state, { page: LogsStore_1.default.page, pageCount: LogsStore_1.default.pageCount, pages: LogsStore_1.default.pages, count: LogsStore_1.default.count }));
            };
            this.state = {
                page: LogsStore_1.default.page,
                pageCount: LogsStore_1.default.pageCount,
                pages: LogsStore_1.default.pages,
                count: LogsStore_1.default.count
            };
        }
        componentDidMount() {
            LogsStore_1.default.addChangeListener(this.onChange);
        }
        componentWillUnmount() {
            LogsStore_1.default.removeChangeListener(this.onChange);
        }
        render() {
            let page = this.state.page;
            let pages = this.state.pages;
            if (pages <= 1) {
                return React.createElement("div", null);
            }
            let links = [];
            let start = Math.max(0, page - 7);
            let end = Math.min(pages, start + 15);
            for (let i = start; i < end; i++) {
                links.push(React.createElement("span", { key: i, style: page === i ? Object.assign({}, css.link, css.current) : css.link, onClick: () => {
                        LogActions.traverse(i);
                        if (this.props.onPage) {
                            this.props.onPage();
                        }
                    } }, i + 1));
            }
            return React.createElement("div", { className: "layout horizontal center-justified" }, React.createElement("button", { className: "bp3-button bp3-minimal bp3-icon-chevron-backward", hidden: pages < 5, disabled: page === 0, type: "button", onClick: () => {
                    LogActions.traverse(0);
                    if (this.props.onPage) {
                        this.props.onPage();
                    }
                } }), React.createElement("button", { className: "bp3-button bp3-minimal bp3-icon-chevron-left", style: css.button, disabled: page === 0, type: "button", onClick: () => {
                    LogActions.traverse(Math.max(0, this.state.page - 1));
                    if (this.props.onPage) {
                        this.props.onPage();
                    }
                } }), links, React.createElement("button", { className: "bp3-button bp3-minimal bp3-icon-chevron-right", style: css.button, disabled: page === pages - 1, type: "button", onClick: () => {
                    LogActions.traverse(Math.min(this.state.pages - 1, this.state.page + 1));
                    if (this.props.onPage) {
                        this.props.onPage();
                    }
                } }), React.createElement("button", { className: "bp3-button bp3-minimal bp3-icon-chevron-forward", hidden: pages < 5, disabled: page === pages - 1, type: "button", onClick: () => {
                    LogActions.traverse(this.state.pages - 1);
                    if (this.props.onPage) {
                        this.props.onPage();
                    }
                } }));
        }
    }
    exports.default = LogsPage;
    
});
System.registerDynamic("app/components/Logs.js", ["npm:react@16.7.0.js", "app/stores/LogsStore.js", "app/actions/LogActions.js", "app/components/Log.js", "app/components/LogsFilter.js", "app/components/Page.js", "app/components/PageHeader.js", "app/components/LogsPage.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const LogsStore_1 = $__require("app/stores/LogsStore.js");
    const LogActions = $__require("app/actions/LogActions.js");
    const Log_1 = $__require("app/components/Log.js");
    const LogsFilter_1 = $__require("app/components/LogsFilter.js");
    const Page_1 = $__require("app/components/Page.js");
    const PageHeader_1 = $__require("app/components/PageHeader.js");
    const LogsPage_1 = $__require("app/components/LogsPage.js");
    const css = {
        logs: {
            width: '100%',
            marginTop: '-3px',
            display: 'table',
            borderSpacing: '0 3px'
        },
        logsBox: {
            width: '100%',
            overflowY: 'auto'
        },
        header: {
            marginTop: '-19px'
        },
        heading: {
            margin: '19px 0 0 0'
        },
        button: {
            margin: '8px 0 0 8px'
        },
        buttons: {
            marginTop: '8px'
        }
    };
    class Logs extends React.Component {
        constructor(props, context) {
            super(props, context);
            this.onChange = () => {
                this.setState(Object.assign({}, this.state, { logs: LogsStore_1.default.logs, filter: LogsStore_1.default.filter }));
            };
            this.state = {
                logs: LogsStore_1.default.logs,
                filter: LogsStore_1.default.filter
            };
        }
        componentDidMount() {
            LogsStore_1.default.addChangeListener(this.onChange);
            LogActions.sync();
        }
        componentWillUnmount() {
            LogsStore_1.default.removeChangeListener(this.onChange);
        }
        render() {
            let logsDom = [];
            this.state.logs.forEach(log => {
                logsDom.push(React.createElement(Log_1.default, { key: log.id, log: log }));
            });
            let filterClass = 'bp3-button bp3-intent-primary bp3-icon-filter ';
            if (this.state.filter) {
                filterClass += 'bp3-active';
            }
            return React.createElement(Page_1.default, null, React.createElement(PageHeader_1.default, null, React.createElement("div", { className: "layout horizontal wrap", style: css.header }, React.createElement("h2", { style: css.heading }, "Logs"), React.createElement("div", { className: "flex" }), React.createElement("div", { style: css.buttons }, React.createElement("button", { className: filterClass, style: css.button, type: "button", onClick: () => {
                    if (this.state.filter === null) {
                        LogActions.filter({});
                    } else {
                        LogActions.filter(null);
                    }
                } }, "Filters")))), React.createElement(LogsFilter_1.default, { filter: this.state.filter, onFilter: filter => {
                    LogActions.filter(filter);
                } }), React.createElement("div", { style: css.logsBox }, React.createElement("div", { style: css.logs }, logsDom)), React.createElement(LogsPage_1.default, null));
        }
    }
    exports.default = Logs;
    
});
System.registerDynamic("app/stores/SettingsStore.js", ["app/dispatcher/Dispatcher.js", "app/EventEmitter.js", "app/types/SettingsTypes.js", "app/types/GlobalTypes.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const Dispatcher_1 = $__require("app/dispatcher/Dispatcher.js");
    const EventEmitter_1 = $__require("app/EventEmitter.js");
    const SettingsTypes = $__require("app/types/SettingsTypes.js");
    const GlobalTypes = $__require("app/types/GlobalTypes.js");
    class SettingsStore extends EventEmitter_1.default {
        constructor() {
            super(...arguments);
            this._token = Dispatcher_1.default.register(this._callback.bind(this));
        }
        _reset() {
            this._settings = undefined;
            this.emitChange();
        }
        get settings() {
            return this._settings;
        }
        get settingsM() {
            if (this._settings) {
                return Object.assign({}, this._settings);
            }
            return undefined;
        }
        emitChange() {
            this.emitDefer(GlobalTypes.CHANGE);
        }
        addChangeListener(callback) {
            this.on(GlobalTypes.CHANGE, callback);
        }
        removeChangeListener(callback) {
            this.removeListener(GlobalTypes.CHANGE, callback);
        }
        _sync(settings) {
            this._settings = Object.freeze(settings);
            this.emitChange();
        }
        _callback(action) {
            switch (action.type) {
                case GlobalTypes.RESET:
                    this._reset();
                    break;
                case SettingsTypes.SYNC:
                    this._sync(action.data);
                    break;
            }
        }
    }
    exports.default = new SettingsStore();
    
});
System.registerDynamic("app/stores/SubscriptionStore.js", ["app/dispatcher/Dispatcher.js", "app/EventEmitter.js", "app/types/SubscriptionTypes.js", "app/types/GlobalTypes.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const Dispatcher_1 = $__require("app/dispatcher/Dispatcher.js");
    const EventEmitter_1 = $__require("app/EventEmitter.js");
    const SubscriptionTypes = $__require("app/types/SubscriptionTypes.js");
    const GlobalTypes = $__require("app/types/GlobalTypes.js");
    class SubscriptionStore extends EventEmitter_1.default {
        constructor() {
            super(...arguments);
            this._token = Dispatcher_1.default.register(this._callback.bind(this));
        }
        get subscription() {
            return this._subscription;
        }
        get subscriptionM() {
            if (this._subscription) {
                return Object.assign({}, this._subscription);
            }
            return undefined;
        }
        emitChange() {
            this.emitDefer(GlobalTypes.CHANGE);
        }
        addChangeListener(callback) {
            this.on(GlobalTypes.CHANGE, callback);
        }
        removeChangeListener(callback) {
            this.removeListener(GlobalTypes.CHANGE, callback);
        }
        _sync(subscription) {
            this._subscription = Object.freeze(subscription);
            this.emitChange();
        }
        _callback(action) {
            switch (action.type) {
                case SubscriptionTypes.SYNC:
                    this._sync(action.data);
                    break;
            }
        }
    }
    exports.default = new SubscriptionStore();
    
});
System.registerDynamic("app/components/Page.js", ["npm:react@16.7.0.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const css = {
        page: {
            margin: '0 auto',
            padding: '30px 20px',
            minWidth: '200px',
            maxWidth: '1100px'
        }
    };
    class Page extends React.Component {
        render() {
            return React.createElement("div", { style: css.page }, this.props.children);
        }
    }
    exports.default = Page;
    
});
System.registerDynamic("app/components/PageHeader.js", ["npm:react@16.7.0.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const css = {
        header: {
            fontSize: '24px',
            paddingBottom: '8px',
            marginBottom: '20px',
            borderBottomStyle: 'solid'
        },
        label: {
            margin: 0
        }
    };
    class PageHeader extends React.Component {
        render() {
            let label;
            if (this.props.label) {
                label = React.createElement("h2", { style: css.label }, this.props.label);
            }
            return React.createElement("div", { className: "bp3-border", style: css.header }, label, this.props.children);
        }
    }
    exports.default = PageHeader;
    
});
System.registerDynamic("app/components/PagePanel.js", ["npm:react@16.7.0.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const css = {
        panel: {
            flex: 1,
            minWidth: '250px',
            padding: '0 10px'
        }
    };
    class PagePanel extends React.Component {
        render() {
            return React.createElement("div", { className: this.props.className, style: css.panel, hidden: this.props.hidden }, this.props.children);
        }
    }
    exports.default = PagePanel;
    
});
System.registerDynamic("app/components/PageSplit.js", ["npm:react@16.7.0.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    class PageSplit extends React.Component {
        render() {
            return React.createElement("div", { className: "layout horizontal wrap" }, this.props.children);
        }
    }
    exports.default = PageSplit;
    
});
System.registerDynamic("app/components/PageSelectButton.js", ["npm:react@16.7.0.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const css = {
        group: {
            marginBottom: '15px',
            width: '100%',
            maxWidth: '280px'
        },
        select: {
            width: '100%',
            borderTopLeftRadius: '3px',
            borderBottomLeftRadius: '3px'
        },
        selectInner: {
            width: '100%'
        },
        selectBox: {
            flex: '1'
        }
    };
    class PageSelectButton extends React.Component {
        render() {
            let buttonClass = 'bp3-button';
            if (this.props.buttonClass) {
                buttonClass += ' ' + this.props.buttonClass;
            }
            return React.createElement("div", { className: "bp3-control-group", style: css.group, hidden: this.props.hidden }, React.createElement("div", { style: css.selectBox }, React.createElement("div", { className: "bp3-select", style: css.select }, React.createElement("select", { style: css.selectInner, disabled: this.props.disabled, value: this.props.value || '', onChange: evt => {
                    this.props.onChange(evt.target.value);
                } }, this.props.children))), React.createElement("button", { className: buttonClass, disabled: this.props.disabled, onClick: this.props.onSubmit }, this.props.label));
        }
    }
    exports.default = PageSelectButton;
    
});
System.registerDynamic("app/components/PageSave.js", ["npm:react@16.7.0.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const css = {
        message: {
            marginTop: '6px'
        },
        box: {
            marginTop: '15px'
        },
        button: {
            marginLeft: '10px'
        },
        buttons: {
            flexShrink: 0
        }
    };
    class PageSave extends React.Component {
        render() {
            let style = this.props.light ? null : css.box;
            if (this.props.style) {
                style = Object.assign({}, style, this.props.style);
            }
            return React.createElement("div", { className: "layout horizontal", style: style, hidden: this.props.hidden && !this.props.children }, this.props.children, React.createElement("div", { className: "flex" }), React.createElement("div", { className: "layout horizontal" }, React.createElement("span", { style: css.message, hidden: !this.props.message }, this.props.message), React.createElement("div", { style: css.buttons }, React.createElement("button", { className: "bp3-button bp3-icon-cross", style: css.button, hidden: this.props.hidden, type: "button", disabled: !this.props.changed || this.props.disabled, onClick: this.props.onCancel }, "Cancel"), React.createElement("button", { className: "bp3-button bp3-intent-success bp3-icon-tick", style: css.button, hidden: this.props.hidden, type: "button", disabled: !this.props.changed || this.props.disabled, onClick: this.props.onSave }, "Save"))));
        }
    }
    exports.default = PageSave;
    
});
System.registerDynamic("app/components/ConfirmButton.js", ["npm:react@16.7.0.js", "npm:@blueprintjs/core@3.11.0.js", "app/Constants.js", "app/utils/MiscUtils.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const Blueprint = $__require("npm:@blueprintjs/core@3.11.0.js");
    const Constants = $__require("app/Constants.js");
    const MiscUtils = $__require("app/utils/MiscUtils.js");
    const css = {
        box: {
            display: 'inline-flex'
        },
        actionProgress: {
            position: 'absolute',
            bottom: 0,
            left: 0,
            borderRadius: 0,
            borderBottomLeftRadius: '3px',
            borderBottomRightRadius: '3px',
            width: '100%',
            height: '4px'
        },
        squareActionProgress: {
            position: 'absolute',
            bottom: 0,
            left: 0,
            borderRadius: 0,
            borderBottomLeftRadius: '1px',
            borderBottomRightRadius: '3px',
            width: '100%',
            height: '4px'
        },
        dialog: {
            width: '180px'
        }
    };
    class ConfirmButton extends React.Component {
        constructor(props, context) {
            super(props, context);
            this.openDialog = () => {
                this.setState(Object.assign({}, this.state, { dialog: true }));
            };
            this.closeDialog = () => {
                this.setState(Object.assign({}, this.state, { dialog: false }));
            };
            this.closeDialogConfirm = () => {
                this.setState(Object.assign({}, this.state, { dialog: false }));
                if (this.props.onConfirm) {
                    this.props.onConfirm();
                }
            };
            this.confirm = evt => {
                let confirmId = MiscUtils.uuid();
                if (evt.shiftKey) {
                    if (this.props.onConfirm) {
                        this.props.onConfirm();
                    }
                    return;
                }
                this.setState(Object.assign({}, this.state, { confirming: confirmId }));
                let i = 10;
                let id = setInterval(() => {
                    if (i > 100) {
                        clearInterval(id);
                        setTimeout(() => {
                            if (this.state.confirming === confirmId) {
                                this.setState(Object.assign({}, this.state, { confirm: 0, confirming: null }));
                                if (this.props.onConfirm) {
                                    this.props.onConfirm();
                                }
                            }
                        }, 250);
                        return;
                    } else if (!this.state.confirming) {
                        clearInterval(id);
                        this.setState(Object.assign({}, this.state, { confirm: 0, confirming: null }));
                        return;
                    }
                    if (i % 10 === 0) {
                        this.setState(Object.assign({}, this.state, { confirm: i / 10 }));
                    }
                    i += 1;
                }, 3);
            };
            this.clearConfirm = () => {
                this.setState(Object.assign({}, this.state, { confirm: 0, confirming: null }));
            };
            this.state = {
                dialog: false,
                confirm: 0,
                confirming: null
            };
        }
        render() {
            let style = Object.assign({}, this.props.style);
            style.position = 'relative';
            let className = this.props.className || '';
            if (!this.props.label) {
                className += ' bp3-button-empty';
            }
            if (Constants.mobile) {
                let confirmMsg = this.props.confirmMsg ? this.props.confirmMsg : 'Confirm ' + (this.props.label || '');
                return React.createElement("div", { style: css.box }, React.createElement("button", { className: 'bp3-button ' + className, style: style, type: "button", hidden: this.props.hidden, disabled: this.props.disabled, onMouseDown: Constants.mobile ? undefined : this.confirm, onMouseUp: Constants.mobile ? undefined : this.clearConfirm, onMouseLeave: Constants.mobile ? undefined : this.clearConfirm, onClick: Constants.mobile ? this.openDialog : undefined }, this.props.label), React.createElement(Blueprint.Dialog, { title: "Confirm", style: css.dialog, isOpen: this.state.dialog, onClose: this.closeDialog }, React.createElement("div", { className: "bp3-dialog-body" }, confirmMsg), React.createElement("div", { className: "bp3-dialog-footer" }, React.createElement("div", { className: "bp3-dialog-footer-actions" }, React.createElement("button", { className: "bp3-button", type: "button", onClick: this.closeDialog }, "Cancel"), React.createElement("button", { className: "bp3-button bp3-intent-primary", type: "button", onClick: this.closeDialogConfirm }, "Ok")))));
            } else {
                let confirmElem;
                if (this.state.confirming) {
                    let confirmStyle = {
                        width: this.state.confirm * 10 + '%',
                        backgroundColor: style.color,
                        borderRadius: 0,
                        left: 0
                    };
                    let progressStyle;
                    if (this.props.grouped) {
                        progressStyle = css.squareActionProgress;
                    } else {
                        progressStyle = css.actionProgress;
                    }
                    confirmElem = React.createElement("div", { className: 'bp3-progress-bar bp3-no-stripes ' + (this.props.progressClassName || ''), style: progressStyle }, React.createElement("div", { className: "bp3-progress-meter", style: confirmStyle }));
                }
                return React.createElement("button", { className: 'bp3-button ' + className, style: style, type: "button", hidden: this.props.hidden, disabled: this.props.disabled, onMouseDown: Constants.mobile ? undefined : this.confirm, onMouseUp: Constants.mobile ? undefined : this.clearConfirm, onMouseLeave: Constants.mobile ? undefined : this.clearConfirm, onClick: Constants.mobile ? this.openDialog : undefined }, this.props.label, confirmElem);
            }
        }
    }
    exports.default = ConfirmButton;
    
});
System.registerDynamic("app/components/PageInputButton.js", ["npm:react@16.7.0.js", "app/components/Help.js", "app/components/ConfirmButton.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const Help_1 = $__require("app/components/Help.js");
    const ConfirmButton_1 = $__require("app/components/ConfirmButton.js");
    const css = {
        group: {
            marginBottom: '15px',
            width: '100%',
            maxWidth: '280px'
        },
        groupList: {
            marginTop: '5px',
            width: '100%',
            maxWidth: '280px'
        },
        groupTop: {
            width: '100%',
            maxWidth: '280px'
        },
        label: {
            width: '100%',
            maxWidth: '280px'
        },
        input: {
            width: '100%'
        },
        inputBox: {
            flex: '1'
        },
        buttonTop: {
            marginTop: '5px'
        }
    };
    class PageInputButton extends React.Component {
        constructor() {
            super(...arguments);
            this.autoSelect = evt => {
                evt.currentTarget.select();
            };
        }
        render() {
            let buttonClass = 'bp3-button';
            if (this.props.buttonClass) {
                buttonClass += ' ' + this.props.buttonClass;
            }
            let buttonLabel = '';
            let buttonStyle;
            if (this.props.labelTop) {
                buttonStyle = css.buttonTop;
            } else {
                buttonLabel = this.props.label || '';
            }
            let button;
            if (this.props.buttonConfirm) {
                button = React.createElement(ConfirmButton_1.default, { className: buttonClass, style: buttonStyle, disabled: this.props.disabled || this.props.buttonDisabled, onConfirm: this.props.onSubmit, label: buttonLabel });
            } else {
                button = React.createElement("button", { className: buttonClass, style: buttonStyle, disabled: this.props.disabled || this.props.buttonDisabled, onClick: this.props.onSubmit }, buttonLabel);
            }
            if (this.props.labelTop) {
                return React.createElement("label", { className: "bp3-label", style: css.label, hidden: this.props.hidden }, this.props.label, React.createElement(Help_1.default, { title: this.props.label, content: this.props.help }), React.createElement("div", { className: "bp3-control-group", style: css.groupTop, hidden: this.props.hidden }, React.createElement("div", { style: css.inputBox }, React.createElement("input", { className: "bp3-input", style: css.input, type: this.props.type, disabled: this.props.disabled, readOnly: this.props.readOnly, autoCapitalize: "off", spellCheck: false, placeholder: this.props.placeholder, value: this.props.value || '', onClick: this.props.autoSelect ? this.autoSelect : null, onChange: evt => {
                        if (this.props.onChange) {
                            this.props.onChange(evt.target.value);
                        }
                    }, onKeyPress: evt => {
                        if (evt.key === 'Enter') {
                            this.props.onSubmit();
                        }
                    } })), React.createElement("div", null, button)));
            } else {
                return React.createElement("div", { className: "bp3-control-group", style: this.props.listStyle ? css.groupList : css.group, hidden: this.props.hidden }, React.createElement("div", { style: css.inputBox }, React.createElement("input", { className: "bp3-input", style: css.input, type: this.props.type, disabled: this.props.disabled, readOnly: this.props.readOnly, autoCapitalize: "off", spellCheck: false, placeholder: this.props.placeholder || '', value: this.props.value || '', onChange: evt => {
                        if (this.props.onChange) {
                            this.props.onChange(evt.target.value);
                        }
                    }, onKeyPress: evt => {
                        if (evt.key === 'Enter') {
                            this.props.onSubmit();
                        }
                    } })), React.createElement("div", null, button));
            }
        }
    }
    exports.default = PageInputButton;
    
});
System.registerDynamic("app/components/PageTextArea.js", ["npm:react@16.7.0.js", "app/components/Help.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const Help_1 = $__require("app/components/Help.js");
    const css = {
        label: {
            width: '100%',
            maxWidth: '280px'
        },
        textarea: {
            width: '100%',
            resize: 'none',
            fontSize: '12px',
            fontFamily: '"Lucida Console", Monaco, monospace'
        }
    };
    class PageTextArea extends React.Component {
        render() {
            return React.createElement("label", { className: "bp3-label", style: css.label, hidden: this.props.hidden }, this.props.label, React.createElement(Help_1.default, { title: this.props.label, content: this.props.help }), React.createElement("textarea", { className: "bp3-input", style: css.textarea, disabled: this.props.disabled, readOnly: this.props.readOnly, autoCapitalize: "off", spellCheck: false, placeholder: this.props.placeholder, rows: this.props.rows, value: this.props.value || '', onChange: evt => {
                    this.props.onChange(evt.target.value);
                } }));
        }
    }
    exports.default = PageTextArea;
    
});
System.registerDynamic("app/components/SettingsProvider.js", ["npm:react@16.7.0.js", "app/components/PageInput.js", "app/components/PageInputButton.js", "app/components/PageTextArea.js", "app/components/PageSwitch.js", "app/components/PageInfo.js", "app/components/PageSelect.js", "app/components/Help.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const PageInput_1 = $__require("app/components/PageInput.js");
    const PageInputButton_1 = $__require("app/components/PageInputButton.js");
    const PageTextArea_1 = $__require("app/components/PageTextArea.js");
    const PageSwitch_1 = $__require("app/components/PageSwitch.js");
    const PageInfo_1 = $__require("app/components/PageInfo.js");
    const PageSelect_1 = $__require("app/components/PageSelect.js");
    const Help_1 = $__require("app/components/Help.js");
    const css = {
        label: {
            fontSize: '16px',
            margin: '0 0 7px 0'
        },
        card: {
            marginBottom: '5px'
        },
        role: {
            margin: '9px 5px 0 5px',
            height: '20px'
        }
    };
    class SettingsProvider extends React.Component {
        constructor(props, context) {
            super(props, context);
            this.state = {
                addRole: ''
            };
        }
        clone() {
            return Object.assign({}, this.props.provider);
        }
        azure() {
            let provider = this.props.provider;
            return React.createElement("div", null, React.createElement(PageInput_1.default, { label: "Directory ID", help: "Azure active directory ID", type: "text", placeholder: "Azure directory ID", value: provider.tenant, onChange: val => {
                    let state = this.clone();
                    state.tenant = val;
                    this.props.onChange(state);
                } }), React.createElement(PageInput_1.default, { label: "Application ID", help: "Azure application ID", type: "text", placeholder: "Azure application ID", value: provider.client_id, onChange: val => {
                    let state = this.clone();
                    state.client_id = val;
                    this.props.onChange(state);
                } }), React.createElement(PageInput_1.default, { label: "Application Secret", help: "Azure application secret", type: "text", placeholder: "Azure application secret", value: provider.client_secret, onChange: val => {
                    let state = this.clone();
                    state.client_secret = val;
                    this.props.onChange(state);
                } }));
        }
        authzero() {
            let provider = this.props.provider;
            return React.createElement("div", null, React.createElement(PageInput_1.default, { label: "Auth0 Sub-Domain", help: "Subdomain of Auth0 application. Enter subdomain portion only such as 'pritunl' for pritunl.auth0.com", type: "text", placeholder: "Auth0 sub-domain", value: provider.domain, onChange: val => {
                    let state = this.clone();
                    state.domain = val;
                    this.props.onChange(state);
                } }), React.createElement(PageInput_1.default, { label: "Client ID", help: "Auth0 application client ID", type: "text", placeholder: "Auth0 client ID", value: provider.client_id, onChange: val => {
                    let state = this.clone();
                    state.client_id = val;
                    this.props.onChange(state);
                } }), React.createElement(PageInput_1.default, { label: "Client Secret", help: "Auth0 application client secret", type: "text", placeholder: "Auth0 client secret", value: provider.client_secret, onChange: val => {
                    let state = this.clone();
                    state.client_secret = val;
                    this.props.onChange(state);
                } }));
        }
        google() {
            let provider = this.props.provider;
            return React.createElement("div", null, React.createElement(PageInput_1.default, { label: "Domain", help: "Domain segment of email address to match", type: "text", placeholder: "Google domain to match", value: provider.domain, onChange: val => {
                    let state = this.clone();
                    state.domain = val;
                    this.props.onChange(state);
                } }), React.createElement(PageInput_1.default, { label: "Google Admin Email", help: "Optional, the email address of an administrator user in the Google G Suite to delegate API access to. This user will be used to get the groups of Google users. Only needed when providing the Google JSON private key.", type: "text", placeholder: "Google admin email", value: provider.google_email, onChange: val => {
                    let state = this.clone();
                    state.google_email = val;
                    this.props.onChange(state);
                } }), React.createElement(PageTextArea_1.default, { label: "Google JSON Private Key", help: "Optional, private key for service account in JSON format. This will copy the Google users groups to Pritunl Cloud. Also requires Google admin email.", placeholder: "Google JSON private key", rows: 6, value: provider.google_key, onChange: val => {
                    let state = this.clone();
                    state.google_key = val;
                    this.props.onChange(state);
                } }));
        }
        onelogin() {
            let provider = this.props.provider;
            return React.createElement("div", null, React.createElement(PageInput_1.default, { label: "Issuer URL", help: "Single sign-on URL found in OneLogin app settings", type: "text", placeholder: "OneLogin issuer URL", value: provider.issuer_url, onChange: val => {
                    let state = this.clone();
                    state.issuer_url = val;
                    this.props.onChange(state);
                } }), React.createElement(PageInput_1.default, { label: "SAML 2.0 Endpoint (HTTP)", help: "SAML 2.0 endpoint found in OneLogin app settings", type: "text", placeholder: "OneLogin SAML endpoint", value: provider.saml_url, onChange: val => {
                    let state = this.clone();
                    state.saml_url = val;
                    this.props.onChange(state);
                } }), React.createElement(PageTextArea_1.default, { label: "X.509 Certificate", help: "X.509 certificate found in OneLogin app settings", placeholder: "OneLogin X.509 certificate", rows: 6, value: provider.saml_cert, onChange: val => {
                    let state = this.clone();
                    state.saml_cert = val;
                    this.props.onChange(state);
                } }));
        }
        okta() {
            let provider = this.props.provider;
            return React.createElement("div", null, React.createElement(PageInput_1.default, { label: "Identity Provider Single Sign-On URL", help: "Single sign-on URL found in Okta app settings", type: "text", placeholder: "Okta single sign-on URL", value: provider.saml_url, onChange: val => {
                    let state = this.clone();
                    state.saml_url = val;
                    this.props.onChange(state);
                } }), React.createElement(PageInput_1.default, { label: "Identity Provider Issuer URL", help: "Issuer URL found in Okta app settings", type: "text", placeholder: "Okta issuer URL", value: provider.issuer_url, onChange: val => {
                    let state = this.clone();
                    state.issuer_url = val;
                    this.props.onChange(state);
                } }), React.createElement(PageTextArea_1.default, { label: "X.509 Certificate", help: "X.509 certificate found in Okta app settings", placeholder: "Okta X.509 certificate", rows: 6, value: provider.saml_cert, onChange: val => {
                    let state = this.clone();
                    state.saml_cert = val;
                    this.props.onChange(state);
                } }));
        }
        render() {
            let provider = this.props.provider;
            let label = '';
            let options;
            switch (provider.type) {
                case 'azure':
                    label = 'Azure';
                    options = this.azure();
                    break;
                case 'authzero':
                    label = 'Auth0';
                    options = this.authzero();
                    break;
                case 'google':
                    label = 'Google';
                    options = this.google();
                    break;
                case 'onelogin':
                    label = 'OneLogin';
                    options = this.onelogin();
                    break;
                case 'okta':
                    label = 'Okta';
                    options = this.okta();
                    break;
            }
            let roles = [];
            for (let role of provider.default_roles) {
                roles.push(React.createElement("div", { className: "bp3-tag bp3-tag-removable bp3-intent-primary", style: css.role, key: role }, role, React.createElement("button", { className: "bp3-tag-remove", onMouseUp: () => {
                        let rls = [...this.props.provider.default_roles];
                        let i = rls.indexOf(role);
                        if (i === -1) {
                            return;
                        }
                        rls.splice(i, 1);
                        let state = this.clone();
                        state.default_roles = rls;
                        this.props.onChange(state);
                    } })));
            }
            return React.createElement("div", { className: "bp3-card", style: css.card }, React.createElement("h6", { style: css.label }, label), React.createElement(PageInfo_1.default, { fields: [{
                    label: 'ID',
                    value: provider.id || 'None'
                }] }), React.createElement(PageInput_1.default, { label: "Label", help: "Provider label that will be shown to users on the login page", type: "text", placeholder: "Provider label", value: provider.label, onChange: val => {
                    let state = this.clone();
                    state.label = val;
                    this.props.onChange(state);
                } }), React.createElement("label", { className: "bp3-label", hidden: !provider.auto_create }, "Default Roles", React.createElement(Help_1.default, { title: "Default Roles", content: "When the user has authenticated for the first time these roles will be given to the user. These roles may also be used to update the users roles depending on the role management option." }), React.createElement("div", null, roles)), React.createElement(PageInputButton_1.default, { buttonClass: "bp3-intent-success bp3-icon-add", label: "Add", type: "text", placeholder: "Add default role", hidden: !provider.auto_create, value: this.state.addRole, onChange: val => {
                    this.setState(Object.assign({}, this.state, { addRole: val }));
                }, onSubmit: () => {
                    let rls = [...this.props.provider.default_roles];
                    if (!this.state.addRole) {
                        return;
                    }
                    if (rls.indexOf(this.state.addRole) === -1) {
                        rls.push(this.state.addRole);
                    }
                    rls.sort();
                    let state = this.clone();
                    state.default_roles = rls;
                    this.props.onChange(state);
                    this.setState(Object.assign({}, this.state, { addRole: '' }));
                } }), React.createElement(PageSwitch_1.default, { label: "Create user on authentication", help: "Create the user on first authentication. If this is disabled all users must be manually created before they are able to authenticate.", checked: provider.auto_create, onToggle: () => {
                    let state = this.clone();
                    state.auto_create = !state.auto_create;
                    if (!state.auto_create && state.role_management === 'set_on_insert') {
                        state.role_management = 'merge';
                    }
                    this.props.onChange(state);
                } }), React.createElement(PageSelect_1.default, { label: "Role Management", help: "When the user authenticates for the first time a user will be created and the users roles will be set to the roles configured above. This is referenced as set on insert. It may be desired to update the roles on subsequent authentications. For this the merge mode can be used which will take the users current roles and merge them with the roles configured above using all the roles from both sets. Overwrite mode will replace the users roles on every authentication with the roles configured above. It is important to consider that if a users roles are modified those modifications will be lost when the overwrite mode is used.", value: provider.role_management, onChange: val => {
                    let state = this.clone();
                    state.role_management = val;
                    this.props.onChange(state);
                } }, React.createElement("option", { value: "set_on_insert", hidden: !provider.auto_create }, "Set on insert"), React.createElement("option", { value: "merge" }, "Merge"), React.createElement("option", { value: "overwrite" }, "Overwrite")), options, React.createElement("button", { className: "bp3-button bp3-intent-danger", onClick: () => {
                    this.props.onRemove();
                } }, "Remove"));
        }
    }
    exports.default = SettingsProvider;
    
});
System.registerDynamic("app/components/PageInput.js", ["npm:react@16.7.0.js", "app/components/Help.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const Help_1 = $__require("app/components/Help.js");
    const css = {
        label: {
            width: '100%',
            maxWidth: '280px'
        },
        input: {
            width: '100%'
        }
    };
    class PageInput extends React.Component {
        constructor() {
            super(...arguments);
            this.autoSelect = evt => {
                evt.currentTarget.select();
            };
        }
        render() {
            let value = this.props.value;
            value = isNaN(value) ? this.props.value || '' : this.props.value;
            return React.createElement("label", { className: "bp3-label", style: css.label, hidden: this.props.hidden }, this.props.label, React.createElement(Help_1.default, { title: this.props.label, content: this.props.help }), React.createElement("input", { className: "bp3-input", style: css.input, type: this.props.type, disabled: this.props.disabled, readOnly: this.props.readOnly, autoCapitalize: "off", spellCheck: false, placeholder: this.props.placeholder, value: value, onClick: this.props.autoSelect ? this.autoSelect : null, onChange: evt => {
                    if (this.props.onChange) {
                        this.props.onChange(evt.target.value);
                    }
                } }));
        }
    }
    exports.default = PageInput;
    
});
System.registerDynamic("app/components/PageSelect.js", ["npm:react@16.7.0.js", "app/components/Help.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const Help_1 = $__require("app/components/Help.js");
    const css = {
        label: {
            display: 'inline-block'
        }
    };
    class PageSelect extends React.Component {
        render() {
            return React.createElement("div", { hidden: this.props.hidden }, React.createElement("label", { className: "bp3-label", style: css.label }, this.props.label, React.createElement(Help_1.default, { title: this.props.label, content: this.props.help }), React.createElement("div", { className: "bp3-select" }, React.createElement("select", { disabled: this.props.disabled, value: this.props.value || '', onChange: evt => {
                    this.props.onChange(evt.target.value);
                } }, this.props.children))));
        }
    }
    exports.default = PageSelect;
    
});
System.registerDynamic("app/components/Help.js", ["npm:react@16.7.0.js", "npm:@blueprintjs/core@3.11.0.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const Blueprint = $__require("npm:@blueprintjs/core@3.11.0.js");
    const css = {
        box: {
            position: 'relative',
            display: 'inline'
        },
        content: {
            padding: '20px'
        },
        button: {
            position: 'absolute',
            top: '-7px',
            left: '-2px',
            padding: '7px',
            background: 'none',
            opacity: 0.3
        },
        popover: {
            width: '230px'
        },
        popoverTarget: {
            top: '9px',
            left: '18px'
        },
        dialog: {
            maxWidth: '400px',
            margin: '30px 20px'
        }
    };
    let dialog = true;
    class Help extends React.Component {
        constructor(props, context) {
            super(props, context);
            this.state = {
                popover: false
            };
        }
        render() {
            let helpElm;
            if (this.state.popover) {
                if (dialog) {
                    helpElm = React.createElement(Blueprint.Dialog, { title: this.props.title, style: css.dialog, isOpen: this.state.popover, onClose: () => {
                            this.setState(Object.assign({}, this.state, { popover: false }));
                        } }, React.createElement("div", { className: "bp3-dialog-body" }, this.props.content), React.createElement("div", { className: "bp3-dialog-footer" }, React.createElement("div", { className: "bp3-dialog-footer-actions" }, React.createElement("button", { className: "bp3-button", type: "button", onClick: () => {
                            this.setState(Object.assign({}, this.state, { popover: !this.state.popover }));
                        } }, "Close"))));
                } else {
                    helpElm = React.createElement("span", { className: "bp3-popover-target", style: css.popoverTarget }, React.createElement("span", { className: "bp3-overlay bp3-overlay-inline" }, React.createElement("span", null, React.createElement("div", { className: 'bp3-transition-container ' + 'bp3-tether-element-attached-middle ' + 'bp3-tether-element-attached-left ' + 'bp3-tether-target-attached-middle ' + 'bp3-tether-target-attached-right bp3-overlay-content', style: css.popover }, React.createElement("div", { className: "bp3-popover" }, React.createElement("div", { className: "bp3-popover-arrow" }, React.createElement("svg", { viewBox: "0 0 30 30" }, React.createElement("path", { className: "bp3-popover-arrow-border", d: 'M8.11 6.302c1.015-.936 1.887-2.922 ' + '1.887-4.297v26c0-1.378-' + '.868-3.357-1.888-4.297L.925 ' + '17.09c-1.237-1.14-1.233-3.034 0-4.17L8.11 6.302z' }), React.createElement("path", { className: "bp3-popover-arrow-fill", d: 'M8.787 7.036c1.22-1.125 2.21-3.376 ' + '2.21-5.03V0v30-2.005c0-1.654-' + '.983-3.9-2.21-5.03l-7.183-6.616c-' + '.81-.746-.802-1.96 0-2.7l7.183-6.614z' }))), React.createElement("div", { className: "bp3-popover-content", style: css.content }, React.createElement("h5", null, this.props.title), React.createElement("div", null, this.props.content)))))));
                }
            }
            return React.createElement("div", { style: css.box }, React.createElement("div", { className: "bp3-button bp3-minimal bp3-icon-help", style: css.button, onClick: () => {
                    this.setState(Object.assign({}, this.state, { popover: !this.state.popover }));
                } }), helpElm);
        }
    }
    exports.default = Help;
    
});
System.registerDynamic("app/components/PageSwitch.js", ["npm:react@16.7.0.js", "app/components/Help.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const Help_1 = $__require("app/components/Help.js");
    const css = {
        label: {
            display: 'inline-block'
        }
    };
    class PageSwitch extends React.Component {
        render() {
            return React.createElement("div", { hidden: this.props.hidden }, React.createElement("label", { className: "bp3-control bp3-switch", style: css.label }, React.createElement("input", { type: "checkbox", disabled: this.props.disabled, checked: !!this.props.checked, onChange: this.props.onToggle }), React.createElement("span", { className: "bp3-control-indicator" }), this.props.label), React.createElement(Help_1.default, { title: this.props.label, content: this.props.help }));
        }
    }
    exports.default = PageSwitch;
    
});
System.registerDynamic("app/components/CopyButton.js", ["npm:react@16.7.0.js", "app/Constants.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const Constants = $__require("app/Constants.js");
    const css = {
        copy: {
            cursor: 'pointer',
            marginLeft: '3px'
        },
        copyHover: {
            cursor: 'pointer',
            marginLeft: '3px',
            opacity: 0.7
        },
        copyClicked: {
            cursor: 'pointer',
            marginLeft: '3px',
            opacity: 0.5
        }
    };
    class CopyButton extends React.Component {
        constructor(props, context) {
            super(props, context);
            this.state = {
                hover: false,
                click: false,
                copied: false
            };
        }
        render() {
            let style;
            if (this.state.click && !this.state.copied) {
                style = css.copyClicked;
            } else if (this.state.hover && !this.state.copied) {
                style = css.copyHover;
            } else {
                style = css.copy;
            }
            let className = 'bp3-icon-standard';
            if (this.state.copied) {
                className += ' bp3-icon-tick bp3-intent-success';
            } else {
                className += ' bp3-icon-clipboard';
            }
            return React.createElement("span", { ref: elem => this.elem = elem, className: className, style: style, onMouseEnter: () => {
                    this.setState(Object.assign({}, this.state, { hover: true }));
                }, onMouseLeave: () => {
                    this.setState(Object.assign({}, this.state, { hover: false, click: false }));
                }, onMouseDown: () => {
                    this.setState(Object.assign({}, this.state, { click: true }));
                }, onMouseUp: () => {
                    this.setState(Object.assign({}, this.state, { click: false }));
                }, onClick: () => {
                    this.setState(Object.assign({}, this.state, { copied: true }));
                    setTimeout(() => {
                        this.setState(Object.assign({}, this.state, { copied: false }));
                    }, 1200);
                    let elem = document.createElement('input');
                    elem.contentEditable = 'true';
                    elem.readOnly = true;
                    elem.style.position = 'absolute';
                    elem.style.width = '1px';
                    elem.style.height = '1px';
                    elem.style.padding = '0px';
                    elem.style.border = 'none';
                    elem.style.opacity = '0';
                    elem.value = this.props.value;
                    this.elem.parentElement.append(elem);
                    if (Constants.mobileOs === 'iOS') {
                        let range = document.createRange();
                        range.selectNodeContents(elem);
                        let selection = window.getSelection();
                        selection.removeAllRanges();
                        selection.addRange(range);
                        elem.setSelectionRange(0, 999999);
                    } else {
                        elem.select();
                    }
                    document.execCommand('copy');
                    elem.remove();
                } });
        }
    }
    exports.default = CopyButton;
    
});
System.registerDynamic("app/components/PageInfo.js", ["npm:react@16.7.0.js", "app/components/CopyButton.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const CopyButton_1 = $__require("app/components/CopyButton.js");
    const css = {
        label: {
            width: '100%',
            maxWidth: '320px'
        },
        value: {
            wordWrap: 'break-word'
        },
        item: {
            marginBottom: '5px'
        },
        bar: {
            maxWidth: '280px'
        },
        copy: {
            cursor: 'pointer',
            marginLeft: '3px'
        },
        copyHover: {
            cursor: 'pointer',
            marginLeft: '3px',
            opacity: 0.7
        }
    };
    class PageInfo extends React.Component {
        render() {
            let fields = [];
            let bars = [];
            for (let field of this.props.fields || []) {
                if (field == null) {
                    continue;
                }
                let value;
                let copyBtn;
                if (typeof field.value === 'string') {
                    value = field.value;
                    if (field.copy) {
                        copyBtn = React.createElement(CopyButton_1.default, { value: field.value });
                    }
                } else if (typeof field.value === 'number') {
                    value = field.value.toString();
                    if (field.copy) {
                        copyBtn = React.createElement(CopyButton_1.default, { value: field.value.toString() });
                    }
                } else {
                    value = [];
                    for (let i = 0; i < field.value.length; i++) {
                        let copyItemBtn;
                        if (field.copy) {
                            copyItemBtn = React.createElement(CopyButton_1.default, { value: field.value[i] });
                        }
                        value.push(React.createElement("div", { key: i }, field.value[i], copyItemBtn));
                    }
                }
                fields.push(React.createElement("div", { key: field.label, style: css.item }, field.label, React.createElement("div", { className: field.valueClass || 'bp3-text-muted', style: css.value }, value, copyBtn)));
            }
            for (let bar of this.props.bars || []) {
                let style = {
                    width: (bar.value || 0) + '%'
                };
                bars.push(React.createElement("div", { key: bar.label, style: css.item }, bar.label, React.createElement("div", { className: 'bp3-progress-bar ' + (bar.progressClass || ''), style: css.bar }, React.createElement("div", { className: "bp3-progress-meter", style: style }))));
            }
            let labelStyle;
            if (this.props.style) {
                labelStyle = Object.assign({}, css.label, this.props.style);
            } else {
                labelStyle = css.label;
            }
            return React.createElement("label", { className: "bp3-label", style: labelStyle, hidden: this.props.hidden }, fields, bars);
        }
    }
    exports.default = PageInfo;
    
});
System.registerDynamic("app/components/SettingsSecondaryProvider.js", ["npm:react@16.7.0.js", "app/components/PageInput.js", "app/components/PageSelect.js", "app/components/PageSwitch.js", "app/components/PageInfo.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const PageInput_1 = $__require("app/components/PageInput.js");
    const PageSelect_1 = $__require("app/components/PageSelect.js");
    const PageSwitch_1 = $__require("app/components/PageSwitch.js");
    const PageInfo_1 = $__require("app/components/PageInfo.js");
    const css = {
        label: {
            fontSize: '16px',
            margin: '0 0 7px 0'
        },
        card: {
            marginBottom: '5px'
        },
        role: {
            margin: '9px 5px 0 5px',
            height: '20px'
        }
    };
    class SettingsSecondaryProvider extends React.Component {
        clone() {
            return Object.assign({}, this.props.provider);
        }
        duo() {
            let provider = this.props.provider;
            return React.createElement("div", null, React.createElement(PageInput_1.default, { label: "Duo API Hostname", help: "Duo API hostname found in Duo admin console.", type: "text", placeholder: "Duo API hostname", value: provider.duo_hostname, onChange: val => {
                    let state = this.clone();
                    state.duo_hostname = val;
                    this.props.onChange(state);
                } }), React.createElement(PageInput_1.default, { label: "Duo Integration Key", help: "Duo integration key found in Duo admin console.", type: "text", placeholder: "Duo integration key", value: provider.duo_key, onChange: val => {
                    let state = this.clone();
                    state.duo_key = val;
                    this.props.onChange(state);
                } }), React.createElement(PageInput_1.default, { label: "Duo Secret Key", help: "Duo secret key found in Duo admin console.", type: "text", placeholder: "Duo secret key", value: provider.duo_secret, onChange: val => {
                    let state = this.clone();
                    state.duo_secret = val;
                    this.props.onChange(state);
                } }), React.createElement(PageSwitch_1.default, { label: "Push authentication", help: "Allow push authentication.", checked: provider.push_factor, onToggle: () => {
                    let state = this.clone();
                    state.push_factor = !state.push_factor;
                    this.props.onChange(state);
                } }), React.createElement(PageSwitch_1.default, { label: "Phone authentication", help: "Allow phone authentication.", checked: provider.phone_factor, onToggle: () => {
                    let state = this.clone();
                    state.phone_factor = !state.phone_factor;
                    this.props.onChange(state);
                } }), React.createElement(PageSwitch_1.default, { label: "Passcode authentication", help: "Allow passcode authentication.", checked: provider.passcode_factor, onToggle: () => {
                    let state = this.clone();
                    state.passcode_factor = !state.passcode_factor;
                    this.props.onChange(state);
                } }), React.createElement(PageSwitch_1.default, { label: "SMS authentication", help: "Allow SMS authentication.", checked: provider.sms_factor, onToggle: () => {
                    let state = this.clone();
                    state.sms_factor = !state.sms_factor;
                    this.props.onChange(state);
                } }));
        }
        onelogin() {
            let provider = this.props.provider;
            return React.createElement("div", null, React.createElement(PageInput_1.default, { label: "OneLogin API Client ID", help: "OneLogin API client ID found in OneLogin admin console.", type: "text", placeholder: "OneLogin API client ID", value: provider.one_login_id, onChange: val => {
                    let state = this.clone();
                    state.one_login_id = val;
                    this.props.onChange(state);
                } }), React.createElement(PageInput_1.default, { label: "OneLogin API Client Secret", help: "OneLogin API client secret found in OneLogin admin console.", type: "text", placeholder: "OneLogin API client secret", value: provider.one_login_secret, onChange: val => {
                    let state = this.clone();
                    state.one_login_secret = val;
                    this.props.onChange(state);
                } }), React.createElement(PageSelect_1.default, { label: "OneLogin API Region", help: "OneLogin region for API requests.", value: provider.one_login_region, onChange: val => {
                    let state = this.clone();
                    state.one_login_region = val;
                    this.props.onChange(state);
                } }, React.createElement("option", { value: "us" }, "United States"), React.createElement("option", { value: "eu" }, "Europe")), React.createElement(PageSwitch_1.default, { label: "Push authentication", help: "Allow push authentication.", checked: provider.push_factor, onToggle: () => {
                    let state = this.clone();
                    state.push_factor = !state.push_factor;
                    this.props.onChange(state);
                } }), React.createElement(PageSwitch_1.default, { label: "Passcode authentication", help: "Allow passcode authentication.", checked: provider.passcode_factor, onToggle: () => {
                    let state = this.clone();
                    state.passcode_factor = !state.passcode_factor;
                    this.props.onChange(state);
                } }));
        }
        okta() {
            let provider = this.props.provider;
            return React.createElement("div", null, React.createElement(PageInput_1.default, { label: "Okta Domain", help: "Okta domain used to login to Okta such as 'pritunl.okta.com'.", type: "text", placeholder: "Okta domain", value: provider.okta_domain, onChange: val => {
                    let state = this.clone();
                    state.okta_domain = val;
                    this.props.onChange(state);
                } }), React.createElement(PageInput_1.default, { label: "Okta API Token", help: "Okta API token found in Okta admin console.", type: "text", placeholder: "Okta API token", value: provider.okta_token, onChange: val => {
                    let state = this.clone();
                    state.okta_token = val;
                    this.props.onChange(state);
                } }), React.createElement(PageSwitch_1.default, { label: "Push authentication", help: "Allow push authentication.", checked: provider.push_factor, onToggle: () => {
                    let state = this.clone();
                    state.push_factor = !state.push_factor;
                    this.props.onChange(state);
                } }), React.createElement(PageSwitch_1.default, { label: "Passcode authentication", help: "Allow passcode authentication.", checked: provider.passcode_factor, onToggle: () => {
                    let state = this.clone();
                    state.passcode_factor = !state.passcode_factor;
                    this.props.onChange(state);
                } }));
        }
        render() {
            let provider = this.props.provider;
            let label = '';
            let options;
            switch (provider.type) {
                case 'duo':
                    label = 'Duo';
                    options = this.duo();
                    break;
                case 'one_login':
                    label = 'OneLogin';
                    options = this.onelogin();
                    break;
                case 'okta':
                    label = 'Okta';
                    options = this.okta();
                    break;
            }
            return React.createElement("div", { className: "bp3-card", style: css.card }, React.createElement("h6", { style: css.label }, label), React.createElement(PageInfo_1.default, { fields: [{
                    label: 'ID',
                    value: provider.id || 'None'
                }] }), React.createElement(PageInput_1.default, { label: "Name", help: "Two-factor provider name.", type: "text", placeholder: "Two-factor provider name", value: provider.name, onChange: val => {
                    let state = this.clone();
                    state.name = val;
                    this.props.onChange(state);
                } }), React.createElement(PageInput_1.default, { label: "Label", help: "Two-factor provider label that will be shown to users on the login page.", type: "text", placeholder: "Two-factor provider label", value: provider.label, onChange: val => {
                    let state = this.clone();
                    state.label = val;
                    this.props.onChange(state);
                } }), options, React.createElement("button", { className: "bp3-button bp3-intent-danger", onClick: () => {
                    this.props.onRemove();
                } }, "Remove"));
        }
    }
    exports.default = SettingsSecondaryProvider;
    
});
System.registerDynamic("app/components/NonState.js", ["npm:react@16.7.0.js", "app/Constants.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const Constants = $__require("app/Constants.js");
    const css = {
        state: {
            height: 'auto'
        }
    };
    class NonState extends React.Component {
        constructor(props, context) {
            super(props, context);
            this.state = {
                initialized: false
            };
        }
        componentDidMount() {
            this.timeout = window.setTimeout(() => {
                this.setState(Object.assign({}, this.state, { initialized: true }));
            }, Constants.loadDelay);
        }
        componentWillUnmount() {
            if (this.timeout) {
                window.clearTimeout(this.timeout);
            }
        }
        render() {
            let description;
            if (this.props.description) {
                description = React.createElement("div", { className: "bp3-non-ideal-state-description" }, this.props.description);
            }
            return React.createElement("div", { className: "bp3-non-ideal-state", style: css.state, hidden: this.props.hidden || !this.state.initialized }, React.createElement("div", { className: "bp3-non-ideal-state-visual bp3-non-ideal-state-icon" }, React.createElement("span", { className: 'bp3-icon ' + this.props.iconClass })), React.createElement("h4", { className: "bp3-non-ideal-state-title" }, this.props.title), description);
        }
    }
    exports.default = NonState;
    
});
System.registerDynamic("app/components/Settings.js", ["npm:react@16.7.0.js", "app/stores/SettingsStore.js", "app/stores/SubscriptionStore.js", "app/actions/SettingsActions.js", "app/components/Page.js", "app/components/PageHeader.js", "app/components/PagePanel.js", "app/components/PageSplit.js", "app/components/PageInput.js", "app/components/PageSwitch.js", "app/components/PageSelectButton.js", "app/components/PageSave.js", "app/components/SettingsProvider.js", "app/components/SettingsSecondaryProvider.js", "app/components/NonState.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const SettingsStore_1 = $__require("app/stores/SettingsStore.js");
    const SubscriptionStore_1 = $__require("app/stores/SubscriptionStore.js");
    const SettingsActions = $__require("app/actions/SettingsActions.js");
    const Page_1 = $__require("app/components/Page.js");
    const PageHeader_1 = $__require("app/components/PageHeader.js");
    const PagePanel_1 = $__require("app/components/PagePanel.js");
    const PageSplit_1 = $__require("app/components/PageSplit.js");
    const PageInput_1 = $__require("app/components/PageInput.js");
    const PageSwitch_1 = $__require("app/components/PageSwitch.js");
    const PageSelectButton_1 = $__require("app/components/PageSelectButton.js");
    const PageSave_1 = $__require("app/components/PageSave.js");
    const SettingsProvider_1 = $__require("app/components/SettingsProvider.js");
    const SettingsSecondaryProvider_1 = $__require("app/components/SettingsSecondaryProvider.js");
    const NonState_1 = $__require("app/components/NonState.js");
    const css = {
        providers: {
            paddingBottom: '6px',
            marginBottom: '5px',
            borderBottomStyle: 'solid'
        },
        providersLabel: {
            margin: 0
        },
        secondaryProviders: {
            paddingBottom: '6px',
            marginTop: '5px',
            marginBottom: '5px',
            borderBottomStyle: 'solid'
        }
    };
    class Settings extends React.Component {
        constructor(props, context) {
            super(props, context);
            this.onChange = () => {
                this.setState(Object.assign({}, this.state, { changed: false, settings: SettingsStore_1.default.settingsM }));
            };
            this.onSave = () => {
                this.setState(Object.assign({}, this.state, { disabled: true }));
                SettingsActions.commit(this.state.settings).then(() => {
                    this.setState(Object.assign({}, this.state, { message: 'Your changes have been saved', changed: false, disabled: false }));
                }).catch(() => {
                    this.setState(Object.assign({}, this.state, { message: '', disabled: false }));
                });
            };
            this.set = (name, val) => {
                let settings = Object.assign({}, this.state.settings);
                settings[name] = val;
                this.setState(Object.assign({}, this.state, { changed: true, message: '', settings: settings }));
            };
            this.state = {
                changed: false,
                disabled: false,
                message: '',
                provider: 'google',
                secondaryProvider: 'duo',
                settings: SettingsStore_1.default.settingsM
            };
        }
        componentDidMount() {
            SettingsStore_1.default.addChangeListener(this.onChange);
            SettingsActions.sync();
        }
        componentWillUnmount() {
            SettingsStore_1.default.removeChangeListener(this.onChange);
        }
        render() {
            let settings = this.state.settings;
            if (!settings) {
                return React.createElement("div", null);
            }
            let subscriptionActive = SubscriptionStore_1.default.subscription ? SubscriptionStore_1.default.subscription.active : false;
            let providers = [];
            for (let i = 0; i < settings.auth_providers.length; i++) {
                providers.push(React.createElement(SettingsProvider_1.default, { key: i, provider: settings.auth_providers[i], onChange: state => {
                        let prvdrs = [...this.state.settings.auth_providers];
                        prvdrs[i] = state;
                        this.set('auth_providers', prvdrs);
                    }, onRemove: () => {
                        let prvdrs = [...this.state.settings.auth_providers];
                        prvdrs.splice(i, 1);
                        this.set('auth_providers', prvdrs);
                    } }));
            }
            let secondaryProviders = [];
            for (let i = 0; i < settings.auth_secondary_providers.length; i++) {
                secondaryProviders.push(React.createElement(SettingsSecondaryProvider_1.default, { key: i, provider: settings.auth_secondary_providers[i], onChange: state => {
                        let prvdrs = [...this.state.settings.auth_secondary_providers];
                        prvdrs[i] = state;
                        this.set('auth_secondary_providers', prvdrs);
                    }, onRemove: () => {
                        let prvdrs = [...this.state.settings.auth_secondary_providers];
                        prvdrs.splice(i, 1);
                        this.set('auth_secondary_providers', prvdrs);
                    } }));
            }
            return React.createElement(Page_1.default, null, React.createElement(PageHeader_1.default, { label: "Settings" }), React.createElement(PageSplit_1.default, null, React.createElement(PagePanel_1.default, { hidden: subscriptionActive }, React.createElement(NonState_1.default, { hidden: false, iconClass: "bp3-icon-credit-card", title: "Subscription Required", description: "Subscription required for single sign-on." })), React.createElement(PagePanel_1.default, { hidden: !subscriptionActive }, React.createElement("div", { className: "bp3-border", style: css.providers }, React.createElement("h5", { style: css.providersLabel }, "Authentication Providers")), providers, React.createElement(PageSelectButton_1.default, { label: "Add Provider", value: this.state.provider, buttonClass: "bp3-intent-success", onChange: val => {
                    this.setState(Object.assign({}, this.state, { provider: val }));
                }, onSubmit: () => {
                    let authProviders = [...settings.auth_providers, {
                        type: this.state.provider,
                        default_roles: [],
                        auto_create: true,
                        role_management: 'set_on_insert'
                    }];
                    this.set('auth_providers', authProviders);
                } }, React.createElement("option", { value: "authzero" }, "Auth0"), React.createElement("option", { value: "azure" }, "Azure"), React.createElement("option", { value: "google" }, "Google"), React.createElement("option", { value: "onelogin" }, "OneLogin"), React.createElement("option", { value: "okta" }, "Okta"))), React.createElement(PagePanel_1.default, null, React.createElement("div", { className: "bp3-border", style: css.secondaryProviders }, React.createElement("h5", { style: css.providersLabel }, "Two-Factor Providers")), secondaryProviders, React.createElement(PageSelectButton_1.default, { label: "Add Secondary Provider", value: this.state.secondaryProvider, buttonClass: "bp3-intent-success", onChange: val => {
                    this.setState(Object.assign({}, this.state, { secondaryProvider: val }));
                }, onSubmit: () => {
                    let authProviders = [...settings.auth_secondary_providers, {
                        type: this.state.secondaryProvider
                    }];
                    this.set('auth_secondary_providers', authProviders);
                } }, React.createElement("option", { value: "duo" }, "Duo"), React.createElement("option", { value: "one_login" }, "OneLogin"), React.createElement("option", { value: "okta" }, "Okta")), React.createElement(PageInput_1.default, { label: "Admin Session Expire Minutes", help: "Number of inactive minutes before a admin session expires", type: "text", placeholder: "Session expire", value: this.state.settings.auth_admin_expire, onChange: val => {
                    this.set('auth_admin_expire', parseInt(val, 10));
                } }), React.createElement(PageInput_1.default, { label: "Admin Session Max Duration Minutes", help: "Number of minutes from start of a admin session until expiration", type: "text", placeholder: "Session max duration", value: this.state.settings.auth_admin_max_duration, onChange: val => {
                    this.set('auth_admin_max_duration', parseInt(val, 10));
                } }), React.createElement(PageInput_1.default, { label: "User Session Expire Minutes", help: "Number of inactive minutes before a user session expires", type: "text", placeholder: "Session expire", value: this.state.settings.auth_user_expire, onChange: val => {
                    this.set('auth_user_expire', parseInt(val, 10));
                } }), React.createElement(PageInput_1.default, { label: "User Session Max Duration Minutes", help: "Number of minutes from start of a user session until expiration", type: "text", placeholder: "Session max duration", value: this.state.settings.auth_user_max_duration, onChange: val => {
                    this.set('auth_user_max_duration', parseInt(val, 10));
                } }), React.createElement(PageInput_1.default, { label: "Elasticsearch Address", help: "Address of Elasticsearch server", type: "text", placeholder: "Elasticsearch address", value: this.state.settings.elastic_address, onChange: val => {
                    this.set('elastic_address', val);
                } }), React.createElement(PageSwitch_1.default, { label: "Elasticsearch log proxy requests", help: "Send all user requests to the Elasticsearch server. The request header, URL query values and user information such as user ID, IP address and location will be included. If the request body contains form fields, json or xml this data will also be included.", checked: this.state.settings.elastic_proxy_requests, onToggle: () => {
                    this.set('elastic_proxy_requests', !this.state.settings.elastic_proxy_requests);
                } }))), React.createElement(PageSave_1.default, { message: this.state.message, changed: this.state.changed, disabled: this.state.disabled, onCancel: () => {
                    this.setState(Object.assign({}, this.state, { changed: false, message: 'Your changes have been discarded', settings: SettingsStore_1.default.settingsM }));
                }, onSave: this.onSave }));
        }
    }
    exports.default = Settings;
    
});
System.registerDynamic("app/components/OrganizationSelect.js", ["npm:react@16.7.0.js", "app/actions/OrganizationActions.js", "app/stores/OrganizationsStore.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const OrganizationActions = $__require("app/actions/OrganizationActions.js");
    const OrganizationsStore_1 = $__require("app/stores/OrganizationsStore.js");
    const css = {
        select: {
            marginRight: '11px'
        }
    };
    class Organization extends React.Component {
        constructor(props, context) {
            super(props, context);
            this.onChange = () => {
                this.setState(Object.assign({}, this.state, { organizations: OrganizationsStore_1.default.organizations, current: OrganizationsStore_1.default.current }));
            };
            this.state = {
                organizations: OrganizationsStore_1.default.organizations,
                current: null
            };
        }
        componentDidMount() {
            OrganizationsStore_1.default.addChangeListener(this.onChange);
        }
        componentWillUnmount() {
            OrganizationsStore_1.default.removeChangeListener(this.onChange);
        }
        render() {
            let orgsSelect = [];
            this.state.organizations.forEach(org => {
                orgsSelect.push(React.createElement("option", { key: org.id, value: org.id }, org.name));
            });
            return React.createElement("div", { style: css.select }, React.createElement("div", { className: "bp3-select", hidden: this.props.hidden }, React.createElement("select", { value: this.state.current || '', onChange: evt => {
                    OrganizationActions.setCurrent(evt.target.value);
                } }, orgsSelect)));
        }
    }
    exports.default = Organization;
    
});
System.registerDynamic("app/stores/UserStore.js", ["app/dispatcher/Dispatcher.js", "app/EventEmitter.js", "app/types/UserTypes.js", "app/types/GlobalTypes.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const Dispatcher_1 = $__require("app/dispatcher/Dispatcher.js");
    const EventEmitter_1 = $__require("app/EventEmitter.js");
    const UserTypes = $__require("app/types/UserTypes.js");
    const GlobalTypes = $__require("app/types/GlobalTypes.js");
    class UserStore extends EventEmitter_1.default {
        constructor() {
            super(...arguments);
            this._token = Dispatcher_1.default.register(this._callback.bind(this));
        }
        _reset() {
            this._user = undefined;
            this.emitChange();
        }
        get user() {
            return this._user;
        }
        get userM() {
            if (this._user) {
                return Object.assign({}, this._user);
            }
            return undefined;
        }
        emitChange() {
            this.emitDefer(GlobalTypes.CHANGE);
        }
        addChangeListener(callback) {
            this.on(GlobalTypes.CHANGE, callback);
        }
        removeChangeListener(callback) {
            this.removeListener(GlobalTypes.CHANGE, callback);
        }
        _load(user) {
            this._user = Object.freeze(user);
            this.emitChange();
        }
        _unload() {
            this._user = null;
            this.emitChange();
        }
        _callback(action) {
            switch (action.type) {
                case GlobalTypes.RESET:
                    this._reset();
                    break;
                case UserTypes.LOAD:
                    this._load(action.data.user);
                    break;
                case UserTypes.UNLOAD:
                    this._unload();
                    break;
            }
        }
    }
    exports.default = new UserStore();
    
});
System.registerDynamic("app/types/UserTypes.js", [], true, function ($__require, exports, module) {
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.SYNC = 'user.sync';
  exports.TRAVERSE = 'user.traverse';
  exports.FILTER = 'user.filter';
  exports.LOAD = 'user.load';
  exports.UNLOAD = 'user.unload';
  exports.CHANGE = 'user.change';
  
});
System.registerDynamic("app/stores/UsersStore.js", ["app/dispatcher/Dispatcher.js", "app/EventEmitter.js", "app/types/UserTypes.js", "app/types/GlobalTypes.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const Dispatcher_1 = $__require("app/dispatcher/Dispatcher.js");
    const EventEmitter_1 = $__require("app/EventEmitter.js");
    const UserTypes = $__require("app/types/UserTypes.js");
    const GlobalTypes = $__require("app/types/GlobalTypes.js");
    class UsersStore extends EventEmitter_1.default {
        constructor() {
            super(...arguments);
            this._users = Object.freeze([]);
            this._filter = null;
            this._token = Dispatcher_1.default.register(this._callback.bind(this));
        }
        _reset() {
            this._users = Object.freeze([]);
            this._page = undefined;
            this._pageCount = undefined;
            this._filter = null;
            this._count = undefined;
            this.emitChange();
        }
        get users() {
            return this._users;
        }
        get usersM() {
            let users = [];
            this._users.forEach(user => {
                users.push(Object.assign({}, user));
            });
            return users;
        }
        get page() {
            return this._page || 0;
        }
        get pageCount() {
            return this._pageCount || 50;
        }
        get pages() {
            return Math.ceil(this.count / this.pageCount);
        }
        get filter() {
            return this._filter;
        }
        get count() {
            return this._count || 0;
        }
        emitChange() {
            this.emitDefer(GlobalTypes.CHANGE);
        }
        addChangeListener(callback) {
            this.on(GlobalTypes.CHANGE, callback);
        }
        removeChangeListener(callback) {
            this.removeListener(GlobalTypes.CHANGE, callback);
        }
        _traverse(page) {
            this._page = Math.min(this.pages, page);
        }
        _filterCallback(filter) {
            if (this._filter !== null && filter === null || this._filter === {} && filter !== null || filter && this._filter && (filter.type !== this._filter.type || filter.administrator !== this._filter.administrator || filter.disabled !== this._filter.disabled || filter.role !== this._filter.role)) {
                this._traverse(0);
            }
            this._filter = filter;
            this.emitChange();
        }
        _sync(users, count) {
            for (let i = 0; i < users.length; i++) {
                users[i] = Object.freeze(users[i]);
            }
            this._count = count;
            this._users = Object.freeze(users);
            this._page = Math.min(this.pages, this.page);
            this.emitChange();
        }
        _callback(action) {
            switch (action.type) {
                case GlobalTypes.RESET:
                    this._reset();
                    break;
                case UserTypes.TRAVERSE:
                    this._traverse(action.data.page);
                    break;
                case UserTypes.FILTER:
                    this._filterCallback(action.data.filter);
                    break;
                case UserTypes.SYNC:
                    this._sync(action.data.users, action.data.count);
                    break;
            }
        }
    }
    exports.default = new UsersStore();
    
});
System.registerDynamic("app/actions/UserActions.js", ["npm:superagent@4.1.0.js", "app/dispatcher/Dispatcher.js", "app/dispatcher/EventDispatcher.js", "app/Alert.js", "app/Csrf.js", "app/Loader.js", "app/types/UserTypes.js", "app/stores/UserStore.js", "app/stores/UsersStore.js", "app/utils/MiscUtils.js", "app/Constants.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const SuperAgent = $__require("npm:superagent@4.1.0.js");
    const Dispatcher_1 = $__require("app/dispatcher/Dispatcher.js");
    const EventDispatcher_1 = $__require("app/dispatcher/EventDispatcher.js");
    const Alert = $__require("app/Alert.js");
    const Csrf = $__require("app/Csrf.js");
    const Loader_1 = $__require("app/Loader.js");
    const UserTypes = $__require("app/types/UserTypes.js");
    const UserStore_1 = $__require("app/stores/UserStore.js");
    const UsersStore_1 = $__require("app/stores/UsersStore.js");
    const MiscUtils = $__require("app/utils/MiscUtils.js");
    const Constants = $__require("app/Constants.js");
    let syncId;
    function load(userId) {
        if (!userId) {
            let user = {
                id: null,
                type: 'local',
                roles: [],
                permissions: []
            };
            Dispatcher_1.default.dispatch({
                type: UserTypes.LOAD,
                data: {
                    user: user
                }
            });
            return Promise.resolve();
        }
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.get('/user/' + userId).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to load user');
                    reject(err);
                    return;
                }
                Dispatcher_1.default.dispatch({
                    type: UserTypes.LOAD,
                    data: {
                        user: res.body
                    }
                });
                resolve();
            });
        });
    }
    exports.load = load;
    function reload() {
        return load(UserStore_1.default.user ? UserStore_1.default.user.id : null);
    }
    exports.reload = reload;
    function unload() {
        Dispatcher_1.default.dispatch({
            type: UserTypes.UNLOAD
        });
    }
    exports.unload = unload;
    function sync() {
        let curSyncId = MiscUtils.uuid();
        syncId = curSyncId;
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.get('/user').query(Object.assign({}, UsersStore_1.default.filter, { page: UsersStore_1.default.page, page_count: UsersStore_1.default.pageCount })).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (curSyncId !== syncId) {
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to load users');
                    reject(err);
                    return;
                }
                Dispatcher_1.default.dispatch({
                    type: UserTypes.SYNC,
                    data: {
                        users: res.body.users,
                        count: res.body.count
                    }
                });
                resolve();
            });
        });
    }
    exports.sync = sync;
    function traverse(page) {
        Dispatcher_1.default.dispatch({
            type: UserTypes.TRAVERSE,
            data: {
                page: page
            }
        });
        return sync();
    }
    exports.traverse = traverse;
    function filter(filt) {
        Dispatcher_1.default.dispatch({
            type: UserTypes.FILTER,
            data: {
                filter: filt
            }
        });
        return sync();
    }
    exports.filter = filter;
    function commit(user) {
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.put('/user/' + user.id).send(user).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to save user');
                    reject(err);
                    return;
                }
                Dispatcher_1.default.dispatch({
                    type: UserTypes.LOAD,
                    data: {
                        user: res.body
                    }
                });
                resolve();
            });
        });
    }
    exports.commit = commit;
    function create(user) {
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.post('/user').send(user).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to create user');
                    reject(err);
                    return;
                }
                resolve();
            });
        });
    }
    exports.create = create;
    function remove(userIds) {
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.delete('/user').send(userIds).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to delete users');
                    reject(err);
                    return;
                }
                resolve();
            });
        });
    }
    exports.remove = remove;
    EventDispatcher_1.default.register(action => {
        switch (action.type) {
            case UserTypes.CHANGE:
                if (!Constants.user) {
                    sync();
                }
                break;
        }
    });
    
});
System.registerDynamic("app/types/SessionTypes.js", [], true, function ($__require, exports, module) {
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.SYNC = 'session.sync';
  exports.CHANGE = 'session.change';
  exports.SHOW_REMOVED = 'session.show_removed';
  
});
System.registerDynamic("app/stores/SessionsStore.js", ["app/dispatcher/Dispatcher.js", "app/EventEmitter.js", "app/types/SessionTypes.js", "app/types/GlobalTypes.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const Dispatcher_1 = $__require("app/dispatcher/Dispatcher.js");
    const EventEmitter_1 = $__require("app/EventEmitter.js");
    const SessionTypes = $__require("app/types/SessionTypes.js");
    const GlobalTypes = $__require("app/types/GlobalTypes.js");
    class SessionsStore extends EventEmitter_1.default {
        constructor() {
            super(...arguments);
            this._sessions = Object.freeze([]);
            this._token = Dispatcher_1.default.register(this._callback.bind(this));
        }
        _reset() {
            this._userId = undefined;
            this._showRemoved = undefined;
            this._sessions = Object.freeze([]);
            this.emitChange();
        }
        get userId() {
            return this._userId;
        }
        get sessions() {
            return this._sessions;
        }
        get sessionsM() {
            let sessions = [];
            this._sessions.forEach(session => {
                sessions.push(Object.assign({}, session));
            });
            return sessions;
        }
        get showRemoved() {
            return this._showRemoved;
        }
        emitChange() {
            this.emitDefer(GlobalTypes.CHANGE);
        }
        addChangeListener(callback) {
            this.on(GlobalTypes.CHANGE, callback);
        }
        removeChangeListener(callback) {
            this.removeListener(GlobalTypes.CHANGE, callback);
        }
        _sync(userId, sessions) {
            this._userId = userId;
            for (let i = 0; i < sessions.length; i++) {
                sessions[i] = Object.freeze(sessions[i]);
            }
            this._sessions = Object.freeze(sessions);
            this.emitChange();
        }
        _setShowRemoved(state) {
            this._showRemoved = state;
            this.emitChange();
        }
        _callback(action) {
            switch (action.type) {
                case GlobalTypes.RESET:
                    this._reset();
                    break;
                case SessionTypes.SYNC:
                    this._sync(action.data.userId, action.data.sessions);
                    break;
                case SessionTypes.SHOW_REMOVED:
                    this._setShowRemoved(action.data.showRemoved);
                    break;
            }
        }
    }
    exports.default = new SessionsStore();
    
});
System.registerDynamic("app/actions/SessionActions.js", ["npm:superagent@4.1.0.js", "app/Constants.js", "app/dispatcher/Dispatcher.js", "app/dispatcher/EventDispatcher.js", "app/Alert.js", "app/Csrf.js", "app/Loader.js", "app/types/SessionTypes.js", "app/utils/MiscUtils.js", "app/stores/SessionsStore.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const SuperAgent = $__require("npm:superagent@4.1.0.js");
    const Constants = $__require("app/Constants.js");
    const Dispatcher_1 = $__require("app/dispatcher/Dispatcher.js");
    const EventDispatcher_1 = $__require("app/dispatcher/EventDispatcher.js");
    const Alert = $__require("app/Alert.js");
    const Csrf = $__require("app/Csrf.js");
    const Loader_1 = $__require("app/Loader.js");
    const SessionTypes = $__require("app/types/SessionTypes.js");
    const MiscUtils = $__require("app/utils/MiscUtils.js");
    const SessionsStore_1 = $__require("app/stores/SessionsStore.js");
    let syncId;
    function _load(userId) {
        if (!userId) {
            return Promise.resolve();
        }
        let curSyncId = MiscUtils.uuid();
        syncId = curSyncId;
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.get('/session/' + userId).query({
                show_removed: SessionsStore_1.default.showRemoved
            }).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (curSyncId !== syncId) {
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to load sessions');
                    reject(err);
                    return;
                }
                Dispatcher_1.default.dispatch({
                    type: SessionTypes.SYNC,
                    data: {
                        userId: userId,
                        sessions: res.body
                    }
                });
                resolve();
            });
        });
    }
    exports._load = _load;
    function load(userId) {
        Dispatcher_1.default.dispatch({
            type: SessionTypes.SHOW_REMOVED,
            data: {
                showRemoved: false
            }
        });
        return _load(userId);
    }
    exports.load = load;
    function reload() {
        return _load(SessionsStore_1.default.userId);
    }
    exports.reload = reload;
    function showRemoved(state) {
        Dispatcher_1.default.dispatch({
            type: SessionTypes.SHOW_REMOVED,
            data: {
                showRemoved: state
            }
        });
        return reload();
    }
    exports.showRemoved = showRemoved;
    function remove(sessionId) {
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.delete('/session/' + sessionId).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to delete session');
                    reject(err);
                    return;
                }
                resolve();
            });
        });
    }
    exports.remove = remove;
    EventDispatcher_1.default.register(action => {
        switch (action.type) {
            case SessionTypes.CHANGE:
                if (!Constants.user) {
                    reload();
                }
                break;
        }
    });
    
});
System.registerDynamic("app/types/AuditTypes.js", [], true, function ($__require, exports, module) {
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.SYNC = 'audit.sync';
  exports.TRAVERSE = 'audit.traverse';
  exports.CHANGE = 'audit.change';
  
});
System.registerDynamic("app/stores/AuditsStore.js", ["app/dispatcher/Dispatcher.js", "app/EventEmitter.js", "app/types/AuditTypes.js", "app/types/GlobalTypes.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const Dispatcher_1 = $__require("app/dispatcher/Dispatcher.js");
    const EventEmitter_1 = $__require("app/EventEmitter.js");
    const AuditTypes = $__require("app/types/AuditTypes.js");
    const GlobalTypes = $__require("app/types/GlobalTypes.js");
    class AuditsStore extends EventEmitter_1.default {
        constructor() {
            super(...arguments);
            this._audits = Object.freeze([]);
            this._token = Dispatcher_1.default.register(this._callback.bind(this));
        }
        _reset() {
            this._userId = undefined;
            this._audits = Object.freeze([]);
            this._page = undefined;
            this._pageCount = undefined;
            this._count = undefined;
            this.emitChange();
        }
        get userId() {
            return this._userId;
        }
        get audits() {
            return this._audits;
        }
        get auditsM() {
            let audits = [];
            this._audits.forEach(audit => {
                audits.push(Object.assign({}, audit));
            });
            return audits;
        }
        get page() {
            return this._page || 0;
        }
        get pageCount() {
            return this._pageCount || 10;
        }
        get pages() {
            return Math.ceil(this.count / this.pageCount);
        }
        get count() {
            return this._count || 0;
        }
        emitChange() {
            this.emitDefer(GlobalTypes.CHANGE);
        }
        addChangeListener(callback) {
            this.on(GlobalTypes.CHANGE, callback);
        }
        removeChangeListener(callback) {
            this.removeListener(GlobalTypes.CHANGE, callback);
        }
        _traverse(page) {
            this._page = Math.min(this.pages, page);
        }
        _sync(userId, audits, count) {
            this._userId = userId;
            for (let i = 0; i < audits.length; i++) {
                audits[i] = Object.freeze(audits[i]);
            }
            this._count = count;
            this._audits = Object.freeze(audits);
            this._page = Math.min(this.pages, this.page);
            this.emitChange();
        }
        _callback(action) {
            switch (action.type) {
                case GlobalTypes.RESET:
                    this._reset();
                    break;
                case AuditTypes.TRAVERSE:
                    this._traverse(action.data.page);
                    break;
                case AuditTypes.SYNC:
                    this._sync(action.data.userId, action.data.audits, action.data.count);
                    break;
            }
        }
    }
    exports.default = new AuditsStore();
    
});
System.registerDynamic("app/actions/AuditActions.js", ["npm:superagent@4.1.0.js", "app/Constants.js", "app/dispatcher/Dispatcher.js", "app/dispatcher/EventDispatcher.js", "app/Alert.js", "app/Csrf.js", "app/Loader.js", "app/types/AuditTypes.js", "app/utils/MiscUtils.js", "app/stores/AuditsStore.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const SuperAgent = $__require("npm:superagent@4.1.0.js");
    const Constants = $__require("app/Constants.js");
    const Dispatcher_1 = $__require("app/dispatcher/Dispatcher.js");
    const EventDispatcher_1 = $__require("app/dispatcher/EventDispatcher.js");
    const Alert = $__require("app/Alert.js");
    const Csrf = $__require("app/Csrf.js");
    const Loader_1 = $__require("app/Loader.js");
    const AuditTypes = $__require("app/types/AuditTypes.js");
    const MiscUtils = $__require("app/utils/MiscUtils.js");
    const AuditsStore_1 = $__require("app/stores/AuditsStore.js");
    let syncId;
    function load(userId) {
        if (!userId) {
            return Promise.resolve();
        }
        let curSyncId = MiscUtils.uuid();
        syncId = curSyncId;
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.get('/audit/' + userId).query({
                page: AuditsStore_1.default.page,
                page_count: AuditsStore_1.default.pageCount
            }).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (curSyncId !== syncId) {
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to load audits');
                    reject(err);
                    return;
                }
                Dispatcher_1.default.dispatch({
                    type: AuditTypes.SYNC,
                    data: {
                        userId: userId,
                        audits: res.body.audits,
                        count: res.body.count
                    }
                });
                resolve();
            });
        });
    }
    exports.load = load;
    function reload() {
        return load(AuditsStore_1.default.userId);
    }
    exports.reload = reload;
    function traverse(page) {
        Dispatcher_1.default.dispatch({
            type: AuditTypes.TRAVERSE,
            data: {
                page: page
            }
        });
        return reload();
    }
    exports.traverse = traverse;
    EventDispatcher_1.default.register(action => {
        switch (action.type) {
            case AuditTypes.CHANGE:
                if (!Constants.user) {
                    reload();
                }
                break;
        }
    });
    
});
System.registerDynamic("app/types/NodeTypes.js", [], true, function ($__require, exports, module) {
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.SYNC = 'node.sync';
  exports.SYNC_ZONE = 'node.sync_zone';
  exports.TRAVERSE = 'node.traverse';
  exports.FILTER = 'node.filter';
  exports.CHANGE = 'node.change';
  
});
System.registerDynamic("app/stores/NodesStore.js", ["app/dispatcher/Dispatcher.js", "app/EventEmitter.js", "app/types/NodeTypes.js", "app/types/GlobalTypes.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const Dispatcher_1 = $__require("app/dispatcher/Dispatcher.js");
    const EventEmitter_1 = $__require("app/EventEmitter.js");
    const NodeTypes = $__require("app/types/NodeTypes.js");
    const GlobalTypes = $__require("app/types/GlobalTypes.js");
    class NodesStore extends EventEmitter_1.default {
        constructor() {
            super(...arguments);
            this._nodes = Object.freeze([]);
            this._filter = null;
            this._map = {};
            this._token = Dispatcher_1.default.register(this._callback.bind(this));
        }
        _reset() {
            this._nodes = Object.freeze([]);
            this._page = undefined;
            this._pageCount = undefined;
            this._filter = null;
            this._count = undefined;
            this._map = {};
            this.emitChange();
        }
        get nodes() {
            return this._nodes;
        }
        get nodesM() {
            let nodes = [];
            this._nodes.forEach(node => {
                nodes.push(Object.assign({}, node));
            });
            return nodes;
        }
        get page() {
            return this._page || 0;
        }
        get pageCount() {
            return this._pageCount || 20;
        }
        get pages() {
            return Math.ceil(this.count / this.pageCount);
        }
        get filter() {
            return this._filter;
        }
        get count() {
            return this._count || 0;
        }
        node(id) {
            let i = this._map[id];
            if (i === undefined) {
                return null;
            }
            return this._nodes[i];
        }
        emitChange() {
            this.emitDefer(GlobalTypes.CHANGE);
        }
        addChangeListener(callback) {
            this.on(GlobalTypes.CHANGE, callback);
        }
        removeChangeListener(callback) {
            this.removeListener(GlobalTypes.CHANGE, callback);
        }
        _traverse(page) {
            this._page = Math.min(this.pages, page);
        }
        _filterCallback(filter) {
            if (this._filter !== null && filter === null || this._filter === {} && filter !== null || filter && this._filter && filter.name !== this._filter.name) {
                this._traverse(0);
            }
            this._filter = filter;
            this.emitChange();
        }
        _sync(nodes, count) {
            this._map = {};
            for (let i = 0; i < nodes.length; i++) {
                nodes[i] = Object.freeze(nodes[i]);
                this._map[nodes[i].id] = i;
            }
            this._count = count;
            this._nodes = Object.freeze(nodes);
            this._page = Math.min(this.pages, this.page);
            this.emitChange();
        }
        _callback(action) {
            switch (action.type) {
                case GlobalTypes.RESET:
                    this._reset();
                    break;
                case NodeTypes.TRAVERSE:
                    this._traverse(action.data.page);
                    break;
                case NodeTypes.FILTER:
                    this._filterCallback(action.data.filter);
                    break;
                case NodeTypes.SYNC:
                    this._sync(action.data.nodes, action.data.count);
                    break;
            }
        }
    }
    exports.default = new NodesStore();
    
});
System.registerDynamic("app/actions/NodeActions.js", ["npm:superagent@4.1.0.js", "app/dispatcher/Dispatcher.js", "app/dispatcher/EventDispatcher.js", "app/Alert.js", "app/Csrf.js", "app/Loader.js", "app/types/NodeTypes.js", "app/stores/NodesStore.js", "app/stores/OrganizationsStore.js", "app/utils/MiscUtils.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const SuperAgent = $__require("npm:superagent@4.1.0.js");
    const Dispatcher_1 = $__require("app/dispatcher/Dispatcher.js");
    const EventDispatcher_1 = $__require("app/dispatcher/EventDispatcher.js");
    const Alert = $__require("app/Alert.js");
    const Csrf = $__require("app/Csrf.js");
    const Loader_1 = $__require("app/Loader.js");
    const NodeTypes = $__require("app/types/NodeTypes.js");
    const NodesStore_1 = $__require("app/stores/NodesStore.js");
    const OrganizationsStore_1 = $__require("app/stores/OrganizationsStore.js");
    const MiscUtils = $__require("app/utils/MiscUtils.js");
    let syncId;
    let syncZonesId;
    function sync() {
        let curSyncId = MiscUtils.uuid();
        syncId = curSyncId;
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.get('/node').query(Object.assign({}, NodesStore_1.default.filter, { page: NodesStore_1.default.page, page_count: NodesStore_1.default.pageCount })).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).set('Organization', OrganizationsStore_1.default.current).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (curSyncId !== syncId) {
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to load nodes');
                    reject(err);
                    return;
                }
                Dispatcher_1.default.dispatch({
                    type: NodeTypes.SYNC,
                    data: {
                        nodes: res.body.nodes,
                        count: res.body.count
                    }
                });
                resolve();
            });
        });
    }
    exports.sync = sync;
    function syncZone(zone) {
        let curSyncId = MiscUtils.uuid();
        syncZonesId = curSyncId;
        if (!zone) {
            Dispatcher_1.default.dispatch({
                type: NodeTypes.SYNC_ZONE,
                data: {
                    nodes: []
                }
            });
            return Promise.resolve();
        }
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.get('/node').query({
                names: true,
                zone: zone
            }).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).set('Organization', OrganizationsStore_1.default.current).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (curSyncId !== syncZonesId) {
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to load nodes names');
                    reject(err);
                    return;
                }
                Dispatcher_1.default.dispatch({
                    type: NodeTypes.SYNC_ZONE,
                    data: {
                        nodes: res.body
                    }
                });
                resolve();
            });
        });
    }
    exports.syncZone = syncZone;
    function traverse(page) {
        Dispatcher_1.default.dispatch({
            type: NodeTypes.TRAVERSE,
            data: {
                page: page
            }
        });
        return sync();
    }
    exports.traverse = traverse;
    function filter(filt) {
        Dispatcher_1.default.dispatch({
            type: NodeTypes.FILTER,
            data: {
                filter: filt
            }
        });
        return sync();
    }
    exports.filter = filter;
    function commit(node) {
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.put('/node/' + node.id).send(node).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).set('Organization', OrganizationsStore_1.default.current).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to save node');
                    reject(err);
                    return;
                }
                resolve();
            });
        });
    }
    exports.commit = commit;
    function create(node) {
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.post('/node').send(node).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).set('Organization', OrganizationsStore_1.default.current).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to create node');
                    reject(err);
                    return;
                }
                resolve();
            });
        });
    }
    exports.create = create;
    function remove(nodeId) {
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.delete('/node/' + nodeId).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).set('Organization', OrganizationsStore_1.default.current).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to delete nodes');
                    reject(err);
                    return;
                }
                resolve();
            });
        });
    }
    exports.remove = remove;
    EventDispatcher_1.default.register(action => {
        switch (action.type) {
            case NodeTypes.CHANGE:
                sync();
                break;
        }
    });
    
});
System.registerDynamic("app/types/PolicyTypes.js", [], true, function ($__require, exports, module) {
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.SYNC = 'policy.sync';
  exports.CHANGE = 'policy.change';
  
});
System.registerDynamic("app/actions/PolicyActions.js", ["npm:superagent@4.1.0.js", "app/dispatcher/Dispatcher.js", "app/dispatcher/EventDispatcher.js", "app/Alert.js", "app/Csrf.js", "app/Loader.js", "app/types/PolicyTypes.js", "app/utils/MiscUtils.js", "app/Constants.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const SuperAgent = $__require("npm:superagent@4.1.0.js");
    const Dispatcher_1 = $__require("app/dispatcher/Dispatcher.js");
    const EventDispatcher_1 = $__require("app/dispatcher/EventDispatcher.js");
    const Alert = $__require("app/Alert.js");
    const Csrf = $__require("app/Csrf.js");
    const Loader_1 = $__require("app/Loader.js");
    const PolicyTypes = $__require("app/types/PolicyTypes.js");
    const MiscUtils = $__require("app/utils/MiscUtils.js");
    const Constants = $__require("app/Constants.js");
    let syncId;
    function sync() {
        let curSyncId = MiscUtils.uuid();
        syncId = curSyncId;
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.get('/policy').set('Accept', 'application/json').set('Csrf-Token', Csrf.token).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (curSyncId !== syncId) {
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to load policies');
                    reject(err);
                    return;
                }
                Dispatcher_1.default.dispatch({
                    type: PolicyTypes.SYNC,
                    data: {
                        policies: res.body
                    }
                });
                resolve();
            });
        });
    }
    exports.sync = sync;
    function commit(cert) {
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.put('/policy/' + cert.id).send(cert).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to save policy');
                    reject(err);
                    return;
                }
                resolve();
            });
        });
    }
    exports.commit = commit;
    function create(cert) {
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.post('/policy').send(cert).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to create policy');
                    reject(err);
                    return;
                }
                resolve();
            });
        });
    }
    exports.create = create;
    function remove(certId) {
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.delete('/policy/' + certId).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to delete policies');
                    reject(err);
                    return;
                }
                resolve();
            });
        });
    }
    exports.remove = remove;
    EventDispatcher_1.default.register(action => {
        switch (action.type) {
            case PolicyTypes.CHANGE:
                if (!Constants.user) {
                    sync();
                }
                break;
        }
    });
    
});
System.registerDynamic("app/types/CertificateTypes.js", [], true, function ($__require, exports, module) {
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.SYNC = 'certificate.sync';
  exports.CHANGE = 'certificate.change';
  
});
System.registerDynamic("app/actions/CertificateActions.js", ["npm:superagent@4.1.0.js", "app/dispatcher/Dispatcher.js", "app/dispatcher/EventDispatcher.js", "app/Alert.js", "app/Csrf.js", "app/Loader.js", "app/types/CertificateTypes.js", "app/utils/MiscUtils.js", "app/Constants.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const SuperAgent = $__require("npm:superagent@4.1.0.js");
    const Dispatcher_1 = $__require("app/dispatcher/Dispatcher.js");
    const EventDispatcher_1 = $__require("app/dispatcher/EventDispatcher.js");
    const Alert = $__require("app/Alert.js");
    const Csrf = $__require("app/Csrf.js");
    const Loader_1 = $__require("app/Loader.js");
    const CertificateTypes = $__require("app/types/CertificateTypes.js");
    const MiscUtils = $__require("app/utils/MiscUtils.js");
    const Constants = $__require("app/Constants.js");
    let syncId;
    function sync() {
        let curSyncId = MiscUtils.uuid();
        syncId = curSyncId;
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.get('/certificate').set('Accept', 'application/json').set('Csrf-Token', Csrf.token).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (curSyncId !== syncId) {
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to load certificates');
                    reject(err);
                    return;
                }
                Dispatcher_1.default.dispatch({
                    type: CertificateTypes.SYNC,
                    data: {
                        certificates: res.body
                    }
                });
                resolve();
            });
        });
    }
    exports.sync = sync;
    function commit(cert) {
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.put('/certificate/' + cert.id).send(cert).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to save certificate');
                    reject(err);
                    return;
                }
                resolve();
            });
        });
    }
    exports.commit = commit;
    function create(cert) {
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.post('/certificate').send(cert).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to create certificate');
                    reject(err);
                    return;
                }
                resolve();
            });
        });
    }
    exports.create = create;
    function remove(certId) {
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.delete('/certificate/' + certId).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to delete certificates');
                    reject(err);
                    return;
                }
                resolve();
            });
        });
    }
    exports.remove = remove;
    EventDispatcher_1.default.register(action => {
        switch (action.type) {
            case CertificateTypes.CHANGE:
                if (!Constants.user) {
                    sync();
                }
                break;
        }
    });
    
});
System.registerDynamic("app/actions/OrganizationActions.js", ["npm:superagent@4.1.0.js", "app/dispatcher/Dispatcher.js", "app/dispatcher/EventDispatcher.js", "app/Alert.js", "app/Csrf.js", "app/Loader.js", "app/types/GlobalTypes.js", "app/types/OrganizationTypes.js", "app/utils/MiscUtils.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const SuperAgent = $__require("npm:superagent@4.1.0.js");
    const Dispatcher_1 = $__require("app/dispatcher/Dispatcher.js");
    const EventDispatcher_1 = $__require("app/dispatcher/EventDispatcher.js");
    const Alert = $__require("app/Alert.js");
    const Csrf = $__require("app/Csrf.js");
    const Loader_1 = $__require("app/Loader.js");
    const GlobalTypes = $__require("app/types/GlobalTypes.js");
    const OrganizationTypes = $__require("app/types/OrganizationTypes.js");
    const MiscUtils = $__require("app/utils/MiscUtils.js");
    let syncId;
    function sync() {
        let curSyncId = MiscUtils.uuid();
        syncId = curSyncId;
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.get('/organization').set('Accept', 'application/json').set('Csrf-Token', Csrf.token).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (curSyncId !== syncId) {
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to load organizations');
                    reject(err);
                    return;
                }
                Dispatcher_1.default.dispatch({
                    type: OrganizationTypes.SYNC,
                    data: {
                        organizations: res.body
                    }
                });
                resolve();
            });
        });
    }
    exports.sync = sync;
    function commit(org) {
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.put('/organization/' + org.id).send(org).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to save organization');
                    reject(err);
                    return;
                }
                resolve();
            });
        });
    }
    exports.commit = commit;
    function create(org) {
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.post('/organization').send(org).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to create organization');
                    reject(err);
                    return;
                }
                resolve();
            });
        });
    }
    exports.create = create;
    function remove(orgId) {
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.delete('/organization/' + orgId).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to delete organizations');
                    reject(err);
                    return;
                }
                resolve();
            });
        });
    }
    exports.remove = remove;
    function setCurrent(current) {
        Dispatcher_1.default.dispatch({
            type: GlobalTypes.RESET,
            data: {
                current: current
            }
        });
        Dispatcher_1.default.dispatch({
            type: GlobalTypes.RELOAD,
            data: {
                current: current
            }
        });
    }
    exports.setCurrent = setCurrent;
    EventDispatcher_1.default.register(action => {
        switch (action.type) {
            case OrganizationTypes.CHANGE:
                sync();
                break;
        }
    });
    
});
System.registerDynamic("app/types/DatacenterTypes.js", [], true, function ($__require, exports, module) {
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.SYNC = 'datacenter.sync';
  exports.CHANGE = 'datacenter.change';
  
});
System.registerDynamic("app/actions/DatacenterActions.js", ["npm:superagent@4.1.0.js", "app/dispatcher/Dispatcher.js", "app/dispatcher/EventDispatcher.js", "app/Alert.js", "app/Csrf.js", "app/Loader.js", "app/types/DatacenterTypes.js", "app/stores/OrganizationsStore.js", "app/utils/MiscUtils.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const SuperAgent = $__require("npm:superagent@4.1.0.js");
    const Dispatcher_1 = $__require("app/dispatcher/Dispatcher.js");
    const EventDispatcher_1 = $__require("app/dispatcher/EventDispatcher.js");
    const Alert = $__require("app/Alert.js");
    const Csrf = $__require("app/Csrf.js");
    const Loader_1 = $__require("app/Loader.js");
    const DatacenterTypes = $__require("app/types/DatacenterTypes.js");
    const OrganizationsStore_1 = $__require("app/stores/OrganizationsStore.js");
    const MiscUtils = $__require("app/utils/MiscUtils.js");
    let syncId;
    function sync() {
        let curSyncId = MiscUtils.uuid();
        syncId = curSyncId;
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.get('/datacenter').set('Accept', 'application/json').set('Csrf-Token', Csrf.token).set('Organization', OrganizationsStore_1.default.current).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (curSyncId !== syncId) {
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to load datacenters');
                    reject(err);
                    return;
                }
                Dispatcher_1.default.dispatch({
                    type: DatacenterTypes.SYNC,
                    data: {
                        datacenters: res.body
                    }
                });
                resolve();
            });
        });
    }
    exports.sync = sync;
    function commit(datacenter) {
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.put('/datacenter/' + datacenter.id).send(datacenter).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).set('Organization', OrganizationsStore_1.default.current).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to save datacenter');
                    reject(err);
                    return;
                }
                resolve();
            });
        });
    }
    exports.commit = commit;
    function create(datacenter) {
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.post('/datacenter').send(datacenter).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).set('Organization', OrganizationsStore_1.default.current).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to create datacenter');
                    reject(err);
                    return;
                }
                resolve();
            });
        });
    }
    exports.create = create;
    function remove(datacenterId) {
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.delete('/datacenter/' + datacenterId).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).set('Organization', OrganizationsStore_1.default.current).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to delete datacenters');
                    reject(err);
                    return;
                }
                resolve();
            });
        });
    }
    exports.remove = remove;
    EventDispatcher_1.default.register(action => {
        switch (action.type) {
            case DatacenterTypes.CHANGE:
                sync();
                break;
        }
    });
    
});
System.registerDynamic("app/types/ZoneTypes.js", [], true, function ($__require, exports, module) {
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.SYNC = 'zone.sync';
  exports.CHANGE = 'zone.change';
  
});
System.registerDynamic("app/actions/ZoneActions.js", ["npm:superagent@4.1.0.js", "app/dispatcher/Dispatcher.js", "app/dispatcher/EventDispatcher.js", "app/Alert.js", "app/Csrf.js", "app/Loader.js", "app/types/ZoneTypes.js", "app/stores/OrganizationsStore.js", "app/utils/MiscUtils.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const SuperAgent = $__require("npm:superagent@4.1.0.js");
    const Dispatcher_1 = $__require("app/dispatcher/Dispatcher.js");
    const EventDispatcher_1 = $__require("app/dispatcher/EventDispatcher.js");
    const Alert = $__require("app/Alert.js");
    const Csrf = $__require("app/Csrf.js");
    const Loader_1 = $__require("app/Loader.js");
    const ZoneTypes = $__require("app/types/ZoneTypes.js");
    const OrganizationsStore_1 = $__require("app/stores/OrganizationsStore.js");
    const MiscUtils = $__require("app/utils/MiscUtils.js");
    let syncId;
    function sync() {
        let curSyncId = MiscUtils.uuid();
        syncId = curSyncId;
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.get('/zone').set('Accept', 'application/json').set('Csrf-Token', Csrf.token).set('Organization', OrganizationsStore_1.default.current).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (curSyncId !== syncId) {
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to load zones');
                    reject(err);
                    return;
                }
                Dispatcher_1.default.dispatch({
                    type: ZoneTypes.SYNC,
                    data: {
                        zones: res.body
                    }
                });
                resolve();
            });
        });
    }
    exports.sync = sync;
    function commit(zone) {
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.put('/zone/' + zone.id).send(zone).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).set('Organization', OrganizationsStore_1.default.current).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to save zone');
                    reject(err);
                    return;
                }
                resolve();
            });
        });
    }
    exports.commit = commit;
    function create(zone) {
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.post('/zone').send(zone).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).set('Organization', OrganizationsStore_1.default.current).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to create zone');
                    reject(err);
                    return;
                }
                resolve();
            });
        });
    }
    exports.create = create;
    function remove(zoneId) {
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.delete('/zone/' + zoneId).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).set('Organization', OrganizationsStore_1.default.current).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to delete zones');
                    reject(err);
                    return;
                }
                resolve();
            });
        });
    }
    exports.remove = remove;
    EventDispatcher_1.default.register(action => {
        switch (action.type) {
            case ZoneTypes.CHANGE:
                sync();
                break;
        }
    });
    
});
System.registerDynamic("app/types/BlockTypes.js", [], true, function ($__require, exports, module) {
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.SYNC = 'block.sync';
  exports.CHANGE = 'block.change';
  
});
System.registerDynamic("app/actions/BlockActions.js", ["npm:superagent@4.1.0.js", "app/dispatcher/Dispatcher.js", "app/dispatcher/EventDispatcher.js", "app/Alert.js", "app/Csrf.js", "app/Loader.js", "app/types/BlockTypes.js", "app/utils/MiscUtils.js", "app/Constants.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const SuperAgent = $__require("npm:superagent@4.1.0.js");
    const Dispatcher_1 = $__require("app/dispatcher/Dispatcher.js");
    const EventDispatcher_1 = $__require("app/dispatcher/EventDispatcher.js");
    const Alert = $__require("app/Alert.js");
    const Csrf = $__require("app/Csrf.js");
    const Loader_1 = $__require("app/Loader.js");
    const BlockTypes = $__require("app/types/BlockTypes.js");
    const MiscUtils = $__require("app/utils/MiscUtils.js");
    const Constants = $__require("app/Constants.js");
    let syncId;
    function sync() {
        let curSyncId = MiscUtils.uuid();
        syncId = curSyncId;
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.get('/block').set('Accept', 'application/json').set('Csrf-Token', Csrf.token).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (curSyncId !== syncId) {
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to load blocks');
                    reject(err);
                    return;
                }
                Dispatcher_1.default.dispatch({
                    type: BlockTypes.SYNC,
                    data: {
                        blocks: res.body
                    }
                });
                resolve();
            });
        });
    }
    exports.sync = sync;
    function commit(block) {
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.put('/block/' + block.id).send(block).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to save block');
                    reject(err);
                    return;
                }
                resolve();
            });
        });
    }
    exports.commit = commit;
    function create(block) {
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.post('/block').send(block).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to create block');
                    reject(err);
                    return;
                }
                resolve();
            });
        });
    }
    exports.create = create;
    function remove(blockId) {
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.delete('/block/' + blockId).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to delete blocks');
                    reject(err);
                    return;
                }
                resolve();
            });
        });
    }
    exports.remove = remove;
    EventDispatcher_1.default.register(action => {
        switch (action.type) {
            case BlockTypes.CHANGE:
                if (!Constants.user) {
                    sync();
                }
                break;
        }
    });
    
});
System.registerDynamic("app/types/VpcTypes.js", [], true, function ($__require, exports, module) {
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.SYNC = 'vpc.sync';
  exports.SYNC_NAMES = 'vpc.sync_names';
  exports.TRAVERSE = 'vpc.traverse';
  exports.FILTER = 'vpc.filter';
  exports.CHANGE = 'vpc.change';
  
});
System.registerDynamic("app/stores/VpcsStore.js", ["app/dispatcher/Dispatcher.js", "app/EventEmitter.js", "app/types/VpcTypes.js", "app/types/GlobalTypes.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const Dispatcher_1 = $__require("app/dispatcher/Dispatcher.js");
    const EventEmitter_1 = $__require("app/EventEmitter.js");
    const VpcTypes = $__require("app/types/VpcTypes.js");
    const GlobalTypes = $__require("app/types/GlobalTypes.js");
    class VpcsStore extends EventEmitter_1.default {
        constructor() {
            super(...arguments);
            this._vpcs = Object.freeze([]);
            this._filter = null;
            this._map = {};
            this._token = Dispatcher_1.default.register(this._callback.bind(this));
        }
        _reset() {
            this._vpcs = Object.freeze([]);
            this._page = undefined;
            this._pageCount = undefined;
            this._filter = null;
            this._count = undefined;
            this._map = {};
            this.emitChange();
        }
        get vpcs() {
            return this._vpcs;
        }
        get vpcsM() {
            let vpcs = [];
            this._vpcs.forEach(vpc => {
                vpcs.push(Object.assign({}, vpc));
            });
            return vpcs;
        }
        get page() {
            return this._page || 0;
        }
        get pageCount() {
            return this._pageCount || 20;
        }
        get pages() {
            return Math.ceil(this.count / this.pageCount);
        }
        get filter() {
            return this._filter;
        }
        get count() {
            return this._count || 0;
        }
        vpc(id) {
            let i = this._map[id];
            if (i === undefined) {
                return null;
            }
            return this._vpcs[i];
        }
        emitChange() {
            this.emitDefer(GlobalTypes.CHANGE);
        }
        addChangeListener(callback) {
            this.on(GlobalTypes.CHANGE, callback);
        }
        removeChangeListener(callback) {
            this.removeListener(GlobalTypes.CHANGE, callback);
        }
        _traverse(page) {
            this._page = Math.min(this.pages, page);
        }
        _filterCallback(filter) {
            if (this._filter !== null && filter === null || this._filter === {} && filter !== null || filter && this._filter && filter.name !== this._filter.name) {
                this._traverse(0);
            }
            this._filter = filter;
            this.emitChange();
        }
        _sync(vpcs, count) {
            this._map = {};
            for (let i = 0; i < vpcs.length; i++) {
                vpcs[i] = Object.freeze(vpcs[i]);
                this._map[vpcs[i].id] = i;
            }
            this._count = count;
            this._vpcs = Object.freeze(vpcs);
            this._page = Math.min(this.pages, this.page);
            this.emitChange();
        }
        _callback(action) {
            switch (action.type) {
                case GlobalTypes.RESET:
                    this._reset();
                    break;
                case VpcTypes.TRAVERSE:
                    this._traverse(action.data.page);
                    break;
                case VpcTypes.FILTER:
                    this._filterCallback(action.data.filter);
                    break;
                case VpcTypes.SYNC:
                    this._sync(action.data.vpcs, action.data.count);
                    break;
            }
        }
    }
    exports.default = new VpcsStore();
    
});
System.registerDynamic("app/actions/VpcActions.js", ["npm:superagent@4.1.0.js", "app/dispatcher/Dispatcher.js", "app/dispatcher/EventDispatcher.js", "app/Alert.js", "app/Csrf.js", "app/Loader.js", "app/types/VpcTypes.js", "app/stores/VpcsStore.js", "app/stores/OrganizationsStore.js", "app/utils/MiscUtils.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const SuperAgent = $__require("npm:superagent@4.1.0.js");
    const Dispatcher_1 = $__require("app/dispatcher/Dispatcher.js");
    const EventDispatcher_1 = $__require("app/dispatcher/EventDispatcher.js");
    const Alert = $__require("app/Alert.js");
    const Csrf = $__require("app/Csrf.js");
    const Loader_1 = $__require("app/Loader.js");
    const VpcTypes = $__require("app/types/VpcTypes.js");
    const VpcsStore_1 = $__require("app/stores/VpcsStore.js");
    const OrganizationsStore_1 = $__require("app/stores/OrganizationsStore.js");
    const MiscUtils = $__require("app/utils/MiscUtils.js");
    let syncId;
    let syncNamesId;
    function sync(noLoading) {
        let curSyncId = MiscUtils.uuid();
        syncId = curSyncId;
        let loader;
        if (!noLoading) {
            loader = new Loader_1.default().loading();
        }
        return new Promise((resolve, reject) => {
            SuperAgent.get('/vpc').query(Object.assign({}, VpcsStore_1.default.filter, { page: VpcsStore_1.default.page, page_count: VpcsStore_1.default.pageCount })).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).set('Organization', OrganizationsStore_1.default.current).end((err, res) => {
                if (loader) {
                    loader.done();
                }
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (curSyncId !== syncId) {
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to load vpcs');
                    reject(err);
                    return;
                }
                Dispatcher_1.default.dispatch({
                    type: VpcTypes.SYNC,
                    data: {
                        vpcs: res.body.vpcs,
                        count: res.body.count
                    }
                });
                resolve();
            });
        });
    }
    exports.sync = sync;
    function syncNames() {
        let curSyncId = MiscUtils.uuid();
        syncNamesId = curSyncId;
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.get('/vpc').query({
                names: "true"
            }).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).set('Organization', OrganizationsStore_1.default.current).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (curSyncId !== syncNamesId) {
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to load vpcs names');
                    reject(err);
                    return;
                }
                Dispatcher_1.default.dispatch({
                    type: VpcTypes.SYNC_NAMES,
                    data: {
                        vpcs: res.body
                    }
                });
                resolve();
            });
        });
    }
    exports.syncNames = syncNames;
    function traverse(page) {
        Dispatcher_1.default.dispatch({
            type: VpcTypes.TRAVERSE,
            data: {
                page: page
            }
        });
        return sync();
    }
    exports.traverse = traverse;
    function filter(filt) {
        Dispatcher_1.default.dispatch({
            type: VpcTypes.FILTER,
            data: {
                filter: filt
            }
        });
        return sync();
    }
    exports.filter = filter;
    function commit(vpc) {
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.put('/vpc/' + vpc.id).send(vpc).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).set('Organization', OrganizationsStore_1.default.current).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to save vpc');
                    reject(err);
                    return;
                }
                resolve();
            });
        });
    }
    exports.commit = commit;
    function create(vpc) {
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.post('/vpc').send(vpc).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).set('Organization', OrganizationsStore_1.default.current).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to create vpc');
                    reject(err);
                    return;
                }
                resolve();
            });
        });
    }
    exports.create = create;
    function remove(vpcId) {
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.delete('/vpc/' + vpcId).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).set('Organization', OrganizationsStore_1.default.current).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to delete vpc');
                    reject(err);
                    return;
                }
                resolve();
            });
        });
    }
    exports.remove = remove;
    function removeMulti(vpcIds) {
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.delete('/vpc').send(vpcIds).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).set('Organization', OrganizationsStore_1.default.current).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to delete vpcs');
                    reject(err);
                    return;
                }
                resolve();
            });
        });
    }
    exports.removeMulti = removeMulti;
    EventDispatcher_1.default.register(action => {
        switch (action.type) {
            case VpcTypes.CHANGE:
                sync();
                break;
        }
    });
    
});
System.registerDynamic("app/types/DomainTypes.js", [], true, function ($__require, exports, module) {
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.SYNC = 'domain.sync';
  exports.SYNC_NAME = 'domain.sync_name';
  exports.TRAVERSE = 'domain.traverse';
  exports.FILTER = 'domain.filter';
  exports.CHANGE = 'domain.change';
  
});
System.registerDynamic("app/stores/DomainsStore.js", ["app/dispatcher/Dispatcher.js", "app/EventEmitter.js", "app/types/DomainTypes.js", "app/types/GlobalTypes.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const Dispatcher_1 = $__require("app/dispatcher/Dispatcher.js");
    const EventEmitter_1 = $__require("app/EventEmitter.js");
    const DomainTypes = $__require("app/types/DomainTypes.js");
    const GlobalTypes = $__require("app/types/GlobalTypes.js");
    class DomainsStore extends EventEmitter_1.default {
        constructor() {
            super(...arguments);
            this._domains = Object.freeze([]);
            this._filter = null;
            this._map = {};
            this._token = Dispatcher_1.default.register(this._callback.bind(this));
        }
        _reset() {
            this._domains = Object.freeze([]);
            this._page = undefined;
            this._pageCount = undefined;
            this._filter = null;
            this._count = undefined;
            this._map = {};
            this.emitChange();
        }
        get domains() {
            return this._domains;
        }
        get domainsM() {
            let domains = [];
            this._domains.forEach(domain => {
                domains.push(Object.assign({}, domain));
            });
            return domains;
        }
        get page() {
            return this._page || 0;
        }
        get pageCount() {
            return this._pageCount || 20;
        }
        get pages() {
            return Math.ceil(this.count / this.pageCount);
        }
        get filter() {
            return this._filter;
        }
        get count() {
            return this._count || 0;
        }
        domain(id) {
            let i = this._map[id];
            if (i === undefined) {
                return null;
            }
            return this._domains[i];
        }
        emitChange() {
            this.emitDefer(GlobalTypes.CHANGE);
        }
        addChangeListener(callback) {
            this.on(GlobalTypes.CHANGE, callback);
        }
        removeChangeListener(callback) {
            this.removeListener(GlobalTypes.CHANGE, callback);
        }
        _traverse(page) {
            this._page = Math.min(this.pages, page);
        }
        _filterCallback(filter) {
            if (this._filter !== null && filter === null || this._filter === {} && filter !== null || filter && this._filter && filter.name !== this._filter.name) {
                this._traverse(0);
            }
            this._filter = filter;
            this.emitChange();
        }
        _sync(domains, count) {
            this._map = {};
            for (let i = 0; i < domains.length; i++) {
                domains[i] = Object.freeze(domains[i]);
                this._map[domains[i].id] = i;
            }
            this._count = count;
            this._domains = Object.freeze(domains);
            this._page = Math.min(this.pages, this.page);
            this.emitChange();
        }
        _callback(action) {
            switch (action.type) {
                case GlobalTypes.RESET:
                    this._reset();
                    break;
                case DomainTypes.TRAVERSE:
                    this._traverse(action.data.page);
                    break;
                case DomainTypes.FILTER:
                    this._filterCallback(action.data.filter);
                    break;
                case DomainTypes.SYNC:
                    this._sync(action.data.domains, action.data.count);
                    break;
            }
        }
    }
    exports.default = new DomainsStore();
    
});
System.registerDynamic("app/actions/DomainActions.js", ["npm:superagent@4.1.0.js", "app/dispatcher/Dispatcher.js", "app/dispatcher/EventDispatcher.js", "app/Alert.js", "app/Csrf.js", "app/Loader.js", "app/types/DomainTypes.js", "app/stores/DomainsStore.js", "app/stores/OrganizationsStore.js", "app/utils/MiscUtils.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const SuperAgent = $__require("npm:superagent@4.1.0.js");
    const Dispatcher_1 = $__require("app/dispatcher/Dispatcher.js");
    const EventDispatcher_1 = $__require("app/dispatcher/EventDispatcher.js");
    const Alert = $__require("app/Alert.js");
    const Csrf = $__require("app/Csrf.js");
    const Loader_1 = $__require("app/Loader.js");
    const DomainTypes = $__require("app/types/DomainTypes.js");
    const DomainsStore_1 = $__require("app/stores/DomainsStore.js");
    const OrganizationsStore_1 = $__require("app/stores/OrganizationsStore.js");
    const MiscUtils = $__require("app/utils/MiscUtils.js");
    let syncId;
    let syncNamesId;
    function sync(noLoading) {
        let curSyncId = MiscUtils.uuid();
        syncId = curSyncId;
        let loader;
        if (!noLoading) {
            loader = new Loader_1.default().loading();
        }
        return new Promise((resolve, reject) => {
            SuperAgent.get('/domain').query(Object.assign({}, DomainsStore_1.default.filter, { page: DomainsStore_1.default.page, page_count: DomainsStore_1.default.pageCount })).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).set('Organization', OrganizationsStore_1.default.current).end((err, res) => {
                if (loader) {
                    loader.done();
                }
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (curSyncId !== syncId) {
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to load domains');
                    reject(err);
                    return;
                }
                Dispatcher_1.default.dispatch({
                    type: DomainTypes.SYNC,
                    data: {
                        domains: res.body.domains,
                        count: res.body.count
                    }
                });
                resolve();
            });
        });
    }
    exports.sync = sync;
    function syncName() {
        let curSyncId = MiscUtils.uuid();
        syncNamesId = curSyncId;
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.get('/domain').query({
                names: true
            }).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).set('Organization', OrganizationsStore_1.default.current).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (curSyncId !== syncNamesId) {
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to load domain names');
                    reject(err);
                    return;
                }
                Dispatcher_1.default.dispatch({
                    type: DomainTypes.SYNC_NAME,
                    data: {
                        domains: res.body
                    }
                });
                resolve();
            });
        });
    }
    exports.syncName = syncName;
    function traverse(page) {
        Dispatcher_1.default.dispatch({
            type: DomainTypes.TRAVERSE,
            data: {
                page: page
            }
        });
        return sync();
    }
    exports.traverse = traverse;
    function filter(filt) {
        Dispatcher_1.default.dispatch({
            type: DomainTypes.FILTER,
            data: {
                filter: filt
            }
        });
        return sync();
    }
    exports.filter = filter;
    function commit(domain) {
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.put('/domain/' + domain.id).send(domain).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).set('Organization', OrganizationsStore_1.default.current).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to save domain');
                    reject(err);
                    return;
                }
                resolve();
            });
        });
    }
    exports.commit = commit;
    function create(domain) {
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.post('/domain').send(domain).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).set('Organization', OrganizationsStore_1.default.current).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to create domain');
                    reject(err);
                    return;
                }
                resolve();
            });
        });
    }
    exports.create = create;
    function remove(domainId) {
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.delete('/domain/' + domainId).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).set('Organization', OrganizationsStore_1.default.current).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to delete domain');
                    reject(err);
                    return;
                }
                resolve();
            });
        });
    }
    exports.remove = remove;
    function removeMulti(domainIds) {
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.delete('/domain').send(domainIds).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).set('Organization', OrganizationsStore_1.default.current).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to delete domains');
                    reject(err);
                    return;
                }
                resolve();
            });
        });
    }
    exports.removeMulti = removeMulti;
    EventDispatcher_1.default.register(action => {
        switch (action.type) {
            case DomainTypes.CHANGE:
                sync();
                break;
        }
    });
    
});
System.registerDynamic("app/types/StorageTypes.js", [], true, function ($__require, exports, module) {
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.SYNC = 'storage.sync';
  exports.CHANGE = 'storage.change';
  
});
System.registerDynamic("app/actions/StorageActions.js", ["npm:superagent@4.1.0.js", "app/dispatcher/Dispatcher.js", "app/dispatcher/EventDispatcher.js", "app/Alert.js", "app/Csrf.js", "app/Loader.js", "app/types/StorageTypes.js", "app/utils/MiscUtils.js", "app/Constants.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const SuperAgent = $__require("npm:superagent@4.1.0.js");
    const Dispatcher_1 = $__require("app/dispatcher/Dispatcher.js");
    const EventDispatcher_1 = $__require("app/dispatcher/EventDispatcher.js");
    const Alert = $__require("app/Alert.js");
    const Csrf = $__require("app/Csrf.js");
    const Loader_1 = $__require("app/Loader.js");
    const StorageTypes = $__require("app/types/StorageTypes.js");
    const MiscUtils = $__require("app/utils/MiscUtils.js");
    const Constants = $__require("app/Constants.js");
    let syncId;
    function sync() {
        let curSyncId = MiscUtils.uuid();
        syncId = curSyncId;
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.get('/storage').set('Accept', 'application/json').set('Csrf-Token', Csrf.token).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (curSyncId !== syncId) {
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to load storages');
                    reject(err);
                    return;
                }
                Dispatcher_1.default.dispatch({
                    type: StorageTypes.SYNC,
                    data: {
                        storages: res.body
                    }
                });
                resolve();
            });
        });
    }
    exports.sync = sync;
    function commit(storage) {
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.put('/storage/' + storage.id).send(storage).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to save storage');
                    reject(err);
                    return;
                }
                resolve();
            });
        });
    }
    exports.commit = commit;
    function create(storage) {
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.post('/storage').send(storage).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to create storage');
                    reject(err);
                    return;
                }
                resolve();
            });
        });
    }
    exports.create = create;
    function remove(storageId) {
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.delete('/storage/' + storageId).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to delete storages');
                    reject(err);
                    return;
                }
                resolve();
            });
        });
    }
    exports.remove = remove;
    EventDispatcher_1.default.register(action => {
        switch (action.type) {
            case StorageTypes.CHANGE:
                if (!Constants.user) {
                    sync();
                }
                break;
        }
    });
    
});
System.registerDynamic("app/types/ImageTypes.js", [], true, function ($__require, exports, module) {
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.SYNC = 'image.sync';
  exports.SYNC_DATACENTER = 'image.sync_datacenter';
  exports.TRAVERSE = 'image.traverse';
  exports.FILTER = 'image.filter';
  exports.CHANGE = 'image.change';
  
});
System.registerDynamic("app/stores/ImagesStore.js", ["app/dispatcher/Dispatcher.js", "app/EventEmitter.js", "app/types/ImageTypes.js", "app/types/GlobalTypes.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const Dispatcher_1 = $__require("app/dispatcher/Dispatcher.js");
    const EventEmitter_1 = $__require("app/EventEmitter.js");
    const ImageTypes = $__require("app/types/ImageTypes.js");
    const GlobalTypes = $__require("app/types/GlobalTypes.js");
    class ImagesStore extends EventEmitter_1.default {
        constructor() {
            super(...arguments);
            this._images = Object.freeze([]);
            this._filter = null;
            this._map = {};
            this._token = Dispatcher_1.default.register(this._callback.bind(this));
        }
        _reset() {
            this._images = Object.freeze([]);
            this._page = undefined;
            this._pageCount = undefined;
            this._filter = null;
            this._count = undefined;
            this._map = {};
            this.emitChange();
        }
        get images() {
            return this._images;
        }
        get imagesM() {
            let images = [];
            this._images.forEach(image => {
                images.push(Object.assign({}, image));
            });
            return images;
        }
        get page() {
            return this._page || 0;
        }
        get pageCount() {
            return this._pageCount || 20;
        }
        get pages() {
            return Math.ceil(this.count / this.pageCount);
        }
        get filter() {
            return this._filter;
        }
        get count() {
            return this._count || 0;
        }
        image(id) {
            let i = this._map[id];
            if (i === undefined) {
                return null;
            }
            return this._images[i];
        }
        emitChange() {
            this.emitDefer(GlobalTypes.CHANGE);
        }
        addChangeListener(callback) {
            this.on(GlobalTypes.CHANGE, callback);
        }
        removeChangeListener(callback) {
            this.removeListener(GlobalTypes.CHANGE, callback);
        }
        _traverse(page) {
            this._page = Math.min(this.pages, page);
        }
        _filterCallback(filter) {
            if (this._filter !== null && filter === null || this._filter === {} && filter !== null || filter && this._filter && filter.name !== this._filter.name) {
                this._traverse(0);
            }
            this._filter = filter;
            this.emitChange();
        }
        _sync(images, count) {
            this._map = {};
            for (let i = 0; i < images.length; i++) {
                images[i] = Object.freeze(images[i]);
                this._map[images[i].id] = i;
            }
            this._count = count;
            this._images = Object.freeze(images);
            this._page = Math.min(this.pages, this.page);
            this.emitChange();
        }
        _callback(action) {
            switch (action.type) {
                case GlobalTypes.RESET:
                    this._reset();
                    break;
                case ImageTypes.TRAVERSE:
                    this._traverse(action.data.page);
                    break;
                case ImageTypes.FILTER:
                    this._filterCallback(action.data.filter);
                    break;
                case ImageTypes.SYNC:
                    this._sync(action.data.images, action.data.count);
                    break;
            }
        }
    }
    exports.default = new ImagesStore();
    
});
System.registerDynamic("app/actions/ImageActions.js", ["npm:superagent@4.1.0.js", "app/dispatcher/Dispatcher.js", "app/dispatcher/EventDispatcher.js", "app/Alert.js", "app/Csrf.js", "app/Loader.js", "app/types/ImageTypes.js", "app/stores/ImagesStore.js", "app/stores/OrganizationsStore.js", "app/utils/MiscUtils.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const SuperAgent = $__require("npm:superagent@4.1.0.js");
    const Dispatcher_1 = $__require("app/dispatcher/Dispatcher.js");
    const EventDispatcher_1 = $__require("app/dispatcher/EventDispatcher.js");
    const Alert = $__require("app/Alert.js");
    const Csrf = $__require("app/Csrf.js");
    const Loader_1 = $__require("app/Loader.js");
    const ImageTypes = $__require("app/types/ImageTypes.js");
    const ImagesStore_1 = $__require("app/stores/ImagesStore.js");
    const OrganizationsStore_1 = $__require("app/stores/OrganizationsStore.js");
    const MiscUtils = $__require("app/utils/MiscUtils.js");
    let syncId;
    function sync() {
        let curSyncId = MiscUtils.uuid();
        syncId = curSyncId;
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.get('/image').query(Object.assign({}, ImagesStore_1.default.filter, { page: ImagesStore_1.default.page, page_count: ImagesStore_1.default.pageCount })).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).set('Organization', OrganizationsStore_1.default.current).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (curSyncId !== syncId) {
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to load images');
                    reject(err);
                    return;
                }
                Dispatcher_1.default.dispatch({
                    type: ImageTypes.SYNC,
                    data: {
                        images: res.body.images,
                        count: res.body.count
                    }
                });
                resolve();
            });
        });
    }
    exports.sync = sync;
    function syncDatacenter(datacenter) {
        let curSyncId = MiscUtils.uuid();
        syncId = curSyncId;
        if (!datacenter) {
            Dispatcher_1.default.dispatch({
                type: ImageTypes.SYNC_DATACENTER,
                data: {
                    images: []
                }
            });
            return Promise.resolve();
        }
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.get('/image').query({
                datacenter: datacenter
            }).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).set('Organization', OrganizationsStore_1.default.current).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (curSyncId !== syncId) {
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to load images names');
                    reject(err);
                    return;
                }
                Dispatcher_1.default.dispatch({
                    type: ImageTypes.SYNC_DATACENTER,
                    data: {
                        images: res.body
                    }
                });
                resolve();
            });
        });
    }
    exports.syncDatacenter = syncDatacenter;
    function traverse(page) {
        Dispatcher_1.default.dispatch({
            type: ImageTypes.TRAVERSE,
            data: {
                page: page
            }
        });
        return sync();
    }
    exports.traverse = traverse;
    function filter(filt) {
        Dispatcher_1.default.dispatch({
            type: ImageTypes.FILTER,
            data: {
                filter: filt
            }
        });
        return sync();
    }
    exports.filter = filter;
    function commit(image) {
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.put('/image/' + image.id).send(image).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).set('Organization', OrganizationsStore_1.default.current).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to save image');
                    reject(err);
                    return;
                }
                resolve();
            });
        });
    }
    exports.commit = commit;
    function create(image) {
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.post('/image').send(image).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).set('Organization', OrganizationsStore_1.default.current).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to create image');
                    reject(err);
                    return;
                }
                resolve();
            });
        });
    }
    exports.create = create;
    function remove(imageId) {
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.delete('/image/' + imageId).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).set('Organization', OrganizationsStore_1.default.current).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to delete image');
                    reject(err);
                    return;
                }
                resolve();
            });
        });
    }
    exports.remove = remove;
    function removeMulti(imageIds) {
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.delete('/image').send(imageIds).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).set('Organization', OrganizationsStore_1.default.current).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to delete images');
                    reject(err);
                    return;
                }
                resolve();
            });
        });
    }
    exports.removeMulti = removeMulti;
    EventDispatcher_1.default.register(action => {
        switch (action.type) {
            case ImageTypes.CHANGE:
                sync();
                break;
        }
    });
    
});
System.registerDynamic("app/types/DiskTypes.js", [], true, function ($__require, exports, module) {
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.SYNC = 'disk.sync';
  exports.TRAVERSE = 'disk.traverse';
  exports.FILTER = 'disk.filter';
  exports.CHANGE = 'disk.change';
  
});
System.registerDynamic("app/stores/DisksStore.js", ["app/dispatcher/Dispatcher.js", "app/EventEmitter.js", "app/types/DiskTypes.js", "app/types/GlobalTypes.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const Dispatcher_1 = $__require("app/dispatcher/Dispatcher.js");
    const EventEmitter_1 = $__require("app/EventEmitter.js");
    const DiskTypes = $__require("app/types/DiskTypes.js");
    const GlobalTypes = $__require("app/types/GlobalTypes.js");
    class DisksStore extends EventEmitter_1.default {
        constructor() {
            super(...arguments);
            this._disks = Object.freeze([]);
            this._filter = null;
            this._map = {};
            this._token = Dispatcher_1.default.register(this._callback.bind(this));
        }
        _reset() {
            this._disks = Object.freeze([]);
            this._page = undefined;
            this._pageCount = undefined;
            this._filter = null;
            this._count = undefined;
            this._map = {};
            this.emitChange();
        }
        get disks() {
            return this._disks;
        }
        get disksM() {
            let disks = [];
            this._disks.forEach(disk => {
                disks.push(Object.assign({}, disk));
            });
            return disks;
        }
        get page() {
            return this._page || 0;
        }
        get pageCount() {
            return this._pageCount || 20;
        }
        get pages() {
            return Math.ceil(this.count / this.pageCount);
        }
        get filter() {
            return this._filter;
        }
        get count() {
            return this._count || 0;
        }
        disk(id) {
            let i = this._map[id];
            if (i === undefined) {
                return null;
            }
            return this._disks[i];
        }
        emitChange() {
            this.emitDefer(GlobalTypes.CHANGE);
        }
        addChangeListener(callback) {
            this.on(GlobalTypes.CHANGE, callback);
        }
        removeChangeListener(callback) {
            this.removeListener(GlobalTypes.CHANGE, callback);
        }
        _traverse(page) {
            this._page = Math.min(this.pages, page);
        }
        _filterCallback(filter) {
            if (this._filter !== null && filter === null || this._filter === {} && filter !== null || filter && this._filter && filter.name !== this._filter.name) {
                this._traverse(0);
            }
            this._filter = filter;
            this.emitChange();
        }
        _sync(disks, count) {
            this._map = {};
            for (let i = 0; i < disks.length; i++) {
                disks[i] = Object.freeze(disks[i]);
                this._map[disks[i].id] = i;
            }
            this._count = count;
            this._disks = Object.freeze(disks);
            this._page = Math.min(this.pages, this.page);
            this.emitChange();
        }
        _callback(action) {
            switch (action.type) {
                case GlobalTypes.RESET:
                    this._reset();
                    break;
                case DiskTypes.TRAVERSE:
                    this._traverse(action.data.page);
                    break;
                case DiskTypes.FILTER:
                    this._filterCallback(action.data.filter);
                    break;
                case DiskTypes.SYNC:
                    this._sync(action.data.disks, action.data.count);
                    break;
            }
        }
    }
    exports.default = new DisksStore();
    
});
System.registerDynamic("app/actions/DiskActions.js", ["npm:superagent@4.1.0.js", "app/dispatcher/Dispatcher.js", "app/dispatcher/EventDispatcher.js", "app/Alert.js", "app/Csrf.js", "app/Loader.js", "app/types/DiskTypes.js", "app/stores/DisksStore.js", "app/stores/OrganizationsStore.js", "app/utils/MiscUtils.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const SuperAgent = $__require("npm:superagent@4.1.0.js");
    const Dispatcher_1 = $__require("app/dispatcher/Dispatcher.js");
    const EventDispatcher_1 = $__require("app/dispatcher/EventDispatcher.js");
    const Alert = $__require("app/Alert.js");
    const Csrf = $__require("app/Csrf.js");
    const Loader_1 = $__require("app/Loader.js");
    const DiskTypes = $__require("app/types/DiskTypes.js");
    const DisksStore_1 = $__require("app/stores/DisksStore.js");
    const OrganizationsStore_1 = $__require("app/stores/OrganizationsStore.js");
    const MiscUtils = $__require("app/utils/MiscUtils.js");
    let syncId;
    function sync(noLoading) {
        let curSyncId = MiscUtils.uuid();
        syncId = curSyncId;
        let loader;
        if (!noLoading) {
            loader = new Loader_1.default().loading();
        }
        return new Promise((resolve, reject) => {
            SuperAgent.get('/disk').query(Object.assign({}, DisksStore_1.default.filter, { page: DisksStore_1.default.page, page_count: DisksStore_1.default.pageCount })).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).set('Organization', OrganizationsStore_1.default.current).end((err, res) => {
                if (loader) {
                    loader.done();
                }
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (curSyncId !== syncId) {
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to load disks');
                    reject(err);
                    return;
                }
                Dispatcher_1.default.dispatch({
                    type: DiskTypes.SYNC,
                    data: {
                        disks: res.body.disks,
                        count: res.body.count
                    }
                });
                resolve();
            });
        });
    }
    exports.sync = sync;
    function traverse(page) {
        Dispatcher_1.default.dispatch({
            type: DiskTypes.TRAVERSE,
            data: {
                page: page
            }
        });
        return sync();
    }
    exports.traverse = traverse;
    function filter(filt) {
        Dispatcher_1.default.dispatch({
            type: DiskTypes.FILTER,
            data: {
                filter: filt
            }
        });
        return sync();
    }
    exports.filter = filter;
    function commit(disk) {
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.put('/disk/' + disk.id).send(disk).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).set('Organization', OrganizationsStore_1.default.current).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to save disk');
                    reject(err);
                    return;
                }
                resolve();
            });
        });
    }
    exports.commit = commit;
    function create(disk) {
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.post('/disk').send(disk).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).set('Organization', OrganizationsStore_1.default.current).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to create disk');
                    reject(err);
                    return;
                }
                resolve();
            });
        });
    }
    exports.create = create;
    function remove(diskId) {
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.delete('/disk/' + diskId).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).set('Organization', OrganizationsStore_1.default.current).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to delete disk');
                    reject(err);
                    return;
                }
                resolve();
            });
        });
    }
    exports.remove = remove;
    function removeMulti(diskIds) {
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.delete('/disk').send(diskIds).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).set('Organization', OrganizationsStore_1.default.current).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to delete disks');
                    reject(err);
                    return;
                }
                resolve();
            });
        });
    }
    exports.removeMulti = removeMulti;
    function forceRemoveMulti(diskIds) {
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.delete('/disk').query({
                force: true
            }).send(diskIds).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).set('Organization', OrganizationsStore_1.default.current).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to delete disks');
                    reject(err);
                    return;
                }
                resolve();
            });
        });
    }
    exports.forceRemoveMulti = forceRemoveMulti;
    function updateMulti(diskIds, state) {
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.put('/disk').send({
                "ids": diskIds,
                "state": state
            }).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).set('Organization', OrganizationsStore_1.default.current).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to update disks');
                    reject(err);
                    return;
                }
                resolve();
            });
        });
    }
    exports.updateMulti = updateMulti;
    EventDispatcher_1.default.register(action => {
        switch (action.type) {
            case DiskTypes.CHANGE:
                sync();
                break;
        }
    });
    
});
System.registerDynamic("app/types/InstanceTypes.js", [], true, function ($__require, exports, module) {
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.SYNC = 'instance.sync';
  exports.SYNC_NODE = 'instance.sync_node';
  exports.TRAVERSE = 'instance.traverse';
  exports.FILTER = 'instance.filter';
  exports.CHANGE = 'instance.change';
  
});
System.registerDynamic("app/stores/InstancesStore.js", ["app/dispatcher/Dispatcher.js", "app/EventEmitter.js", "app/types/InstanceTypes.js", "app/types/GlobalTypes.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const Dispatcher_1 = $__require("app/dispatcher/Dispatcher.js");
    const EventEmitter_1 = $__require("app/EventEmitter.js");
    const InstanceTypes = $__require("app/types/InstanceTypes.js");
    const GlobalTypes = $__require("app/types/GlobalTypes.js");
    class InstancesStore extends EventEmitter_1.default {
        constructor() {
            super(...arguments);
            this._instances = Object.freeze([]);
            this._filter = null;
            this._map = {};
            this._token = Dispatcher_1.default.register(this._callback.bind(this));
        }
        _reset() {
            this._instances = Object.freeze([]);
            this._page = undefined;
            this._pageCount = undefined;
            this._filter = null;
            this._count = undefined;
            this._map = {};
            this.emitChange();
        }
        get instances() {
            return this._instances;
        }
        get instancesM() {
            let instances = [];
            this._instances.forEach(instance => {
                instances.push(Object.assign({}, instance));
            });
            return instances;
        }
        get page() {
            return this._page || 0;
        }
        get pageCount() {
            return this._pageCount || 20;
        }
        get pages() {
            return Math.ceil(this.count / this.pageCount);
        }
        get filter() {
            return this._filter;
        }
        get count() {
            return this._count || 0;
        }
        instance(id) {
            let i = this._map[id];
            if (i === undefined) {
                return null;
            }
            return this._instances[i];
        }
        emitChange() {
            this.emitDefer(GlobalTypes.CHANGE);
        }
        addChangeListener(callback) {
            this.on(GlobalTypes.CHANGE, callback);
        }
        removeChangeListener(callback) {
            this.removeListener(GlobalTypes.CHANGE, callback);
        }
        _traverse(page) {
            this._page = Math.min(this.pages, page);
        }
        _filterCallback(filter) {
            if (this._filter !== null && filter === null || this._filter === {} && filter !== null || filter && this._filter && filter.name !== this._filter.name) {
                this._traverse(0);
            }
            this._filter = filter;
            this.emitChange();
        }
        _sync(instances, count) {
            this._map = {};
            for (let i = 0; i < instances.length; i++) {
                instances[i] = Object.freeze(instances[i]);
                this._map[instances[i].id] = i;
            }
            this._count = count;
            this._instances = Object.freeze(instances);
            this._page = Math.min(this.pages, this.page);
            this.emitChange();
        }
        _callback(action) {
            switch (action.type) {
                case GlobalTypes.RESET:
                    this._reset();
                    break;
                case InstanceTypes.TRAVERSE:
                    this._traverse(action.data.page);
                    break;
                case InstanceTypes.FILTER:
                    this._filterCallback(action.data.filter);
                    break;
                case InstanceTypes.SYNC:
                    this._sync(action.data.instances, action.data.count);
                    break;
            }
        }
    }
    exports.default = new InstancesStore();
    
});
System.registerDynamic("app/actions/InstanceActions.js", ["npm:superagent@4.1.0.js", "app/dispatcher/Dispatcher.js", "app/dispatcher/EventDispatcher.js", "app/Alert.js", "app/Csrf.js", "app/Loader.js", "app/types/InstanceTypes.js", "app/stores/InstancesStore.js", "app/stores/OrganizationsStore.js", "app/utils/MiscUtils.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const SuperAgent = $__require("npm:superagent@4.1.0.js");
    const Dispatcher_1 = $__require("app/dispatcher/Dispatcher.js");
    const EventDispatcher_1 = $__require("app/dispatcher/EventDispatcher.js");
    const Alert = $__require("app/Alert.js");
    const Csrf = $__require("app/Csrf.js");
    const Loader_1 = $__require("app/Loader.js");
    const InstanceTypes = $__require("app/types/InstanceTypes.js");
    const InstancesStore_1 = $__require("app/stores/InstancesStore.js");
    const OrganizationsStore_1 = $__require("app/stores/OrganizationsStore.js");
    const MiscUtils = $__require("app/utils/MiscUtils.js");
    let syncId;
    function sync(noLoading) {
        let curSyncId = MiscUtils.uuid();
        syncId = curSyncId;
        let loader;
        if (!noLoading) {
            loader = new Loader_1.default().loading();
        }
        return new Promise((resolve, reject) => {
            SuperAgent.get('/instance').query(Object.assign({}, InstancesStore_1.default.filter, { page: InstancesStore_1.default.page, page_count: InstancesStore_1.default.pageCount })).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).set('Organization', OrganizationsStore_1.default.current).end((err, res) => {
                if (loader) {
                    loader.done();
                }
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (curSyncId !== syncId) {
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to load instances');
                    reject(err);
                    return;
                }
                Dispatcher_1.default.dispatch({
                    type: InstanceTypes.SYNC,
                    data: {
                        instances: res.body.instances,
                        count: res.body.count
                    }
                });
                resolve();
            });
        });
    }
    exports.sync = sync;
    function traverse(page) {
        Dispatcher_1.default.dispatch({
            type: InstanceTypes.TRAVERSE,
            data: {
                page: page
            }
        });
        return sync();
    }
    exports.traverse = traverse;
    function filter(filt) {
        Dispatcher_1.default.dispatch({
            type: InstanceTypes.FILTER,
            data: {
                filter: filt
            }
        });
        return sync();
    }
    exports.filter = filter;
    function commit(instance) {
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.put('/instance/' + instance.id).send(instance).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).set('Organization', OrganizationsStore_1.default.current).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to save instance');
                    reject(err);
                    return;
                }
                resolve();
            });
        });
    }
    exports.commit = commit;
    function create(instance) {
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.post('/instance').send(instance).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).set('Organization', OrganizationsStore_1.default.current).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to create instance');
                    reject(err);
                    return;
                }
                resolve();
            });
        });
    }
    exports.create = create;
    function remove(instanceId) {
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.delete('/instance/' + instanceId).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).set('Organization', OrganizationsStore_1.default.current).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to delete instance');
                    reject(err);
                    return;
                }
                resolve();
            });
        });
    }
    exports.remove = remove;
    function removeMulti(instanceIds) {
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.delete('/instance').send(instanceIds).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).set('Organization', OrganizationsStore_1.default.current).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to delete instances');
                    reject(err);
                    return;
                }
                resolve();
            });
        });
    }
    exports.removeMulti = removeMulti;
    function forceRemoveMulti(instanceIds) {
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.delete('/instance').query({
                force: true
            }).send(instanceIds).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).set('Organization', OrganizationsStore_1.default.current).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to force delete instances');
                    reject(err);
                    return;
                }
                resolve();
            });
        });
    }
    exports.forceRemoveMulti = forceRemoveMulti;
    function updateMulti(instanceIds, state) {
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.put('/instance').send({
                "ids": instanceIds,
                "state": state
            }).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).set('Organization', OrganizationsStore_1.default.current).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to update instances');
                    reject(err);
                    return;
                }
                resolve();
            });
        });
    }
    exports.updateMulti = updateMulti;
    function syncNode(node) {
        let curSyncId = MiscUtils.uuid();
        syncId = curSyncId;
        if (!node) {
            return Promise.resolve();
        }
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.get('/instance').query({
                node_names: node
            }).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).set('Organization', OrganizationsStore_1.default.current).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (curSyncId !== syncId) {
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to load images names');
                    reject(err);
                    return;
                }
                Dispatcher_1.default.dispatch({
                    type: InstanceTypes.SYNC_NODE,
                    data: {
                        node: node,
                        instances: res.body
                    }
                });
                resolve();
            });
        });
    }
    exports.syncNode = syncNode;
    EventDispatcher_1.default.register(action => {
        switch (action.type) {
            case InstanceTypes.CHANGE:
                sync();
                break;
        }
    });
    
});
System.registerDynamic("app/types/FirewallTypes.js", [], true, function ($__require, exports, module) {
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.SYNC = 'firewall.sync';
  exports.TRAVERSE = 'firewall.traverse';
  exports.FILTER = 'firewall.filter';
  exports.CHANGE = 'firewall.change';
  
});
System.registerDynamic("app/stores/FirewallsStore.js", ["app/dispatcher/Dispatcher.js", "app/EventEmitter.js", "app/types/FirewallTypes.js", "app/types/GlobalTypes.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const Dispatcher_1 = $__require("app/dispatcher/Dispatcher.js");
    const EventEmitter_1 = $__require("app/EventEmitter.js");
    const FirewallTypes = $__require("app/types/FirewallTypes.js");
    const GlobalTypes = $__require("app/types/GlobalTypes.js");
    class FirewallsStore extends EventEmitter_1.default {
        constructor() {
            super(...arguments);
            this._firewalls = Object.freeze([]);
            this._filter = null;
            this._map = {};
            this._token = Dispatcher_1.default.register(this._callback.bind(this));
        }
        _reset() {
            this._firewalls = Object.freeze([]);
            this._page = undefined;
            this._pageCount = undefined;
            this._filter = null;
            this._count = undefined;
            this._map = {};
            this.emitChange();
        }
        get firewalls() {
            return this._firewalls;
        }
        get firewallsM() {
            let firewalls = [];
            this._firewalls.forEach(firewall => {
                firewalls.push(Object.assign({}, firewall));
            });
            return firewalls;
        }
        get page() {
            return this._page || 0;
        }
        get pageCount() {
            return this._pageCount || 20;
        }
        get pages() {
            return Math.ceil(this.count / this.pageCount);
        }
        get filter() {
            return this._filter;
        }
        get count() {
            return this._count || 0;
        }
        firewall(id) {
            let i = this._map[id];
            if (i === undefined) {
                return null;
            }
            return this._firewalls[i];
        }
        emitChange() {
            this.emitDefer(GlobalTypes.CHANGE);
        }
        addChangeListener(callback) {
            this.on(GlobalTypes.CHANGE, callback);
        }
        removeChangeListener(callback) {
            this.removeListener(GlobalTypes.CHANGE, callback);
        }
        _traverse(page) {
            this._page = Math.min(this.pages, page);
        }
        _filterCallback(filter) {
            if (this._filter !== null && filter === null || this._filter === {} && filter !== null || filter && this._filter && filter.name !== this._filter.name) {
                this._traverse(0);
            }
            this._filter = filter;
            this.emitChange();
        }
        _sync(firewalls, count) {
            this._map = {};
            for (let i = 0; i < firewalls.length; i++) {
                firewalls[i] = Object.freeze(firewalls[i]);
                this._map[firewalls[i].id] = i;
            }
            this._count = count;
            this._firewalls = Object.freeze(firewalls);
            this._page = Math.min(this.pages, this.page);
            this.emitChange();
        }
        _callback(action) {
            switch (action.type) {
                case GlobalTypes.RESET:
                    this._reset();
                    break;
                case FirewallTypes.TRAVERSE:
                    this._traverse(action.data.page);
                    break;
                case FirewallTypes.FILTER:
                    this._filterCallback(action.data.filter);
                    break;
                case FirewallTypes.SYNC:
                    this._sync(action.data.firewalls, action.data.count);
                    break;
            }
        }
    }
    exports.default = new FirewallsStore();
    
});
System.registerDynamic("app/actions/FirewallActions.js", ["npm:superagent@4.1.0.js", "app/dispatcher/Dispatcher.js", "app/dispatcher/EventDispatcher.js", "app/Alert.js", "app/Csrf.js", "app/Loader.js", "app/types/FirewallTypes.js", "app/stores/FirewallsStore.js", "app/stores/OrganizationsStore.js", "app/utils/MiscUtils.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const SuperAgent = $__require("npm:superagent@4.1.0.js");
    const Dispatcher_1 = $__require("app/dispatcher/Dispatcher.js");
    const EventDispatcher_1 = $__require("app/dispatcher/EventDispatcher.js");
    const Alert = $__require("app/Alert.js");
    const Csrf = $__require("app/Csrf.js");
    const Loader_1 = $__require("app/Loader.js");
    const FirewallTypes = $__require("app/types/FirewallTypes.js");
    const FirewallsStore_1 = $__require("app/stores/FirewallsStore.js");
    const OrganizationsStore_1 = $__require("app/stores/OrganizationsStore.js");
    const MiscUtils = $__require("app/utils/MiscUtils.js");
    let syncId;
    function sync(noLoading) {
        let curSyncId = MiscUtils.uuid();
        syncId = curSyncId;
        let loader;
        if (!noLoading) {
            loader = new Loader_1.default().loading();
        }
        return new Promise((resolve, reject) => {
            SuperAgent.get('/firewall').query(Object.assign({}, FirewallsStore_1.default.filter, { page: FirewallsStore_1.default.page, page_count: FirewallsStore_1.default.pageCount })).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).set('Organization', OrganizationsStore_1.default.current).end((err, res) => {
                if (loader) {
                    loader.done();
                }
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (curSyncId !== syncId) {
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to load firewalls');
                    reject(err);
                    return;
                }
                Dispatcher_1.default.dispatch({
                    type: FirewallTypes.SYNC,
                    data: {
                        firewalls: res.body.firewalls,
                        count: res.body.count
                    }
                });
                resolve();
            });
        });
    }
    exports.sync = sync;
    function traverse(page) {
        Dispatcher_1.default.dispatch({
            type: FirewallTypes.TRAVERSE,
            data: {
                page: page
            }
        });
        return sync();
    }
    exports.traverse = traverse;
    function filter(filt) {
        Dispatcher_1.default.dispatch({
            type: FirewallTypes.FILTER,
            data: {
                filter: filt
            }
        });
        return sync();
    }
    exports.filter = filter;
    function commit(firewall) {
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.put('/firewall/' + firewall.id).send(firewall).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).set('Organization', OrganizationsStore_1.default.current).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to save firewall');
                    reject(err);
                    return;
                }
                resolve();
            });
        });
    }
    exports.commit = commit;
    function create(firewall) {
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.post('/firewall').send(firewall).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).set('Organization', OrganizationsStore_1.default.current).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to create firewall');
                    reject(err);
                    return;
                }
                resolve();
            });
        });
    }
    exports.create = create;
    function remove(firewallId) {
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.delete('/firewall/' + firewallId).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).set('Organization', OrganizationsStore_1.default.current).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to delete firewall');
                    reject(err);
                    return;
                }
                resolve();
            });
        });
    }
    exports.remove = remove;
    function removeMulti(firewallIds) {
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.delete('/firewall').send(firewallIds).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).set('Organization', OrganizationsStore_1.default.current).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to delete firewalls');
                    reject(err);
                    return;
                }
                resolve();
            });
        });
    }
    exports.removeMulti = removeMulti;
    EventDispatcher_1.default.register(action => {
        switch (action.type) {
            case FirewallTypes.CHANGE:
                sync();
                break;
        }
    });
    
});
System.registerDynamic("app/types/AuthorityTypes.js", [], true, function ($__require, exports, module) {
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.SYNC = 'authority.sync';
  exports.TRAVERSE = 'authority.traverse';
  exports.FILTER = 'authority.filter';
  exports.CHANGE = 'authority.change';
  
});
System.registerDynamic("app/stores/AuthoritiesStore.js", ["app/dispatcher/Dispatcher.js", "app/EventEmitter.js", "app/types/AuthorityTypes.js", "app/types/GlobalTypes.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const Dispatcher_1 = $__require("app/dispatcher/Dispatcher.js");
    const EventEmitter_1 = $__require("app/EventEmitter.js");
    const AuthorityTypes = $__require("app/types/AuthorityTypes.js");
    const GlobalTypes = $__require("app/types/GlobalTypes.js");
    class AuthoritiesStore extends EventEmitter_1.default {
        constructor() {
            super(...arguments);
            this._authorities = Object.freeze([]);
            this._filter = null;
            this._map = {};
            this._token = Dispatcher_1.default.register(this._callback.bind(this));
        }
        _reset() {
            this._authorities = Object.freeze([]);
            this._page = undefined;
            this._pageCount = undefined;
            this._filter = null;
            this._count = undefined;
            this._map = {};
            this.emitChange();
        }
        get authorities() {
            return this._authorities;
        }
        get authoritiesM() {
            let authorities = [];
            this._authorities.forEach(authority => {
                authorities.push(Object.assign({}, authority));
            });
            return authorities;
        }
        get page() {
            return this._page || 0;
        }
        get pageCount() {
            return this._pageCount || 20;
        }
        get pages() {
            return Math.ceil(this.count / this.pageCount);
        }
        get filter() {
            return this._filter;
        }
        get count() {
            return this._count || 0;
        }
        authority(id) {
            let i = this._map[id];
            if (i === undefined) {
                return null;
            }
            return this._authorities[i];
        }
        emitChange() {
            this.emitDefer(GlobalTypes.CHANGE);
        }
        addChangeListener(callback) {
            this.on(GlobalTypes.CHANGE, callback);
        }
        removeChangeListener(callback) {
            this.removeListener(GlobalTypes.CHANGE, callback);
        }
        _traverse(page) {
            this._page = Math.min(this.pages, page);
        }
        _filterCallback(filter) {
            if (this._filter !== null && filter === null || this._filter === {} && filter !== null || filter && this._filter && filter.name !== this._filter.name) {
                this._traverse(0);
            }
            this._filter = filter;
            this.emitChange();
        }
        _sync(authorities, count) {
            this._map = {};
            for (let i = 0; i < authorities.length; i++) {
                authorities[i] = Object.freeze(authorities[i]);
                this._map[authorities[i].id] = i;
            }
            this._count = count;
            this._authorities = Object.freeze(authorities);
            this._page = Math.min(this.pages, this.page);
            this.emitChange();
        }
        _callback(action) {
            switch (action.type) {
                case GlobalTypes.RESET:
                    this._reset();
                    break;
                case AuthorityTypes.TRAVERSE:
                    this._traverse(action.data.page);
                    break;
                case AuthorityTypes.FILTER:
                    this._filterCallback(action.data.filter);
                    break;
                case AuthorityTypes.SYNC:
                    this._sync(action.data.authorities, action.data.count);
                    break;
            }
        }
    }
    exports.default = new AuthoritiesStore();
    
});
System.registerDynamic("app/types/OrganizationTypes.js", [], true, function ($__require, exports, module) {
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.SYNC = 'organization.sync';
  exports.CHANGE = 'organization.change';
  exports.CURRENT = 'organization.current';
  
});
System.registerDynamic("app/stores/OrganizationsStore.js", ["app/dispatcher/Dispatcher.js", "app/EventEmitter.js", "app/Constants.js", "app/types/OrganizationTypes.js", "app/types/GlobalTypes.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const Dispatcher_1 = $__require("app/dispatcher/Dispatcher.js");
    const EventEmitter_1 = $__require("app/EventEmitter.js");
    const Constants = $__require("app/Constants.js");
    const OrganizationTypes = $__require("app/types/OrganizationTypes.js");
    const GlobalTypes = $__require("app/types/GlobalTypes.js");
    class OrganizationsStore extends EventEmitter_1.default {
        constructor() {
            super(...arguments);
            this._organizations = Object.freeze([]);
            this._map = {};
            this._token = Dispatcher_1.default.register(this._callback.bind(this));
        }
        _reset(current) {
            this._current = current;
            this.emitChange();
        }
        get current() {
            return this._current;
        }
        get organizations() {
            return this._organizations;
        }
        get organizationsM() {
            let organizations = [];
            this._organizations.forEach(organization => {
                organizations.push(Object.assign({}, organization));
            });
            return organizations;
        }
        organization(id) {
            let i = this._map[id];
            if (i === undefined) {
                return null;
            }
            return this._organizations[i];
        }
        emitChange() {
            this.emitDefer(GlobalTypes.CHANGE);
        }
        addChangeListener(callback) {
            this.on(GlobalTypes.CHANGE, callback);
        }
        removeChangeListener(callback) {
            this.removeListener(GlobalTypes.CHANGE, callback);
        }
        _sync(organizations) {
            if (Constants.user && !this._current) {
                if (organizations.length) {
                    this._current = organizations[0].id;
                } else {
                    this._current = null;
                }
            }
            this._map = {};
            for (let i = 0; i < organizations.length; i++) {
                organizations[i] = Object.freeze(organizations[i]);
                this._map[organizations[i].id] = i;
            }
            this._organizations = Object.freeze(organizations);
            this.emitChange();
        }
        _callback(action) {
            switch (action.type) {
                case GlobalTypes.RESET:
                    this._reset(action.data.current);
                    break;
                case GlobalTypes.RELOAD:
                    window.location.hash = '#/reload';
                    break;
                case OrganizationTypes.SYNC:
                    this._sync(action.data.organizations);
                    break;
            }
        }
    }
    exports.default = new OrganizationsStore();
    
});
System.registerDynamic("app/actions/AuthorityActions.js", ["npm:superagent@4.1.0.js", "app/dispatcher/Dispatcher.js", "app/dispatcher/EventDispatcher.js", "app/Alert.js", "app/Csrf.js", "app/Loader.js", "app/types/AuthorityTypes.js", "app/stores/AuthoritiesStore.js", "app/stores/OrganizationsStore.js", "app/utils/MiscUtils.js", "app/Constants.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const SuperAgent = $__require("npm:superagent@4.1.0.js");
    const Dispatcher_1 = $__require("app/dispatcher/Dispatcher.js");
    const EventDispatcher_1 = $__require("app/dispatcher/EventDispatcher.js");
    const Alert = $__require("app/Alert.js");
    const Csrf = $__require("app/Csrf.js");
    const Loader_1 = $__require("app/Loader.js");
    const AuthorityTypes = $__require("app/types/AuthorityTypes.js");
    const AuthoritiesStore_1 = $__require("app/stores/AuthoritiesStore.js");
    const OrganizationsStore_1 = $__require("app/stores/OrganizationsStore.js");
    const MiscUtils = $__require("app/utils/MiscUtils.js");
    const Constants = $__require("app/Constants.js");
    let syncId;
    function sync(noLoading) {
        let curSyncId = MiscUtils.uuid();
        syncId = curSyncId;
        let loader;
        if (!noLoading) {
            loader = new Loader_1.default().loading();
        }
        return new Promise((resolve, reject) => {
            SuperAgent.get('/authority').query(Object.assign({}, AuthoritiesStore_1.default.filter, { page: AuthoritiesStore_1.default.page, page_count: AuthoritiesStore_1.default.pageCount })).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).set('Organization', OrganizationsStore_1.default.current).end((err, res) => {
                if (loader) {
                    loader.done();
                }
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (curSyncId !== syncId) {
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to load authorities');
                    reject(err);
                    return;
                }
                Dispatcher_1.default.dispatch({
                    type: AuthorityTypes.SYNC,
                    data: {
                        authorities: res.body.authorities,
                        count: res.body.count
                    }
                });
                resolve();
            });
        });
    }
    exports.sync = sync;
    function traverse(page) {
        Dispatcher_1.default.dispatch({
            type: AuthorityTypes.TRAVERSE,
            data: {
                page: page
            }
        });
        return sync();
    }
    exports.traverse = traverse;
    function filter(filt) {
        Dispatcher_1.default.dispatch({
            type: AuthorityTypes.FILTER,
            data: {
                filter: filt
            }
        });
        return sync();
    }
    exports.filter = filter;
    function commit(authority) {
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.put('/authority/' + authority.id).send(authority).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).set('Organization', OrganizationsStore_1.default.current).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to save authority');
                    reject(err);
                    return;
                }
                resolve();
            });
        });
    }
    exports.commit = commit;
    function create(authority) {
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.post('/authority').send(authority).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).set('Organization', OrganizationsStore_1.default.current).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to create authority');
                    reject(err);
                    return;
                }
                resolve();
            });
        });
    }
    exports.create = create;
    function remove(authorityId) {
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.delete('/authority/' + authorityId).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).set('Organization', OrganizationsStore_1.default.current).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to delete authority');
                    reject(err);
                    return;
                }
                resolve();
            });
        });
    }
    exports.remove = remove;
    function removeMulti(authorityIds) {
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.delete('/authority').send(authorityIds).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).set('Organization', OrganizationsStore_1.default.current).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to delete authorities');
                    reject(err);
                    return;
                }
                resolve();
            });
        });
    }
    exports.removeMulti = removeMulti;
    EventDispatcher_1.default.register(action => {
        switch (action.type) {
            case AuthorityTypes.CHANGE:
                if (!Constants.user) {
                    sync();
                }
                break;
        }
    });
    
});
System.registerDynamic('npm:events@3.0.0/events.js', [], true, function ($__require, exports, module) {
  // Copyright Joyent, Inc. and other Node contributors.
  //
  // Permission is hereby granted, free of charge, to any person obtaining a
  // copy of this software and associated documentation files (the
  // "Software"), to deal in the Software without restriction, including
  // without limitation the rights to use, copy, modify, merge, publish,
  // distribute, sublicense, and/or sell copies of the Software, and to permit
  // persons to whom the Software is furnished to do so, subject to the
  // following conditions:
  //
  // The above copyright notice and this permission notice shall be included
  // in all copies or substantial portions of the Software.
  //
  // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
  // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
  // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
  // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
  // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
  // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
  // USE OR OTHER DEALINGS IN THE SOFTWARE.

  'use strict';

  var global = this || self,
      GLOBAL = global;
  var R = typeof Reflect === 'object' ? Reflect : null;
  var ReflectApply = R && typeof R.apply === 'function' ? R.apply : function ReflectApply(target, receiver, args) {
    return Function.prototype.apply.call(target, receiver, args);
  };

  var ReflectOwnKeys;
  if (R && typeof R.ownKeys === 'function') {
    ReflectOwnKeys = R.ownKeys;
  } else if (Object.getOwnPropertySymbols) {
    ReflectOwnKeys = function ReflectOwnKeys(target) {
      return Object.getOwnPropertyNames(target).concat(Object.getOwnPropertySymbols(target));
    };
  } else {
    ReflectOwnKeys = function ReflectOwnKeys(target) {
      return Object.getOwnPropertyNames(target);
    };
  }

  function ProcessEmitWarning(warning) {
    if (console && console.warn) console.warn(warning);
  }

  var NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {
    return value !== value;
  };

  function EventEmitter() {
    EventEmitter.init.call(this);
  }
  module.exports = EventEmitter;

  // Backwards-compat with node 0.10.x
  EventEmitter.EventEmitter = EventEmitter;

  EventEmitter.prototype._events = undefined;
  EventEmitter.prototype._eventsCount = 0;
  EventEmitter.prototype._maxListeners = undefined;

  // By default EventEmitters will print a warning if more than 10 listeners are
  // added to it. This is a useful default which helps finding memory leaks.
  var defaultMaxListeners = 10;

  Object.defineProperty(EventEmitter, 'defaultMaxListeners', {
    enumerable: true,
    get: function () {
      return defaultMaxListeners;
    },
    set: function (arg) {
      if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {
        throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + arg + '.');
      }
      defaultMaxListeners = arg;
    }
  });

  EventEmitter.init = function () {

    if (this._events === undefined || this._events === Object.getPrototypeOf(this)._events) {
      this._events = Object.create(null);
      this._eventsCount = 0;
    }

    this._maxListeners = this._maxListeners || undefined;
  };

  // Obviously not all Emitters should be limited to 10. This function allows
  // that to be increased. Set to zero for unlimited.
  EventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {
    if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {
      throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + n + '.');
    }
    this._maxListeners = n;
    return this;
  };

  function $getMaxListeners(that) {
    if (that._maxListeners === undefined) return EventEmitter.defaultMaxListeners;
    return that._maxListeners;
  }

  EventEmitter.prototype.getMaxListeners = function getMaxListeners() {
    return $getMaxListeners(this);
  };

  EventEmitter.prototype.emit = function emit(type) {
    var args = [];
    for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);
    var doError = type === 'error';

    var events = this._events;
    if (events !== undefined) doError = doError && events.error === undefined;else if (!doError) return false;

    // If there is no 'error' event listener then throw.
    if (doError) {
      var er;
      if (args.length > 0) er = args[0];
      if (er instanceof Error) {
        // Note: The comments on the `throw` lines are intentional, they show
        // up in Node's output if this results in an unhandled exception.
        throw er; // Unhandled 'error' event
      }
      // At least give some kind of context to the user
      var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));
      err.context = er;
      throw err; // Unhandled 'error' event
    }

    var handler = events[type];

    if (handler === undefined) return false;

    if (typeof handler === 'function') {
      ReflectApply(handler, this, args);
    } else {
      var len = handler.length;
      var listeners = arrayClone(handler, len);
      for (var i = 0; i < len; ++i) ReflectApply(listeners[i], this, args);
    }

    return true;
  };

  function _addListener(target, type, listener, prepend) {
    var m;
    var events;
    var existing;

    if (typeof listener !== 'function') {
      throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof listener);
    }

    events = target._events;
    if (events === undefined) {
      events = target._events = Object.create(null);
      target._eventsCount = 0;
    } else {
      // To avoid recursion in the case that type === "newListener"! Before
      // adding it to the listeners, first emit "newListener".
      if (events.newListener !== undefined) {
        target.emit('newListener', type, listener.listener ? listener.listener : listener);

        // Re-assign `events` because a newListener handler could have caused the
        // this._events to be assigned to a new object
        events = target._events;
      }
      existing = events[type];
    }

    if (existing === undefined) {
      // Optimize the case of one listener. Don't need the extra array object.
      existing = events[type] = listener;
      ++target._eventsCount;
    } else {
      if (typeof existing === 'function') {
        // Adding the second element, need to change to array.
        existing = events[type] = prepend ? [listener, existing] : [existing, listener];
        // If we've already got an array, just append.
      } else if (prepend) {
        existing.unshift(listener);
      } else {
        existing.push(listener);
      }

      // Check for listener leak
      m = $getMaxListeners(target);
      if (m > 0 && existing.length > m && !existing.warned) {
        existing.warned = true;
        // No error code for this since it is a Warning
        // eslint-disable-next-line no-restricted-syntax
        var w = new Error('Possible EventEmitter memory leak detected. ' + existing.length + ' ' + String(type) + ' listeners ' + 'added. Use emitter.setMaxListeners() to ' + 'increase limit');
        w.name = 'MaxListenersExceededWarning';
        w.emitter = target;
        w.type = type;
        w.count = existing.length;
        ProcessEmitWarning(w);
      }
    }

    return target;
  }

  EventEmitter.prototype.addListener = function addListener(type, listener) {
    return _addListener(this, type, listener, false);
  };

  EventEmitter.prototype.on = EventEmitter.prototype.addListener;

  EventEmitter.prototype.prependListener = function prependListener(type, listener) {
    return _addListener(this, type, listener, true);
  };

  function onceWrapper() {
    var args = [];
    for (var i = 0; i < arguments.length; i++) args.push(arguments[i]);
    if (!this.fired) {
      this.target.removeListener(this.type, this.wrapFn);
      this.fired = true;
      ReflectApply(this.listener, this.target, args);
    }
  }

  function _onceWrap(target, type, listener) {
    var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };
    var wrapped = onceWrapper.bind(state);
    wrapped.listener = listener;
    state.wrapFn = wrapped;
    return wrapped;
  }

  EventEmitter.prototype.once = function once(type, listener) {
    if (typeof listener !== 'function') {
      throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof listener);
    }
    this.on(type, _onceWrap(this, type, listener));
    return this;
  };

  EventEmitter.prototype.prependOnceListener = function prependOnceListener(type, listener) {
    if (typeof listener !== 'function') {
      throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof listener);
    }
    this.prependListener(type, _onceWrap(this, type, listener));
    return this;
  };

  // Emits a 'removeListener' event if and only if the listener was removed.
  EventEmitter.prototype.removeListener = function removeListener(type, listener) {
    var list, events, position, i, originalListener;

    if (typeof listener !== 'function') {
      throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof listener);
    }

    events = this._events;
    if (events === undefined) return this;

    list = events[type];
    if (list === undefined) return this;

    if (list === listener || list.listener === listener) {
      if (--this._eventsCount === 0) this._events = Object.create(null);else {
        delete events[type];
        if (events.removeListener) this.emit('removeListener', type, list.listener || listener);
      }
    } else if (typeof list !== 'function') {
      position = -1;

      for (i = list.length - 1; i >= 0; i--) {
        if (list[i] === listener || list[i].listener === listener) {
          originalListener = list[i].listener;
          position = i;
          break;
        }
      }

      if (position < 0) return this;

      if (position === 0) list.shift();else {
        spliceOne(list, position);
      }

      if (list.length === 1) events[type] = list[0];

      if (events.removeListener !== undefined) this.emit('removeListener', type, originalListener || listener);
    }

    return this;
  };

  EventEmitter.prototype.off = EventEmitter.prototype.removeListener;

  EventEmitter.prototype.removeAllListeners = function removeAllListeners(type) {
    var listeners, events, i;

    events = this._events;
    if (events === undefined) return this;

    // not listening for removeListener, no need to emit
    if (events.removeListener === undefined) {
      if (arguments.length === 0) {
        this._events = Object.create(null);
        this._eventsCount = 0;
      } else if (events[type] !== undefined) {
        if (--this._eventsCount === 0) this._events = Object.create(null);else delete events[type];
      }
      return this;
    }

    // emit removeListener for all listeners on all events
    if (arguments.length === 0) {
      var keys = Object.keys(events);
      var key;
      for (i = 0; i < keys.length; ++i) {
        key = keys[i];
        if (key === 'removeListener') continue;
        this.removeAllListeners(key);
      }
      this.removeAllListeners('removeListener');
      this._events = Object.create(null);
      this._eventsCount = 0;
      return this;
    }

    listeners = events[type];

    if (typeof listeners === 'function') {
      this.removeListener(type, listeners);
    } else if (listeners !== undefined) {
      // LIFO order
      for (i = listeners.length - 1; i >= 0; i--) {
        this.removeListener(type, listeners[i]);
      }
    }

    return this;
  };

  function _listeners(target, type, unwrap) {
    var events = target._events;

    if (events === undefined) return [];

    var evlistener = events[type];
    if (evlistener === undefined) return [];

    if (typeof evlistener === 'function') return unwrap ? [evlistener.listener || evlistener] : [evlistener];

    return unwrap ? unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);
  }

  EventEmitter.prototype.listeners = function listeners(type) {
    return _listeners(this, type, true);
  };

  EventEmitter.prototype.rawListeners = function rawListeners(type) {
    return _listeners(this, type, false);
  };

  EventEmitter.listenerCount = function (emitter, type) {
    if (typeof emitter.listenerCount === 'function') {
      return emitter.listenerCount(type);
    } else {
      return listenerCount.call(emitter, type);
    }
  };

  EventEmitter.prototype.listenerCount = listenerCount;
  function listenerCount(type) {
    var events = this._events;

    if (events !== undefined) {
      var evlistener = events[type];

      if (typeof evlistener === 'function') {
        return 1;
      } else if (evlistener !== undefined) {
        return evlistener.length;
      }
    }

    return 0;
  }

  EventEmitter.prototype.eventNames = function eventNames() {
    return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];
  };

  function arrayClone(arr, n) {
    var copy = new Array(n);
    for (var i = 0; i < n; ++i) copy[i] = arr[i];
    return copy;
  }

  function spliceOne(list, index) {
    for (; index + 1 < list.length; index++) list[index] = list[index + 1];
    list.pop();
  }

  function unwrapListeners(arr) {
    var ret = new Array(arr.length);
    for (var i = 0; i < ret.length; ++i) {
      ret[i] = arr[i].listener || arr[i];
    }
    return ret;
  }
});
System.registerDynamic("npm:events@3.0.0.js", ["npm:events@3.0.0/events.js"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("npm:events@3.0.0/events.js");
});
System.registerDynamic("app/EventEmitter.js", ["npm:events@3.0.0.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const Events = $__require("npm:events@3.0.0.js");
    class EventEmitter extends Events.EventEmitter {
        emitDefer(event, ...args) {
            setTimeout(() => {
                this.emit(event, ...args);
            });
        }
    }
    exports.default = EventEmitter;
    
});
System.registerDynamic("app/types/LogTypes.js", [], true, function ($__require, exports, module) {
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.SYNC = 'log.sync';
  exports.TRAVERSE = 'log.traverse';
  exports.FILTER = 'log.filter';
  exports.CHANGE = 'log.change';
  
});
System.registerDynamic("app/types/GlobalTypes.js", [], true, function ($__require, exports, module) {
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.CHANGE = 'change';
  exports.RESET = 'reset';
  exports.RELOAD = 'reload';
  
});
System.registerDynamic("app/stores/LogsStore.js", ["app/dispatcher/Dispatcher.js", "app/EventEmitter.js", "app/types/LogTypes.js", "app/types/GlobalTypes.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const Dispatcher_1 = $__require("app/dispatcher/Dispatcher.js");
    const EventEmitter_1 = $__require("app/EventEmitter.js");
    const LogTypes = $__require("app/types/LogTypes.js");
    const GlobalTypes = $__require("app/types/GlobalTypes.js");
    class LogsStore extends EventEmitter_1.default {
        constructor() {
            super(...arguments);
            this._logs = Object.freeze([]);
            this._filter = null;
            this._token = Dispatcher_1.default.register(this._callback.bind(this));
        }
        _reset() {
            this._logs = Object.freeze([]);
            this._page = undefined;
            this._pageCount = undefined;
            this._filter = null;
            this._count = undefined;
            this.emitChange();
        }
        get logs() {
            return this._logs;
        }
        get logsM() {
            let logs = [];
            this._logs.forEach(log => {
                logs.push(Object.assign({}, log));
            });
            return logs;
        }
        get page() {
            return this._page || 0;
        }
        get pageCount() {
            return this._pageCount || 50;
        }
        get pages() {
            return Math.ceil(this.count / this.pageCount);
        }
        get filter() {
            return this._filter;
        }
        get count() {
            return this._count || 0;
        }
        emitChange() {
            this.emitDefer(GlobalTypes.CHANGE);
        }
        addChangeListener(callback) {
            this.on(GlobalTypes.CHANGE, callback);
        }
        removeChangeListener(callback) {
            this.removeListener(GlobalTypes.CHANGE, callback);
        }
        _traverse(page) {
            this._page = Math.min(this.pages, page);
        }
        _filterCallback(filter) {
            if (this._filter !== null && filter === null || this._filter === {} && filter !== null || filter && this._filter && filter.level !== this._filter.level) {
                this._traverse(0);
            }
            this._filter = filter;
            this.emitChange();
        }
        _sync(logs, count) {
            for (let i = 0; i < logs.length; i++) {
                logs[i] = Object.freeze(logs[i]);
            }
            this._count = count;
            this._logs = Object.freeze(logs);
            this._page = Math.min(this.pages, this.page);
            this.emitChange();
        }
        _callback(action) {
            switch (action.type) {
                case GlobalTypes.RESET:
                    this._reset();
                    break;
                case LogTypes.TRAVERSE:
                    this._traverse(action.data.page);
                    break;
                case LogTypes.FILTER:
                    this._filterCallback(action.data.filter);
                    break;
                case LogTypes.SYNC:
                    this._sync(action.data.logs, action.data.count);
                    break;
            }
        }
    }
    exports.default = new LogsStore();
    
});
System.registerDynamic("app/actions/LogActions.js", ["npm:superagent@4.1.0.js", "app/Constants.js", "app/dispatcher/Dispatcher.js", "app/dispatcher/EventDispatcher.js", "app/Alert.js", "app/Csrf.js", "app/Loader.js", "app/types/LogTypes.js", "app/stores/LogsStore.js", "app/utils/MiscUtils.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const SuperAgent = $__require("npm:superagent@4.1.0.js");
    const Constants = $__require("app/Constants.js");
    const Dispatcher_1 = $__require("app/dispatcher/Dispatcher.js");
    const EventDispatcher_1 = $__require("app/dispatcher/EventDispatcher.js");
    const Alert = $__require("app/Alert.js");
    const Csrf = $__require("app/Csrf.js");
    const Loader_1 = $__require("app/Loader.js");
    const LogTypes = $__require("app/types/LogTypes.js");
    const LogsStore_1 = $__require("app/stores/LogsStore.js");
    const MiscUtils = $__require("app/utils/MiscUtils.js");
    let syncId;
    function sync() {
        let curSyncId = MiscUtils.uuid();
        syncId = curSyncId;
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.get('/log').query(Object.assign({}, LogsStore_1.default.filter, { page: LogsStore_1.default.page, page_count: LogsStore_1.default.pageCount })).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (curSyncId !== syncId) {
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to load logs');
                    reject(err);
                    return;
                }
                Dispatcher_1.default.dispatch({
                    type: LogTypes.SYNC,
                    data: {
                        logs: res.body.logs,
                        count: res.body.count
                    }
                });
                resolve();
            });
        });
    }
    exports.sync = sync;
    function traverse(page) {
        Dispatcher_1.default.dispatch({
            type: LogTypes.TRAVERSE,
            data: {
                page: page
            }
        });
        return sync();
    }
    exports.traverse = traverse;
    function filter(filt) {
        Dispatcher_1.default.dispatch({
            type: LogTypes.FILTER,
            data: {
                filter: filt
            }
        });
        return sync();
    }
    exports.filter = filter;
    EventDispatcher_1.default.register(action => {
        switch (action.type) {
            case LogTypes.CHANGE:
                if (!Constants.user) {
                    sync();
                }
                break;
        }
    });
    
});
System.registerDynamic("app/types/SettingsTypes.js", [], true, function ($__require, exports, module) {
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.SYNC = 'settings.sync';
  exports.CHANGE = 'settings.change';
  
});
System.registerDynamic("app/actions/SettingsActions.js", ["npm:superagent@4.1.0.js", "app/dispatcher/Dispatcher.js", "app/dispatcher/EventDispatcher.js", "app/Alert.js", "app/Csrf.js", "app/Loader.js", "app/types/SettingsTypes.js", "app/utils/MiscUtils.js", "app/Constants.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const SuperAgent = $__require("npm:superagent@4.1.0.js");
    const Dispatcher_1 = $__require("app/dispatcher/Dispatcher.js");
    const EventDispatcher_1 = $__require("app/dispatcher/EventDispatcher.js");
    const Alert = $__require("app/Alert.js");
    const Csrf = $__require("app/Csrf.js");
    const Loader_1 = $__require("app/Loader.js");
    const SettingsTypes = $__require("app/types/SettingsTypes.js");
    const MiscUtils = $__require("app/utils/MiscUtils.js");
    const Constants = $__require("app/Constants.js");
    let syncId;
    function sync() {
        let curSyncId = MiscUtils.uuid();
        syncId = curSyncId;
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.get('/settings').set('Accept', 'application/json').set('Csrf-Token', Csrf.token).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (curSyncId !== syncId) {
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to sync builds');
                    reject(err);
                    return;
                }
                Dispatcher_1.default.dispatch({
                    type: SettingsTypes.SYNC,
                    data: res.body
                });
                resolve();
            });
        });
    }
    exports.sync = sync;
    function commit(settings) {
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.put('/settings').send(settings).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to commit settings');
                    reject(err);
                    return;
                }
                Dispatcher_1.default.dispatch({
                    type: SettingsTypes.SYNC,
                    data: res.body
                });
                resolve();
            });
        });
    }
    exports.commit = commit;
    EventDispatcher_1.default.register(action => {
        switch (action.type) {
            case SettingsTypes.CHANGE:
                if (!Constants.user) {
                    sync();
                }
                break;
        }
    });
    
});
System.registerDynamic("app/dispatcher/Dispatcher.js", ["npm:flux@3.1.3.js"], true, function ($__require, exports, module) {
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  const Flux = $__require("npm:flux@3.1.3.js");
  class Dispatcher extends Flux.Dispatcher {}
  exports.default = new Dispatcher();
  
});
System.registerDynamic("app/types/LoadingTypes.js", [], true, function ($__require, exports, module) {
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.ADD = 'loading.add';
  exports.DONE = 'loading.done';
  
});
System.registerDynamic("app/Loader.js", ["app/dispatcher/Dispatcher.js", "app/types/LoadingTypes.js", "app/utils/MiscUtils.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const Dispatcher_1 = $__require("app/dispatcher/Dispatcher.js");
    const LoadingTypes = $__require("app/types/LoadingTypes.js");
    const MiscUtils = $__require("app/utils/MiscUtils.js");
    class Loader {
        constructor() {
            this._id = MiscUtils.uuid();
        }
        loading() {
            Dispatcher_1.default.dispatch({
                type: LoadingTypes.ADD,
                data: {
                    id: this._id
                }
            });
            return this;
        }
        done() {
            Dispatcher_1.default.dispatch({
                type: LoadingTypes.DONE,
                data: {
                    id: this._id
                }
            });
            return this;
        }
    }
    exports.default = Loader;
    
});
System.registerDynamic("app/types/SubscriptionTypes.js", [], true, function ($__require, exports, module) {
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.SYNC = 'subscription.sync';
  exports.CHANGE = 'subscription.change';
  
});
System.registerDynamic("app/utils/MiscUtils.js", [], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    function uuid() {
        return (+new Date() + Math.floor(Math.random() * 999999)).toString(36);
    }
    exports.uuid = uuid;
    function objectIdNil(objId) {
        return !objId || objId == '000000000000000000000000';
    }
    exports.objectIdNil = objectIdNil;
    function zeroPad(num, width) {
        if (num < Math.pow(10, width)) {
            return ('0'.repeat(width - 1) + num).slice(-width);
        }
        return num.toString();
    }
    exports.zeroPad = zeroPad;
    function capitalize(str) {
        return str.charAt(0).toUpperCase() + str.slice(1);
    }
    exports.capitalize = capitalize;
    function formatAmount(amount) {
        if (!amount) {
            return '-';
        }
        return '$' + (amount / 100).toFixed(2);
    }
    exports.formatAmount = formatAmount;
    function formatDate(dateStr) {
        if (!dateStr || dateStr === '0001-01-01T00:00:00Z') {
            return '';
        }
        let date = new Date(dateStr);
        let str = '';
        let hours = date.getHours();
        let period = 'AM';
        if (hours > 12) {
            period = 'PM';
            hours -= 12;
        } else if (hours === 0) {
            hours = 12;
        }
        let day;
        switch (date.getDay()) {
            case 0:
                day = 'Sun';
                break;
            case 1:
                day = 'Mon';
                break;
            case 2:
                day = 'Tue';
                break;
            case 3:
                day = 'Wed';
                break;
            case 4:
                day = 'Thu';
                break;
            case 5:
                day = 'Fri';
                break;
            case 6:
                day = 'Sat';
                break;
        }
        let month;
        switch (date.getMonth()) {
            case 0:
                month = 'Jan';
                break;
            case 1:
                month = 'Feb';
                break;
            case 2:
                month = 'Mar';
                break;
            case 3:
                month = 'Apr';
                break;
            case 4:
                month = 'May';
                break;
            case 5:
                month = 'Jun';
                break;
            case 6:
                month = 'Jul';
                break;
            case 7:
                month = 'Aug';
                break;
            case 8:
                month = 'Sep';
                break;
            case 9:
                month = 'Oct';
                break;
            case 10:
                month = 'Nov';
                break;
            case 11:
                month = 'Dec';
                break;
        }
        str += day + ' ';
        str += date.getDate() + ' ';
        str += month + ' ';
        str += date.getFullYear() + ', ';
        str += hours + ':';
        str += zeroPad(date.getMinutes(), 2) + ':';
        str += zeroPad(date.getSeconds(), 2) + ' ';
        str += period;
        return str;
    }
    exports.formatDate = formatDate;
    function formatDateShort(dateStr) {
        if (!dateStr || dateStr === '0001-01-01T00:00:00Z') {
            return '';
        }
        let date = new Date(dateStr);
        let curDate = new Date();
        let month;
        switch (date.getMonth()) {
            case 0:
                month = 'Jan';
                break;
            case 1:
                month = 'Feb';
                break;
            case 2:
                month = 'Mar';
                break;
            case 3:
                month = 'Apr';
                break;
            case 4:
                month = 'May';
                break;
            case 5:
                month = 'Jun';
                break;
            case 6:
                month = 'Jul';
                break;
            case 7:
                month = 'Aug';
                break;
            case 8:
                month = 'Sep';
                break;
            case 9:
                month = 'Oct';
                break;
            case 10:
                month = 'Nov';
                break;
            case 11:
                month = 'Dec';
                break;
        }
        let str = month + ' ' + date.getDate();
        if (date.getFullYear() !== curDate.getFullYear()) {
            str += ' ' + date.getFullYear();
        }
        return str;
    }
    exports.formatDateShort = formatDateShort;
    function formatDateShortTime(dateStr) {
        if (!dateStr || dateStr === '0001-01-01T00:00:00Z') {
            return '';
        }
        let date = new Date(dateStr);
        let curDate = new Date();
        let month;
        switch (date.getMonth()) {
            case 0:
                month = 'Jan';
                break;
            case 1:
                month = 'Feb';
                break;
            case 2:
                month = 'Mar';
                break;
            case 3:
                month = 'Apr';
                break;
            case 4:
                month = 'May';
                break;
            case 5:
                month = 'Jun';
                break;
            case 6:
                month = 'Jul';
                break;
            case 7:
                month = 'Aug';
                break;
            case 8:
                month = 'Sep';
                break;
            case 9:
                month = 'Oct';
                break;
            case 10:
                month = 'Nov';
                break;
            case 11:
                month = 'Dec';
                break;
        }
        let str = month + ' ' + date.getDate();
        if (date.getFullYear() !== curDate.getFullYear()) {
            str += ' ' + date.getFullYear();
        } else if (date.getMonth() === curDate.getMonth() && date.getDate() === curDate.getDate()) {
            let hours = date.getHours();
            let period = 'AM';
            if (hours > 12) {
                period = 'PM';
                hours -= 12;
            } else if (hours === 0) {
                hours = 12;
            }
            str = hours + ':';
            str += zeroPad(date.getMinutes(), 2) + ':';
            str += zeroPad(date.getSeconds(), 2) + ' ';
            str += period;
        }
        return str;
    }
    exports.formatDateShortTime = formatDateShortTime;
    
});
System.registerDynamic("npm:mobile-detect@1.4.3/mobile-detect.js", [], true, function ($__require, exports, module) {
    /* */
    "format cjs";
    // THIS FILE IS GENERATED - DO NOT EDIT!
    /*!mobile-detect v1.4.3 2018-09-08*/
    /*global module:false, define:false*/
    /*jshint latedef:false*/
    /*!@license Copyright 2013, Heinrich Goebl, License: MIT, see https://github.com/hgoebl/mobile-detect.js*/

    var global = this || self,
        GLOBAL = global;
    (function (define, undefined) {
        define(function () {
            'use strict';

            var impl = {};

            impl.mobileDetectRules = {
                "phones": {
                    "iPhone": "\\biPhone\\b|\\biPod\\b",
                    "BlackBerry": "BlackBerry|\\bBB10\\b|rim[0-9]+",
                    "HTC": "HTC|HTC.*(Sensation|Evo|Vision|Explorer|6800|8100|8900|A7272|S510e|C110e|Legend|Desire|T8282)|APX515CKT|Qtek9090|APA9292KT|HD_mini|Sensation.*Z710e|PG86100|Z715e|Desire.*(A8181|HD)|ADR6200|ADR6400L|ADR6425|001HT|Inspire 4G|Android.*\\bEVO\\b|T-Mobile G1|Z520m|Android [0-9.]+; Pixel",
                    "Nexus": "Nexus One|Nexus S|Galaxy.*Nexus|Android.*Nexus.*Mobile|Nexus 4|Nexus 5|Nexus 6",
                    "Dell": "Dell[;]? (Streak|Aero|Venue|Venue Pro|Flash|Smoke|Mini 3iX)|XCD28|XCD35|\\b001DL\\b|\\b101DL\\b|\\bGS01\\b",
                    "Motorola": "Motorola|DROIDX|DROID BIONIC|\\bDroid\\b.*Build|Android.*Xoom|HRI39|MOT-|A1260|A1680|A555|A853|A855|A953|A955|A956|Motorola.*ELECTRIFY|Motorola.*i1|i867|i940|MB200|MB300|MB501|MB502|MB508|MB511|MB520|MB525|MB526|MB611|MB612|MB632|MB810|MB855|MB860|MB861|MB865|MB870|ME501|ME502|ME511|ME525|ME600|ME632|ME722|ME811|ME860|ME863|ME865|MT620|MT710|MT716|MT720|MT810|MT870|MT917|Motorola.*TITANIUM|WX435|WX445|XT300|XT301|XT311|XT316|XT317|XT319|XT320|XT390|XT502|XT530|XT531|XT532|XT535|XT603|XT610|XT611|XT615|XT681|XT701|XT702|XT711|XT720|XT800|XT806|XT860|XT862|XT875|XT882|XT883|XT894|XT901|XT907|XT909|XT910|XT912|XT928|XT926|XT915|XT919|XT925|XT1021|\\bMoto E\\b|XT1068|XT1092|XT1052",
                    "Samsung": "\\bSamsung\\b|SM-G950F|SM-G955F|SM-G9250|GT-19300|SGH-I337|BGT-S5230|GT-B2100|GT-B2700|GT-B2710|GT-B3210|GT-B3310|GT-B3410|GT-B3730|GT-B3740|GT-B5510|GT-B5512|GT-B5722|GT-B6520|GT-B7300|GT-B7320|GT-B7330|GT-B7350|GT-B7510|GT-B7722|GT-B7800|GT-C3010|GT-C3011|GT-C3060|GT-C3200|GT-C3212|GT-C3212I|GT-C3262|GT-C3222|GT-C3300|GT-C3300K|GT-C3303|GT-C3303K|GT-C3310|GT-C3322|GT-C3330|GT-C3350|GT-C3500|GT-C3510|GT-C3530|GT-C3630|GT-C3780|GT-C5010|GT-C5212|GT-C6620|GT-C6625|GT-C6712|GT-E1050|GT-E1070|GT-E1075|GT-E1080|GT-E1081|GT-E1085|GT-E1087|GT-E1100|GT-E1107|GT-E1110|GT-E1120|GT-E1125|GT-E1130|GT-E1160|GT-E1170|GT-E1175|GT-E1180|GT-E1182|GT-E1200|GT-E1210|GT-E1225|GT-E1230|GT-E1390|GT-E2100|GT-E2120|GT-E2121|GT-E2152|GT-E2220|GT-E2222|GT-E2230|GT-E2232|GT-E2250|GT-E2370|GT-E2550|GT-E2652|GT-E3210|GT-E3213|GT-I5500|GT-I5503|GT-I5700|GT-I5800|GT-I5801|GT-I6410|GT-I6420|GT-I7110|GT-I7410|GT-I7500|GT-I8000|GT-I8150|GT-I8160|GT-I8190|GT-I8320|GT-I8330|GT-I8350|GT-I8530|GT-I8700|GT-I8703|GT-I8910|GT-I9000|GT-I9001|GT-I9003|GT-I9010|GT-I9020|GT-I9023|GT-I9070|GT-I9082|GT-I9100|GT-I9103|GT-I9220|GT-I9250|GT-I9300|GT-I9305|GT-I9500|GT-I9505|GT-M3510|GT-M5650|GT-M7500|GT-M7600|GT-M7603|GT-M8800|GT-M8910|GT-N7000|GT-S3110|GT-S3310|GT-S3350|GT-S3353|GT-S3370|GT-S3650|GT-S3653|GT-S3770|GT-S3850|GT-S5210|GT-S5220|GT-S5229|GT-S5230|GT-S5233|GT-S5250|GT-S5253|GT-S5260|GT-S5263|GT-S5270|GT-S5300|GT-S5330|GT-S5350|GT-S5360|GT-S5363|GT-S5369|GT-S5380|GT-S5380D|GT-S5560|GT-S5570|GT-S5600|GT-S5603|GT-S5610|GT-S5620|GT-S5660|GT-S5670|GT-S5690|GT-S5750|GT-S5780|GT-S5830|GT-S5839|GT-S6102|GT-S6500|GT-S7070|GT-S7200|GT-S7220|GT-S7230|GT-S7233|GT-S7250|GT-S7500|GT-S7530|GT-S7550|GT-S7562|GT-S7710|GT-S8000|GT-S8003|GT-S8500|GT-S8530|GT-S8600|SCH-A310|SCH-A530|SCH-A570|SCH-A610|SCH-A630|SCH-A650|SCH-A790|SCH-A795|SCH-A850|SCH-A870|SCH-A890|SCH-A930|SCH-A950|SCH-A970|SCH-A990|SCH-I100|SCH-I110|SCH-I400|SCH-I405|SCH-I500|SCH-I510|SCH-I515|SCH-I600|SCH-I730|SCH-I760|SCH-I770|SCH-I830|SCH-I910|SCH-I920|SCH-I959|SCH-LC11|SCH-N150|SCH-N300|SCH-R100|SCH-R300|SCH-R351|SCH-R400|SCH-R410|SCH-T300|SCH-U310|SCH-U320|SCH-U350|SCH-U360|SCH-U365|SCH-U370|SCH-U380|SCH-U410|SCH-U430|SCH-U450|SCH-U460|SCH-U470|SCH-U490|SCH-U540|SCH-U550|SCH-U620|SCH-U640|SCH-U650|SCH-U660|SCH-U700|SCH-U740|SCH-U750|SCH-U810|SCH-U820|SCH-U900|SCH-U940|SCH-U960|SCS-26UC|SGH-A107|SGH-A117|SGH-A127|SGH-A137|SGH-A157|SGH-A167|SGH-A177|SGH-A187|SGH-A197|SGH-A227|SGH-A237|SGH-A257|SGH-A437|SGH-A517|SGH-A597|SGH-A637|SGH-A657|SGH-A667|SGH-A687|SGH-A697|SGH-A707|SGH-A717|SGH-A727|SGH-A737|SGH-A747|SGH-A767|SGH-A777|SGH-A797|SGH-A817|SGH-A827|SGH-A837|SGH-A847|SGH-A867|SGH-A877|SGH-A887|SGH-A897|SGH-A927|SGH-B100|SGH-B130|SGH-B200|SGH-B220|SGH-C100|SGH-C110|SGH-C120|SGH-C130|SGH-C140|SGH-C160|SGH-C170|SGH-C180|SGH-C200|SGH-C207|SGH-C210|SGH-C225|SGH-C230|SGH-C417|SGH-C450|SGH-D307|SGH-D347|SGH-D357|SGH-D407|SGH-D415|SGH-D780|SGH-D807|SGH-D980|SGH-E105|SGH-E200|SGH-E315|SGH-E316|SGH-E317|SGH-E335|SGH-E590|SGH-E635|SGH-E715|SGH-E890|SGH-F300|SGH-F480|SGH-I200|SGH-I300|SGH-I320|SGH-I550|SGH-I577|SGH-I600|SGH-I607|SGH-I617|SGH-I627|SGH-I637|SGH-I677|SGH-I700|SGH-I717|SGH-I727|SGH-i747M|SGH-I777|SGH-I780|SGH-I827|SGH-I847|SGH-I857|SGH-I896|SGH-I897|SGH-I900|SGH-I907|SGH-I917|SGH-I927|SGH-I937|SGH-I997|SGH-J150|SGH-J200|SGH-L170|SGH-L700|SGH-M110|SGH-M150|SGH-M200|SGH-N105|SGH-N500|SGH-N600|SGH-N620|SGH-N625|SGH-N700|SGH-N710|SGH-P107|SGH-P207|SGH-P300|SGH-P310|SGH-P520|SGH-P735|SGH-P777|SGH-Q105|SGH-R210|SGH-R220|SGH-R225|SGH-S105|SGH-S307|SGH-T109|SGH-T119|SGH-T139|SGH-T209|SGH-T219|SGH-T229|SGH-T239|SGH-T249|SGH-T259|SGH-T309|SGH-T319|SGH-T329|SGH-T339|SGH-T349|SGH-T359|SGH-T369|SGH-T379|SGH-T409|SGH-T429|SGH-T439|SGH-T459|SGH-T469|SGH-T479|SGH-T499|SGH-T509|SGH-T519|SGH-T539|SGH-T559|SGH-T589|SGH-T609|SGH-T619|SGH-T629|SGH-T639|SGH-T659|SGH-T669|SGH-T679|SGH-T709|SGH-T719|SGH-T729|SGH-T739|SGH-T746|SGH-T749|SGH-T759|SGH-T769|SGH-T809|SGH-T819|SGH-T839|SGH-T919|SGH-T929|SGH-T939|SGH-T959|SGH-T989|SGH-U100|SGH-U200|SGH-U800|SGH-V205|SGH-V206|SGH-X100|SGH-X105|SGH-X120|SGH-X140|SGH-X426|SGH-X427|SGH-X475|SGH-X495|SGH-X497|SGH-X507|SGH-X600|SGH-X610|SGH-X620|SGH-X630|SGH-X700|SGH-X820|SGH-X890|SGH-Z130|SGH-Z150|SGH-Z170|SGH-ZX10|SGH-ZX20|SHW-M110|SPH-A120|SPH-A400|SPH-A420|SPH-A460|SPH-A500|SPH-A560|SPH-A600|SPH-A620|SPH-A660|SPH-A700|SPH-A740|SPH-A760|SPH-A790|SPH-A800|SPH-A820|SPH-A840|SPH-A880|SPH-A900|SPH-A940|SPH-A960|SPH-D600|SPH-D700|SPH-D710|SPH-D720|SPH-I300|SPH-I325|SPH-I330|SPH-I350|SPH-I500|SPH-I600|SPH-I700|SPH-L700|SPH-M100|SPH-M220|SPH-M240|SPH-M300|SPH-M305|SPH-M320|SPH-M330|SPH-M350|SPH-M360|SPH-M370|SPH-M380|SPH-M510|SPH-M540|SPH-M550|SPH-M560|SPH-M570|SPH-M580|SPH-M610|SPH-M620|SPH-M630|SPH-M800|SPH-M810|SPH-M850|SPH-M900|SPH-M910|SPH-M920|SPH-M930|SPH-N100|SPH-N200|SPH-N240|SPH-N300|SPH-N400|SPH-Z400|SWC-E100|SCH-i909|GT-N7100|GT-N7105|SCH-I535|SM-N900A|SGH-I317|SGH-T999L|GT-S5360B|GT-I8262|GT-S6802|GT-S6312|GT-S6310|GT-S5312|GT-S5310|GT-I9105|GT-I8510|GT-S6790N|SM-G7105|SM-N9005|GT-S5301|GT-I9295|GT-I9195|SM-C101|GT-S7392|GT-S7560|GT-B7610|GT-I5510|GT-S7582|GT-S7530E|GT-I8750|SM-G9006V|SM-G9008V|SM-G9009D|SM-G900A|SM-G900D|SM-G900F|SM-G900H|SM-G900I|SM-G900J|SM-G900K|SM-G900L|SM-G900M|SM-G900P|SM-G900R4|SM-G900S|SM-G900T|SM-G900V|SM-G900W8|SHV-E160K|SCH-P709|SCH-P729|SM-T2558|GT-I9205|SM-G9350|SM-J120F|SM-G920F|SM-G920V|SM-G930F|SM-N910C|SM-A310F|GT-I9190|SM-J500FN|SM-G903F|SM-J330F",
                    "LG": "\\bLG\\b;|LG[- ]?(C800|C900|E400|E610|E900|E-900|F160|F180K|F180L|F180S|730|855|L160|LS740|LS840|LS970|LU6200|MS690|MS695|MS770|MS840|MS870|MS910|P500|P700|P705|VM696|AS680|AS695|AX840|C729|E970|GS505|272|C395|E739BK|E960|L55C|L75C|LS696|LS860|P769BK|P350|P500|P509|P870|UN272|US730|VS840|VS950|LN272|LN510|LS670|LS855|LW690|MN270|MN510|P509|P769|P930|UN200|UN270|UN510|UN610|US670|US740|US760|UX265|UX840|VN271|VN530|VS660|VS700|VS740|VS750|VS910|VS920|VS930|VX9200|VX11000|AX840A|LW770|P506|P925|P999|E612|D955|D802|MS323|M257)",
                    "Sony": "SonyST|SonyLT|SonyEricsson|SonyEricssonLT15iv|LT18i|E10i|LT28h|LT26w|SonyEricssonMT27i|C5303|C6902|C6903|C6906|C6943|D2533",
                    "Asus": "Asus.*Galaxy|PadFone.*Mobile",
                    "NokiaLumia": "Lumia [0-9]{3,4}",
                    "Micromax": "Micromax.*\\b(A210|A92|A88|A72|A111|A110Q|A115|A116|A110|A90S|A26|A51|A35|A54|A25|A27|A89|A68|A65|A57|A90)\\b",
                    "Palm": "PalmSource|Palm",
                    "Vertu": "Vertu|Vertu.*Ltd|Vertu.*Ascent|Vertu.*Ayxta|Vertu.*Constellation(F|Quest)?|Vertu.*Monika|Vertu.*Signature",
                    "Pantech": "PANTECH|IM-A850S|IM-A840S|IM-A830L|IM-A830K|IM-A830S|IM-A820L|IM-A810K|IM-A810S|IM-A800S|IM-T100K|IM-A725L|IM-A780L|IM-A775C|IM-A770K|IM-A760S|IM-A750K|IM-A740S|IM-A730S|IM-A720L|IM-A710K|IM-A690L|IM-A690S|IM-A650S|IM-A630K|IM-A600S|VEGA PTL21|PT003|P8010|ADR910L|P6030|P6020|P9070|P4100|P9060|P5000|CDM8992|TXT8045|ADR8995|IS11PT|P2030|P6010|P8000|PT002|IS06|CDM8999|P9050|PT001|TXT8040|P2020|P9020|P2000|P7040|P7000|C790",
                    "Fly": "IQ230|IQ444|IQ450|IQ440|IQ442|IQ441|IQ245|IQ256|IQ236|IQ255|IQ235|IQ245|IQ275|IQ240|IQ285|IQ280|IQ270|IQ260|IQ250",
                    "Wiko": "KITE 4G|HIGHWAY|GETAWAY|STAIRWAY|DARKSIDE|DARKFULL|DARKNIGHT|DARKMOON|SLIDE|WAX 4G|RAINBOW|BLOOM|SUNSET|GOA(?!nna)|LENNY|BARRY|IGGY|OZZY|CINK FIVE|CINK PEAX|CINK PEAX 2|CINK SLIM|CINK SLIM 2|CINK +|CINK KING|CINK PEAX|CINK SLIM|SUBLIM",
                    "iMobile": "i-mobile (IQ|i-STYLE|idea|ZAA|Hitz)",
                    "SimValley": "\\b(SP-80|XT-930|SX-340|XT-930|SX-310|SP-360|SP60|SPT-800|SP-120|SPT-800|SP-140|SPX-5|SPX-8|SP-100|SPX-8|SPX-12)\\b",
                    "Wolfgang": "AT-B24D|AT-AS50HD|AT-AS40W|AT-AS55HD|AT-AS45q2|AT-B26D|AT-AS50Q",
                    "Alcatel": "Alcatel",
                    "Nintendo": "Nintendo (3DS|Switch)",
                    "Amoi": "Amoi",
                    "INQ": "INQ",
                    "GenericPhone": "Tapatalk|PDA;|SAGEM|\\bmmp\\b|pocket|\\bpsp\\b|symbian|Smartphone|smartfon|treo|up.browser|up.link|vodafone|\\bwap\\b|nokia|Series40|Series60|S60|SonyEricsson|N900|MAUI.*WAP.*Browser"
                },
                "tablets": {
                    "iPad": "iPad|iPad.*Mobile",
                    "NexusTablet": "Android.*Nexus[\\s]+(7|9|10)",
                    "GoogleTablet": "Android.*Pixel C",
                    "SamsungTablet": "SAMSUNG.*Tablet|Galaxy.*Tab|SC-01C|GT-P1000|GT-P1003|GT-P1010|GT-P3105|GT-P6210|GT-P6800|GT-P6810|GT-P7100|GT-P7300|GT-P7310|GT-P7500|GT-P7510|SCH-I800|SCH-I815|SCH-I905|SGH-I957|SGH-I987|SGH-T849|SGH-T859|SGH-T869|SPH-P100|GT-P3100|GT-P3108|GT-P3110|GT-P5100|GT-P5110|GT-P6200|GT-P7320|GT-P7511|GT-N8000|GT-P8510|SGH-I497|SPH-P500|SGH-T779|SCH-I705|SCH-I915|GT-N8013|GT-P3113|GT-P5113|GT-P8110|GT-N8010|GT-N8005|GT-N8020|GT-P1013|GT-P6201|GT-P7501|GT-N5100|GT-N5105|GT-N5110|SHV-E140K|SHV-E140L|SHV-E140S|SHV-E150S|SHV-E230K|SHV-E230L|SHV-E230S|SHW-M180K|SHW-M180L|SHW-M180S|SHW-M180W|SHW-M300W|SHW-M305W|SHW-M380K|SHW-M380S|SHW-M380W|SHW-M430W|SHW-M480K|SHW-M480S|SHW-M480W|SHW-M485W|SHW-M486W|SHW-M500W|GT-I9228|SCH-P739|SCH-I925|GT-I9200|GT-P5200|GT-P5210|GT-P5210X|SM-T311|SM-T310|SM-T310X|SM-T210|SM-T210R|SM-T211|SM-P600|SM-P601|SM-P605|SM-P900|SM-P901|SM-T217|SM-T217A|SM-T217S|SM-P6000|SM-T3100|SGH-I467|XE500|SM-T110|GT-P5220|GT-I9200X|GT-N5110X|GT-N5120|SM-P905|SM-T111|SM-T2105|SM-T315|SM-T320|SM-T320X|SM-T321|SM-T520|SM-T525|SM-T530NU|SM-T230NU|SM-T330NU|SM-T900|XE500T1C|SM-P605V|SM-P905V|SM-T337V|SM-T537V|SM-T707V|SM-T807V|SM-P600X|SM-P900X|SM-T210X|SM-T230|SM-T230X|SM-T325|GT-P7503|SM-T531|SM-T330|SM-T530|SM-T705|SM-T705C|SM-T535|SM-T331|SM-T800|SM-T700|SM-T537|SM-T807|SM-P907A|SM-T337A|SM-T537A|SM-T707A|SM-T807A|SM-T237|SM-T807P|SM-P607T|SM-T217T|SM-T337T|SM-T807T|SM-T116NQ|SM-T116BU|SM-P550|SM-T350|SM-T550|SM-T9000|SM-P9000|SM-T705Y|SM-T805|GT-P3113|SM-T710|SM-T810|SM-T815|SM-T360|SM-T533|SM-T113|SM-T335|SM-T715|SM-T560|SM-T670|SM-T677|SM-T377|SM-T567|SM-T357T|SM-T555|SM-T561|SM-T713|SM-T719|SM-T813|SM-T819|SM-T580|SM-T355Y?|SM-T280|SM-T817A|SM-T820|SM-W700|SM-P580|SM-T587|SM-P350|SM-P555M|SM-P355M|SM-T113NU|SM-T815Y|SM-T585|SM-T285|SM-T825|SM-W708|SM-T835",
                    "Kindle": "Kindle|Silk.*Accelerated|Android.*\\b(KFOT|KFTT|KFJWI|KFJWA|KFOTE|KFSOWI|KFTHWI|KFTHWA|KFAPWI|KFAPWA|WFJWAE|KFSAWA|KFSAWI|KFASWI|KFARWI|KFFOWI|KFGIWI|KFMEWI)\\b|Android.*Silk\/[0-9.]+ like Chrome\/[0-9.]+ (?!Mobile)",
                    "SurfaceTablet": "Windows NT [0-9.]+; ARM;.*(Tablet|ARMBJS)",
                    "HPTablet": "HP Slate (7|8|10)|HP ElitePad 900|hp-tablet|EliteBook.*Touch|HP 8|Slate 21|HP SlateBook 10",
                    "AsusTablet": "^.*PadFone((?!Mobile).)*$|Transformer|TF101|TF101G|TF300T|TF300TG|TF300TL|TF700T|TF700KL|TF701T|TF810C|ME171|ME301T|ME302C|ME371MG|ME370T|ME372MG|ME172V|ME173X|ME400C|Slider SL101|\\bK00F\\b|\\bK00C\\b|\\bK00E\\b|\\bK00L\\b|TX201LA|ME176C|ME102A|\\bM80TA\\b|ME372CL|ME560CG|ME372CG|ME302KL| K010 | K011 | K017 | K01E |ME572C|ME103K|ME170C|ME171C|\\bME70C\\b|ME581C|ME581CL|ME8510C|ME181C|P01Y|PO1MA|P01Z|\\bP027\\b|\\bP024\\b|\\bP00C\\b",
                    "BlackBerryTablet": "PlayBook|RIM Tablet",
                    "HTCtablet": "HTC_Flyer_P512|HTC Flyer|HTC Jetstream|HTC-P715a|HTC EVO View 4G|PG41200|PG09410",
                    "MotorolaTablet": "xoom|sholest|MZ615|MZ605|MZ505|MZ601|MZ602|MZ603|MZ604|MZ606|MZ607|MZ608|MZ609|MZ615|MZ616|MZ617",
                    "NookTablet": "Android.*Nook|NookColor|nook browser|BNRV200|BNRV200A|BNTV250|BNTV250A|BNTV400|BNTV600|LogicPD Zoom2",
                    "AcerTablet": "Android.*; \\b(A100|A101|A110|A200|A210|A211|A500|A501|A510|A511|A700|A701|W500|W500P|W501|W501P|W510|W511|W700|G100|G100W|B1-A71|B1-710|B1-711|A1-810|A1-811|A1-830)\\b|W3-810|\\bA3-A10\\b|\\bA3-A11\\b|\\bA3-A20\\b|\\bA3-A30",
                    "ToshibaTablet": "Android.*(AT100|AT105|AT200|AT205|AT270|AT275|AT300|AT305|AT1S5|AT500|AT570|AT700|AT830)|TOSHIBA.*FOLIO",
                    "LGTablet": "\\bL-06C|LG-V909|LG-V900|LG-V700|LG-V510|LG-V500|LG-V410|LG-V400|LG-VK810\\b",
                    "FujitsuTablet": "Android.*\\b(F-01D|F-02F|F-05E|F-10D|M532|Q572)\\b",
                    "PrestigioTablet": "PMP3170B|PMP3270B|PMP3470B|PMP7170B|PMP3370B|PMP3570C|PMP5870C|PMP3670B|PMP5570C|PMP5770D|PMP3970B|PMP3870C|PMP5580C|PMP5880D|PMP5780D|PMP5588C|PMP7280C|PMP7280C3G|PMP7280|PMP7880D|PMP5597D|PMP5597|PMP7100D|PER3464|PER3274|PER3574|PER3884|PER5274|PER5474|PMP5097CPRO|PMP5097|PMP7380D|PMP5297C|PMP5297C_QUAD|PMP812E|PMP812E3G|PMP812F|PMP810E|PMP880TD|PMT3017|PMT3037|PMT3047|PMT3057|PMT7008|PMT5887|PMT5001|PMT5002",
                    "LenovoTablet": "Lenovo TAB|Idea(Tab|Pad)( A1|A10| K1|)|ThinkPad([ ]+)?Tablet|YT3-850M|YT3-X90L|YT3-X90F|YT3-X90X|Lenovo.*(S2109|S2110|S5000|S6000|K3011|A3000|A3500|A1000|A2107|A2109|A1107|A5500|A7600|B6000|B8000|B8080)(-|)(FL|F|HV|H|)|TB-X103F|TB-X304F|TB-X304L|TB-8703F|Tab2A7-10F|TB2-X30L",
                    "DellTablet": "Venue 11|Venue 8|Venue 7|Dell Streak 10|Dell Streak 7",
                    "YarvikTablet": "Android.*\\b(TAB210|TAB211|TAB224|TAB250|TAB260|TAB264|TAB310|TAB360|TAB364|TAB410|TAB411|TAB420|TAB424|TAB450|TAB460|TAB461|TAB464|TAB465|TAB467|TAB468|TAB07-100|TAB07-101|TAB07-150|TAB07-151|TAB07-152|TAB07-200|TAB07-201-3G|TAB07-210|TAB07-211|TAB07-212|TAB07-214|TAB07-220|TAB07-400|TAB07-485|TAB08-150|TAB08-200|TAB08-201-3G|TAB08-201-30|TAB09-100|TAB09-211|TAB09-410|TAB10-150|TAB10-201|TAB10-211|TAB10-400|TAB10-410|TAB13-201|TAB274EUK|TAB275EUK|TAB374EUK|TAB462EUK|TAB474EUK|TAB9-200)\\b",
                    "MedionTablet": "Android.*\\bOYO\\b|LIFE.*(P9212|P9514|P9516|S9512)|LIFETAB",
                    "ArnovaTablet": "97G4|AN10G2|AN7bG3|AN7fG3|AN8G3|AN8cG3|AN7G3|AN9G3|AN7dG3|AN7dG3ST|AN7dG3ChildPad|AN10bG3|AN10bG3DT|AN9G2",
                    "IntensoTablet": "INM8002KP|INM1010FP|INM805ND|Intenso Tab|TAB1004",
                    "IRUTablet": "M702pro",
                    "MegafonTablet": "MegaFon V9|\\bZTE V9\\b|Android.*\\bMT7A\\b",
                    "EbodaTablet": "E-Boda (Supreme|Impresspeed|Izzycomm|Essential)",
                    "AllViewTablet": "Allview.*(Viva|Alldro|City|Speed|All TV|Frenzy|Quasar|Shine|TX1|AX1|AX2)",
                    "ArchosTablet": "\\b(101G9|80G9|A101IT)\\b|Qilive 97R|Archos5|\\bARCHOS (70|79|80|90|97|101|FAMILYPAD|)(b|c|)(G10| Cobalt| TITANIUM(HD|)| Xenon| Neon|XSK| 2| XS 2| PLATINUM| CARBON|GAMEPAD)\\b",
                    "AinolTablet": "NOVO7|NOVO8|NOVO10|Novo7Aurora|Novo7Basic|NOVO7PALADIN|novo9-Spark",
                    "NokiaLumiaTablet": "Lumia 2520",
                    "SonyTablet": "Sony.*Tablet|Xperia Tablet|Sony Tablet S|SO-03E|SGPT12|SGPT13|SGPT114|SGPT121|SGPT122|SGPT123|SGPT111|SGPT112|SGPT113|SGPT131|SGPT132|SGPT133|SGPT211|SGPT212|SGPT213|SGP311|SGP312|SGP321|EBRD1101|EBRD1102|EBRD1201|SGP351|SGP341|SGP511|SGP512|SGP521|SGP541|SGP551|SGP621|SGP641|SGP612|SOT31|SGP771|SGP611|SGP612|SGP712",
                    "PhilipsTablet": "\\b(PI2010|PI3000|PI3100|PI3105|PI3110|PI3205|PI3210|PI3900|PI4010|PI7000|PI7100)\\b",
                    "CubeTablet": "Android.*(K8GT|U9GT|U10GT|U16GT|U17GT|U18GT|U19GT|U20GT|U23GT|U30GT)|CUBE U8GT",
                    "CobyTablet": "MID1042|MID1045|MID1125|MID1126|MID7012|MID7014|MID7015|MID7034|MID7035|MID7036|MID7042|MID7048|MID7127|MID8042|MID8048|MID8127|MID9042|MID9740|MID9742|MID7022|MID7010",
                    "MIDTablet": "M9701|M9000|M9100|M806|M1052|M806|T703|MID701|MID713|MID710|MID727|MID760|MID830|MID728|MID933|MID125|MID810|MID732|MID120|MID930|MID800|MID731|MID900|MID100|MID820|MID735|MID980|MID130|MID833|MID737|MID960|MID135|MID860|MID736|MID140|MID930|MID835|MID733|MID4X10",
                    "MSITablet": "MSI \\b(Primo 73K|Primo 73L|Primo 81L|Primo 77|Primo 93|Primo 75|Primo 76|Primo 73|Primo 81|Primo 91|Primo 90|Enjoy 71|Enjoy 7|Enjoy 10)\\b",
                    "SMiTTablet": "Android.*(\\bMID\\b|MID-560|MTV-T1200|MTV-PND531|MTV-P1101|MTV-PND530)",
                    "RockChipTablet": "Android.*(RK2818|RK2808A|RK2918|RK3066)|RK2738|RK2808A",
                    "FlyTablet": "IQ310|Fly Vision",
                    "bqTablet": "Android.*(bq)?.*(Elcano|Curie|Edison|Maxwell|Kepler|Pascal|Tesla|Hypatia|Platon|Newton|Livingstone|Cervantes|Avant|Aquaris ([E|M]10|M8))|Maxwell.*Lite|Maxwell.*Plus",
                    "HuaweiTablet": "MediaPad|MediaPad 7 Youth|IDEOS S7|S7-201c|S7-202u|S7-101|S7-103|S7-104|S7-105|S7-106|S7-201|S7-Slim|M2-A01L|BAH-L09|BAH-W09",
                    "NecTablet": "\\bN-06D|\\bN-08D",
                    "PantechTablet": "Pantech.*P4100",
                    "BronchoTablet": "Broncho.*(N701|N708|N802|a710)",
                    "VersusTablet": "TOUCHPAD.*[78910]|\\bTOUCHTAB\\b",
                    "ZyncTablet": "z1000|Z99 2G|z99|z930|z999|z990|z909|Z919|z900",
                    "PositivoTablet": "TB07STA|TB10STA|TB07FTA|TB10FTA",
                    "NabiTablet": "Android.*\\bNabi",
                    "KoboTablet": "Kobo Touch|\\bK080\\b|\\bVox\\b Build|\\bArc\\b Build",
                    "DanewTablet": "DSlide.*\\b(700|701R|702|703R|704|802|970|971|972|973|974|1010|1012)\\b",
                    "TexetTablet": "NaviPad|TB-772A|TM-7045|TM-7055|TM-9750|TM-7016|TM-7024|TM-7026|TM-7041|TM-7043|TM-7047|TM-8041|TM-9741|TM-9747|TM-9748|TM-9751|TM-7022|TM-7021|TM-7020|TM-7011|TM-7010|TM-7023|TM-7025|TM-7037W|TM-7038W|TM-7027W|TM-9720|TM-9725|TM-9737W|TM-1020|TM-9738W|TM-9740|TM-9743W|TB-807A|TB-771A|TB-727A|TB-725A|TB-719A|TB-823A|TB-805A|TB-723A|TB-715A|TB-707A|TB-705A|TB-709A|TB-711A|TB-890HD|TB-880HD|TB-790HD|TB-780HD|TB-770HD|TB-721HD|TB-710HD|TB-434HD|TB-860HD|TB-840HD|TB-760HD|TB-750HD|TB-740HD|TB-730HD|TB-722HD|TB-720HD|TB-700HD|TB-500HD|TB-470HD|TB-431HD|TB-430HD|TB-506|TB-504|TB-446|TB-436|TB-416|TB-146SE|TB-126SE",
                    "PlaystationTablet": "Playstation.*(Portable|Vita)",
                    "TrekstorTablet": "ST10416-1|VT10416-1|ST70408-1|ST702xx-1|ST702xx-2|ST80208|ST97216|ST70104-2|VT10416-2|ST10216-2A|SurfTab",
                    "PyleAudioTablet": "\\b(PTBL10CEU|PTBL10C|PTBL72BC|PTBL72BCEU|PTBL7CEU|PTBL7C|PTBL92BC|PTBL92BCEU|PTBL9CEU|PTBL9CUK|PTBL9C)\\b",
                    "AdvanTablet": "Android.* \\b(E3A|T3X|T5C|T5B|T3E|T3C|T3B|T1J|T1F|T2A|T1H|T1i|E1C|T1-E|T5-A|T4|E1-B|T2Ci|T1-B|T1-D|O1-A|E1-A|T1-A|T3A|T4i)\\b ",
                    "DanyTechTablet": "Genius Tab G3|Genius Tab S2|Genius Tab Q3|Genius Tab G4|Genius Tab Q4|Genius Tab G-II|Genius TAB GII|Genius TAB GIII|Genius Tab S1",
                    "GalapadTablet": "Android.*\\bG1\\b(?!\\))",
                    "MicromaxTablet": "Funbook|Micromax.*\\b(P250|P560|P360|P362|P600|P300|P350|P500|P275)\\b",
                    "KarbonnTablet": "Android.*\\b(A39|A37|A34|ST8|ST10|ST7|Smart Tab3|Smart Tab2)\\b",
                    "AllFineTablet": "Fine7 Genius|Fine7 Shine|Fine7 Air|Fine8 Style|Fine9 More|Fine10 Joy|Fine11 Wide",
                    "PROSCANTablet": "\\b(PEM63|PLT1023G|PLT1041|PLT1044|PLT1044G|PLT1091|PLT4311|PLT4311PL|PLT4315|PLT7030|PLT7033|PLT7033D|PLT7035|PLT7035D|PLT7044K|PLT7045K|PLT7045KB|PLT7071KG|PLT7072|PLT7223G|PLT7225G|PLT7777G|PLT7810K|PLT7849G|PLT7851G|PLT7852G|PLT8015|PLT8031|PLT8034|PLT8036|PLT8080K|PLT8082|PLT8088|PLT8223G|PLT8234G|PLT8235G|PLT8816K|PLT9011|PLT9045K|PLT9233G|PLT9735|PLT9760G|PLT9770G)\\b",
                    "YONESTablet": "BQ1078|BC1003|BC1077|RK9702|BC9730|BC9001|IT9001|BC7008|BC7010|BC708|BC728|BC7012|BC7030|BC7027|BC7026",
                    "ChangJiaTablet": "TPC7102|TPC7103|TPC7105|TPC7106|TPC7107|TPC7201|TPC7203|TPC7205|TPC7210|TPC7708|TPC7709|TPC7712|TPC7110|TPC8101|TPC8103|TPC8105|TPC8106|TPC8203|TPC8205|TPC8503|TPC9106|TPC9701|TPC97101|TPC97103|TPC97105|TPC97106|TPC97111|TPC97113|TPC97203|TPC97603|TPC97809|TPC97205|TPC10101|TPC10103|TPC10106|TPC10111|TPC10203|TPC10205|TPC10503",
                    "GUTablet": "TX-A1301|TX-M9002|Q702|kf026",
                    "PointOfViewTablet": "TAB-P506|TAB-navi-7-3G-M|TAB-P517|TAB-P-527|TAB-P701|TAB-P703|TAB-P721|TAB-P731N|TAB-P741|TAB-P825|TAB-P905|TAB-P925|TAB-PR945|TAB-PL1015|TAB-P1025|TAB-PI1045|TAB-P1325|TAB-PROTAB[0-9]+|TAB-PROTAB25|TAB-PROTAB26|TAB-PROTAB27|TAB-PROTAB26XL|TAB-PROTAB2-IPS9|TAB-PROTAB30-IPS9|TAB-PROTAB25XXL|TAB-PROTAB26-IPS10|TAB-PROTAB30-IPS10",
                    "OvermaxTablet": "OV-(SteelCore|NewBase|Basecore|Baseone|Exellen|Quattor|EduTab|Solution|ACTION|BasicTab|TeddyTab|MagicTab|Stream|TB-08|TB-09)|Qualcore 1027",
                    "HCLTablet": "HCL.*Tablet|Connect-3G-2.0|Connect-2G-2.0|ME Tablet U1|ME Tablet U2|ME Tablet G1|ME Tablet X1|ME Tablet Y2|ME Tablet Sync",
                    "DPSTablet": "DPS Dream 9|DPS Dual 7",
                    "VistureTablet": "V97 HD|i75 3G|Visture V4( HD)?|Visture V5( HD)?|Visture V10",
                    "CrestaTablet": "CTP(-)?810|CTP(-)?818|CTP(-)?828|CTP(-)?838|CTP(-)?888|CTP(-)?978|CTP(-)?980|CTP(-)?987|CTP(-)?988|CTP(-)?989",
                    "MediatekTablet": "\\bMT8125|MT8389|MT8135|MT8377\\b",
                    "ConcordeTablet": "Concorde([ ]+)?Tab|ConCorde ReadMan",
                    "GoCleverTablet": "GOCLEVER TAB|A7GOCLEVER|M1042|M7841|M742|R1042BK|R1041|TAB A975|TAB A7842|TAB A741|TAB A741L|TAB M723G|TAB M721|TAB A1021|TAB I921|TAB R721|TAB I720|TAB T76|TAB R70|TAB R76.2|TAB R106|TAB R83.2|TAB M813G|TAB I721|GCTA722|TAB I70|TAB I71|TAB S73|TAB R73|TAB R74|TAB R93|TAB R75|TAB R76.1|TAB A73|TAB A93|TAB A93.2|TAB T72|TAB R83|TAB R974|TAB R973|TAB A101|TAB A103|TAB A104|TAB A104.2|R105BK|M713G|A972BK|TAB A971|TAB R974.2|TAB R104|TAB R83.3|TAB A1042",
                    "ModecomTablet": "FreeTAB 9000|FreeTAB 7.4|FreeTAB 7004|FreeTAB 7800|FreeTAB 2096|FreeTAB 7.5|FreeTAB 1014|FreeTAB 1001 |FreeTAB 8001|FreeTAB 9706|FreeTAB 9702|FreeTAB 7003|FreeTAB 7002|FreeTAB 1002|FreeTAB 7801|FreeTAB 1331|FreeTAB 1004|FreeTAB 8002|FreeTAB 8014|FreeTAB 9704|FreeTAB 1003",
                    "VoninoTablet": "\\b(Argus[ _]?S|Diamond[ _]?79HD|Emerald[ _]?78E|Luna[ _]?70C|Onyx[ _]?S|Onyx[ _]?Z|Orin[ _]?HD|Orin[ _]?S|Otis[ _]?S|SpeedStar[ _]?S|Magnet[ _]?M9|Primus[ _]?94[ _]?3G|Primus[ _]?94HD|Primus[ _]?QS|Android.*\\bQ8\\b|Sirius[ _]?EVO[ _]?QS|Sirius[ _]?QS|Spirit[ _]?S)\\b",
                    "ECSTablet": "V07OT2|TM105A|S10OT1|TR10CS1",
                    "StorexTablet": "eZee[_']?(Tab|Go)[0-9]+|TabLC7|Looney Tunes Tab",
                    "VodafoneTablet": "SmartTab([ ]+)?[0-9]+|SmartTabII10|SmartTabII7|VF-1497",
                    "EssentielBTablet": "Smart[ ']?TAB[ ]+?[0-9]+|Family[ ']?TAB2",
                    "RossMoorTablet": "RM-790|RM-997|RMD-878G|RMD-974R|RMT-705A|RMT-701|RME-601|RMT-501|RMT-711",
                    "iMobileTablet": "i-mobile i-note",
                    "TolinoTablet": "tolino tab [0-9.]+|tolino shine",
                    "AudioSonicTablet": "\\bC-22Q|T7-QC|T-17B|T-17P\\b",
                    "AMPETablet": "Android.* A78 ",
                    "SkkTablet": "Android.* (SKYPAD|PHOENIX|CYCLOPS)",
                    "TecnoTablet": "TECNO P9|TECNO DP8D",
                    "JXDTablet": "Android.* \\b(F3000|A3300|JXD5000|JXD3000|JXD2000|JXD300B|JXD300|S5800|S7800|S602b|S5110b|S7300|S5300|S602|S603|S5100|S5110|S601|S7100a|P3000F|P3000s|P101|P200s|P1000m|P200m|P9100|P1000s|S6600b|S908|P1000|P300|S18|S6600|S9100)\\b",
                    "iJoyTablet": "Tablet (Spirit 7|Essentia|Galatea|Fusion|Onix 7|Landa|Titan|Scooby|Deox|Stella|Themis|Argon|Unique 7|Sygnus|Hexen|Finity 7|Cream|Cream X2|Jade|Neon 7|Neron 7|Kandy|Scape|Saphyr 7|Rebel|Biox|Rebel|Rebel 8GB|Myst|Draco 7|Myst|Tab7-004|Myst|Tadeo Jones|Tablet Boing|Arrow|Draco Dual Cam|Aurix|Mint|Amity|Revolution|Finity 9|Neon 9|T9w|Amity 4GB Dual Cam|Stone 4GB|Stone 8GB|Andromeda|Silken|X2|Andromeda II|Halley|Flame|Saphyr 9,7|Touch 8|Planet|Triton|Unique 10|Hexen 10|Memphis 4GB|Memphis 8GB|Onix 10)",
                    "FX2Tablet": "FX2 PAD7|FX2 PAD10",
                    "XoroTablet": "KidsPAD 701|PAD[ ]?712|PAD[ ]?714|PAD[ ]?716|PAD[ ]?717|PAD[ ]?718|PAD[ ]?720|PAD[ ]?721|PAD[ ]?722|PAD[ ]?790|PAD[ ]?792|PAD[ ]?900|PAD[ ]?9715D|PAD[ ]?9716DR|PAD[ ]?9718DR|PAD[ ]?9719QR|PAD[ ]?9720QR|TelePAD1030|Telepad1032|TelePAD730|TelePAD731|TelePAD732|TelePAD735Q|TelePAD830|TelePAD9730|TelePAD795|MegaPAD 1331|MegaPAD 1851|MegaPAD 2151",
                    "ViewsonicTablet": "ViewPad 10pi|ViewPad 10e|ViewPad 10s|ViewPad E72|ViewPad7|ViewPad E100|ViewPad 7e|ViewSonic VB733|VB100a",
                    "VerizonTablet": "QTAQZ3|QTAIR7|QTAQTZ3|QTASUN1|QTASUN2|QTAXIA1",
                    "OdysTablet": "LOOX|XENO10|ODYS[ -](Space|EVO|Xpress|NOON)|\\bXELIO\\b|Xelio10Pro|XELIO7PHONETAB|XELIO10EXTREME|XELIOPT2|NEO_QUAD10",
                    "CaptivaTablet": "CAPTIVA PAD",
                    "IconbitTablet": "NetTAB|NT-3702|NT-3702S|NT-3702S|NT-3603P|NT-3603P|NT-0704S|NT-0704S|NT-3805C|NT-3805C|NT-0806C|NT-0806C|NT-0909T|NT-0909T|NT-0907S|NT-0907S|NT-0902S|NT-0902S",
                    "TeclastTablet": "T98 4G|\\bP80\\b|\\bX90HD\\b|X98 Air|X98 Air 3G|\\bX89\\b|P80 3G|\\bX80h\\b|P98 Air|\\bX89HD\\b|P98 3G|\\bP90HD\\b|P89 3G|X98 3G|\\bP70h\\b|P79HD 3G|G18d 3G|\\bP79HD\\b|\\bP89s\\b|\\bA88\\b|\\bP10HD\\b|\\bP19HD\\b|G18 3G|\\bP78HD\\b|\\bA78\\b|\\bP75\\b|G17s 3G|G17h 3G|\\bP85t\\b|\\bP90\\b|\\bP11\\b|\\bP98t\\b|\\bP98HD\\b|\\bG18d\\b|\\bP85s\\b|\\bP11HD\\b|\\bP88s\\b|\\bA80HD\\b|\\bA80se\\b|\\bA10h\\b|\\bP89\\b|\\bP78s\\b|\\bG18\\b|\\bP85\\b|\\bA70h\\b|\\bA70\\b|\\bG17\\b|\\bP18\\b|\\bA80s\\b|\\bA11s\\b|\\bP88HD\\b|\\bA80h\\b|\\bP76s\\b|\\bP76h\\b|\\bP98\\b|\\bA10HD\\b|\\bP78\\b|\\bP88\\b|\\bA11\\b|\\bA10t\\b|\\bP76a\\b|\\bP76t\\b|\\bP76e\\b|\\bP85HD\\b|\\bP85a\\b|\\bP86\\b|\\bP75HD\\b|\\bP76v\\b|\\bA12\\b|\\bP75a\\b|\\bA15\\b|\\bP76Ti\\b|\\bP81HD\\b|\\bA10\\b|\\bT760VE\\b|\\bT720HD\\b|\\bP76\\b|\\bP73\\b|\\bP71\\b|\\bP72\\b|\\bT720SE\\b|\\bC520Ti\\b|\\bT760\\b|\\bT720VE\\b|T720-3GE|T720-WiFi",
                    "OndaTablet": "\\b(V975i|Vi30|VX530|V701|Vi60|V701s|Vi50|V801s|V719|Vx610w|VX610W|V819i|Vi10|VX580W|Vi10|V711s|V813|V811|V820w|V820|Vi20|V711|VI30W|V712|V891w|V972|V819w|V820w|Vi60|V820w|V711|V813s|V801|V819|V975s|V801|V819|V819|V818|V811|V712|V975m|V101w|V961w|V812|V818|V971|V971s|V919|V989|V116w|V102w|V973|Vi40)\\b[\\s]+|V10 \\b4G\\b",
                    "JaytechTablet": "TPC-PA762",
                    "BlaupunktTablet": "Endeavour 800NG|Endeavour 1010",
                    "DigmaTablet": "\\b(iDx10|iDx9|iDx8|iDx7|iDxD7|iDxD8|iDsQ8|iDsQ7|iDsQ8|iDsD10|iDnD7|3TS804H|iDsQ11|iDj7|iDs10)\\b",
                    "EvolioTablet": "ARIA_Mini_wifi|Aria[ _]Mini|Evolio X10|Evolio X7|Evolio X8|\\bEvotab\\b|\\bNeura\\b",
                    "LavaTablet": "QPAD E704|\\bIvoryS\\b|E-TAB IVORY|\\bE-TAB\\b",
                    "AocTablet": "MW0811|MW0812|MW0922|MTK8382|MW1031|MW0831|MW0821|MW0931|MW0712",
                    "MpmanTablet": "MP11 OCTA|MP10 OCTA|MPQC1114|MPQC1004|MPQC994|MPQC974|MPQC973|MPQC804|MPQC784|MPQC780|\\bMPG7\\b|MPDCG75|MPDCG71|MPDC1006|MP101DC|MPDC9000|MPDC905|MPDC706HD|MPDC706|MPDC705|MPDC110|MPDC100|MPDC99|MPDC97|MPDC88|MPDC8|MPDC77|MP709|MID701|MID711|MID170|MPDC703|MPQC1010",
                    "CelkonTablet": "CT695|CT888|CT[\\s]?910|CT7 Tab|CT9 Tab|CT3 Tab|CT2 Tab|CT1 Tab|C820|C720|\\bCT-1\\b",
                    "WolderTablet": "miTab \\b(DIAMOND|SPACE|BROOKLYN|NEO|FLY|MANHATTAN|FUNK|EVOLUTION|SKY|GOCAR|IRON|GENIUS|POP|MINT|EPSILON|BROADWAY|JUMP|HOP|LEGEND|NEW AGE|LINE|ADVANCE|FEEL|FOLLOW|LIKE|LINK|LIVE|THINK|FREEDOM|CHICAGO|CLEVELAND|BALTIMORE-GH|IOWA|BOSTON|SEATTLE|PHOENIX|DALLAS|IN 101|MasterChef)\\b",
                    "MediacomTablet": "M-MPI10C3G|M-SP10EG|M-SP10EGP|M-SP10HXAH|M-SP7HXAH|M-SP10HXBH|M-SP8HXAH|M-SP8MXA",
                    "MiTablet": "\\bMI PAD\\b|\\bHM NOTE 1W\\b",
                    "NibiruTablet": "Nibiru M1|Nibiru Jupiter One",
                    "NexoTablet": "NEXO NOVA|NEXO 10|NEXO AVIO|NEXO FREE|NEXO GO|NEXO EVO|NEXO 3G|NEXO SMART|NEXO KIDDO|NEXO MOBI",
                    "LeaderTablet": "TBLT10Q|TBLT10I|TBL-10WDKB|TBL-10WDKBO2013|TBL-W230V2|TBL-W450|TBL-W500|SV572|TBLT7I|TBA-AC7-8G|TBLT79|TBL-8W16|TBL-10W32|TBL-10WKB|TBL-W100",
                    "UbislateTablet": "UbiSlate[\\s]?7C",
                    "PocketBookTablet": "Pocketbook",
                    "KocasoTablet": "\\b(TB-1207)\\b",
                    "HisenseTablet": "\\b(F5281|E2371)\\b",
                    "Hudl": "Hudl HT7S3|Hudl 2",
                    "TelstraTablet": "T-Hub2",
                    "GenericTablet": "Android.*\\b97D\\b|Tablet(?!.*PC)|BNTV250A|MID-WCDMA|LogicPD Zoom2|\\bA7EB\\b|CatNova8|A1_07|CT704|CT1002|\\bM721\\b|rk30sdk|\\bEVOTAB\\b|M758A|ET904|ALUMIUM10|Smartfren Tab|Endeavour 1010|Tablet-PC-4|Tagi Tab|\\bM6pro\\b|CT1020W|arc 10HD|\\bTP750\\b|\\bQTAQZ3\\b|WVT101|TM1088|KT107"
                },
                "oss": {
                    "AndroidOS": "Android",
                    "BlackBerryOS": "blackberry|\\bBB10\\b|rim tablet os",
                    "PalmOS": "PalmOS|avantgo|blazer|elaine|hiptop|palm|plucker|xiino",
                    "SymbianOS": "Symbian|SymbOS|Series60|Series40|SYB-[0-9]+|\\bS60\\b",
                    "WindowsMobileOS": "Windows CE.*(PPC|Smartphone|Mobile|[0-9]{3}x[0-9]{3})|Window Mobile|Windows Phone [0-9.]+|WCE;",
                    "WindowsPhoneOS": "Windows Phone 10.0|Windows Phone 8.1|Windows Phone 8.0|Windows Phone OS|XBLWP7|ZuneWP7|Windows NT 6.[23]; ARM;",
                    "iOS": "\\biPhone.*Mobile|\\biPod|\\biPad|AppleCoreMedia",
                    "MeeGoOS": "MeeGo",
                    "MaemoOS": "Maemo",
                    "JavaOS": "J2ME\/|\\bMIDP\\b|\\bCLDC\\b",
                    "webOS": "webOS|hpwOS",
                    "badaOS": "\\bBada\\b",
                    "BREWOS": "BREW"
                },
                "uas": {
                    "Chrome": "\\bCrMo\\b|CriOS|Android.*Chrome\/[.0-9]* (Mobile)?",
                    "Dolfin": "\\bDolfin\\b",
                    "Opera": "Opera.*Mini|Opera.*Mobi|Android.*Opera|Mobile.*OPR\/[0-9.]+$|Coast\/[0-9.]+",
                    "Skyfire": "Skyfire",
                    "Edge": "Mobile Safari\/[.0-9]* Edge",
                    "IE": "IEMobile|MSIEMobile",
                    "Firefox": "fennec|firefox.*maemo|(Mobile|Tablet).*Firefox|Firefox.*Mobile|FxiOS",
                    "Bolt": "bolt",
                    "TeaShark": "teashark",
                    "Blazer": "Blazer",
                    "Safari": "Version.*Mobile.*Safari|Safari.*Mobile|MobileSafari",
                    "WeChat": "\\bMicroMessenger\\b",
                    "UCBrowser": "UC.*Browser|UCWEB",
                    "baiduboxapp": "baiduboxapp",
                    "baidubrowser": "baidubrowser",
                    "DiigoBrowser": "DiigoBrowser",
                    "Puffin": "Puffin",
                    "Mercury": "\\bMercury\\b",
                    "ObigoBrowser": "Obigo",
                    "NetFront": "NF-Browser",
                    "GenericBrowser": "NokiaBrowser|OviBrowser|OneBrowser|TwonkyBeamBrowser|SEMC.*Browser|FlyFlow|Minimo|NetFront|Novarra-Vision|MQQBrowser|MicroMessenger",
                    "PaleMoon": "Android.*PaleMoon|Mobile.*PaleMoon"
                },
                "props": {
                    "Mobile": "Mobile\/[VER]",
                    "Build": "Build\/[VER]",
                    "Version": "Version\/[VER]",
                    "VendorID": "VendorID\/[VER]",
                    "iPad": "iPad.*CPU[a-z ]+[VER]",
                    "iPhone": "iPhone.*CPU[a-z ]+[VER]",
                    "iPod": "iPod.*CPU[a-z ]+[VER]",
                    "Kindle": "Kindle\/[VER]",
                    "Chrome": ["Chrome\/[VER]", "CriOS\/[VER]", "CrMo\/[VER]"],
                    "Coast": ["Coast\/[VER]"],
                    "Dolfin": "Dolfin\/[VER]",
                    "Firefox": ["Firefox\/[VER]", "FxiOS\/[VER]"],
                    "Fennec": "Fennec\/[VER]",
                    "Edge": "Edge\/[VER]",
                    "IE": ["IEMobile\/[VER];", "IEMobile [VER]", "MSIE [VER];", "Trident\/[0-9.]+;.*rv:[VER]"],
                    "NetFront": "NetFront\/[VER]",
                    "NokiaBrowser": "NokiaBrowser\/[VER]",
                    "Opera": [" OPR\/[VER]", "Opera Mini\/[VER]", "Version\/[VER]"],
                    "Opera Mini": "Opera Mini\/[VER]",
                    "Opera Mobi": "Version\/[VER]",
                    "UCBrowser": ["UCWEB[VER]", "UC.*Browser\/[VER]"],
                    "MQQBrowser": "MQQBrowser\/[VER]",
                    "MicroMessenger": "MicroMessenger\/[VER]",
                    "baiduboxapp": "baiduboxapp\/[VER]",
                    "baidubrowser": "baidubrowser\/[VER]",
                    "SamsungBrowser": "SamsungBrowser\/[VER]",
                    "Iron": "Iron\/[VER]",
                    "Safari": ["Version\/[VER]", "Safari\/[VER]"],
                    "Skyfire": "Skyfire\/[VER]",
                    "Tizen": "Tizen\/[VER]",
                    "Webkit": "webkit[ \/][VER]",
                    "PaleMoon": "PaleMoon\/[VER]",
                    "Gecko": "Gecko\/[VER]",
                    "Trident": "Trident\/[VER]",
                    "Presto": "Presto\/[VER]",
                    "Goanna": "Goanna\/[VER]",
                    "iOS": " \\bi?OS\\b [VER][ ;]{1}",
                    "Android": "Android [VER]",
                    "BlackBerry": ["BlackBerry[\\w]+\/[VER]", "BlackBerry.*Version\/[VER]", "Version\/[VER]"],
                    "BREW": "BREW [VER]",
                    "Java": "Java\/[VER]",
                    "Windows Phone OS": ["Windows Phone OS [VER]", "Windows Phone [VER]"],
                    "Windows Phone": "Windows Phone [VER]",
                    "Windows CE": "Windows CE\/[VER]",
                    "Windows NT": "Windows NT [VER]",
                    "Symbian": ["SymbianOS\/[VER]", "Symbian\/[VER]"],
                    "webOS": ["webOS\/[VER]", "hpwOS\/[VER];"]
                },
                "utils": {
                    "Bot": "Googlebot|facebookexternalhit|AdsBot-Google|Google Keyword Suggestion|Facebot|YandexBot|YandexMobileBot|bingbot|ia_archiver|AhrefsBot|Ezooms|GSLFbot|WBSearchBot|Twitterbot|TweetmemeBot|Twikle|PaperLiBot|Wotbox|UnwindFetchor|Exabot|MJ12bot|YandexImages|TurnitinBot|Pingdom",
                    "MobileBot": "Googlebot-Mobile|AdsBot-Google-Mobile|YahooSeeker\/M1A1-R2D2",
                    "DesktopMode": "WPDesktop",
                    "TV": "SonyDTV|HbbTV",
                    "WebKit": "(webkit)[ \/]([\\w.]+)",
                    "Console": "\\b(Nintendo|Nintendo WiiU|Nintendo 3DS|Nintendo Switch|PLAYSTATION|Xbox)\\b",
                    "Watch": "SM-V700"
                }
            };

            // following patterns come from http://detectmobilebrowsers.com/
            impl.detectMobileBrowsers = {
                fullPattern: /(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i,
                shortPattern: /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i,
                tabletPattern: /android|ipad|playbook|silk/i
            };

            var hasOwnProp = Object.prototype.hasOwnProperty,
                isArray;

            impl.FALLBACK_PHONE = 'UnknownPhone';
            impl.FALLBACK_TABLET = 'UnknownTablet';
            impl.FALLBACK_MOBILE = 'UnknownMobile';

            isArray = 'isArray' in Array ? Array.isArray : function (value) {
                return Object.prototype.toString.call(value) === '[object Array]';
            };

            function equalIC(a, b) {
                return a != null && b != null && a.toLowerCase() === b.toLowerCase();
            }

            function containsIC(array, value) {
                var valueLC,
                    i,
                    len = array.length;
                if (!len || !value) {
                    return false;
                }
                valueLC = value.toLowerCase();
                for (i = 0; i < len; ++i) {
                    if (valueLC === array[i].toLowerCase()) {
                        return true;
                    }
                }
                return false;
            }

            function convertPropsToRegExp(object) {
                for (var key in object) {
                    if (hasOwnProp.call(object, key)) {
                        object[key] = new RegExp(object[key], 'i');
                    }
                }
            }

            function prepareUserAgent(userAgent) {
                return (userAgent || '').substr(0, 500); // mitigate vulnerable to ReDoS
            }

            (function init() {
                var key,
                    values,
                    value,
                    i,
                    len,
                    verPos,
                    mobileDetectRules = impl.mobileDetectRules;
                for (key in mobileDetectRules.props) {
                    if (hasOwnProp.call(mobileDetectRules.props, key)) {
                        values = mobileDetectRules.props[key];
                        if (!isArray(values)) {
                            values = [values];
                        }
                        len = values.length;
                        for (i = 0; i < len; ++i) {
                            value = values[i];
                            verPos = value.indexOf('[VER]');
                            if (verPos >= 0) {
                                value = value.substring(0, verPos) + '([\\w._\\+]+)' + value.substring(verPos + 5);
                            }
                            values[i] = new RegExp(value, 'i');
                        }
                        mobileDetectRules.props[key] = values;
                    }
                }
                convertPropsToRegExp(mobileDetectRules.oss);
                convertPropsToRegExp(mobileDetectRules.phones);
                convertPropsToRegExp(mobileDetectRules.tablets);
                convertPropsToRegExp(mobileDetectRules.uas);
                convertPropsToRegExp(mobileDetectRules.utils);

                // copy some patterns to oss0 which are tested first (see issue#15)
                mobileDetectRules.oss0 = {
                    WindowsPhoneOS: mobileDetectRules.oss.WindowsPhoneOS,
                    WindowsMobileOS: mobileDetectRules.oss.WindowsMobileOS
                };
            })();

            /**
             * Test userAgent string against a set of rules and find the first matched key.
             * @param {Object} rules (key is String, value is RegExp)
             * @param {String} userAgent the navigator.userAgent (or HTTP-Header 'User-Agent').
             * @returns {String|null} the matched key if found, otherwise <tt>null</tt>
             * @private
             */
            impl.findMatch = function (rules, userAgent) {
                for (var key in rules) {
                    if (hasOwnProp.call(rules, key)) {
                        if (rules[key].test(userAgent)) {
                            return key;
                        }
                    }
                }
                return null;
            };

            /**
             * Test userAgent string against a set of rules and return an array of matched keys.
             * @param {Object} rules (key is String, value is RegExp)
             * @param {String} userAgent the navigator.userAgent (or HTTP-Header 'User-Agent').
             * @returns {Array} an array of matched keys, may be empty when there is no match, but not <tt>null</tt>
             * @private
             */
            impl.findMatches = function (rules, userAgent) {
                var result = [];
                for (var key in rules) {
                    if (hasOwnProp.call(rules, key)) {
                        if (rules[key].test(userAgent)) {
                            result.push(key);
                        }
                    }
                }
                return result;
            };

            /**
             * Check the version of the given property in the User-Agent.
             *
             * @param {String} propertyName
             * @param {String} userAgent
             * @return {String} version or <tt>null</tt> if version not found
             * @private
             */
            impl.getVersionStr = function (propertyName, userAgent) {
                var props = impl.mobileDetectRules.props,
                    patterns,
                    i,
                    len,
                    match;
                if (hasOwnProp.call(props, propertyName)) {
                    patterns = props[propertyName];
                    len = patterns.length;
                    for (i = 0; i < len; ++i) {
                        match = patterns[i].exec(userAgent);
                        if (match !== null) {
                            return match[1];
                        }
                    }
                }
                return null;
            };

            /**
             * Check the version of the given property in the User-Agent.
             * Will return a float number. (eg. 2_0 will return 2.0, 4.3.1 will return 4.31)
             *
             * @param {String} propertyName
             * @param {String} userAgent
             * @return {Number} version or <tt>NaN</tt> if version not found
             * @private
             */
            impl.getVersion = function (propertyName, userAgent) {
                var version = impl.getVersionStr(propertyName, userAgent);
                return version ? impl.prepareVersionNo(version) : NaN;
            };

            /**
             * Prepare the version number.
             *
             * @param {String} version
             * @return {Number} the version number as a floating number
             * @private
             */
            impl.prepareVersionNo = function (version) {
                var numbers;

                numbers = version.split(/[a-z._ \/\-]/i);
                if (numbers.length === 1) {
                    version = numbers[0];
                }
                if (numbers.length > 1) {
                    version = numbers[0] + '.';
                    numbers.shift();
                    version += numbers.join('');
                }
                return Number(version);
            };

            impl.isMobileFallback = function (userAgent) {
                return impl.detectMobileBrowsers.fullPattern.test(userAgent) || impl.detectMobileBrowsers.shortPattern.test(userAgent.substr(0, 4));
            };

            impl.isTabletFallback = function (userAgent) {
                return impl.detectMobileBrowsers.tabletPattern.test(userAgent);
            };

            impl.prepareDetectionCache = function (cache, userAgent, maxPhoneWidth) {
                if (cache.mobile !== undefined) {
                    return;
                }
                var phone, tablet, phoneSized;

                // first check for stronger tablet rules, then phone (see issue#5)
                tablet = impl.findMatch(impl.mobileDetectRules.tablets, userAgent);
                if (tablet) {
                    cache.mobile = cache.tablet = tablet;
                    cache.phone = null;
                    return; // unambiguously identified as tablet
                }

                phone = impl.findMatch(impl.mobileDetectRules.phones, userAgent);
                if (phone) {
                    cache.mobile = cache.phone = phone;
                    cache.tablet = null;
                    return; // unambiguously identified as phone
                }

                // our rules haven't found a match -> try more general fallback rules
                if (impl.isMobileFallback(userAgent)) {
                    phoneSized = MobileDetect.isPhoneSized(maxPhoneWidth);
                    if (phoneSized === undefined) {
                        cache.mobile = impl.FALLBACK_MOBILE;
                        cache.tablet = cache.phone = null;
                    } else if (phoneSized) {
                        cache.mobile = cache.phone = impl.FALLBACK_PHONE;
                        cache.tablet = null;
                    } else {
                        cache.mobile = cache.tablet = impl.FALLBACK_TABLET;
                        cache.phone = null;
                    }
                } else if (impl.isTabletFallback(userAgent)) {
                    cache.mobile = cache.tablet = impl.FALLBACK_TABLET;
                    cache.phone = null;
                } else {
                    // not mobile at all!
                    cache.mobile = cache.tablet = cache.phone = null;
                }
            };

            // t is a reference to a MobileDetect instance
            impl.mobileGrade = function (t) {
                // impl note:
                // To keep in sync w/ Mobile_Detect.php easily, the following code is tightly aligned to the PHP version.
                // When changes are made in Mobile_Detect.php, copy this method and replace:
                //     $this-> / t.
                //     self::MOBILE_GRADE_(.) / '$1'
                //     , self::VERSION_TYPE_FLOAT / (nothing)
                //     isIOS() / os('iOS')
                //     [reg] / (nothing)   <-- jsdelivr complaining about unescaped unicode character U+00AE
                var $isMobile = t.mobile() !== null;

                if (
                // Apple iOS 3.2-5.1 - Tested on the original iPad (4.3 / 5.0), iPad 2 (4.3), iPad 3 (5.1), original iPhone (3.1), iPhone 3 (3.2), 3GS (4.3), 4 (4.3 / 5.0), and 4S (5.1)
                t.os('iOS') && t.version('iPad') >= 4.3 || t.os('iOS') && t.version('iPhone') >= 3.1 || t.os('iOS') && t.version('iPod') >= 3.1 ||

                // Android 2.1-2.3 - Tested on the HTC Incredible (2.2), original Droid (2.2), HTC Aria (2.1), Google Nexus S (2.3). Functional on 1.5 & 1.6 but performance may be sluggish, tested on Google G1 (1.5)
                // Android 3.1 (Honeycomb)  - Tested on the Samsung Galaxy Tab 10.1 and Motorola XOOM
                // Android 4.0 (ICS)  - Tested on a Galaxy Nexus. Note: transition performance can be poor on upgraded devices
                // Android 4.1 (Jelly Bean)  - Tested on a Galaxy Nexus and Galaxy 7
                t.version('Android') > 2.1 && t.is('Webkit') ||

                // Windows Phone 7-7.5 - Tested on the HTC Surround (7.0) HTC Trophy (7.5), LG-E900 (7.5), Nokia Lumia 800
                t.version('Windows Phone OS') >= 7.0 ||

                // Blackberry 7 - Tested on BlackBerry Torch 9810
                // Blackberry 6.0 - Tested on the Torch 9800 and Style 9670
                t.is('BlackBerry') && t.version('BlackBerry') >= 6.0 ||
                // Blackberry Playbook (1.0-2.0) - Tested on PlayBook
                t.match('Playbook.*Tablet') ||

                // Palm WebOS (1.4-2.0) - Tested on the Palm Pixi (1.4), Pre (1.4), Pre 2 (2.0)
                t.version('webOS') >= 1.4 && t.match('Palm|Pre|Pixi') ||
                // Palm WebOS 3.0  - Tested on HP TouchPad
                t.match('hp.*TouchPad') ||

                // Firefox Mobile (12 Beta) - Tested on Android 2.3 device
                t.is('Firefox') && t.version('Firefox') >= 12 ||

                // Chrome for Android - Tested on Android 4.0, 4.1 device
                t.is('Chrome') && t.is('AndroidOS') && t.version('Android') >= 4.0 ||

                // Skyfire 4.1 - Tested on Android 2.3 device
                t.is('Skyfire') && t.version('Skyfire') >= 4.1 && t.is('AndroidOS') && t.version('Android') >= 2.3 ||

                // Opera Mobile 11.5-12: Tested on Android 2.3
                t.is('Opera') && t.version('Opera Mobi') > 11 && t.is('AndroidOS') ||

                // Meego 1.2 - Tested on Nokia 950 and N9
                t.is('MeeGoOS') ||

                // Tizen (pre-release) - Tested on early hardware
                t.is('Tizen') ||

                // Samsung Bada 2.0 - Tested on a Samsung Wave 3, Dolphin browser
                // @todo: more tests here!
                t.is('Dolfin') && t.version('Bada') >= 2.0 ||

                // UC Browser - Tested on Android 2.3 device
                (t.is('UC Browser') || t.is('Dolfin')) && t.version('Android') >= 2.3 ||

                // Kindle 3 and Fire  - Tested on the built-in WebKit browser for each
                t.match('Kindle Fire') || t.is('Kindle') && t.version('Kindle') >= 3.0 ||

                // Nook Color 1.4.1 - Tested on original Nook Color, not Nook Tablet
                t.is('AndroidOS') && t.is('NookTablet') ||

                // Chrome Desktop 11-21 - Tested on OS X 10.7 and Windows 7
                t.version('Chrome') >= 11 && !$isMobile ||

                // Safari Desktop 4-5 - Tested on OS X 10.7 and Windows 7
                t.version('Safari') >= 5.0 && !$isMobile ||

                // Firefox Desktop 4-13 - Tested on OS X 10.7 and Windows 7
                t.version('Firefox') >= 4.0 && !$isMobile ||

                // Internet Explorer 7-9 - Tested on Windows XP, Vista and 7
                t.version('MSIE') >= 7.0 && !$isMobile ||

                // Opera Desktop 10-12 - Tested on OS X 10.7 and Windows 7
                // @reference: http://my.opera.com/community/openweb/idopera/
                t.version('Opera') >= 10 && !$isMobile) {
                    return 'A';
                }

                if (t.os('iOS') && t.version('iPad') < 4.3 || t.os('iOS') && t.version('iPhone') < 3.1 || t.os('iOS') && t.version('iPod') < 3.1 ||

                // Blackberry 5.0: Tested on the Storm 2 9550, Bold 9770
                t.is('Blackberry') && t.version('BlackBerry') >= 5 && t.version('BlackBerry') < 6 ||

                //Opera Mini (5.0-6.5) - Tested on iOS 3.2/4.3 and Android 2.3
                t.version('Opera Mini') >= 5.0 && t.version('Opera Mini') <= 6.5 && (t.version('Android') >= 2.3 || t.is('iOS')) ||

                // Nokia Symbian^3 - Tested on Nokia N8 (Symbian^3), C7 (Symbian^3), also works on N97 (Symbian^1)
                t.match('NokiaN8|NokiaC7|N97.*Series60|Symbian/3') ||

                // @todo: report this (tested on Nokia N71)
                t.version('Opera Mobi') >= 11 && t.is('SymbianOS')) {
                    return 'B';
                }

                if (
                // Blackberry 4.x - Tested on the Curve 8330
                t.version('BlackBerry') < 5.0 ||
                // Windows Mobile - Tested on the HTC Leo (WinMo 5.2)
                t.match('MSIEMobile|Windows CE.*Mobile') || t.version('Windows Mobile') <= 5.2) {
                    return 'C';
                }

                //All older smartphone platforms and featurephones - Any device that doesn't support media queries
                //will receive the basic, C grade experience.
                return 'C';
            };

            impl.detectOS = function (ua) {
                return impl.findMatch(impl.mobileDetectRules.oss0, ua) || impl.findMatch(impl.mobileDetectRules.oss, ua);
            };

            impl.getDeviceSmallerSide = function () {
                return window.screen.width < window.screen.height ? window.screen.width : window.screen.height;
            };

            /**
             * Constructor for MobileDetect object.
             * <br>
             * Such an object will keep a reference to the given user-agent string and cache most of the detect queries.<br>
             * <div style="background-color: #d9edf7; border: 1px solid #bce8f1; color: #3a87ad; padding: 14px; border-radius: 2px; margin-top: 20px">
             *     <strong>Find information how to download and install:</strong>
             *     <a href="https://github.com/hgoebl/mobile-detect.js/">github.com/hgoebl/mobile-detect.js/</a>
             * </div>
             *
             * @example <pre>
             *     var md = new MobileDetect(window.navigator.userAgent);
             *     if (md.mobile()) {
             *         location.href = (md.mobileGrade() === 'A') ? '/mobile/' : '/lynx/';
             *     }
             * </pre>
             *
             * @param {string} userAgent typically taken from window.navigator.userAgent or http_header['User-Agent']
             * @param {number} [maxPhoneWidth=600] <strong>only for browsers</strong> specify a value for the maximum
             *        width of smallest device side (in logical "CSS" pixels) until a device detected as mobile will be handled
             *        as phone.
             *        This is only used in cases where the device cannot be classified as phone or tablet.<br>
             *        See <a href="http://developer.android.com/guide/practices/screens_support.html">Declaring Tablet Layouts
             *        for Android</a>.<br>
             *        If you provide a value < 0, then this "fuzzy" check is disabled.
             * @constructor
             * @global
             */
            function MobileDetect(userAgent, maxPhoneWidth) {
                this.ua = prepareUserAgent(userAgent);
                this._cache = {};
                //600dp is typical 7" tablet minimum width
                this.maxPhoneWidth = maxPhoneWidth || 600;
            }

            MobileDetect.prototype = {
                constructor: MobileDetect,

                /**
                 * Returns the detected phone or tablet type or <tt>null</tt> if it is not a mobile device.
                 * <br>
                 * For a list of possible return values see {@link MobileDetect#phone} and {@link MobileDetect#tablet}.<br>
                 * <br>
                 * If the device is not detected by the regular expressions from Mobile-Detect, a test is made against
                 * the patterns of <a href="http://detectmobilebrowsers.com/">detectmobilebrowsers.com</a>. If this test
                 * is positive, a value of <code>UnknownPhone</code>, <code>UnknownTablet</code> or
                 * <code>UnknownMobile</code> is returned.<br>
                 * When used in browser, the decision whether phone or tablet is made based on <code>screen.width/height</code>.<br>
                 * <br>
                 * When used server-side (node.js), there is no way to tell the difference between <code>UnknownTablet</code>
                 * and <code>UnknownMobile</code>, so you will get <code>UnknownMobile</code> here.<br>
                 * Be aware that since v1.0.0 in this special case you will get <code>UnknownMobile</code> only for:
                 * {@link MobileDetect#mobile}, not for {@link MobileDetect#phone} and {@link MobileDetect#tablet}.
                 * In versions before v1.0.0 all 3 methods returned <code>UnknownMobile</code> which was tedious to use.
                 * <br>
                 * In most cases you will use the return value just as a boolean.
                 *
                 * @returns {String} the key for the phone family or tablet family, e.g. "Nexus".
                 * @function MobileDetect#mobile
                 */
                mobile: function () {
                    impl.prepareDetectionCache(this._cache, this.ua, this.maxPhoneWidth);
                    return this._cache.mobile;
                },

                /**
                 * Returns the detected phone type/family string or <tt>null</tt>.
                 * <br>
                 * The returned tablet (family or producer) is one of following keys:<br>
                 * <br><tt>iPhone, BlackBerry, HTC, Nexus, Dell, Motorola, Samsung, LG, Sony, Asus,
                 * NokiaLumia, Micromax, Palm, Vertu, Pantech, Fly, Wiko, iMobile, SimValley,
                 * Wolfgang, Alcatel, Nintendo, Amoi, INQ, GenericPhone</tt><br>
                 * <br>
                 * If the device is not detected by the regular expressions from Mobile-Detect, a test is made against
                 * the patterns of <a href="http://detectmobilebrowsers.com/">detectmobilebrowsers.com</a>. If this test
                 * is positive, a value of <code>UnknownPhone</code> or <code>UnknownMobile</code> is returned.<br>
                 * When used in browser, the decision whether phone or tablet is made based on <code>screen.width/height</code>.<br>
                 * <br>
                 * When used server-side (node.js), there is no way to tell the difference between <code>UnknownTablet</code>
                 * and <code>UnknownMobile</code>, so you will get <code>null</code> here, while {@link MobileDetect#mobile}
                 * will return <code>UnknownMobile</code>.<br>
                 * Be aware that since v1.0.0 in this special case you will get <code>UnknownMobile</code> only for:
                 * {@link MobileDetect#mobile}, not for {@link MobileDetect#phone} and {@link MobileDetect#tablet}.
                 * In versions before v1.0.0 all 3 methods returned <code>UnknownMobile</code> which was tedious to use.
                 * <br>
                 * In most cases you will use the return value just as a boolean.
                 *
                 * @returns {String} the key of the phone family or producer, e.g. "iPhone"
                 * @function MobileDetect#phone
                 */
                phone: function () {
                    impl.prepareDetectionCache(this._cache, this.ua, this.maxPhoneWidth);
                    return this._cache.phone;
                },

                /**
                 * Returns the detected tablet type/family string or <tt>null</tt>.
                 * <br>
                 * The returned tablet (family or producer) is one of following keys:<br>
                 * <br><tt>iPad, NexusTablet, GoogleTablet, SamsungTablet, Kindle, SurfaceTablet,
                 * HPTablet, AsusTablet, BlackBerryTablet, HTCtablet, MotorolaTablet, NookTablet,
                 * AcerTablet, ToshibaTablet, LGTablet, FujitsuTablet, PrestigioTablet,
                 * LenovoTablet, DellTablet, YarvikTablet, MedionTablet, ArnovaTablet,
                 * IntensoTablet, IRUTablet, MegafonTablet, EbodaTablet, AllViewTablet,
                 * ArchosTablet, AinolTablet, NokiaLumiaTablet, SonyTablet, PhilipsTablet,
                 * CubeTablet, CobyTablet, MIDTablet, MSITablet, SMiTTablet, RockChipTablet,
                 * FlyTablet, bqTablet, HuaweiTablet, NecTablet, PantechTablet, BronchoTablet,
                 * VersusTablet, ZyncTablet, PositivoTablet, NabiTablet, KoboTablet, DanewTablet,
                 * TexetTablet, PlaystationTablet, TrekstorTablet, PyleAudioTablet, AdvanTablet,
                 * DanyTechTablet, GalapadTablet, MicromaxTablet, KarbonnTablet, AllFineTablet,
                 * PROSCANTablet, YONESTablet, ChangJiaTablet, GUTablet, PointOfViewTablet,
                 * OvermaxTablet, HCLTablet, DPSTablet, VistureTablet, CrestaTablet,
                 * MediatekTablet, ConcordeTablet, GoCleverTablet, ModecomTablet, VoninoTablet,
                 * ECSTablet, StorexTablet, VodafoneTablet, EssentielBTablet, RossMoorTablet,
                 * iMobileTablet, TolinoTablet, AudioSonicTablet, AMPETablet, SkkTablet,
                 * TecnoTablet, JXDTablet, iJoyTablet, FX2Tablet, XoroTablet, ViewsonicTablet,
                 * VerizonTablet, OdysTablet, CaptivaTablet, IconbitTablet, TeclastTablet,
                 * OndaTablet, JaytechTablet, BlaupunktTablet, DigmaTablet, EvolioTablet,
                 * LavaTablet, AocTablet, MpmanTablet, CelkonTablet, WolderTablet, MediacomTablet,
                 * MiTablet, NibiruTablet, NexoTablet, LeaderTablet, UbislateTablet,
                 * PocketBookTablet, KocasoTablet, HisenseTablet, Hudl, TelstraTablet,
                 * GenericTablet</tt><br>
                 * <br>
                 * If the device is not detected by the regular expressions from Mobile-Detect, a test is made against
                 * the patterns of <a href="http://detectmobilebrowsers.com/">detectmobilebrowsers.com</a>. If this test
                 * is positive, a value of <code>UnknownTablet</code> or <code>UnknownMobile</code> is returned.<br>
                 * When used in browser, the decision whether phone or tablet is made based on <code>screen.width/height</code>.<br>
                 * <br>
                 * When used server-side (node.js), there is no way to tell the difference between <code>UnknownTablet</code>
                 * and <code>UnknownMobile</code>, so you will get <code>null</code> here, while {@link MobileDetect#mobile}
                 * will return <code>UnknownMobile</code>.<br>
                 * Be aware that since v1.0.0 in this special case you will get <code>UnknownMobile</code> only for:
                 * {@link MobileDetect#mobile}, not for {@link MobileDetect#phone} and {@link MobileDetect#tablet}.
                 * In versions before v1.0.0 all 3 methods returned <code>UnknownMobile</code> which was tedious to use.
                 * <br>
                 * In most cases you will use the return value just as a boolean.
                 *
                 * @returns {String} the key of the tablet family or producer, e.g. "SamsungTablet"
                 * @function MobileDetect#tablet
                 */
                tablet: function () {
                    impl.prepareDetectionCache(this._cache, this.ua, this.maxPhoneWidth);
                    return this._cache.tablet;
                },

                /**
                 * Returns the (first) detected user-agent string or <tt>null</tt>.
                 * <br>
                 * The returned user-agent is one of following keys:<br>
                 * <br><tt>Chrome, Dolfin, Opera, Skyfire, Edge, IE, Firefox, Bolt, TeaShark, Blazer,
                 * Safari, WeChat, UCBrowser, baiduboxapp, baidubrowser, DiigoBrowser, Puffin,
                 * Mercury, ObigoBrowser, NetFront, GenericBrowser, PaleMoon</tt><br>
                 * <br>
                 * In most cases calling {@link MobileDetect#userAgent} will be sufficient. But there are rare
                 * cases where a mobile device pretends to be more than one particular browser. You can get the
                 * list of all matches with {@link MobileDetect#userAgents} or check for a particular value by
                 * providing one of the defined keys as first argument to {@link MobileDetect#is}.
                 *
                 * @returns {String} the key for the detected user-agent or <tt>null</tt>
                 * @function MobileDetect#userAgent
                 */
                userAgent: function () {
                    if (this._cache.userAgent === undefined) {
                        this._cache.userAgent = impl.findMatch(impl.mobileDetectRules.uas, this.ua);
                    }
                    return this._cache.userAgent;
                },

                /**
                 * Returns all detected user-agent strings.
                 * <br>
                 * The array is empty or contains one or more of following keys:<br>
                 * <br><tt>Chrome, Dolfin, Opera, Skyfire, Edge, IE, Firefox, Bolt, TeaShark, Blazer,
                 * Safari, WeChat, UCBrowser, baiduboxapp, baidubrowser, DiigoBrowser, Puffin,
                 * Mercury, ObigoBrowser, NetFront, GenericBrowser, PaleMoon</tt><br>
                 * <br>
                 * In most cases calling {@link MobileDetect#userAgent} will be sufficient. But there are rare
                 * cases where a mobile device pretends to be more than one particular browser. You can get the
                 * list of all matches with {@link MobileDetect#userAgents} or check for a particular value by
                 * providing one of the defined keys as first argument to {@link MobileDetect#is}.
                 *
                 * @returns {Array} the array of detected user-agent keys or <tt>[]</tt>
                 * @function MobileDetect#userAgents
                 */
                userAgents: function () {
                    if (this._cache.userAgents === undefined) {
                        this._cache.userAgents = impl.findMatches(impl.mobileDetectRules.uas, this.ua);
                    }
                    return this._cache.userAgents;
                },

                /**
                 * Returns the detected operating system string or <tt>null</tt>.
                 * <br>
                 * The operating system is one of following keys:<br>
                 * <br><tt>AndroidOS, BlackBerryOS, PalmOS, SymbianOS, WindowsMobileOS, WindowsPhoneOS,
                 * iOS, MeeGoOS, MaemoOS, JavaOS, webOS, badaOS, BREWOS</tt><br>
                 *
                 * @returns {String} the key for the detected operating system.
                 * @function MobileDetect#os
                 */
                os: function () {
                    if (this._cache.os === undefined) {
                        this._cache.os = impl.detectOS(this.ua);
                    }
                    return this._cache.os;
                },

                /**
                 * Get the version (as Number) of the given property in the User-Agent.
                 * <br>
                 * Will return a float number. (eg. 2_0 will return 2.0, 4.3.1 will return 4.31)
                 *
                 * @param {String} key a key defining a thing which has a version.<br>
                 *        You can use one of following keys:<br>
                 * <br><tt>Mobile, Build, Version, VendorID, iPad, iPhone, iPod, Kindle, Chrome, Coast,
                 * Dolfin, Firefox, Fennec, Edge, IE, NetFront, NokiaBrowser, Opera, Opera Mini,
                 * Opera Mobi, UCBrowser, MQQBrowser, MicroMessenger, baiduboxapp, baidubrowser,
                 * SamsungBrowser, Iron, Safari, Skyfire, Tizen, Webkit, PaleMoon, Gecko, Trident,
                 * Presto, Goanna, iOS, Android, BlackBerry, BREW, Java, Windows Phone OS, Windows
                 * Phone, Windows CE, Windows NT, Symbian, webOS</tt><br>
                 *
                 * @returns {Number} the version as float or <tt>NaN</tt> if User-Agent doesn't contain this version.
                 *          Be careful when comparing this value with '==' operator!
                 * @function MobileDetect#version
                 */
                version: function (key) {
                    return impl.getVersion(key, this.ua);
                },

                /**
                 * Get the version (as String) of the given property in the User-Agent.
                 * <br>
                 *
                 * @param {String} key a key defining a thing which has a version.<br>
                 *        You can use one of following keys:<br>
                 * <br><tt>Mobile, Build, Version, VendorID, iPad, iPhone, iPod, Kindle, Chrome, Coast,
                 * Dolfin, Firefox, Fennec, Edge, IE, NetFront, NokiaBrowser, Opera, Opera Mini,
                 * Opera Mobi, UCBrowser, MQQBrowser, MicroMessenger, baiduboxapp, baidubrowser,
                 * SamsungBrowser, Iron, Safari, Skyfire, Tizen, Webkit, PaleMoon, Gecko, Trident,
                 * Presto, Goanna, iOS, Android, BlackBerry, BREW, Java, Windows Phone OS, Windows
                 * Phone, Windows CE, Windows NT, Symbian, webOS</tt><br>
                 *
                 * @returns {String} the "raw" version as String or <tt>null</tt> if User-Agent doesn't contain this version.
                 *
                 * @function MobileDetect#versionStr
                 */
                versionStr: function (key) {
                    return impl.getVersionStr(key, this.ua);
                },

                /**
                 * Global test key against userAgent, os, phone, tablet and some other properties of userAgent string.
                 *
                 * @param {String} key the key (case-insensitive) of a userAgent, an operating system, phone or
                 *        tablet family.<br>
                 *        For a complete list of possible values, see {@link MobileDetect#userAgent},
                 *        {@link MobileDetect#os}, {@link MobileDetect#phone}, {@link MobileDetect#tablet}.<br>
                 *        Additionally you have following keys:<br>
                 * <br><tt>Bot, MobileBot, DesktopMode, TV, WebKit, Console, Watch</tt><br>
                 *
                 * @returns {boolean} <tt>true</tt> when the given key is one of the defined keys of userAgent, os, phone,
                 *                    tablet or one of the listed additional keys, otherwise <tt>false</tt>
                 * @function MobileDetect#is
                 */
                is: function (key) {
                    return containsIC(this.userAgents(), key) || equalIC(key, this.os()) || equalIC(key, this.phone()) || equalIC(key, this.tablet()) || containsIC(impl.findMatches(impl.mobileDetectRules.utils, this.ua), key);
                },

                /**
                 * Do a quick test against navigator::userAgent.
                 *
                 * @param {String|RegExp} pattern the pattern, either as String or RegExp
                 *                        (a string will be converted to a case-insensitive RegExp).
                 * @returns {boolean} <tt>true</tt> when the pattern matches, otherwise <tt>false</tt>
                 * @function MobileDetect#match
                 */
                match: function (pattern) {
                    if (!(pattern instanceof RegExp)) {
                        pattern = new RegExp(pattern, 'i');
                    }
                    return pattern.test(this.ua);
                },

                /**
                 * Checks whether the mobile device can be considered as phone regarding <code>screen.width</code>.
                 * <br>
                 * Obviously this method makes sense in browser environments only (not for Node.js)!
                 * @param {number} [maxPhoneWidth] the maximum logical pixels (aka. CSS-pixels) to be considered as phone.<br>
                 *        The argument is optional and if not present or falsy, the value of the constructor is taken.
                 * @returns {boolean|undefined} <code>undefined</code> if screen size wasn't detectable, else <code>true</code>
                 *          when screen.width is less or equal to maxPhoneWidth, otherwise <code>false</code>.<br>
                 *          Will always return <code>undefined</code> server-side.
                 */
                isPhoneSized: function (maxPhoneWidth) {
                    return MobileDetect.isPhoneSized(maxPhoneWidth || this.maxPhoneWidth);
                },

                /**
                 * Returns the mobile grade ('A', 'B', 'C').
                 *
                 * @returns {String} one of the mobile grades ('A', 'B', 'C').
                 * @function MobileDetect#mobileGrade
                 */
                mobileGrade: function () {
                    if (this._cache.grade === undefined) {
                        this._cache.grade = impl.mobileGrade(this);
                    }
                    return this._cache.grade;
                }
            };

            // environment-dependent
            if (typeof window !== 'undefined' && window.screen) {
                MobileDetect.isPhoneSized = function (maxPhoneWidth) {
                    return maxPhoneWidth < 0 ? undefined : impl.getDeviceSmallerSide() <= maxPhoneWidth;
                };
            } else {
                MobileDetect.isPhoneSized = function () {};
            }

            // should not be replaced by a completely new object - just overwrite existing methods
            MobileDetect._impl = impl;

            MobileDetect.version = '1.4.3 2018-09-08';

            return MobileDetect;
        }); // end of call of define()
    })(function (undefined) {
        if (typeof module !== 'undefined' && module.exports) {
            return function (factory) {
                module.exports = factory();
            };
        } else if (typeof undefined === 'function' && define.amd) {
            return undefined;
        } else if (typeof window !== 'undefined') {
            return function (factory) {
                window.MobileDetect = factory();
            };
        } else {
            // please file a bug if you get this error!
            throw new Error('unknown environment');
        }
    }());
});
System.registerDynamic("npm:mobile-detect@1.4.3.js", ["npm:mobile-detect@1.4.3/mobile-detect.js"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("npm:mobile-detect@1.4.3/mobile-detect.js");
});
System.registerDynamic("app/Constants.js", ["npm:mobile-detect@1.4.3.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const MobileDetect = $__require("npm:mobile-detect@1.4.3.js");
    let md = new MobileDetect(window.navigator.userAgent);
    exports.user = !!window.user;
    exports.mobile = !!md.mobile();
    exports.mobileOs = md.os();
    exports.loadDelay = 700;
    exports.u2fErrorCodes = {
        0: 'ok',
        1: 'other',
        2: 'bad request',
        3: 'configuration unsupported',
        4: 'device ineligible',
        5: 'timed out'
    };
    exports.sessionTypes = {
        admin: 'Admin',
        proxy: 'Service',
        user: 'User'
    };
    exports.operatingSystems = {
        linux: 'Linux',
        macos_1010: 'macOS 10.10',
        macos_1011: 'macOS 10.11',
        macos_1012: 'macOS 10.12',
        macos_1013: 'macOS 10.13',
        macos_1014: 'macOS 10.14',
        macos_1015: 'macOS 10.15',
        windows_xp: 'Windows XP',
        windows_7: 'Windows 7',
        windows_vista: 'Windows Vista',
        windows_8: 'Windows 8',
        windows_10: 'Windows 10',
        chrome_os: 'Chrome OS',
        ios_8: 'iOS 8',
        ios_9: 'iOS 9',
        ios_10: 'iOS 10',
        ios_11: 'iOS 11',
        ios_12: 'iOS 12',
        ios_13: 'iOS 13',
        android_4: 'Android KitKat 4.4',
        android_5: 'Android Lollipop 5.0',
        android_6: 'Android Marshmallow 6.0',
        android_7: 'Android Nougat 7.0',
        android_8: 'Android Oreo 8.0',
        android_9: 'Android Pie 9.0',
        android_10: 'Android Q 10.0',
        blackberry_10: 'Blackerry 10',
        windows_phone: 'Windows Phone',
        firefox_os: 'Firefox OS',
        kindle: 'Kindle'
    };
    exports.browsers = {
        chrome: 'Chrome',
        chrome_mobile: 'Chrome Mobile',
        safari: 'Safari',
        safari_mobile: 'Safari Mobile',
        firefox: 'Firefox',
        firefox_mobile: 'Firefox Mobile',
        edge: 'Microsoft Edge',
        internet_explorer: 'Internet Explorer',
        internet_explorer_mobile: 'Internet Explorer Mobile',
        opera: 'Opera',
        opera_mobile: 'Opera Mobile'
    };
    exports.locations = {
        US: 'United States',
        US_AL: 'Alabama, US',
        US_AK: 'Alaska, US',
        US_AZ: 'Arizona, US',
        US_AR: 'Arkansas, US',
        US_CA: 'California, US',
        US_CO: 'Colorado, US',
        US_CT: 'Connecticut, US',
        US_DE: 'Delaware, US',
        US_FL: 'Florida, US',
        US_GA: 'Georgia, US',
        US_HI: 'Hawaii, US',
        US_ID: 'Idaho, US',
        US_IL: 'Illinois, US',
        US_IN: 'Indiana, US',
        US_IA: 'Iowa, US',
        US_KS: 'Kansas, US',
        US_KY: 'Kentucky, US',
        US_LA: 'Louisiana, US',
        US_ME: 'Maine, US',
        US_MD: 'Maryland, US',
        US_MA: 'Massachusetts, US',
        US_MI: 'Michigan, US',
        US_MN: 'Minnesota, US',
        US_MS: 'Mississippi, US',
        US_MO: 'Missouri, US',
        US_MT: 'Montana, US',
        US_NE: 'Nebraska, US',
        US_NV: 'Nevada, US',
        US_NH: 'New Hampshire, US',
        US_NJ: 'New Jersey, US',
        US_NM: 'New Mexico, US',
        US_NY: 'New York, US',
        US_NC: 'North Carolina, US',
        US_ND: 'North Dakota, US',
        US_OH: 'Ohio, US',
        US_OK: 'Oklahoma, US',
        US_OR: 'Oregon, US',
        US_PA: 'Pennsylvania, US',
        US_RI: 'Rhode Island, US',
        US_SC: 'South Carolina, US',
        US_SD: 'South Dakota, US',
        US_TN: 'Tennessee, US',
        US_TX: 'Texas, US',
        US_UT: 'Utah, US',
        US_VT: 'Vermont, US',
        US_VA: 'Virginia, US',
        US_WA: 'Washington, US',
        US_DC: 'Washington DC, US',
        US_WV: 'West Virginia, US',
        US_WI: 'Wisconsin, US',
        US_WY: 'Wyoming, US',
        AF: 'Afghanistan',
        AX: 'Åland Islands',
        AL: 'Albania',
        DZ: 'Algeria',
        AS: 'American Samoa',
        AD: 'Andorra',
        AO: 'Angola',
        AI: 'Anguilla',
        AQ: 'Antarctica',
        AG: 'Antigua and Barbuda',
        AR: 'Argentina',
        AM: 'Armenia',
        AW: 'Aruba',
        AU: 'Australia',
        AT: 'Austria',
        AZ: 'Azerbaijan',
        BS: 'Bahamas',
        BH: 'Bahrain',
        BD: 'Bangladesh',
        BB: 'Barbados',
        BY: 'Belarus',
        BE: 'Belgium',
        BZ: 'Belize',
        BJ: 'Benin',
        BM: 'Bermuda',
        BT: 'Bhutan',
        BO: 'Bolivia',
        BQ: 'Bonaire',
        BA: 'Bosnia and Herzegovina',
        BW: 'Botswana',
        BV: 'Bouvet Island',
        BR: 'Brazil',
        IO: 'British Indian Ocean Territory',
        BN: 'Brunei Darussalam',
        BG: 'Bulgaria',
        BF: 'Burkina Faso',
        BI: 'Burundi',
        CV: 'Cabo Verde',
        KH: 'Cambodia',
        CM: 'Cameroon',
        CA: 'Canada',
        KY: 'Cayman Islands',
        CF: 'Central African Republic',
        TD: 'Chad',
        CL: 'Chile',
        CN: 'China',
        CX: 'Christmas Island',
        CC: 'Cocos Islands',
        CO: 'Colombia',
        KM: 'Comoros',
        CG: 'Congo',
        CD: 'Congo Democratic Republic',
        CK: 'Cook Islands',
        CR: 'Costa Rica',
        CI: 'Côte dIvoire',
        HR: 'Croatia',
        CU: 'Cuba',
        CW: 'Curaçao',
        CY: 'Cyprus',
        CZ: 'Czechia',
        DK: 'Denmark',
        DJ: 'Djibouti',
        DM: 'Dominica',
        DO: 'Dominican Republic',
        EC: 'Ecuador',
        EG: 'Egypt',
        SV: 'El Salvador',
        GQ: 'Equatorial Guinea',
        ER: 'Eritrea',
        EE: 'Estonia',
        ET: 'Ethiopia',
        FK: 'Falkland Islands',
        FO: 'Faroe Islands',
        FJ: 'Fiji',
        FI: 'Finland',
        FR: 'France',
        GF: 'French Guiana',
        PF: 'French Polynesia',
        TF: 'French Southern Territories',
        GA: 'Gabon',
        GM: 'Gambia',
        GE: 'Georgia',
        DE: 'Germany',
        GH: 'Ghana',
        GI: 'Gibraltar',
        GR: 'Greece',
        GL: 'Greenland',
        GD: 'Grenada',
        GP: 'Guadeloupe',
        GU: 'Guam',
        GT: 'Guatemala',
        GG: 'Guernsey',
        GN: 'Guinea',
        GW: 'Guinea-Bissau',
        GY: 'Guyana',
        HT: 'Haiti',
        HM: 'Heard Island and McDonald Islands',
        VA: 'Holy See',
        HN: 'Honduras',
        HK: 'Hong Kong',
        HU: 'Hungary',
        IS: 'Iceland',
        IN: 'India',
        ID: 'Indonesia',
        IR: 'Iran',
        IQ: 'Iraq',
        IE: 'Ireland',
        IM: 'Isle of Man',
        IL: 'Israel',
        IT: 'Italy',
        JM: 'Jamaica',
        JP: 'Japan',
        JE: 'Jersey',
        JO: 'Jordan',
        KZ: 'Kazakhstan',
        KE: 'Kenya',
        KI: 'Kiribati',
        KP: 'North Korea',
        KR: 'South Korea',
        KW: 'Kuwait',
        KG: 'Kyrgyzstan',
        LA: 'Lao Peoples',
        LV: 'Latvia',
        LB: 'Lebanon',
        LS: 'Lesotho',
        LR: 'Liberia',
        LY: 'Libya',
        LI: 'Liechtenstein',
        LT: 'Lithuania',
        LU: 'Luxembourg',
        MO: 'Macao',
        MK: 'Macedonia',
        MG: 'Madagascar',
        MW: 'Malawi',
        MY: 'Malaysia',
        MV: 'Maldives',
        ML: 'Mali',
        MT: 'Malta',
        MH: 'Marshall Islands',
        MQ: 'Martinique',
        MR: 'Mauritania',
        MU: 'Mauritius',
        YT: 'Mayotte',
        MX: 'Mexico',
        FM: 'Micronesia',
        MD: 'Moldova',
        MC: 'Monaco',
        MN: 'Mongolia',
        ME: 'Montenegro',
        MS: 'Montserrat',
        MA: 'Morocco',
        MZ: 'Mozambique',
        MM: 'Myanmar',
        NA: 'Namibia',
        NR: 'Nauru',
        NP: 'Nepal',
        NL: 'Netherlands',
        NC: 'New Caledonia',
        NZ: 'New Zealand',
        NI: 'Nicaragua',
        NE: 'Niger',
        NG: 'Nigeria',
        NU: 'Niue',
        NF: 'Norfolk Island',
        MP: 'Northern Mariana Islands',
        NO: 'Norway',
        OM: 'Oman',
        PK: 'Pakistan',
        PW: 'Palau',
        PS: 'Palestine, State of',
        PA: 'Panama',
        PG: 'Papua New Guinea',
        PY: 'Paraguay',
        PE: 'Peru',
        PH: 'Philippines',
        PN: 'Pitcairn',
        PL: 'Poland',
        PT: 'Portugal',
        PR: 'Puerto Rico',
        QA: 'Qatar',
        RE: 'Réunion',
        RO: 'Romania',
        RU: 'Russian Federation',
        RW: 'Rwanda',
        BL: 'Saint Barthélemy',
        SH: 'Saint Helena',
        KN: 'Saint Kitts and Nevis',
        LC: 'Saint Lucia',
        MF: 'Saint Martin',
        PM: 'Saint Pierre and Miquelon',
        VC: 'Saint Vincent and the Grenadines',
        WS: 'Samoa',
        SM: 'San Marino',
        ST: 'Sao Tome and Principe',
        SA: 'Saudi Arabia',
        SN: 'Senegal',
        RS: 'Serbia',
        SC: 'Seychelles',
        SL: 'Sierra Leone',
        SG: 'Singapore',
        SX: 'Sint Maarten',
        SK: 'Slovakia',
        SI: 'Slovenia',
        SB: 'Solomon Islands',
        SO: 'Somalia',
        ZA: 'South Africa',
        GS: 'South Georgia and the South Sandwich Islands',
        SS: 'South Sudan',
        ES: 'Spain',
        LK: 'Sri Lanka',
        SD: 'Sudan',
        SR: 'Suriname',
        SJ: 'Svalbard and Jan Mayen',
        SZ: 'Swaziland',
        SE: 'Sweden',
        CH: 'Switzerland',
        SY: 'Syrian Arab Republic',
        TW: 'Taiwan',
        TJ: 'Tajikistan',
        TZ: 'Tanzania',
        TH: 'Thailand',
        TL: 'Timor-Leste',
        TG: 'Togo',
        TK: 'Tokelau',
        TO: 'Tonga',
        TT: 'Trinidad and Tobago',
        TN: 'Tunisia',
        TR: 'Turkey',
        TM: 'Turkmenistan',
        TC: 'Turks and Caicos Islands',
        TV: 'Tuvalu',
        UG: 'Uganda',
        UA: 'Ukraine',
        AE: 'United Arab Emirates',
        GB: 'United Kingdom',
        UM: 'United States Minor Outlying Islands',
        UY: 'Uruguay',
        UZ: 'Uzbekistan',
        VU: 'Vanuatu',
        VE: 'Venezuela',
        VN: 'Viet Nam',
        VG: 'British Virgin Islands',
        VI: 'US Virgin Islands',
        WF: 'Wallis and Futuna',
        EH: 'Western Sahara',
        YE: 'Yemen',
        ZM: 'Zambia',
        ZW: 'Zimbabwe'
    };
    
});
System.registerDynamic("app/actions/SubscriptionActions.js", ["npm:superagent@4.1.0.js", "app/dispatcher/Dispatcher.js", "app/dispatcher/EventDispatcher.js", "app/Alert.js", "app/Csrf.js", "app/Loader.js", "app/types/SubscriptionTypes.js", "app/utils/MiscUtils.js", "app/Constants.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const SuperAgent = $__require("npm:superagent@4.1.0.js");
    const Dispatcher_1 = $__require("app/dispatcher/Dispatcher.js");
    const EventDispatcher_1 = $__require("app/dispatcher/EventDispatcher.js");
    const Alert = $__require("app/Alert.js");
    const Csrf = $__require("app/Csrf.js");
    const Loader_1 = $__require("app/Loader.js");
    const SubscriptionTypes = $__require("app/types/SubscriptionTypes.js");
    const MiscUtils = $__require("app/utils/MiscUtils.js");
    const Constants = $__require("app/Constants.js");
    let syncId;
    function sync(update) {
        let curSyncId = MiscUtils.uuid();
        syncId = curSyncId;
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.get('/subscription' + (update ? '/update' : '')).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (curSyncId !== syncId) {
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to sync subscription');
                    reject(err);
                    Dispatcher_1.default.dispatch({
                        type: SubscriptionTypes.SYNC,
                        data: {}
                    });
                    return;
                }
                Dispatcher_1.default.dispatch({
                    type: SubscriptionTypes.SYNC,
                    data: res.body
                });
                resolve();
            });
        });
    }
    exports.sync = sync;
    function activate(license) {
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.post('/subscription').send({
                license: license
            }).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to activate subscription');
                    reject(err);
                    return;
                }
                Dispatcher_1.default.dispatch({
                    type: SubscriptionTypes.SYNC,
                    data: res.body
                });
                resolve();
            });
        });
    }
    exports.activate = activate;
    function checkout(plan, card, email) {
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.post('https://app.pritunl.com/subscription').send({
                plan: plan,
                card: card,
                email: email
            }).set('Accept', 'application/json').end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to checkout');
                    reject(err);
                    return;
                }
                resolve(res.body.msg);
                sync(true);
            });
        });
    }
    exports.checkout = checkout;
    function payment(key, plan, card, email) {
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.put('https://app.pritunl.com/subscription').send({
                key: key,
                plan: plan,
                card: card,
                email: email
            }).set('Accept', 'application/json').end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to update payment');
                    reject(err);
                    return;
                }
                resolve();
                sync(true);
            });
        });
    }
    exports.payment = payment;
    function cancel(key) {
        let loader = new Loader_1.default().loading();
        return new Promise((resolve, reject) => {
            SuperAgent.delete('https://app.pritunl.com/subscription').send({
                key: key
            }).set('Accept', 'application/json').end((err, res) => {
                loader.done();
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to cancel subscription');
                    reject(err);
                    return;
                }
                resolve();
                sync(true);
            });
        });
    }
    exports.cancel = cancel;
    EventDispatcher_1.default.register(action => {
        switch (action.type) {
            case SubscriptionTypes.CHANGE:
                if (!Constants.user) {
                    sync(false);
                }
                break;
        }
    });
    
});
System.registerDynamic("app/components/Main.js", ["npm:react@16.7.0.js", "npm:react-router-dom@4.3.1.js", "app/Theme.js", "app/Constants.js", "app/stores/SubscriptionStore.js", "app/stores/OrganizationsStore.js", "app/components/LoadingBar.js", "app/components/Subscription.js", "app/components/Users.js", "app/components/UserDetailed.js", "app/components/Nodes.js", "app/components/Policies.js", "app/components/Certificates.js", "app/components/Organizations.js", "app/components/Datacenters.js", "app/components/Zones.js", "app/components/Blocks.js", "app/components/Vpcs.js", "app/components/Domains.js", "app/components/Storages.js", "app/components/Images.js", "app/components/Disks.js", "app/components/Instances.js", "app/components/Firewalls.js", "app/components/Authorities.js", "app/components/Logs.js", "app/components/Settings.js", "app/components/OrganizationSelect.js", "app/actions/UserActions.js", "app/actions/SessionActions.js", "app/actions/AuditActions.js", "app/actions/NodeActions.js", "app/actions/PolicyActions.js", "app/actions/CertificateActions.js", "app/actions/OrganizationActions.js", "app/actions/DatacenterActions.js", "app/actions/ZoneActions.js", "app/actions/BlockActions.js", "app/actions/VpcActions.js", "app/actions/DomainActions.js", "app/actions/StorageActions.js", "app/actions/ImageActions.js", "app/actions/DiskActions.js", "app/actions/InstanceActions.js", "app/actions/FirewallActions.js", "app/actions/AuthorityActions.js", "app/actions/LogActions.js", "app/actions/SettingsActions.js", "app/actions/SubscriptionActions.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const ReactRouter = $__require("npm:react-router-dom@4.3.1.js");
    const Theme = $__require("app/Theme.js");
    const Constants = $__require("app/Constants.js");
    const SubscriptionStore_1 = $__require("app/stores/SubscriptionStore.js");
    const OrganizationsStore_1 = $__require("app/stores/OrganizationsStore.js");
    const LoadingBar_1 = $__require("app/components/LoadingBar.js");
    const Subscription_1 = $__require("app/components/Subscription.js");
    const Users_1 = $__require("app/components/Users.js");
    const UserDetailed_1 = $__require("app/components/UserDetailed.js");
    const Nodes_1 = $__require("app/components/Nodes.js");
    const Policies_1 = $__require("app/components/Policies.js");
    const Certificates_1 = $__require("app/components/Certificates.js");
    const Organizations_1 = $__require("app/components/Organizations.js");
    const Datacenters_1 = $__require("app/components/Datacenters.js");
    const Zones_1 = $__require("app/components/Zones.js");
    const Blocks_1 = $__require("app/components/Blocks.js");
    const Vpcs_1 = $__require("app/components/Vpcs.js");
    const Domains_1 = $__require("app/components/Domains.js");
    const Storages_1 = $__require("app/components/Storages.js");
    const Images_1 = $__require("app/components/Images.js");
    const Disks_1 = $__require("app/components/Disks.js");
    const Instances_1 = $__require("app/components/Instances.js");
    const Firewalls_1 = $__require("app/components/Firewalls.js");
    const Authorities_1 = $__require("app/components/Authorities.js");
    const Logs_1 = $__require("app/components/Logs.js");
    const Settings_1 = $__require("app/components/Settings.js");
    const OrganizationSelect_1 = $__require("app/components/OrganizationSelect.js");
    const UserActions = $__require("app/actions/UserActions.js");
    const SessionActions = $__require("app/actions/SessionActions.js");
    const AuditActions = $__require("app/actions/AuditActions.js");
    const NodeActions = $__require("app/actions/NodeActions.js");
    const PolicyActions = $__require("app/actions/PolicyActions.js");
    const CertificateActions = $__require("app/actions/CertificateActions.js");
    const OrganizationActions = $__require("app/actions/OrganizationActions.js");
    const DatacenterActions = $__require("app/actions/DatacenterActions.js");
    const ZoneActions = $__require("app/actions/ZoneActions.js");
    const BlockActions = $__require("app/actions/BlockActions.js");
    const VpcActions = $__require("app/actions/VpcActions.js");
    const DomainActions = $__require("app/actions/DomainActions.js");
    const StorageActions = $__require("app/actions/StorageActions.js");
    const ImageActions = $__require("app/actions/ImageActions.js");
    const DiskActions = $__require("app/actions/DiskActions.js");
    const InstanceActions = $__require("app/actions/InstanceActions.js");
    const FirewallActions = $__require("app/actions/FirewallActions.js");
    const AuthorityActions = $__require("app/actions/AuthorityActions.js");
    const LogActions = $__require("app/actions/LogActions.js");
    const SettingsActions = $__require("app/actions/SettingsActions.js");
    const SubscriptionActions = $__require("app/actions/SubscriptionActions.js");
    const css = {
        card: {
            minWidth: '310px',
            maxWidth: '380px',
            width: 'calc(100% - 20px)',
            margin: '60px auto'
        },
        nav: {
            overflowX: 'auto',
            overflowY: 'auto',
            userSelect: 'none',
            height: 'auto'
        },
        navTitle: {
            flexWrap: 'wrap',
            height: 'auto'
        },
        navGroup: {
            flexWrap: 'wrap',
            height: 'auto',
            padding: '10px 0'
        },
        link: {
            padding: '0 8px',
            color: 'inherit'
        },
        sub: {
            color: 'inherit'
        },
        heading: {
            marginRight: '11px',
            fontSize: '18px',
            fontWeight: 'bold'
        }
    };
    class Main extends React.Component {
        constructor(props, context) {
            super(props, context);
            this.onChange = () => {
                this.setState(Object.assign({}, this.state, { subscription: SubscriptionStore_1.default.subscription, current: OrganizationsStore_1.default.current }));
            };
            this.state = {
                subscription: SubscriptionStore_1.default.subscription,
                current: OrganizationsStore_1.default.current,
                disabled: false
            };
        }
        componentDidMount() {
            if (!Constants.user) {
                SubscriptionStore_1.default.addChangeListener(this.onChange);
                SubscriptionActions.sync(false);
            } else {
                OrganizationsStore_1.default.addChangeListener(this.onChange);
                OrganizationActions.sync();
            }
        }
        componentWillUnmount() {
            if (!Constants.user) {
                SubscriptionStore_1.default.removeChangeListener(this.onChange);
            } else {
                OrganizationsStore_1.default.removeChangeListener(this.onChange);
            }
        }
        render() {
            if (!Constants.user && !this.state.subscription || Constants.user && this.state.current === undefined) {
                return React.createElement("div", null);
            }
            if (Constants.user && !this.state.current) {
                return React.createElement("div", null, React.createElement("div", { className: "bp3-callout bp3-intent-danger bp3-icon-error", style: css.card }, React.createElement("h4", { className: "bp3-callout-title" }, "No Organization"), "Account does not have access to any organizations", React.createElement("button", { className: "bp3-button bp3-minimal bp3-icon-log-out", onClick: () => {
                        window.location.href = '/logout';
                    } }, "Logout")));
            }
            return React.createElement(ReactRouter.HashRouter, null, React.createElement("div", null, React.createElement("nav", { className: "bp3-navbar layout horizontal", style: css.nav }, React.createElement("div", { className: "bp3-navbar-group bp3-align-left flex", style: css.navTitle }, React.createElement("div", { className: "bp3-navbar-heading", style: css.heading }, "Pritunl Cloud"), React.createElement(OrganizationSelect_1.default, { hidden: !Constants.user })), React.createElement("div", { className: "bp3-navbar-group bp3-align-right", style: css.navGroup }, React.createElement(ReactRouter.Link, { className: "bp3-button bp3-minimal bp3-icon-people", style: css.link, hidden: Constants.user, to: "/users" }, "Users"), React.createElement(ReactRouter.Link, { className: "bp3-button bp3-minimal bp3-icon-layers", style: css.link, hidden: Constants.user, to: "/nodes" }, "Nodes"), React.createElement(ReactRouter.Link, { className: "bp3-button bp3-minimal bp3-icon-filter", style: css.link, hidden: Constants.user, to: "/policies" }, "Policies"), React.createElement(ReactRouter.Link, { className: "bp3-button bp3-minimal bp3-icon-endorsed", style: css.link, hidden: Constants.user, to: "/certificates" }, "Certificates"), React.createElement(ReactRouter.Link, { className: "bp3-button bp3-minimal bp3-icon-people", style: css.link, hidden: Constants.user, to: "/organizations" }, "Organizations"), React.createElement(ReactRouter.Link, { className: "bp3-button bp3-minimal bp3-icon-cloud", style: css.link, hidden: Constants.user, to: "/datacenters" }, "Datacenters"), React.createElement(ReactRouter.Link, { className: "bp3-button bp3-minimal bp3-icon-layout-circle", style: css.link, hidden: Constants.user, to: "/zones" }, "Zones"), React.createElement(ReactRouter.Link, { className: "bp3-button bp3-minimal bp3-icon-ip-address", style: css.link, hidden: Constants.user, to: "/blocks" }, "IP Blocks"), React.createElement(ReactRouter.Link, { className: "bp3-button bp3-minimal bp3-icon-layout-auto", style: css.link, to: "/vpcs" }, "VPCs"), React.createElement(ReactRouter.Link, { className: "bp3-button bp3-minimal bp3-icon-map-marker", style: css.link, hidden: Constants.user, to: "/domains" }, "Domains"), React.createElement(ReactRouter.Link, { className: "bp3-button bp3-minimal bp3-icon-database", style: css.link, hidden: Constants.user, to: "/storages" }, "Storages"), React.createElement(ReactRouter.Link, { className: "bp3-button bp3-minimal bp3-icon-compressed", style: css.link, to: "/images" }, "Images"), React.createElement(ReactRouter.Link, { className: "bp3-button bp3-minimal bp3-icon-floppy-disk", style: css.link, to: "/disks" }, "Disks"), React.createElement(ReactRouter.Link, { className: "bp3-button bp3-minimal bp3-icon-dashboard", style: css.link, to: "/instances" }, "Instances"), React.createElement(ReactRouter.Link, { className: "bp3-button bp3-minimal bp3-icon-key", style: css.link, to: "/firewalls" }, "Firewalls"), React.createElement(ReactRouter.Link, { className: "bp3-button bp3-minimal bp3-icon-office", style: css.link, to: "/authorities" }, "Authorities"), React.createElement(ReactRouter.Link, { className: "bp3-button bp3-minimal bp3-icon-history", style: css.link, hidden: Constants.user, to: "/logs" }, "Logs"), React.createElement(ReactRouter.Link, { className: "bp3-button bp3-minimal bp3-icon-settings", style: css.link, hidden: Constants.user, to: "/settings" }, "Settings"), React.createElement(ReactRouter.Link, { to: "/subscription", style: css.sub, hidden: Constants.user }, React.createElement("button", { className: "bp3-button bp3-minimal bp3-icon-credit-card", style: css.link, onClick: () => {
                    SubscriptionActions.sync(true);
                } }, "Subscription")), React.createElement(ReactRouter.Route, { render: props => React.createElement("button", { className: "bp3-button bp3-minimal bp3-icon-refresh", disabled: this.state.disabled, onClick: () => {
                        let pathname = props.location.pathname;
                        this.setState(Object.assign({}, this.state, { disabled: true }));
                        if (pathname === '/users') {
                            UserActions.sync().then(() => {
                                this.setState(Object.assign({}, this.state, { disabled: false }));
                            }).catch(() => {
                                this.setState(Object.assign({}, this.state, { disabled: false }));
                            });
                        } else if (pathname.startsWith('/user/')) {
                            UserActions.reload().then(() => {
                                this.setState(Object.assign({}, this.state, { disabled: false }));
                            }).catch(() => {
                                this.setState(Object.assign({}, this.state, { disabled: false }));
                            });
                            SessionActions.reload().then(() => {
                                this.setState(Object.assign({}, this.state, { disabled: false }));
                            }).catch(() => {
                                this.setState(Object.assign({}, this.state, { disabled: false }));
                            });
                            AuditActions.reload().then(() => {
                                this.setState(Object.assign({}, this.state, { disabled: false }));
                            }).catch(() => {
                                this.setState(Object.assign({}, this.state, { disabled: false }));
                            });
                        } else if (pathname === '/nodes') {
                            NodeActions.sync().then(() => {
                                this.setState(Object.assign({}, this.state, { disabled: false }));
                            }).catch(() => {
                                this.setState(Object.assign({}, this.state, { disabled: false }));
                            });
                        } else if (pathname === '/policies') {
                            SettingsActions.sync();
                            PolicyActions.sync().then(() => {
                                this.setState(Object.assign({}, this.state, { disabled: false }));
                            }).catch(() => {
                                this.setState(Object.assign({}, this.state, { disabled: false }));
                            });
                        } else if (pathname === '/certificates') {
                            CertificateActions.sync().then(() => {
                                this.setState(Object.assign({}, this.state, { disabled: false }));
                            }).catch(() => {
                                this.setState(Object.assign({}, this.state, { disabled: false }));
                            });
                        } else if (pathname === '/organizations') {
                            OrganizationActions.sync().then(() => {
                                this.setState(Object.assign({}, this.state, { disabled: false }));
                            }).catch(() => {
                                this.setState(Object.assign({}, this.state, { disabled: false }));
                            });
                        } else if (pathname === '/datacenters') {
                            DatacenterActions.sync().then(() => {
                                this.setState(Object.assign({}, this.state, { disabled: false }));
                            }).catch(() => {
                                this.setState(Object.assign({}, this.state, { disabled: false }));
                            });
                        } else if (pathname === '/zones') {
                            ZoneActions.sync().then(() => {
                                this.setState(Object.assign({}, this.state, { disabled: false }));
                            }).catch(() => {
                                this.setState(Object.assign({}, this.state, { disabled: false }));
                            });
                        } else if (pathname === '/blocks') {
                            BlockActions.sync().then(() => {
                                this.setState(Object.assign({}, this.state, { disabled: false }));
                            }).catch(() => {
                                this.setState(Object.assign({}, this.state, { disabled: false }));
                            });
                        } else if (pathname === '/vpcs') {
                            VpcActions.sync().then(() => {
                                this.setState(Object.assign({}, this.state, { disabled: false }));
                            }).catch(() => {
                                this.setState(Object.assign({}, this.state, { disabled: false }));
                            });
                        } else if (pathname === '/domains') {
                            DomainActions.sync().then(() => {
                                this.setState(Object.assign({}, this.state, { disabled: false }));
                            }).catch(() => {
                                this.setState(Object.assign({}, this.state, { disabled: false }));
                            });
                        } else if (pathname === '/storages') {
                            StorageActions.sync().then(() => {
                                this.setState(Object.assign({}, this.state, { disabled: false }));
                            }).catch(() => {
                                this.setState(Object.assign({}, this.state, { disabled: false }));
                            });
                        } else if (pathname === '/images') {
                            ImageActions.sync().then(() => {
                                this.setState(Object.assign({}, this.state, { disabled: false }));
                            }).catch(() => {
                                this.setState(Object.assign({}, this.state, { disabled: false }));
                            });
                        } else if (pathname === '/disks') {
                            DiskActions.sync().then(() => {
                                this.setState(Object.assign({}, this.state, { disabled: false }));
                            }).catch(() => {
                                this.setState(Object.assign({}, this.state, { disabled: false }));
                            });
                        } else if (pathname === '/instances') {
                            InstanceActions.sync().then(() => {
                                this.setState(Object.assign({}, this.state, { disabled: false }));
                            }).catch(() => {
                                this.setState(Object.assign({}, this.state, { disabled: false }));
                            });
                        } else if (pathname === '/firewalls') {
                            FirewallActions.sync().then(() => {
                                this.setState(Object.assign({}, this.state, { disabled: false }));
                            }).catch(() => {
                                this.setState(Object.assign({}, this.state, { disabled: false }));
                            });
                        } else if (pathname === '/authorities') {
                            AuthorityActions.sync().then(() => {
                                this.setState(Object.assign({}, this.state, { disabled: false }));
                            }).catch(() => {
                                this.setState(Object.assign({}, this.state, { disabled: false }));
                            });
                        } else if (pathname === '/logs') {
                            LogActions.sync().then(() => {
                                this.setState(Object.assign({}, this.state, { disabled: false }));
                            }).catch(() => {
                                this.setState(Object.assign({}, this.state, { disabled: false }));
                            });
                        } else if (pathname === '/settings') {
                            SettingsActions.sync().then(() => {
                                this.setState(Object.assign({}, this.state, { disabled: false }));
                            }).catch(() => {
                                this.setState(Object.assign({}, this.state, { disabled: false }));
                            });
                        } else if (pathname === '/subscription') {
                            SubscriptionActions.sync(true).then(() => {
                                this.setState(Object.assign({}, this.state, { disabled: false }));
                            }).catch(() => {
                                this.setState(Object.assign({}, this.state, { disabled: false }));
                            });
                        } else {
                            this.setState(Object.assign({}, this.state, { disabled: false }));
                        }
                    } }, "Refresh") }), React.createElement("button", { className: "bp3-button bp3-minimal bp3-icon-log-out", onClick: () => {
                    window.location.href = '/logout';
                } }, "Logout"), React.createElement("button", { className: "bp3-button bp3-minimal bp3-icon-moon", onClick: () => {
                    Theme.toggle();
                    Theme.save();
                } }))), React.createElement(LoadingBar_1.default, { intent: "primary" }), React.createElement(ReactRouter.Route, { path: "/", exact: true, render: () => Constants.user ? React.createElement(Vpcs_1.default, null) : React.createElement(Users_1.default, null) }), React.createElement(ReactRouter.Route, { path: "/reload", render: () => React.createElement(ReactRouter.Redirect, { to: "/" }) }), React.createElement(ReactRouter.Route, { path: "/users", render: () => React.createElement(Users_1.default, null) }), React.createElement(ReactRouter.Route, { exact: true, path: "/user", render: () => React.createElement(UserDetailed_1.default, null) }), React.createElement(ReactRouter.Route, { path: "/user/:userId", render: props => React.createElement(UserDetailed_1.default, { userId: props.match.params.userId }) }), React.createElement(ReactRouter.Route, { path: "/nodes", render: () => React.createElement(Nodes_1.default, null) }), React.createElement(ReactRouter.Route, { path: "/policies", render: () => React.createElement(Policies_1.default, null) }), React.createElement(ReactRouter.Route, { path: "/certificates", render: () => React.createElement(Certificates_1.default, null) }), React.createElement(ReactRouter.Route, { path: "/organizations", render: () => React.createElement(Organizations_1.default, null) }), React.createElement(ReactRouter.Route, { path: "/datacenters", render: () => React.createElement(Datacenters_1.default, null) }), React.createElement(ReactRouter.Route, { path: "/zones", render: () => React.createElement(Zones_1.default, null) }), React.createElement(ReactRouter.Route, { path: "/blocks", render: () => React.createElement(Blocks_1.default, null) }), React.createElement(ReactRouter.Route, { path: "/vpcs", render: () => React.createElement(Vpcs_1.default, null) }), React.createElement(ReactRouter.Route, { path: "/domains", render: () => React.createElement(Domains_1.default, null) }), React.createElement(ReactRouter.Route, { path: "/storages", render: () => React.createElement(Storages_1.default, null) }), React.createElement(ReactRouter.Route, { path: "/images", render: () => React.createElement(Images_1.default, null) }), React.createElement(ReactRouter.Route, { path: "/disks", render: () => React.createElement(Disks_1.default, null) }), React.createElement(ReactRouter.Route, { path: "/instances", render: () => React.createElement(Instances_1.default, null) }), React.createElement(ReactRouter.Route, { path: "/firewalls", render: () => React.createElement(Firewalls_1.default, null) }), React.createElement(ReactRouter.Route, { path: "/authorities", render: () => React.createElement(Authorities_1.default, null) }), React.createElement(ReactRouter.Route, { path: "/logs", render: () => React.createElement(Logs_1.default, null) }), React.createElement(ReactRouter.Route, { path: "/settings", render: () => React.createElement(Settings_1.default, null) }), React.createElement(ReactRouter.Route, { path: "/subscription", render: () => React.createElement(Subscription_1.default, null) })));
        }
    }
    exports.default = Main;
    
});
System.registerDynamic('npm:fbjs@0.8.17/lib/invariant.js', ['github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var validateFormat = function validateFormat(format) {};
    if ('production' !== 'production') {
      validateFormat = function validateFormat(format) {
        if (format === undefined) {
          throw new Error('invariant requires an error message argument');
        }
      };
    }
    function invariant(condition, format, a, b, c, d, e, f) {
      validateFormat(format);
      if (!condition) {
        var error;
        if (format === undefined) {
          error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
        } else {
          var args = [a, b, c, d, e, f];
          var argIndex = 0;
          error = new Error(format.replace(/%s/g, function () {
            return args[argIndex++];
          }));
          error.name = 'Invariant Violation';
        }
        error.framesToPop = 1;
        throw error;
      }
    }
    module.exports = invariant;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:flux@3.1.3/lib/Dispatcher.js', ['npm:fbjs@0.8.17/lib/invariant.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    exports.__esModule = true;
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError('Cannot call a class as a function');
      }
    }
    var invariant = $__require('npm:fbjs@0.8.17/lib/invariant.js');
    var _prefix = 'ID_';
    var Dispatcher = function () {
      function Dispatcher() {
        _classCallCheck(this, Dispatcher);
        this._callbacks = {};
        this._isDispatching = false;
        this._isHandled = {};
        this._isPending = {};
        this._lastID = 1;
      }
      Dispatcher.prototype.register = function register(callback) {
        var id = _prefix + this._lastID++;
        this._callbacks[id] = callback;
        return id;
      };
      Dispatcher.prototype.unregister = function unregister(id) {
        !this._callbacks[id] ? 'production' !== 'production' ? invariant(false, 'Dispatcher.unregister(...): `%s` does not map to a registered callback.', id) : invariant(false) : undefined;
        delete this._callbacks[id];
      };
      Dispatcher.prototype.waitFor = function waitFor(ids) {
        !this._isDispatching ? 'production' !== 'production' ? invariant(false, 'Dispatcher.waitFor(...): Must be invoked while dispatching.') : invariant(false) : undefined;
        for (var ii = 0; ii < ids.length; ii++) {
          var id = ids[ii];
          if (this._isPending[id]) {
            !this._isHandled[id] ? 'production' !== 'production' ? invariant(false, 'Dispatcher.waitFor(...): Circular dependency detected while ' + 'waiting for `%s`.', id) : invariant(false) : undefined;
            continue;
          }
          !this._callbacks[id] ? 'production' !== 'production' ? invariant(false, 'Dispatcher.waitFor(...): `%s` does not map to a registered callback.', id) : invariant(false) : undefined;
          this._invokeCallback(id);
        }
      };
      Dispatcher.prototype.dispatch = function dispatch(payload) {
        !!this._isDispatching ? 'production' !== 'production' ? invariant(false, 'Dispatch.dispatch(...): Cannot dispatch in the middle of a dispatch.') : invariant(false) : undefined;
        this._startDispatching(payload);
        try {
          for (var id in this._callbacks) {
            if (this._isPending[id]) {
              continue;
            }
            this._invokeCallback(id);
          }
        } finally {
          this._stopDispatching();
        }
      };
      Dispatcher.prototype.isDispatching = function isDispatching() {
        return this._isDispatching;
      };
      Dispatcher.prototype._invokeCallback = function _invokeCallback(id) {
        this._isPending[id] = true;
        this._callbacks[id](this._pendingPayload);
        this._isHandled[id] = true;
      };
      Dispatcher.prototype._startDispatching = function _startDispatching(payload) {
        for (var id in this._callbacks) {
          this._isPending[id] = false;
          this._isHandled[id] = false;
        }
        this._pendingPayload = payload;
        this._isDispatching = true;
      };
      Dispatcher.prototype._stopDispatching = function _stopDispatching() {
        delete this._pendingPayload;
        this._isDispatching = false;
      };
      return Dispatcher;
    }();
    module.exports = Dispatcher;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:flux@3.1.3/index.js', ['npm:flux@3.1.3/lib/Dispatcher.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  module.exports.Dispatcher = $__require('npm:flux@3.1.3/lib/Dispatcher.js');
});
System.registerDynamic("npm:flux@3.1.3.js", ["npm:flux@3.1.3/index.js"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("npm:flux@3.1.3/index.js");
});
System.registerDynamic("app/dispatcher/EventDispatcher.js", ["npm:flux@3.1.3.js"], true, function ($__require, exports, module) {
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  const Flux = $__require("npm:flux@3.1.3.js");
  class EventDispatcher extends Flux.Dispatcher {}
  exports.default = new EventDispatcher();
  
});
System.registerDynamic("app/Event.js", ["app/dispatcher/EventDispatcher.js", "app/Csrf.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const EventDispatcher_1 = $__require("app/dispatcher/EventDispatcher.js");
    const Csrf = $__require("app/Csrf.js");
    let connected = false;
    function connect() {
        let url = '';
        let location = window.location;
        if (location.protocol === 'https:') {
            url += 'wss';
        } else {
            url += 'ws';
        }
        url += '://' + location.host + '/event?csrf_token=' + Csrf.token;
        let socket = new WebSocket(url);
        socket.addEventListener('close', () => {
            setTimeout(() => {
                connect();
            }, 500);
        });
        socket.addEventListener('message', evt => {
            console.log(JSON.parse(evt.data).data);
            EventDispatcher_1.default.dispatch(JSON.parse(evt.data).data);
        });
    }
    function init() {
        if (connected) {
            return;
        }
        connected = true;
        connect();
    }
    exports.init = init;
    
});
System.registerDynamic("app/License.js", ["npm:superagent@4.1.0.js", "app/Alert.js", "app/Csrf.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const SuperAgent = $__require("npm:superagent@4.1.0.js");
    const Alert = $__require("app/Alert.js");
    const Csrf = $__require("app/Csrf.js");
    exports.oracle = false;
    function save() {
        return new Promise((resolve, reject) => {
            SuperAgent.put('/license').send({
                oracle: exports.oracle
            }).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).end((err, res) => {
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to save license state');
                    reject(err);
                    return;
                }
                resolve();
            });
        });
    }
    exports.save = save;
    function setOracle(state) {
        exports.oracle = state;
    }
    exports.setOracle = setOracle;
    
});
System.registerDynamic('npm:component-emitter@1.2.1/index.js', [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;

  /**
   * Expose `Emitter`.
   */

  if (typeof module !== 'undefined') {
    module.exports = Emitter;
  }

  /**
   * Initialize a new `Emitter`.
   *
   * @api public
   */

  function Emitter(obj) {
    if (obj) return mixin(obj);
  };

  /**
   * Mixin the emitter properties.
   *
   * @param {Object} obj
   * @return {Object}
   * @api private
   */

  function mixin(obj) {
    for (var key in Emitter.prototype) {
      obj[key] = Emitter.prototype[key];
    }
    return obj;
  }

  /**
   * Listen on the given `event` with `fn`.
   *
   * @param {String} event
   * @param {Function} fn
   * @return {Emitter}
   * @api public
   */

  Emitter.prototype.on = Emitter.prototype.addEventListener = function (event, fn) {
    this._callbacks = this._callbacks || {};
    (this._callbacks['$' + event] = this._callbacks['$' + event] || []).push(fn);
    return this;
  };

  /**
   * Adds an `event` listener that will be invoked a single
   * time then automatically removed.
   *
   * @param {String} event
   * @param {Function} fn
   * @return {Emitter}
   * @api public
   */

  Emitter.prototype.once = function (event, fn) {
    function on() {
      this.off(event, on);
      fn.apply(this, arguments);
    }

    on.fn = fn;
    this.on(event, on);
    return this;
  };

  /**
   * Remove the given callback for `event` or all
   * registered callbacks.
   *
   * @param {String} event
   * @param {Function} fn
   * @return {Emitter}
   * @api public
   */

  Emitter.prototype.off = Emitter.prototype.removeListener = Emitter.prototype.removeAllListeners = Emitter.prototype.removeEventListener = function (event, fn) {
    this._callbacks = this._callbacks || {};

    // all
    if (0 == arguments.length) {
      this._callbacks = {};
      return this;
    }

    // specific event
    var callbacks = this._callbacks['$' + event];
    if (!callbacks) return this;

    // remove all handlers
    if (1 == arguments.length) {
      delete this._callbacks['$' + event];
      return this;
    }

    // remove specific handler
    var cb;
    for (var i = 0; i < callbacks.length; i++) {
      cb = callbacks[i];
      if (cb === fn || cb.fn === fn) {
        callbacks.splice(i, 1);
        break;
      }
    }
    return this;
  };

  /**
   * Emit `event` with the given args.
   *
   * @param {String} event
   * @param {Mixed} ...
   * @return {Emitter}
   */

  Emitter.prototype.emit = function (event) {
    this._callbacks = this._callbacks || {};
    var args = [].slice.call(arguments, 1),
        callbacks = this._callbacks['$' + event];

    if (callbacks) {
      callbacks = callbacks.slice(0);
      for (var i = 0, len = callbacks.length; i < len; ++i) {
        callbacks[i].apply(this, args);
      }
    }

    return this;
  };

  /**
   * Return array of callbacks for `event`.
   *
   * @param {String} event
   * @return {Array}
   * @api public
   */

  Emitter.prototype.listeners = function (event) {
    this._callbacks = this._callbacks || {};
    return this._callbacks['$' + event] || [];
  };

  /**
   * Check if this emitter has `event` handlers.
   *
   * @param {String} event
   * @return {Boolean}
   * @api public
   */

  Emitter.prototype.hasListeners = function (event) {
    return !!this.listeners(event).length;
  };
});
System.registerDynamic("npm:component-emitter@1.2.1.js", ["npm:component-emitter@1.2.1/index.js"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("npm:component-emitter@1.2.1/index.js");
});
System.registerDynamic('npm:base64-js@1.3.0/index.js', [], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.byteLength = byteLength;
  exports.toByteArray = toByteArray;
  exports.fromByteArray = fromByteArray;

  var lookup = [];
  var revLookup = [];
  var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;

  var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
  for (var i = 0, len = code.length; i < len; ++i) {
    lookup[i] = code[i];
    revLookup[code.charCodeAt(i)] = i;
  }

  // Support decoding URL-safe base64 strings, as Node.js does.
  // See: https://en.wikipedia.org/wiki/Base64#URL_applications
  revLookup['-'.charCodeAt(0)] = 62;
  revLookup['_'.charCodeAt(0)] = 63;

  function getLens(b64) {
    var len = b64.length;

    if (len % 4 > 0) {
      throw new Error('Invalid string. Length must be a multiple of 4');
    }

    // Trim off extra bytes after placeholder bytes are found
    // See: https://github.com/beatgammit/base64-js/issues/42
    var validLen = b64.indexOf('=');
    if (validLen === -1) validLen = len;

    var placeHoldersLen = validLen === len ? 0 : 4 - validLen % 4;

    return [validLen, placeHoldersLen];
  }

  // base64 is 4/3 + up to two characters of the original data
  function byteLength(b64) {
    var lens = getLens(b64);
    var validLen = lens[0];
    var placeHoldersLen = lens[1];
    return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;
  }

  function _byteLength(b64, validLen, placeHoldersLen) {
    return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;
  }

  function toByteArray(b64) {
    var tmp;
    var lens = getLens(b64);
    var validLen = lens[0];
    var placeHoldersLen = lens[1];

    var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));

    var curByte = 0;

    // if there are placeholders, only get up to the last complete 4 chars
    var len = placeHoldersLen > 0 ? validLen - 4 : validLen;

    for (var i = 0; i < len; i += 4) {
      tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];
      arr[curByte++] = tmp >> 16 & 0xFF;
      arr[curByte++] = tmp >> 8 & 0xFF;
      arr[curByte++] = tmp & 0xFF;
    }

    if (placeHoldersLen === 2) {
      tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;
      arr[curByte++] = tmp & 0xFF;
    }

    if (placeHoldersLen === 1) {
      tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;
      arr[curByte++] = tmp >> 8 & 0xFF;
      arr[curByte++] = tmp & 0xFF;
    }

    return arr;
  }

  function tripletToBase64(num) {
    return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F];
  }

  function encodeChunk(uint8, start, end) {
    var tmp;
    var output = [];
    for (var i = start; i < end; i += 3) {
      tmp = (uint8[i] << 16 & 0xFF0000) + (uint8[i + 1] << 8 & 0xFF00) + (uint8[i + 2] & 0xFF);
      output.push(tripletToBase64(tmp));
    }
    return output.join('');
  }

  function fromByteArray(uint8) {
    var tmp;
    var len = uint8.length;
    var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes
    var parts = [];
    var maxChunkLength = 16383; // must be multiple of 3

    // go through the array every three bytes, we'll deal with trailing stuff later
    for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
      parts.push(encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));
    }

    // pad the end with zeros, but make sure to not forget the extra bytes
    if (extraBytes === 1) {
      tmp = uint8[len - 1];
      parts.push(lookup[tmp >> 2] + lookup[tmp << 4 & 0x3F] + '==');
    } else if (extraBytes === 2) {
      tmp = (uint8[len - 2] << 8) + uint8[len - 1];
      parts.push(lookup[tmp >> 10] + lookup[tmp >> 4 & 0x3F] + lookup[tmp << 2 & 0x3F] + '=');
    }

    return parts.join('');
  }
});
System.registerDynamic("npm:base64-js@1.3.0.js", ["npm:base64-js@1.3.0/index.js"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("npm:base64-js@1.3.0/index.js");
});
System.registerDynamic("npm:ieee754@1.1.12/index.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  exports.read = function (buffer, offset, isLE, mLen, nBytes) {
    var e, m;
    var eLen = nBytes * 8 - mLen - 1;
    var eMax = (1 << eLen) - 1;
    var eBias = eMax >> 1;
    var nBits = -7;
    var i = isLE ? nBytes - 1 : 0;
    var d = isLE ? -1 : 1;
    var s = buffer[offset + i];

    i += d;

    e = s & (1 << -nBits) - 1;
    s >>= -nBits;
    nBits += eLen;
    for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}

    m = e & (1 << -nBits) - 1;
    e >>= -nBits;
    nBits += mLen;
    for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}

    if (e === 0) {
      e = 1 - eBias;
    } else if (e === eMax) {
      return m ? NaN : (s ? -1 : 1) * Infinity;
    } else {
      m = m + Math.pow(2, mLen);
      e = e - eBias;
    }
    return (s ? -1 : 1) * m * Math.pow(2, e - mLen);
  };

  exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
    var e, m, c;
    var eLen = nBytes * 8 - mLen - 1;
    var eMax = (1 << eLen) - 1;
    var eBias = eMax >> 1;
    var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;
    var i = isLE ? 0 : nBytes - 1;
    var d = isLE ? 1 : -1;
    var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;

    value = Math.abs(value);

    if (isNaN(value) || value === Infinity) {
      m = isNaN(value) ? 1 : 0;
      e = eMax;
    } else {
      e = Math.floor(Math.log(value) / Math.LN2);
      if (value * (c = Math.pow(2, -e)) < 1) {
        e--;
        c *= 2;
      }
      if (e + eBias >= 1) {
        value += rt / c;
      } else {
        value += rt * Math.pow(2, 1 - eBias);
      }
      if (value * c >= 2) {
        e++;
        c /= 2;
      }

      if (e + eBias >= eMax) {
        m = 0;
        e = eMax;
      } else if (e + eBias >= 1) {
        m = (value * c - 1) * Math.pow(2, mLen);
        e = e + eBias;
      } else {
        m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);
        e = 0;
      }
    }

    for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

    e = e << mLen | m;
    eLen += mLen;
    for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

    buffer[offset + i - d] |= s * 128;
  };
});
System.registerDynamic("npm:ieee754@1.1.12.js", ["npm:ieee754@1.1.12/index.js"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("npm:ieee754@1.1.12/index.js");
});
System.registerDynamic('npm:buffer@5.2.1/index.js', ['npm:base64-js@1.3.0.js', 'npm:ieee754@1.1.12.js'], true, function ($__require, exports, module) {
  /*!
   * The buffer module from node.js, for the browser.
   *
   * @author   Feross Aboukhadijeh <https://feross.org>
   * @license  MIT
   */
  /* eslint-disable no-proto */

  'use strict';

  var global = this || self,
      GLOBAL = global;
  var base64 = $__require('npm:base64-js@1.3.0.js');
  var ieee754 = $__require('npm:ieee754@1.1.12.js');

  exports.Buffer = Buffer;
  exports.SlowBuffer = SlowBuffer;
  exports.INSPECT_MAX_BYTES = 50;

  var K_MAX_LENGTH = 0x7fffffff;
  exports.kMaxLength = K_MAX_LENGTH;

  /**
   * If `Buffer.TYPED_ARRAY_SUPPORT`:
   *   === true    Use Uint8Array implementation (fastest)
   *   === false   Print warning and recommend using `buffer` v4.x which has an Object
   *               implementation (most compatible, even IE6)
   *
   * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
   * Opera 11.6+, iOS 4.2+.
   *
   * We report that the browser does not support typed arrays if the are not subclassable
   * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`
   * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support
   * for __proto__ and has a buggy typed array implementation.
   */
  Buffer.TYPED_ARRAY_SUPPORT = typedArraySupport();

  if (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' && typeof console.error === 'function') {
    console.error('This browser lacks typed array (Uint8Array) support which is required by ' + '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.');
  }

  function typedArraySupport() {
    // Can typed array instances can be augmented?
    try {
      var arr = new Uint8Array(1);
      arr.__proto__ = { __proto__: Uint8Array.prototype, foo: function () {
          return 42;
        } };
      return arr.foo() === 42;
    } catch (e) {
      return false;
    }
  }

  Object.defineProperty(Buffer.prototype, 'parent', {
    enumerable: true,
    get: function () {
      if (!Buffer.isBuffer(this)) return undefined;
      return this.buffer;
    }
  });

  Object.defineProperty(Buffer.prototype, 'offset', {
    enumerable: true,
    get: function () {
      if (!Buffer.isBuffer(this)) return undefined;
      return this.byteOffset;
    }
  });

  function createBuffer(length) {
    if (length > K_MAX_LENGTH) {
      throw new RangeError('The value "' + length + '" is invalid for option "size"');
    }
    // Return an augmented `Uint8Array` instance
    var buf = new Uint8Array(length);
    buf.__proto__ = Buffer.prototype;
    return buf;
  }

  /**
   * The Buffer constructor returns instances of `Uint8Array` that have their
   * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
   * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
   * and the `Uint8Array` methods. Square bracket notation works as expected -- it
   * returns a single octet.
   *
   * The `Uint8Array` prototype remains unmodified.
   */

  function Buffer(arg, encodingOrOffset, length) {
    // Common case.
    if (typeof arg === 'number') {
      if (typeof encodingOrOffset === 'string') {
        throw new TypeError('The "string" argument must be of type string. Received type number');
      }
      return allocUnsafe(arg);
    }
    return from(arg, encodingOrOffset, length);
  }

  // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
  if (typeof Symbol !== 'undefined' && Symbol.species != null && Buffer[Symbol.species] === Buffer) {
    Object.defineProperty(Buffer, Symbol.species, {
      value: null,
      configurable: true,
      enumerable: false,
      writable: false
    });
  }

  Buffer.poolSize = 8192; // not used by this implementation

  function from(value, encodingOrOffset, length) {
    if (typeof value === 'string') {
      return fromString(value, encodingOrOffset);
    }

    if (ArrayBuffer.isView(value)) {
      return fromArrayLike(value);
    }

    if (value == null) {
      throw TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' + 'or Array-like Object. Received type ' + typeof value);
    }

    if (isInstance(value, ArrayBuffer) || value && isInstance(value.buffer, ArrayBuffer)) {
      return fromArrayBuffer(value, encodingOrOffset, length);
    }

    if (typeof value === 'number') {
      throw new TypeError('The "value" argument must not be of type number. Received type number');
    }

    var valueOf = value.valueOf && value.valueOf();
    if (valueOf != null && valueOf !== value) {
      return Buffer.from(valueOf, encodingOrOffset, length);
    }

    var b = fromObject(value);
    if (b) return b;

    if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null && typeof value[Symbol.toPrimitive] === 'function') {
      return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length);
    }

    throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' + 'or Array-like Object. Received type ' + typeof value);
  }

  /**
   * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
   * if value is a number.
   * Buffer.from(str[, encoding])
   * Buffer.from(array)
   * Buffer.from(buffer)
   * Buffer.from(arrayBuffer[, byteOffset[, length]])
   **/
  Buffer.from = function (value, encodingOrOffset, length) {
    return from(value, encodingOrOffset, length);
  };

  // Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:
  // https://github.com/feross/buffer/pull/148
  Buffer.prototype.__proto__ = Uint8Array.prototype;
  Buffer.__proto__ = Uint8Array;

  function assertSize(size) {
    if (typeof size !== 'number') {
      throw new TypeError('"size" argument must be of type number');
    } else if (size < 0) {
      throw new RangeError('The value "' + size + '" is invalid for option "size"');
    }
  }

  function alloc(size, fill, encoding) {
    assertSize(size);
    if (size <= 0) {
      return createBuffer(size);
    }
    if (fill !== undefined) {
      // Only pay attention to encoding if it's a string. This
      // prevents accidentally sending in a number that would
      // be interpretted as a start offset.
      return typeof encoding === 'string' ? createBuffer(size).fill(fill, encoding) : createBuffer(size).fill(fill);
    }
    return createBuffer(size);
  }

  /**
   * Creates a new filled Buffer instance.
   * alloc(size[, fill[, encoding]])
   **/
  Buffer.alloc = function (size, fill, encoding) {
    return alloc(size, fill, encoding);
  };

  function allocUnsafe(size) {
    assertSize(size);
    return createBuffer(size < 0 ? 0 : checked(size) | 0);
  }

  /**
   * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
   * */
  Buffer.allocUnsafe = function (size) {
    return allocUnsafe(size);
  };
  /**
   * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
   */
  Buffer.allocUnsafeSlow = function (size) {
    return allocUnsafe(size);
  };

  function fromString(string, encoding) {
    if (typeof encoding !== 'string' || encoding === '') {
      encoding = 'utf8';
    }

    if (!Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding);
    }

    var length = byteLength(string, encoding) | 0;
    var buf = createBuffer(length);

    var actual = buf.write(string, encoding);

    if (actual !== length) {
      // Writing a hex string, for example, that contains invalid characters will
      // cause everything after the first invalid character to be ignored. (e.g.
      // 'abxxcd' will be treated as 'ab')
      buf = buf.slice(0, actual);
    }

    return buf;
  }

  function fromArrayLike(array) {
    var length = array.length < 0 ? 0 : checked(array.length) | 0;
    var buf = createBuffer(length);
    for (var i = 0; i < length; i += 1) {
      buf[i] = array[i] & 255;
    }
    return buf;
  }

  function fromArrayBuffer(array, byteOffset, length) {
    if (byteOffset < 0 || array.byteLength < byteOffset) {
      throw new RangeError('"offset" is outside of buffer bounds');
    }

    if (array.byteLength < byteOffset + (length || 0)) {
      throw new RangeError('"length" is outside of buffer bounds');
    }

    var buf;
    if (byteOffset === undefined && length === undefined) {
      buf = new Uint8Array(array);
    } else if (length === undefined) {
      buf = new Uint8Array(array, byteOffset);
    } else {
      buf = new Uint8Array(array, byteOffset, length);
    }

    // Return an augmented `Uint8Array` instance
    buf.__proto__ = Buffer.prototype;
    return buf;
  }

  function fromObject(obj) {
    if (Buffer.isBuffer(obj)) {
      var len = checked(obj.length) | 0;
      var buf = createBuffer(len);

      if (buf.length === 0) {
        return buf;
      }

      obj.copy(buf, 0, 0, len);
      return buf;
    }

    if (obj.length !== undefined) {
      if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {
        return createBuffer(0);
      }
      return fromArrayLike(obj);
    }

    if (obj.type === 'Buffer' && Array.isArray(obj.data)) {
      return fromArrayLike(obj.data);
    }
  }

  function checked(length) {
    // Note: cannot use `length < K_MAX_LENGTH` here because that fails when
    // length is NaN (which is otherwise coerced to zero.)
    if (length >= K_MAX_LENGTH) {
      throw new RangeError('Attempt to allocate Buffer larger than maximum ' + 'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes');
    }
    return length | 0;
  }

  function SlowBuffer(length) {
    if (+length != length) {
      // eslint-disable-line eqeqeq
      length = 0;
    }
    return Buffer.alloc(+length);
  }

  Buffer.isBuffer = function isBuffer(b) {
    return b != null && b._isBuffer === true && b !== Buffer.prototype; // so Buffer.isBuffer(Buffer.prototype) will be false
  };

  Buffer.compare = function compare(a, b) {
    if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength);
    if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength);
    if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
      throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
    }

    if (a === b) return 0;

    var x = a.length;
    var y = b.length;

    for (var i = 0, len = Math.min(x, y); i < len; ++i) {
      if (a[i] !== b[i]) {
        x = a[i];
        y = b[i];
        break;
      }
    }

    if (x < y) return -1;
    if (y < x) return 1;
    return 0;
  };

  Buffer.isEncoding = function isEncoding(encoding) {
    switch (String(encoding).toLowerCase()) {
      case 'hex':
      case 'utf8':
      case 'utf-8':
      case 'ascii':
      case 'latin1':
      case 'binary':
      case 'base64':
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return true;
      default:
        return false;
    }
  };

  Buffer.concat = function concat(list, length) {
    if (!Array.isArray(list)) {
      throw new TypeError('"list" argument must be an Array of Buffers');
    }

    if (list.length === 0) {
      return Buffer.alloc(0);
    }

    var i;
    if (length === undefined) {
      length = 0;
      for (i = 0; i < list.length; ++i) {
        length += list[i].length;
      }
    }

    var buffer = Buffer.allocUnsafe(length);
    var pos = 0;
    for (i = 0; i < list.length; ++i) {
      var buf = list[i];
      if (isInstance(buf, Uint8Array)) {
        buf = Buffer.from(buf);
      }
      if (!Buffer.isBuffer(buf)) {
        throw new TypeError('"list" argument must be an Array of Buffers');
      }
      buf.copy(buffer, pos);
      pos += buf.length;
    }
    return buffer;
  };

  function byteLength(string, encoding) {
    if (Buffer.isBuffer(string)) {
      return string.length;
    }
    if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {
      return string.byteLength;
    }
    if (typeof string !== 'string') {
      throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. ' + 'Received type ' + typeof string);
    }

    var len = string.length;
    var mustMatch = arguments.length > 2 && arguments[2] === true;
    if (!mustMatch && len === 0) return 0;

    // Use a for loop to avoid recursion
    var loweredCase = false;
    for (;;) {
      switch (encoding) {
        case 'ascii':
        case 'latin1':
        case 'binary':
          return len;
        case 'utf8':
        case 'utf-8':
          return utf8ToBytes(string).length;
        case 'ucs2':
        case 'ucs-2':
        case 'utf16le':
        case 'utf-16le':
          return len * 2;
        case 'hex':
          return len >>> 1;
        case 'base64':
          return base64ToBytes(string).length;
        default:
          if (loweredCase) {
            return mustMatch ? -1 : utf8ToBytes(string).length; // assume utf8
          }
          encoding = ('' + encoding).toLowerCase();
          loweredCase = true;
      }
    }
  }
  Buffer.byteLength = byteLength;

  function slowToString(encoding, start, end) {
    var loweredCase = false;

    // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
    // property of a typed array.

    // This behaves neither like String nor Uint8Array in that we set start/end
    // to their upper/lower bounds if the value passed is out of range.
    // undefined is handled specially as per ECMA-262 6th Edition,
    // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
    if (start === undefined || start < 0) {
      start = 0;
    }
    // Return early if start > this.length. Done here to prevent potential uint32
    // coercion fail below.
    if (start > this.length) {
      return '';
    }

    if (end === undefined || end > this.length) {
      end = this.length;
    }

    if (end <= 0) {
      return '';
    }

    // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
    end >>>= 0;
    start >>>= 0;

    if (end <= start) {
      return '';
    }

    if (!encoding) encoding = 'utf8';

    while (true) {
      switch (encoding) {
        case 'hex':
          return hexSlice(this, start, end);

        case 'utf8':
        case 'utf-8':
          return utf8Slice(this, start, end);

        case 'ascii':
          return asciiSlice(this, start, end);

        case 'latin1':
        case 'binary':
          return latin1Slice(this, start, end);

        case 'base64':
          return base64Slice(this, start, end);

        case 'ucs2':
        case 'ucs-2':
        case 'utf16le':
        case 'utf-16le':
          return utf16leSlice(this, start, end);

        default:
          if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);
          encoding = (encoding + '').toLowerCase();
          loweredCase = true;
      }
    }
  }

  // This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)
  // to detect a Buffer instance. It's not possible to use `instanceof Buffer`
  // reliably in a browserify context because there could be multiple different
  // copies of the 'buffer' package in use. This method works even for Buffer
  // instances that were created from another copy of the `buffer` package.
  // See: https://github.com/feross/buffer/issues/154
  Buffer.prototype._isBuffer = true;

  function swap(b, n, m) {
    var i = b[n];
    b[n] = b[m];
    b[m] = i;
  }

  Buffer.prototype.swap16 = function swap16() {
    var len = this.length;
    if (len % 2 !== 0) {
      throw new RangeError('Buffer size must be a multiple of 16-bits');
    }
    for (var i = 0; i < len; i += 2) {
      swap(this, i, i + 1);
    }
    return this;
  };

  Buffer.prototype.swap32 = function swap32() {
    var len = this.length;
    if (len % 4 !== 0) {
      throw new RangeError('Buffer size must be a multiple of 32-bits');
    }
    for (var i = 0; i < len; i += 4) {
      swap(this, i, i + 3);
      swap(this, i + 1, i + 2);
    }
    return this;
  };

  Buffer.prototype.swap64 = function swap64() {
    var len = this.length;
    if (len % 8 !== 0) {
      throw new RangeError('Buffer size must be a multiple of 64-bits');
    }
    for (var i = 0; i < len; i += 8) {
      swap(this, i, i + 7);
      swap(this, i + 1, i + 6);
      swap(this, i + 2, i + 5);
      swap(this, i + 3, i + 4);
    }
    return this;
  };

  Buffer.prototype.toString = function toString() {
    var length = this.length;
    if (length === 0) return '';
    if (arguments.length === 0) return utf8Slice(this, 0, length);
    return slowToString.apply(this, arguments);
  };

  Buffer.prototype.toLocaleString = Buffer.prototype.toString;

  Buffer.prototype.equals = function equals(b) {
    if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer');
    if (this === b) return true;
    return Buffer.compare(this, b) === 0;
  };

  Buffer.prototype.inspect = function inspect() {
    var str = '';
    var max = exports.INSPECT_MAX_BYTES;
    str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim();
    if (this.length > max) str += ' ... ';
    return '<Buffer ' + str + '>';
  };

  Buffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {
    if (isInstance(target, Uint8Array)) {
      target = Buffer.from(target, target.offset, target.byteLength);
    }
    if (!Buffer.isBuffer(target)) {
      throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. ' + 'Received type ' + typeof target);
    }

    if (start === undefined) {
      start = 0;
    }
    if (end === undefined) {
      end = target ? target.length : 0;
    }
    if (thisStart === undefined) {
      thisStart = 0;
    }
    if (thisEnd === undefined) {
      thisEnd = this.length;
    }

    if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
      throw new RangeError('out of range index');
    }

    if (thisStart >= thisEnd && start >= end) {
      return 0;
    }
    if (thisStart >= thisEnd) {
      return -1;
    }
    if (start >= end) {
      return 1;
    }

    start >>>= 0;
    end >>>= 0;
    thisStart >>>= 0;
    thisEnd >>>= 0;

    if (this === target) return 0;

    var x = thisEnd - thisStart;
    var y = end - start;
    var len = Math.min(x, y);

    var thisCopy = this.slice(thisStart, thisEnd);
    var targetCopy = target.slice(start, end);

    for (var i = 0; i < len; ++i) {
      if (thisCopy[i] !== targetCopy[i]) {
        x = thisCopy[i];
        y = targetCopy[i];
        break;
      }
    }

    if (x < y) return -1;
    if (y < x) return 1;
    return 0;
  };

  // Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
  // OR the last index of `val` in `buffer` at offset <= `byteOffset`.
  //
  // Arguments:
  // - buffer - a Buffer to search
  // - val - a string, Buffer, or number
  // - byteOffset - an index into `buffer`; will be clamped to an int32
  // - encoding - an optional encoding, relevant is val is a string
  // - dir - true for indexOf, false for lastIndexOf
  function bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {
    // Empty buffer means no match
    if (buffer.length === 0) return -1;

    // Normalize byteOffset
    if (typeof byteOffset === 'string') {
      encoding = byteOffset;
      byteOffset = 0;
    } else if (byteOffset > 0x7fffffff) {
      byteOffset = 0x7fffffff;
    } else if (byteOffset < -0x80000000) {
      byteOffset = -0x80000000;
    }
    byteOffset = +byteOffset; // Coerce to Number.
    if (numberIsNaN(byteOffset)) {
      // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
      byteOffset = dir ? 0 : buffer.length - 1;
    }

    // Normalize byteOffset: negative offsets start from the end of the buffer
    if (byteOffset < 0) byteOffset = buffer.length + byteOffset;
    if (byteOffset >= buffer.length) {
      if (dir) return -1;else byteOffset = buffer.length - 1;
    } else if (byteOffset < 0) {
      if (dir) byteOffset = 0;else return -1;
    }

    // Normalize val
    if (typeof val === 'string') {
      val = Buffer.from(val, encoding);
    }

    // Finally, search either indexOf (if dir is true) or lastIndexOf
    if (Buffer.isBuffer(val)) {
      // Special case: looking for empty string/buffer always fails
      if (val.length === 0) {
        return -1;
      }
      return arrayIndexOf(buffer, val, byteOffset, encoding, dir);
    } else if (typeof val === 'number') {
      val = val & 0xFF; // Search for a byte value [0-255]
      if (typeof Uint8Array.prototype.indexOf === 'function') {
        if (dir) {
          return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);
        } else {
          return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);
        }
      }
      return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);
    }

    throw new TypeError('val must be string, number or Buffer');
  }

  function arrayIndexOf(arr, val, byteOffset, encoding, dir) {
    var indexSize = 1;
    var arrLength = arr.length;
    var valLength = val.length;

    if (encoding !== undefined) {
      encoding = String(encoding).toLowerCase();
      if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') {
        if (arr.length < 2 || val.length < 2) {
          return -1;
        }
        indexSize = 2;
        arrLength /= 2;
        valLength /= 2;
        byteOffset /= 2;
      }
    }

    function read(buf, i) {
      if (indexSize === 1) {
        return buf[i];
      } else {
        return buf.readUInt16BE(i * indexSize);
      }
    }

    var i;
    if (dir) {
      var foundIndex = -1;
      for (i = byteOffset; i < arrLength; i++) {
        if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
          if (foundIndex === -1) foundIndex = i;
          if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;
        } else {
          if (foundIndex !== -1) i -= i - foundIndex;
          foundIndex = -1;
        }
      }
    } else {
      if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;
      for (i = byteOffset; i >= 0; i--) {
        var found = true;
        for (var j = 0; j < valLength; j++) {
          if (read(arr, i + j) !== read(val, j)) {
            found = false;
            break;
          }
        }
        if (found) return i;
      }
    }

    return -1;
  }

  Buffer.prototype.includes = function includes(val, byteOffset, encoding) {
    return this.indexOf(val, byteOffset, encoding) !== -1;
  };

  Buffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {
    return bidirectionalIndexOf(this, val, byteOffset, encoding, true);
  };

  Buffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {
    return bidirectionalIndexOf(this, val, byteOffset, encoding, false);
  };

  function hexWrite(buf, string, offset, length) {
    offset = Number(offset) || 0;
    var remaining = buf.length - offset;
    if (!length) {
      length = remaining;
    } else {
      length = Number(length);
      if (length > remaining) {
        length = remaining;
      }
    }

    var strLen = string.length;

    if (length > strLen / 2) {
      length = strLen / 2;
    }
    for (var i = 0; i < length; ++i) {
      var parsed = parseInt(string.substr(i * 2, 2), 16);
      if (numberIsNaN(parsed)) return i;
      buf[offset + i] = parsed;
    }
    return i;
  }

  function utf8Write(buf, string, offset, length) {
    return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);
  }

  function asciiWrite(buf, string, offset, length) {
    return blitBuffer(asciiToBytes(string), buf, offset, length);
  }

  function latin1Write(buf, string, offset, length) {
    return asciiWrite(buf, string, offset, length);
  }

  function base64Write(buf, string, offset, length) {
    return blitBuffer(base64ToBytes(string), buf, offset, length);
  }

  function ucs2Write(buf, string, offset, length) {
    return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);
  }

  Buffer.prototype.write = function write(string, offset, length, encoding) {
    // Buffer#write(string)
    if (offset === undefined) {
      encoding = 'utf8';
      length = this.length;
      offset = 0;
      // Buffer#write(string, encoding)
    } else if (length === undefined && typeof offset === 'string') {
      encoding = offset;
      length = this.length;
      offset = 0;
      // Buffer#write(string, offset[, length][, encoding])
    } else if (isFinite(offset)) {
      offset = offset >>> 0;
      if (isFinite(length)) {
        length = length >>> 0;
        if (encoding === undefined) encoding = 'utf8';
      } else {
        encoding = length;
        length = undefined;
      }
    } else {
      throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');
    }

    var remaining = this.length - offset;
    if (length === undefined || length > remaining) length = remaining;

    if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {
      throw new RangeError('Attempt to write outside buffer bounds');
    }

    if (!encoding) encoding = 'utf8';

    var loweredCase = false;
    for (;;) {
      switch (encoding) {
        case 'hex':
          return hexWrite(this, string, offset, length);

        case 'utf8':
        case 'utf-8':
          return utf8Write(this, string, offset, length);

        case 'ascii':
          return asciiWrite(this, string, offset, length);

        case 'latin1':
        case 'binary':
          return latin1Write(this, string, offset, length);

        case 'base64':
          // Warning: maxLength not taken into account in base64Write
          return base64Write(this, string, offset, length);

        case 'ucs2':
        case 'ucs-2':
        case 'utf16le':
        case 'utf-16le':
          return ucs2Write(this, string, offset, length);

        default:
          if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);
          encoding = ('' + encoding).toLowerCase();
          loweredCase = true;
      }
    }
  };

  Buffer.prototype.toJSON = function toJSON() {
    return {
      type: 'Buffer',
      data: Array.prototype.slice.call(this._arr || this, 0)
    };
  };

  function base64Slice(buf, start, end) {
    if (start === 0 && end === buf.length) {
      return base64.fromByteArray(buf);
    } else {
      return base64.fromByteArray(buf.slice(start, end));
    }
  }

  function utf8Slice(buf, start, end) {
    end = Math.min(buf.length, end);
    var res = [];

    var i = start;
    while (i < end) {
      var firstByte = buf[i];
      var codePoint = null;
      var bytesPerSequence = firstByte > 0xEF ? 4 : firstByte > 0xDF ? 3 : firstByte > 0xBF ? 2 : 1;

      if (i + bytesPerSequence <= end) {
        var secondByte, thirdByte, fourthByte, tempCodePoint;

        switch (bytesPerSequence) {
          case 1:
            if (firstByte < 0x80) {
              codePoint = firstByte;
            }
            break;
          case 2:
            secondByte = buf[i + 1];
            if ((secondByte & 0xC0) === 0x80) {
              tempCodePoint = (firstByte & 0x1F) << 0x6 | secondByte & 0x3F;
              if (tempCodePoint > 0x7F) {
                codePoint = tempCodePoint;
              }
            }
            break;
          case 3:
            secondByte = buf[i + 1];
            thirdByte = buf[i + 2];
            if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
              tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | thirdByte & 0x3F;
              if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
                codePoint = tempCodePoint;
              }
            }
            break;
          case 4:
            secondByte = buf[i + 1];
            thirdByte = buf[i + 2];
            fourthByte = buf[i + 3];
            if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
              tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | fourthByte & 0x3F;
              if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
                codePoint = tempCodePoint;
              }
            }
        }
      }

      if (codePoint === null) {
        // we did not generate a valid codePoint so insert a
        // replacement char (U+FFFD) and advance only 1 byte
        codePoint = 0xFFFD;
        bytesPerSequence = 1;
      } else if (codePoint > 0xFFFF) {
        // encode to utf16 (surrogate pair dance)
        codePoint -= 0x10000;
        res.push(codePoint >>> 10 & 0x3FF | 0xD800);
        codePoint = 0xDC00 | codePoint & 0x3FF;
      }

      res.push(codePoint);
      i += bytesPerSequence;
    }

    return decodeCodePointsArray(res);
  }

  // Based on http://stackoverflow.com/a/22747272/680742, the browser with
  // the lowest limit is Chrome, with 0x10000 args.
  // We go 1 magnitude less, for safety
  var MAX_ARGUMENTS_LENGTH = 0x1000;

  function decodeCodePointsArray(codePoints) {
    var len = codePoints.length;
    if (len <= MAX_ARGUMENTS_LENGTH) {
      return String.fromCharCode.apply(String, codePoints); // avoid extra slice()
    }

    // Decode in chunks to avoid "call stack size exceeded".
    var res = '';
    var i = 0;
    while (i < len) {
      res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));
    }
    return res;
  }

  function asciiSlice(buf, start, end) {
    var ret = '';
    end = Math.min(buf.length, end);

    for (var i = start; i < end; ++i) {
      ret += String.fromCharCode(buf[i] & 0x7F);
    }
    return ret;
  }

  function latin1Slice(buf, start, end) {
    var ret = '';
    end = Math.min(buf.length, end);

    for (var i = start; i < end; ++i) {
      ret += String.fromCharCode(buf[i]);
    }
    return ret;
  }

  function hexSlice(buf, start, end) {
    var len = buf.length;

    if (!start || start < 0) start = 0;
    if (!end || end < 0 || end > len) end = len;

    var out = '';
    for (var i = start; i < end; ++i) {
      out += toHex(buf[i]);
    }
    return out;
  }

  function utf16leSlice(buf, start, end) {
    var bytes = buf.slice(start, end);
    var res = '';
    for (var i = 0; i < bytes.length; i += 2) {
      res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);
    }
    return res;
  }

  Buffer.prototype.slice = function slice(start, end) {
    var len = this.length;
    start = ~~start;
    end = end === undefined ? len : ~~end;

    if (start < 0) {
      start += len;
      if (start < 0) start = 0;
    } else if (start > len) {
      start = len;
    }

    if (end < 0) {
      end += len;
      if (end < 0) end = 0;
    } else if (end > len) {
      end = len;
    }

    if (end < start) end = start;

    var newBuf = this.subarray(start, end);
    // Return an augmented `Uint8Array` instance
    newBuf.__proto__ = Buffer.prototype;
    return newBuf;
  };

  /*
   * Need to make sure that buffer isn't trying to write out of bounds.
   */
  function checkOffset(offset, ext, length) {
    if (offset % 1 !== 0 || offset < 0) throw new RangeError('offset is not uint');
    if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length');
  }

  Buffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {
    offset = offset >>> 0;
    byteLength = byteLength >>> 0;
    if (!noAssert) checkOffset(offset, byteLength, this.length);

    var val = this[offset];
    var mul = 1;
    var i = 0;
    while (++i < byteLength && (mul *= 0x100)) {
      val += this[offset + i] * mul;
    }

    return val;
  };

  Buffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {
    offset = offset >>> 0;
    byteLength = byteLength >>> 0;
    if (!noAssert) {
      checkOffset(offset, byteLength, this.length);
    }

    var val = this[offset + --byteLength];
    var mul = 1;
    while (byteLength > 0 && (mul *= 0x100)) {
      val += this[offset + --byteLength] * mul;
    }

    return val;
  };

  Buffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 1, this.length);
    return this[offset];
  };

  Buffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 2, this.length);
    return this[offset] | this[offset + 1] << 8;
  };

  Buffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 2, this.length);
    return this[offset] << 8 | this[offset + 1];
  };

  Buffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 4, this.length);

    return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 0x1000000;
  };

  Buffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 4, this.length);

    return this[offset] * 0x1000000 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);
  };

  Buffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {
    offset = offset >>> 0;
    byteLength = byteLength >>> 0;
    if (!noAssert) checkOffset(offset, byteLength, this.length);

    var val = this[offset];
    var mul = 1;
    var i = 0;
    while (++i < byteLength && (mul *= 0x100)) {
      val += this[offset + i] * mul;
    }
    mul *= 0x80;

    if (val >= mul) val -= Math.pow(2, 8 * byteLength);

    return val;
  };

  Buffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {
    offset = offset >>> 0;
    byteLength = byteLength >>> 0;
    if (!noAssert) checkOffset(offset, byteLength, this.length);

    var i = byteLength;
    var mul = 1;
    var val = this[offset + --i];
    while (i > 0 && (mul *= 0x100)) {
      val += this[offset + --i] * mul;
    }
    mul *= 0x80;

    if (val >= mul) val -= Math.pow(2, 8 * byteLength);

    return val;
  };

  Buffer.prototype.readInt8 = function readInt8(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 1, this.length);
    if (!(this[offset] & 0x80)) return this[offset];
    return (0xff - this[offset] + 1) * -1;
  };

  Buffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 2, this.length);
    var val = this[offset] | this[offset + 1] << 8;
    return val & 0x8000 ? val | 0xFFFF0000 : val;
  };

  Buffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 2, this.length);
    var val = this[offset + 1] | this[offset] << 8;
    return val & 0x8000 ? val | 0xFFFF0000 : val;
  };

  Buffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 4, this.length);

    return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;
  };

  Buffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 4, this.length);

    return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];
  };

  Buffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 4, this.length);
    return ieee754.read(this, offset, true, 23, 4);
  };

  Buffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 4, this.length);
    return ieee754.read(this, offset, false, 23, 4);
  };

  Buffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 8, this.length);
    return ieee754.read(this, offset, true, 52, 8);
  };

  Buffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 8, this.length);
    return ieee754.read(this, offset, false, 52, 8);
  };

  function checkInt(buf, value, offset, ext, max, min) {
    if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance');
    if (value > max || value < min) throw new RangeError('"value" argument is out of bounds');
    if (offset + ext > buf.length) throw new RangeError('Index out of range');
  }

  Buffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {
    value = +value;
    offset = offset >>> 0;
    byteLength = byteLength >>> 0;
    if (!noAssert) {
      var maxBytes = Math.pow(2, 8 * byteLength) - 1;
      checkInt(this, value, offset, byteLength, maxBytes, 0);
    }

    var mul = 1;
    var i = 0;
    this[offset] = value & 0xFF;
    while (++i < byteLength && (mul *= 0x100)) {
      this[offset + i] = value / mul & 0xFF;
    }

    return offset + byteLength;
  };

  Buffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {
    value = +value;
    offset = offset >>> 0;
    byteLength = byteLength >>> 0;
    if (!noAssert) {
      var maxBytes = Math.pow(2, 8 * byteLength) - 1;
      checkInt(this, value, offset, byteLength, maxBytes, 0);
    }

    var i = byteLength - 1;
    var mul = 1;
    this[offset + i] = value & 0xFF;
    while (--i >= 0 && (mul *= 0x100)) {
      this[offset + i] = value / mul & 0xFF;
    }

    return offset + byteLength;
  };

  Buffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);
    this[offset] = value & 0xff;
    return offset + 1;
  };

  Buffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);
    this[offset] = value & 0xff;
    this[offset + 1] = value >>> 8;
    return offset + 2;
  };

  Buffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);
    this[offset] = value >>> 8;
    this[offset + 1] = value & 0xff;
    return offset + 2;
  };

  Buffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);
    this[offset + 3] = value >>> 24;
    this[offset + 2] = value >>> 16;
    this[offset + 1] = value >>> 8;
    this[offset] = value & 0xff;
    return offset + 4;
  };

  Buffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);
    this[offset] = value >>> 24;
    this[offset + 1] = value >>> 16;
    this[offset + 2] = value >>> 8;
    this[offset + 3] = value & 0xff;
    return offset + 4;
  };

  Buffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) {
      var limit = Math.pow(2, 8 * byteLength - 1);

      checkInt(this, value, offset, byteLength, limit - 1, -limit);
    }

    var i = 0;
    var mul = 1;
    var sub = 0;
    this[offset] = value & 0xFF;
    while (++i < byteLength && (mul *= 0x100)) {
      if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
        sub = 1;
      }
      this[offset + i] = (value / mul >> 0) - sub & 0xFF;
    }

    return offset + byteLength;
  };

  Buffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) {
      var limit = Math.pow(2, 8 * byteLength - 1);

      checkInt(this, value, offset, byteLength, limit - 1, -limit);
    }

    var i = byteLength - 1;
    var mul = 1;
    var sub = 0;
    this[offset + i] = value & 0xFF;
    while (--i >= 0 && (mul *= 0x100)) {
      if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
        sub = 1;
      }
      this[offset + i] = (value / mul >> 0) - sub & 0xFF;
    }

    return offset + byteLength;
  };

  Buffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);
    if (value < 0) value = 0xff + value + 1;
    this[offset] = value & 0xff;
    return offset + 1;
  };

  Buffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);
    this[offset] = value & 0xff;
    this[offset + 1] = value >>> 8;
    return offset + 2;
  };

  Buffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);
    this[offset] = value >>> 8;
    this[offset + 1] = value & 0xff;
    return offset + 2;
  };

  Buffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);
    this[offset] = value & 0xff;
    this[offset + 1] = value >>> 8;
    this[offset + 2] = value >>> 16;
    this[offset + 3] = value >>> 24;
    return offset + 4;
  };

  Buffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);
    if (value < 0) value = 0xffffffff + value + 1;
    this[offset] = value >>> 24;
    this[offset + 1] = value >>> 16;
    this[offset + 2] = value >>> 8;
    this[offset + 3] = value & 0xff;
    return offset + 4;
  };

  function checkIEEE754(buf, value, offset, ext, max, min) {
    if (offset + ext > buf.length) throw new RangeError('Index out of range');
    if (offset < 0) throw new RangeError('Index out of range');
  }

  function writeFloat(buf, value, offset, littleEndian, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) {
      checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38);
    }
    ieee754.write(buf, value, offset, littleEndian, 23, 4);
    return offset + 4;
  }

  Buffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {
    return writeFloat(this, value, offset, true, noAssert);
  };

  Buffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {
    return writeFloat(this, value, offset, false, noAssert);
  };

  function writeDouble(buf, value, offset, littleEndian, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) {
      checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308);
    }
    ieee754.write(buf, value, offset, littleEndian, 52, 8);
    return offset + 8;
  }

  Buffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {
    return writeDouble(this, value, offset, true, noAssert);
  };

  Buffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {
    return writeDouble(this, value, offset, false, noAssert);
  };

  // copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
  Buffer.prototype.copy = function copy(target, targetStart, start, end) {
    if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer');
    if (!start) start = 0;
    if (!end && end !== 0) end = this.length;
    if (targetStart >= target.length) targetStart = target.length;
    if (!targetStart) targetStart = 0;
    if (end > 0 && end < start) end = start;

    // Copy 0 bytes; we're done
    if (end === start) return 0;
    if (target.length === 0 || this.length === 0) return 0;

    // Fatal error conditions
    if (targetStart < 0) {
      throw new RangeError('targetStart out of bounds');
    }
    if (start < 0 || start >= this.length) throw new RangeError('Index out of range');
    if (end < 0) throw new RangeError('sourceEnd out of bounds');

    // Are we oob?
    if (end > this.length) end = this.length;
    if (target.length - targetStart < end - start) {
      end = target.length - targetStart + start;
    }

    var len = end - start;

    if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {
      // Use built-in when available, missing from IE11
      this.copyWithin(targetStart, start, end);
    } else if (this === target && start < targetStart && targetStart < end) {
      // descending copy from end
      for (var i = len - 1; i >= 0; --i) {
        target[i + targetStart] = this[i + start];
      }
    } else {
      Uint8Array.prototype.set.call(target, this.subarray(start, end), targetStart);
    }

    return len;
  };

  // Usage:
  //    buffer.fill(number[, offset[, end]])
  //    buffer.fill(buffer[, offset[, end]])
  //    buffer.fill(string[, offset[, end]][, encoding])
  Buffer.prototype.fill = function fill(val, start, end, encoding) {
    // Handle string cases:
    if (typeof val === 'string') {
      if (typeof start === 'string') {
        encoding = start;
        start = 0;
        end = this.length;
      } else if (typeof end === 'string') {
        encoding = end;
        end = this.length;
      }
      if (encoding !== undefined && typeof encoding !== 'string') {
        throw new TypeError('encoding must be a string');
      }
      if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
        throw new TypeError('Unknown encoding: ' + encoding);
      }
      if (val.length === 1) {
        var code = val.charCodeAt(0);
        if (encoding === 'utf8' && code < 128 || encoding === 'latin1') {
          // Fast path: If `val` fits into a single byte, use that numeric value.
          val = code;
        }
      }
    } else if (typeof val === 'number') {
      val = val & 255;
    }

    // Invalid ranges are not set to a default, so can range check early.
    if (start < 0 || this.length < start || this.length < end) {
      throw new RangeError('Out of range index');
    }

    if (end <= start) {
      return this;
    }

    start = start >>> 0;
    end = end === undefined ? this.length : end >>> 0;

    if (!val) val = 0;

    var i;
    if (typeof val === 'number') {
      for (i = start; i < end; ++i) {
        this[i] = val;
      }
    } else {
      var bytes = Buffer.isBuffer(val) ? val : Buffer.from(val, encoding);
      var len = bytes.length;
      if (len === 0) {
        throw new TypeError('The value "' + val + '" is invalid for argument "value"');
      }
      for (i = 0; i < end - start; ++i) {
        this[i + start] = bytes[i % len];
      }
    }

    return this;
  };

  // HELPER FUNCTIONS
  // ================

  var INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g;

  function base64clean(str) {
    // Node takes equal signs as end of the Base64 encoding
    str = str.split('=')[0];
    // Node strips out invalid characters like \n and \t from the string, base64-js does not
    str = str.trim().replace(INVALID_BASE64_RE, '');
    // Node converts strings with length < 2 to ''
    if (str.length < 2) return '';
    // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
    while (str.length % 4 !== 0) {
      str = str + '=';
    }
    return str;
  }

  function toHex(n) {
    if (n < 16) return '0' + n.toString(16);
    return n.toString(16);
  }

  function utf8ToBytes(string, units) {
    units = units || Infinity;
    var codePoint;
    var length = string.length;
    var leadSurrogate = null;
    var bytes = [];

    for (var i = 0; i < length; ++i) {
      codePoint = string.charCodeAt(i);

      // is surrogate component
      if (codePoint > 0xD7FF && codePoint < 0xE000) {
        // last char was a lead
        if (!leadSurrogate) {
          // no lead yet
          if (codePoint > 0xDBFF) {
            // unexpected trail
            if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
            continue;
          } else if (i + 1 === length) {
            // unpaired lead
            if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
            continue;
          }

          // valid lead
          leadSurrogate = codePoint;

          continue;
        }

        // 2 leads in a row
        if (codePoint < 0xDC00) {
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
          leadSurrogate = codePoint;
          continue;
        }

        // valid surrogate pair
        codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;
      } else if (leadSurrogate) {
        // valid bmp char, but last char was a lead
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
      }

      leadSurrogate = null;

      // encode utf8
      if (codePoint < 0x80) {
        if ((units -= 1) < 0) break;
        bytes.push(codePoint);
      } else if (codePoint < 0x800) {
        if ((units -= 2) < 0) break;
        bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);
      } else if (codePoint < 0x10000) {
        if ((units -= 3) < 0) break;
        bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);
      } else if (codePoint < 0x110000) {
        if ((units -= 4) < 0) break;
        bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);
      } else {
        throw new Error('Invalid code point');
      }
    }

    return bytes;
  }

  function asciiToBytes(str) {
    var byteArray = [];
    for (var i = 0; i < str.length; ++i) {
      // Node's code seems to be doing this and not & 0x7F..
      byteArray.push(str.charCodeAt(i) & 0xFF);
    }
    return byteArray;
  }

  function utf16leToBytes(str, units) {
    var c, hi, lo;
    var byteArray = [];
    for (var i = 0; i < str.length; ++i) {
      if ((units -= 2) < 0) break;

      c = str.charCodeAt(i);
      hi = c >> 8;
      lo = c % 256;
      byteArray.push(lo);
      byteArray.push(hi);
    }

    return byteArray;
  }

  function base64ToBytes(str) {
    return base64.toByteArray(base64clean(str));
  }

  function blitBuffer(src, dst, offset, length) {
    for (var i = 0; i < length; ++i) {
      if (i + offset >= dst.length || i >= src.length) break;
      dst[i + offset] = src[i];
    }
    return i;
  }

  // ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass
  // the `instanceof` check but they should be treated as of that type.
  // See: https://github.com/feross/buffer/issues/166
  function isInstance(obj, type) {
    return obj instanceof type || obj != null && obj.constructor != null && obj.constructor.name != null && obj.constructor.name === type.name;
  }
  function numberIsNaN(obj) {
    // For IE11 support
    return obj !== obj; // eslint-disable-line no-self-compare
  }
});
System.registerDynamic("npm:buffer@5.2.1.js", ["npm:buffer@5.2.1/index.js"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("npm:buffer@5.2.1/index.js");
});
System.registerDynamic('github:jspm/nodelibs-buffer@0.1.1/index.js', ['npm:buffer@5.2.1.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  module.exports = System._nodeRequire ? System._nodeRequire('buffer') : $__require('npm:buffer@5.2.1.js');
});
System.registerDynamic("github:jspm/nodelibs-buffer@0.1.1.js", ["github:jspm/nodelibs-buffer@0.1.1/index.js"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("github:jspm/nodelibs-buffer@0.1.1/index.js");
});
System.registerDynamic('npm:superagent@4.1.0/lib/request-base.js', ['npm:superagent@4.1.0/lib/is-object.js', 'github:jspm/nodelibs-buffer@0.1.1.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (Buffer) {
    'use strict';

    const isObject = $__require('npm:superagent@4.1.0/lib/is-object.js');
    module.exports = RequestBase;
    function RequestBase(obj) {
      if (obj) return mixin(obj);
    }
    function mixin(obj) {
      for (const key in RequestBase.prototype) {
        obj[key] = RequestBase.prototype[key];
      }
      return obj;
    }
    RequestBase.prototype.clearTimeout = function _clearTimeout() {
      clearTimeout(this._timer);
      clearTimeout(this._responseTimeoutTimer);
      delete this._timer;
      delete this._responseTimeoutTimer;
      return this;
    };
    RequestBase.prototype.parse = function parse(fn) {
      this._parser = fn;
      return this;
    };
    RequestBase.prototype.responseType = function (val) {
      this._responseType = val;
      return this;
    };
    RequestBase.prototype.serialize = function serialize(fn) {
      this._serializer = fn;
      return this;
    };
    RequestBase.prototype.timeout = function timeout(options) {
      if (!options || 'object' !== typeof options) {
        this._timeout = options;
        this._responseTimeout = 0;
        return this;
      }
      for (const option in options) {
        switch (option) {
          case 'deadline':
            this._timeout = options.deadline;
            break;
          case 'response':
            this._responseTimeout = options.response;
            break;
          default:
            console.warn("Unknown timeout option", option);
        }
      }
      return this;
    };
    RequestBase.prototype.retry = function retry(count, fn) {
      if (arguments.length === 0 || count === true) count = 1;
      if (count <= 0) count = 0;
      this._maxRetries = count;
      this._retries = 0;
      this._retryCallback = fn;
      return this;
    };
    const ERROR_CODES = ['ECONNRESET', 'ETIMEDOUT', 'EADDRINFO', 'ESOCKETTIMEDOUT'];
    RequestBase.prototype._shouldRetry = function (err, res) {
      if (!this._maxRetries || this._retries++ >= this._maxRetries) {
        return false;
      }
      if (this._retryCallback) {
        try {
          const override = this._retryCallback(err, res);
          if (override === true) return true;
          if (override === false) return false;
        } catch (e) {
          console.error(e);
        }
      }
      if (res && res.status && res.status >= 500 && res.status != 501) return true;
      if (err) {
        if (err.code && ~ERROR_CODES.indexOf(err.code)) return true;
        if (err.timeout && err.code == 'ECONNABORTED') return true;
        if (err.crossDomain) return true;
      }
      return false;
    };
    RequestBase.prototype._retry = function () {
      this.clearTimeout();
      if (this.req) {
        this.req = null;
        this.req = this.request();
      }
      this._aborted = false;
      this.timedout = false;
      return this._end();
    };
    RequestBase.prototype.then = function then(resolve, reject) {
      if (!this._fullfilledPromise) {
        const self = this;
        if (this._endCalled) {
          console.warn("Warning: superagent request was sent twice, because both .end() and .then() were called. Never call .end() if you use promises");
        }
        this._fullfilledPromise = new Promise((innerResolve, innerReject) => {
          self.on('error', innerReject);
          self.on('abort', () => {
            const err = new Error('Aborted');
            err.code = "ABORTED";
            err.status = this.status;
            err.method = this.method;
            err.url = this.url;
            innerReject(err);
          });
          self.end((err, res) => {
            if (err) innerReject(err);else innerResolve(res);
          });
        });
      }
      return this._fullfilledPromise.then(resolve, reject);
    };
    RequestBase.prototype['catch'] = function (cb) {
      return this.then(undefined, cb);
    };
    RequestBase.prototype.use = function use(fn) {
      fn(this);
      return this;
    };
    RequestBase.prototype.ok = function (cb) {
      if ('function' !== typeof cb) throw Error("Callback required");
      this._okCallback = cb;
      return this;
    };
    RequestBase.prototype._isResponseOK = function (res) {
      if (!res) {
        return false;
      }
      if (this._okCallback) {
        return this._okCallback(res);
      }
      return res.status >= 200 && res.status < 300;
    };
    RequestBase.prototype.get = function (field) {
      return this._header[field.toLowerCase()];
    };
    RequestBase.prototype.getHeader = RequestBase.prototype.get;
    RequestBase.prototype.set = function (field, val) {
      if (isObject(field)) {
        for (const key in field) {
          this.set(key, field[key]);
        }
        return this;
      }
      this._header[field.toLowerCase()] = val;
      this.header[field] = val;
      return this;
    };
    RequestBase.prototype.unset = function (field) {
      delete this._header[field.toLowerCase()];
      delete this.header[field];
      return this;
    };
    RequestBase.prototype.field = function (name, val) {
      if (null === name || undefined === name) {
        throw new Error('.field(name, val) name can not be empty');
      }
      if (this._data) {
        throw new Error(".field() can't be used if .send() is used. Please use only .send() or only .field() & .attach()");
      }
      if (isObject(name)) {
        for (const key in name) {
          this.field(key, name[key]);
        }
        return this;
      }
      if (Array.isArray(val)) {
        for (const i in val) {
          this.field(name, val[i]);
        }
        return this;
      }
      if (null === val || undefined === val) {
        throw new Error('.field(name, val) val can not be empty');
      }
      if ('boolean' === typeof val) {
        val = '' + val;
      }
      this._getFormData().append(name, val);
      return this;
    };
    RequestBase.prototype.abort = function () {
      if (this._aborted) {
        return this;
      }
      this._aborted = true;
      this.xhr && this.xhr.abort();
      this.req && this.req.abort();
      this.clearTimeout();
      this.emit('abort');
      return this;
    };
    RequestBase.prototype._auth = function (user, pass, options, base64Encoder) {
      switch (options.type) {
        case 'basic':
          this.set('Authorization', `Basic ${base64Encoder(`${user}:${pass}`)}`);
          break;
        case 'auto':
          this.username = user;
          this.password = pass;
          break;
        case 'bearer':
          this.set('Authorization', `Bearer ${user}`);
          break;
      }
      return this;
    };
    RequestBase.prototype.withCredentials = function (on) {
      if (on == undefined) on = true;
      this._withCredentials = on;
      return this;
    };
    RequestBase.prototype.redirects = function (n) {
      this._maxRedirects = n;
      return this;
    };
    RequestBase.prototype.maxResponseSize = function (n) {
      if ('number' !== typeof n) {
        throw TypeError("Invalid argument");
      }
      this._maxResponseSize = n;
      return this;
    };
    RequestBase.prototype.toJSON = function () {
      return {
        method: this.method,
        url: this.url,
        data: this._data,
        headers: this._header
      };
    };
    RequestBase.prototype.send = function (data) {
      const isObj = isObject(data);
      let type = this._header['content-type'];
      if (this._formData) {
        throw new Error(".send() can't be used if .attach() or .field() is used. Please use only .send() or only .field() & .attach()");
      }
      if (isObj && !this._data) {
        if (Array.isArray(data)) {
          this._data = [];
        } else if (!this._isHost(data)) {
          this._data = {};
        }
      } else if (data && this._data && this._isHost(this._data)) {
        throw Error("Can't merge these send calls");
      }
      if (isObj && isObject(this._data)) {
        for (const key in data) {
          this._data[key] = data[key];
        }
      } else if ('string' == typeof data) {
        if (!type) this.type('form');
        type = this._header['content-type'];
        if ('application/x-www-form-urlencoded' == type) {
          this._data = this._data ? `${this._data}&${data}` : data;
        } else {
          this._data = (this._data || '') + data;
        }
      } else {
        this._data = data;
      }
      if (!isObj || this._isHost(data)) {
        return this;
      }
      if (!type) this.type('json');
      return this;
    };
    RequestBase.prototype.sortQuery = function (sort) {
      this._sort = typeof sort === 'undefined' ? true : sort;
      return this;
    };
    RequestBase.prototype._finalizeQueryString = function () {
      const query = this._query.join('&');
      if (query) {
        this.url += (this.url.indexOf('?') >= 0 ? '&' : '?') + query;
      }
      this._query.length = 0;
      if (this._sort) {
        const index = this.url.indexOf('?');
        if (index >= 0) {
          const queryArr = this.url.substring(index + 1).split('&');
          if ('function' === typeof this._sort) {
            queryArr.sort(this._sort);
          } else {
            queryArr.sort();
          }
          this.url = this.url.substring(0, index) + '?' + queryArr.join('&');
        }
      }
    };
    RequestBase.prototype._appendQueryString = () => {
      console.trace("Unsupported");
    };
    RequestBase.prototype._timeoutError = function (reason, timeout, errno) {
      if (this._aborted) {
        return;
      }
      const err = new Error(`${reason + timeout}ms exceeded`);
      err.timeout = timeout;
      err.code = 'ECONNABORTED';
      err.errno = errno;
      this.timedout = true;
      this.abort();
      this.callback(err);
    };
    RequestBase.prototype._setTimeouts = function () {
      const self = this;
      if (this._timeout && !this._timer) {
        this._timer = setTimeout(() => {
          self._timeoutError('Timeout of ', self._timeout, 'ETIME');
        }, this._timeout);
      }
      if (this._responseTimeout && !this._responseTimeoutTimer) {
        this._responseTimeoutTimer = setTimeout(() => {
          self._timeoutError('Response timeout of ', self._responseTimeout, 'ETIMEDOUT');
        }, this._responseTimeout);
      }
    };
  })($__require('github:jspm/nodelibs-buffer@0.1.1.js').Buffer);
});
System.registerDynamic('npm:superagent@4.1.0/lib/is-object.js', [], true, function ($__require, exports, module) {
  /* */
  'use strict';

  /**
   * Check if `obj` is an object.
   *
   * @param {Object} obj
   * @return {Boolean}
   * @api private
   */

  var global = this || self,
      GLOBAL = global;
  function isObject(obj) {
    return null !== obj && 'object' === typeof obj;
  }

  module.exports = isObject;
});
System.registerDynamic('npm:superagent@4.1.0/lib/utils.js', [], true, function ($__require, exports, module) {
  /* */
  'use strict';

  /**
   * Return the mime type for the given `str`.
   *
   * @param {String} str
   * @return {String}
   * @api private
   */

  var global = this || self,
      GLOBAL = global;
  exports.type = str => str.split(/ *; */).shift();

  /**
   * Return header field parameters.
   *
   * @param {String} str
   * @return {Object}
   * @api private
   */

  exports.params = str => str.split(/ *; */).reduce((obj, str) => {
    const parts = str.split(/ *= */);
    const key = parts.shift();
    const val = parts.shift();

    if (key && val) obj[key] = val;
    return obj;
  }, {});

  /**
   * Parse Link header fields.
   *
   * @param {String} str
   * @return {Object}
   * @api private
   */

  exports.parseLinks = str => str.split(/ *, */).reduce((obj, str) => {
    const parts = str.split(/ *; */);
    const url = parts[0].slice(1, -1);
    const rel = parts[1].split(/ *= */)[1].slice(1, -1);
    obj[rel] = url;
    return obj;
  }, {});

  /**
   * Strip content related fields from `header`.
   *
   * @param {Object} header
   * @return {Object} header
   * @api private
   */

  exports.cleanHeader = (header, changesOrigin) => {
    delete header['content-type'];
    delete header['content-length'];
    delete header['transfer-encoding'];
    delete header['host'];
    // secuirty
    if (changesOrigin) {
      delete header['authorization'];
      delete header['cookie'];
    }
    return header;
  };
});
System.registerDynamic('npm:superagent@4.1.0/lib/response-base.js', ['npm:superagent@4.1.0/lib/utils.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  const utils = $__require('npm:superagent@4.1.0/lib/utils.js');
  module.exports = ResponseBase;
  function ResponseBase(obj) {
    if (obj) return mixin(obj);
  }
  function mixin(obj) {
    for (const key in ResponseBase.prototype) {
      obj[key] = ResponseBase.prototype[key];
    }
    return obj;
  }
  ResponseBase.prototype.get = function (field) {
    return this.header[field.toLowerCase()];
  };
  ResponseBase.prototype._setHeaderProperties = function (header) {
    const ct = header['content-type'] || '';
    this.type = utils.type(ct);
    const params = utils.params(ct);
    for (const key in params) this[key] = params[key];
    this.links = {};
    try {
      if (header.link) {
        this.links = utils.parseLinks(header.link);
      }
    } catch (err) {}
  };
  ResponseBase.prototype._setStatusProperties = function (status) {
    const type = status / 100 | 0;
    this.status = this.statusCode = status;
    this.statusType = type;
    this.info = 1 == type;
    this.ok = 2 == type;
    this.redirect = 3 == type;
    this.clientError = 4 == type;
    this.serverError = 5 == type;
    this.error = 4 == type || 5 == type ? this.toError() : false;
    this.created = 201 == status;
    this.accepted = 202 == status;
    this.noContent = 204 == status;
    this.badRequest = 400 == status;
    this.unauthorized = 401 == status;
    this.notAcceptable = 406 == status;
    this.forbidden = 403 == status;
    this.notFound = 404 == status;
    this.unprocessableEntity = 422 == status;
  };
});
System.registerDynamic("npm:superagent@4.1.0/lib/agent-base.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  function Agent() {
    this._defaults = [];
  }

  ["use", "on", "once", "set", "query", "type", "accept", "auth", "withCredentials", "sortQuery", "retry", "ok", "redirects", "timeout", "buffer", "serialize", "parse", "ca", "key", "pfx", "cert"].forEach(fn => {
    /** Default setting for all requests from this agent */
    Agent.prototype[fn] = function (...args) {
      this._defaults.push({ fn, args });
      return this;
    };
  });

  Agent.prototype._setDefaults = function (req) {
    this._defaults.forEach(def => {
      req[def.fn].apply(req, def.args);
    });
  };

  module.exports = Agent;
});
System.registerDynamic('npm:superagent@4.1.0/lib/client.js', ['npm:component-emitter@1.2.1.js', 'npm:superagent@4.1.0/lib/request-base.js', 'npm:superagent@4.1.0/lib/is-object.js', 'npm:superagent@4.1.0/lib/response-base.js', 'npm:superagent@4.1.0/lib/agent-base.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  let root;
  if (typeof window !== 'undefined') {
    root = window;
  } else if (typeof self !== 'undefined') {
    root = self;
  } else {
    console.warn("Using browser-only version of superagent in non-browser environment");
    root = this;
  }
  const Emitter = $__require('npm:component-emitter@1.2.1.js');
  const RequestBase = $__require('npm:superagent@4.1.0/lib/request-base.js');
  const isObject = $__require('npm:superagent@4.1.0/lib/is-object.js');
  const ResponseBase = $__require('npm:superagent@4.1.0/lib/response-base.js');
  const Agent = $__require('npm:superagent@4.1.0/lib/agent-base.js');
  function noop() {}
  ;
  const request = exports = module.exports = function (method, url) {
    if ('function' == typeof url) {
      return new exports.Request('GET', method).end(url);
    }
    if (1 == arguments.length) {
      return new exports.Request('GET', method);
    }
    return new exports.Request(method, url);
  };
  exports.Request = Request;
  request.getXHR = () => {
    if (root.XMLHttpRequest && (!root.location || 'file:' != root.location.protocol || !root.ActiveXObject)) {
      return new XMLHttpRequest();
    } else {
      try {
        return new ActiveXObject('Microsoft.XMLHTTP');
      } catch (e) {}
      try {
        return new ActiveXObject('Msxml2.XMLHTTP.6.0');
      } catch (e) {}
      try {
        return new ActiveXObject('Msxml2.XMLHTTP.3.0');
      } catch (e) {}
      try {
        return new ActiveXObject('Msxml2.XMLHTTP');
      } catch (e) {}
    }
    throw Error("Browser-only version of superagent could not find XHR");
  };
  const trim = ''.trim ? s => s.trim() : s => s.replace(/(^\s*|\s*$)/g, '');
  function serialize(obj) {
    if (!isObject(obj)) return obj;
    const pairs = [];
    for (const key in obj) {
      pushEncodedKeyValuePair(pairs, key, obj[key]);
    }
    return pairs.join('&');
  }
  function pushEncodedKeyValuePair(pairs, key, val) {
    if (val != null) {
      if (Array.isArray(val)) {
        val.forEach(v => {
          pushEncodedKeyValuePair(pairs, key, v);
        });
      } else if (isObject(val)) {
        for (const subkey in val) {
          pushEncodedKeyValuePair(pairs, `${key}[${subkey}]`, val[subkey]);
        }
      } else {
        pairs.push(encodeURIComponent(key) + '=' + encodeURIComponent(val));
      }
    } else if (val === null) {
      pairs.push(encodeURIComponent(key));
    }
  }
  request.serializeObject = serialize;
  function parseString(str) {
    const obj = {};
    const pairs = str.split('&');
    let pair;
    let pos;
    for (let i = 0, len = pairs.length; i < len; ++i) {
      pair = pairs[i];
      pos = pair.indexOf('=');
      if (pos == -1) {
        obj[decodeURIComponent(pair)] = '';
      } else {
        obj[decodeURIComponent(pair.slice(0, pos))] = decodeURIComponent(pair.slice(pos + 1));
      }
    }
    return obj;
  }
  request.parseString = parseString;
  request.types = {
    html: 'text/html',
    json: 'application/json',
    xml: 'text/xml',
    urlencoded: 'application/x-www-form-urlencoded',
    'form': 'application/x-www-form-urlencoded',
    'form-data': 'application/x-www-form-urlencoded'
  };
  request.serialize = {
    'application/x-www-form-urlencoded': serialize,
    'application/json': JSON.stringify
  };
  request.parse = {
    'application/x-www-form-urlencoded': parseString,
    'application/json': JSON.parse
  };
  function parseHeader(str) {
    const lines = str.split(/\r?\n/);
    const fields = {};
    let index;
    let line;
    let field;
    let val;
    for (let i = 0, len = lines.length; i < len; ++i) {
      line = lines[i];
      index = line.indexOf(':');
      if (index === -1) {
        continue;
      }
      field = line.slice(0, index).toLowerCase();
      val = trim(line.slice(index + 1));
      fields[field] = val;
    }
    return fields;
  }
  function isJSON(mime) {
    return (/[\/+]json($|[^-\w])/.test(mime)
    );
  }
  function Response(req) {
    this.req = req;
    this.xhr = this.req.xhr;
    this.text = this.req.method != 'HEAD' && (this.xhr.responseType === '' || this.xhr.responseType === 'text') || typeof this.xhr.responseType === 'undefined' ? this.xhr.responseText : null;
    this.statusText = this.req.xhr.statusText;
    let status = this.xhr.status;
    if (status === 1223) {
      status = 204;
    }
    this._setStatusProperties(status);
    this.header = this.headers = parseHeader(this.xhr.getAllResponseHeaders());
    this.header['content-type'] = this.xhr.getResponseHeader('content-type');
    this._setHeaderProperties(this.header);
    if (null === this.text && req._responseType) {
      this.body = this.xhr.response;
    } else {
      this.body = this.req.method != 'HEAD' ? this._parseBody(this.text ? this.text : this.xhr.response) : null;
    }
  }
  ResponseBase(Response.prototype);
  Response.prototype._parseBody = function (str) {
    let parse = request.parse[this.type];
    if (this.req._parser) {
      return this.req._parser(this, str);
    }
    if (!parse && isJSON(this.type)) {
      parse = request.parse['application/json'];
    }
    return parse && str && (str.length || str instanceof Object) ? parse(str) : null;
  };
  Response.prototype.toError = function () {
    const req = this.req;
    const method = req.method;
    const url = req.url;
    const msg = `cannot ${method} ${url} (${this.status})`;
    const err = new Error(msg);
    err.status = this.status;
    err.method = method;
    err.url = url;
    return err;
  };
  request.Response = Response;
  function Request(method, url) {
    const self = this;
    this._query = this._query || [];
    this.method = method;
    this.url = url;
    this.header = {};
    this._header = {};
    this.on('end', () => {
      let err = null;
      let res = null;
      try {
        res = new Response(self);
      } catch (e) {
        err = new Error('Parser is unable to parse the response');
        err.parse = true;
        err.original = e;
        if (self.xhr) {
          err.rawResponse = typeof self.xhr.responseType == 'undefined' ? self.xhr.responseText : self.xhr.response;
          err.status = self.xhr.status ? self.xhr.status : null;
          err.statusCode = err.status;
        } else {
          err.rawResponse = null;
          err.status = null;
        }
        return self.callback(err);
      }
      self.emit('response', res);
      let new_err;
      try {
        if (!self._isResponseOK(res)) {
          new_err = new Error(res.statusText || 'Unsuccessful HTTP response');
        }
      } catch (custom_err) {
        new_err = custom_err;
      }
      if (new_err) {
        new_err.original = err;
        new_err.response = res;
        new_err.status = res.status;
        self.callback(new_err, res);
      } else {
        self.callback(null, res);
      }
    });
  }
  Emitter(Request.prototype);
  RequestBase(Request.prototype);
  Request.prototype.type = function (type) {
    this.set('Content-Type', request.types[type] || type);
    return this;
  };
  Request.prototype.accept = function (type) {
    this.set('Accept', request.types[type] || type);
    return this;
  };
  Request.prototype.auth = function (user, pass, options) {
    if (1 === arguments.length) pass = '';
    if (typeof pass === 'object' && pass !== null) {
      options = pass;
      pass = '';
    }
    if (!options) {
      options = { type: 'function' === typeof btoa ? 'basic' : 'auto' };
    }
    const encoder = string => {
      if ('function' === typeof btoa) {
        return btoa(string);
      }
      throw new Error('Cannot use basic auth, btoa is not a function');
    };
    return this._auth(user, pass, options, encoder);
  };
  Request.prototype.query = function (val) {
    if ('string' != typeof val) val = serialize(val);
    if (val) this._query.push(val);
    return this;
  };
  Request.prototype.attach = function (field, file, options) {
    if (file) {
      if (this._data) {
        throw Error("superagent can't mix .send() and .attach()");
      }
      this._getFormData().append(field, file, options || file.name);
    }
    return this;
  };
  Request.prototype._getFormData = function () {
    if (!this._formData) {
      this._formData = new root.FormData();
    }
    return this._formData;
  };
  Request.prototype.callback = function (err, res) {
    if (this._shouldRetry(err, res)) {
      return this._retry();
    }
    const fn = this._callback;
    this.clearTimeout();
    if (err) {
      if (this._maxRetries) err.retries = this._retries - 1;
      this.emit('error', err);
    }
    fn(err, res);
  };
  Request.prototype.crossDomainError = function () {
    const err = new Error('Request has been terminated\nPossible causes: the network is offline, Origin is not allowed by Access-Control-Allow-Origin, the page is being unloaded, etc.');
    err.crossDomain = true;
    err.status = this.status;
    err.method = this.method;
    err.url = this.url;
    this.callback(err);
  };
  Request.prototype.buffer = Request.prototype.ca = Request.prototype.agent = function () {
    console.warn("This is not supported in browser version of superagent");
    return this;
  };
  Request.prototype.pipe = Request.prototype.write = () => {
    throw Error("Streaming is not supported in browser version of superagent");
  };
  Request.prototype._isHost = function _isHost(obj) {
    return obj && 'object' === typeof obj && !Array.isArray(obj) && Object.prototype.toString.call(obj) !== '[object Object]';
  };
  Request.prototype.end = function (fn) {
    if (this._endCalled) {
      console.warn("Warning: .end() was called twice. This is not supported in superagent");
    }
    this._endCalled = true;
    this._callback = fn || noop;
    this._finalizeQueryString();
    this._end();
  };
  Request.prototype._end = function () {
    if (this._aborted) return this.callback(Error("The request has been aborted even before .end() was called"));
    const self = this;
    const xhr = this.xhr = request.getXHR();
    let data = this._formData || this._data;
    this._setTimeouts();
    xhr.onreadystatechange = () => {
      const readyState = xhr.readyState;
      if (readyState >= 2 && self._responseTimeoutTimer) {
        clearTimeout(self._responseTimeoutTimer);
      }
      if (4 != readyState) {
        return;
      }
      let status;
      try {
        status = xhr.status;
      } catch (e) {
        status = 0;
      }
      if (!status) {
        if (self.timedout || self._aborted) return;
        return self.crossDomainError();
      }
      self.emit('end');
    };
    const handleProgress = (direction, e) => {
      if (e.total > 0) {
        e.percent = e.loaded / e.total * 100;
      }
      e.direction = direction;
      self.emit('progress', e);
    };
    if (this.hasListeners('progress')) {
      try {
        xhr.onprogress = handleProgress.bind(null, 'download');
        if (xhr.upload) {
          xhr.upload.onprogress = handleProgress.bind(null, 'upload');
        }
      } catch (e) {}
    }
    try {
      if (this.username && this.password) {
        xhr.open(this.method, this.url, true, this.username, this.password);
      } else {
        xhr.open(this.method, this.url, true);
      }
    } catch (err) {
      return this.callback(err);
    }
    if (this._withCredentials) xhr.withCredentials = true;
    if (!this._formData && 'GET' != this.method && 'HEAD' != this.method && 'string' != typeof data && !this._isHost(data)) {
      const contentType = this._header['content-type'];
      let serialize = this._serializer || request.serialize[contentType ? contentType.split(';')[0] : ''];
      if (!serialize && isJSON(contentType)) {
        serialize = request.serialize['application/json'];
      }
      if (serialize) data = serialize(data);
    }
    for (const field in this.header) {
      if (null == this.header[field]) continue;
      if (this.header.hasOwnProperty(field)) xhr.setRequestHeader(field, this.header[field]);
    }
    if (this._responseType) {
      xhr.responseType = this._responseType;
    }
    this.emit('request', this);
    xhr.send(typeof data !== 'undefined' ? data : null);
  };
  request.agent = () => new Agent();
  ["GET", "POST", "OPTIONS", "PATCH", "PUT", "DELETE"].forEach(method => {
    Agent.prototype[method.toLowerCase()] = function (url, fn) {
      const req = new request.Request(method, url);
      this._setDefaults(req);
      if (fn) {
        req.end(fn);
      }
      return req;
    };
  });
  Agent.prototype.del = Agent.prototype['delete'];
  request.get = (url, data, fn) => {
    const req = request('GET', url);
    if ('function' == typeof data) fn = data, data = null;
    if (data) req.query(data);
    if (fn) req.end(fn);
    return req;
  };
  request.head = (url, data, fn) => {
    const req = request('HEAD', url);
    if ('function' == typeof data) fn = data, data = null;
    if (data) req.query(data);
    if (fn) req.end(fn);
    return req;
  };
  request.options = (url, data, fn) => {
    const req = request('OPTIONS', url);
    if ('function' == typeof data) fn = data, data = null;
    if (data) req.send(data);
    if (fn) req.end(fn);
    return req;
  };
  function del(url, data, fn) {
    const req = request('DELETE', url);
    if ('function' == typeof data) fn = data, data = null;
    if (data) req.send(data);
    if (fn) req.end(fn);
    return req;
  }
  request['del'] = del;
  request['delete'] = del;
  request.patch = (url, data, fn) => {
    const req = request('PATCH', url);
    if ('function' == typeof data) fn = data, data = null;
    if (data) req.send(data);
    if (fn) req.end(fn);
    return req;
  };
  request.post = (url, data, fn) => {
    const req = request('POST', url);
    if ('function' == typeof data) fn = data, data = null;
    if (data) req.send(data);
    if (fn) req.end(fn);
    return req;
  };
  request.put = (url, data, fn) => {
    const req = request('PUT', url);
    if ('function' == typeof data) fn = data, data = null;
    if (data) req.send(data);
    if (fn) req.end(fn);
    return req;
  };
});
System.registerDynamic("npm:superagent@4.1.0.js", ["npm:superagent@4.1.0/lib/client.js"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("npm:superagent@4.1.0/lib/client.js");
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/common/interactionMode.js", [], true, function ($__require, exports, module) {
    /* */
    "use strict";
    /*
     * Copyright 2016 Palantir Technologies, Inc. All rights reserved.
     *
     * Licensed under the terms of the LICENSE file distributed with this project.
     */

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    var TAB_KEY_CODE = 9;
    /* istanbul ignore next */
    /**
     * A nifty little class that maintains event handlers to add a class to the container element
     * when entering "mouse mode" (on a `mousedown` event) and remove it when entering "keyboard mode"
     * (on a `tab` key `keydown` event).
     */
    var InteractionModeEngine = /** @class */function () {
        // tslint:disable-next-line:no-constructor-vars
        function InteractionModeEngine(container, className) {
            var _this = this;
            this.container = container;
            this.className = className;
            this.isRunning = false;
            this.handleKeyDown = function (e) {
                if (e.which === TAB_KEY_CODE) {
                    _this.reset();
                    _this.container.addEventListener("mousedown", _this.handleMouseDown);
                }
            };
            this.handleMouseDown = function () {
                _this.reset();
                _this.container.classList.add(_this.className);
                _this.container.addEventListener("keydown", _this.handleKeyDown);
            };
        }
        /** Returns whether the engine is currently running. */
        InteractionModeEngine.prototype.isActive = function () {
            return this.isRunning;
        };
        /** Enable behavior which applies the given className when in mouse mode. */
        InteractionModeEngine.prototype.start = function () {
            this.container.addEventListener("mousedown", this.handleMouseDown);
            this.isRunning = true;
        };
        /** Disable interaction mode behavior and remove className from container. */
        InteractionModeEngine.prototype.stop = function () {
            this.reset();
            this.isRunning = false;
        };
        InteractionModeEngine.prototype.reset = function () {
            this.container.classList.remove(this.className);
            this.container.removeEventListener("keydown", this.handleKeyDown);
            this.container.removeEventListener("mousedown", this.handleMouseDown);
        };
        return InteractionModeEngine;
    }();
    exports.InteractionModeEngine = InteractionModeEngine;
    
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/accessibility/focusStyleManager.js", ["npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/interactionMode.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var classes_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js");
  var interactionMode_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/interactionMode.js");
  var fakeFocusEngine = {
    isActive: function () {
      return true;
    },
    start: function () {
      return true;
    },
    stop: function () {
      return true;
    }
  };
  var focusEngine = typeof document !== "undefined" ? new interactionMode_1.InteractionModeEngine(document.documentElement, classes_1.FOCUS_DISABLED) : fakeFocusEngine;
  exports.FocusStyleManager = {
    alwaysShowFocus: function () {
      return focusEngine.stop();
    },
    isActive: function () {
      return focusEngine.isActive();
    },
    onlyShowFocusOnTabs: function () {
      return focusEngine.start();
    }
  };
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/accessibility/index.js", ["npm:tslib@1.9.3.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/accessibility/focusStyleManager.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  tslib_1.__exportStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/accessibility/focusStyleManager.js"), exports);
});
System.registerDynamic('npm:dom4@2.1.4/build/dom4.max.js', [], true, function ($__require, exports, module) {
  /* */
  "format cjs";
  /*!
  Copyright (C) 2013-2015 by Andrea Giammarchi - @WebReflection
  
  Permission is hereby granted, free of charge, to any person obtaining a copy
  of this software and associated documentation files (the "Software"), to deal
  in the Software without restriction, including without limitation the rights
  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  copies of the Software, and to permit persons to whom the Software is
  furnished to do so, subject to the following conditions:
  
  The above copyright notice and this permission notice shall be included in
  all copies or substantial portions of the Software.
  
  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  THE SOFTWARE.
  
  */

  var global = this || self,
      GLOBAL = global;
  (function (window) {
    'use strict';
    /* jshint loopfunc: true, noempty: false*/
    // http://www.w3.org/TR/dom/#element

    function createDocumentFragment() {
      return document.createDocumentFragment();
    }

    function createElement(nodeName) {
      return document.createElement(nodeName);
    }

    function enoughArguments(length, name) {
      if (!length) throw new Error('Failed to construct ' + name + ': 1 argument required, but only 0 present.');
    }

    function mutationMacro(nodes) {
      if (nodes.length === 1) {
        return textNodeIfString(nodes[0]);
      }
      for (var fragment = createDocumentFragment(), list = slice.call(nodes), i = 0; i < nodes.length; i++) {
        fragment.appendChild(textNodeIfString(list[i]));
      }
      return fragment;
    }

    function textNodeIfString(node) {
      return typeof node === 'string' ? document.createTextNode(node) : node;
    }

    for (var head, property, TemporaryPrototype, TemporaryTokenList, wrapVerifyToken, document = window.document, hOP = Object.prototype.hasOwnProperty, defineProperty = Object.defineProperty || function (object, property, descriptor) {
      if (hOP.call(descriptor, 'value')) {
        object[property] = descriptor.value;
      } else {
        if (hOP.call(descriptor, 'get')) object.__defineGetter__(property, descriptor.get);
        if (hOP.call(descriptor, 'set')) object.__defineSetter__(property, descriptor.set);
      }
      return object;
    }, indexOf = [].indexOf || function indexOf(value) {
      var length = this.length;
      while (length--) {
        if (this[length] === value) {
          break;
        }
      }
      return length;
    },
    // http://www.w3.org/TR/domcore/#domtokenlist
    verifyToken = function (token) {
      if (!token) {
        throw 'SyntaxError';
      } else if (spaces.test(token)) {
        throw 'InvalidCharacterError';
      }
      return token;
    }, DOMTokenList = function (node) {
      var noClassName = typeof node.className === 'undefined',
          className = noClassName ? node.getAttribute('class') || '' : node.className,
          isSVG = noClassName || typeof className === 'object',
          value = (isSVG ? noClassName ? className : className.baseVal : className).replace(trim, '');
      if (value.length) {
        properties.push.apply(this, value.split(spaces));
      }
      this._isSVG = isSVG;
      this._ = node;
    }, classListDescriptor = {
      get: function get() {
        return new DOMTokenList(this);
      },
      set: function () {}
    }, trim = /^\s+|\s+$/g, spaces = /\s+/, SPACE = '\x20', CLASS_LIST = 'classList', toggle = function toggle(token, force) {
      if (this.contains(token)) {
        if (!force) {
          // force is not true (either false or omitted)
          this.remove(token);
        }
      } else if (force === undefined || force) {
        force = true;
        this.add(token);
      }
      return !!force;
    }, DocumentFragmentPrototype = window.DocumentFragment && DocumentFragment.prototype, Node = window.Node, NodePrototype = (Node || Element).prototype, CharacterData = window.CharacterData || Node, CharacterDataPrototype = CharacterData && CharacterData.prototype, DocumentType = window.DocumentType, DocumentTypePrototype = DocumentType && DocumentType.prototype, ElementPrototype = (window.Element || Node || window.HTMLElement).prototype, HTMLSelectElement = window.HTMLSelectElement || createElement('select').constructor, selectRemove = HTMLSelectElement.prototype.remove, SVGElement = window.SVGElement, properties = ['matches', ElementPrototype.matchesSelector || ElementPrototype.webkitMatchesSelector || ElementPrototype.khtmlMatchesSelector || ElementPrototype.mozMatchesSelector || ElementPrototype.msMatchesSelector || ElementPrototype.oMatchesSelector || function matches(selector) {
      var parentNode = this.parentNode;
      return !!parentNode && -1 < indexOf.call(parentNode.querySelectorAll(selector), this);
    }, 'closest', function closest(selector) {
      var parentNode = this,
          matches;
      while (
      // document has no .matches
      (matches = parentNode && parentNode.matches) && !parentNode.matches(selector)) {
        parentNode = parentNode.parentNode;
      }
      return matches ? parentNode : null;
    }, 'prepend', function prepend() {
      var firstChild = this.firstChild,
          node = mutationMacro(arguments);
      if (firstChild) {
        this.insertBefore(node, firstChild);
      } else {
        this.appendChild(node);
      }
    }, 'append', function append() {
      this.appendChild(mutationMacro(arguments));
    }, 'before', function before() {
      var parentNode = this.parentNode;
      if (parentNode) {
        parentNode.insertBefore(mutationMacro(arguments), this);
      }
    }, 'after', function after() {
      var parentNode = this.parentNode,
          nextSibling = this.nextSibling,
          node = mutationMacro(arguments);
      if (parentNode) {
        if (nextSibling) {
          parentNode.insertBefore(node, nextSibling);
        } else {
          parentNode.appendChild(node);
        }
      }
    },
    // https://dom.spec.whatwg.org/#dom-element-toggleattribute
    'toggleAttribute', function toggleAttribute(name, force) {
      var had = this.hasAttribute(name);
      if (1 < arguments.length) {
        if (had && !force) this.removeAttribute(name);else if (force && !had) this.setAttribute(name, "");
      } else if (had) this.removeAttribute(name);else this.setAttribute(name, "");
      return this.hasAttribute(name);
    },
    // WARNING - DEPRECATED - use .replaceWith() instead
    'replace', function replace() {
      this.replaceWith.apply(this, arguments);
    }, 'replaceWith', function replaceWith() {
      var parentNode = this.parentNode;
      if (parentNode) {
        parentNode.replaceChild(mutationMacro(arguments), this);
      }
    }, 'remove', function remove() {
      var parentNode = this.parentNode;
      if (parentNode) {
        parentNode.removeChild(this);
      }
    }], slice = properties.slice, i = properties.length; i; i -= 2) {
      property = properties[i - 2];
      if (!(property in ElementPrototype)) {
        ElementPrototype[property] = properties[i - 1];
      }
      // avoid unnecessary re-patch when the script is included
      // gazillion times without any reason whatsoever
      // https://github.com/WebReflection/dom4/pull/48
      if (property === 'remove' && !selectRemove._dom4) {
        // see https://github.com/WebReflection/dom4/issues/19
        (HTMLSelectElement.prototype[property] = function () {
          return 0 < arguments.length ? selectRemove.apply(this, arguments) : ElementPrototype.remove.call(this);
        })._dom4 = true;
      }
      // see https://github.com/WebReflection/dom4/issues/18
      if (/^(?:before|after|replace|replaceWith|remove)$/.test(property)) {
        if (CharacterData && !(property in CharacterDataPrototype)) {
          CharacterDataPrototype[property] = properties[i - 1];
        }
        if (DocumentType && !(property in DocumentTypePrototype)) {
          DocumentTypePrototype[property] = properties[i - 1];
        }
      }
      // see https://github.com/WebReflection/dom4/pull/26
      if (/^(?:append|prepend)$/.test(property)) {
        if (DocumentFragmentPrototype) {
          if (!(property in DocumentFragmentPrototype)) {
            DocumentFragmentPrototype[property] = properties[i - 1];
          }
        } else {
          try {
            createDocumentFragment().constructor.prototype[property] = properties[i - 1];
          } catch (o_O) {}
        }
      }
    }

    // most likely an IE9 only issue
    // see https://github.com/WebReflection/dom4/issues/6
    if (!createElement('a').matches('a')) {
      ElementPrototype[property] = function (matches) {
        return function (selector) {
          return matches.call(this.parentNode ? this : createDocumentFragment().appendChild(this), selector);
        };
      }(ElementPrototype[property]);
    }

    // used to fix both old webkit and SVG
    DOMTokenList.prototype = {
      length: 0,
      add: function add() {
        for (var j = 0, token; j < arguments.length; j++) {
          token = arguments[j];
          if (!this.contains(token)) {
            properties.push.call(this, property);
          }
        }
        if (this._isSVG) {
          this._.setAttribute('class', '' + this);
        } else {
          this._.className = '' + this;
        }
      },
      contains: function (indexOf) {
        return function contains(token) {
          i = indexOf.call(this, property = verifyToken(token));
          return -1 < i;
        };
      }([].indexOf || function (token) {
        i = this.length;
        while (i-- && this[i] !== token) {}
        return i;
      }),
      item: function item(i) {
        return this[i] || null;
      },
      remove: function remove() {
        for (var j = 0, token; j < arguments.length; j++) {
          token = arguments[j];
          if (this.contains(token)) {
            properties.splice.call(this, i, 1);
          }
        }
        if (this._isSVG) {
          this._.setAttribute('class', '' + this);
        } else {
          this._.className = '' + this;
        }
      },
      toggle: toggle,
      toString: function toString() {
        return properties.join.call(this, SPACE);
      }
    };

    if (SVGElement && !(CLASS_LIST in SVGElement.prototype)) {
      defineProperty(SVGElement.prototype, CLASS_LIST, classListDescriptor);
    }

    // http://www.w3.org/TR/dom/#domtokenlist
    // iOS 5.1 has completely screwed this property
    // classList in ElementPrototype is false
    // but it's actually there as getter
    if (!(CLASS_LIST in document.documentElement)) {
      defineProperty(ElementPrototype, CLASS_LIST, classListDescriptor);
    } else {
      // iOS 5.1 and Nokia ASHA do not support multiple add or remove
      // trying to detect and fix that in here
      TemporaryTokenList = createElement('div')[CLASS_LIST];
      TemporaryTokenList.add('a', 'b', 'a');
      if ('a\x20b' != TemporaryTokenList) {
        // no other way to reach original methods in iOS 5.1
        TemporaryPrototype = TemporaryTokenList.constructor.prototype;
        if (!('add' in TemporaryPrototype)) {
          // ASHA double fails in here
          TemporaryPrototype = window.TemporaryTokenList.prototype;
        }
        wrapVerifyToken = function (original) {
          return function () {
            var i = 0;
            while (i < arguments.length) {
              original.call(this, arguments[i++]);
            }
          };
        };
        TemporaryPrototype.add = wrapVerifyToken(TemporaryPrototype.add);
        TemporaryPrototype.remove = wrapVerifyToken(TemporaryPrototype.remove);
        // toggle is broken too ^_^ ... let's fix it
        TemporaryPrototype.toggle = toggle;
      }
    }

    if (!('contains' in NodePrototype)) {
      defineProperty(NodePrototype, 'contains', {
        value: function (el) {
          while (el && el !== this) el = el.parentNode;
          return this === el;
        }
      });
    }

    if (!('head' in document)) {
      defineProperty(document, 'head', {
        get: function () {
          return head || (head = document.getElementsByTagName('head')[0]);
        }
      });
    }

    // requestAnimationFrame partial polyfill
    (function () {
      for (var raf, rAF = window.requestAnimationFrame, cAF = window.cancelAnimationFrame, prefixes = ['o', 'ms', 'moz', 'webkit'], i = prefixes.length; !cAF && i--;) {
        rAF = rAF || window[prefixes[i] + 'RequestAnimationFrame'];
        cAF = window[prefixes[i] + 'CancelAnimationFrame'] || window[prefixes[i] + 'CancelRequestAnimationFrame'];
      }
      if (!cAF) {
        // some FF apparently implemented rAF but no cAF 
        if (rAF) {
          raf = rAF;
          rAF = function (callback) {
            var goOn = true;
            raf(function () {
              if (goOn) callback.apply(this, arguments);
            });
            return function () {
              goOn = false;
            };
          };
          cAF = function (id) {
            id();
          };
        } else {
          rAF = function (callback) {
            return setTimeout(callback, 15, 15);
          };
          cAF = function (id) {
            clearTimeout(id);
          };
        }
      }
      window.requestAnimationFrame = rAF;
      window.cancelAnimationFrame = cAF;
    })();

    // http://www.w3.org/TR/dom/#customevent
    try {
      new window.CustomEvent('?');
    } catch (o_O) {
      window.CustomEvent = function (eventName, defaultInitDict) {

        // the infamous substitute
        function CustomEvent(type, eventInitDict) {
          /*jshint eqnull:true */
          var event = document.createEvent(eventName);
          if (typeof type != 'string') {
            throw new Error('An event name must be provided');
          }
          if (eventName == 'Event') {
            event.initCustomEvent = initCustomEvent;
          }
          if (eventInitDict == null) {
            eventInitDict = defaultInitDict;
          }
          event.initCustomEvent(type, eventInitDict.bubbles, eventInitDict.cancelable, eventInitDict.detail);
          return event;
        }

        // attached at runtime
        function initCustomEvent(type, bubbles, cancelable, detail) {
          /*jshint validthis:true*/
          this.initEvent(type, bubbles, cancelable);
          this.detail = detail;
        }

        // that's it
        return CustomEvent;
      }(
      // is this IE9 or IE10 ?
      // where CustomEvent is there
      // but not usable as construtor ?
      window.CustomEvent ?
      // use the CustomEvent interface in such case
      'CustomEvent' : 'Event',
      // otherwise the common compatible one
      {
        bubbles: false,
        cancelable: false,
        detail: null
      });
    }

    // window.Event as constructor
    try {
      new Event('_');
    } catch (o_O) {
      /* jshint -W022 */
      o_O = function ($Event) {
        function Event(type, init) {
          enoughArguments(arguments.length, 'Event');
          var out = document.createEvent('Event');
          if (!init) init = {};
          out.initEvent(type, !!init.bubbles, !!init.cancelable);
          return out;
        }
        Event.prototype = $Event.prototype;
        return Event;
      }(window.Event || function Event() {});
      defineProperty(window, 'Event', { value: o_O });
      // Android 4 gotcha
      if (Event !== o_O) Event = o_O;
    }

    // window.KeyboardEvent as constructor
    try {
      new KeyboardEvent('_', {});
    } catch (o_O) {
      /* jshint -W022 */
      o_O = function ($KeyboardEvent) {
        // code inspired by https://gist.github.com/termi/4654819
        var initType = 0,
            defaults = {
          char: '',
          key: '',
          location: 0,
          ctrlKey: false,
          shiftKey: false,
          altKey: false,
          metaKey: false,
          altGraphKey: false,
          repeat: false,
          locale: navigator.language,
          detail: 0,
          bubbles: false,
          cancelable: false,
          keyCode: 0,
          charCode: 0,
          which: 0
        },
            eventType;
        try {
          var e = document.createEvent('KeyboardEvent');
          e.initKeyboardEvent('keyup', false, false, window, '+', 3, true, false, true, false, false);
          initType = (e.keyIdentifier || e.key) == '+' && (e.keyLocation || e.location) == 3 && (e.ctrlKey ? e.altKey ? 1 : 3 : e.shiftKey ? 2 : 4) || 9;
        } catch (o_O) {}
        eventType = 0 < initType ? 'KeyboardEvent' : 'Event';

        function getModifier(init) {
          for (var out = [], keys = ['ctrlKey', 'Control', 'shiftKey', 'Shift', 'altKey', 'Alt', 'metaKey', 'Meta', 'altGraphKey', 'AltGraph'], i = 0; i < keys.length; i += 2) {
            if (init[keys[i]]) out.push(keys[i + 1]);
          }
          return out.join(' ');
        }

        function withDefaults(target, source) {
          for (var key in source) {
            if (source.hasOwnProperty(key) && !source.hasOwnProperty.call(target, key)) target[key] = source[key];
          }
          return target;
        }

        function withInitValues(key, out, init) {
          try {
            out[key] = init[key];
          } catch (o_O) {}
        }

        function KeyboardEvent(type, init) {
          enoughArguments(arguments.length, 'KeyboardEvent');
          init = withDefaults(init || {}, defaults);
          var out = document.createEvent(eventType),
              ctrlKey = init.ctrlKey,
              shiftKey = init.shiftKey,
              altKey = init.altKey,
              metaKey = init.metaKey,
              altGraphKey = init.altGraphKey,
              modifiers = initType > 3 ? getModifier(init) : null,
              key = String(init.key),
              chr = String(init.char),
              location = init.location,
              keyCode = init.keyCode || (init.keyCode = key) && key.charCodeAt(0) || 0,
              charCode = init.charCode || (init.charCode = chr) && chr.charCodeAt(0) || 0,
              bubbles = init.bubbles,
              cancelable = init.cancelable,
              repeat = init.repeat,
              locale = init.locale,
              view = init.view || window,
              args;
          if (!init.which) init.which = init.keyCode;
          if ('initKeyEvent' in out) {
            out.initKeyEvent(type, bubbles, cancelable, view, ctrlKey, altKey, shiftKey, metaKey, keyCode, charCode);
          } else if (0 < initType && 'initKeyboardEvent' in out) {
            args = [type, bubbles, cancelable, view];
            switch (initType) {
              case 1:
                args.push(key, location, ctrlKey, shiftKey, altKey, metaKey, altGraphKey);
                break;
              case 2:
                args.push(ctrlKey, altKey, shiftKey, metaKey, keyCode, charCode);
                break;
              case 3:
                args.push(key, location, ctrlKey, altKey, shiftKey, metaKey, altGraphKey);
                break;
              case 4:
                args.push(key, location, modifiers, repeat, locale);
                break;
              default:
                args.push(char, key, location, modifiers, repeat, locale);
            }
            out.initKeyboardEvent.apply(out, args);
          } else {
            out.initEvent(type, bubbles, cancelable);
          }
          for (key in out) {
            if (defaults.hasOwnProperty(key) && out[key] !== init[key]) {
              withInitValues(key, out, init);
            }
          }
          return out;
        }
        KeyboardEvent.prototype = $KeyboardEvent.prototype;
        return KeyboardEvent;
      }(window.KeyboardEvent || function KeyboardEvent() {});
      defineProperty(window, 'KeyboardEvent', { value: o_O });
      // Android 4 gotcha
      if (KeyboardEvent !== o_O) KeyboardEvent = o_O;
    }

    // window.MouseEvent as constructor
    try {
      new MouseEvent('_', {});
    } catch (o_O) {
      /* jshint -W022 */
      o_O = function ($MouseEvent) {
        function MouseEvent(type, init) {
          enoughArguments(arguments.length, 'MouseEvent');
          var out = document.createEvent('MouseEvent');
          if (!init) init = {};
          out.initMouseEvent(type, !!init.bubbles, !!init.cancelable, init.view || window, init.detail || 1, init.screenX || 0, init.screenY || 0, init.clientX || 0, init.clientY || 0, !!init.ctrlKey, !!init.altKey, !!init.shiftKey, !!init.metaKey, init.button || 0, init.relatedTarget || null);
          return out;
        }
        MouseEvent.prototype = $MouseEvent.prototype;
        return MouseEvent;
      }(window.MouseEvent || function MouseEvent() {});
      defineProperty(window, 'MouseEvent', { value: o_O });
      // Android 4 gotcha
      if (MouseEvent !== o_O) MouseEvent = o_O;
    }

    if (!document.querySelectorAll('*').forEach) {
      (function () {
        function patch(what) {
          var querySelectorAll = what.querySelectorAll;
          what.querySelectorAll = function qSA(css) {
            var result = querySelectorAll.call(this, css);
            result.forEach = Array.prototype.forEach;
            return result;
          };
        }
        patch(document);
        patch(Element.prototype);
      })();
    }

    try {
      // https://drafts.csswg.org/selectors-4/#the-scope-pseudo
      document.querySelector(':scope *');
    } catch (o_O) {
      (function () {
        var dataScope = 'data-scope-' + (Math.random() * 1e9 >>> 0);
        var proto = Element.prototype;
        var querySelector = proto.querySelector;
        var querySelectorAll = proto.querySelectorAll;
        proto.querySelector = function qS(css) {
          return find(this, querySelector, css);
        };
        proto.querySelectorAll = function qSA(css) {
          return find(this, querySelectorAll, css);
        };
        function find(node, method, css) {
          node.setAttribute(dataScope, null);
          var result = method.call(node, String(css).replace(/(^|,\s*)(:scope([ >]|$))/g, function ($0, $1, $2, $3) {
            return $1 + '[' + dataScope + ']' + ($3 || ' ');
          }));
          node.removeAttribute(dataScope);
          return result;
        }
      })();
    }
  })(window);
  (function (global) {
    'use strict';

    // a WeakMap fallback for DOM nodes only used as key

    var DOMMap = global.WeakMap || function () {

      var counter = 0,
          dispatched = false,
          drop = false,
          value;

      function dispatch(key, ce, shouldDrop) {
        drop = shouldDrop;
        dispatched = false;
        value = undefined;
        key.dispatchEvent(ce);
      }

      function Handler(value) {
        this.value = value;
      }

      Handler.prototype.handleEvent = function handleEvent(e) {
        dispatched = true;
        if (drop) {
          e.currentTarget.removeEventListener(e.type, this, false);
        } else {
          value = this.value;
        }
      };

      function DOMMap() {
        counter++; // make id clashing highly improbable
        this.__ce__ = new Event('@DOMMap:' + counter + Math.random());
      }

      DOMMap.prototype = {
        'constructor': DOMMap,
        'delete': function del(key) {
          return dispatch(key, this.__ce__, true), dispatched;
        },
        'get': function get(key) {
          dispatch(key, this.__ce__, false);
          var v = value;
          value = undefined;
          return v;
        },
        'has': function has(key) {
          return dispatch(key, this.__ce__, false), dispatched;
        },
        'set': function set(key, value) {
          dispatch(key, this.__ce__, true);
          key.addEventListener(this.__ce__.type, new Handler(value), false);
          return this;
        }
      };

      return DOMMap;
    }();

    function Dict() {}
    Dict.prototype = (Object.create || Object)(null);

    // https://dom.spec.whatwg.org/#interface-eventtarget

    function createEventListener(type, callback, options) {
      function eventListener(e) {
        if (eventListener.once) {
          e.currentTarget.removeEventListener(e.type, callback, eventListener);
          eventListener.removed = true;
        }
        if (eventListener.passive) {
          e.preventDefault = createEventListener.preventDefault;
        }
        if (typeof eventListener.callback === 'function') {
          /* jshint validthis: true */
          eventListener.callback.call(this, e);
        } else if (eventListener.callback) {
          eventListener.callback.handleEvent(e);
        }
        if (eventListener.passive) {
          delete e.preventDefault;
        }
      }
      eventListener.type = type;
      eventListener.callback = callback;
      eventListener.capture = !!options.capture;
      eventListener.passive = !!options.passive;
      eventListener.once = !!options.once;
      // currently pointless but specs say to use it, so ...
      eventListener.removed = false;
      return eventListener;
    }

    createEventListener.preventDefault = function preventDefault() {};

    var Event = global.CustomEvent,
        dE = global.dispatchEvent,
        aEL = global.addEventListener,
        rEL = global.removeEventListener,
        counter = 0,
        increment = function () {
      counter++;
    },
        indexOf = [].indexOf || function indexOf(value) {
      var length = this.length;
      while (length--) {
        if (this[length] === value) {
          break;
        }
      }
      return length;
    },
        getListenerKey = function (options) {
      return ''.concat(options.capture ? '1' : '0', options.passive ? '1' : '0', options.once ? '1' : '0');
    },
        augment;

    try {
      aEL('_', increment, { once: true });
      dE(new Event('_'));
      dE(new Event('_'));
      rEL('_', increment, { once: true });
    } catch (o_O) {}

    if (counter !== 1) {
      (function () {
        var dm = new DOMMap();
        function createAEL(aEL) {
          return function addEventListener(type, handler, options) {
            if (options && typeof options !== 'boolean') {
              var info = dm.get(this),
                  key = getListenerKey(options),
                  i,
                  tmp,
                  wrap;
              if (!info) dm.set(this, info = new Dict());
              if (!(type in info)) info[type] = {
                handler: [],
                wrap: []
              };
              tmp = info[type];
              i = indexOf.call(tmp.handler, handler);
              if (i < 0) {
                i = tmp.handler.push(handler) - 1;
                tmp.wrap[i] = wrap = new Dict();
              } else {
                wrap = tmp.wrap[i];
              }
              if (!(key in wrap)) {
                wrap[key] = createEventListener(type, handler, options);
                aEL.call(this, type, wrap[key], wrap[key].capture);
              }
            } else {
              aEL.call(this, type, handler, options);
            }
          };
        }
        function createREL(rEL) {
          return function removeEventListener(type, handler, options) {
            if (options && typeof options !== 'boolean') {
              var info = dm.get(this),
                  key,
                  i,
                  tmp,
                  wrap;
              if (info && type in info) {
                tmp = info[type];
                i = indexOf.call(tmp.handler, handler);
                if (-1 < i) {
                  key = getListenerKey(options);
                  wrap = tmp.wrap[i];
                  if (key in wrap) {
                    rEL.call(this, type, wrap[key], wrap[key].capture);
                    delete wrap[key];
                    // return if there are other wraps
                    for (key in wrap) return;
                    // otherwise remove all the things
                    tmp.handler.splice(i, 1);
                    tmp.wrap.splice(i, 1);
                    // if there are no other handlers
                    if (tmp.handler.length === 0)
                      // drop the info[type] entirely
                      delete info[type];
                  }
                }
              }
            } else {
              rEL.call(this, type, handler, options);
            }
          };
        }

        augment = function (Constructor) {
          if (!Constructor) return;
          var proto = Constructor.prototype;
          proto.addEventListener = createAEL(proto.addEventListener);
          proto.removeEventListener = createREL(proto.removeEventListener);
        };

        if (global.EventTarget) {
          augment(EventTarget);
        } else {
          augment(global.Text);
          augment(global.Element || global.HTMLElement);
          augment(global.HTMLDocument);
          augment(global.Window || { prototype: global });
          augment(global.XMLHttpRequest);
        }
      })();
    }
  })(self);
});
System.registerDynamic("npm:dom4@2.1.4.js", ["npm:dom4@2.1.4/build/dom4.max.js"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("npm:dom4@2.1.4/build/dom4.max.js");
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/components/alert/alert.js", ["npm:tslib@1.9.3.js", "npm:classnames@2.2.6.js", "npm:react@16.7.0.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/index.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/errors.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/utils.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/button/buttons.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/dialog/dialog.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/icon/icon.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  var classnames_1 = tslib_1.__importDefault($__require("npm:classnames@2.2.6.js"));
  var React = tslib_1.__importStar($__require("npm:react@16.7.0.js"));
  var common_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/index.js");
  var errors_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/errors.js");
  var utils_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/utils.js");
  var buttons_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/button/buttons.js");
  var dialog_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/dialog/dialog.js");
  var icon_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/icon/icon.js");
  var Alert = function (_super) {
    tslib_1.__extends(Alert, _super);
    function Alert() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.handleCancel = function (evt) {
        return _this.internalHandleCallbacks(false, evt);
      };
      _this.handleConfirm = function (evt) {
        return _this.internalHandleCallbacks(true, evt);
      };
      return _this;
    }
    Alert.prototype.render = function () {
      var _a = this.props,
          canEscapeKeyCancel = _a.canEscapeKeyCancel,
          canOutsideClickCancel = _a.canOutsideClickCancel,
          children = _a.children,
          className = _a.className,
          icon = _a.icon,
          intent = _a.intent,
          cancelButtonText = _a.cancelButtonText,
          confirmButtonText = _a.confirmButtonText,
          onClose = _a.onClose,
          overlayProps = tslib_1.__rest(_a, ["canEscapeKeyCancel", "canOutsideClickCancel", "children", "className", "icon", "intent", "cancelButtonText", "confirmButtonText", "onClose"]);
      return React.createElement(dialog_1.Dialog, tslib_1.__assign({}, overlayProps, {
        className: classnames_1.default(common_1.Classes.ALERT, className),
        canEscapeKeyClose: canEscapeKeyCancel,
        canOutsideClickClose: canOutsideClickCancel,
        onClose: this.handleCancel,
        portalContainer: this.props.portalContainer
      }), React.createElement("div", { className: common_1.Classes.ALERT_BODY }, React.createElement(icon_1.Icon, {
        icon: icon,
        iconSize: 40,
        intent: intent
      }), React.createElement("div", { className: common_1.Classes.ALERT_CONTENTS }, children)), React.createElement("div", { className: common_1.Classes.ALERT_FOOTER }, React.createElement(buttons_1.Button, {
        intent: intent,
        text: confirmButtonText,
        onClick: this.handleConfirm
      }), cancelButtonText && React.createElement(buttons_1.Button, {
        text: cancelButtonText,
        onClick: this.handleCancel
      })));
    };
    Alert.prototype.validateProps = function (props) {
      if (props.onClose == null && props.cancelButtonText == null !== (props.onCancel == null)) {
        console.warn(errors_1.ALERT_WARN_CANCEL_PROPS);
      }
      var hasCancelHandler = props.onCancel != null || props.onClose != null;
      if (props.canEscapeKeyCancel && !hasCancelHandler) {
        console.warn(errors_1.ALERT_WARN_CANCEL_ESCAPE_KEY);
      }
      if (props.canOutsideClickCancel && !hasCancelHandler) {
        console.warn(errors_1.ALERT_WARN_CANCEL_OUTSIDE_CLICK);
      }
    };
    Alert.prototype.internalHandleCallbacks = function (confirmed, evt) {
      var _a = this.props,
          onCancel = _a.onCancel,
          onClose = _a.onClose,
          onConfirm = _a.onConfirm;
      utils_1.safeInvoke(confirmed ? onConfirm : onCancel, evt);
      utils_1.safeInvoke(onClose, confirmed, evt);
    };
    Alert.defaultProps = {
      canEscapeKeyCancel: false,
      canOutsideClickCancel: false,
      confirmButtonText: "OK",
      isOpen: false
    };
    Alert.displayName = common_1.DISPLAYNAME_PREFIX + ".Alert";
    return Alert;
  }(common_1.AbstractPureComponent);
  exports.Alert = Alert;
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/components/breadcrumbs/breadcrumb.js", ["npm:tslib@1.9.3.js", "npm:classnames@2.2.6.js", "npm:react@16.7.0.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  var classnames_1 = tslib_1.__importDefault($__require("npm:classnames@2.2.6.js"));
  var React = tslib_1.__importStar($__require("npm:react@16.7.0.js"));
  var Classes = tslib_1.__importStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js"));
  exports.Breadcrumb = function (breadcrumbProps) {
    var classes = classnames_1.default(Classes.BREADCRUMB, (_a = {}, _a[Classes.BREADCRUMB_CURRENT] = breadcrumbProps.current, _a[Classes.DISABLED] = breadcrumbProps.disabled, _a), breadcrumbProps.className);
    if (breadcrumbProps.href == null && breadcrumbProps.onClick == null) {
      return React.createElement("span", { className: classes }, breadcrumbProps.text, breadcrumbProps.children);
    }
    return React.createElement("a", {
      className: classes,
      href: breadcrumbProps.href,
      onClick: breadcrumbProps.disabled ? null : breadcrumbProps.onClick,
      tabIndex: breadcrumbProps.disabled ? null : 0,
      target: breadcrumbProps.target
    }, breadcrumbProps.text, breadcrumbProps.children);
    var _a;
  };
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/components/breadcrumbs/breadcrumbs.js", ["npm:tslib@1.9.3.js", "npm:classnames@2.2.6.js", "npm:react@16.7.0.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/boundary.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/position.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/menu/menu.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/menu/menuItem.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/overflow-list/overflowList.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/popover/popover.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/breadcrumbs/breadcrumb.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  var classnames_1 = tslib_1.__importDefault($__require("npm:classnames@2.2.6.js"));
  var React = tslib_1.__importStar($__require("npm:react@16.7.0.js"));
  var boundary_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/boundary.js");
  var Classes = tslib_1.__importStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js"));
  var position_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/position.js");
  var menu_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/menu/menu.js");
  var menuItem_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/menu/menuItem.js");
  var overflowList_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/overflow-list/overflowList.js");
  var popover_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/popover/popover.js");
  var breadcrumb_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/breadcrumbs/breadcrumb.js");
  var Breadcrumbs = function (_super) {
    tslib_1.__extends(Breadcrumbs, _super);
    function Breadcrumbs() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.renderOverflow = function (items) {
        var collapseFrom = _this.props.collapseFrom;
        var position = collapseFrom === boundary_1.Boundary.END ? position_1.Position.BOTTOM_RIGHT : position_1.Position.BOTTOM_LEFT;
        var orderedItems = items;
        if (collapseFrom === boundary_1.Boundary.START) {
          orderedItems = items.slice().reverse();
        }
        return React.createElement("li", null, React.createElement(popover_1.Popover, tslib_1.__assign({ position: position }, _this.props.popoverProps), React.createElement("span", { className: Classes.BREADCRUMBS_COLLAPSED }), React.createElement(menu_1.Menu, null, orderedItems.map(_this.renderOverflowBreadcrumb))));
      };
      _this.renderOverflowBreadcrumb = function (props, index) {
        var isClickable = props.href != null || props.onClick != null;
        return React.createElement(menuItem_1.MenuItem, tslib_1.__assign({ disabled: !isClickable }, props, {
          text: props.text,
          key: index
        }));
      };
      _this.renderBreadcrumbWrapper = function (props, index) {
        var isCurrent = _this.props.items[_this.props.items.length - 1] === props;
        return React.createElement("li", { key: index }, _this.renderBreadcrumb(props, isCurrent));
      };
      return _this;
    }
    Breadcrumbs.prototype.render = function () {
      var _a = this.props,
          className = _a.className,
          collapseFrom = _a.collapseFrom,
          items = _a.items,
          minVisibleItems = _a.minVisibleItems,
          _b = _a.overflowListProps,
          overflowListProps = _b === void 0 ? {} : _b;
      return React.createElement(overflowList_1.OverflowList, tslib_1.__assign({
        collapseFrom: collapseFrom,
        minVisibleItems: minVisibleItems,
        tagName: "ul"
      }, overflowListProps, {
        className: classnames_1.default(Classes.BREADCRUMBS, overflowListProps.className, className),
        items: items,
        overflowRenderer: this.renderOverflow,
        visibleItemRenderer: this.renderBreadcrumbWrapper
      }));
    };
    Breadcrumbs.prototype.renderBreadcrumb = function (props, isCurrent) {
      if (isCurrent && this.props.currentBreadcrumbRenderer != null) {
        return this.props.currentBreadcrumbRenderer(props);
      } else if (this.props.breadcrumbRenderer != null) {
        return this.props.breadcrumbRenderer(props);
      } else {
        return React.createElement(breadcrumb_1.Breadcrumb, tslib_1.__assign({}, props, { current: isCurrent }));
      }
    };
    Breadcrumbs.defaultProps = { collapseFrom: boundary_1.Boundary.START };
    return Breadcrumbs;
  }(React.PureComponent);
  exports.Breadcrumbs = Breadcrumbs;
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/components/callout/callout.js", ["npm:tslib@1.9.3.js", "npm:classnames@2.2.6.js", "npm:react@16.7.0.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/index.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/index.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/html/html.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  var classnames_1 = tslib_1.__importDefault($__require("npm:classnames@2.2.6.js"));
  var React = tslib_1.__importStar($__require("npm:react@16.7.0.js"));
  var common_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/index.js");
  var index_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/index.js");
  var html_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/html/html.js");
  var Callout = function (_super) {
    tslib_1.__extends(Callout, _super);
    function Callout() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    Callout.prototype.render = function () {
      var _a = this.props,
          className = _a.className,
          children = _a.children,
          icon = _a.icon,
          intent = _a.intent,
          title = _a.title,
          htmlProps = tslib_1.__rest(_a, ["className", "children", "icon", "intent", "title"]);
      var iconName = this.getIconName(icon, intent);
      var classes = classnames_1.default(common_1.Classes.CALLOUT, common_1.Classes.intentClass(intent), (_b = {}, _b[common_1.Classes.CALLOUT_ICON] = iconName != null, _b), className);
      return React.createElement("div", tslib_1.__assign({ className: classes }, htmlProps), iconName && React.createElement(index_1.Icon, {
        icon: iconName,
        iconSize: index_1.Icon.SIZE_LARGE
      }), title && React.createElement(html_1.H4, null, title), children);
      var _b;
    };
    Callout.prototype.getIconName = function (icon, intent) {
      if (icon === null) {
        return undefined;
      }
      if (icon !== undefined) {
        return icon;
      }
      switch (intent) {
        case common_1.Intent.DANGER:
          return "error";
        case common_1.Intent.PRIMARY:
          return "info-sign";
        case common_1.Intent.WARNING:
          return "warning-sign";
        case common_1.Intent.SUCCESS:
          return "tick";
        default:
          return undefined;
      }
    };
    Callout.displayName = common_1.DISPLAYNAME_PREFIX + ".Callout";
    return Callout;
  }(React.PureComponent);
  exports.Callout = Callout;
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/components/card/card.js", ["npm:tslib@1.9.3.js", "npm:classnames@2.2.6.js", "npm:react@16.7.0.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/elevation.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  var classnames_1 = tslib_1.__importDefault($__require("npm:classnames@2.2.6.js"));
  var React = tslib_1.__importStar($__require("npm:react@16.7.0.js"));
  var Classes = tslib_1.__importStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js"));
  var elevation_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/elevation.js");
  var props_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js");
  var Card = function (_super) {
    tslib_1.__extends(Card, _super);
    function Card() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    Card.prototype.render = function () {
      var _a = this.props,
          className = _a.className,
          elevation = _a.elevation,
          interactive = _a.interactive,
          htmlProps = tslib_1.__rest(_a, ["className", "elevation", "interactive"]);
      var classes = classnames_1.default(Classes.CARD, (_b = {}, _b[Classes.INTERACTIVE] = interactive, _b), Classes.elevationClass(elevation), className);
      return React.createElement("div", tslib_1.__assign({ className: classes }, htmlProps));
      var _b;
    };
    Card.displayName = props_1.DISPLAYNAME_PREFIX + ".Card";
    Card.defaultProps = {
      elevation: elevation_1.Elevation.ZERO,
      interactive: false
    };
    return Card;
  }(React.PureComponent);
  exports.Card = Card;
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/components/collapsible-list/collapsibleList.js", ["npm:tslib@1.9.3.js", "npm:classnames@2.2.6.js", "npm:react@16.7.0.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/boundary.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/errors.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/position.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/utils.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/menu/menu.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/menu/menuItem.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/popover/popover.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  var classnames_1 = tslib_1.__importDefault($__require("npm:classnames@2.2.6.js"));
  var React = tslib_1.__importStar($__require("npm:react@16.7.0.js"));
  var boundary_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/boundary.js");
  var Classes = tslib_1.__importStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js"));
  var Errors = tslib_1.__importStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/errors.js"));
  var position_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/position.js");
  var props_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js");
  var utils_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/utils.js");
  var menu_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/menu/menu.js");
  var menuItem_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/menu/menuItem.js");
  var popover_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/popover/popover.js");
  var CollapsibleList = function (_super) {
    tslib_1.__extends(CollapsibleList, _super);
    function CollapsibleList() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    CollapsibleList.prototype.render = function () {
      var _this = this;
      var collapseFrom = this.props.collapseFrom;
      var childrenLength = React.Children.count(this.props.children);
      var _a = this.partitionChildren(),
          visibleChildren = _a[0],
          collapsedChildren = _a[1];
      var visibleItems = visibleChildren.map(function (child, index) {
        var absoluteIndex = collapseFrom === boundary_1.Boundary.START ? childrenLength - 1 - index : index;
        return React.createElement("li", {
          className: _this.props.visibleItemClassName,
          key: absoluteIndex
        }, _this.props.visibleItemRenderer(child.props, absoluteIndex));
      });
      if (collapseFrom === boundary_1.Boundary.START) {
        visibleItems.reverse();
      }
      var collapsedPopover;
      if (collapsedChildren.length > 0) {
        var position = collapseFrom === boundary_1.Boundary.END ? position_1.Position.BOTTOM_RIGHT : position_1.Position.BOTTOM_LEFT;
        collapsedPopover = React.createElement("li", { className: this.props.visibleItemClassName }, React.createElement(popover_1.Popover, tslib_1.__assign({
          content: React.createElement(menu_1.Menu, null, collapsedChildren),
          position: position
        }, this.props.dropdownProps), this.props.dropdownTarget));
      }
      return React.createElement("ul", { className: classnames_1.default(Classes.COLLAPSIBLE_LIST, this.props.className) }, collapseFrom === boundary_1.Boundary.START ? collapsedPopover : null, visibleItems, collapseFrom === boundary_1.Boundary.END ? collapsedPopover : null);
    };
    CollapsibleList.prototype.partitionChildren = function () {
      if (this.props.children == null) {
        return [[], []];
      }
      var childrenArray = React.Children.map(this.props.children, function (child, index) {
        if (!utils_1.isElementOfType(child, menuItem_1.MenuItem)) {
          throw new Error(Errors.COLLAPSIBLE_LIST_INVALID_CHILD);
        }
        return React.cloneElement(child, { key: "visible-" + index });
      });
      if (this.props.collapseFrom === boundary_1.Boundary.START) {
        childrenArray.reverse();
      }
      var visibleItemCount = this.props.visibleItemCount;
      return [childrenArray.slice(0, visibleItemCount), childrenArray.slice(visibleItemCount)];
    };
    CollapsibleList.displayName = props_1.DISPLAYNAME_PREFIX + ".CollapsibleList";
    CollapsibleList.defaultProps = {
      collapseFrom: boundary_1.Boundary.START,
      dropdownTarget: null,
      visibleItemCount: 3,
      visibleItemRenderer: null
    };
    return CollapsibleList;
  }(React.Component);
  exports.CollapsibleList = CollapsibleList;
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/common/utils/isDarkTheme.js", ["npm:@blueprintjs/core@3.11.0/lib/cjs/common/index.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var _1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/index.js");
  function isDarkTheme(element) {
    return element instanceof Element && element.closest("." + _1.Classes.DARK) != null;
  }
  exports.isDarkTheme = isDarkTheme;
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/components/context-menu/contextMenu.js", ["npm:tslib@1.9.3.js", "npm:classnames@2.2.6.js", "npm:react@16.7.0.js", "npm:react-dom@16.7.0.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/abstractPureComponent.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/position.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/utils.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/popover/popover.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  var classnames_1 = tslib_1.__importDefault($__require("npm:classnames@2.2.6.js"));
  var React = tslib_1.__importStar($__require("npm:react@16.7.0.js"));
  var ReactDOM = tslib_1.__importStar($__require("npm:react-dom@16.7.0.js"));
  var abstractPureComponent_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/abstractPureComponent.js");
  var Classes = tslib_1.__importStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js"));
  var position_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/position.js");
  var utils_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/utils.js");
  var popover_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/popover/popover.js");
  var POPPER_MODIFIERS = { preventOverflow: { boundariesElement: "viewport" } };
  var TRANSITION_DURATION = 100;
  var ContextMenu = function (_super) {
    tslib_1.__extends(ContextMenu, _super);
    function ContextMenu() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.state = {
        isDarkTheme: false,
        isOpen: false,
        menu: null,
        offset: null
      };
      _this.cancelContextMenu = function (e) {
        return e.preventDefault();
      };
      _this.handleBackdropContextMenu = function (e) {
        e.persist();
        e.preventDefault();
        _this.setTimeout(function () {
          var newTarget = document.elementFromPoint(e.clientX, e.clientY);
          newTarget.dispatchEvent(new MouseEvent("contextmenu", e));
        }, TRANSITION_DURATION);
      };
      _this.handlePopoverInteraction = function (nextOpenState) {
        if (!nextOpenState) {
          requestAnimationFrame(function () {
            return _this.hide();
          });
        }
      };
      return _this;
    }
    ContextMenu.prototype.render = function () {
      var content = React.createElement("div", { onContextMenu: this.cancelContextMenu }, this.state.menu);
      var popoverClassName = classnames_1.default((_a = {}, _a[Classes.DARK] = this.state.isDarkTheme, _a));
      var key = this.state.offset == null ? "" : this.state.offset.left + "x" + this.state.offset.top;
      return React.createElement("div", {
        className: Classes.CONTEXT_MENU_POPOVER_TARGET,
        style: this.state.offset
      }, React.createElement(popover_1.Popover, tslib_1.__assign({}, this.props, {
        backdropProps: { onContextMenu: this.handleBackdropContextMenu },
        content: content,
        enforceFocus: false,
        key: key,
        hasBackdrop: true,
        isOpen: this.state.isOpen,
        minimal: true,
        modifiers: POPPER_MODIFIERS,
        onInteraction: this.handlePopoverInteraction,
        position: position_1.Position.RIGHT_TOP,
        popoverClassName: popoverClassName,
        target: React.createElement("div", null),
        transitionDuration: TRANSITION_DURATION
      })));
      var _a;
    };
    ContextMenu.prototype.show = function (menu, offset, onClose, isDarkTheme) {
      this.setState({
        isOpen: true,
        menu: menu,
        offset: offset,
        onClose: onClose,
        isDarkTheme: isDarkTheme
      });
    };
    ContextMenu.prototype.hide = function () {
      utils_1.safeInvoke(this.state.onClose);
      this.setState({
        isOpen: false,
        onClose: undefined
      });
    };
    return ContextMenu;
  }(abstractPureComponent_1.AbstractPureComponent);
  var contextMenuElement;
  var contextMenu;
  function show(menu, offset, onClose, isDarkTheme) {
    if (contextMenuElement == null) {
      contextMenuElement = document.createElement("div");
      contextMenuElement.classList.add(Classes.CONTEXT_MENU);
      document.body.appendChild(contextMenuElement);
      contextMenu = ReactDOM.render(React.createElement(ContextMenu, { onClosed: remove }), contextMenuElement);
    }
    contextMenu.show(menu, offset, onClose, isDarkTheme);
  }
  exports.show = show;
  function hide() {
    if (contextMenu != null) {
      contextMenu.hide();
    }
  }
  exports.hide = hide;
  function isOpen() {
    return contextMenu != null && contextMenu.state.isOpen;
  }
  exports.isOpen = isOpen;
  function remove() {
    if (contextMenuElement != null) {
      ReactDOM.unmountComponentAtNode(contextMenuElement);
      contextMenuElement.remove();
      contextMenuElement = null;
      contextMenu = null;
    }
  }
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/components/context-menu/contextMenuTarget.js", ["npm:tslib@1.9.3.js", "npm:react@16.7.0.js", "npm:react-dom@16.7.0.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/errors.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/utils.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/utils/isDarkTheme.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/context-menu/contextMenu.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  var React = tslib_1.__importStar($__require("npm:react@16.7.0.js"));
  var ReactDOM = tslib_1.__importStar($__require("npm:react-dom@16.7.0.js"));
  var errors_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/errors.js");
  var utils_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/utils.js");
  var isDarkTheme_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/utils/isDarkTheme.js");
  var ContextMenu = tslib_1.__importStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/context-menu/contextMenu.js"));
  function ContextMenuTarget(WrappedComponent) {
    if (!utils_1.isFunction(WrappedComponent.prototype.renderContextMenu)) {
      console.warn(errors_1.CONTEXTMENU_WARN_DECORATOR_NO_METHOD);
    }
    return _a = function (_super) {
      tslib_1.__extends(ContextMenuTargetClass, _super);
      function ContextMenuTargetClass() {
        return _super !== null && _super.apply(this, arguments) || this;
      }
      ContextMenuTargetClass.prototype.render = function () {
        var _this = this;
        var element = _super.prototype.render.call(this);
        if (element == null) {
          return element;
        }
        if (!React.isValidElement(element)) {
          console.warn(errors_1.CONTEXTMENU_WARN_DECORATOR_NEEDS_REACT_ELEMENT);
          return element;
        }
        var oldOnContextMenu = element.props.onContextMenu;
        var onContextMenu = function (e) {
          if (e.defaultPrevented) {
            return;
          }
          if (utils_1.isFunction(_this.renderContextMenu)) {
            var menu = _this.renderContextMenu(e);
            if (menu != null) {
              var darkTheme = isDarkTheme_1.isDarkTheme(ReactDOM.findDOMNode(_this));
              e.preventDefault();
              ContextMenu.show(menu, {
                left: e.clientX,
                top: e.clientY
              }, _this.onContextMenuClose, darkTheme);
            }
          }
          utils_1.safeInvoke(oldOnContextMenu, e);
        };
        return React.cloneElement(element, { onContextMenu: onContextMenu });
      };
      return ContextMenuTargetClass;
    }(WrappedComponent), _a.displayName = "ContextMenuTarget(" + utils_1.getDisplayName(WrappedComponent) + ")", _a;
    var _a;
  }
  exports.ContextMenuTarget = ContextMenuTarget;
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/components/dialog/dialog.js", ["npm:tslib@1.9.3.js", "npm:classnames@2.2.6.js", "npm:react@16.7.0.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/abstractPureComponent.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/errors.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/button/buttons.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/html/html.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/icon/icon.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/overlay/overlay.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  var classnames_1 = tslib_1.__importDefault($__require("npm:classnames@2.2.6.js"));
  var React = tslib_1.__importStar($__require("npm:react@16.7.0.js"));
  var abstractPureComponent_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/abstractPureComponent.js");
  var Classes = tslib_1.__importStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js"));
  var Errors = tslib_1.__importStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/errors.js"));
  var props_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js");
  var buttons_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/button/buttons.js");
  var html_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/html/html.js");
  var icon_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/icon/icon.js");
  var overlay_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/overlay/overlay.js");
  var Dialog = function (_super) {
    tslib_1.__extends(Dialog, _super);
    function Dialog() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    Dialog.prototype.render = function () {
      return React.createElement(overlay_1.Overlay, tslib_1.__assign({}, this.props, {
        className: Classes.OVERLAY_SCROLL_CONTAINER,
        hasBackdrop: true
      }), React.createElement("div", { className: Classes.DIALOG_CONTAINER }, React.createElement("div", {
        className: classnames_1.default(Classes.DIALOG, this.props.className),
        style: this.props.style
      }, this.maybeRenderHeader(), this.props.children)));
    };
    Dialog.prototype.validateProps = function (props) {
      if (props.title == null) {
        if (props.icon != null) {
          console.warn(Errors.DIALOG_WARN_NO_HEADER_ICON);
        }
        if (props.isCloseButtonShown != null) {
          console.warn(Errors.DIALOG_WARN_NO_HEADER_CLOSE_BUTTON);
        }
      }
    };
    Dialog.prototype.maybeRenderCloseButton = function () {
      if (this.props.isCloseButtonShown !== false) {
        return React.createElement(buttons_1.Button, {
          "aria-label": "Close",
          className: Classes.DIALOG_CLOSE_BUTTON,
          icon: React.createElement(icon_1.Icon, {
            icon: "small-cross",
            iconSize: icon_1.Icon.SIZE_LARGE
          }),
          minimal: true,
          onClick: this.props.onClose
        });
      } else {
        return undefined;
      }
    };
    Dialog.prototype.maybeRenderHeader = function () {
      var _a = this.props,
          icon = _a.icon,
          title = _a.title;
      if (title == null) {
        return undefined;
      }
      return React.createElement("div", { className: Classes.DIALOG_HEADER }, React.createElement(icon_1.Icon, {
        icon: icon,
        iconSize: icon_1.Icon.SIZE_LARGE
      }), React.createElement(html_1.H4, null, title), this.maybeRenderCloseButton());
    };
    Dialog.defaultProps = {
      canOutsideClickClose: true,
      isOpen: false
    };
    Dialog.displayName = props_1.DISPLAYNAME_PREFIX + ".Dialog";
    return Dialog;
  }(abstractPureComponent_1.AbstractPureComponent);
  exports.Dialog = Dialog;
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/components/divider/divider.js", ["npm:tslib@1.9.3.js", "npm:classnames@2.2.6.js", "npm:react@16.7.0.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  var classnames_1 = tslib_1.__importDefault($__require("npm:classnames@2.2.6.js"));
  var React = tslib_1.__importStar($__require("npm:react@16.7.0.js"));
  var classes_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js");
  var props_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js");
  var Divider = function (_super) {
    tslib_1.__extends(Divider, _super);
    function Divider() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    Divider.prototype.render = function () {
      var _a = this.props,
          className = _a.className,
          _b = _a.tagName,
          TagName = _b === void 0 ? "div" : _b,
          htmlProps = tslib_1.__rest(_a, ["className", "tagName"]);
      var classes = classnames_1.default(classes_1.DIVIDER, className);
      return React.createElement(TagName, tslib_1.__assign({}, htmlProps, { className: classes }));
    };
    Divider.displayName = props_1.DISPLAYNAME_PREFIX + ".Divider";
    return Divider;
  }(React.PureComponent);
  exports.Divider = Divider;
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/compatibility/browser.js", [], true, function ($__require, exports, module) {
    /* */
    "use strict";
    /*
     * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
     *
     * Licensed under the terms of the LICENSE file distributed with this project.
     */

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    var userAgent = typeof navigator !== "undefined" ? navigator.userAgent : "";
    var browser = {
        isEdge: /Edge/.test(userAgent),
        isInternetExplorer: /Trident|rv:11/.test(userAgent),
        isWebkit: /AppleWebKit/.test(userAgent)
    };
    exports.Browser = {
        isEdge: function () {
            return browser.isEdge;
        },
        isInternetExplorer: function () {
            return browser.isInternetExplorer;
        },
        isWebkit: function () {
            return browser.isWebkit;
        }
    };
    
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/compatibility/index.js", ["npm:tslib@1.9.3.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/compatibility/browser.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  tslib_1.__exportStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/compatibility/browser.js"), exports);
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/components/editable-text/editableText.js", ["npm:tslib@1.9.3.js", "npm:classnames@2.2.6.js", "npm:react@16.7.0.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/abstractPureComponent.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/keys.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/utils.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/compatibility/index.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  var classnames_1 = tslib_1.__importDefault($__require("npm:classnames@2.2.6.js"));
  var React = tslib_1.__importStar($__require("npm:react@16.7.0.js"));
  var abstractPureComponent_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/abstractPureComponent.js");
  var Classes = tslib_1.__importStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js"));
  var Keys = tslib_1.__importStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/keys.js"));
  var props_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js");
  var utils_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/utils.js");
  var compatibility_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/compatibility/index.js");
  var BUFFER_WIDTH_EDGE = 5;
  var BUFFER_WIDTH_IE = 30;
  var EditableText = function (_super) {
    tslib_1.__extends(EditableText, _super);
    function EditableText(props, context) {
      var _this = _super.call(this, props, context) || this;
      _this.refHandlers = {
        content: function (spanElement) {
          _this.valueElement = spanElement;
        },
        input: function (input) {
          if (input != null) {
            input.focus();
            var length_1 = input.value.length;
            input.setSelectionRange(_this.props.selectAllOnFocus ? 0 : length_1, length_1);
            if (!_this.props.selectAllOnFocus) {
              input.scrollLeft = input.scrollWidth;
            }
          }
        }
      };
      _this.cancelEditing = function () {
        var _a = _this.state,
            lastValue = _a.lastValue,
            value = _a.value;
        _this.setState({
          isEditing: false,
          value: lastValue
        });
        if (value !== lastValue) {
          utils_1.safeInvoke(_this.props.onChange, lastValue);
        }
        utils_1.safeInvoke(_this.props.onCancel, lastValue);
      };
      _this.toggleEditing = function () {
        if (_this.state.isEditing) {
          var value = _this.state.value;
          _this.setState({
            isEditing: false,
            lastValue: value
          });
          utils_1.safeInvoke(_this.props.onConfirm, value);
        } else if (!_this.props.disabled) {
          _this.setState({ isEditing: true });
        }
      };
      _this.handleFocus = function () {
        if (!_this.props.disabled) {
          _this.setState({ isEditing: true });
        }
      };
      _this.handleTextChange = function (event) {
        var value = event.target.value;
        if (_this.props.value == null) {
          _this.setState({ value: value });
        }
        utils_1.safeInvoke(_this.props.onChange, value);
      };
      _this.handleKeyEvent = function (event) {
        var altKey = event.altKey,
            ctrlKey = event.ctrlKey,
            metaKey = event.metaKey,
            shiftKey = event.shiftKey,
            which = event.which;
        if (which === Keys.ESCAPE) {
          _this.cancelEditing();
          return;
        }
        var hasModifierKey = altKey || ctrlKey || metaKey || shiftKey;
        if (which === Keys.ENTER) {
          if (altKey || shiftKey) {
            event.preventDefault();
          }
          if (_this.props.confirmOnEnterKey && _this.props.multiline) {
            if (event.target != null && hasModifierKey) {
              insertAtCaret(event.target, "\n");
              _this.handleTextChange(event);
            } else {
              _this.toggleEditing();
            }
          } else if (!_this.props.multiline || hasModifierKey) {
            _this.toggleEditing();
          }
        }
      };
      var value = props.value == null ? props.defaultValue : props.value;
      _this.state = {
        inputHeight: 0,
        inputWidth: 0,
        isEditing: props.isEditing === true && props.disabled === false,
        lastValue: value,
        value: value
      };
      return _this;
    }
    EditableText.prototype.render = function () {
      var _a = this.props,
          disabled = _a.disabled,
          multiline = _a.multiline;
      var value = this.props.value == null ? this.state.value : this.props.value;
      var hasValue = value != null && value !== "";
      var classes = classnames_1.default(Classes.EDITABLE_TEXT, Classes.intentClass(this.props.intent), (_b = {}, _b[Classes.DISABLED] = disabled, _b[Classes.EDITABLE_TEXT_EDITING] = this.state.isEditing, _b[Classes.EDITABLE_TEXT_PLACEHOLDER] = !hasValue, _b[Classes.MULTILINE] = multiline, _b), this.props.className);
      var contentStyle;
      if (multiline) {
        contentStyle = { height: !this.state.isEditing ? this.state.inputHeight : null };
      } else {
        contentStyle = {
          height: this.state.inputHeight,
          lineHeight: this.state.inputHeight != null ? this.state.inputHeight + "px" : null,
          minWidth: this.props.minWidth
        };
      }
      var tabIndex = this.state.isEditing || disabled ? null : 0;
      return React.createElement("div", {
        className: classes,
        onFocus: this.handleFocus,
        tabIndex: tabIndex
      }, this.maybeRenderInput(value), React.createElement("span", {
        className: Classes.EDITABLE_TEXT_CONTENT,
        ref: this.refHandlers.content,
        style: contentStyle
      }, hasValue ? value : this.props.placeholder));
      var _b;
    };
    EditableText.prototype.componentDidMount = function () {
      this.updateInputDimensions();
    };
    EditableText.prototype.componentDidUpdate = function (_, prevState) {
      if (this.state.isEditing && !prevState.isEditing) {
        utils_1.safeInvoke(this.props.onEdit, this.state.value);
      }
      this.updateInputDimensions();
    };
    EditableText.prototype.componentWillReceiveProps = function (nextProps) {
      var state = {};
      if (nextProps.value != null) {
        state.value = nextProps.value;
      }
      if (nextProps.isEditing != null) {
        state.isEditing = nextProps.isEditing;
      }
      if (nextProps.disabled || nextProps.disabled == null && this.props.disabled) {
        state.isEditing = false;
      }
      this.setState(state);
    };
    EditableText.prototype.maybeRenderInput = function (value) {
      var _a = this.props,
          maxLength = _a.maxLength,
          multiline = _a.multiline,
          type = _a.type,
          placeholder = _a.placeholder;
      if (!this.state.isEditing) {
        return undefined;
      }
      var props = {
        className: Classes.EDITABLE_TEXT_INPUT,
        maxLength: maxLength,
        onBlur: this.toggleEditing,
        onChange: this.handleTextChange,
        onKeyDown: this.handleKeyEvent,
        placeholder: placeholder,
        style: {
          height: this.state.inputHeight,
          lineHeight: !multiline && this.state.inputHeight != null ? this.state.inputHeight + "px" : null,
          width: multiline ? "100%" : this.state.inputWidth
        },
        value: value
      };
      return multiline ? React.createElement("textarea", tslib_1.__assign({ ref: this.refHandlers.input }, props)) : React.createElement("input", tslib_1.__assign({
        ref: this.refHandlers.input,
        type: type
      }, props));
    };
    EditableText.prototype.updateInputDimensions = function () {
      if (this.valueElement != null) {
        var _a = this.props,
            maxLines = _a.maxLines,
            minLines = _a.minLines,
            minWidth = _a.minWidth,
            multiline = _a.multiline;
        var _b = this.valueElement,
            parentElement_1 = _b.parentElement,
            textContent = _b.textContent;
        var _c = this.valueElement,
            scrollHeight_1 = _c.scrollHeight,
            scrollWidth = _c.scrollWidth;
        var lineHeight = getLineHeight(this.valueElement);
        if (multiline && this.state.isEditing && /\n$/.test(textContent)) {
          scrollHeight_1 += lineHeight;
        }
        if (lineHeight > 0) {
          scrollHeight_1 = utils_1.clamp(scrollHeight_1, minLines * lineHeight, maxLines * lineHeight);
        }
        scrollHeight_1 = Math.max(scrollHeight_1, getFontSize(this.valueElement) + 1, getLineHeight(parentElement_1));
        if (compatibility_1.Browser.isEdge()) {
          scrollWidth += BUFFER_WIDTH_EDGE;
        } else if (compatibility_1.Browser.isInternetExplorer()) {
          scrollWidth += BUFFER_WIDTH_IE;
        }
        this.setState({
          inputHeight: scrollHeight_1,
          inputWidth: Math.max(scrollWidth, minWidth)
        });
        if (multiline && this.state.isEditing) {
          this.setTimeout(function () {
            return parentElement_1.style.height = scrollHeight_1 + "px";
          });
        }
      }
    };
    EditableText.displayName = props_1.DISPLAYNAME_PREFIX + ".EditableText";
    EditableText.defaultProps = {
      confirmOnEnterKey: false,
      defaultValue: "",
      disabled: false,
      maxLines: Infinity,
      minLines: 1,
      minWidth: 80,
      multiline: false,
      placeholder: "Click to Edit",
      type: "text"
    };
    return EditableText;
  }(abstractPureComponent_1.AbstractPureComponent);
  exports.EditableText = EditableText;
  function getFontSize(element) {
    var fontSize = getComputedStyle(element).fontSize;
    return fontSize === "" ? 0 : parseInt(fontSize.slice(0, -2), 10);
  }
  function getLineHeight(element) {
    var lineHeight = parseInt(getComputedStyle(element).lineHeight.slice(0, -2), 10);
    if (isNaN(lineHeight)) {
      var line = document.createElement("span");
      line.innerHTML = "<br>";
      element.appendChild(line);
      var singleLineHeight = element.offsetHeight;
      line.innerHTML = "<br><br>";
      var doubleLineHeight = element.offsetHeight;
      element.removeChild(line);
      lineHeight = doubleLineHeight - singleLineHeight;
    }
    return lineHeight;
  }
  function insertAtCaret(el, text) {
    var selectionEnd = el.selectionEnd,
        selectionStart = el.selectionStart,
        value = el.value;
    if (selectionStart >= 0) {
      var before_1 = value.substring(0, selectionStart);
      var after_1 = value.substring(selectionEnd, value.length);
      var len = text.length;
      el.value = "" + before_1 + text + after_1;
      el.selectionStart = selectionStart + len;
      el.selectionEnd = selectionStart + len;
    }
  }
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/components/forms/fileInput.js", ["npm:tslib@1.9.3.js", "npm:classnames@2.2.6.js", "npm:react@16.7.0.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/index.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  var classnames_1 = tslib_1.__importDefault($__require("npm:classnames@2.2.6.js"));
  var React = tslib_1.__importStar($__require("npm:react@16.7.0.js"));
  var common_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/index.js");
  var Classes = tslib_1.__importStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js"));
  var props_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js");
  var FileInput = function (_super) {
    tslib_1.__extends(FileInput, _super);
    function FileInput() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.handleInputChange = function (e) {
        common_1.Utils.safeInvoke(_this.props.onInputChange, e);
        common_1.Utils.safeInvoke(_this.props.inputProps.onChange, e);
      };
      return _this;
    }
    FileInput.prototype.render = function () {
      var _a = this.props,
          className = _a.className,
          fill = _a.fill,
          disabled = _a.disabled,
          inputProps = _a.inputProps,
          onInputChange = _a.onInputChange,
          large = _a.large,
          text = _a.text,
          htmlProps = tslib_1.__rest(_a, ["className", "fill", "disabled", "inputProps", "onInputChange", "large", "text"]);
      var rootClasses = classnames_1.default(Classes.FILE_INPUT, (_b = {}, _b[Classes.DISABLED] = disabled, _b[Classes.FILL] = fill, _b[Classes.LARGE] = large, _b), className);
      return React.createElement("label", tslib_1.__assign({}, htmlProps, { className: rootClasses }), React.createElement("input", tslib_1.__assign({}, inputProps, {
        onChange: this.handleInputChange,
        type: "file",
        disabled: disabled
      })), React.createElement("span", { className: Classes.FILE_UPLOAD_INPUT }, text));
      var _b;
    };
    FileInput.displayName = props_1.DISPLAYNAME_PREFIX + ".FileInput";
    FileInput.defaultProps = {
      inputProps: {},
      text: "Choose file..."
    };
    return FileInput;
  }(React.PureComponent);
  exports.FileInput = FileInput;
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/components/forms/formGroup.js", ["npm:tslib@1.9.3.js", "npm:classnames@2.2.6.js", "npm:react@16.7.0.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  var classnames_1 = tslib_1.__importDefault($__require("npm:classnames@2.2.6.js"));
  var React = tslib_1.__importStar($__require("npm:react@16.7.0.js"));
  var Classes = tslib_1.__importStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js"));
  var props_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js");
  var FormGroup = function (_super) {
    tslib_1.__extends(FormGroup, _super);
    function FormGroup() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    FormGroup.prototype.render = function () {
      var _a = this.props,
          children = _a.children,
          contentClassName = _a.contentClassName,
          helperText = _a.helperText,
          label = _a.label,
          labelFor = _a.labelFor,
          labelInfo = _a.labelInfo,
          style = _a.style;
      return React.createElement("div", {
        className: this.getClassName(),
        style: style
      }, label && React.createElement("label", {
        className: Classes.LABEL,
        htmlFor: labelFor
      }, label, " ", React.createElement("span", { className: Classes.TEXT_MUTED }, labelInfo)), React.createElement("div", { className: classnames_1.default(Classes.FORM_CONTENT, contentClassName) }, children, helperText && React.createElement("div", { className: Classes.FORM_HELPER_TEXT }, helperText)));
    };
    FormGroup.prototype.getClassName = function () {
      var _a = this.props,
          className = _a.className,
          disabled = _a.disabled,
          inline = _a.inline,
          intent = _a.intent;
      return classnames_1.default(Classes.FORM_GROUP, Classes.intentClass(intent), (_b = {}, _b[Classes.DISABLED] = disabled, _b[Classes.INLINE] = inline, _b), className);
      var _b;
    };
    FormGroup.displayName = props_1.DISPLAYNAME_PREFIX + ".FormGroup";
    return FormGroup;
  }(React.PureComponent);
  exports.FormGroup = FormGroup;
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/components/forms/controlGroup.js", ["npm:tslib@1.9.3.js", "npm:classnames@2.2.6.js", "npm:react@16.7.0.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  var classnames_1 = tslib_1.__importDefault($__require("npm:classnames@2.2.6.js"));
  var React = tslib_1.__importStar($__require("npm:react@16.7.0.js"));
  var Classes = tslib_1.__importStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js"));
  var props_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js");
  var ControlGroup = function (_super) {
    tslib_1.__extends(ControlGroup, _super);
    function ControlGroup() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    ControlGroup.prototype.render = function () {
      var _a = this.props,
          children = _a.children,
          className = _a.className,
          fill = _a.fill,
          vertical = _a.vertical,
          htmlProps = tslib_1.__rest(_a, ["children", "className", "fill", "vertical"]);
      var rootClasses = classnames_1.default(Classes.CONTROL_GROUP, (_b = {}, _b[Classes.FILL] = fill, _b[Classes.VERTICAL] = vertical, _b), className);
      return React.createElement("div", tslib_1.__assign({}, htmlProps, { className: rootClasses }), children);
      var _b;
    };
    ControlGroup.displayName = props_1.DISPLAYNAME_PREFIX + ".ControlGroup";
    return ControlGroup;
  }(React.PureComponent);
  exports.ControlGroup = ControlGroup;
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/components/forms/inputGroup.js", ["npm:tslib@1.9.3.js", "npm:classnames@2.2.6.js", "npm:react@16.7.0.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/icon/icon.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  var classnames_1 = tslib_1.__importDefault($__require("npm:classnames@2.2.6.js"));
  var React = tslib_1.__importStar($__require("npm:react@16.7.0.js"));
  var Classes = tslib_1.__importStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js"));
  var props_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js");
  var icon_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/icon/icon.js");
  var DEFAULT_RIGHT_ELEMENT_WIDTH = 10;
  var InputGroup = function (_super) {
    tslib_1.__extends(InputGroup, _super);
    function InputGroup() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.state = { rightElementWidth: DEFAULT_RIGHT_ELEMENT_WIDTH };
      _this.refHandlers = { rightElement: function (ref) {
          return _this.rightElement = ref;
        } };
      return _this;
    }
    InputGroup.prototype.render = function () {
      var _a = this.props,
          className = _a.className,
          intent = _a.intent,
          large = _a.large,
          small = _a.small,
          leftIcon = _a.leftIcon,
          round = _a.round;
      var classes = classnames_1.default(Classes.INPUT_GROUP, Classes.intentClass(intent), (_b = {}, _b[Classes.DISABLED] = this.props.disabled, _b[Classes.LARGE] = large, _b[Classes.SMALL] = small, _b[Classes.ROUND] = round, _b), className);
      var style = tslib_1.__assign({}, this.props.style, { paddingRight: this.state.rightElementWidth });
      return React.createElement("div", { className: classes }, React.createElement(icon_1.Icon, { icon: leftIcon }), React.createElement("input", tslib_1.__assign({ type: "text" }, props_1.removeNonHTMLProps(this.props), {
        className: Classes.INPUT,
        ref: this.props.inputRef,
        style: style
      })), this.maybeRenderRightElement());
      var _b;
    };
    InputGroup.prototype.componentDidMount = function () {
      this.updateInputWidth();
    };
    InputGroup.prototype.componentDidUpdate = function () {
      this.updateInputWidth();
    };
    InputGroup.prototype.maybeRenderRightElement = function () {
      var rightElement = this.props.rightElement;
      if (rightElement == null) {
        return undefined;
      }
      return React.createElement("span", {
        className: Classes.INPUT_ACTION,
        ref: this.refHandlers.rightElement
      }, rightElement);
    };
    InputGroup.prototype.updateInputWidth = function () {
      if (this.rightElement != null) {
        var clientWidth = this.rightElement.clientWidth;
        if (Math.abs(clientWidth - this.state.rightElementWidth) > 2) {
          this.setState({ rightElementWidth: clientWidth });
        }
      } else {
        this.setState({ rightElementWidth: DEFAULT_RIGHT_ELEMENT_WIDTH });
      }
    };
    InputGroup.displayName = props_1.DISPLAYNAME_PREFIX + ".InputGroup";
    return InputGroup;
  }(React.PureComponent);
  exports.InputGroup = InputGroup;
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/components/forms/numericInputUtils.js", ["npm:@blueprintjs/core@3.11.0/lib/cjs/common/utils.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var utils_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/utils.js");
  function clampValue(value, min, max) {
    var adjustedMin = min != null ? min : -Infinity;
    var adjustedMax = max != null ? max : Infinity;
    return utils_1.clamp(value, adjustedMin, adjustedMax);
  }
  exports.clampValue = clampValue;
  function getValueOrEmptyValue(value) {
    if (value === void 0) {
      value = "";
    }
    return value.toString();
  }
  exports.getValueOrEmptyValue = getValueOrEmptyValue;
  function isValueNumeric(value) {
    return value != null && value - parseFloat(value) + 1 >= 0;
  }
  exports.isValueNumeric = isValueNumeric;
  function isValidNumericKeyboardEvent(e) {
    if (e.key == null) {
      return true;
    }
    if (e.ctrlKey || e.altKey || e.metaKey) {
      return true;
    }
    var isSingleCharKey = e.key.length === 1;
    if (!isSingleCharKey) {
      return true;
    }
    return isFloatingPointNumericCharacter(e.key);
  }
  exports.isValidNumericKeyboardEvent = isValidNumericKeyboardEvent;
  var FLOATING_POINT_NUMBER_CHARACTER_REGEX = /^[Ee0-9\+\-\.]$/;
  function isFloatingPointNumericCharacter(character) {
    return FLOATING_POINT_NUMBER_CHARACTER_REGEX.test(character);
  }
  exports.isFloatingPointNumericCharacter = isFloatingPointNumericCharacter;
  function toMaxPrecision(value, maxPrecision) {
    var scaleFactor = Math.pow(10, maxPrecision);
    return Math.round(value * scaleFactor) / scaleFactor;
  }
  exports.toMaxPrecision = toMaxPrecision;
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/components/forms/numericInput.js", ["npm:tslib@1.9.3.js", "npm:classnames@2.2.6.js", "npm:react@16.7.0.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/index.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/errors.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/button/buttonGroup.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/button/buttons.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/forms/controlGroup.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/forms/inputGroup.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/forms/numericInputUtils.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  var classnames_1 = tslib_1.__importDefault($__require("npm:classnames@2.2.6.js"));
  var React = tslib_1.__importStar($__require("npm:react@16.7.0.js"));
  var common_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/index.js");
  var Errors = tslib_1.__importStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/errors.js"));
  var buttonGroup_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/button/buttonGroup.js");
  var buttons_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/button/buttons.js");
  var controlGroup_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/forms/controlGroup.js");
  var inputGroup_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/forms/inputGroup.js");
  var numericInputUtils_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/forms/numericInputUtils.js");
  var IncrementDirection;
  (function (IncrementDirection) {
    IncrementDirection[IncrementDirection["DOWN"] = -1] = "DOWN";
    IncrementDirection[IncrementDirection["UP"] = 1] = "UP";
  })(IncrementDirection || (IncrementDirection = {}));
  var NON_HTML_PROPS = ["allowNumericCharactersOnly", "buttonPosition", "clampValueOnBlur", "className", "large", "majorStepSize", "minorStepSize", "onButtonClick", "onValueChange", "selectAllOnFocus", "selectAllOnIncrement", "stepSize"];
  var NumericInput = function (_super) {
    tslib_1.__extends(NumericInput, _super);
    function NumericInput() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.state = {
        shouldSelectAfterUpdate: false,
        stepMaxPrecision: _this.getStepMaxPrecision(_this.props),
        value: numericInputUtils_1.getValueOrEmptyValue(_this.props.value)
      };
      _this.didPasteEventJustOccur = false;
      _this.delta = 0;
      _this.inputElement = null;
      _this.intervalId = null;
      _this.incrementButtonHandlers = _this.getButtonEventHandlers(IncrementDirection.UP);
      _this.decrementButtonHandlers = _this.getButtonEventHandlers(IncrementDirection.DOWN);
      _this.inputRef = function (input) {
        _this.inputElement = input;
        common_1.Utils.safeInvoke(_this.props.inputRef, input);
      };
      _this.handleButtonClick = function (e, direction) {
        var delta = _this.updateDelta(direction, e);
        var nextValue = _this.incrementValue(delta);
        _this.invokeValueCallback(nextValue, _this.props.onButtonClick);
      };
      _this.stopContinuousChange = function () {
        _this.delta = 0;
        _this.clearTimeouts();
        clearInterval(_this.intervalId);
        document.removeEventListener("mouseup", _this.stopContinuousChange);
      };
      _this.handleContinuousChange = function () {
        var nextValue = _this.incrementValue(_this.delta);
        _this.invokeValueCallback(nextValue, _this.props.onButtonClick);
      };
      _this.handleInputFocus = function (e) {
        _this.setState({ shouldSelectAfterUpdate: _this.props.selectAllOnFocus });
        common_1.Utils.safeInvoke(_this.props.onFocus, e);
      };
      _this.handleInputBlur = function (e) {
        _this.setState({ shouldSelectAfterUpdate: false });
        if (_this.props.clampValueOnBlur) {
          var value = e.target.value;
          var sanitizedValue = _this.getSanitizedValue(value);
          _this.setState({ value: sanitizedValue });
          if (value !== sanitizedValue) {
            _this.invokeValueCallback(sanitizedValue, _this.props.onValueChange);
          }
        }
        common_1.Utils.safeInvoke(_this.props.onBlur, e);
      };
      _this.handleInputKeyDown = function (e) {
        if (_this.props.disabled || _this.props.readOnly) {
          return;
        }
        var keyCode = e.keyCode;
        var direction;
        if (keyCode === common_1.Keys.ARROW_UP) {
          direction = IncrementDirection.UP;
        } else if (keyCode === common_1.Keys.ARROW_DOWN) {
          direction = IncrementDirection.DOWN;
        }
        if (direction != null) {
          e.preventDefault();
          var delta = _this.updateDelta(direction, e);
          _this.incrementValue(delta);
        }
        common_1.Utils.safeInvoke(_this.props.onKeyDown, e);
      };
      _this.handleInputKeyPress = function (e) {
        if (_this.props.allowNumericCharactersOnly && !numericInputUtils_1.isValidNumericKeyboardEvent(e)) {
          e.preventDefault();
        }
        common_1.Utils.safeInvoke(_this.props.onKeyPress, e);
      };
      _this.handleInputPaste = function (e) {
        _this.didPasteEventJustOccur = true;
        common_1.Utils.safeInvoke(_this.props.onPaste, e);
      };
      _this.handleInputChange = function (e) {
        var value = e.target.value;
        var nextValue = value;
        if (_this.props.allowNumericCharactersOnly && _this.didPasteEventJustOccur) {
          _this.didPasteEventJustOccur = false;
          var valueChars = value.split("");
          var sanitizedValueChars = valueChars.filter(numericInputUtils_1.isFloatingPointNumericCharacter);
          var sanitizedValue = sanitizedValueChars.join("");
          nextValue = sanitizedValue;
        }
        _this.setState({
          shouldSelectAfterUpdate: false,
          value: nextValue
        });
        _this.invokeValueCallback(nextValue, _this.props.onValueChange);
      };
      return _this;
    }
    NumericInput.prototype.componentWillReceiveProps = function (nextProps) {
      _super.prototype.componentWillReceiveProps.call(this, nextProps);
      var value = numericInputUtils_1.getValueOrEmptyValue(nextProps.value);
      var didMinChange = nextProps.min !== this.props.min;
      var didMaxChange = nextProps.max !== this.props.max;
      var didBoundsChange = didMinChange || didMaxChange;
      var sanitizedValue = value !== NumericInput.VALUE_EMPTY ? this.getSanitizedValue(value, 0, nextProps.min, nextProps.max) : NumericInput.VALUE_EMPTY;
      var stepMaxPrecision = this.getStepMaxPrecision(nextProps);
      if (didBoundsChange && sanitizedValue !== this.state.value) {
        this.setState({
          stepMaxPrecision: stepMaxPrecision,
          value: sanitizedValue
        });
        this.invokeValueCallback(sanitizedValue, this.props.onValueChange);
      } else {
        this.setState({
          stepMaxPrecision: stepMaxPrecision,
          value: value
        });
      }
    };
    NumericInput.prototype.render = function () {
      var _a = this.props,
          buttonPosition = _a.buttonPosition,
          className = _a.className,
          fill = _a.fill,
          large = _a.large;
      var containerClasses = classnames_1.default(common_1.Classes.NUMERIC_INPUT, (_b = {}, _b[common_1.Classes.LARGE] = large, _b), className);
      var buttons = this.renderButtons();
      return React.createElement(controlGroup_1.ControlGroup, {
        className: containerClasses,
        fill: fill
      }, buttonPosition === common_1.Position.LEFT && buttons, this.renderInput(), buttonPosition === common_1.Position.RIGHT && buttons);
      var _b;
    };
    NumericInput.prototype.componentDidUpdate = function () {
      if (this.state.shouldSelectAfterUpdate) {
        this.inputElement.setSelectionRange(0, this.state.value.length);
      }
    };
    NumericInput.prototype.validateProps = function (nextProps) {
      var majorStepSize = nextProps.majorStepSize,
          max = nextProps.max,
          min = nextProps.min,
          minorStepSize = nextProps.minorStepSize,
          stepSize = nextProps.stepSize;
      if (min != null && max != null && min >= max) {
        throw new Error(Errors.NUMERIC_INPUT_MIN_MAX);
      }
      if (stepSize == null) {
        throw new Error(Errors.NUMERIC_INPUT_STEP_SIZE_NULL);
      }
      if (stepSize <= 0) {
        throw new Error(Errors.NUMERIC_INPUT_STEP_SIZE_NON_POSITIVE);
      }
      if (minorStepSize && minorStepSize <= 0) {
        throw new Error(Errors.NUMERIC_INPUT_MINOR_STEP_SIZE_NON_POSITIVE);
      }
      if (majorStepSize && majorStepSize <= 0) {
        throw new Error(Errors.NUMERIC_INPUT_MAJOR_STEP_SIZE_NON_POSITIVE);
      }
      if (minorStepSize && minorStepSize > stepSize) {
        throw new Error(Errors.NUMERIC_INPUT_MINOR_STEP_SIZE_BOUND);
      }
      if (majorStepSize && majorStepSize < stepSize) {
        throw new Error(Errors.NUMERIC_INPUT_MAJOR_STEP_SIZE_BOUND);
      }
    };
    NumericInput.prototype.renderButtons = function () {
      var intent = this.props.intent;
      var disabled = this.props.disabled || this.props.readOnly;
      return React.createElement(buttonGroup_1.ButtonGroup, {
        className: common_1.Classes.FIXED,
        key: "button-group",
        vertical: true
      }, React.createElement(buttons_1.Button, tslib_1.__assign({
        disabled: disabled,
        icon: "chevron-up",
        intent: intent
      }, this.incrementButtonHandlers)), React.createElement(buttons_1.Button, tslib_1.__assign({
        disabled: disabled,
        icon: "chevron-down",
        intent: intent
      }, this.decrementButtonHandlers)));
    };
    NumericInput.prototype.renderInput = function () {
      var inputGroupHtmlProps = common_1.removeNonHTMLProps(this.props, NON_HTML_PROPS, true);
      return React.createElement(inputGroup_1.InputGroup, tslib_1.__assign({ autoComplete: "off" }, inputGroupHtmlProps, {
        intent: this.props.intent,
        inputRef: this.inputRef,
        large: this.props.large,
        leftIcon: this.props.leftIcon,
        onFocus: this.handleInputFocus,
        onBlur: this.handleInputBlur,
        onChange: this.handleInputChange,
        onKeyDown: this.handleInputKeyDown,
        onKeyPress: this.handleInputKeyPress,
        onPaste: this.handleInputPaste,
        value: this.state.value
      }));
    };
    NumericInput.prototype.getButtonEventHandlers = function (direction) {
      var _this = this;
      return {
        onKeyDown: function (evt) {
          if (common_1.Keys.isKeyboardClick(evt.keyCode)) {
            _this.handleButtonClick(evt, direction);
          }
        },
        onMouseDown: function (evt) {
          _this.handleButtonClick(evt, direction);
          _this.startContinuousChange();
        }
      };
    };
    NumericInput.prototype.startContinuousChange = function () {
      var _this = this;
      document.addEventListener("mouseup", this.stopContinuousChange);
      this.setTimeout(function () {
        _this.intervalId = window.setInterval(_this.handleContinuousChange, NumericInput.CONTINUOUS_CHANGE_INTERVAL);
      }, NumericInput.CONTINUOUS_CHANGE_DELAY);
    };
    NumericInput.prototype.invokeValueCallback = function (value, callback) {
      common_1.Utils.safeInvoke(callback, +value, value);
    };
    NumericInput.prototype.incrementValue = function (delta) {
      var currValue = this.state.value || NumericInput.VALUE_ZERO;
      var nextValue = this.getSanitizedValue(currValue, delta);
      this.setState({
        shouldSelectAfterUpdate: this.props.selectAllOnIncrement,
        value: nextValue
      });
      this.invokeValueCallback(nextValue, this.props.onValueChange);
      return nextValue;
    };
    NumericInput.prototype.getIncrementDelta = function (direction, isShiftKeyPressed, isAltKeyPressed) {
      var _a = this.props,
          majorStepSize = _a.majorStepSize,
          minorStepSize = _a.minorStepSize,
          stepSize = _a.stepSize;
      if (isShiftKeyPressed && majorStepSize != null) {
        return direction * majorStepSize;
      } else if (isAltKeyPressed && minorStepSize != null) {
        return direction * minorStepSize;
      } else {
        return direction * stepSize;
      }
    };
    NumericInput.prototype.getSanitizedValue = function (value, delta, min, max) {
      if (delta === void 0) {
        delta = 0;
      }
      if (min === void 0) {
        min = this.props.min;
      }
      if (max === void 0) {
        max = this.props.max;
      }
      if (!numericInputUtils_1.isValueNumeric(value)) {
        return NumericInput.VALUE_EMPTY;
      }
      var nextValue = numericInputUtils_1.toMaxPrecision(parseFloat(value) + delta, this.state.stepMaxPrecision);
      return numericInputUtils_1.clampValue(nextValue, min, max).toString();
    };
    NumericInput.prototype.getStepMaxPrecision = function (props) {
      if (props.minorStepSize != null) {
        return common_1.Utils.countDecimalPlaces(props.minorStepSize);
      } else {
        return common_1.Utils.countDecimalPlaces(props.stepSize);
      }
    };
    NumericInput.prototype.updateDelta = function (direction, e) {
      this.delta = this.getIncrementDelta(direction, e.shiftKey, e.altKey);
      return this.delta;
    };
    NumericInput.displayName = common_1.DISPLAYNAME_PREFIX + ".NumericInput";
    NumericInput.VALUE_EMPTY = "";
    NumericInput.VALUE_ZERO = "0";
    NumericInput.defaultProps = {
      allowNumericCharactersOnly: true,
      buttonPosition: common_1.Position.RIGHT,
      clampValueOnBlur: false,
      large: false,
      majorStepSize: 10,
      minorStepSize: 0.1,
      selectAllOnFocus: false,
      selectAllOnIncrement: false,
      stepSize: 1,
      value: NumericInput.VALUE_EMPTY
    };
    NumericInput.CONTINUOUS_CHANGE_DELAY = 300;
    NumericInput.CONTINUOUS_CHANGE_INTERVAL = 100;
    return NumericInput;
  }(common_1.AbstractPureComponent);
  exports.NumericInput = NumericInput;
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/components/forms/controls.js", ["npm:tslib@1.9.3.js", "npm:classnames@2.2.6.js", "npm:react@16.7.0.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/utils.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  var classnames_1 = tslib_1.__importDefault($__require("npm:classnames@2.2.6.js"));
  var React = tslib_1.__importStar($__require("npm:react@16.7.0.js"));
  var Classes = tslib_1.__importStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js"));
  var props_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js");
  var utils_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/utils.js");
  var Control = function (_a) {
    var alignIndicator = _a.alignIndicator,
        children = _a.children,
        className = _a.className,
        inline = _a.inline,
        inputRef = _a.inputRef,
        label = _a.label,
        labelElement = _a.labelElement,
        large = _a.large,
        style = _a.style,
        type = _a.type,
        typeClassName = _a.typeClassName,
        _b = _a.tagName,
        TagName = _b === void 0 ? "label" : _b,
        htmlProps = tslib_1.__rest(_a, ["alignIndicator", "children", "className", "inline", "inputRef", "label", "labelElement", "large", "style", "type", "typeClassName", "tagName"]);
    var classes = classnames_1.default(Classes.CONTROL, typeClassName, (_c = {}, _c[Classes.DISABLED] = htmlProps.disabled, _c[Classes.INLINE] = inline, _c[Classes.LARGE] = large, _c), Classes.alignmentClass(alignIndicator), className);
    return React.createElement(TagName, {
      className: classes,
      style: style
    }, React.createElement("input", tslib_1.__assign({}, htmlProps, {
      ref: inputRef,
      type: type
    })), React.createElement("span", { className: Classes.CONTROL_INDICATOR }), label, labelElement, children);
    var _c;
  };
  var Switch = function (_super) {
    tslib_1.__extends(Switch, _super);
    function Switch() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    Switch.prototype.render = function () {
      return React.createElement(Control, tslib_1.__assign({}, this.props, {
        type: "checkbox",
        typeClassName: Classes.SWITCH
      }));
    };
    Switch.displayName = props_1.DISPLAYNAME_PREFIX + ".Switch";
    return Switch;
  }(React.PureComponent);
  exports.Switch = Switch;
  var Radio = function (_super) {
    tslib_1.__extends(Radio, _super);
    function Radio() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    Radio.prototype.render = function () {
      return React.createElement(Control, tslib_1.__assign({}, this.props, {
        type: "radio",
        typeClassName: Classes.RADIO
      }));
    };
    Radio.displayName = props_1.DISPLAYNAME_PREFIX + ".Radio";
    return Radio;
  }(React.PureComponent);
  exports.Radio = Radio;
  var Checkbox = function (_super) {
    tslib_1.__extends(Checkbox, _super);
    function Checkbox() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.state = { indeterminate: _this.props.indeterminate || _this.props.defaultIndeterminate || false };
      _this.handleChange = function (evt) {
        var indeterminate = evt.target.indeterminate;
        if (_this.props.indeterminate == null) {
          _this.setState({ indeterminate: indeterminate });
        }
        utils_1.safeInvoke(_this.props.onChange, evt);
      };
      _this.handleInputRef = function (ref) {
        _this.input = ref;
        utils_1.safeInvoke(_this.props.inputRef, ref);
      };
      return _this;
    }
    Checkbox.prototype.render = function () {
      var _a = this.props,
          defaultIndeterminate = _a.defaultIndeterminate,
          indeterminate = _a.indeterminate,
          controlProps = tslib_1.__rest(_a, ["defaultIndeterminate", "indeterminate"]);
      return React.createElement(Control, tslib_1.__assign({}, controlProps, {
        inputRef: this.handleInputRef,
        onChange: this.handleChange,
        type: "checkbox",
        typeClassName: Classes.CHECKBOX
      }));
    };
    Checkbox.prototype.componentWillReceiveProps = function (_a) {
      var indeterminate = _a.indeterminate;
      if (indeterminate != null) {
        this.setState({ indeterminate: indeterminate });
      }
    };
    Checkbox.prototype.componentDidMount = function () {
      this.updateIndeterminate();
    };
    Checkbox.prototype.componentDidUpdate = function () {
      this.updateIndeterminate();
    };
    Checkbox.prototype.updateIndeterminate = function () {
      if (this.state.indeterminate != null) {
        this.input.indeterminate = this.state.indeterminate;
      }
    };
    Checkbox.displayName = props_1.DISPLAYNAME_PREFIX + ".Checkbox";
    return Checkbox;
  }(React.PureComponent);
  exports.Checkbox = Checkbox;
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/components/forms/radioGroup.js", ["npm:tslib@1.9.3.js", "npm:react@16.7.0.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/abstractPureComponent.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/errors.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/utils.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/forms/controls.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  var React = tslib_1.__importStar($__require("npm:react@16.7.0.js"));
  var abstractPureComponent_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/abstractPureComponent.js");
  var Classes = tslib_1.__importStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js"));
  var Errors = tslib_1.__importStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/errors.js"));
  var props_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js");
  var utils_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/utils.js");
  var controls_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/forms/controls.js");
  var counter = 0;
  function nextName() {
    return RadioGroup.displayName + "-" + counter++;
  }
  var RadioGroup = function (_super) {
    tslib_1.__extends(RadioGroup, _super);
    function RadioGroup() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.autoGroupName = nextName();
      return _this;
    }
    RadioGroup.prototype.render = function () {
      var label = this.props.label;
      return React.createElement("div", { className: this.props.className }, label == null ? null : React.createElement("label", { className: Classes.LABEL }, label), Array.isArray(this.props.options) ? this.renderOptions() : this.renderChildren());
    };
    RadioGroup.prototype.validateProps = function () {
      if (this.props.children != null && this.props.options != null) {
        console.warn(Errors.RADIOGROUP_WARN_CHILDREN_OPTIONS_MUTEX);
      }
    };
    RadioGroup.prototype.renderChildren = function () {
      var _this = this;
      return React.Children.map(this.props.children, function (child) {
        if (utils_1.isElementOfType(child, controls_1.Radio)) {
          return React.cloneElement(child, _this.getRadioProps(child.props));
        } else {
          return child;
        }
      });
    };
    RadioGroup.prototype.renderOptions = function () {
      var _this = this;
      return this.props.options.map(function (option) {
        return React.createElement(controls_1.Radio, tslib_1.__assign({}, _this.getRadioProps(option), {
          key: option.value,
          labelElement: option.label || option.value
        }));
      });
    };
    RadioGroup.prototype.getRadioProps = function (optionProps) {
      var name = this.props.name;
      var className = optionProps.className,
          disabled = optionProps.disabled,
          value = optionProps.value;
      return {
        checked: value === this.props.selectedValue,
        className: className,
        disabled: disabled || this.props.disabled,
        inline: this.props.inline,
        name: name == null ? this.autoGroupName : name,
        onChange: this.props.onChange,
        value: value
      };
    };
    RadioGroup.displayName = props_1.DISPLAYNAME_PREFIX + ".RadioGroup";
    return RadioGroup;
  }(abstractPureComponent_1.AbstractPureComponent);
  exports.RadioGroup = RadioGroup;
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/components/forms/textArea.js", ["npm:tslib@1.9.3.js", "npm:classnames@2.2.6.js", "npm:react@16.7.0.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  var classnames_1 = tslib_1.__importDefault($__require("npm:classnames@2.2.6.js"));
  var React = tslib_1.__importStar($__require("npm:react@16.7.0.js"));
  var Classes = tslib_1.__importStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js"));
  var props_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js");
  var TextArea = function (_super) {
    tslib_1.__extends(TextArea, _super);
    function TextArea() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    TextArea.prototype.render = function () {
      var _a = this.props,
          className = _a.className,
          fill = _a.fill,
          inputRef = _a.inputRef,
          intent = _a.intent,
          large = _a.large,
          small = _a.small,
          htmlProps = tslib_1.__rest(_a, ["className", "fill", "inputRef", "intent", "large", "small"]);
      var rootClasses = classnames_1.default(Classes.INPUT, Classes.intentClass(intent), (_b = {}, _b[Classes.FILL] = fill, _b[Classes.LARGE] = large, _b[Classes.SMALL] = small, _b), className);
      return React.createElement("textarea", tslib_1.__assign({}, htmlProps, {
        className: rootClasses,
        ref: inputRef
      }));
      var _b;
    };
    TextArea.displayName = props_1.DISPLAYNAME_PREFIX + ".TextArea";
    return TextArea;
  }(React.PureComponent);
  exports.TextArea = TextArea;
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/components/html-select/htmlSelect.js", ["npm:tslib@1.9.3.js", "npm:classnames@2.2.6.js", "npm:react@16.7.0.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/icon/icon.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  var classnames_1 = tslib_1.__importDefault($__require("npm:classnames@2.2.6.js"));
  var React = tslib_1.__importStar($__require("npm:react@16.7.0.js"));
  var classes_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js");
  var icon_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/icon/icon.js");
  var HTMLSelect = function (_super) {
    tslib_1.__extends(HTMLSelect, _super);
    function HTMLSelect() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    HTMLSelect.prototype.render = function () {
      var _a = this.props,
          className = _a.className,
          disabled = _a.disabled,
          elementRef = _a.elementRef,
          fill = _a.fill,
          iconProps = _a.iconProps,
          large = _a.large,
          minimal = _a.minimal,
          _b = _a.options,
          options = _b === void 0 ? [] : _b,
          htmlProps = tslib_1.__rest(_a, ["className", "disabled", "elementRef", "fill", "iconProps", "large", "minimal", "options"]);
      var classes = classnames_1.default(classes_1.HTML_SELECT, (_c = {}, _c[classes_1.DISABLED] = disabled, _c[classes_1.FILL] = fill, _c[classes_1.LARGE] = large, _c[classes_1.MINIMAL] = minimal, _c), className);
      var optionChildren = options.map(function (option) {
        var props = typeof option === "object" ? option : { value: option };
        return React.createElement("option", tslib_1.__assign({}, props, {
          key: props.value,
          children: props.label || props.value
        }));
      });
      return React.createElement("div", { className: classes }, React.createElement("select", tslib_1.__assign({
        disabled: disabled,
        ref: elementRef
      }, htmlProps, { multiple: false }), optionChildren, htmlProps.children), React.createElement(icon_1.Icon, tslib_1.__assign({ icon: "double-caret-vertical" }, iconProps)));
      var _c;
    };
    return HTMLSelect;
  }(React.PureComponent);
  exports.HTMLSelect = HTMLSelect;
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/components/html-table/htmlTable.js", ["npm:tslib@1.9.3.js", "npm:classnames@2.2.6.js", "npm:react@16.7.0.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  var classnames_1 = tslib_1.__importDefault($__require("npm:classnames@2.2.6.js"));
  var React = tslib_1.__importStar($__require("npm:react@16.7.0.js"));
  var classes_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js");
  var HTMLTable = function (_super) {
    tslib_1.__extends(HTMLTable, _super);
    function HTMLTable() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    HTMLTable.prototype.render = function () {
      var _a = this.props,
          bordered = _a.bordered,
          className = _a.className,
          condensed = _a.condensed,
          elementRef = _a.elementRef,
          interactive = _a.interactive,
          small = _a.small,
          striped = _a.striped,
          htmlProps = tslib_1.__rest(_a, ["bordered", "className", "condensed", "elementRef", "interactive", "small", "striped"]);
      var classes = classnames_1.default(classes_1.HTML_TABLE, (_b = {}, _b[classes_1.HTML_TABLE_BORDERED] = bordered, _b[classes_1.HTML_TABLE_CONDENSED] = condensed, _b[classes_1.HTML_TABLE_STRIPED] = striped, _b[classes_1.INTERACTIVE] = interactive, _b[classes_1.SMALL] = small, _b), className);
      return React.createElement("table", tslib_1.__assign({}, htmlProps, {
        ref: elementRef,
        className: classes
      }));
      var _b;
    };
    return HTMLTable;
  }(React.PureComponent);
  exports.HTMLTable = HTMLTable;
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/components/hotkeys/hotkeysEvents.js", ["npm:react@16.7.0.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/utils.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/hotkeys/hotkey.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/hotkeys/hotkeyParser.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/hotkeys/hotkeysDialog.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var react_1 = $__require("npm:react@16.7.0.js");
  var utils_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/utils.js");
  var hotkey_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/hotkeys/hotkey.js");
  var hotkeyParser_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/hotkeys/hotkeyParser.js");
  var hotkeysDialog_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/hotkeys/hotkeysDialog.js");
  var SHOW_DIALOG_KEY = "?";
  var HotkeyScope;
  (function (HotkeyScope) {
    HotkeyScope["LOCAL"] = "local";
    HotkeyScope["GLOBAL"] = "global";
  })(HotkeyScope = exports.HotkeyScope || (exports.HotkeyScope = {}));
  var HotkeysEvents = function () {
    function HotkeysEvents(scope) {
      var _this = this;
      this.scope = scope;
      this.actions = [];
      this.handleKeyDown = function (e) {
        var combo = hotkeyParser_1.getKeyCombo(e);
        var isTextInput = _this.isTextInput(e);
        if (!isTextInput && hotkeyParser_1.comboMatches(hotkeyParser_1.parseKeyCombo(SHOW_DIALOG_KEY), combo)) {
          if (hotkeysDialog_1.isHotkeysDialogShowing()) {
            hotkeysDialog_1.hideHotkeysDialogAfterDelay();
          } else {
            hotkeysDialog_1.showHotkeysDialog(_this.actions.map(function (action) {
              return action.props;
            }));
          }
          return;
        } else if (hotkeysDialog_1.isHotkeysDialogShowing()) {
          return;
        }
        _this.invokeNamedCallbackIfComboRecognized(combo, "onKeyDown", e);
      };
      this.handleKeyUp = function (e) {
        if (hotkeysDialog_1.isHotkeysDialogShowing()) {
          return;
        }
        _this.invokeNamedCallbackIfComboRecognized(hotkeyParser_1.getKeyCombo(e), "onKeyUp", e);
      };
    }
    HotkeysEvents.prototype.count = function () {
      return this.actions.length;
    };
    HotkeysEvents.prototype.clear = function () {
      this.actions = [];
    };
    HotkeysEvents.prototype.setHotkeys = function (props) {
      var _this = this;
      var actions = [];
      react_1.Children.forEach(props.children, function (child) {
        if (utils_1.isElementOfType(child, hotkey_1.Hotkey) && _this.isScope(child.props)) {
          actions.push({
            combo: hotkeyParser_1.parseKeyCombo(child.props.combo),
            props: child.props
          });
        }
      });
      this.actions = actions;
    };
    HotkeysEvents.prototype.invokeNamedCallbackIfComboRecognized = function (combo, callbackName, e) {
      var isTextInput = this.isTextInput(e);
      for (var _i = 0, _a = this.actions; _i < _a.length; _i++) {
        var action = _a[_i];
        var shouldIgnore = isTextInput && !action.props.allowInInput || action.props.disabled;
        if (!shouldIgnore && hotkeyParser_1.comboMatches(action.combo, combo)) {
          if (action.props.preventDefault) {
            e.preventDefault();
          }
          if (action.props.stopPropagation) {
            e.isPropagationStopped = true;
            e.stopPropagation();
          }
          utils_1.safeInvoke(action.props[callbackName], e);
        }
      }
    };
    HotkeysEvents.prototype.isScope = function (props) {
      return (props.global ? HotkeyScope.GLOBAL : HotkeyScope.LOCAL) === this.scope;
    };
    HotkeysEvents.prototype.isTextInput = function (e) {
      var elem = e.target;
      if (elem == null || elem.closest == null) {
        return false;
      }
      var editable = elem.closest("input, textarea, [contenteditable=true]");
      if (editable == null) {
        return false;
      }
      if (editable.tagName.toLowerCase() === "input") {
        var inputType = editable.type;
        if (inputType === "checkbox" || inputType === "radio") {
          return false;
        }
      }
      if (editable.readOnly) {
        return false;
      }
      return true;
    };
    return HotkeysEvents;
  }();
  exports.HotkeysEvents = HotkeysEvents;
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/components/hotkeys/hotkeysTarget.js", ["npm:tslib@1.9.3.js", "npm:react@16.7.0.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/errors.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/utils.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/hotkeys/hotkeysEvents.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  var React = tslib_1.__importStar($__require("npm:react@16.7.0.js"));
  var errors_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/errors.js");
  var utils_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/utils.js");
  var hotkeysEvents_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/hotkeys/hotkeysEvents.js");
  function HotkeysTarget(WrappedComponent) {
    if (!utils_1.isFunction(WrappedComponent.prototype.renderHotkeys)) {
      console.warn(errors_1.HOTKEYS_WARN_DECORATOR_NO_METHOD);
    }
    return _a = function (_super) {
      tslib_1.__extends(HotkeysTargetClass, _super);
      function HotkeysTargetClass() {
        return _super !== null && _super.apply(this, arguments) || this;
      }
      HotkeysTargetClass.prototype.componentWillMount = function () {
        if (_super.prototype.componentWillMount != null) {
          _super.prototype.componentWillMount.call(this);
        }
        this.localHotkeysEvents = new hotkeysEvents_1.HotkeysEvents(hotkeysEvents_1.HotkeyScope.LOCAL);
        this.globalHotkeysEvents = new hotkeysEvents_1.HotkeysEvents(hotkeysEvents_1.HotkeyScope.GLOBAL);
      };
      HotkeysTargetClass.prototype.componentDidMount = function () {
        if (_super.prototype.componentDidMount != null) {
          _super.prototype.componentDidMount.call(this);
        }
        document.addEventListener("keydown", this.globalHotkeysEvents.handleKeyDown);
        document.addEventListener("keyup", this.globalHotkeysEvents.handleKeyUp);
      };
      HotkeysTargetClass.prototype.componentWillUnmount = function () {
        if (_super.prototype.componentWillUnmount != null) {
          _super.prototype.componentWillUnmount.call(this);
        }
        document.removeEventListener("keydown", this.globalHotkeysEvents.handleKeyDown);
        document.removeEventListener("keyup", this.globalHotkeysEvents.handleKeyUp);
        this.globalHotkeysEvents.clear();
        this.localHotkeysEvents.clear();
      };
      HotkeysTargetClass.prototype.render = function () {
        var _this = this;
        var element = _super.prototype.render.call(this);
        if (element == null) {
          return element;
        }
        if (!React.isValidElement(element)) {
          console.warn(errors_1.HOTKEYS_WARN_DECORATOR_NEEDS_REACT_ELEMENT);
          return element;
        }
        if (utils_1.isFunction(this.renderHotkeys)) {
          var hotkeys = this.renderHotkeys();
          this.localHotkeysEvents.setHotkeys(hotkeys.props);
          this.globalHotkeysEvents.setHotkeys(hotkeys.props);
          if (this.localHotkeysEvents.count() > 0) {
            var tabIndex = hotkeys.props.tabIndex === undefined ? 0 : hotkeys.props.tabIndex;
            var _a = element.props,
                existingKeyDown_1 = _a.keyDown,
                existingKeyUp_1 = _a.keyUp;
            var onKeyDown = function (e) {
              _this.localHotkeysEvents.handleKeyDown(e.nativeEvent);
              utils_1.safeInvoke(existingKeyDown_1, e);
            };
            var onKeyUp = function (e) {
              _this.localHotkeysEvents.handleKeyUp(e.nativeEvent);
              utils_1.safeInvoke(existingKeyUp_1, e);
            };
            return React.cloneElement(element, {
              tabIndex: tabIndex,
              onKeyDown: onKeyDown,
              onKeyUp: onKeyUp
            });
          }
        }
        return element;
      };
      return HotkeysTargetClass;
    }(WrappedComponent), _a.displayName = "HotkeysTarget(" + utils_1.getDisplayName(WrappedComponent) + ")", _a;
    var _a;
  }
  exports.HotkeysTarget = HotkeysTarget;
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/components/hotkeys/hotkeyParser.js", [], true, function ($__require, exports, module) {
    /* */
    "use strict";
    /*
     * Copyright 2016 Palantir Technologies, Inc. All rights reserved.
     *
     * Licensed under the terms of the LICENSE file distributed with this project.
     */

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.KeyCodes = {
        8: "backspace",
        9: "tab",
        13: "enter",
        20: "capslock",
        27: "esc",
        32: "space",
        33: "pageup",
        34: "pagedown",
        35: "end",
        36: "home",
        37: "left",
        38: "up",
        39: "right",
        40: "down",
        45: "ins",
        46: "del",
        // number keys
        48: "0",
        49: "1",
        50: "2",
        51: "3",
        52: "4",
        53: "5",
        54: "6",
        55: "7",
        56: "8",
        57: "9",
        // alphabet
        65: "a",
        66: "b",
        67: "c",
        68: "d",
        69: "e",
        70: "f",
        71: "g",
        72: "h",
        73: "i",
        74: "j",
        75: "k",
        76: "l",
        77: "m",
        78: "n",
        79: "o",
        80: "p",
        81: "q",
        82: "r",
        83: "s",
        84: "t",
        85: "u",
        86: "v",
        87: "w",
        88: "x",
        89: "y",
        90: "z",
        // punctuation
        106: "*",
        107: "+",
        109: "-",
        110: ".",
        111: "/",
        186: ";",
        187: "=",
        188: ",",
        189: "-",
        190: ".",
        191: "/",
        192: "`",
        219: "[",
        220: "\\",
        221: "]",
        222: "'"
    };
    exports.Modifiers = {
        16: "shift",
        17: "ctrl",
        18: "alt",
        91: "meta",
        93: "meta",
        224: "meta"
    };
    exports.ModifierBitMasks = {
        alt: 1,
        ctrl: 2,
        meta: 4,
        shift: 8
    };
    exports.Aliases = {
        cmd: "meta",
        command: "meta",
        escape: "esc",
        minus: "-",
        mod: isMac() ? "meta" : "ctrl",
        option: "alt",
        plus: "+",
        return: "enter",
        win: "meta"
    };
    // alph sorting is unintuitive here
    // tslint:disable object-literal-sort-keys
    exports.ShiftKeys = {
        "~": "`",
        "!": "1",
        "@": "2",
        "#": "3",
        $: "4",
        "%": "5",
        "^": "6",
        "&": "7",
        "*": "8",
        "(": "9",
        ")": "0",
        _: "-",
        "+": "=",
        "{": "[",
        "}": "]",
        "|": "\\",
        ":": ";",
        '"': "'",
        "<": ",",
        ">": ".",
        "?": "/"
    };
    // tslint:enable object-literal-sort-keys
    // Function keys
    for (var i = 1; i <= 12; ++i) {
        exports.KeyCodes[111 + i] = "f" + i;
    }
    // Numpad
    for (var i = 0; i <= 9; ++i) {
        exports.KeyCodes[96 + i] = "num" + i.toString();
    }
    function comboMatches(a, b) {
        return a.modifiers === b.modifiers && a.key === b.key;
    }
    exports.comboMatches = comboMatches;
    /**
     * Converts a key combo string into a key combo object. Key combos include
     * zero or more modifier keys, such as `shift` or `alt`, and exactly one
     * action key, such as `A`, `enter`, or `left`.
     *
     * For action keys that require a shift, e.g. `@` or `|`, we inlude the
     * necessary `shift` modifier and automatically convert the action key to the
     * unshifted version. For example, `@` is equivalent to `shift+2`.
     */
    exports.parseKeyCombo = function (combo) {
        var pieces = combo.replace(/\s/g, "").toLowerCase().split("+");
        var modifiers = 0;
        var key = null;
        for (var _i = 0, pieces_1 = pieces; _i < pieces_1.length; _i++) {
            var piece = pieces_1[_i];
            if (piece === "") {
                throw new Error("Failed to parse key combo \"" + combo + "\".\n                Valid key combos look like \"cmd + plus\", \"shift+p\", or \"!\"");
            }
            if (exports.Aliases[piece] != null) {
                piece = exports.Aliases[piece];
            }
            if (exports.ModifierBitMasks[piece] != null) {
                modifiers += exports.ModifierBitMasks[piece];
            } else if (exports.ShiftKeys[piece] != null) {
                // tslint:disable-next-line no-string-literal
                modifiers += exports.ModifierBitMasks["shift"];
                key = exports.ShiftKeys[piece];
            } else {
                key = piece.toLowerCase();
            }
        }
        return { modifiers: modifiers, key: key };
    };
    /**
     * Converts a keyboard event into a valid combo prop string
     */
    exports.getKeyComboString = function (e) {
        var keys = [];
        // modifiers first
        if (e.ctrlKey) {
            keys.push("ctrl");
        }
        if (e.altKey) {
            keys.push("alt");
        }
        if (e.shiftKey) {
            keys.push("shift");
        }
        if (e.metaKey) {
            keys.push("meta");
        }
        var which = e.which;
        if (exports.Modifiers[which] != null) {
            // no action key
        } else if (exports.KeyCodes[which] != null) {
            keys.push(exports.KeyCodes[which]);
        } else {
            keys.push(String.fromCharCode(which).toLowerCase());
        }
        // join keys with plusses
        return keys.join(" + ");
    };
    /**
     * Determines the key combo object from the given keyboard event. Again, a key
     * combo includes zero or more modifiers (represented by a bitmask) and one
     * action key, which we determine from the `e.which` property of the keyboard
     * event.
     */
    exports.getKeyCombo = function (e) {
        var key = null;
        var which = e.which;
        if (exports.Modifiers[which] != null) {
            // keep key null
        } else if (exports.KeyCodes[which] != null) {
            key = exports.KeyCodes[which];
        } else {
            key = String.fromCharCode(which).toLowerCase();
        }
        var modifiers = 0;
        // tslint:disable no-string-literal
        if (e.altKey) {
            modifiers += exports.ModifierBitMasks["alt"];
        }
        if (e.ctrlKey) {
            modifiers += exports.ModifierBitMasks["ctrl"];
        }
        if (e.metaKey) {
            modifiers += exports.ModifierBitMasks["meta"];
        }
        if (e.shiftKey) {
            modifiers += exports.ModifierBitMasks["shift"];
        }
        // tslint:enable
        return { modifiers: modifiers, key: key };
    };
    /**
     * Splits a key combo string into its constituent key values and looks up
     * aliases, such as `return` -> `enter`.
     *
     * Unlike the parseKeyCombo method, this method does NOT convert shifted
     * action keys. So `"@"` will NOT be converted to `["shift", "2"]`).
     */
    exports.normalizeKeyCombo = function (combo, platformOverride) {
        var keys = combo.replace(/\s/g, "").split("+");
        return keys.map(function (key) {
            var keyName = exports.Aliases[key] != null ? exports.Aliases[key] : key;
            return keyName === "meta" ? isMac(platformOverride) ? "cmd" : "ctrl" : keyName;
        });
    };
    /* tslint:enable:no-string-literal */
    function isMac(platformOverride) {
        var platform = platformOverride != null ? platformOverride : typeof navigator !== "undefined" ? navigator.platform : undefined;
        return platform == null ? false : /Mac|iPod|iPhone|iPad/.test(platform);
    }
    
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/components/hotkeys/keyCombo.js", ["npm:tslib@1.9.3.js", "npm:classnames@2.2.6.js", "npm:react@16.7.0.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/index.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/icon/icon.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/hotkeys/hotkeyParser.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  var classnames_1 = tslib_1.__importDefault($__require("npm:classnames@2.2.6.js"));
  var React = tslib_1.__importStar($__require("npm:react@16.7.0.js"));
  var common_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/index.js");
  var icon_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/icon/icon.js");
  var hotkeyParser_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/hotkeys/hotkeyParser.js");
  var KeyIcons = {
    alt: "key-option",
    cmd: "key-command",
    ctrl: "key-control",
    delete: "key-delete",
    down: "arrow-down",
    enter: "key-enter",
    left: "arrow-left",
    meta: "key-command",
    right: "arrow-right",
    shift: "key-shift",
    up: "arrow-up"
  };
  var KeyCombo = function (_super) {
    tslib_1.__extends(KeyCombo, _super);
    function KeyCombo() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.renderKey = function (key, index) {
        var icon = KeyIcons[key];
        var reactKey = "key-" + index;
        return icon == null ? React.createElement("kbd", {
          className: common_1.Classes.KEY,
          key: reactKey
        }, key) : React.createElement("kbd", {
          className: classnames_1.default(common_1.Classes.KEY, common_1.Classes.MODIFIER_KEY),
          key: reactKey
        }, React.createElement(icon_1.Icon, { icon: icon }), " ", key);
      };
      _this.renderMinimalKey = function (key, index) {
        var icon = KeyIcons[key];
        return icon == null ? key : React.createElement(icon_1.Icon, {
          icon: icon,
          key: "key-" + index
        });
      };
      return _this;
    }
    KeyCombo.prototype.render = function () {
      var _a = this.props,
          className = _a.className,
          combo = _a.combo,
          minimal = _a.minimal;
      var keys = hotkeyParser_1.normalizeKeyCombo(combo).map(function (key) {
        return key.length === 1 ? key.toUpperCase() : key;
      }).map(minimal ? this.renderMinimalKey : this.renderKey);
      return React.createElement("span", { className: classnames_1.default(common_1.Classes.KEY_COMBO, className) }, keys);
    };
    KeyCombo.displayName = common_1.DISPLAYNAME_PREFIX + ".KeyCombo";
    return KeyCombo;
  }(React.Component);
  exports.KeyCombo = KeyCombo;
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/components/hotkeys/hotkey.js", ["npm:tslib@1.9.3.js", "npm:classnames@2.2.6.js", "npm:react@16.7.0.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/index.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/hotkeys/keyCombo.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  var classnames_1 = tslib_1.__importDefault($__require("npm:classnames@2.2.6.js"));
  var React = tslib_1.__importStar($__require("npm:react@16.7.0.js"));
  var common_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/index.js");
  var keyCombo_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/hotkeys/keyCombo.js");
  var Hotkey = function (_super) {
    tslib_1.__extends(Hotkey, _super);
    function Hotkey() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    Hotkey.prototype.render = function () {
      var _a = this.props,
          label = _a.label,
          className = _a.className,
          spreadableProps = tslib_1.__rest(_a, ["label", "className"]);
      var rootClasses = classnames_1.default(common_1.Classes.HOTKEY, className);
      return React.createElement("div", { className: rootClasses }, React.createElement("div", { className: common_1.Classes.HOTKEY_LABEL }, label), React.createElement(keyCombo_1.KeyCombo, tslib_1.__assign({}, spreadableProps)));
    };
    Hotkey.prototype.validateProps = function (props) {
      if (props.global !== true && props.group == null) {
        throw new Error("non-global <Hotkey>s must define a group");
      }
    };
    Hotkey.displayName = common_1.DISPLAYNAME_PREFIX + ".Hotkey";
    Hotkey.defaultProps = {
      allowInInput: false,
      disabled: false,
      global: false,
      preventDefault: false,
      stopPropagation: false
    };
    return Hotkey;
  }(common_1.AbstractPureComponent);
  exports.Hotkey = Hotkey;
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/components/hotkeys/hotkeysDialog.js", ["npm:tslib@1.9.3.js", "npm:classnames@2.2.6.js", "npm:react@16.7.0.js", "npm:react-dom@16.7.0.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/index.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/index.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/hotkeys/hotkey.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/hotkeys/hotkeys.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  var classnames_1 = tslib_1.__importDefault($__require("npm:classnames@2.2.6.js"));
  var React = tslib_1.__importStar($__require("npm:react@16.7.0.js"));
  var ReactDOM = tslib_1.__importStar($__require("npm:react-dom@16.7.0.js"));
  var common_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/index.js");
  var components_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/index.js");
  var hotkey_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/hotkeys/hotkey.js");
  var hotkeys_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/hotkeys/hotkeys.js");
  var DELAY_IN_MS = 10;
  var HotkeysDialog = function () {
    function HotkeysDialog() {
      var _this = this;
      this.componentProps = { globalHotkeysGroup: "Global hotkeys" };
      this.hotkeysQueue = [];
      this.isDialogShowing = false;
      this.show = function () {
        _this.isDialogShowing = true;
        _this.render();
      };
      this.hide = function () {
        _this.isDialogShowing = false;
        _this.render();
      };
    }
    HotkeysDialog.prototype.render = function () {
      if (this.container == null) {
        this.container = this.getContainer();
      }
      ReactDOM.render(this.renderComponent(), this.container);
    };
    HotkeysDialog.prototype.unmount = function () {
      if (this.container != null) {
        ReactDOM.unmountComponentAtNode(this.container);
        this.container.remove();
        delete this.container;
      }
    };
    HotkeysDialog.prototype.enqueueHotkeysForDisplay = function (hotkeys) {
      this.hotkeysQueue.push(hotkeys);
      window.clearTimeout(this.showTimeoutToken);
      this.showTimeoutToken = window.setTimeout(this.show, DELAY_IN_MS);
    };
    HotkeysDialog.prototype.hideAfterDelay = function () {
      window.clearTimeout(this.hideTimeoutToken);
      this.hideTimeoutToken = window.setTimeout(this.hide, DELAY_IN_MS);
    };
    HotkeysDialog.prototype.isShowing = function () {
      return this.isDialogShowing;
    };
    HotkeysDialog.prototype.getContainer = function () {
      if (this.container == null) {
        this.container = document.createElement("div");
        this.container.classList.add(common_1.Classes.PORTAL);
        document.body.appendChild(this.container);
      }
      return this.container;
    };
    HotkeysDialog.prototype.renderComponent = function () {
      return React.createElement(components_1.Dialog, tslib_1.__assign({}, this.componentProps, {
        className: classnames_1.default(common_1.Classes.HOTKEY_DIALOG, this.componentProps.className),
        isOpen: this.isDialogShowing,
        onClose: this.hide
      }), React.createElement("div", { className: common_1.Classes.DIALOG_BODY }, this.renderHotkeys()));
    };
    HotkeysDialog.prototype.renderHotkeys = function () {
      var _this = this;
      var hotkeys = this.emptyHotkeyQueue();
      var elements = hotkeys.map(function (hotkey, index) {
        var group = hotkey.global === true && hotkey.group == null ? _this.componentProps.globalHotkeysGroup : hotkey.group;
        return React.createElement(hotkey_1.Hotkey, tslib_1.__assign({ key: index }, hotkey, { group: group }));
      });
      return React.createElement(hotkeys_1.Hotkeys, null, elements);
    };
    HotkeysDialog.prototype.emptyHotkeyQueue = function () {
      var hotkeys = this.hotkeysQueue.reduce(function (arr, queued) {
        return arr.concat(queued);
      }, []);
      this.hotkeysQueue.length = 0;
      return hotkeys;
    };
    return HotkeysDialog;
  }();
  var HOTKEYS_DIALOG = new HotkeysDialog();
  function isHotkeysDialogShowing() {
    return HOTKEYS_DIALOG.isShowing();
  }
  exports.isHotkeysDialogShowing = isHotkeysDialogShowing;
  function setHotkeysDialogProps(props) {
    for (var key in props) {
      if (props.hasOwnProperty(key)) {
        HOTKEYS_DIALOG.componentProps[key] = props[key];
      }
    }
  }
  exports.setHotkeysDialogProps = setHotkeysDialogProps;
  function showHotkeysDialog(hotkeys) {
    HOTKEYS_DIALOG.enqueueHotkeysForDisplay(hotkeys);
  }
  exports.showHotkeysDialog = showHotkeysDialog;
  function hideHotkeysDialog() {
    HOTKEYS_DIALOG.hide();
  }
  exports.hideHotkeysDialog = hideHotkeysDialog;
  function hideHotkeysDialogAfterDelay() {
    HOTKEYS_DIALOG.hideAfterDelay();
  }
  exports.hideHotkeysDialogAfterDelay = hideHotkeysDialogAfterDelay;
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/components/hotkeys/hotkeys.js", ["npm:tslib@1.9.3.js", "npm:react@16.7.0.js", "npm:classnames@2.2.6.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/index.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/errors.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/utils.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/html/html.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/hotkeys/hotkey.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/hotkeys/keyCombo.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/hotkeys/hotkeysTarget.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/hotkeys/hotkeyParser.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/hotkeys/hotkeysDialog.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  var React = tslib_1.__importStar($__require("npm:react@16.7.0.js"));
  var classnames_1 = tslib_1.__importDefault($__require("npm:classnames@2.2.6.js"));
  var common_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/index.js");
  var errors_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/errors.js");
  var utils_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/utils.js");
  var html_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/html/html.js");
  var hotkey_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/hotkeys/hotkey.js");
  var hotkey_2 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/hotkeys/hotkey.js");
  exports.Hotkey = hotkey_2.Hotkey;
  var keyCombo_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/hotkeys/keyCombo.js");
  exports.KeyCombo = keyCombo_1.KeyCombo;
  var hotkeysTarget_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/hotkeys/hotkeysTarget.js");
  exports.HotkeysTarget = hotkeysTarget_1.HotkeysTarget;
  var hotkeyParser_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/hotkeys/hotkeyParser.js");
  exports.comboMatches = hotkeyParser_1.comboMatches;
  exports.getKeyCombo = hotkeyParser_1.getKeyCombo;
  exports.getKeyComboString = hotkeyParser_1.getKeyComboString;
  exports.parseKeyCombo = hotkeyParser_1.parseKeyCombo;
  var hotkeysDialog_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/hotkeys/hotkeysDialog.js");
  exports.hideHotkeysDialog = hotkeysDialog_1.hideHotkeysDialog;
  exports.setHotkeysDialogProps = hotkeysDialog_1.setHotkeysDialogProps;
  var Hotkeys = function (_super) {
    tslib_1.__extends(Hotkeys, _super);
    function Hotkeys() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    Hotkeys.prototype.render = function () {
      var hotkeys = React.Children.map(this.props.children, function (child) {
        return child.props;
      });
      hotkeys.sort(function (a, b) {
        if (a.global === b.global) {
          return a.group.localeCompare(b.group);
        }
        return a.global ? -1 : 1;
      });
      var lastGroup = null;
      var elems = [];
      for (var _i = 0, hotkeys_1 = hotkeys; _i < hotkeys_1.length; _i++) {
        var hotkey = hotkeys_1[_i];
        var groupLabel = hotkey.group;
        if (groupLabel !== lastGroup) {
          elems.push(React.createElement(html_1.H4, { key: "group-" + elems.length }, groupLabel));
          lastGroup = groupLabel;
        }
        elems.push(React.createElement(hotkey_1.Hotkey, tslib_1.__assign({ key: elems.length }, hotkey)));
      }
      var rootClasses = classnames_1.default(common_1.Classes.HOTKEY_COLUMN, this.props.className);
      return React.createElement("div", { className: rootClasses }, elems);
    };
    Hotkeys.prototype.validateProps = function (props) {
      React.Children.forEach(props.children, function (child) {
        if (!utils_1.isElementOfType(child, hotkey_1.Hotkey)) {
          throw new Error(errors_1.HOTKEYS_HOTKEY_CHILDREN);
        }
      });
    };
    Hotkeys.displayName = common_1.DISPLAYNAME_PREFIX + ".Hotkeys";
    Hotkeys.defaultProps = { tabIndex: 0 };
    return Hotkeys;
  }(common_1.AbstractPureComponent);
  exports.Hotkeys = Hotkeys;
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/components/menu/menuDivider.js", ["npm:tslib@1.9.3.js", "npm:classnames@2.2.6.js", "npm:react@16.7.0.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/html/html.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  var classnames_1 = tslib_1.__importDefault($__require("npm:classnames@2.2.6.js"));
  var React = tslib_1.__importStar($__require("npm:react@16.7.0.js"));
  var Classes = tslib_1.__importStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js"));
  var props_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js");
  var html_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/html/html.js");
  var MenuDivider = function (_super) {
    tslib_1.__extends(MenuDivider, _super);
    function MenuDivider() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    MenuDivider.prototype.render = function () {
      var _a = this.props,
          className = _a.className,
          title = _a.title;
      if (title == null) {
        return React.createElement("li", { className: classnames_1.default(Classes.MENU_DIVIDER, className) });
      } else {
        return React.createElement("li", { className: classnames_1.default(Classes.MENU_HEADER, className) }, React.createElement(html_1.H6, null, title));
      }
    };
    MenuDivider.displayName = props_1.DISPLAYNAME_PREFIX + ".MenuDivider";
    return MenuDivider;
  }(React.Component);
  exports.MenuDivider = MenuDivider;
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/components/menu/menu.js", ["npm:tslib@1.9.3.js", "npm:classnames@2.2.6.js", "npm:react@16.7.0.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/menu/menuDivider.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/menu/menuItem.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  var classnames_1 = tslib_1.__importDefault($__require("npm:classnames@2.2.6.js"));
  var React = tslib_1.__importStar($__require("npm:react@16.7.0.js"));
  var Classes = tslib_1.__importStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js"));
  var props_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js");
  var menuDivider_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/menu/menuDivider.js");
  var menuItem_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/menu/menuItem.js");
  var Menu = function (_super) {
    tslib_1.__extends(Menu, _super);
    function Menu() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    Menu.prototype.render = function () {
      var _a = this.props,
          className = _a.className,
          children = _a.children,
          large = _a.large,
          ulRef = _a.ulRef,
          htmlProps = tslib_1.__rest(_a, ["className", "children", "large", "ulRef"]);
      var classes = classnames_1.default(Classes.MENU, (_b = {}, _b[Classes.LARGE] = large, _b), className);
      return React.createElement("ul", tslib_1.__assign({}, htmlProps, {
        className: classes,
        ref: ulRef
      }), children);
      var _b;
    };
    Menu.displayName = props_1.DISPLAYNAME_PREFIX + ".Menu";
    Menu.Divider = menuDivider_1.MenuDivider;
    Menu.Item = menuItem_1.MenuItem;
    return Menu;
  }(React.Component);
  exports.Menu = Menu;
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/components/menu/menuItem.js", ["npm:tslib@1.9.3.js", "npm:classnames@2.2.6.js", "npm:react@16.7.0.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/position.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/icon/icon.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/popover/popover.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/text/text.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/menu/menu.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  var classnames_1 = tslib_1.__importDefault($__require("npm:classnames@2.2.6.js"));
  var React = tslib_1.__importStar($__require("npm:react@16.7.0.js"));
  var Classes = tslib_1.__importStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js"));
  var position_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/position.js");
  var props_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js");
  var icon_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/icon/icon.js");
  var popover_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/popover/popover.js");
  var text_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/text/text.js");
  var menu_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/menu/menu.js");
  var MenuItem = function (_super) {
    tslib_1.__extends(MenuItem, _super);
    function MenuItem() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    MenuItem.prototype.render = function () {
      var _a = this.props,
          active = _a.active,
          className = _a.className,
          children = _a.children,
          disabled = _a.disabled,
          icon = _a.icon,
          intent = _a.intent,
          labelElement = _a.labelElement,
          multiline = _a.multiline,
          popoverProps = _a.popoverProps,
          shouldDismissPopover = _a.shouldDismissPopover,
          text = _a.text,
          textClassName = _a.textClassName,
          _b = _a.tagName,
          TagName = _b === void 0 ? "a" : _b,
          htmlProps = tslib_1.__rest(_a, ["active", "className", "children", "disabled", "icon", "intent", "labelElement", "multiline", "popoverProps", "shouldDismissPopover", "text", "textClassName", "tagName"]);
      var hasSubmenu = children != null;
      var intentClass = Classes.intentClass(intent);
      var anchorClasses = classnames_1.default(Classes.MENU_ITEM, intentClass, (_c = {}, _c[Classes.ACTIVE] = active, _c[Classes.INTENT_PRIMARY] = active && intentClass == null, _c[Classes.DISABLED] = disabled, _c[Classes.POPOVER_DISMISS] = shouldDismissPopover && !disabled && !hasSubmenu, _c), className);
      var target = React.createElement(TagName, tslib_1.__assign({}, htmlProps, disabled ? DISABLED_PROPS : {}, { className: anchorClasses }), React.createElement(icon_1.Icon, { icon: icon }), React.createElement(text_1.Text, {
        className: classnames_1.default(Classes.FILL, textClassName),
        ellipsize: !multiline
      }, text), this.maybeRenderLabel(labelElement), hasSubmenu && React.createElement(icon_1.Icon, { icon: "caret-right" }));
      var liClasses = classnames_1.default((_d = {}, _d[Classes.MENU_SUBMENU] = hasSubmenu, _d));
      return React.createElement("li", { className: liClasses }, this.maybeRenderPopover(target, children));
      var _c, _d;
    };
    MenuItem.prototype.maybeRenderLabel = function (labelElement) {
      var _a = this.props,
          label = _a.label,
          labelClassName = _a.labelClassName;
      if (label == null && labelElement == null) {
        return null;
      }
      return React.createElement("span", { className: classnames_1.default(Classes.MENU_ITEM_LABEL, labelClassName) }, label, labelElement);
    };
    MenuItem.prototype.maybeRenderPopover = function (target, children) {
      if (children == null) {
        return target;
      }
      var _a = this.props,
          disabled = _a.disabled,
          popoverProps = _a.popoverProps;
      return React.createElement(popover_1.Popover, tslib_1.__assign({
        autoFocus: false,
        captureDismiss: false,
        disabled: disabled,
        enforceFocus: false,
        hoverCloseDelay: 0,
        interactionKind: popover_1.PopoverInteractionKind.HOVER,
        modifiers: SUBMENU_POPOVER_MODIFIERS,
        position: position_1.Position.RIGHT_TOP,
        usePortal: false
      }, popoverProps, {
        content: React.createElement(menu_1.Menu, null, children),
        minimal: true,
        popoverClassName: classnames_1.default(Classes.MENU_SUBMENU, popoverProps.popoverClassName),
        target: target
      }));
    };
    MenuItem.defaultProps = {
      disabled: false,
      multiline: false,
      popoverProps: {},
      shouldDismissPopover: true,
      text: ""
    };
    MenuItem.displayName = props_1.DISPLAYNAME_PREFIX + ".MenuItem";
    return MenuItem;
  }(React.PureComponent);
  exports.MenuItem = MenuItem;
  var SUBMENU_POPOVER_MODIFIERS = {
    flip: {
      boundariesElement: "viewport",
      padding: 20
    },
    offset: { offset: -5 },
    preventOverflow: {
      boundariesElement: "viewport",
      padding: 20
    }
  };
  var DISABLED_PROPS = {
    href: undefined,
    onClick: undefined,
    onMouseDown: undefined,
    onMouseEnter: undefined,
    onMouseLeave: undefined,
    tabIndex: -1
  };
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/components/navbar/navbar.js", ["npm:tslib@1.9.3.js", "npm:classnames@2.2.6.js", "npm:react@16.7.0.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/navbar/navbarDivider.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/navbar/navbarGroup.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/navbar/navbarHeading.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  var classnames_1 = tslib_1.__importDefault($__require("npm:classnames@2.2.6.js"));
  var React = tslib_1.__importStar($__require("npm:react@16.7.0.js"));
  var Classes = tslib_1.__importStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js"));
  var props_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js");
  var navbarDivider_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/navbar/navbarDivider.js");
  var navbarGroup_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/navbar/navbarGroup.js");
  var navbarHeading_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/navbar/navbarHeading.js");
  var Navbar = function (_super) {
    tslib_1.__extends(Navbar, _super);
    function Navbar() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    Navbar.prototype.render = function () {
      var _a = this.props,
          children = _a.children,
          className = _a.className,
          fixedToTop = _a.fixedToTop,
          htmlProps = tslib_1.__rest(_a, ["children", "className", "fixedToTop"]);
      var classes = classnames_1.default(Classes.NAVBAR, (_b = {}, _b[Classes.FIXED_TOP] = fixedToTop, _b), className);
      return React.createElement("div", tslib_1.__assign({ className: classes }, htmlProps), children);
      var _b;
    };
    Navbar.displayName = props_1.DISPLAYNAME_PREFIX + ".Navbar";
    Navbar.Divider = navbarDivider_1.NavbarDivider;
    Navbar.Group = navbarGroup_1.NavbarGroup;
    Navbar.Heading = navbarHeading_1.NavbarHeading;
    return Navbar;
  }(React.PureComponent);
  exports.Navbar = Navbar;
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/components/navbar/navbarDivider.js", ["npm:tslib@1.9.3.js", "npm:classnames@2.2.6.js", "npm:react@16.7.0.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  var classnames_1 = tslib_1.__importDefault($__require("npm:classnames@2.2.6.js"));
  var React = tslib_1.__importStar($__require("npm:react@16.7.0.js"));
  var Classes = tslib_1.__importStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js"));
  var props_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js");
  var NavbarDivider = function (_super) {
    tslib_1.__extends(NavbarDivider, _super);
    function NavbarDivider() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    NavbarDivider.prototype.render = function () {
      var _a = this.props,
          className = _a.className,
          htmlProps = tslib_1.__rest(_a, ["className"]);
      return React.createElement("div", tslib_1.__assign({ className: classnames_1.default(Classes.NAVBAR_DIVIDER, className) }, htmlProps));
    };
    NavbarDivider.displayName = props_1.DISPLAYNAME_PREFIX + ".NavbarDivider";
    return NavbarDivider;
  }(React.PureComponent);
  exports.NavbarDivider = NavbarDivider;
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/components/navbar/navbarGroup.js", ["npm:tslib@1.9.3.js", "npm:classnames@2.2.6.js", "npm:react@16.7.0.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/alignment.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  var classnames_1 = tslib_1.__importDefault($__require("npm:classnames@2.2.6.js"));
  var React = tslib_1.__importStar($__require("npm:react@16.7.0.js"));
  var alignment_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/alignment.js");
  var Classes = tslib_1.__importStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js"));
  var props_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js");
  var NavbarGroup = function (_super) {
    tslib_1.__extends(NavbarGroup, _super);
    function NavbarGroup() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    NavbarGroup.prototype.render = function () {
      var _a = this.props,
          align = _a.align,
          children = _a.children,
          className = _a.className,
          htmlProps = tslib_1.__rest(_a, ["align", "children", "className"]);
      var classes = classnames_1.default(Classes.NAVBAR_GROUP, Classes.alignmentClass(align), className);
      return React.createElement("div", tslib_1.__assign({ className: classes }, htmlProps), children);
    };
    NavbarGroup.displayName = props_1.DISPLAYNAME_PREFIX + ".NavbarGroup";
    NavbarGroup.defaultProps = { align: alignment_1.Alignment.LEFT };
    return NavbarGroup;
  }(React.PureComponent);
  exports.NavbarGroup = NavbarGroup;
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/components/navbar/navbarHeading.js", ["npm:tslib@1.9.3.js", "npm:classnames@2.2.6.js", "npm:react@16.7.0.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  var classnames_1 = tslib_1.__importDefault($__require("npm:classnames@2.2.6.js"));
  var React = tslib_1.__importStar($__require("npm:react@16.7.0.js"));
  var Classes = tslib_1.__importStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js"));
  var props_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js");
  var NavbarHeading = function (_super) {
    tslib_1.__extends(NavbarHeading, _super);
    function NavbarHeading() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    NavbarHeading.prototype.render = function () {
      var _a = this.props,
          children = _a.children,
          className = _a.className,
          htmlProps = tslib_1.__rest(_a, ["children", "className"]);
      return React.createElement("div", tslib_1.__assign({ className: classnames_1.default(Classes.NAVBAR_HEADING, className) }, htmlProps), children);
    };
    NavbarHeading.displayName = props_1.DISPLAYNAME_PREFIX + ".NavbarHeading";
    return NavbarHeading;
  }(React.PureComponent);
  exports.NavbarHeading = NavbarHeading;
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/components/html/html.js", ["npm:tslib@1.9.3.js", "npm:classnames@2.2.6.js", "npm:react@16.7.0.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  var classnames_1 = tslib_1.__importDefault($__require("npm:classnames@2.2.6.js"));
  var React = tslib_1.__importStar($__require("npm:react@16.7.0.js"));
  var classes_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js");
  function htmlElement(tagName, tagClassName) {
    return function (props) {
      var className = props.className,
          elementRef = props.elementRef,
          htmlProps = tslib_1.__rest(props, ["className", "elementRef"]);
      return React.createElement(tagName, tslib_1.__assign({}, htmlProps, {
        className: classnames_1.default(tagClassName, className),
        ref: elementRef
      }));
    };
  }
  exports.H1 = htmlElement("h1", classes_1.HEADING);
  exports.H2 = htmlElement("h2", classes_1.HEADING);
  exports.H3 = htmlElement("h3", classes_1.HEADING);
  exports.H4 = htmlElement("h4", classes_1.HEADING);
  exports.H5 = htmlElement("h5", classes_1.HEADING);
  exports.H6 = htmlElement("h6", classes_1.HEADING);
  exports.Blockquote = htmlElement("blockquote", classes_1.BLOCKQUOTE);
  exports.Code = htmlElement("code", classes_1.CODE);
  exports.Pre = htmlElement("pre", classes_1.CODE_BLOCK);
  exports.Label = htmlElement("label", classes_1.LABEL);
  exports.OL = htmlElement("ol", classes_1.LIST);
  exports.UL = htmlElement("ul", classes_1.LIST);
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/components/non-ideal-state/nonIdealState.js", ["npm:tslib@1.9.3.js", "npm:classnames@2.2.6.js", "npm:react@16.7.0.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/utils.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/html/html.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/icon/icon.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  var classnames_1 = tslib_1.__importDefault($__require("npm:classnames@2.2.6.js"));
  var React = tslib_1.__importStar($__require("npm:react@16.7.0.js"));
  var Classes = tslib_1.__importStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js"));
  var props_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js");
  var utils_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/utils.js");
  var html_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/html/html.js");
  var icon_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/icon/icon.js");
  var NonIdealState = function (_super) {
    tslib_1.__extends(NonIdealState, _super);
    function NonIdealState() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    NonIdealState.prototype.render = function () {
      var _a = this.props,
          action = _a.action,
          children = _a.children,
          className = _a.className,
          description = _a.description,
          title = _a.title;
      return React.createElement("div", { className: classnames_1.default(Classes.NON_IDEAL_STATE, className) }, this.maybeRenderVisual(), title && React.createElement(html_1.H4, null, title), description && utils_1.ensureElement(description, "div"), action, children);
    };
    NonIdealState.prototype.maybeRenderVisual = function () {
      var icon = this.props.icon;
      if (icon == null) {
        return null;
      } else {
        return React.createElement("div", { className: Classes.NON_IDEAL_STATE_VISUAL }, React.createElement(icon_1.Icon, {
          icon: icon,
          iconSize: icon_1.Icon.SIZE_LARGE * 3
        }));
      }
    };
    NonIdealState.displayName = props_1.DISPLAYNAME_PREFIX + ".NonIdealState";
    return NonIdealState;
  }(React.PureComponent);
  exports.NonIdealState = NonIdealState;
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/components/overflow-list/overflowList.js", ["npm:tslib@1.9.3.js", "npm:classnames@2.2.6.js", "npm:react@16.7.0.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/boundary.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/errors.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/utils.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/resize-sensor/resizeSensor.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  var classnames_1 = tslib_1.__importDefault($__require("npm:classnames@2.2.6.js"));
  var React = tslib_1.__importStar($__require("npm:react@16.7.0.js"));
  var boundary_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/boundary.js");
  var Classes = tslib_1.__importStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js"));
  var errors_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/errors.js");
  var props_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js");
  var utils_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/utils.js");
  var resizeSensor_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/resize-sensor/resizeSensor.js");
  var OverflowDirection;
  (function (OverflowDirection) {
    OverflowDirection[OverflowDirection["NONE"] = 0] = "NONE";
    OverflowDirection[OverflowDirection["GROW"] = 1] = "GROW";
    OverflowDirection[OverflowDirection["SHRINK"] = 2] = "SHRINK";
  })(OverflowDirection = exports.OverflowDirection || (exports.OverflowDirection = {}));
  var OverflowList = function (_super) {
    tslib_1.__extends(OverflowList, _super);
    function OverflowList() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.state = {
        direction: OverflowDirection.NONE,
        lastOverflowCount: 0,
        overflow: [],
        visible: _this.props.items
      };
      _this.previousWidths = new Map();
      _this.spacer = null;
      _this.resize = function (entries) {
        var growing = entries.some(function (entry) {
          var previousWidth = _this.previousWidths.get(entry.target) || 0;
          return entry.contentRect.width > previousWidth;
        });
        _this.repartition(growing);
        entries.forEach(function (entry) {
          return _this.previousWidths.set(entry.target, entry.contentRect.width);
        });
      };
      return _this;
    }
    OverflowList.ofType = function () {
      return OverflowList;
    };
    OverflowList.prototype.componentDidMount = function () {
      this.repartition(false);
    };
    OverflowList.prototype.componentWillReceiveProps = function (nextProps) {
      var _a = this.props,
          collapseFrom = _a.collapseFrom,
          items = _a.items,
          minVisibleItems = _a.minVisibleItems,
          observeParents = _a.observeParents,
          overflowRenderer = _a.overflowRenderer,
          visibleItemRenderer = _a.visibleItemRenderer;
      if (observeParents !== nextProps.observeParents) {
        console.warn(errors_1.OVERFLOW_LIST_OBSERVE_PARENTS_CHANGED);
      }
      if (collapseFrom !== nextProps.collapseFrom || items !== nextProps.items || minVisibleItems !== nextProps.minVisibleItems || overflowRenderer !== nextProps.overflowRenderer || visibleItemRenderer !== nextProps.visibleItemRenderer) {
        this.setState({
          direction: OverflowDirection.GROW,
          lastOverflowCount: 0,
          overflow: [],
          visible: nextProps.items
        });
      }
    };
    OverflowList.prototype.componentDidUpdate = function (_prevProps, prevState) {
      this.repartition(false);
      var _a = this.state,
          direction = _a.direction,
          overflow = _a.overflow,
          lastOverflowCount = _a.lastOverflowCount;
      if (direction === OverflowDirection.NONE && direction !== prevState.direction && overflow.length !== lastOverflowCount) {
        utils_1.safeInvoke(this.props.onOverflow, overflow);
      }
    };
    OverflowList.prototype.render = function () {
      var _this = this;
      var _a = this.props,
          className = _a.className,
          collapseFrom = _a.collapseFrom,
          observeParents = _a.observeParents,
          style = _a.style,
          _b = _a.tagName,
          TagName = _b === void 0 ? "div" : _b,
          visibleItemRenderer = _a.visibleItemRenderer;
      var overflow = this.maybeRenderOverflow();
      return React.createElement(resizeSensor_1.ResizeSensor, {
        onResize: this.resize,
        observeParents: observeParents
      }, React.createElement(TagName, {
        className: classnames_1.default(Classes.OVERFLOW_LIST, className),
        style: style
      }, collapseFrom === boundary_1.Boundary.START ? overflow : null, this.state.visible.map(visibleItemRenderer), collapseFrom === boundary_1.Boundary.END ? overflow : null, React.createElement("div", {
        className: Classes.OVERFLOW_LIST_SPACER,
        ref: function (ref) {
          return _this.spacer = ref;
        }
      })));
    };
    OverflowList.prototype.maybeRenderOverflow = function () {
      var overflow = this.state.overflow;
      if (overflow.length === 0) {
        return null;
      }
      return this.props.overflowRenderer(overflow);
    };
    OverflowList.prototype.repartition = function (growing) {
      var _this = this;
      if (this.spacer == null) {
        return;
      }
      if (growing) {
        this.setState(function (state) {
          return {
            direction: OverflowDirection.GROW,
            lastOverflowCount: state.direction === OverflowDirection.NONE ? state.overflow.length : state.lastOverflowCount,
            overflow: [],
            visible: _this.props.items
          };
        });
      } else if (this.spacer.getBoundingClientRect().width < 0.9) {
        this.setState(function (state) {
          if (state.visible.length <= _this.props.minVisibleItems) {
            return null;
          }
          var collapseFromStart = _this.props.collapseFrom === boundary_1.Boundary.START;
          var visible = state.visible.slice();
          var next = collapseFromStart ? visible.shift() : visible.pop();
          if (next === undefined) {
            return null;
          }
          var overflow = collapseFromStart ? state.overflow.concat([next]) : [next].concat(state.overflow);
          return {
            direction: state.direction === OverflowDirection.NONE ? OverflowDirection.SHRINK : state.direction,
            overflow: overflow,
            visible: visible
          };
        });
      } else {
        this.setState({ direction: OverflowDirection.NONE });
      }
    };
    OverflowList.displayName = props_1.DISPLAYNAME_PREFIX + ".OverflowList";
    OverflowList.defaultProps = {
      collapseFrom: boundary_1.Boundary.START,
      minVisibleItems: 0
    };
    return OverflowList;
  }(React.PureComponent);
  exports.OverflowList = OverflowList;
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/components/panel-stack/panelView.js", ["npm:tslib@1.9.3.js", "npm:react@16.7.0.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/index.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/button/buttons.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/text/text.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  var React = tslib_1.__importStar($__require("npm:react@16.7.0.js"));
  var common_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/index.js");
  var buttons_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/button/buttons.js");
  var text_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/text/text.js");
  var PanelView = function (_super) {
    tslib_1.__extends(PanelView, _super);
    function PanelView() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.handleClose = function () {
        return _this.props.onClose(_this.props.panel);
      };
      return _this;
    }
    PanelView.prototype.render = function () {
      var _a = this.props,
          panel = _a.panel,
          onOpen = _a.onOpen;
      return React.createElement("div", { className: common_1.Classes.PANEL_STACK_VIEW }, React.createElement("div", { className: common_1.Classes.PANEL_STACK_HEADER }, React.createElement("span", null, this.maybeRenderBack()), React.createElement(text_1.Text, {
        className: common_1.Classes.HEADING,
        ellipsize: true
      }, panel.title), React.createElement("span", null)), React.createElement(panel.component, tslib_1.__assign({
        openPanel: onOpen,
        closePanel: this.handleClose
      }, panel.props)));
    };
    PanelView.prototype.maybeRenderBack = function () {
      if (this.props.previousPanel === undefined) {
        return null;
      }
      return React.createElement(buttons_1.Button, {
        className: common_1.Classes.PANEL_STACK_HEADER_BACK,
        icon: "chevron-left",
        minimal: true,
        onClick: this.handleClose,
        small: true,
        text: this.props.previousPanel.title
      });
    };
    return PanelView;
  }(React.PureComponent);
  exports.PanelView = PanelView;
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/components/panel-stack/panelStack.js", ["npm:tslib@1.9.3.js", "npm:classnames@2.2.6.js", "npm:react@16.7.0.js", "npm:react-transition-group@2.5.3.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/utils.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/panel-stack/panelView.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  var classnames_1 = tslib_1.__importDefault($__require("npm:classnames@2.2.6.js"));
  var React = tslib_1.__importStar($__require("npm:react@16.7.0.js"));
  var react_transition_group_1 = $__require("npm:react-transition-group@2.5.3.js");
  var Classes = tslib_1.__importStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js"));
  var utils_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/utils.js");
  var panelView_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/panel-stack/panelView.js");
  var PanelStack = function (_super) {
    tslib_1.__extends(PanelStack, _super);
    function PanelStack() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.state = {
        direction: "push",
        stack: [_this.props.initialPanel]
      };
      _this.handlePanelClose = function (panel) {
        var stack = _this.state.stack;
        if (stack[0] !== panel || stack.length <= 1) {
          return;
        }
        utils_1.safeInvoke(_this.props.onClose, panel);
        _this.setState(function (state) {
          return {
            direction: "pop",
            stack: state.stack.filter(function (p) {
              return p !== panel;
            })
          };
        });
      };
      _this.handlePanelOpen = function (panel) {
        utils_1.safeInvoke(_this.props.onOpen, panel);
        _this.setState(function (state) {
          return {
            direction: "push",
            stack: [panel].concat(state.stack)
          };
        });
      };
      return _this;
    }
    PanelStack.prototype.render = function () {
      var classes = classnames_1.default(Classes.PANEL_STACK, Classes.PANEL_STACK + "-" + this.state.direction, this.props.className);
      return React.createElement(react_transition_group_1.TransitionGroup, {
        className: classes,
        component: "div"
      }, this.renderCurrentPanel());
    };
    PanelStack.prototype.renderCurrentPanel = function () {
      var stack = this.state.stack;
      if (stack.length === 0) {
        return null;
      }
      var activePanel = stack[0],
          previousPanel = stack[1];
      return React.createElement(react_transition_group_1.CSSTransition, {
        classNames: Classes.PANEL_STACK,
        key: stack.length,
        timeout: 400
      }, React.createElement(panelView_1.PanelView, {
        onClose: this.handlePanelClose,
        onOpen: this.handlePanelOpen,
        panel: activePanel,
        previousPanel: previousPanel
      }));
    };
    return PanelStack;
  }(React.PureComponent);
  exports.PanelStack = PanelStack;
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/components/popover/popoverSharedProps.js", ["npm:tslib@1.9.3.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/position.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  var position_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/position.js");
  exports.PopoverPosition = tslib_1.__assign({}, position_1.Position, {
    AUTO: "auto",
    AUTO_END: "auto-end",
    AUTO_START: "auto-start"
  });
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/components/progress-bar/progressBar.js", ["npm:tslib@1.9.3.js", "npm:classnames@2.2.6.js", "npm:react@16.7.0.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/utils.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  var classnames_1 = tslib_1.__importDefault($__require("npm:classnames@2.2.6.js"));
  var React = tslib_1.__importStar($__require("npm:react@16.7.0.js"));
  var Classes = tslib_1.__importStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js"));
  var props_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js");
  var utils_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/utils.js");
  var ProgressBar = function (_super) {
    tslib_1.__extends(ProgressBar, _super);
    function ProgressBar() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    ProgressBar.prototype.render = function () {
      var _a = this.props,
          _b = _a.animate,
          animate = _b === void 0 ? true : _b,
          className = _a.className,
          intent = _a.intent,
          _c = _a.stripes,
          stripes = _c === void 0 ? true : _c,
          value = _a.value;
      var classes = classnames_1.default(Classes.PROGRESS_BAR, Classes.intentClass(intent), (_d = {}, _d[Classes.PROGRESS_NO_ANIMATION] = !animate, _d[Classes.PROGRESS_NO_STRIPES] = !stripes, _d), className);
      var width = value == null ? null : 100 * utils_1.clamp(value, 0, 1) + "%";
      return React.createElement("div", { className: classes }, React.createElement("div", {
        className: Classes.PROGRESS_METER,
        style: { width: width }
      }));
      var _d;
    };
    ProgressBar.displayName = props_1.DISPLAYNAME_PREFIX + ".ProgressBar";
    return ProgressBar;
  }(React.PureComponent);
  exports.ProgressBar = ProgressBar;
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/components/slider/rangeSlider.js", ["npm:tslib@1.9.3.js", "npm:react@16.7.0.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/abstractPureComponent.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/errors.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/intent.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/slider/multiSlider.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  var React = tslib_1.__importStar($__require("npm:react@16.7.0.js"));
  var abstractPureComponent_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/abstractPureComponent.js");
  var Errors = tslib_1.__importStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/errors.js"));
  var intent_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/intent.js");
  var props_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js");
  var multiSlider_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/slider/multiSlider.js");
  var RangeIndex;
  (function (RangeIndex) {
    RangeIndex[RangeIndex["START"] = 0] = "START";
    RangeIndex[RangeIndex["END"] = 1] = "END";
  })(RangeIndex || (RangeIndex = {}));
  var RangeSlider = function (_super) {
    tslib_1.__extends(RangeSlider, _super);
    function RangeSlider() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    RangeSlider.prototype.render = function () {
      var _a = this.props,
          value = _a.value,
          props = tslib_1.__rest(_a, ["value"]);
      return React.createElement(multiSlider_1.MultiSlider, tslib_1.__assign({}, props), React.createElement(multiSlider_1.MultiSlider.Handle, {
        value: value[RangeIndex.START],
        type: "start",
        intentAfter: intent_1.Intent.PRIMARY
      }), React.createElement(multiSlider_1.MultiSlider.Handle, {
        value: value[RangeIndex.END],
        type: "end"
      }));
    };
    RangeSlider.prototype.validateProps = function (props) {
      var value = props.value;
      if (value == null || value[RangeIndex.START] == null || value[RangeIndex.END] == null) {
        throw new Error(Errors.RANGESLIDER_NULL_VALUE);
      }
    };
    RangeSlider.defaultProps = tslib_1.__assign({}, multiSlider_1.MultiSlider.defaultSliderProps, { value: [0, 10] });
    RangeSlider.displayName = props_1.DISPLAYNAME_PREFIX + ".RangeSlider";
    return RangeSlider;
  }(abstractPureComponent_1.AbstractPureComponent);
  exports.RangeSlider = RangeSlider;
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/components/slider/handle.js", ["npm:tslib@1.9.3.js", "npm:classnames@2.2.6.js", "npm:react@16.7.0.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/abstractPureComponent.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/keys.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/utils.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/slider/sliderUtils.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  var classnames_1 = tslib_1.__importDefault($__require("npm:classnames@2.2.6.js"));
  var React = tslib_1.__importStar($__require("npm:react@16.7.0.js"));
  var abstractPureComponent_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/abstractPureComponent.js");
  var Classes = tslib_1.__importStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js"));
  var Keys = tslib_1.__importStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/keys.js"));
  var props_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js");
  var utils_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/utils.js");
  var sliderUtils_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/slider/sliderUtils.js");
  var NUMBER_PROPS = ["max", "min", "stepSize", "tickSize", "value"];
  var Handle = function (_super) {
    tslib_1.__extends(Handle, _super);
    function Handle() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.state = { isMoving: false };
      _this.refHandlers = { handle: function (el) {
          return _this.handleElement = el;
        } };
      _this.beginHandleMovement = function (event) {
        document.addEventListener("mousemove", _this.handleHandleMovement);
        document.addEventListener("mouseup", _this.endHandleMovement);
        _this.setState({ isMoving: true });
        _this.changeValue(_this.clientToValue(_this.mouseEventClientOffset(event)));
      };
      _this.beginHandleTouchMovement = function (event) {
        document.addEventListener("touchmove", _this.handleHandleTouchMovement);
        document.addEventListener("touchend", _this.endHandleTouchMovement);
        document.addEventListener("touchcancel", _this.endHandleTouchMovement);
        _this.setState({ isMoving: true });
        _this.changeValue(_this.clientToValue(_this.touchEventClientOffset(event)));
      };
      _this.endHandleMovement = function (event) {
        _this.handleMoveEndedAt(_this.mouseEventClientOffset(event));
      };
      _this.endHandleTouchMovement = function (event) {
        _this.handleMoveEndedAt(_this.touchEventClientOffset(event));
      };
      _this.handleMoveEndedAt = function (clientPixel) {
        _this.removeDocumentEventListeners();
        _this.setState({ isMoving: false });
        var onRelease = _this.props.onRelease;
        var finalValue = _this.changeValue(_this.clientToValue(clientPixel));
        utils_1.safeInvoke(onRelease, finalValue);
      };
      _this.handleHandleMovement = function (event) {
        _this.handleMovedTo(_this.mouseEventClientOffset(event));
      };
      _this.handleHandleTouchMovement = function (event) {
        _this.handleMovedTo(_this.touchEventClientOffset(event));
      };
      _this.handleMovedTo = function (clientPixel) {
        if (_this.state.isMoving && !_this.props.disabled) {
          _this.changeValue(_this.clientToValue(clientPixel));
        }
      };
      _this.handleKeyDown = function (event) {
        var _a = _this.props,
            stepSize = _a.stepSize,
            value = _a.value;
        var which = event.which;
        if (which === Keys.ARROW_DOWN || which === Keys.ARROW_LEFT) {
          _this.changeValue(value - stepSize);
          event.preventDefault();
        } else if (which === Keys.ARROW_UP || which === Keys.ARROW_RIGHT) {
          _this.changeValue(value + stepSize);
          event.preventDefault();
        }
      };
      _this.handleKeyUp = function (event) {
        if ([Keys.ARROW_UP, Keys.ARROW_DOWN, Keys.ARROW_LEFT, Keys.ARROW_RIGHT].indexOf(event.which) >= 0) {
          utils_1.safeInvoke(_this.props.onRelease, _this.props.value);
        }
      };
      return _this;
    }
    Handle.prototype.componentDidMount = function () {
      this.forceUpdate();
    };
    Handle.prototype.render = function () {
      var _a = this.props,
          className = _a.className,
          disabled = _a.disabled,
          label = _a.label,
          min = _a.min,
          tickSizeRatio = _a.tickSizeRatio,
          value = _a.value,
          vertical = _a.vertical;
      var isMoving = this.state.isMoving;
      var handleMidpoint = this.getHandleMidpointAndOffset(this.handleElement, true).handleMidpoint;
      var offsetRatio = (value - min) * tickSizeRatio;
      var offsetCalc = "calc(" + sliderUtils_1.formatPercentage(offsetRatio) + " - " + handleMidpoint + "px)";
      var style = vertical ? { bottom: offsetCalc } : { left: offsetCalc };
      return React.createElement("span", {
        className: classnames_1.default(Classes.SLIDER_HANDLE, (_b = {}, _b[Classes.ACTIVE] = isMoving, _b), className),
        onKeyDown: disabled ? null : this.handleKeyDown,
        onKeyUp: disabled ? null : this.handleKeyUp,
        onMouseDown: disabled ? null : this.beginHandleMovement,
        onTouchStart: disabled ? null : this.beginHandleTouchMovement,
        ref: this.refHandlers.handle,
        style: style,
        tabIndex: 0
      }, label == null ? null : React.createElement("span", { className: Classes.SLIDER_LABEL }, label));
      var _b;
    };
    Handle.prototype.componentWillUnmount = function () {
      this.removeDocumentEventListeners();
    };
    Handle.prototype.clientToValue = function (clientPixel) {
      var _a = this.props,
          stepSize = _a.stepSize,
          tickSize = _a.tickSize,
          value = _a.value,
          vertical = _a.vertical;
      if (this.handleElement == null) {
        return value;
      }
      var clientPixelNormalized = vertical ? window.innerHeight - clientPixel : clientPixel;
      var handleCenterPixel = this.getHandleElementCenterPixel(this.handleElement);
      var pixelDelta = clientPixelNormalized - handleCenterPixel;
      if (isNaN(pixelDelta)) {
        return value;
      }
      return value + Math.round(pixelDelta / (tickSize * stepSize)) * stepSize;
    };
    Handle.prototype.mouseEventClientOffset = function (event) {
      return this.props.vertical ? event.clientY : event.clientX;
    };
    Handle.prototype.touchEventClientOffset = function (event) {
      var touch = event.changedTouches[0];
      return this.props.vertical ? touch.clientY : touch.clientX;
    };
    Handle.prototype.validateProps = function (props) {
      for (var _i = 0, NUMBER_PROPS_1 = NUMBER_PROPS; _i < NUMBER_PROPS_1.length; _i++) {
        var prop = NUMBER_PROPS_1[_i];
        if (typeof props[prop] !== "number") {
          throw new Error("[Blueprint] <Handle> requires number value for " + prop + " prop");
        }
      }
    };
    Handle.prototype.changeValue = function (newValue, callback) {
      if (callback === void 0) {
        callback = this.props.onChange;
      }
      newValue = this.clamp(newValue);
      if (!isNaN(newValue) && this.props.value !== newValue) {
        utils_1.safeInvoke(callback, newValue);
      }
      return newValue;
    };
    Handle.prototype.clamp = function (value) {
      return utils_1.clamp(value, this.props.min, this.props.max);
    };
    Handle.prototype.getHandleElementCenterPixel = function (handleElement) {
      var _a = this.getHandleMidpointAndOffset(handleElement),
          handleMidpoint = _a.handleMidpoint,
          handleOffset = _a.handleOffset;
      return handleOffset + handleMidpoint;
    };
    Handle.prototype.getHandleMidpointAndOffset = function (handleElement, useOppositeDimension) {
      if (useOppositeDimension === void 0) {
        useOppositeDimension = false;
      }
      if (handleElement == null) {
        return {
          handleMidpoint: 0,
          handleOffset: 0
        };
      }
      var vertical = this.props.vertical;
      var handleRect = handleElement.getBoundingClientRect();
      var sizeKey = vertical ? useOppositeDimension ? "width" : "height" : useOppositeDimension ? "height" : "width";
      var handleOffset = vertical ? window.innerHeight - (handleRect.top + handleRect[sizeKey]) : handleRect.left;
      return {
        handleMidpoint: handleRect[sizeKey] / 2,
        handleOffset: handleOffset
      };
    };
    Handle.prototype.removeDocumentEventListeners = function () {
      document.removeEventListener("mousemove", this.handleHandleMovement);
      document.removeEventListener("mouseup", this.endHandleMovement);
      document.removeEventListener("touchmove", this.handleHandleTouchMovement);
      document.removeEventListener("touchend", this.endHandleTouchMovement);
      document.removeEventListener("touchcancel", this.endHandleTouchMovement);
    };
    Handle.displayName = props_1.DISPLAYNAME_PREFIX + ".SliderHandle";
    return Handle;
  }(abstractPureComponent_1.AbstractPureComponent);
  exports.Handle = Handle;
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/components/slider/handleProps.js", [], true, function ($__require, exports, module) {
    /* */
    "use strict";
    /*
     * Copyright 2018 Palantir Technologies, Inc. All rights reserved.
     *
     * Licensed under the terms of the LICENSE file distributed with this project.
     */

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.HandleType = {
        /** A full handle appears as a small square. */
        FULL: "full",
        /** A start handle appears as the left or top half of a square. */
        START: "start",
        /** An end handle appears as the right or bottom half of a square. */
        END: "end"
    };
    exports.HandleInteractionKind = {
        /** Locked handles prevent other handles from being dragged past then. */
        LOCK: "lock",
        /** Push handles move overlapping handles with them as they are dragged. */
        PUSH: "push",
        /**
         * Handles marked "none" are not interactive and do not appear in the UI.
         * They serve only to break the track into subsections that can be colored separately.
         */
        NONE: "none"
    };
    
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/components/slider/sliderUtils.js", [], true, function ($__require, exports, module) {
    /* */
    "use strict";
    /*
     * Copyright 2018 Palantir Technologies, Inc. All rights reserved.
     *
     * Licensed under the terms of the LICENSE file distributed with this project.
     */

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    /** Helper function for formatting ratios as CSS percentage values. */
    function formatPercentage(ratio) {
        return (ratio * 100).toFixed(2) + "%";
    }
    exports.formatPercentage = formatPercentage;
    /**
     * Mutates the values array by filling all the values between start and end index (inclusive) with the fill value.
     */
    function fillValues(values, startIndex, endIndex, fillValue) {
        var inc = startIndex < endIndex ? 1 : -1;
        for (var index = startIndex; index !== endIndex + inc; index += inc) {
            values[index] = fillValue;
        }
    }
    exports.fillValues = fillValues;
    /**
     * Returns the minimum element of an array as determined by comparing the results of calling the arg function on each
     * element of the array. The function will only be called once per element.
     */
    function argMin(values, argFn) {
        if (values.length === 0) {
            return undefined;
        }
        var minValue = values[0];
        var minArg = argFn(minValue);
        for (var index = 1; index < values.length; index++) {
            var value = values[index];
            var arg = argFn(value);
            if (arg < minArg) {
                minValue = value;
                minArg = arg;
            }
        }
        return minValue;
    }
    exports.argMin = argMin;
    
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/components/slider/multiSlider.js", ["npm:tslib@1.9.3.js", "npm:classnames@2.2.6.js", "npm:react@16.7.0.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/index.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/abstractPureComponent.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/errors.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/utils.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/slider/handle.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/slider/handleProps.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/slider/sliderUtils.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  var classnames_1 = tslib_1.__importDefault($__require("npm:classnames@2.2.6.js"));
  var React = tslib_1.__importStar($__require("npm:react@16.7.0.js"));
  var common_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/index.js");
  var abstractPureComponent_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/abstractPureComponent.js");
  var Errors = tslib_1.__importStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/errors.js"));
  var props_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js");
  var Utils = tslib_1.__importStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/utils.js"));
  var handle_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/slider/handle.js");
  var handleProps_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/slider/handleProps.js");
  var sliderUtils_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/slider/sliderUtils.js");
  var MultiSliderHandle = function () {
    return null;
  };
  MultiSliderHandle.displayName = props_1.DISPLAYNAME_PREFIX + ".MultiSliderHandle";
  var MultiSlider = function (_super) {
    tslib_1.__extends(MultiSlider, _super);
    function MultiSlider() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.state = {
        labelPrecision: getLabelPrecision(_this.props),
        tickSize: 0,
        tickSizeRatio: 0
      };
      _this.handleElements = [];
      _this.addHandleRef = function (ref) {
        if (ref != null) {
          _this.handleElements.push(ref);
        }
      };
      _this.maybeHandleTrackClick = function (event) {
        if (_this.canHandleTrackEvent(event)) {
          var foundHandle = _this.nearestHandleForValue(_this.handleElements, function (handle) {
            return handle.mouseEventClientOffset(event);
          });
          if (foundHandle) {
            foundHandle.beginHandleMovement(event);
          }
        }
      };
      _this.maybeHandleTrackTouch = function (event) {
        if (_this.canHandleTrackEvent(event)) {
          var foundHandle = _this.nearestHandleForValue(_this.handleElements, function (handle) {
            return handle.touchEventClientOffset(event);
          });
          if (foundHandle) {
            foundHandle.beginHandleTouchMovement(event);
          }
        }
      };
      _this.canHandleTrackEvent = function (event) {
        var target = event.target;
        return !_this.props.disabled && target.closest("." + common_1.Classes.SLIDER_HANDLE) == null;
      };
      _this.getHandlerForIndex = function (index, callback) {
        return function (newValue) {
          Utils.safeInvoke(callback, _this.getNewHandleValues(newValue, index));
        };
      };
      _this.handleChange = function (newValues) {
        var oldValues = _this.handleProps.map(function (handle) {
          return handle.value;
        });
        if (!Utils.arraysEqual(newValues, oldValues)) {
          Utils.safeInvoke(_this.props.onChange, newValues);
          _this.handleProps.forEach(function (handle, index) {
            if (oldValues[index] !== newValues[index]) {
              Utils.safeInvoke(handle.onChange, newValues[index]);
            }
          });
        }
      };
      _this.handleRelease = function (newValues) {
        Utils.safeInvoke(_this.props.onRelease, newValues);
        _this.handleProps.forEach(function (handle, index) {
          Utils.safeInvoke(handle.onRelease, newValues[index]);
        });
      };
      return _this;
    }
    MultiSlider.prototype.render = function () {
      var _this = this;
      var classes = classnames_1.default(common_1.Classes.SLIDER, (_a = {}, _a[common_1.Classes.DISABLED] = this.props.disabled, _a[common_1.Classes.SLIDER + "-unlabeled"] = this.props.labelRenderer === false, _a[common_1.Classes.VERTICAL] = this.props.vertical, _a), this.props.className);
      return React.createElement("div", {
        className: classes,
        onMouseDown: this.maybeHandleTrackClick,
        onTouchStart: this.maybeHandleTrackTouch
      }, React.createElement("div", {
        className: common_1.Classes.SLIDER_TRACK,
        ref: function (ref) {
          return _this.trackElement = ref;
        }
      }, this.renderTracks()), React.createElement("div", { className: common_1.Classes.SLIDER_AXIS }, this.renderLabels()), this.renderHandles());
      var _a;
    };
    MultiSlider.prototype.componentWillMount = function () {
      this.handleProps = getSortedInteractiveHandleProps(this.props);
    };
    MultiSlider.prototype.componentDidMount = function () {
      this.updateTickSize();
    };
    MultiSlider.prototype.componentDidUpdate = function () {
      this.updateTickSize();
    };
    MultiSlider.prototype.componentWillReceiveProps = function (nextProps) {
      this.setState({ labelPrecision: this.getLabelPrecision(nextProps) });
      var newHandleProps = getSortedInteractiveHandleProps(nextProps);
      if (newHandleProps.length !== this.handleProps.length) {
        this.handleElements = [];
      }
      this.handleProps = newHandleProps;
    };
    MultiSlider.prototype.validateProps = function (props) {
      if (props.stepSize <= 0) {
        throw new Error(Errors.SLIDER_ZERO_STEP);
      }
      if (props.labelStepSize <= 0) {
        throw new Error(Errors.SLIDER_ZERO_LABEL_STEP);
      }
      var anyInvalidChildren = false;
      React.Children.forEach(props.children, function (child) {
        if (child && !Utils.isElementOfType(child, MultiSlider.Handle)) {
          anyInvalidChildren = true;
        }
      });
      if (anyInvalidChildren) {
        throw new Error(Errors.MULTISLIDER_INVALID_CHILD);
      }
    };
    MultiSlider.prototype.formatLabel = function (value) {
      var labelRenderer = this.props.labelRenderer;
      if (labelRenderer === false) {
        return null;
      } else if (Utils.isFunction(labelRenderer)) {
        return labelRenderer(value);
      } else {
        return value.toFixed(this.state.labelPrecision);
      }
    };
    MultiSlider.prototype.renderLabels = function () {
      if (this.props.labelRenderer === false) {
        return null;
      }
      var _a = this.props,
          labelStepSize = _a.labelStepSize,
          max = _a.max,
          min = _a.min;
      var labels = [];
      var stepSizeRatio = this.state.tickSizeRatio * labelStepSize;
      for (var i = min, offsetRatio = 0; i < max || Utils.approxEqual(i, max); i += labelStepSize, offsetRatio += stepSizeRatio) {
        var offsetPercentage = sliderUtils_1.formatPercentage(offsetRatio);
        var style = this.props.vertical ? { bottom: offsetPercentage } : { left: offsetPercentage };
        labels.push(React.createElement("div", {
          className: common_1.Classes.SLIDER_LABEL,
          key: i,
          style: style
        }, this.formatLabel(i)));
      }
      return labels;
    };
    MultiSlider.prototype.renderTracks = function () {
      var trackStops = getSortedHandleProps(this.props);
      trackStops.push({ value: this.props.max });
      var previous = { value: this.props.min };
      var handles = [];
      for (var index = 0; index < trackStops.length; index++) {
        var current = trackStops[index];
        handles.push(this.renderTrackFill(index, previous, current));
        previous = current;
      }
      return handles;
    };
    MultiSlider.prototype.renderTrackFill = function (index, start, end) {
      var _a = [this.getOffsetRatio(start.value), this.getOffsetRatio(end.value)].sort(),
          startRatio = _a[0],
          endRatio = _a[1];
      var startOffset = sliderUtils_1.formatPercentage(startRatio);
      var endOffset = sliderUtils_1.formatPercentage(1 - endRatio);
      var style = this.props.vertical ? {
        bottom: startOffset,
        top: endOffset,
        left: 0
      } : {
        left: startOffset,
        right: endOffset,
        top: 0
      };
      var classes = classnames_1.default(common_1.Classes.SLIDER_PROGRESS, common_1.Classes.intentClass(this.getTrackIntent(start, end)));
      return React.createElement("div", {
        key: "track-" + index,
        className: classes,
        style: style
      });
    };
    MultiSlider.prototype.renderHandles = function () {
      var _this = this;
      var _a = this.props,
          disabled = _a.disabled,
          max = _a.max,
          min = _a.min,
          stepSize = _a.stepSize,
          vertical = _a.vertical;
      return this.handleProps.map(function (_a, index) {
        var value = _a.value,
            type = _a.type;
        return React.createElement(handle_1.Handle, {
          className: classnames_1.default((_b = {}, _b[common_1.Classes.START] = type === handleProps_1.HandleType.START, _b[common_1.Classes.END] = type === handleProps_1.HandleType.END, _b)),
          disabled: disabled,
          key: index + "-" + _this.handleProps.length,
          label: _this.formatLabel(value),
          max: max,
          min: min,
          onChange: _this.getHandlerForIndex(index, _this.handleChange),
          onRelease: _this.getHandlerForIndex(index, _this.handleRelease),
          ref: _this.addHandleRef,
          stepSize: stepSize,
          tickSize: _this.state.tickSize,
          tickSizeRatio: _this.state.tickSizeRatio,
          value: value,
          vertical: vertical
        });
        var _b;
      });
    };
    MultiSlider.prototype.nearestHandleForValue = function (handles, getOffset) {
      return sliderUtils_1.argMin(handles, function (handle) {
        var offset = getOffset(handle);
        var offsetValue = handle.clientToValue(offset);
        var handleValue = handle.props.value;
        return Math.abs(offsetValue - handleValue);
      });
    };
    MultiSlider.prototype.getNewHandleValues = function (newValue, oldIndex) {
      var oldValues = this.handleProps.map(function (handle) {
        return handle.value;
      });
      var newValues = oldValues.slice();
      newValues[oldIndex] = newValue;
      newValues.sort(function (left, right) {
        return left - right;
      });
      var newIndex = newValues.indexOf(newValue);
      var lockIndex = this.findFirstLockedHandleIndex(oldIndex, newIndex);
      if (lockIndex === -1) {
        sliderUtils_1.fillValues(newValues, oldIndex, newIndex, newValue);
      } else {
        var lockValue = oldValues[lockIndex];
        sliderUtils_1.fillValues(oldValues, oldIndex, lockIndex, lockValue);
        return oldValues;
      }
      return newValues;
    };
    MultiSlider.prototype.findFirstLockedHandleIndex = function (startIndex, endIndex) {
      var inc = startIndex < endIndex ? 1 : -1;
      for (var index = startIndex + inc; index !== endIndex + inc; index += inc) {
        if (this.handleProps[index].interactionKind !== handleProps_1.HandleInteractionKind.PUSH) {
          return index;
        }
      }
      return -1;
    };
    MultiSlider.prototype.getLabelPrecision = function (_a) {
      var labelPrecision = _a.labelPrecision,
          stepSize = _a.stepSize;
      return labelPrecision == null ? Utils.countDecimalPlaces(stepSize) : labelPrecision;
    };
    MultiSlider.prototype.getOffsetRatio = function (value) {
      return Utils.clamp((value - this.props.min) * this.state.tickSizeRatio, 0, 1);
    };
    MultiSlider.prototype.getTrackIntent = function (start, end) {
      if (!this.props.showTrackFill) {
        return common_1.Intent.NONE;
      }
      if (start.intentAfter !== undefined) {
        return start.intentAfter;
      } else if (end !== undefined && end.intentBefore !== undefined) {
        return end.intentBefore;
      }
      return this.props.defaultTrackIntent;
    };
    MultiSlider.prototype.updateTickSize = function () {
      if (this.trackElement != null) {
        var trackSize = this.props.vertical ? this.trackElement.clientHeight : this.trackElement.clientWidth;
        var tickSizeRatio = 1 / (this.props.max - this.props.min);
        var tickSize = trackSize * tickSizeRatio;
        this.setState({
          tickSize: tickSize,
          tickSizeRatio: tickSizeRatio
        });
      }
    };
    MultiSlider.defaultSliderProps = {
      disabled: false,
      labelStepSize: 1,
      max: 10,
      min: 0,
      showTrackFill: true,
      stepSize: 1,
      vertical: false
    };
    MultiSlider.defaultProps = tslib_1.__assign({}, MultiSlider.defaultSliderProps, { defaultTrackIntent: common_1.Intent.NONE });
    MultiSlider.displayName = props_1.DISPLAYNAME_PREFIX + ".MultiSlider";
    MultiSlider.Handle = MultiSliderHandle;
    return MultiSlider;
  }(abstractPureComponent_1.AbstractPureComponent);
  exports.MultiSlider = MultiSlider;
  function getLabelPrecision(_a) {
    var labelPrecision = _a.labelPrecision,
        stepSize = _a.stepSize;
    return labelPrecision == null ? Utils.countDecimalPlaces(stepSize) : labelPrecision;
  }
  function getSortedInteractiveHandleProps(props) {
    return getSortedHandleProps(props, function (childProps) {
      return childProps.interactionKind !== handleProps_1.HandleInteractionKind.NONE;
    });
  }
  function getSortedHandleProps(_a, predicate) {
    var children = _a.children;
    if (predicate === void 0) {
      predicate = function () {
        return true;
      };
    }
    var maybeHandles = React.Children.map(children, function (child) {
      return Utils.isElementOfType(child, MultiSlider.Handle) && predicate(child.props) ? child.props : null;
    });
    var handles = maybeHandles != null ? maybeHandles : [];
    handles = handles.filter(function (handle) {
      return handle !== null;
    });
    handles.sort(function (left, right) {
      return left.value - right.value;
    });
    return handles;
  }
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/components/slider/slider.js", ["npm:tslib@1.9.3.js", "npm:react@16.7.0.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/abstractPureComponent.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/intent.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/slider/multiSlider.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  var React = tslib_1.__importStar($__require("npm:react@16.7.0.js"));
  var abstractPureComponent_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/abstractPureComponent.js");
  var intent_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/intent.js");
  var props_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js");
  var multiSlider_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/slider/multiSlider.js");
  var Slider = function (_super) {
    tslib_1.__extends(Slider, _super);
    function Slider() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    Slider.prototype.render = function () {
      var _a = this.props,
          initialValue = _a.initialValue,
          value = _a.value,
          onChange = _a.onChange,
          onRelease = _a.onRelease,
          props = tslib_1.__rest(_a, ["initialValue", "value", "onChange", "onRelease"]);
      return React.createElement(multiSlider_1.MultiSlider, tslib_1.__assign({}, props), React.createElement(multiSlider_1.MultiSlider.Handle, {
        value: value,
        intentAfter: value < initialValue ? intent_1.Intent.PRIMARY : undefined,
        intentBefore: value >= initialValue ? intent_1.Intent.PRIMARY : undefined,
        onChange: onChange,
        onRelease: onRelease
      }), React.createElement(multiSlider_1.MultiSlider.Handle, {
        value: initialValue,
        interactionKind: "none"
      }));
    };
    Slider.defaultProps = tslib_1.__assign({}, multiSlider_1.MultiSlider.defaultSliderProps, {
      initialValue: 0,
      value: 0
    });
    Slider.displayName = props_1.DISPLAYNAME_PREFIX + ".Slider";
    return Slider;
  }(abstractPureComponent_1.AbstractPureComponent);
  exports.Slider = Slider;
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/components/tabs/tab.js", ["npm:tslib@1.9.3.js", "npm:classnames@2.2.6.js", "npm:react@16.7.0.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  var classnames_1 = tslib_1.__importDefault($__require("npm:classnames@2.2.6.js"));
  var React = tslib_1.__importStar($__require("npm:react@16.7.0.js"));
  var Classes = tslib_1.__importStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js"));
  var props_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js");
  var Tab = function (_super) {
    tslib_1.__extends(Tab, _super);
    function Tab() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    Tab.prototype.render = function () {
      var _a = this.props,
          className = _a.className,
          panel = _a.panel;
      return React.createElement("div", {
        className: classnames_1.default(Classes.TAB_PANEL, className),
        role: "tablist"
      }, panel);
    };
    Tab.defaultProps = {
      disabled: false,
      id: undefined
    };
    Tab.displayName = props_1.DISPLAYNAME_PREFIX + ".Tab";
    return Tab;
  }(React.PureComponent);
  exports.Tab = Tab;
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/components/tabs/tabTitle.js", ["npm:tslib@1.9.3.js", "npm:classnames@2.2.6.js", "npm:react@16.7.0.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  var classnames_1 = tslib_1.__importDefault($__require("npm:classnames@2.2.6.js"));
  var React = tslib_1.__importStar($__require("npm:react@16.7.0.js"));
  var Classes = tslib_1.__importStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js"));
  var props_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js");
  var TabTitle = function (_super) {
    tslib_1.__extends(TabTitle, _super);
    function TabTitle() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.handleClick = function (e) {
        return _this.props.onClick(_this.props.id, e);
      };
      return _this;
    }
    TabTitle.prototype.render = function () {
      var _a = this.props,
          disabled = _a.disabled,
          id = _a.id,
          parentId = _a.parentId,
          selected = _a.selected;
      return React.createElement("div", {
        "aria-controls": generateTabPanelId(parentId, id),
        "aria-disabled": disabled,
        "aria-expanded": selected,
        "aria-selected": selected,
        className: classnames_1.default(Classes.TAB, this.props.className),
        "data-tab-id": id,
        id: generateTabTitleId(parentId, id),
        onClick: disabled ? undefined : this.handleClick,
        role: "tab",
        tabIndex: disabled ? undefined : 0
      }, this.props.title, this.props.children);
    };
    TabTitle.displayName = props_1.DISPLAYNAME_PREFIX + ".TabTitle";
    return TabTitle;
  }(React.PureComponent);
  exports.TabTitle = TabTitle;
  function generateTabPanelId(parentId, tabId) {
    return Classes.TAB_PANEL + "_" + parentId + "_" + tabId;
  }
  exports.generateTabPanelId = generateTabPanelId;
  function generateTabTitleId(parentId, tabId) {
    return Classes.TAB + "-title_" + parentId + "_" + tabId;
  }
  exports.generateTabTitleId = generateTabTitleId;
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/components/tabs/tabs.js", ["npm:tslib@1.9.3.js", "npm:classnames@2.2.6.js", "npm:react@16.7.0.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/abstractPureComponent.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/keys.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/utils.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/tabs/tab.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/tabs/tabTitle.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  var classnames_1 = tslib_1.__importDefault($__require("npm:classnames@2.2.6.js"));
  var React = tslib_1.__importStar($__require("npm:react@16.7.0.js"));
  var abstractPureComponent_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/abstractPureComponent.js");
  var Classes = tslib_1.__importStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js"));
  var Keys = tslib_1.__importStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/keys.js"));
  var props_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js");
  var Utils = tslib_1.__importStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/utils.js"));
  var tab_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/tabs/tab.js");
  var tabTitle_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/tabs/tabTitle.js");
  exports.Expander = function () {
    return React.createElement("div", { className: Classes.FLEX_EXPANDER });
  };
  var TAB_SELECTOR = "." + Classes.TAB;
  var Tabs = function (_super) {
    tslib_1.__extends(Tabs, _super);
    function Tabs(props) {
      var _this = _super.call(this, props) || this;
      _this.refHandlers = { tablist: function (tabElement) {
          return _this.tablistElement = tabElement;
        } };
      _this.handleKeyDown = function (e) {
        var focusedElement = document.activeElement.closest(TAB_SELECTOR);
        if (focusedElement == null) {
          return;
        }
        var enabledTabElements = _this.getTabElements().filter(function (el) {
          return el.getAttribute("aria-disabled") === "false";
        });
        var focusedIndex = enabledTabElements.indexOf(focusedElement);
        var direction = _this.getKeyCodeDirection(e);
        if (focusedIndex >= 0 && direction !== undefined) {
          e.preventDefault();
          var length_1 = enabledTabElements.length;
          var nextFocusedIndex = (focusedIndex + direction + length_1) % length_1;
          enabledTabElements[nextFocusedIndex].focus();
        }
      };
      _this.handleKeyPress = function (e) {
        var targetTabElement = e.target.closest(TAB_SELECTOR);
        if (targetTabElement != null && Keys.isKeyboardClick(e.which)) {
          e.preventDefault();
          targetTabElement.click();
        }
      };
      _this.handleTabClick = function (newTabId, event) {
        Utils.safeInvoke(_this.props.onChange, newTabId, _this.state.selectedTabId, event);
        if (_this.props.selectedTabId === undefined) {
          _this.setState({ selectedTabId: newTabId });
        }
      };
      _this.renderTabPanel = function (tab) {
        var _a = tab.props,
            className = _a.className,
            panel = _a.panel,
            id = _a.id;
        if (panel === undefined) {
          return undefined;
        }
        return React.createElement("div", {
          "aria-labelledby": tabTitle_1.generateTabTitleId(_this.props.id, id),
          "aria-hidden": id !== _this.state.selectedTabId,
          className: classnames_1.default(Classes.TAB_PANEL, className),
          id: tabTitle_1.generateTabPanelId(_this.props.id, id),
          key: id,
          role: "tabpanel"
        }, panel);
      };
      _this.renderTabTitle = function (child) {
        if (isTabElement(child)) {
          var id = child.props.id;
          return React.createElement(tabTitle_1.TabTitle, tslib_1.__assign({}, child.props, {
            parentId: _this.props.id,
            onClick: _this.handleTabClick,
            selected: id === _this.state.selectedTabId
          }));
        }
        return child;
      };
      var selectedTabId = _this.getInitialSelectedTabId();
      _this.state = { selectedTabId: selectedTabId };
      return _this;
    }
    Tabs.prototype.render = function () {
      var _a = this.state,
          indicatorWrapperStyle = _a.indicatorWrapperStyle,
          selectedTabId = _a.selectedTabId;
      var tabTitles = React.Children.map(this.props.children, this.renderTabTitle);
      var tabPanels = this.getTabChildren().filter(this.props.renderActiveTabPanelOnly ? function (tab) {
        return tab.props.id === selectedTabId;
      } : function () {
        return true;
      }).map(this.renderTabPanel);
      var tabIndicator = this.props.animate ? React.createElement("div", {
        className: Classes.TAB_INDICATOR_WRAPPER,
        style: indicatorWrapperStyle
      }, React.createElement("div", { className: Classes.TAB_INDICATOR })) : null;
      var classes = classnames_1.default(Classes.TABS, (_b = {}, _b[Classes.VERTICAL] = this.props.vertical, _b), this.props.className);
      var tabListClasses = classnames_1.default(Classes.TAB_LIST, (_c = {}, _c[Classes.LARGE] = this.props.large, _c));
      return React.createElement("div", { className: classes }, React.createElement("div", {
        className: tabListClasses,
        onKeyDown: this.handleKeyDown,
        onKeyPress: this.handleKeyPress,
        ref: this.refHandlers.tablist,
        role: "tablist"
      }, tabIndicator, tabTitles), tabPanels);
      var _b, _c;
    };
    Tabs.prototype.componentDidMount = function () {
      this.moveSelectionIndicator();
    };
    Tabs.prototype.componentWillReceiveProps = function (_a) {
      var selectedTabId = _a.selectedTabId;
      if (selectedTabId !== undefined) {
        this.setState({ selectedTabId: selectedTabId });
      }
    };
    Tabs.prototype.componentDidUpdate = function (prevProps, prevState) {
      if (this.state.selectedTabId !== prevState.selectedTabId) {
        this.moveSelectionIndicator();
      } else if (prevState.selectedTabId != null) {
        var didChildrenChange = !Utils.arraysEqual(this.getTabChildrenProps(prevProps), this.getTabChildrenProps(), Utils.shallowCompareKeys);
        if (didChildrenChange) {
          this.moveSelectionIndicator();
        }
      }
    };
    Tabs.prototype.getInitialSelectedTabId = function () {
      var _a = this.props,
          defaultSelectedTabId = _a.defaultSelectedTabId,
          selectedTabId = _a.selectedTabId;
      if (selectedTabId !== undefined) {
        return selectedTabId;
      } else if (defaultSelectedTabId !== undefined) {
        return defaultSelectedTabId;
      } else {
        var tabs = this.getTabChildren();
        return tabs.length === 0 ? undefined : tabs[0].props.id;
      }
    };
    Tabs.prototype.getKeyCodeDirection = function (e) {
      if (isEventKeyCode(e, Keys.ARROW_LEFT, Keys.ARROW_UP)) {
        return -1;
      } else if (isEventKeyCode(e, Keys.ARROW_RIGHT, Keys.ARROW_DOWN)) {
        return 1;
      }
      return undefined;
    };
    Tabs.prototype.getTabChildrenProps = function (props) {
      if (props === void 0) {
        props = this.props;
      }
      return this.getTabChildren(props).map(function (child) {
        return child.props;
      });
    };
    Tabs.prototype.getTabChildren = function (props) {
      if (props === void 0) {
        props = this.props;
      }
      return React.Children.toArray(props.children).filter(isTabElement);
    };
    Tabs.prototype.getTabElements = function (subselector) {
      if (subselector === void 0) {
        subselector = "";
      }
      if (this.tablistElement == null) {
        return [];
      }
      return Array.from(this.tablistElement.querySelectorAll(TAB_SELECTOR + subselector));
    };
    Tabs.prototype.moveSelectionIndicator = function () {
      if (this.tablistElement == null || !this.props.animate) {
        return;
      }
      var tabIdSelector = TAB_SELECTOR + "[data-tab-id=\"" + this.state.selectedTabId + "\"]";
      var selectedTabElement = this.tablistElement.querySelector(tabIdSelector);
      var indicatorWrapperStyle = { display: "none" };
      if (selectedTabElement != null) {
        var clientHeight = selectedTabElement.clientHeight,
            clientWidth = selectedTabElement.clientWidth,
            offsetLeft = selectedTabElement.offsetLeft,
            offsetTop = selectedTabElement.offsetTop;
        indicatorWrapperStyle = {
          height: clientHeight,
          transform: "translateX(" + Math.floor(offsetLeft) + "px) translateY(" + Math.floor(offsetTop) + "px)",
          width: clientWidth
        };
      }
      this.setState({ indicatorWrapperStyle: indicatorWrapperStyle });
    };
    Tabs.Expander = exports.Expander;
    Tabs.Tab = tab_1.Tab;
    Tabs.defaultProps = {
      animate: true,
      large: false,
      renderActiveTabPanelOnly: false,
      vertical: false
    };
    Tabs.displayName = props_1.DISPLAYNAME_PREFIX + ".Tabs";
    return Tabs;
  }(abstractPureComponent_1.AbstractPureComponent);
  exports.Tabs = Tabs;
  function isEventKeyCode(e) {
    var codes = [];
    for (var _i = 1; _i < arguments.length; _i++) {
      codes[_i - 1] = arguments[_i];
    }
    return codes.indexOf(e.which) >= 0;
  }
  function isTabElement(child) {
    return Utils.isElementOfType(child, tab_1.Tab);
  }
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/components/text/text.js", ["npm:tslib@1.9.3.js", "npm:classnames@2.2.6.js", "npm:react@16.7.0.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  var classnames_1 = tslib_1.__importDefault($__require("npm:classnames@2.2.6.js"));
  var React = tslib_1.__importStar($__require("npm:react@16.7.0.js"));
  var Classes = tslib_1.__importStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js"));
  var props_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js");
  var Text = function (_super) {
    tslib_1.__extends(Text, _super);
    function Text() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.state = {
        isContentOverflowing: false,
        textContent: ""
      };
      _this.textRef = null;
      return _this;
    }
    Text.prototype.componentDidMount = function () {
      this.update();
    };
    Text.prototype.componentDidUpdate = function () {
      this.update();
    };
    Text.prototype.render = function () {
      var _this = this;
      var classes = classnames_1.default((_a = {}, _a[Classes.TEXT_OVERFLOW_ELLIPSIS] = this.props.ellipsize, _a), this.props.className);
      var _b = this.props.tagName,
          TagName = _b === void 0 ? "div" : _b;
      return React.createElement(TagName, {
        className: classes,
        ref: function (ref) {
          return _this.textRef = ref;
        },
        title: this.state.isContentOverflowing ? this.state.textContent : undefined
      }, this.props.children);
      var _a;
    };
    Text.prototype.update = function () {
      if (this.textRef == null) {
        return;
      }
      var newState = {
        isContentOverflowing: this.props.ellipsize && this.textRef.scrollWidth > this.textRef.clientWidth,
        textContent: this.textRef.textContent
      };
      this.setState(newState);
    };
    Text.displayName = props_1.DISPLAYNAME_PREFIX + ".Text";
    return Text;
  }(React.PureComponent);
  exports.Text = Text;
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/components/tag/tag.js", ["npm:tslib@1.9.3.js", "npm:classnames@2.2.6.js", "npm:react@16.7.0.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/index.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/utils.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/icon/icon.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/text/text.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  var classnames_1 = tslib_1.__importDefault($__require("npm:classnames@2.2.6.js"));
  var React = tslib_1.__importStar($__require("npm:react@16.7.0.js"));
  var common_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/index.js");
  var utils_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/utils.js");
  var icon_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/icon/icon.js");
  var text_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/text/text.js");
  var Tag = function (_super) {
    tslib_1.__extends(Tag, _super);
    function Tag() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.onRemoveClick = function (e) {
        common_1.Utils.safeInvoke(_this.props.onRemove, e, _this.props);
      };
      return _this;
    }
    Tag.prototype.render = function () {
      var _a = this.props,
          active = _a.active,
          children = _a.children,
          className = _a.className,
          icon = _a.icon,
          intent = _a.intent,
          interactive = _a.interactive,
          large = _a.large,
          minimal = _a.minimal,
          multiline = _a.multiline,
          onRemove = _a.onRemove,
          rightIcon = _a.rightIcon,
          round = _a.round,
          _b = _a.tabIndex,
          tabIndex = _b === void 0 ? 0 : _b,
          htmlProps = tslib_1.__rest(_a, ["active", "children", "className", "icon", "intent", "interactive", "large", "minimal", "multiline", "onRemove", "rightIcon", "round", "tabIndex"]);
      var isRemovable = common_1.Utils.isFunction(onRemove);
      var tagClasses = classnames_1.default(common_1.Classes.TAG, common_1.Classes.intentClass(intent), (_c = {}, _c[common_1.Classes.ACTIVE] = active, _c[common_1.Classes.INTERACTIVE] = interactive, _c[common_1.Classes.LARGE] = large, _c[common_1.Classes.MINIMAL] = minimal, _c[common_1.Classes.ROUND] = round, _c), className);
      var isLarge = large || tagClasses.indexOf(common_1.Classes.LARGE) >= 0;
      var removeButton = isRemovable ? React.createElement("button", {
        type: "button",
        className: common_1.Classes.TAG_REMOVE,
        onClick: this.onRemoveClick
      }, React.createElement(icon_1.Icon, {
        icon: "small-cross",
        iconSize: isLarge ? icon_1.Icon.SIZE_LARGE : icon_1.Icon.SIZE_STANDARD
      })) : null;
      return React.createElement("span", tslib_1.__assign({}, htmlProps, {
        className: tagClasses,
        tabIndex: interactive ? tabIndex : undefined
      }), React.createElement(icon_1.Icon, { icon: icon }), !utils_1.isReactNodeEmpty(children) && React.createElement(text_1.Text, {
        className: common_1.Classes.FILL,
        ellipsize: !multiline,
        tagName: "span"
      }, children), React.createElement(icon_1.Icon, { icon: rightIcon }), removeButton);
      var _c;
    };
    Tag.displayName = common_1.DISPLAYNAME_PREFIX + ".Tag";
    return Tag;
  }(React.PureComponent);
  exports.Tag = Tag;
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/components/tag-input/tagInput.js", ["npm:tslib@1.9.3.js", "npm:classnames@2.2.6.js", "npm:react@16.7.0.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/abstractPureComponent.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/keys.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/utils.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/icon/icon.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/tag/tag.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  var classnames_1 = tslib_1.__importDefault($__require("npm:classnames@2.2.6.js"));
  var React = tslib_1.__importStar($__require("npm:react@16.7.0.js"));
  var abstractPureComponent_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/abstractPureComponent.js");
  var Classes = tslib_1.__importStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js"));
  var Keys = tslib_1.__importStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/keys.js"));
  var props_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js");
  var Utils = tslib_1.__importStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/utils.js"));
  var icon_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/icon/icon.js");
  var tag_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/tag/tag.js");
  var NONE = -1;
  var TagInput = function (_super) {
    tslib_1.__extends(TagInput, _super);
    function TagInput() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.state = {
        activeIndex: NONE,
        inputValue: _this.props.inputValue || "",
        isInputFocused: false
      };
      _this.refHandlers = { input: function (ref) {
          _this.inputElement = ref;
          Utils.safeInvoke(_this.props.inputRef, ref);
        } };
      _this.addTags = function (value) {
        var _a = _this.props,
            inputValue = _a.inputValue,
            onAdd = _a.onAdd,
            onChange = _a.onChange,
            values = _a.values;
        var newValues = _this.getValues(value);
        var shouldClearInput = Utils.safeInvoke(onAdd, newValues) !== false && inputValue === undefined;
        if (Utils.isFunction(onChange)) {
          shouldClearInput = onChange(values.concat(newValues)) !== false && shouldClearInput;
        }
        if (shouldClearInput) {
          _this.setState({ inputValue: "" });
        }
      };
      _this.maybeRenderTag = function (tag, index) {
        if (!tag) {
          return null;
        }
        var _a = _this.props,
            large = _a.large,
            tagProps = _a.tagProps;
        var props = Utils.isFunction(tagProps) ? tagProps(tag, index) : tagProps;
        return React.createElement(tag_1.Tag, tslib_1.__assign({
          active: index === _this.state.activeIndex,
          "data-tag-index": index,
          key: tag + "__" + index,
          large: large,
          onRemove: _this.props.disabled ? null : _this.handleRemoveTag
        }, props), tag);
      };
      _this.handleContainerClick = function () {
        if (_this.inputElement != null) {
          _this.inputElement.focus();
        }
      };
      _this.handleContainerBlur = function (_a) {
        var currentTarget = _a.currentTarget;
        requestAnimationFrame(function () {
          if (!currentTarget.contains(document.activeElement)) {
            if (_this.props.addOnBlur && _this.state.inputValue !== undefined && _this.state.inputValue.length > 0) {
              _this.addTags(_this.state.inputValue);
            }
            _this.setState({
              activeIndex: NONE,
              isInputFocused: false
            });
          }
        });
      };
      _this.handleInputFocus = function (event) {
        _this.setState({ isInputFocused: true });
        Utils.safeInvoke(_this.props.inputProps.onFocus, event);
      };
      _this.handleInputChange = function (event) {
        _this.setState({
          activeIndex: NONE,
          inputValue: event.currentTarget.value
        });
        Utils.safeInvoke(_this.props.onInputChange, event);
        Utils.safeInvoke(_this.props.inputProps.onChange, event);
      };
      _this.handleInputKeyDown = function (event) {
        var _a = event.currentTarget,
            selectionEnd = _a.selectionEnd,
            value = _a.value;
        var activeIndex = _this.state.activeIndex;
        var activeIndexToEmit = activeIndex;
        if (event.which === Keys.ENTER && value.length > 0) {
          _this.addTags(value);
        } else if (selectionEnd === 0 && _this.props.values.length > 0) {
          if (event.which === Keys.ARROW_LEFT || event.which === Keys.ARROW_RIGHT) {
            var nextActiveIndex = _this.getNextActiveIndex(event.which === Keys.ARROW_RIGHT ? 1 : -1);
            if (nextActiveIndex !== activeIndex) {
              event.stopPropagation();
              activeIndexToEmit = nextActiveIndex;
              _this.setState({ activeIndex: nextActiveIndex });
            }
          } else if (event.which === Keys.BACKSPACE) {
            _this.handleBackspaceToRemove(event);
          }
        }
        _this.invokeKeyPressCallback("onKeyDown", event, activeIndexToEmit);
      };
      _this.handleInputKeyUp = function (event) {
        _this.invokeKeyPressCallback("onKeyUp", event, _this.state.activeIndex);
      };
      _this.handleInputPaste = function (event) {
        var separator = _this.props.separator;
        var value = event.clipboardData.getData("text");
        if (!_this.props.addOnPaste || value.length === 0) {
          return;
        }
        if (separator === false || value.split(separator).length === 1) {
          return;
        }
        event.preventDefault();
        _this.addTags(value);
      };
      _this.handleRemoveTag = function (event) {
        var index = +event.currentTarget.parentElement.getAttribute("data-tag-index");
        _this.removeIndexFromValues(index);
      };
      return _this;
    }
    TagInput.prototype.componentWillReceiveProps = function (nextProps) {
      _super.prototype.componentWillReceiveProps.call(this, nextProps);
      if (nextProps.inputValue !== this.props.inputValue) {
        this.setState({ inputValue: nextProps.inputValue || "" });
      }
    };
    TagInput.prototype.render = function () {
      var _a = this.props,
          className = _a.className,
          disabled = _a.disabled,
          fill = _a.fill,
          inputProps = _a.inputProps,
          large = _a.large,
          leftIcon = _a.leftIcon,
          placeholder = _a.placeholder,
          values = _a.values;
      var classes = classnames_1.default(Classes.INPUT, Classes.TAG_INPUT, (_b = {}, _b[Classes.ACTIVE] = this.state.isInputFocused, _b[Classes.DISABLED] = disabled, _b[Classes.FILL] = fill, _b[Classes.LARGE] = large, _b), className);
      var isLarge = classes.indexOf(Classes.LARGE) > NONE;
      var isSomeValueDefined = values.some(function (val) {
        return !!val;
      });
      var resolvedPlaceholder = placeholder == null || isSomeValueDefined ? inputProps.placeholder : placeholder;
      return React.createElement("div", {
        className: classes,
        onBlur: this.handleContainerBlur,
        onClick: this.handleContainerClick
      }, React.createElement(icon_1.Icon, {
        className: Classes.TAG_INPUT_ICON,
        icon: leftIcon,
        iconSize: isLarge ? icon_1.Icon.SIZE_LARGE : icon_1.Icon.SIZE_STANDARD
      }), React.createElement("div", { className: Classes.TAG_INPUT_VALUES }, values.map(this.maybeRenderTag), this.props.children, React.createElement("input", tslib_1.__assign({ value: this.state.inputValue }, inputProps, {
        onFocus: this.handleInputFocus,
        onChange: this.handleInputChange,
        onKeyDown: this.handleInputKeyDown,
        onKeyUp: this.handleInputKeyUp,
        onPaste: this.handleInputPaste,
        placeholder: resolvedPlaceholder,
        ref: this.refHandlers.input,
        className: classnames_1.default(Classes.INPUT_GHOST, inputProps.className),
        disabled: disabled
      }))), this.props.rightElement);
      var _b;
    };
    TagInput.prototype.getNextActiveIndex = function (direction) {
      var activeIndex = this.state.activeIndex;
      if (activeIndex === NONE) {
        return direction < 0 ? this.findNextIndex(this.props.values.length, -1) : NONE;
      } else {
        return this.findNextIndex(activeIndex, direction);
      }
    };
    TagInput.prototype.findNextIndex = function (startIndex, direction) {
      var values = this.props.values;
      var index = startIndex + direction;
      while (index > 0 && index < values.length && !values[index]) {
        index += direction;
      }
      return Utils.clamp(index, 0, values.length);
    };
    TagInput.prototype.getValues = function (inputValue) {
      var separator = this.props.separator;
      return (separator === false ? [inputValue] : inputValue.split(separator)).map(function (val) {
        return val.trim();
      }).filter(function (val) {
        return val.length > 0;
      });
    };
    TagInput.prototype.handleBackspaceToRemove = function (event) {
      var previousActiveIndex = this.state.activeIndex;
      this.setState({ activeIndex: this.getNextActiveIndex(-1) });
      if (this.isValidIndex(previousActiveIndex)) {
        event.stopPropagation();
        this.removeIndexFromValues(previousActiveIndex);
      }
    };
    TagInput.prototype.removeIndexFromValues = function (index) {
      var _a = this.props,
          onChange = _a.onChange,
          onRemove = _a.onRemove,
          values = _a.values;
      Utils.safeInvoke(onRemove, values[index], index);
      if (Utils.isFunction(onChange)) {
        onChange(values.filter(function (_, i) {
          return i !== index;
        }));
      }
    };
    TagInput.prototype.invokeKeyPressCallback = function (propCallbackName, event, activeIndex) {
      Utils.safeInvoke(this.props[propCallbackName], event, activeIndex === NONE ? undefined : activeIndex);
      Utils.safeInvoke(this.props.inputProps[propCallbackName], event);
    };
    TagInput.prototype.isValidIndex = function (index) {
      return index !== NONE && index < this.props.values.length;
    };
    TagInput.displayName = props_1.DISPLAYNAME_PREFIX + ".TagInput";
    TagInput.defaultProps = {
      addOnBlur: false,
      addOnPaste: true,
      inputProps: {},
      separator: /[,\n\r]/,
      tagProps: {}
    };
    return TagInput;
  }(abstractPureComponent_1.AbstractPureComponent);
  exports.TagInput = TagInput;
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/components/button/buttonGroup.js", ["npm:tslib@1.9.3.js", "npm:classnames@2.2.6.js", "npm:react@16.7.0.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  var classnames_1 = tslib_1.__importDefault($__require("npm:classnames@2.2.6.js"));
  var React = tslib_1.__importStar($__require("npm:react@16.7.0.js"));
  var Classes = tslib_1.__importStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js"));
  var props_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js");
  var ButtonGroup = function (_super) {
    tslib_1.__extends(ButtonGroup, _super);
    function ButtonGroup() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    ButtonGroup.prototype.render = function () {
      var _a = this.props,
          alignText = _a.alignText,
          className = _a.className,
          fill = _a.fill,
          minimal = _a.minimal,
          large = _a.large,
          vertical = _a.vertical,
          htmlProps = tslib_1.__rest(_a, ["alignText", "className", "fill", "minimal", "large", "vertical"]);
      var buttonGroupClasses = classnames_1.default(Classes.BUTTON_GROUP, (_b = {}, _b[Classes.FILL] = fill, _b[Classes.LARGE] = large, _b[Classes.MINIMAL] = minimal, _b[Classes.VERTICAL] = vertical, _b), Classes.alignmentClass(alignText), className);
      return React.createElement("div", tslib_1.__assign({}, htmlProps, { className: buttonGroupClasses }), this.props.children);
      var _b;
    };
    ButtonGroup.displayName = props_1.DISPLAYNAME_PREFIX + ".ButtonGroup";
    return ButtonGroup;
  }(React.PureComponent);
  exports.ButtonGroup = ButtonGroup;
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/components/spinner/spinner.js", ["npm:tslib@1.9.3.js", "npm:classnames@2.2.6.js", "npm:react@16.7.0.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/abstractPureComponent.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/errors.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/utils.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  var classnames_1 = tslib_1.__importDefault($__require("npm:classnames@2.2.6.js"));
  var React = tslib_1.__importStar($__require("npm:react@16.7.0.js"));
  var abstractPureComponent_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/abstractPureComponent.js");
  var Classes = tslib_1.__importStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js"));
  var errors_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/errors.js");
  var props_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js");
  var utils_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/utils.js");
  var R = 45;
  var SPINNER_TRACK = "M 50,50 m 0,-" + R + " a " + R + "," + R + " 0 1 1 0," + R * 2 + " a " + R + "," + R + " 0 1 1 0,-" + R * 2;
  var PATH_LENGTH = 280;
  var MIN_SIZE = 10;
  var STROKE_WIDTH = 4;
  var MIN_STROKE_WIDTH = 16;
  var Spinner = function (_super) {
    tslib_1.__extends(Spinner, _super);
    function Spinner() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    Spinner.prototype.componentDidUpdate = function (prevProps) {
      if (prevProps.value !== this.props.value) {
        this.forceUpdate();
      }
    };
    Spinner.prototype.render = function () {
      var _a = this.props,
          className = _a.className,
          intent = _a.intent,
          value = _a.value,
          _b = _a.tagName,
          TagName = _b === void 0 ? "div" : _b;
      var size = this.getSize();
      var classes = classnames_1.default(Classes.SPINNER, Classes.intentClass(intent), (_c = {}, _c[Classes.SPINNER_NO_SPIN] = value != null, _c), className);
      var strokeWidth = Math.min(MIN_STROKE_WIDTH, STROKE_WIDTH * Spinner.SIZE_LARGE / size);
      var strokeOffset = PATH_LENGTH - PATH_LENGTH * (value == null ? 0.25 : utils_1.clamp(value, 0, 1));
      return React.createElement(TagName, { className: classes }, React.createElement(TagName, { className: Classes.SPINNER_ANIMATION }, React.createElement("svg", {
        width: size,
        height: size,
        strokeWidth: strokeWidth.toFixed(2),
        viewBox: this.getViewBox(strokeWidth)
      }, React.createElement("path", {
        className: Classes.SPINNER_TRACK,
        d: SPINNER_TRACK
      }), React.createElement("path", {
        className: Classes.SPINNER_HEAD,
        d: SPINNER_TRACK,
        pathLength: PATH_LENGTH,
        strokeDasharray: PATH_LENGTH + " " + PATH_LENGTH,
        strokeDashoffset: strokeOffset
      }))));
      var _c;
    };
    Spinner.prototype.validateProps = function (_a) {
      var _b = _a.className,
          className = _b === void 0 ? "" : _b,
          size = _a.size;
      if (size != null && (className.indexOf(Classes.SMALL) >= 0 || className.indexOf(Classes.LARGE) >= 0)) {
        console.warn(errors_1.SPINNER_WARN_CLASSES_SIZE);
      }
    };
    Spinner.prototype.getSize = function () {
      var _a = this.props,
          _b = _a.className,
          className = _b === void 0 ? "" : _b,
          size = _a.size;
      if (size == null) {
        if (className.indexOf(Classes.SMALL) >= 0) {
          return Spinner.SIZE_SMALL;
        } else if (className.indexOf(Classes.LARGE) >= 0) {
          return Spinner.SIZE_LARGE;
        }
        return Spinner.SIZE_STANDARD;
      }
      return Math.max(MIN_SIZE, size);
    };
    Spinner.prototype.getViewBox = function (strokeWidth) {
      var radius = R + strokeWidth / 2;
      var viewBoxX = (50 - radius).toFixed(2);
      var viewBoxWidth = (radius * 2).toFixed(2);
      return viewBoxX + " " + viewBoxX + " " + viewBoxWidth + " " + viewBoxWidth;
    };
    Spinner.displayName = props_1.DISPLAYNAME_PREFIX + ".Spinner";
    Spinner.SIZE_SMALL = 24;
    Spinner.SIZE_STANDARD = 50;
    Spinner.SIZE_LARGE = 100;
    return Spinner;
  }(abstractPureComponent_1.AbstractPureComponent);
  exports.Spinner = Spinner;
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/components/button/abstractButton.js", ["npm:tslib@1.9.3.js", "npm:classnames@2.2.6.js", "npm:react@16.7.0.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/keys.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/utils.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/icon/icon.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/spinner/spinner.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  var classnames_1 = tslib_1.__importDefault($__require("npm:classnames@2.2.6.js"));
  var React = tslib_1.__importStar($__require("npm:react@16.7.0.js"));
  var Classes = tslib_1.__importStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js"));
  var Keys = tslib_1.__importStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/keys.js"));
  var utils_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/utils.js");
  var icon_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/icon/icon.js");
  var spinner_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/spinner/spinner.js");
  var AbstractButton = function (_super) {
    tslib_1.__extends(AbstractButton, _super);
    function AbstractButton() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.state = { isActive: false };
      _this.refHandlers = { button: function (ref) {
          _this.buttonRef = ref;
          utils_1.safeInvoke(_this.props.elementRef, ref);
        } };
      _this.currentKeyDown = null;
      _this.handleKeyDown = function (e) {
        if (Keys.isKeyboardClick(e.which)) {
          e.preventDefault();
          if (e.which !== _this.currentKeyDown) {
            _this.setState({ isActive: true });
          }
        }
        _this.currentKeyDown = e.which;
        utils_1.safeInvoke(_this.props.onKeyDown, e);
      };
      _this.handleKeyUp = function (e) {
        if (Keys.isKeyboardClick(e.which)) {
          _this.setState({ isActive: false });
          _this.buttonRef.click();
        }
        _this.currentKeyDown = null;
        utils_1.safeInvoke(_this.props.onKeyUp, e);
      };
      return _this;
    }
    AbstractButton.prototype.getCommonButtonProps = function () {
      var _a = this.props,
          alignText = _a.alignText,
          fill = _a.fill,
          large = _a.large,
          loading = _a.loading,
          minimal = _a.minimal,
          small = _a.small,
          tabIndex = _a.tabIndex;
      var disabled = this.props.disabled || loading;
      var className = classnames_1.default(Classes.BUTTON, (_b = {}, _b[Classes.ACTIVE] = this.state.isActive || this.props.active, _b[Classes.DISABLED] = disabled, _b[Classes.FILL] = fill, _b[Classes.LARGE] = large, _b[Classes.LOADING] = loading, _b[Classes.MINIMAL] = minimal, _b[Classes.SMALL] = small, _b), Classes.alignmentClass(alignText), Classes.intentClass(this.props.intent), this.props.className);
      return {
        className: className,
        disabled: disabled,
        onClick: disabled ? undefined : this.props.onClick,
        onKeyDown: this.handleKeyDown,
        onKeyUp: this.handleKeyUp,
        ref: this.refHandlers.button,
        tabIndex: disabled ? -1 : tabIndex
      };
      var _b;
    };
    AbstractButton.prototype.renderChildren = function () {
      var _a = this.props,
          children = _a.children,
          icon = _a.icon,
          loading = _a.loading,
          rightIcon = _a.rightIcon,
          text = _a.text;
      return [loading && React.createElement(spinner_1.Spinner, {
        key: "loading",
        className: Classes.BUTTON_SPINNER,
        size: icon_1.Icon.SIZE_LARGE
      }), React.createElement(icon_1.Icon, {
        key: "leftIcon",
        icon: icon
      }), (!utils_1.isReactNodeEmpty(text) || !utils_1.isReactNodeEmpty(children)) && React.createElement("span", {
        key: "text",
        className: Classes.BUTTON_TEXT
      }, text, children), React.createElement(icon_1.Icon, {
        key: "rightIcon",
        icon: rightIcon
      })];
    };
    return AbstractButton;
  }(React.PureComponent);
  exports.AbstractButton = AbstractButton;
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/components/button/buttons.js", ["npm:tslib@1.9.3.js", "npm:react@16.7.0.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/button/abstractButton.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  var React = tslib_1.__importStar($__require("npm:react@16.7.0.js"));
  var props_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js");
  var abstractButton_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/button/abstractButton.js");
  var Button = function (_super) {
    tslib_1.__extends(Button, _super);
    function Button() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    Button.prototype.render = function () {
      return React.createElement("button", tslib_1.__assign({ type: "button" }, props_1.removeNonHTMLProps(this.props), this.getCommonButtonProps()), this.renderChildren());
    };
    Button.displayName = props_1.DISPLAYNAME_PREFIX + ".Button";
    return Button;
  }(abstractButton_1.AbstractButton);
  exports.Button = Button;
  var AnchorButton = function (_super) {
    tslib_1.__extends(AnchorButton, _super);
    function AnchorButton() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    AnchorButton.prototype.render = function () {
      var _a = this.props,
          href = _a.href,
          _b = _a.tabIndex,
          tabIndex = _b === void 0 ? 0 : _b;
      var commonProps = this.getCommonButtonProps();
      return React.createElement("a", tslib_1.__assign({ role: "button" }, props_1.removeNonHTMLProps(this.props), commonProps, {
        href: commonProps.disabled ? undefined : href,
        tabIndex: commonProps.disabled ? -1 : tabIndex
      }), this.renderChildren());
    };
    AnchorButton.displayName = props_1.DISPLAYNAME_PREFIX + ".AnchorButton";
    return AnchorButton;
  }(abstractButton_1.AbstractButton);
  exports.AnchorButton = AnchorButton;
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/components/toast/toast.js", ["npm:tslib@1.9.3.js", "npm:classnames@2.2.6.js", "npm:react@16.7.0.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/abstractPureComponent.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/utils.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/button/buttonGroup.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/button/buttons.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/icon/icon.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  var classnames_1 = tslib_1.__importDefault($__require("npm:classnames@2.2.6.js"));
  var React = tslib_1.__importStar($__require("npm:react@16.7.0.js"));
  var abstractPureComponent_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/abstractPureComponent.js");
  var Classes = tslib_1.__importStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js"));
  var props_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js");
  var utils_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/utils.js");
  var buttonGroup_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/button/buttonGroup.js");
  var buttons_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/button/buttons.js");
  var icon_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/icon/icon.js");
  var Toast = function (_super) {
    tslib_1.__extends(Toast, _super);
    function Toast() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.handleActionClick = function (e) {
        utils_1.safeInvoke(_this.props.action.onClick, e);
        _this.triggerDismiss(false);
      };
      _this.handleCloseClick = function () {
        return _this.triggerDismiss(false);
      };
      _this.startTimeout = function () {
        if (_this.props.timeout > 0) {
          _this.setTimeout(function () {
            return _this.triggerDismiss(true);
          }, _this.props.timeout);
        }
      };
      return _this;
    }
    Toast.prototype.render = function () {
      var _a = this.props,
          className = _a.className,
          icon = _a.icon,
          intent = _a.intent,
          message = _a.message;
      return React.createElement("div", {
        className: classnames_1.default(Classes.TOAST, Classes.intentClass(intent), className),
        onBlur: this.startTimeout,
        onFocus: this.clearTimeouts,
        onMouseEnter: this.clearTimeouts,
        onMouseLeave: this.startTimeout,
        tabIndex: 0
      }, React.createElement(icon_1.Icon, { icon: icon }), React.createElement("span", { className: Classes.TOAST_MESSAGE }, message), React.createElement(buttonGroup_1.ButtonGroup, { minimal: true }, this.maybeRenderActionButton(), React.createElement(buttons_1.Button, {
        icon: "cross",
        onClick: this.handleCloseClick
      })));
    };
    Toast.prototype.componentDidMount = function () {
      this.startTimeout();
    };
    Toast.prototype.componentDidUpdate = function (prevProps) {
      if (prevProps.timeout !== this.props.timeout && this.props.timeout > 0) {
        this.startTimeout();
      } else if (prevProps.timeout <= 0 && this.props.timeout > 0) {
        this.startTimeout();
      } else if (prevProps.timeout > 0 && this.props.timeout <= 0) {
        this.clearTimeouts();
      }
    };
    Toast.prototype.componentWillUnmount = function () {
      this.clearTimeouts();
    };
    Toast.prototype.maybeRenderActionButton = function () {
      var action = this.props.action;
      if (action == null) {
        return undefined;
      } else {
        return React.createElement(buttons_1.AnchorButton, tslib_1.__assign({}, action, {
          intent: undefined,
          onClick: this.handleActionClick
        }));
      }
    };
    Toast.prototype.triggerDismiss = function (didTimeoutExpire) {
      utils_1.safeInvoke(this.props.onDismiss, didTimeoutExpire);
      this.clearTimeouts();
    };
    Toast.defaultProps = {
      className: "",
      message: "",
      timeout: 5000
    };
    Toast.displayName = props_1.DISPLAYNAME_PREFIX + ".Toast";
    return Toast;
  }(abstractPureComponent_1.AbstractPureComponent);
  exports.Toast = Toast;
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/components/toast/toaster.js", ["npm:tslib@1.9.3.js", "npm:classnames@2.2.6.js", "npm:react@16.7.0.js", "npm:react-dom@16.7.0.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/abstractPureComponent.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/errors.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/keys.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/position.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/utils.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/overlay/overlay.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/toast/toast.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  var classnames_1 = tslib_1.__importDefault($__require("npm:classnames@2.2.6.js"));
  var React = tslib_1.__importStar($__require("npm:react@16.7.0.js"));
  var ReactDOM = tslib_1.__importStar($__require("npm:react-dom@16.7.0.js"));
  var abstractPureComponent_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/abstractPureComponent.js");
  var Classes = tslib_1.__importStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js"));
  var errors_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/errors.js");
  var keys_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/keys.js");
  var position_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/position.js");
  var props_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js");
  var utils_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/utils.js");
  var overlay_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/overlay/overlay.js");
  var toast_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/toast/toast.js");
  var Toaster = function (_super) {
    tslib_1.__extends(Toaster, _super);
    function Toaster() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.state = { toasts: [] };
      _this.toastId = 0;
      _this.getDismissHandler = function (toast) {
        return function (timeoutExpired) {
          _this.dismiss(toast.key, timeoutExpired);
        };
      };
      _this.handleClose = function (e) {
        if (e.which === keys_1.ESCAPE) {
          _this.clear();
        }
      };
      return _this;
    }
    Toaster.create = function (props, container) {
      if (container === void 0) {
        container = document.body;
      }
      if (props != null && props.usePortal != null && !utils_1.isNodeEnv("production")) {
        console.warn(errors_1.TOASTER_WARN_INLINE);
      }
      var containerElement = document.createElement("div");
      container.appendChild(containerElement);
      var toaster = ReactDOM.render(React.createElement(Toaster, tslib_1.__assign({}, props, { usePortal: false })), containerElement);
      if (toaster == null) {
        throw new Error(errors_1.TOASTER_CREATE_NULL);
      }
      return toaster;
    };
    Toaster.prototype.show = function (props, key) {
      var options = this.createToastOptions(props, key);
      if (key === undefined || this.isNewToastKey(key)) {
        this.setState(function (prevState) {
          return { toasts: [options].concat(prevState.toasts) };
        });
      } else {
        this.setState(function (prevState) {
          return { toasts: prevState.toasts.map(function (t) {
              return t.key === key ? options : t;
            }) };
        });
      }
      return options.key;
    };
    Toaster.prototype.dismiss = function (key, timeoutExpired) {
      if (timeoutExpired === void 0) {
        timeoutExpired = false;
      }
      this.setState(function (_a) {
        var toasts = _a.toasts;
        return { toasts: toasts.filter(function (t) {
            var matchesKey = t.key === key;
            if (matchesKey) {
              utils_1.safeInvoke(t.onDismiss, timeoutExpired);
            }
            return !matchesKey;
          }) };
      });
    };
    Toaster.prototype.clear = function () {
      this.state.toasts.map(function (t) {
        return utils_1.safeInvoke(t.onDismiss, false);
      });
      this.setState({ toasts: [] });
    };
    Toaster.prototype.getToasts = function () {
      return this.state.toasts;
    };
    Toaster.prototype.render = function () {
      var classes = classnames_1.default(Classes.TOAST_CONTAINER, this.getPositionClasses(), this.props.className);
      return React.createElement(overlay_1.Overlay, {
        autoFocus: this.props.autoFocus,
        canEscapeKeyClose: this.props.canEscapeKeyClear,
        canOutsideClickClose: false,
        className: classes,
        enforceFocus: false,
        hasBackdrop: false,
        isOpen: this.state.toasts.length > 0 || this.props.children != null,
        onClose: this.handleClose,
        transitionDuration: 350,
        transitionName: Classes.TOAST,
        usePortal: this.props.usePortal
      }, this.state.toasts.map(this.renderToast, this), this.props.children);
    };
    Toaster.prototype.isNewToastKey = function (key) {
      return this.state.toasts.every(function (toast) {
        return toast.key !== key;
      });
    };
    Toaster.prototype.renderToast = function (toast) {
      return React.createElement(toast_1.Toast, tslib_1.__assign({}, toast, { onDismiss: this.getDismissHandler(toast) }));
    };
    Toaster.prototype.createToastOptions = function (props, key) {
      if (key === void 0) {
        key = "toast-" + this.toastId++;
      }
      return tslib_1.__assign({}, props, { key: key });
    };
    Toaster.prototype.getPositionClasses = function () {
      var positions = this.props.position.split("-");
      return positions.map(function (p) {
        return Classes.TOAST_CONTAINER + "-" + p.toLowerCase();
      });
    };
    Toaster.displayName = props_1.DISPLAYNAME_PREFIX + ".Toaster";
    Toaster.defaultProps = {
      autoFocus: false,
      canEscapeKeyClear: true,
      position: position_1.Position.TOP,
      usePortal: true
    };
    return Toaster;
  }(abstractPureComponent_1.AbstractPureComponent);
  exports.Toaster = Toaster;
});
System.registerDynamic("npm:@babel/runtime@7.2.0/helpers/objectWithoutPropertiesLoose.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  function _objectWithoutPropertiesLoose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;

    for (i = 0; i < sourceKeys.length; i++) {
      key = sourceKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      target[key] = source[key];
    }

    return target;
  }

  module.exports = _objectWithoutPropertiesLoose;
});
System.registerDynamic('npm:popper.js@1.14.6/dist/umd/popper.js', [], true, function ($__require, exports, module) {
  /* */
  "format cjs";
  /**!
   * @fileOverview Kickass library to create and place poppers near their reference elements.
   * @version 1.14.6
   * @license
   * Copyright (c) 2016 Federico Zivolo and contributors
   *
   * Permission is hereby granted, free of charge, to any person obtaining a copy
   * of this software and associated documentation files (the "Software"), to deal
   * in the Software without restriction, including without limitation the rights
   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   * copies of the Software, and to permit persons to whom the Software is
   * furnished to do so, subject to the following conditions:
   *
   * The above copyright notice and this permission notice shall be included in all
   * copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
   * SOFTWARE.
   */

  var global = this || self,
      GLOBAL = global;
  (function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof undefined === 'function' && define.amd ? define(factory) : global.Popper = factory();
  })(this, function () {
    'use strict';

    var isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined';

    var longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];
    var timeoutDuration = 0;
    for (var i = 0; i < longerTimeoutBrowsers.length; i += 1) {
      if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {
        timeoutDuration = 1;
        break;
      }
    }

    function microtaskDebounce(fn) {
      var called = false;
      return function () {
        if (called) {
          return;
        }
        called = true;
        window.Promise.resolve().then(function () {
          called = false;
          fn();
        });
      };
    }

    function taskDebounce(fn) {
      var scheduled = false;
      return function () {
        if (!scheduled) {
          scheduled = true;
          setTimeout(function () {
            scheduled = false;
            fn();
          }, timeoutDuration);
        }
      };
    }

    var supportsMicroTasks = isBrowser && window.Promise;

    /**
    * Create a debounced version of a method, that's asynchronously deferred
    * but called in the minimum time possible.
    *
    * @method
    * @memberof Popper.Utils
    * @argument {Function} fn
    * @returns {Function}
    */
    var debounce = supportsMicroTasks ? microtaskDebounce : taskDebounce;

    /**
     * Check if the given variable is a function
     * @method
     * @memberof Popper.Utils
     * @argument {Any} functionToCheck - variable to check
     * @returns {Boolean} answer to: is a function?
     */
    function isFunction(functionToCheck) {
      var getType = {};
      return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';
    }

    /**
     * Get CSS computed property of the given element
     * @method
     * @memberof Popper.Utils
     * @argument {Eement} element
     * @argument {String} property
     */
    function getStyleComputedProperty(element, property) {
      if (element.nodeType !== 1) {
        return [];
      }
      // NOTE: 1 DOM access here
      var window = element.ownerDocument.defaultView;
      var css = window.getComputedStyle(element, null);
      return property ? css[property] : css;
    }

    /**
     * Returns the parentNode or the host of the element
     * @method
     * @memberof Popper.Utils
     * @argument {Element} element
     * @returns {Element} parent
     */
    function getParentNode(element) {
      if (element.nodeName === 'HTML') {
        return element;
      }
      return element.parentNode || element.host;
    }

    /**
     * Returns the scrolling parent of the given element
     * @method
     * @memberof Popper.Utils
     * @argument {Element} element
     * @returns {Element} scroll parent
     */
    function getScrollParent(element) {
      // Return body, `getScroll` will take care to get the correct `scrollTop` from it
      if (!element) {
        return document.body;
      }

      switch (element.nodeName) {
        case 'HTML':
        case 'BODY':
          return element.ownerDocument.body;
        case '#document':
          return element.body;
      }

      // Firefox want us to check `-x` and `-y` variations as well

      var _getStyleComputedProp = getStyleComputedProperty(element),
          overflow = _getStyleComputedProp.overflow,
          overflowX = _getStyleComputedProp.overflowX,
          overflowY = _getStyleComputedProp.overflowY;

      if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {
        return element;
      }

      return getScrollParent(getParentNode(element));
    }

    var isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);
    var isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);

    /**
     * Determines if the browser is Internet Explorer
     * @method
     * @memberof Popper.Utils
     * @param {Number} version to check
     * @returns {Boolean} isIE
     */
    function isIE(version) {
      if (version === 11) {
        return isIE11;
      }
      if (version === 10) {
        return isIE10;
      }
      return isIE11 || isIE10;
    }

    /**
     * Returns the offset parent of the given element
     * @method
     * @memberof Popper.Utils
     * @argument {Element} element
     * @returns {Element} offset parent
     */
    function getOffsetParent(element) {
      if (!element) {
        return document.documentElement;
      }

      var noOffsetParent = isIE(10) ? document.body : null;

      // NOTE: 1 DOM access here
      var offsetParent = element.offsetParent || null;
      // Skip hidden elements which don't have an offsetParent
      while (offsetParent === noOffsetParent && element.nextElementSibling) {
        offsetParent = (element = element.nextElementSibling).offsetParent;
      }

      var nodeName = offsetParent && offsetParent.nodeName;

      if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {
        return element ? element.ownerDocument.documentElement : document.documentElement;
      }

      // .offsetParent will return the closest TH, TD or TABLE in case
      // no offsetParent is present, I hate this job...
      if (['TH', 'TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, 'position') === 'static') {
        return getOffsetParent(offsetParent);
      }

      return offsetParent;
    }

    function isOffsetContainer(element) {
      var nodeName = element.nodeName;

      if (nodeName === 'BODY') {
        return false;
      }
      return nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element;
    }

    /**
     * Finds the root node (document, shadowDOM root) of the given element
     * @method
     * @memberof Popper.Utils
     * @argument {Element} node
     * @returns {Element} root node
     */
    function getRoot(node) {
      if (node.parentNode !== null) {
        return getRoot(node.parentNode);
      }

      return node;
    }

    /**
     * Finds the offset parent common to the two provided nodes
     * @method
     * @memberof Popper.Utils
     * @argument {Element} element1
     * @argument {Element} element2
     * @returns {Element} common offset parent
     */
    function findCommonOffsetParent(element1, element2) {
      // This check is needed to avoid errors in case one of the elements isn't defined for any reason
      if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {
        return document.documentElement;
      }

      // Here we make sure to give as "start" the element that comes first in the DOM
      var order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;
      var start = order ? element1 : element2;
      var end = order ? element2 : element1;

      // Get common ancestor container
      var range = document.createRange();
      range.setStart(start, 0);
      range.setEnd(end, 0);
      var commonAncestorContainer = range.commonAncestorContainer;

      // Both nodes are inside #document

      if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {
        if (isOffsetContainer(commonAncestorContainer)) {
          return commonAncestorContainer;
        }

        return getOffsetParent(commonAncestorContainer);
      }

      // one of the nodes is inside shadowDOM, find which one
      var element1root = getRoot(element1);
      if (element1root.host) {
        return findCommonOffsetParent(element1root.host, element2);
      } else {
        return findCommonOffsetParent(element1, getRoot(element2).host);
      }
    }

    /**
     * Gets the scroll value of the given element in the given side (top and left)
     * @method
     * @memberof Popper.Utils
     * @argument {Element} element
     * @argument {String} side `top` or `left`
     * @returns {number} amount of scrolled pixels
     */
    function getScroll(element) {
      var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top';

      var upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';
      var nodeName = element.nodeName;

      if (nodeName === 'BODY' || nodeName === 'HTML') {
        var html = element.ownerDocument.documentElement;
        var scrollingElement = element.ownerDocument.scrollingElement || html;
        return scrollingElement[upperSide];
      }

      return element[upperSide];
    }

    /*
     * Sum or subtract the element scroll values (left and top) from a given rect object
     * @method
     * @memberof Popper.Utils
     * @param {Object} rect - Rect object you want to change
     * @param {HTMLElement} element - The element from the function reads the scroll values
     * @param {Boolean} subtract - set to true if you want to subtract the scroll values
     * @return {Object} rect - The modifier rect object
     */
    function includeScroll(rect, element) {
      var subtract = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

      var scrollTop = getScroll(element, 'top');
      var scrollLeft = getScroll(element, 'left');
      var modifier = subtract ? -1 : 1;
      rect.top += scrollTop * modifier;
      rect.bottom += scrollTop * modifier;
      rect.left += scrollLeft * modifier;
      rect.right += scrollLeft * modifier;
      return rect;
    }

    /*
     * Helper to detect borders of a given element
     * @method
     * @memberof Popper.Utils
     * @param {CSSStyleDeclaration} styles
     * Result of `getStyleComputedProperty` on the given element
     * @param {String} axis - `x` or `y`
     * @return {number} borders - The borders size of the given axis
     */

    function getBordersSize(styles, axis) {
      var sideA = axis === 'x' ? 'Left' : 'Top';
      var sideB = sideA === 'Left' ? 'Right' : 'Bottom';

      return parseFloat(styles['border' + sideA + 'Width'], 10) + parseFloat(styles['border' + sideB + 'Width'], 10);
    }

    function getSize(axis, body, html, computedStyle) {
      return Math.max(body['offset' + axis], body['scroll' + axis], html['client' + axis], html['offset' + axis], html['scroll' + axis], isIE(10) ? parseInt(html['offset' + axis]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Top' : 'Left')]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Bottom' : 'Right')]) : 0);
    }

    function getWindowSizes(document) {
      var body = document.body;
      var html = document.documentElement;
      var computedStyle = isIE(10) && getComputedStyle(html);

      return {
        height: getSize('Height', body, html, computedStyle),
        width: getSize('Width', body, html, computedStyle)
      };
    }

    var classCallCheck = function (instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    };

    var createClass = function () {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor) descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }

      return function (Constructor, protoProps, staticProps) {
        if (protoProps) defineProperties(Constructor.prototype, protoProps);
        if (staticProps) defineProperties(Constructor, staticProps);
        return Constructor;
      };
    }();

    var defineProperty = function (obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value: value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }

      return obj;
    };

    var _extends = Object.assign || function (target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];

        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }

      return target;
    };

    /**
     * Given element offsets, generate an output similar to getBoundingClientRect
     * @method
     * @memberof Popper.Utils
     * @argument {Object} offsets
     * @returns {Object} ClientRect like output
     */
    function getClientRect(offsets) {
      return _extends({}, offsets, {
        right: offsets.left + offsets.width,
        bottom: offsets.top + offsets.height
      });
    }

    /**
     * Get bounding client rect of given element
     * @method
     * @memberof Popper.Utils
     * @param {HTMLElement} element
     * @return {Object} client rect
     */
    function getBoundingClientRect(element) {
      var rect = {};

      // IE10 10 FIX: Please, don't ask, the element isn't
      // considered in DOM in some circumstances...
      // This isn't reproducible in IE10 compatibility mode of IE11
      try {
        if (isIE(10)) {
          rect = element.getBoundingClientRect();
          var scrollTop = getScroll(element, 'top');
          var scrollLeft = getScroll(element, 'left');
          rect.top += scrollTop;
          rect.left += scrollLeft;
          rect.bottom += scrollTop;
          rect.right += scrollLeft;
        } else {
          rect = element.getBoundingClientRect();
        }
      } catch (e) {}

      var result = {
        left: rect.left,
        top: rect.top,
        width: rect.right - rect.left,
        height: rect.bottom - rect.top
      };

      // subtract scrollbar size from sizes
      var sizes = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : {};
      var width = sizes.width || element.clientWidth || result.right - result.left;
      var height = sizes.height || element.clientHeight || result.bottom - result.top;

      var horizScrollbar = element.offsetWidth - width;
      var vertScrollbar = element.offsetHeight - height;

      // if an hypothetical scrollbar is detected, we must be sure it's not a `border`
      // we make this check conditional for performance reasons
      if (horizScrollbar || vertScrollbar) {
        var styles = getStyleComputedProperty(element);
        horizScrollbar -= getBordersSize(styles, 'x');
        vertScrollbar -= getBordersSize(styles, 'y');

        result.width -= horizScrollbar;
        result.height -= vertScrollbar;
      }

      return getClientRect(result);
    }

    function getOffsetRectRelativeToArbitraryNode(children, parent) {
      var fixedPosition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

      var isIE10 = isIE(10);
      var isHTML = parent.nodeName === 'HTML';
      var childrenRect = getBoundingClientRect(children);
      var parentRect = getBoundingClientRect(parent);
      var scrollParent = getScrollParent(children);

      var styles = getStyleComputedProperty(parent);
      var borderTopWidth = parseFloat(styles.borderTopWidth, 10);
      var borderLeftWidth = parseFloat(styles.borderLeftWidth, 10);

      // In cases where the parent is fixed, we must ignore negative scroll in offset calc
      if (fixedPosition && isHTML) {
        parentRect.top = Math.max(parentRect.top, 0);
        parentRect.left = Math.max(parentRect.left, 0);
      }
      var offsets = getClientRect({
        top: childrenRect.top - parentRect.top - borderTopWidth,
        left: childrenRect.left - parentRect.left - borderLeftWidth,
        width: childrenRect.width,
        height: childrenRect.height
      });
      offsets.marginTop = 0;
      offsets.marginLeft = 0;

      // Subtract margins of documentElement in case it's being used as parent
      // we do this only on HTML because it's the only element that behaves
      // differently when margins are applied to it. The margins are included in
      // the box of the documentElement, in the other cases not.
      if (!isIE10 && isHTML) {
        var marginTop = parseFloat(styles.marginTop, 10);
        var marginLeft = parseFloat(styles.marginLeft, 10);

        offsets.top -= borderTopWidth - marginTop;
        offsets.bottom -= borderTopWidth - marginTop;
        offsets.left -= borderLeftWidth - marginLeft;
        offsets.right -= borderLeftWidth - marginLeft;

        // Attach marginTop and marginLeft because in some circumstances we may need them
        offsets.marginTop = marginTop;
        offsets.marginLeft = marginLeft;
      }

      if (isIE10 && !fixedPosition ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== 'BODY') {
        offsets = includeScroll(offsets, parent);
      }

      return offsets;
    }

    function getViewportOffsetRectRelativeToArtbitraryNode(element) {
      var excludeScroll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

      var html = element.ownerDocument.documentElement;
      var relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);
      var width = Math.max(html.clientWidth, window.innerWidth || 0);
      var height = Math.max(html.clientHeight, window.innerHeight || 0);

      var scrollTop = !excludeScroll ? getScroll(html) : 0;
      var scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;

      var offset = {
        top: scrollTop - relativeOffset.top + relativeOffset.marginTop,
        left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,
        width: width,
        height: height
      };

      return getClientRect(offset);
    }

    /**
     * Check if the given element is fixed or is inside a fixed parent
     * @method
     * @memberof Popper.Utils
     * @argument {Element} element
     * @argument {Element} customContainer
     * @returns {Boolean} answer to "isFixed?"
     */
    function isFixed(element) {
      var nodeName = element.nodeName;
      if (nodeName === 'BODY' || nodeName === 'HTML') {
        return false;
      }
      if (getStyleComputedProperty(element, 'position') === 'fixed') {
        return true;
      }
      return isFixed(getParentNode(element));
    }

    /**
     * Finds the first parent of an element that has a transformed property defined
     * @method
     * @memberof Popper.Utils
     * @argument {Element} element
     * @returns {Element} first transformed parent or documentElement
     */

    function getFixedPositionOffsetParent(element) {
      // This check is needed to avoid errors in case one of the elements isn't defined for any reason
      if (!element || !element.parentElement || isIE()) {
        return document.documentElement;
      }
      var el = element.parentElement;
      while (el && getStyleComputedProperty(el, 'transform') === 'none') {
        el = el.parentElement;
      }
      return el || document.documentElement;
    }

    /**
     * Computed the boundaries limits and return them
     * @method
     * @memberof Popper.Utils
     * @param {HTMLElement} popper
     * @param {HTMLElement} reference
     * @param {number} padding
     * @param {HTMLElement} boundariesElement - Element used to define the boundaries
     * @param {Boolean} fixedPosition - Is in fixed position mode
     * @returns {Object} Coordinates of the boundaries
     */
    function getBoundaries(popper, reference, padding, boundariesElement) {
      var fixedPosition = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;

      // NOTE: 1 DOM access here

      var boundaries = { top: 0, left: 0 };
      var offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);

      // Handle viewport case
      if (boundariesElement === 'viewport') {
        boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);
      } else {
        // Handle other cases based on DOM element used as boundaries
        var boundariesNode = void 0;
        if (boundariesElement === 'scrollParent') {
          boundariesNode = getScrollParent(getParentNode(reference));
          if (boundariesNode.nodeName === 'BODY') {
            boundariesNode = popper.ownerDocument.documentElement;
          }
        } else if (boundariesElement === 'window') {
          boundariesNode = popper.ownerDocument.documentElement;
        } else {
          boundariesNode = boundariesElement;
        }

        var offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent, fixedPosition);

        // In case of HTML, we need a different computation
        if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {
          var _getWindowSizes = getWindowSizes(popper.ownerDocument),
              height = _getWindowSizes.height,
              width = _getWindowSizes.width;

          boundaries.top += offsets.top - offsets.marginTop;
          boundaries.bottom = height + offsets.top;
          boundaries.left += offsets.left - offsets.marginLeft;
          boundaries.right = width + offsets.left;
        } else {
          // for all the other DOM elements, this one is good
          boundaries = offsets;
        }
      }

      // Add paddings
      padding = padding || 0;
      var isPaddingNumber = typeof padding === 'number';
      boundaries.left += isPaddingNumber ? padding : padding.left || 0;
      boundaries.top += isPaddingNumber ? padding : padding.top || 0;
      boundaries.right -= isPaddingNumber ? padding : padding.right || 0;
      boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0;

      return boundaries;
    }

    function getArea(_ref) {
      var width = _ref.width,
          height = _ref.height;

      return width * height;
    }

    /**
     * Utility used to transform the `auto` placement to the placement with more
     * available space.
     * @method
     * @memberof Popper.Utils
     * @argument {Object} data - The data object generated by update method
     * @argument {Object} options - Modifiers configuration and options
     * @returns {Object} The data object, properly modified
     */
    function computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) {
      var padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;

      if (placement.indexOf('auto') === -1) {
        return placement;
      }

      var boundaries = getBoundaries(popper, reference, padding, boundariesElement);

      var rects = {
        top: {
          width: boundaries.width,
          height: refRect.top - boundaries.top
        },
        right: {
          width: boundaries.right - refRect.right,
          height: boundaries.height
        },
        bottom: {
          width: boundaries.width,
          height: boundaries.bottom - refRect.bottom
        },
        left: {
          width: refRect.left - boundaries.left,
          height: boundaries.height
        }
      };

      var sortedAreas = Object.keys(rects).map(function (key) {
        return _extends({
          key: key
        }, rects[key], {
          area: getArea(rects[key])
        });
      }).sort(function (a, b) {
        return b.area - a.area;
      });

      var filteredAreas = sortedAreas.filter(function (_ref2) {
        var width = _ref2.width,
            height = _ref2.height;
        return width >= popper.clientWidth && height >= popper.clientHeight;
      });

      var computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;

      var variation = placement.split('-')[1];

      return computedPlacement + (variation ? '-' + variation : '');
    }

    /**
     * Get offsets to the reference element
     * @method
     * @memberof Popper.Utils
     * @param {Object} state
     * @param {Element} popper - the popper element
     * @param {Element} reference - the reference element (the popper will be relative to this)
     * @param {Element} fixedPosition - is in fixed position mode
     * @returns {Object} An object containing the offsets which will be applied to the popper
     */
    function getReferenceOffsets(state, popper, reference) {
      var fixedPosition = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

      var commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);
      return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);
    }

    /**
     * Get the outer sizes of the given element (offset size + margins)
     * @method
     * @memberof Popper.Utils
     * @argument {Element} element
     * @returns {Object} object containing width and height properties
     */
    function getOuterSizes(element) {
      var window = element.ownerDocument.defaultView;
      var styles = window.getComputedStyle(element);
      var x = parseFloat(styles.marginTop || 0) + parseFloat(styles.marginBottom || 0);
      var y = parseFloat(styles.marginLeft || 0) + parseFloat(styles.marginRight || 0);
      var result = {
        width: element.offsetWidth + y,
        height: element.offsetHeight + x
      };
      return result;
    }

    /**
     * Get the opposite placement of the given one
     * @method
     * @memberof Popper.Utils
     * @argument {String} placement
     * @returns {String} flipped placement
     */
    function getOppositePlacement(placement) {
      var hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };
      return placement.replace(/left|right|bottom|top/g, function (matched) {
        return hash[matched];
      });
    }

    /**
     * Get offsets to the popper
     * @method
     * @memberof Popper.Utils
     * @param {Object} position - CSS position the Popper will get applied
     * @param {HTMLElement} popper - the popper element
     * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)
     * @param {String} placement - one of the valid placement options
     * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper
     */
    function getPopperOffsets(popper, referenceOffsets, placement) {
      placement = placement.split('-')[0];

      // Get popper node sizes
      var popperRect = getOuterSizes(popper);

      // Add position, width and height to our offsets object
      var popperOffsets = {
        width: popperRect.width,
        height: popperRect.height
      };

      // depending by the popper placement we have to compute its offsets slightly differently
      var isHoriz = ['right', 'left'].indexOf(placement) !== -1;
      var mainSide = isHoriz ? 'top' : 'left';
      var secondarySide = isHoriz ? 'left' : 'top';
      var measurement = isHoriz ? 'height' : 'width';
      var secondaryMeasurement = !isHoriz ? 'height' : 'width';

      popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;
      if (placement === secondarySide) {
        popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];
      } else {
        popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];
      }

      return popperOffsets;
    }

    /**
     * Mimics the `find` method of Array
     * @method
     * @memberof Popper.Utils
     * @argument {Array} arr
     * @argument prop
     * @argument value
     * @returns index or -1
     */
    function find(arr, check) {
      // use native find if supported
      if (Array.prototype.find) {
        return arr.find(check);
      }

      // use `filter` to obtain the same behavior of `find`
      return arr.filter(check)[0];
    }

    /**
     * Return the index of the matching object
     * @method
     * @memberof Popper.Utils
     * @argument {Array} arr
     * @argument prop
     * @argument value
     * @returns index or -1
     */
    function findIndex(arr, prop, value) {
      // use native findIndex if supported
      if (Array.prototype.findIndex) {
        return arr.findIndex(function (cur) {
          return cur[prop] === value;
        });
      }

      // use `find` + `indexOf` if `findIndex` isn't supported
      var match = find(arr, function (obj) {
        return obj[prop] === value;
      });
      return arr.indexOf(match);
    }

    /**
     * Loop trough the list of modifiers and run them in order,
     * each of them will then edit the data object.
     * @method
     * @memberof Popper.Utils
     * @param {dataObject} data
     * @param {Array} modifiers
     * @param {String} ends - Optional modifier name used as stopper
     * @returns {dataObject}
     */
    function runModifiers(modifiers, data, ends) {
      var modifiersToRun = ends === undefined ? modifiers : modifiers.slice(0, findIndex(modifiers, 'name', ends));

      modifiersToRun.forEach(function (modifier) {
        if (modifier['function']) {
          // eslint-disable-line dot-notation
          console.warn('`modifier.function` is deprecated, use `modifier.fn`!');
        }
        var fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation
        if (modifier.enabled && isFunction(fn)) {
          // Add properties to offsets to make them a complete clientRect object
          // we do this before each modifier to make sure the previous one doesn't
          // mess with these values
          data.offsets.popper = getClientRect(data.offsets.popper);
          data.offsets.reference = getClientRect(data.offsets.reference);

          data = fn(data, modifier);
        }
      });

      return data;
    }

    /**
     * Updates the position of the popper, computing the new offsets and applying
     * the new style.<br />
     * Prefer `scheduleUpdate` over `update` because of performance reasons.
     * @method
     * @memberof Popper
     */
    function update() {
      // if popper is destroyed, don't perform any further update
      if (this.state.isDestroyed) {
        return;
      }

      var data = {
        instance: this,
        styles: {},
        arrowStyles: {},
        attributes: {},
        flipped: false,
        offsets: {}
      };

      // compute reference element offsets
      data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference, this.options.positionFixed);

      // compute auto placement, store placement inside the data object,
      // modifiers will be able to edit `placement` if needed
      // and refer to originalPlacement to know the original value
      data.placement = computeAutoPlacement(this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding);

      // store the computed placement inside `originalPlacement`
      data.originalPlacement = data.placement;

      data.positionFixed = this.options.positionFixed;

      // compute the popper offsets
      data.offsets.popper = getPopperOffsets(this.popper, data.offsets.reference, data.placement);

      data.offsets.popper.position = this.options.positionFixed ? 'fixed' : 'absolute';

      // run the modifiers
      data = runModifiers(this.modifiers, data);

      // the first `update` will call `onCreate` callback
      // the other ones will call `onUpdate` callback
      if (!this.state.isCreated) {
        this.state.isCreated = true;
        this.options.onCreate(data);
      } else {
        this.options.onUpdate(data);
      }
    }

    /**
     * Helper used to know if the given modifier is enabled.
     * @method
     * @memberof Popper.Utils
     * @returns {Boolean}
     */
    function isModifierEnabled(modifiers, modifierName) {
      return modifiers.some(function (_ref) {
        var name = _ref.name,
            enabled = _ref.enabled;
        return enabled && name === modifierName;
      });
    }

    /**
     * Get the prefixed supported property name
     * @method
     * @memberof Popper.Utils
     * @argument {String} property (camelCase)
     * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)
     */
    function getSupportedPropertyName(property) {
      var prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];
      var upperProp = property.charAt(0).toUpperCase() + property.slice(1);

      for (var i = 0; i < prefixes.length; i++) {
        var prefix = prefixes[i];
        var toCheck = prefix ? '' + prefix + upperProp : property;
        if (typeof document.body.style[toCheck] !== 'undefined') {
          return toCheck;
        }
      }
      return null;
    }

    /**
     * Destroys the popper.
     * @method
     * @memberof Popper
     */
    function destroy() {
      this.state.isDestroyed = true;

      // touch DOM only if `applyStyle` modifier is enabled
      if (isModifierEnabled(this.modifiers, 'applyStyle')) {
        this.popper.removeAttribute('x-placement');
        this.popper.style.position = '';
        this.popper.style.top = '';
        this.popper.style.left = '';
        this.popper.style.right = '';
        this.popper.style.bottom = '';
        this.popper.style.willChange = '';
        this.popper.style[getSupportedPropertyName('transform')] = '';
      }

      this.disableEventListeners();

      // remove the popper if user explicity asked for the deletion on destroy
      // do not use `remove` because IE11 doesn't support it
      if (this.options.removeOnDestroy) {
        this.popper.parentNode.removeChild(this.popper);
      }
      return this;
    }

    /**
     * Get the window associated with the element
     * @argument {Element} element
     * @returns {Window}
     */
    function getWindow(element) {
      var ownerDocument = element.ownerDocument;
      return ownerDocument ? ownerDocument.defaultView : window;
    }

    function attachToScrollParents(scrollParent, event, callback, scrollParents) {
      var isBody = scrollParent.nodeName === 'BODY';
      var target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;
      target.addEventListener(event, callback, { passive: true });

      if (!isBody) {
        attachToScrollParents(getScrollParent(target.parentNode), event, callback, scrollParents);
      }
      scrollParents.push(target);
    }

    /**
     * Setup needed event listeners used to update the popper position
     * @method
     * @memberof Popper.Utils
     * @private
     */
    function setupEventListeners(reference, options, state, updateBound) {
      // Resize event listener on window
      state.updateBound = updateBound;
      getWindow(reference).addEventListener('resize', state.updateBound, { passive: true });

      // Scroll event listener on scroll parents
      var scrollElement = getScrollParent(reference);
      attachToScrollParents(scrollElement, 'scroll', state.updateBound, state.scrollParents);
      state.scrollElement = scrollElement;
      state.eventsEnabled = true;

      return state;
    }

    /**
     * It will add resize/scroll events and start recalculating
     * position of the popper element when they are triggered.
     * @method
     * @memberof Popper
     */
    function enableEventListeners() {
      if (!this.state.eventsEnabled) {
        this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);
      }
    }

    /**
     * Remove event listeners used to update the popper position
     * @method
     * @memberof Popper.Utils
     * @private
     */
    function removeEventListeners(reference, state) {
      // Remove resize event listener on window
      getWindow(reference).removeEventListener('resize', state.updateBound);

      // Remove scroll event listener on scroll parents
      state.scrollParents.forEach(function (target) {
        target.removeEventListener('scroll', state.updateBound);
      });

      // Reset state
      state.updateBound = null;
      state.scrollParents = [];
      state.scrollElement = null;
      state.eventsEnabled = false;
      return state;
    }

    /**
     * It will remove resize/scroll events and won't recalculate popper position
     * when they are triggered. It also won't trigger `onUpdate` callback anymore,
     * unless you call `update` method manually.
     * @method
     * @memberof Popper
     */
    function disableEventListeners() {
      if (this.state.eventsEnabled) {
        cancelAnimationFrame(this.scheduleUpdate);
        this.state = removeEventListeners(this.reference, this.state);
      }
    }

    /**
     * Tells if a given input is a number
     * @method
     * @memberof Popper.Utils
     * @param {*} input to check
     * @return {Boolean}
     */
    function isNumeric(n) {
      return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);
    }

    /**
     * Set the style to the given popper
     * @method
     * @memberof Popper.Utils
     * @argument {Element} element - Element to apply the style to
     * @argument {Object} styles
     * Object with a list of properties and values which will be applied to the element
     */
    function setStyles(element, styles) {
      Object.keys(styles).forEach(function (prop) {
        var unit = '';
        // add unit if the value is numeric and is one of the following
        if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && isNumeric(styles[prop])) {
          unit = 'px';
        }
        element.style[prop] = styles[prop] + unit;
      });
    }

    /**
     * Set the attributes to the given popper
     * @method
     * @memberof Popper.Utils
     * @argument {Element} element - Element to apply the attributes to
     * @argument {Object} styles
     * Object with a list of properties and values which will be applied to the element
     */
    function setAttributes(element, attributes) {
      Object.keys(attributes).forEach(function (prop) {
        var value = attributes[prop];
        if (value !== false) {
          element.setAttribute(prop, attributes[prop]);
        } else {
          element.removeAttribute(prop);
        }
      });
    }

    /**
     * @function
     * @memberof Modifiers
     * @argument {Object} data - The data object generated by `update` method
     * @argument {Object} data.styles - List of style properties - values to apply to popper element
     * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element
     * @argument {Object} options - Modifiers configuration and options
     * @returns {Object} The same data object
     */
    function applyStyle(data) {
      // any property present in `data.styles` will be applied to the popper,
      // in this way we can make the 3rd party modifiers add custom styles to it
      // Be aware, modifiers could override the properties defined in the previous
      // lines of this modifier!
      setStyles(data.instance.popper, data.styles);

      // any property present in `data.attributes` will be applied to the popper,
      // they will be set as HTML attributes of the element
      setAttributes(data.instance.popper, data.attributes);

      // if arrowElement is defined and arrowStyles has some properties
      if (data.arrowElement && Object.keys(data.arrowStyles).length) {
        setStyles(data.arrowElement, data.arrowStyles);
      }

      return data;
    }

    /**
     * Set the x-placement attribute before everything else because it could be used
     * to add margins to the popper margins needs to be calculated to get the
     * correct popper offsets.
     * @method
     * @memberof Popper.modifiers
     * @param {HTMLElement} reference - The reference element used to position the popper
     * @param {HTMLElement} popper - The HTML element used as popper
     * @param {Object} options - Popper.js options
     */
    function applyStyleOnLoad(reference, popper, options, modifierOptions, state) {
      // compute reference element offsets
      var referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed);

      // compute auto placement, store placement inside the data object,
      // modifiers will be able to edit `placement` if needed
      // and refer to originalPlacement to know the original value
      var placement = computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);

      popper.setAttribute('x-placement', placement);

      // Apply `position` to popper before anything else because
      // without the position applied we can't guarantee correct computations
      setStyles(popper, { position: options.positionFixed ? 'fixed' : 'absolute' });

      return options;
    }

    /**
     * @function
     * @memberof Popper.Utils
     * @argument {Object} data - The data object generated by `update` method
     * @argument {Boolean} shouldRound - If the offsets should be rounded at all
     * @returns {Object} The popper's position offsets rounded
     *
     * The tale of pixel-perfect positioning. It's still not 100% perfect, but as
     * good as it can be within reason.
     * Discussion here: https://github.com/FezVrasta/popper.js/pull/715
     *
     * Low DPI screens cause a popper to be blurry if not using full pixels (Safari
     * as well on High DPI screens).
     *
     * Firefox prefers no rounding for positioning and does not have blurriness on
     * high DPI screens.
     *
     * Only horizontal placement and left/right values need to be considered.
     */
    function getRoundedOffsets(data, shouldRound) {
      var _data$offsets = data.offsets,
          popper = _data$offsets.popper,
          reference = _data$offsets.reference;

      var isVertical = ['left', 'right'].indexOf(data.placement) !== -1;
      var isVariation = data.placement.indexOf('-') !== -1;
      var sameWidthOddness = reference.width % 2 === popper.width % 2;
      var bothOddWidth = reference.width % 2 === 1 && popper.width % 2 === 1;
      var noRound = function noRound(v) {
        return v;
      };

      var horizontalToInteger = !shouldRound ? noRound : isVertical || isVariation || sameWidthOddness ? Math.round : Math.floor;
      var verticalToInteger = !shouldRound ? noRound : Math.round;

      return {
        left: horizontalToInteger(bothOddWidth && !isVariation && shouldRound ? popper.left - 1 : popper.left),
        top: verticalToInteger(popper.top),
        bottom: verticalToInteger(popper.bottom),
        right: horizontalToInteger(popper.right)
      };
    }

    var isFirefox = isBrowser && /Firefox/i.test(navigator.userAgent);

    /**
     * @function
     * @memberof Modifiers
     * @argument {Object} data - The data object generated by `update` method
     * @argument {Object} options - Modifiers configuration and options
     * @returns {Object} The data object, properly modified
     */
    function computeStyle(data, options) {
      var x = options.x,
          y = options.y;
      var popper = data.offsets.popper;

      // Remove this legacy support in Popper.js v2

      var legacyGpuAccelerationOption = find(data.instance.modifiers, function (modifier) {
        return modifier.name === 'applyStyle';
      }).gpuAcceleration;
      if (legacyGpuAccelerationOption !== undefined) {
        console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');
      }
      var gpuAcceleration = legacyGpuAccelerationOption !== undefined ? legacyGpuAccelerationOption : options.gpuAcceleration;

      var offsetParent = getOffsetParent(data.instance.popper);
      var offsetParentRect = getBoundingClientRect(offsetParent);

      // Styles
      var styles = {
        position: popper.position
      };

      var offsets = getRoundedOffsets(data, window.devicePixelRatio < 2 || !isFirefox);

      var sideA = x === 'bottom' ? 'top' : 'bottom';
      var sideB = y === 'right' ? 'left' : 'right';

      // if gpuAcceleration is set to `true` and transform is supported,
      //  we use `translate3d` to apply the position to the popper we
      // automatically use the supported prefixed version if needed
      var prefixedProperty = getSupportedPropertyName('transform');

      // now, let's make a step back and look at this code closely (wtf?)
      // If the content of the popper grows once it's been positioned, it
      // may happen that the popper gets misplaced because of the new content
      // overflowing its reference element
      // To avoid this problem, we provide two options (x and y), which allow
      // the consumer to define the offset origin.
      // If we position a popper on top of a reference element, we can set
      // `x` to `top` to make the popper grow towards its top instead of
      // its bottom.
      var left = void 0,
          top = void 0;
      if (sideA === 'bottom') {
        // when offsetParent is <html> the positioning is relative to the bottom of the screen (excluding the scrollbar)
        // and not the bottom of the html element
        if (offsetParent.nodeName === 'HTML') {
          top = -offsetParent.clientHeight + offsets.bottom;
        } else {
          top = -offsetParentRect.height + offsets.bottom;
        }
      } else {
        top = offsets.top;
      }
      if (sideB === 'right') {
        if (offsetParent.nodeName === 'HTML') {
          left = -offsetParent.clientWidth + offsets.right;
        } else {
          left = -offsetParentRect.width + offsets.right;
        }
      } else {
        left = offsets.left;
      }
      if (gpuAcceleration && prefixedProperty) {
        styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';
        styles[sideA] = 0;
        styles[sideB] = 0;
        styles.willChange = 'transform';
      } else {
        // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties
        var invertTop = sideA === 'bottom' ? -1 : 1;
        var invertLeft = sideB === 'right' ? -1 : 1;
        styles[sideA] = top * invertTop;
        styles[sideB] = left * invertLeft;
        styles.willChange = sideA + ', ' + sideB;
      }

      // Attributes
      var attributes = {
        'x-placement': data.placement
      };

      // Update `data` attributes, styles and arrowStyles
      data.attributes = _extends({}, attributes, data.attributes);
      data.styles = _extends({}, styles, data.styles);
      data.arrowStyles = _extends({}, data.offsets.arrow, data.arrowStyles);

      return data;
    }

    /**
     * Helper used to know if the given modifier depends from another one.<br />
     * It checks if the needed modifier is listed and enabled.
     * @method
     * @memberof Popper.Utils
     * @param {Array} modifiers - list of modifiers
     * @param {String} requestingName - name of requesting modifier
     * @param {String} requestedName - name of requested modifier
     * @returns {Boolean}
     */
    function isModifierRequired(modifiers, requestingName, requestedName) {
      var requesting = find(modifiers, function (_ref) {
        var name = _ref.name;
        return name === requestingName;
      });

      var isRequired = !!requesting && modifiers.some(function (modifier) {
        return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;
      });

      if (!isRequired) {
        var _requesting = '`' + requestingName + '`';
        var requested = '`' + requestedName + '`';
        console.warn(requested + ' modifier is required by ' + _requesting + ' modifier in order to work, be sure to include it before ' + _requesting + '!');
      }
      return isRequired;
    }

    /**
     * @function
     * @memberof Modifiers
     * @argument {Object} data - The data object generated by update method
     * @argument {Object} options - Modifiers configuration and options
     * @returns {Object} The data object, properly modified
     */
    function arrow(data, options) {
      var _data$offsets$arrow;

      // arrow depends on keepTogether in order to work
      if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {
        return data;
      }

      var arrowElement = options.element;

      // if arrowElement is a string, suppose it's a CSS selector
      if (typeof arrowElement === 'string') {
        arrowElement = data.instance.popper.querySelector(arrowElement);

        // if arrowElement is not found, don't run the modifier
        if (!arrowElement) {
          return data;
        }
      } else {
        // if the arrowElement isn't a query selector we must check that the
        // provided DOM node is child of its popper node
        if (!data.instance.popper.contains(arrowElement)) {
          console.warn('WARNING: `arrow.element` must be child of its popper element!');
          return data;
        }
      }

      var placement = data.placement.split('-')[0];
      var _data$offsets = data.offsets,
          popper = _data$offsets.popper,
          reference = _data$offsets.reference;

      var isVertical = ['left', 'right'].indexOf(placement) !== -1;

      var len = isVertical ? 'height' : 'width';
      var sideCapitalized = isVertical ? 'Top' : 'Left';
      var side = sideCapitalized.toLowerCase();
      var altSide = isVertical ? 'left' : 'top';
      var opSide = isVertical ? 'bottom' : 'right';
      var arrowElementSize = getOuterSizes(arrowElement)[len];

      //
      // extends keepTogether behavior making sure the popper and its
      // reference have enough pixels in conjunction
      //

      // top/left side
      if (reference[opSide] - arrowElementSize < popper[side]) {
        data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);
      }
      // bottom/right side
      if (reference[side] + arrowElementSize > popper[opSide]) {
        data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];
      }
      data.offsets.popper = getClientRect(data.offsets.popper);

      // compute center of the popper
      var center = reference[side] + reference[len] / 2 - arrowElementSize / 2;

      // Compute the sideValue using the updated popper offsets
      // take popper margin in account because we don't have this info available
      var css = getStyleComputedProperty(data.instance.popper);
      var popperMarginSide = parseFloat(css['margin' + sideCapitalized], 10);
      var popperBorderSide = parseFloat(css['border' + sideCapitalized + 'Width'], 10);
      var sideValue = center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;

      // prevent arrowElement from being placed not contiguously to its popper
      sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);

      data.arrowElement = arrowElement;
      data.offsets.arrow = (_data$offsets$arrow = {}, defineProperty(_data$offsets$arrow, side, Math.round(sideValue)), defineProperty(_data$offsets$arrow, altSide, ''), _data$offsets$arrow);

      return data;
    }

    /**
     * Get the opposite placement variation of the given one
     * @method
     * @memberof Popper.Utils
     * @argument {String} placement variation
     * @returns {String} flipped placement variation
     */
    function getOppositeVariation(variation) {
      if (variation === 'end') {
        return 'start';
      } else if (variation === 'start') {
        return 'end';
      }
      return variation;
    }

    /**
     * List of accepted placements to use as values of the `placement` option.<br />
     * Valid placements are:
     * - `auto`
     * - `top`
     * - `right`
     * - `bottom`
     * - `left`
     *
     * Each placement can have a variation from this list:
     * - `-start`
     * - `-end`
     *
     * Variations are interpreted easily if you think of them as the left to right
     * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`
     * is right.<br />
     * Vertically (`left` and `right`), `start` is top and `end` is bottom.
     *
     * Some valid examples are:
     * - `top-end` (on top of reference, right aligned)
     * - `right-start` (on right of reference, top aligned)
     * - `bottom` (on bottom, centered)
     * - `auto-end` (on the side with more space available, alignment depends by placement)
     *
     * @static
     * @type {Array}
     * @enum {String}
     * @readonly
     * @method placements
     * @memberof Popper
     */
    var placements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start'];

    // Get rid of `auto` `auto-start` and `auto-end`
    var validPlacements = placements.slice(3);

    /**
     * Given an initial placement, returns all the subsequent placements
     * clockwise (or counter-clockwise).
     *
     * @method
     * @memberof Popper.Utils
     * @argument {String} placement - A valid placement (it accepts variations)
     * @argument {Boolean} counter - Set to true to walk the placements counterclockwise
     * @returns {Array} placements including their variations
     */
    function clockwise(placement) {
      var counter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

      var index = validPlacements.indexOf(placement);
      var arr = validPlacements.slice(index + 1).concat(validPlacements.slice(0, index));
      return counter ? arr.reverse() : arr;
    }

    var BEHAVIORS = {
      FLIP: 'flip',
      CLOCKWISE: 'clockwise',
      COUNTERCLOCKWISE: 'counterclockwise'
    };

    /**
     * @function
     * @memberof Modifiers
     * @argument {Object} data - The data object generated by update method
     * @argument {Object} options - Modifiers configuration and options
     * @returns {Object} The data object, properly modified
     */
    function flip(data, options) {
      // if `inner` modifier is enabled, we can't use the `flip` modifier
      if (isModifierEnabled(data.instance.modifiers, 'inner')) {
        return data;
      }

      if (data.flipped && data.placement === data.originalPlacement) {
        // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides
        return data;
      }

      var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement, data.positionFixed);

      var placement = data.placement.split('-')[0];
      var placementOpposite = getOppositePlacement(placement);
      var variation = data.placement.split('-')[1] || '';

      var flipOrder = [];

      switch (options.behavior) {
        case BEHAVIORS.FLIP:
          flipOrder = [placement, placementOpposite];
          break;
        case BEHAVIORS.CLOCKWISE:
          flipOrder = clockwise(placement);
          break;
        case BEHAVIORS.COUNTERCLOCKWISE:
          flipOrder = clockwise(placement, true);
          break;
        default:
          flipOrder = options.behavior;
      }

      flipOrder.forEach(function (step, index) {
        if (placement !== step || flipOrder.length === index + 1) {
          return data;
        }

        placement = data.placement.split('-')[0];
        placementOpposite = getOppositePlacement(placement);

        var popperOffsets = data.offsets.popper;
        var refOffsets = data.offsets.reference;

        // using floor because the reference offsets may contain decimals we are not going to consider here
        var floor = Math.floor;
        var overlapsRef = placement === 'left' && floor(popperOffsets.right) > floor(refOffsets.left) || placement === 'right' && floor(popperOffsets.left) < floor(refOffsets.right) || placement === 'top' && floor(popperOffsets.bottom) > floor(refOffsets.top) || placement === 'bottom' && floor(popperOffsets.top) < floor(refOffsets.bottom);

        var overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);
        var overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);
        var overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);
        var overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom);

        var overflowsBoundaries = placement === 'left' && overflowsLeft || placement === 'right' && overflowsRight || placement === 'top' && overflowsTop || placement === 'bottom' && overflowsBottom;

        // flip the variation if required
        var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;
        var flippedVariation = !!options.flipVariations && (isVertical && variation === 'start' && overflowsLeft || isVertical && variation === 'end' && overflowsRight || !isVertical && variation === 'start' && overflowsTop || !isVertical && variation === 'end' && overflowsBottom);

        if (overlapsRef || overflowsBoundaries || flippedVariation) {
          // this boolean to detect any flip loop
          data.flipped = true;

          if (overlapsRef || overflowsBoundaries) {
            placement = flipOrder[index + 1];
          }

          if (flippedVariation) {
            variation = getOppositeVariation(variation);
          }

          data.placement = placement + (variation ? '-' + variation : '');

          // this object contains `position`, we want to preserve it along with
          // any additional property we may add in the future
          data.offsets.popper = _extends({}, data.offsets.popper, getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement));

          data = runModifiers(data.instance.modifiers, data, 'flip');
        }
      });
      return data;
    }

    /**
     * @function
     * @memberof Modifiers
     * @argument {Object} data - The data object generated by update method
     * @argument {Object} options - Modifiers configuration and options
     * @returns {Object} The data object, properly modified
     */
    function keepTogether(data) {
      var _data$offsets = data.offsets,
          popper = _data$offsets.popper,
          reference = _data$offsets.reference;

      var placement = data.placement.split('-')[0];
      var floor = Math.floor;
      var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;
      var side = isVertical ? 'right' : 'bottom';
      var opSide = isVertical ? 'left' : 'top';
      var measurement = isVertical ? 'width' : 'height';

      if (popper[side] < floor(reference[opSide])) {
        data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];
      }
      if (popper[opSide] > floor(reference[side])) {
        data.offsets.popper[opSide] = floor(reference[side]);
      }

      return data;
    }

    /**
     * Converts a string containing value + unit into a px value number
     * @function
     * @memberof {modifiers~offset}
     * @private
     * @argument {String} str - Value + unit string
     * @argument {String} measurement - `height` or `width`
     * @argument {Object} popperOffsets
     * @argument {Object} referenceOffsets
     * @returns {Number|String}
     * Value in pixels, or original string if no values were extracted
     */
    function toValue(str, measurement, popperOffsets, referenceOffsets) {
      // separate value from unit
      var split = str.match(/((?:\-|\+)?\d*\.?\d*)(.*)/);
      var value = +split[1];
      var unit = split[2];

      // If it's not a number it's an operator, I guess
      if (!value) {
        return str;
      }

      if (unit.indexOf('%') === 0) {
        var element = void 0;
        switch (unit) {
          case '%p':
            element = popperOffsets;
            break;
          case '%':
          case '%r':
          default:
            element = referenceOffsets;
        }

        var rect = getClientRect(element);
        return rect[measurement] / 100 * value;
      } else if (unit === 'vh' || unit === 'vw') {
        // if is a vh or vw, we calculate the size based on the viewport
        var size = void 0;
        if (unit === 'vh') {
          size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);
        } else {
          size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);
        }
        return size / 100 * value;
      } else {
        // if is an explicit pixel unit, we get rid of the unit and keep the value
        // if is an implicit unit, it's px, and we return just the value
        return value;
      }
    }

    /**
     * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.
     * @function
     * @memberof {modifiers~offset}
     * @private
     * @argument {String} offset
     * @argument {Object} popperOffsets
     * @argument {Object} referenceOffsets
     * @argument {String} basePlacement
     * @returns {Array} a two cells array with x and y offsets in numbers
     */
    function parseOffset(offset, popperOffsets, referenceOffsets, basePlacement) {
      var offsets = [0, 0];

      // Use height if placement is left or right and index is 0 otherwise use width
      // in this way the first offset will use an axis and the second one
      // will use the other one
      var useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;

      // Split the offset string to obtain a list of values and operands
      // The regex addresses values with the plus or minus sign in front (+10, -20, etc)
      var fragments = offset.split(/(\+|\-)/).map(function (frag) {
        return frag.trim();
      });

      // Detect if the offset string contains a pair of values or a single one
      // they could be separated by comma or space
      var divider = fragments.indexOf(find(fragments, function (frag) {
        return frag.search(/,|\s/) !== -1;
      }));

      if (fragments[divider] && fragments[divider].indexOf(',') === -1) {
        console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');
      }

      // If divider is found, we divide the list of values and operands to divide
      // them by ofset X and Y.
      var splitRegex = /\s*,\s*|\s+/;
      var ops = divider !== -1 ? [fragments.slice(0, divider).concat([fragments[divider].split(splitRegex)[0]]), [fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider + 1))] : [fragments];

      // Convert the values with units to absolute pixels to allow our computations
      ops = ops.map(function (op, index) {
        // Most of the units rely on the orientation of the popper
        var measurement = (index === 1 ? !useHeight : useHeight) ? 'height' : 'width';
        var mergeWithPrevious = false;
        return op
        // This aggregates any `+` or `-` sign that aren't considered operators
        // e.g.: 10 + +5 => [10, +, +5]
        .reduce(function (a, b) {
          if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {
            a[a.length - 1] = b;
            mergeWithPrevious = true;
            return a;
          } else if (mergeWithPrevious) {
            a[a.length - 1] += b;
            mergeWithPrevious = false;
            return a;
          } else {
            return a.concat(b);
          }
        }, [])
        // Here we convert the string values into number values (in px)
        .map(function (str) {
          return toValue(str, measurement, popperOffsets, referenceOffsets);
        });
      });

      // Loop trough the offsets arrays and execute the operations
      ops.forEach(function (op, index) {
        op.forEach(function (frag, index2) {
          if (isNumeric(frag)) {
            offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);
          }
        });
      });
      return offsets;
    }

    /**
     * @function
     * @memberof Modifiers
     * @argument {Object} data - The data object generated by update method
     * @argument {Object} options - Modifiers configuration and options
     * @argument {Number|String} options.offset=0
     * The offset value as described in the modifier description
     * @returns {Object} The data object, properly modified
     */
    function offset(data, _ref) {
      var offset = _ref.offset;
      var placement = data.placement,
          _data$offsets = data.offsets,
          popper = _data$offsets.popper,
          reference = _data$offsets.reference;

      var basePlacement = placement.split('-')[0];

      var offsets = void 0;
      if (isNumeric(+offset)) {
        offsets = [+offset, 0];
      } else {
        offsets = parseOffset(offset, popper, reference, basePlacement);
      }

      if (basePlacement === 'left') {
        popper.top += offsets[0];
        popper.left -= offsets[1];
      } else if (basePlacement === 'right') {
        popper.top += offsets[0];
        popper.left += offsets[1];
      } else if (basePlacement === 'top') {
        popper.left += offsets[0];
        popper.top -= offsets[1];
      } else if (basePlacement === 'bottom') {
        popper.left += offsets[0];
        popper.top += offsets[1];
      }

      data.popper = popper;
      return data;
    }

    /**
     * @function
     * @memberof Modifiers
     * @argument {Object} data - The data object generated by `update` method
     * @argument {Object} options - Modifiers configuration and options
     * @returns {Object} The data object, properly modified
     */
    function preventOverflow(data, options) {
      var boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper);

      // If offsetParent is the reference element, we really want to
      // go one step up and use the next offsetParent as reference to
      // avoid to make this modifier completely useless and look like broken
      if (data.instance.reference === boundariesElement) {
        boundariesElement = getOffsetParent(boundariesElement);
      }

      // NOTE: DOM access here
      // resets the popper's position so that the document size can be calculated excluding
      // the size of the popper element itself
      var transformProp = getSupportedPropertyName('transform');
      var popperStyles = data.instance.popper.style; // assignment to help minification
      var top = popperStyles.top,
          left = popperStyles.left,
          transform = popperStyles[transformProp];

      popperStyles.top = '';
      popperStyles.left = '';
      popperStyles[transformProp] = '';

      var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement, data.positionFixed);

      // NOTE: DOM access here
      // restores the original style properties after the offsets have been computed
      popperStyles.top = top;
      popperStyles.left = left;
      popperStyles[transformProp] = transform;

      options.boundaries = boundaries;

      var order = options.priority;
      var popper = data.offsets.popper;

      var check = {
        primary: function primary(placement) {
          var value = popper[placement];
          if (popper[placement] < boundaries[placement] && !options.escapeWithReference) {
            value = Math.max(popper[placement], boundaries[placement]);
          }
          return defineProperty({}, placement, value);
        },
        secondary: function secondary(placement) {
          var mainSide = placement === 'right' ? 'left' : 'top';
          var value = popper[mainSide];
          if (popper[placement] > boundaries[placement] && !options.escapeWithReference) {
            value = Math.min(popper[mainSide], boundaries[placement] - (placement === 'right' ? popper.width : popper.height));
          }
          return defineProperty({}, mainSide, value);
        }
      };

      order.forEach(function (placement) {
        var side = ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';
        popper = _extends({}, popper, check[side](placement));
      });

      data.offsets.popper = popper;

      return data;
    }

    /**
     * @function
     * @memberof Modifiers
     * @argument {Object} data - The data object generated by `update` method
     * @argument {Object} options - Modifiers configuration and options
     * @returns {Object} The data object, properly modified
     */
    function shift(data) {
      var placement = data.placement;
      var basePlacement = placement.split('-')[0];
      var shiftvariation = placement.split('-')[1];

      // if shift shiftvariation is specified, run the modifier
      if (shiftvariation) {
        var _data$offsets = data.offsets,
            reference = _data$offsets.reference,
            popper = _data$offsets.popper;

        var isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;
        var side = isVertical ? 'left' : 'top';
        var measurement = isVertical ? 'width' : 'height';

        var shiftOffsets = {
          start: defineProperty({}, side, reference[side]),
          end: defineProperty({}, side, reference[side] + reference[measurement] - popper[measurement])
        };

        data.offsets.popper = _extends({}, popper, shiftOffsets[shiftvariation]);
      }

      return data;
    }

    /**
     * @function
     * @memberof Modifiers
     * @argument {Object} data - The data object generated by update method
     * @argument {Object} options - Modifiers configuration and options
     * @returns {Object} The data object, properly modified
     */
    function hide(data) {
      if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {
        return data;
      }

      var refRect = data.offsets.reference;
      var bound = find(data.instance.modifiers, function (modifier) {
        return modifier.name === 'preventOverflow';
      }).boundaries;

      if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {
        // Avoid unnecessary DOM access if visibility hasn't changed
        if (data.hide === true) {
          return data;
        }

        data.hide = true;
        data.attributes['x-out-of-boundaries'] = '';
      } else {
        // Avoid unnecessary DOM access if visibility hasn't changed
        if (data.hide === false) {
          return data;
        }

        data.hide = false;
        data.attributes['x-out-of-boundaries'] = false;
      }

      return data;
    }

    /**
     * @function
     * @memberof Modifiers
     * @argument {Object} data - The data object generated by `update` method
     * @argument {Object} options - Modifiers configuration and options
     * @returns {Object} The data object, properly modified
     */
    function inner(data) {
      var placement = data.placement;
      var basePlacement = placement.split('-')[0];
      var _data$offsets = data.offsets,
          popper = _data$offsets.popper,
          reference = _data$offsets.reference;

      var isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;

      var subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;

      popper[isHoriz ? 'left' : 'top'] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);

      data.placement = getOppositePlacement(placement);
      data.offsets.popper = getClientRect(popper);

      return data;
    }

    /**
     * Modifier function, each modifier can have a function of this type assigned
     * to its `fn` property.<br />
     * These functions will be called on each update, this means that you must
     * make sure they are performant enough to avoid performance bottlenecks.
     *
     * @function ModifierFn
     * @argument {dataObject} data - The data object generated by `update` method
     * @argument {Object} options - Modifiers configuration and options
     * @returns {dataObject} The data object, properly modified
     */

    /**
     * Modifiers are plugins used to alter the behavior of your poppers.<br />
     * Popper.js uses a set of 9 modifiers to provide all the basic functionalities
     * needed by the library.
     *
     * Usually you don't want to override the `order`, `fn` and `onLoad` props.
     * All the other properties are configurations that could be tweaked.
     * @namespace modifiers
     */
    var modifiers = {
      /**
       * Modifier used to shift the popper on the start or end of its reference
       * element.<br />
       * It will read the variation of the `placement` property.<br />
       * It can be one either `-end` or `-start`.
       * @memberof modifiers
       * @inner
       */
      shift: {
        /** @prop {number} order=100 - Index used to define the order of execution */
        order: 100,
        /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
        enabled: true,
        /** @prop {ModifierFn} */
        fn: shift
      },

      /**
       * The `offset` modifier can shift your popper on both its axis.
       *
       * It accepts the following units:
       * - `px` or unit-less, interpreted as pixels
       * - `%` or `%r`, percentage relative to the length of the reference element
       * - `%p`, percentage relative to the length of the popper element
       * - `vw`, CSS viewport width unit
       * - `vh`, CSS viewport height unit
       *
       * For length is intended the main axis relative to the placement of the popper.<br />
       * This means that if the placement is `top` or `bottom`, the length will be the
       * `width`. In case of `left` or `right`, it will be the `height`.
       *
       * You can provide a single value (as `Number` or `String`), or a pair of values
       * as `String` divided by a comma or one (or more) white spaces.<br />
       * The latter is a deprecated method because it leads to confusion and will be
       * removed in v2.<br />
       * Additionally, it accepts additions and subtractions between different units.
       * Note that multiplications and divisions aren't supported.
       *
       * Valid examples are:
       * ```
       * 10
       * '10%'
       * '10, 10'
       * '10%, 10'
       * '10 + 10%'
       * '10 - 5vh + 3%'
       * '-10px + 5vh, 5px - 6%'
       * ```
       * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap
       * > with their reference element, unfortunately, you will have to disable the `flip` modifier.
       * > You can read more on this at this [issue](https://github.com/FezVrasta/popper.js/issues/373).
       *
       * @memberof modifiers
       * @inner
       */
      offset: {
        /** @prop {number} order=200 - Index used to define the order of execution */
        order: 200,
        /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
        enabled: true,
        /** @prop {ModifierFn} */
        fn: offset,
        /** @prop {Number|String} offset=0
         * The offset value as described in the modifier description
         */
        offset: 0
      },

      /**
       * Modifier used to prevent the popper from being positioned outside the boundary.
       *
       * A scenario exists where the reference itself is not within the boundaries.<br />
       * We can say it has "escaped the boundaries" — or just "escaped".<br />
       * In this case we need to decide whether the popper should either:
       *
       * - detach from the reference and remain "trapped" in the boundaries, or
       * - if it should ignore the boundary and "escape with its reference"
       *
       * When `escapeWithReference` is set to`true` and reference is completely
       * outside its boundaries, the popper will overflow (or completely leave)
       * the boundaries in order to remain attached to the edge of the reference.
       *
       * @memberof modifiers
       * @inner
       */
      preventOverflow: {
        /** @prop {number} order=300 - Index used to define the order of execution */
        order: 300,
        /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
        enabled: true,
        /** @prop {ModifierFn} */
        fn: preventOverflow,
        /**
         * @prop {Array} [priority=['left','right','top','bottom']]
         * Popper will try to prevent overflow following these priorities by default,
         * then, it could overflow on the left and on top of the `boundariesElement`
         */
        priority: ['left', 'right', 'top', 'bottom'],
        /**
         * @prop {number} padding=5
         * Amount of pixel used to define a minimum distance between the boundaries
         * and the popper. This makes sure the popper always has a little padding
         * between the edges of its container
         */
        padding: 5,
        /**
         * @prop {String|HTMLElement} boundariesElement='scrollParent'
         * Boundaries used by the modifier. Can be `scrollParent`, `window`,
         * `viewport` or any DOM element.
         */
        boundariesElement: 'scrollParent'
      },

      /**
       * Modifier used to make sure the reference and its popper stay near each other
       * without leaving any gap between the two. Especially useful when the arrow is
       * enabled and you want to ensure that it points to its reference element.
       * It cares only about the first axis. You can still have poppers with margin
       * between the popper and its reference element.
       * @memberof modifiers
       * @inner
       */
      keepTogether: {
        /** @prop {number} order=400 - Index used to define the order of execution */
        order: 400,
        /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
        enabled: true,
        /** @prop {ModifierFn} */
        fn: keepTogether
      },

      /**
       * This modifier is used to move the `arrowElement` of the popper to make
       * sure it is positioned between the reference element and its popper element.
       * It will read the outer size of the `arrowElement` node to detect how many
       * pixels of conjunction are needed.
       *
       * It has no effect if no `arrowElement` is provided.
       * @memberof modifiers
       * @inner
       */
      arrow: {
        /** @prop {number} order=500 - Index used to define the order of execution */
        order: 500,
        /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
        enabled: true,
        /** @prop {ModifierFn} */
        fn: arrow,
        /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */
        element: '[x-arrow]'
      },

      /**
       * Modifier used to flip the popper's placement when it starts to overlap its
       * reference element.
       *
       * Requires the `preventOverflow` modifier before it in order to work.
       *
       * **NOTE:** this modifier will interrupt the current update cycle and will
       * restart it if it detects the need to flip the placement.
       * @memberof modifiers
       * @inner
       */
      flip: {
        /** @prop {number} order=600 - Index used to define the order of execution */
        order: 600,
        /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
        enabled: true,
        /** @prop {ModifierFn} */
        fn: flip,
        /**
         * @prop {String|Array} behavior='flip'
         * The behavior used to change the popper's placement. It can be one of
         * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid
         * placements (with optional variations)
         */
        behavior: 'flip',
        /**
         * @prop {number} padding=5
         * The popper will flip if it hits the edges of the `boundariesElement`
         */
        padding: 5,
        /**
         * @prop {String|HTMLElement} boundariesElement='viewport'
         * The element which will define the boundaries of the popper position.
         * The popper will never be placed outside of the defined boundaries
         * (except if `keepTogether` is enabled)
         */
        boundariesElement: 'viewport'
      },

      /**
       * Modifier used to make the popper flow toward the inner of the reference element.
       * By default, when this modifier is disabled, the popper will be placed outside
       * the reference element.
       * @memberof modifiers
       * @inner
       */
      inner: {
        /** @prop {number} order=700 - Index used to define the order of execution */
        order: 700,
        /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */
        enabled: false,
        /** @prop {ModifierFn} */
        fn: inner
      },

      /**
       * Modifier used to hide the popper when its reference element is outside of the
       * popper boundaries. It will set a `x-out-of-boundaries` attribute which can
       * be used to hide with a CSS selector the popper when its reference is
       * out of boundaries.
       *
       * Requires the `preventOverflow` modifier before it in order to work.
       * @memberof modifiers
       * @inner
       */
      hide: {
        /** @prop {number} order=800 - Index used to define the order of execution */
        order: 800,
        /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
        enabled: true,
        /** @prop {ModifierFn} */
        fn: hide
      },

      /**
       * Computes the style that will be applied to the popper element to gets
       * properly positioned.
       *
       * Note that this modifier will not touch the DOM, it just prepares the styles
       * so that `applyStyle` modifier can apply it. This separation is useful
       * in case you need to replace `applyStyle` with a custom implementation.
       *
       * This modifier has `850` as `order` value to maintain backward compatibility
       * with previous versions of Popper.js. Expect the modifiers ordering method
       * to change in future major versions of the library.
       *
       * @memberof modifiers
       * @inner
       */
      computeStyle: {
        /** @prop {number} order=850 - Index used to define the order of execution */
        order: 850,
        /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
        enabled: true,
        /** @prop {ModifierFn} */
        fn: computeStyle,
        /**
         * @prop {Boolean} gpuAcceleration=true
         * If true, it uses the CSS 3D transformation to position the popper.
         * Otherwise, it will use the `top` and `left` properties
         */
        gpuAcceleration: true,
        /**
         * @prop {string} [x='bottom']
         * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.
         * Change this if your popper should grow in a direction different from `bottom`
         */
        x: 'bottom',
        /**
         * @prop {string} [x='left']
         * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.
         * Change this if your popper should grow in a direction different from `right`
         */
        y: 'right'
      },

      /**
       * Applies the computed styles to the popper element.
       *
       * All the DOM manipulations are limited to this modifier. This is useful in case
       * you want to integrate Popper.js inside a framework or view library and you
       * want to delegate all the DOM manipulations to it.
       *
       * Note that if you disable this modifier, you must make sure the popper element
       * has its position set to `absolute` before Popper.js can do its work!
       *
       * Just disable this modifier and define your own to achieve the desired effect.
       *
       * @memberof modifiers
       * @inner
       */
      applyStyle: {
        /** @prop {number} order=900 - Index used to define the order of execution */
        order: 900,
        /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
        enabled: true,
        /** @prop {ModifierFn} */
        fn: applyStyle,
        /** @prop {Function} */
        onLoad: applyStyleOnLoad,
        /**
         * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier
         * @prop {Boolean} gpuAcceleration=true
         * If true, it uses the CSS 3D transformation to position the popper.
         * Otherwise, it will use the `top` and `left` properties
         */
        gpuAcceleration: undefined
      }
    };

    /**
     * The `dataObject` is an object containing all the information used by Popper.js.
     * This object is passed to modifiers and to the `onCreate` and `onUpdate` callbacks.
     * @name dataObject
     * @property {Object} data.instance The Popper.js instance
     * @property {String} data.placement Placement applied to popper
     * @property {String} data.originalPlacement Placement originally defined on init
     * @property {Boolean} data.flipped True if popper has been flipped by flip modifier
     * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper
     * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier
     * @property {Object} data.styles Any CSS property defined here will be applied to the popper. It expects the JavaScript nomenclature (eg. `marginBottom`)
     * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow. It expects the JavaScript nomenclature (eg. `marginBottom`)
     * @property {Object} data.boundaries Offsets of the popper boundaries
     * @property {Object} data.offsets The measurements of popper, reference and arrow elements
     * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values
     * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values
     * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0
     */

    /**
     * Default options provided to Popper.js constructor.<br />
     * These can be overridden using the `options` argument of Popper.js.<br />
     * To override an option, simply pass an object with the same
     * structure of the `options` object, as the 3rd argument. For example:
     * ```
     * new Popper(ref, pop, {
     *   modifiers: {
     *     preventOverflow: { enabled: false }
     *   }
     * })
     * ```
     * @type {Object}
     * @static
     * @memberof Popper
     */
    var Defaults = {
      /**
       * Popper's placement.
       * @prop {Popper.placements} placement='bottom'
       */
      placement: 'bottom',

      /**
       * Set this to true if you want popper to position it self in 'fixed' mode
       * @prop {Boolean} positionFixed=false
       */
      positionFixed: false,

      /**
       * Whether events (resize, scroll) are initially enabled.
       * @prop {Boolean} eventsEnabled=true
       */
      eventsEnabled: true,

      /**
       * Set to true if you want to automatically remove the popper when
       * you call the `destroy` method.
       * @prop {Boolean} removeOnDestroy=false
       */
      removeOnDestroy: false,

      /**
       * Callback called when the popper is created.<br />
       * By default, it is set to no-op.<br />
       * Access Popper.js instance with `data.instance`.
       * @prop {onCreate}
       */
      onCreate: function onCreate() {},

      /**
       * Callback called when the popper is updated. This callback is not called
       * on the initialization/creation of the popper, but only on subsequent
       * updates.<br />
       * By default, it is set to no-op.<br />
       * Access Popper.js instance with `data.instance`.
       * @prop {onUpdate}
       */
      onUpdate: function onUpdate() {},

      /**
       * List of modifiers used to modify the offsets before they are applied to the popper.
       * They provide most of the functionalities of Popper.js.
       * @prop {modifiers}
       */
      modifiers: modifiers
    };

    /**
     * @callback onCreate
     * @param {dataObject} data
     */

    /**
     * @callback onUpdate
     * @param {dataObject} data
     */

    // Utils
    // Methods
    var Popper = function () {
      /**
       * Creates a new Popper.js instance.
       * @class Popper
       * @param {HTMLElement|referenceObject} reference - The reference element used to position the popper
       * @param {HTMLElement} popper - The HTML element used as the popper
       * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)
       * @return {Object} instance - The generated Popper.js instance
       */
      function Popper(reference, popper) {
        var _this = this;

        var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
        classCallCheck(this, Popper);

        this.scheduleUpdate = function () {
          return requestAnimationFrame(_this.update);
        };

        // make update() debounced, so that it only runs at most once-per-tick
        this.update = debounce(this.update.bind(this));

        // with {} we create a new object with the options inside it
        this.options = _extends({}, Popper.Defaults, options);

        // init state
        this.state = {
          isDestroyed: false,
          isCreated: false,
          scrollParents: []
        };

        // get reference and popper elements (allow jQuery wrappers)
        this.reference = reference && reference.jquery ? reference[0] : reference;
        this.popper = popper && popper.jquery ? popper[0] : popper;

        // Deep merge modifiers options
        this.options.modifiers = {};
        Object.keys(_extends({}, Popper.Defaults.modifiers, options.modifiers)).forEach(function (name) {
          _this.options.modifiers[name] = _extends({}, Popper.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {});
        });

        // Refactoring modifiers' list (Object => Array)
        this.modifiers = Object.keys(this.options.modifiers).map(function (name) {
          return _extends({
            name: name
          }, _this.options.modifiers[name]);
        })
        // sort the modifiers by order
        .sort(function (a, b) {
          return a.order - b.order;
        });

        // modifiers have the ability to execute arbitrary code when Popper.js get inited
        // such code is executed in the same order of its modifier
        // they could add new properties to their options configuration
        // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!
        this.modifiers.forEach(function (modifierOptions) {
          if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {
            modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);
          }
        });

        // fire the first update to position the popper in the right place
        this.update();

        var eventsEnabled = this.options.eventsEnabled;
        if (eventsEnabled) {
          // setup event listeners, they will take care of update the position in specific situations
          this.enableEventListeners();
        }

        this.state.eventsEnabled = eventsEnabled;
      }

      // We can't use class properties because they don't get listed in the
      // class prototype and break stuff like Sinon stubs


      createClass(Popper, [{
        key: 'update',
        value: function update$$1() {
          return update.call(this);
        }
      }, {
        key: 'destroy',
        value: function destroy$$1() {
          return destroy.call(this);
        }
      }, {
        key: 'enableEventListeners',
        value: function enableEventListeners$$1() {
          return enableEventListeners.call(this);
        }
      }, {
        key: 'disableEventListeners',
        value: function disableEventListeners$$1() {
          return disableEventListeners.call(this);
        }

        /**
         * Schedules an update. It will run on the next UI update available.
         * @method scheduleUpdate
         * @memberof Popper
         */

        /**
         * Collection of utilities useful when writing custom modifiers.
         * Starting from version 1.7, this method is available only if you
         * include `popper-utils.js` before `popper.js`.
         *
         * **DEPRECATION**: This way to access PopperUtils is deprecated
         * and will be removed in v2! Use the PopperUtils module directly instead.
         * Due to the high instability of the methods contained in Utils, we can't
         * guarantee them to follow semver. Use them at your own risk!
         * @static
         * @private
         * @type {Object}
         * @deprecated since version 1.8
         * @member Utils
         * @memberof Popper
         */

      }]);
      return Popper;
    }();

    /**
     * The `referenceObject` is an object that provides an interface compatible with Popper.js
     * and lets you use it as replacement of a real DOM node.<br />
     * You can use this method to position a popper relatively to a set of coordinates
     * in case you don't have a DOM node to use as reference.
     *
     * ```
     * new Popper(referenceObject, popperNode);
     * ```
     *
     * NB: This feature isn't supported in Internet Explorer 10.
     * @name referenceObject
     * @property {Function} data.getBoundingClientRect
     * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.
     * @property {number} data.clientWidth
     * An ES6 getter that will return the width of the virtual reference element.
     * @property {number} data.clientHeight
     * An ES6 getter that will return the height of the virtual reference element.
     */

    Popper.Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;
    Popper.placements = placements;
    Popper.Defaults = Defaults;

    return Popper;
  });
  
});
System.registerDynamic("npm:popper.js@1.14.6.js", ["npm:popper.js@1.14.6/dist/umd/popper.js"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("npm:popper.js@1.14.6/dist/umd/popper.js");
});
System.registerDynamic('npm:react-popper@1.3.2/lib/cjs/Popper.js', ['npm:@babel/runtime@7.2.0/helpers/interopRequireWildcard.js', 'npm:@babel/runtime@7.2.0/helpers/interopRequireDefault.js', 'npm:@babel/runtime@7.2.0/helpers/objectWithoutPropertiesLoose.js', 'npm:@babel/runtime@7.2.0/helpers/extends.js', 'npm:@babel/runtime@7.2.0/helpers/inheritsLoose.js', 'npm:@babel/runtime@7.2.0/helpers/assertThisInitialized.js', 'npm:@babel/runtime@7.2.0/helpers/defineProperty.js', 'npm:react@16.7.0.js', 'npm:popper.js@1.14.6.js', 'npm:react-popper@1.3.2/lib/cjs/Manager.js', 'npm:react-popper@1.3.2/lib/cjs/utils.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  var _interopRequireWildcard = $__require('npm:@babel/runtime@7.2.0/helpers/interopRequireWildcard.js');
  var _interopRequireDefault = $__require('npm:@babel/runtime@7.2.0/helpers/interopRequireDefault.js');
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.default = Popper;
  exports.placements = exports.InnerPopper = void 0;
  var _objectWithoutPropertiesLoose2 = _interopRequireDefault($__require('npm:@babel/runtime@7.2.0/helpers/objectWithoutPropertiesLoose.js'));
  var _extends2 = _interopRequireDefault($__require('npm:@babel/runtime@7.2.0/helpers/extends.js'));
  var _inheritsLoose2 = _interopRequireDefault($__require('npm:@babel/runtime@7.2.0/helpers/inheritsLoose.js'));
  var _assertThisInitialized2 = _interopRequireDefault($__require('npm:@babel/runtime@7.2.0/helpers/assertThisInitialized.js'));
  var _defineProperty2 = _interopRequireDefault($__require('npm:@babel/runtime@7.2.0/helpers/defineProperty.js'));
  var React = _interopRequireWildcard($__require('npm:react@16.7.0.js'));
  var _popper = _interopRequireDefault($__require('npm:popper.js@1.14.6.js'));
  var _Manager = $__require('npm:react-popper@1.3.2/lib/cjs/Manager.js');
  var _utils = $__require('npm:react-popper@1.3.2/lib/cjs/utils.js');
  var initialStyle = {
    position: 'absolute',
    top: 0,
    left: 0,
    opacity: 0,
    pointerEvents: 'none'
  };
  var initialArrowStyle = {};
  var InnerPopper = function (_React$Component) {
    (0, _inheritsLoose2.default)(InnerPopper, _React$Component);
    function InnerPopper() {
      var _this;
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "state", {
        data: undefined,
        placement: undefined
      });
      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "popperInstance", void 0);
      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "popperNode", null);
      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "arrowNode", null);
      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "setPopperNode", function (popperNode) {
        if (!popperNode || _this.popperNode === popperNode) return;
        (0, _utils.safeInvoke)(_this.props.innerRef, popperNode);
        _this.popperNode = popperNode;
        _this.updatePopperInstance();
      });
      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "setArrowNode", function (arrowNode) {
        _this.arrowNode = arrowNode;
      });
      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "updateStateModifier", {
        enabled: true,
        order: 900,
        fn: function fn(data) {
          var placement = data.placement;
          _this.setState({
            data: data,
            placement: placement
          });
          return data;
        }
      });
      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "getOptions", function () {
        return {
          placement: _this.props.placement,
          eventsEnabled: _this.props.eventsEnabled,
          positionFixed: _this.props.positionFixed,
          modifiers: (0, _extends2.default)({}, _this.props.modifiers, {
            arrow: (0, _extends2.default)({}, _this.props.modifiers && _this.props.modifiers.arrow, {
              enabled: !!_this.arrowNode,
              element: _this.arrowNode
            }),
            applyStyle: { enabled: false },
            updateStateModifier: _this.updateStateModifier
          })
        };
      });
      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "getPopperStyle", function () {
        return !_this.popperNode || !_this.state.data ? initialStyle : (0, _extends2.default)({ position: _this.state.data.offsets.popper.position }, _this.state.data.styles);
      });
      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "getPopperPlacement", function () {
        return !_this.state.data ? undefined : _this.state.placement;
      });
      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "getArrowStyle", function () {
        return !_this.arrowNode || !_this.state.data ? initialArrowStyle : _this.state.data.arrowStyles;
      });
      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "getOutOfBoundariesState", function () {
        return _this.state.data ? _this.state.data.hide : undefined;
      });
      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "destroyPopperInstance", function () {
        if (!_this.popperInstance) return;
        _this.popperInstance.destroy();
        _this.popperInstance = null;
      });
      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "updatePopperInstance", function () {
        _this.destroyPopperInstance();
        var _assertThisInitialize = (0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)),
            popperNode = _assertThisInitialize.popperNode;
        var referenceElement = _this.props.referenceElement;
        if (!referenceElement || !popperNode) return;
        _this.popperInstance = new _popper.default(referenceElement, popperNode, _this.getOptions());
      });
      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "scheduleUpdate", function () {
        if (_this.popperInstance) {
          _this.popperInstance.scheduleUpdate();
        }
      });
      return _this;
    }
    var _proto = InnerPopper.prototype;
    _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {
      if (this.props.placement !== prevProps.placement || this.props.referenceElement !== prevProps.referenceElement || this.props.positionFixed !== prevProps.positionFixed) {
        this.updatePopperInstance();
      } else if (this.props.eventsEnabled !== prevProps.eventsEnabled && this.popperInstance) {
        this.props.eventsEnabled ? this.popperInstance.enableEventListeners() : this.popperInstance.disableEventListeners();
      }
      if (prevState.placement !== this.state.placement) {
        this.scheduleUpdate();
      }
    };
    _proto.componentWillUnmount = function componentWillUnmount() {
      (0, _utils.safeInvoke)(this.props.innerRef, null);
      this.destroyPopperInstance();
    };
    _proto.render = function render() {
      return (0, _utils.unwrapArray)(this.props.children)({
        ref: this.setPopperNode,
        style: this.getPopperStyle(),
        placement: this.getPopperPlacement(),
        outOfBoundaries: this.getOutOfBoundariesState(),
        scheduleUpdate: this.scheduleUpdate,
        arrowProps: {
          ref: this.setArrowNode,
          style: this.getArrowStyle()
        }
      });
    };
    return InnerPopper;
  }(React.Component);
  exports.InnerPopper = InnerPopper;
  (0, _defineProperty2.default)(InnerPopper, "defaultProps", {
    placement: 'bottom',
    eventsEnabled: true,
    referenceElement: undefined,
    positionFixed: false
  });
  var placements = _popper.default.placements;
  exports.placements = placements;
  function Popper(_ref) {
    var referenceElement = _ref.referenceElement,
        props = (0, _objectWithoutPropertiesLoose2.default)(_ref, ["referenceElement"]);
    return React.createElement(_Manager.ManagerContext.Consumer, null, function (_ref2) {
      var referenceNode = _ref2.referenceNode;
      return React.createElement(InnerPopper, (0, _extends2.default)({ referenceElement: referenceElement !== undefined ? referenceElement : referenceNode }, props));
    });
  }
});
System.registerDynamic('npm:warning@4.0.2/warning.js', ['github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var __DEV__ = 'production' !== 'production';
    var warning = function () {};
    if (__DEV__) {
      var printWarning = function printWarning(format, args) {
        var len = arguments.length;
        args = new Array(len > 2 ? len - 2 : 0);
        for (var key = 2; key < len; key++) {
          args[key - 2] = arguments[key];
        }
        var argIndex = 0;
        var message = 'Warning: ' + format.replace(/%s/g, function () {
          return args[argIndex++];
        });
        if (typeof console !== 'undefined') {
          console.error(message);
        }
        try {
          throw new Error(message);
        } catch (x) {}
      };
      warning = function (condition, format, args) {
        var len = arguments.length;
        args = new Array(len > 2 ? len - 2 : 0);
        for (var key = 2; key < len; key++) {
          args[key - 2] = arguments[key];
        }
        if (format === undefined) {
          throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
        }
        if (!condition) {
          printWarning.apply(null, [format].concat(args));
        }
      };
    }
    module.exports = warning;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic("npm:warning@4.0.2.js", ["npm:warning@4.0.2/warning.js"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("npm:warning@4.0.2/warning.js");
});
System.registerDynamic("npm:@babel/runtime@7.2.0/helpers/interopRequireWildcard.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};

      if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};

            if (desc.get || desc.set) {
              Object.defineProperty(newObj, key, desc);
            } else {
              newObj[key] = obj[key];
            }
          }
        }
      }

      newObj.default = obj;
      return newObj;
    }
  }

  module.exports = _interopRequireWildcard;
});
System.registerDynamic("npm:@babel/runtime@7.2.0/helpers/extends.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  function _extends() {
    module.exports = _extends = Object.assign || function (target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];

        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }

      return target;
    };

    return _extends.apply(this, arguments);
  }

  module.exports = _extends;
});
System.registerDynamic("npm:@babel/runtime@7.2.0/helpers/inheritsLoose.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  function _inheritsLoose(subClass, superClass) {
    subClass.prototype = Object.create(superClass.prototype);
    subClass.prototype.constructor = subClass;
    subClass.__proto__ = superClass;
  }

  module.exports = _inheritsLoose;
});
System.registerDynamic("npm:@babel/runtime@7.2.0/helpers/assertThisInitialized.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  function _assertThisInitialized(self) {
    if (self === void 0) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }

    return self;
  }

  module.exports = _assertThisInitialized;
});
System.registerDynamic("npm:@babel/runtime@7.2.0/helpers/defineProperty.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  function _defineProperty(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
      });
    } else {
      obj[key] = value;
    }

    return obj;
  }

  module.exports = _defineProperty;
});
System.registerDynamic('npm:gud@1.0.0/index.js', [], true, function ($__require, exports, module) {
  // @flow
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var key = '__global_unique_id__';

  module.exports = function () {
    return global[key] = (global[key] || 0) + 1;
  };
});
System.registerDynamic("npm:gud@1.0.0.js", ["npm:gud@1.0.0/index.js"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("npm:gud@1.0.0/index.js");
});
System.registerDynamic("npm:fbjs@0.8.17/lib/emptyFunction.js", [], true, function ($__require, exports, module) {
  /* */
  "use strict";

  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *
   * 
   */

  var global = this || self,
      GLOBAL = global;
  function makeEmptyFunction(arg) {
    return function () {
      return arg;
    };
  }

  /**
   * This function accepts and discards inputs; it has no side effects. This is
   * primarily useful idiomatically for overridable function endpoints which
   * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
   */
  var emptyFunction = function emptyFunction() {};

  emptyFunction.thatReturns = makeEmptyFunction;
  emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
  emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
  emptyFunction.thatReturnsNull = makeEmptyFunction(null);
  emptyFunction.thatReturnsThis = function () {
    return this;
  };
  emptyFunction.thatReturnsArgument = function (arg) {
    return arg;
  };

  module.exports = emptyFunction;
});
System.registerDynamic('npm:fbjs@0.8.17/lib/warning.js', ['npm:fbjs@0.8.17/lib/emptyFunction.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var emptyFunction = $__require('npm:fbjs@0.8.17/lib/emptyFunction.js');
    var warning = emptyFunction;
    if ('production' !== 'production') {
      var printWarning = function printWarning(format) {
        for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          args[_key - 1] = arguments[_key];
        }
        var argIndex = 0;
        var message = 'Warning: ' + format.replace(/%s/g, function () {
          return args[argIndex++];
        });
        if (typeof console !== 'undefined') {
          console.error(message);
        }
        try {
          throw new Error(message);
        } catch (x) {}
      };
      warning = function warning(condition, format) {
        if (format === undefined) {
          throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
        }
        if (format.indexOf('Failed Composite propType: ') === 0) {
          return;
        }
        if (!condition) {
          for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
            args[_key2 - 2] = arguments[_key2];
          }
          printWarning.apply(undefined, [format].concat(args));
        }
      };
    }
    module.exports = warning;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:create-react-context@0.2.2/lib/implementation.js', ['npm:react@16.7.0.js', 'npm:prop-types@15.6.2.js', 'npm:gud@1.0.0.js', 'npm:fbjs@0.8.17/lib/warning.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    exports.__esModule = true;
    var _react = $__require('npm:react@16.7.0.js');
    var _react2 = _interopRequireDefault(_react);
    var _propTypes = $__require('npm:prop-types@15.6.2.js');
    var _propTypes2 = _interopRequireDefault(_propTypes);
    var _gud = $__require('npm:gud@1.0.0.js');
    var _gud2 = _interopRequireDefault(_gud);
    var _warning = $__require('npm:fbjs@0.8.17/lib/warning.js');
    var _warning2 = _interopRequireDefault(_warning);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _possibleConstructorReturn(self, call) {
      if (!self) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return call && (typeof call === "object" || typeof call === "function") ? call : self;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: {
          value: subClass,
          enumerable: false,
          writable: true,
          configurable: true
        } });
      if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    var MAX_SIGNED_31_BIT_INT = 1073741823;
    function objectIs(x, y) {
      if (x === y) {
        return x !== 0 || 1 / x === 1 / y;
      } else {
        return x !== x && y !== y;
      }
    }
    function createEventEmitter(value) {
      var handlers = [];
      return {
        on: function on(handler) {
          handlers.push(handler);
        },
        off: function off(handler) {
          handlers = handlers.filter(function (h) {
            return h !== handler;
          });
        },
        get: function get() {
          return value;
        },
        set: function set(newValue, changedBits) {
          value = newValue;
          handlers.forEach(function (handler) {
            return handler(value, changedBits);
          });
        }
      };
    }
    function onlyChild(children) {
      return Array.isArray(children) ? children[0] : children;
    }
    function createReactContext(defaultValue, calculateChangedBits) {
      var _Provider$childContex, _Consumer$contextType;
      var contextProp = '__create-react-context-' + (0, _gud2.default)() + '__';
      var Provider = function (_Component) {
        _inherits(Provider, _Component);
        function Provider() {
          var _temp, _this, _ret;
          _classCallCheck(this, Provider);
          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          return _ret = (_temp = (_this = _possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.emitter = createEventEmitter(_this.props.value), _temp), _possibleConstructorReturn(_this, _ret);
        }
        Provider.prototype.getChildContext = function getChildContext() {
          var _ref;
          return _ref = {}, _ref[contextProp] = this.emitter, _ref;
        };
        Provider.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
          if (this.props.value !== nextProps.value) {
            var oldValue = this.props.value;
            var newValue = nextProps.value;
            var changedBits = void 0;
            if (objectIs(oldValue, newValue)) {
              changedBits = 0;
            } else {
              changedBits = typeof calculateChangedBits === 'function' ? calculateChangedBits(oldValue, newValue) : MAX_SIGNED_31_BIT_INT;
              if ('production' !== 'production') {
                (0, _warning2.default)((changedBits & MAX_SIGNED_31_BIT_INT) === changedBits, 'calculateChangedBits: Expected the return value to be a ' + '31-bit integer. Instead received: %s', changedBits);
              }
              changedBits |= 0;
              if (changedBits !== 0) {
                this.emitter.set(nextProps.value, changedBits);
              }
            }
          }
        };
        Provider.prototype.render = function render() {
          return this.props.children;
        };
        return Provider;
      }(_react.Component);
      Provider.childContextTypes = (_Provider$childContex = {}, _Provider$childContex[contextProp] = _propTypes2.default.object.isRequired, _Provider$childContex);
      var Consumer = function (_Component2) {
        _inherits(Consumer, _Component2);
        function Consumer() {
          var _temp2, _this2, _ret2;
          _classCallCheck(this, Consumer);
          for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
            args[_key2] = arguments[_key2];
          }
          return _ret2 = (_temp2 = (_this2 = _possibleConstructorReturn(this, _Component2.call.apply(_Component2, [this].concat(args))), _this2), _this2.state = { value: _this2.getValue() }, _this2.onUpdate = function (newValue, changedBits) {
            var observedBits = _this2.observedBits | 0;
            if ((observedBits & changedBits) !== 0) {
              _this2.setState({ value: _this2.getValue() });
            }
          }, _temp2), _possibleConstructorReturn(_this2, _ret2);
        }
        Consumer.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
          var observedBits = nextProps.observedBits;
          this.observedBits = observedBits === undefined || observedBits === null ? MAX_SIGNED_31_BIT_INT : observedBits;
        };
        Consumer.prototype.componentDidMount = function componentDidMount() {
          if (this.context[contextProp]) {
            this.context[contextProp].on(this.onUpdate);
          }
          var observedBits = this.props.observedBits;
          this.observedBits = observedBits === undefined || observedBits === null ? MAX_SIGNED_31_BIT_INT : observedBits;
        };
        Consumer.prototype.componentWillUnmount = function componentWillUnmount() {
          if (this.context[contextProp]) {
            this.context[contextProp].off(this.onUpdate);
          }
        };
        Consumer.prototype.getValue = function getValue() {
          if (this.context[contextProp]) {
            return this.context[contextProp].get();
          } else {
            return defaultValue;
          }
        };
        Consumer.prototype.render = function render() {
          return onlyChild(this.props.children)(this.state.value);
        };
        return Consumer;
      }(_react.Component);
      Consumer.contextTypes = (_Consumer$contextType = {}, _Consumer$contextType[contextProp] = _propTypes2.default.object, _Consumer$contextType);
      return {
        Provider: Provider,
        Consumer: Consumer
      };
    }
    exports.default = createReactContext;
    module.exports = exports['default'];
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:create-react-context@0.2.2/lib/index.js', ['npm:react@16.7.0.js', 'npm:create-react-context@0.2.2/lib/implementation.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _react = $__require('npm:react@16.7.0.js');
  var _react2 = _interopRequireDefault(_react);
  var _implementation = $__require('npm:create-react-context@0.2.2/lib/implementation.js');
  var _implementation2 = _interopRequireDefault(_implementation);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  exports.default = _react2.default.createContext || _implementation2.default;
  module.exports = exports['default'];
});
System.registerDynamic("npm:create-react-context@0.2.2.js", ["npm:create-react-context@0.2.2/lib/index.js"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("npm:create-react-context@0.2.2/lib/index.js");
});
System.registerDynamic("npm:react-popper@1.3.2/lib/cjs/Manager.js", ["npm:@babel/runtime@7.2.0/helpers/interopRequireWildcard.js", "npm:@babel/runtime@7.2.0/helpers/interopRequireDefault.js", "npm:@babel/runtime@7.2.0/helpers/extends.js", "npm:@babel/runtime@7.2.0/helpers/inheritsLoose.js", "npm:@babel/runtime@7.2.0/helpers/assertThisInitialized.js", "npm:@babel/runtime@7.2.0/helpers/defineProperty.js", "npm:react@16.7.0.js", "npm:create-react-context@0.2.2.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  var _interopRequireWildcard = $__require("npm:@babel/runtime@7.2.0/helpers/interopRequireWildcard.js");

  var _interopRequireDefault = $__require("npm:@babel/runtime@7.2.0/helpers/interopRequireDefault.js");

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = exports.ManagerContext = void 0;

  var _extends2 = _interopRequireDefault($__require("npm:@babel/runtime@7.2.0/helpers/extends.js"));

  var _inheritsLoose2 = _interopRequireDefault($__require("npm:@babel/runtime@7.2.0/helpers/inheritsLoose.js"));

  var _assertThisInitialized2 = _interopRequireDefault($__require("npm:@babel/runtime@7.2.0/helpers/assertThisInitialized.js"));

  var _defineProperty2 = _interopRequireDefault($__require("npm:@babel/runtime@7.2.0/helpers/defineProperty.js"));

  var React = _interopRequireWildcard($__require("npm:react@16.7.0.js"));

  var _createReactContext = _interopRequireDefault($__require("npm:create-react-context@0.2.2.js"));

  var ManagerContext = (0, _createReactContext.default)({
    getReferenceRef: undefined,
    referenceNode: undefined
  });
  exports.ManagerContext = ManagerContext;

  var Manager =
  /*#__PURE__*/
  function (_React$Component) {
    (0, _inheritsLoose2.default)(Manager, _React$Component);

    function Manager() {
      var _this;

      _this = _React$Component.call(this) || this;
      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "getReferenceRef", function (referenceNode) {
        return _this.setState(function (_ref) {
          var context = _ref.context;
          return {
            context: (0, _extends2.default)({}, context, {
              referenceNode: referenceNode
            })
          };
        });
      });
      _this.state = {
        context: {
          getReferenceRef: _this.getReferenceRef,
          referenceNode: undefined
        }
      };
      return _this;
    }

    var _proto = Manager.prototype;

    _proto.render = function render() {
      return React.createElement(ManagerContext.Provider, {
        value: this.state.context
      }, this.props.children);
    };

    return Manager;
  }(React.Component);

  exports.default = Manager;
});
System.registerDynamic("npm:react-popper@1.3.2/lib/cjs/utils.js", [], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.safeInvoke = exports.unwrapArray = void 0;

  /**
   * Takes an argument and if it's an array, returns the first item in the array,
   * otherwise returns the argument. Used for Preact compatibility.
   */
  var unwrapArray = function unwrapArray(arg) {
    return Array.isArray(arg) ? arg[0] : arg;
  };
  /**
   * Takes a maybe-undefined function and arbitrary args and invokes the function
   * only if it is defined.
   */

  exports.unwrapArray = unwrapArray;

  var safeInvoke = function safeInvoke(fn) {
    if (typeof fn === "function") {
      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }

      return fn.apply(void 0, args);
    }
  };

  exports.safeInvoke = safeInvoke;
});
System.registerDynamic('npm:react-popper@1.3.2/lib/cjs/Reference.js', ['npm:@babel/runtime@7.2.0/helpers/interopRequireWildcard.js', 'npm:@babel/runtime@7.2.0/helpers/interopRequireDefault.js', 'npm:@babel/runtime@7.2.0/helpers/extends.js', 'npm:@babel/runtime@7.2.0/helpers/inheritsLoose.js', 'npm:@babel/runtime@7.2.0/helpers/assertThisInitialized.js', 'npm:@babel/runtime@7.2.0/helpers/defineProperty.js', 'npm:react@16.7.0.js', 'npm:warning@4.0.2.js', 'npm:react-popper@1.3.2/lib/cjs/Manager.js', 'npm:react-popper@1.3.2/lib/cjs/utils.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  var _interopRequireWildcard = $__require('npm:@babel/runtime@7.2.0/helpers/interopRequireWildcard.js');
  var _interopRequireDefault = $__require('npm:@babel/runtime@7.2.0/helpers/interopRequireDefault.js');
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.default = Reference;
  var _extends2 = _interopRequireDefault($__require('npm:@babel/runtime@7.2.0/helpers/extends.js'));
  var _inheritsLoose2 = _interopRequireDefault($__require('npm:@babel/runtime@7.2.0/helpers/inheritsLoose.js'));
  var _assertThisInitialized2 = _interopRequireDefault($__require('npm:@babel/runtime@7.2.0/helpers/assertThisInitialized.js'));
  var _defineProperty2 = _interopRequireDefault($__require('npm:@babel/runtime@7.2.0/helpers/defineProperty.js'));
  var React = _interopRequireWildcard($__require('npm:react@16.7.0.js'));
  var _warning = _interopRequireDefault($__require('npm:warning@4.0.2.js'));
  var _Manager = $__require('npm:react-popper@1.3.2/lib/cjs/Manager.js');
  var _utils = $__require('npm:react-popper@1.3.2/lib/cjs/utils.js');
  var InnerReference = function (_React$Component) {
    (0, _inheritsLoose2.default)(InnerReference, _React$Component);
    function InnerReference() {
      var _this;
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "refHandler", function (node) {
        (0, _utils.safeInvoke)(_this.props.innerRef, node);
        (0, _utils.safeInvoke)(_this.props.getReferenceRef, node);
      });
      return _this;
    }
    var _proto = InnerReference.prototype;
    _proto.render = function render() {
      (0, _warning.default)(this.props.getReferenceRef, '`Reference` should not be used outside of a `Manager` component.');
      return (0, _utils.unwrapArray)(this.props.children)({ ref: this.refHandler });
    };
    return InnerReference;
  }(React.Component);
  function Reference(props) {
    return React.createElement(_Manager.ManagerContext.Consumer, null, function (_ref) {
      var getReferenceRef = _ref.getReferenceRef;
      return React.createElement(InnerReference, (0, _extends2.default)({ getReferenceRef: getReferenceRef }, props));
    });
  }
});
System.registerDynamic('npm:react-popper@1.3.2/lib/cjs/index.js', ['npm:@babel/runtime@7.2.0/helpers/interopRequireDefault.js', 'npm:@babel/runtime@7.2.0/helpers/interopRequireWildcard.js', 'npm:react-popper@1.3.2/lib/cjs/Popper.js', 'npm:react-popper@1.3.2/lib/cjs/Manager.js', 'npm:react-popper@1.3.2/lib/cjs/Reference.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  var _interopRequireDefault = $__require('npm:@babel/runtime@7.2.0/helpers/interopRequireDefault.js');
  var _interopRequireWildcard = $__require('npm:@babel/runtime@7.2.0/helpers/interopRequireWildcard.js');
  Object.defineProperty(exports, "__esModule", { value: true });
  Object.defineProperty(exports, "Popper", {
    enumerable: true,
    get: function get() {
      return _Popper.default;
    }
  });
  Object.defineProperty(exports, "placements", {
    enumerable: true,
    get: function get() {
      return _Popper.placements;
    }
  });
  Object.defineProperty(exports, "Manager", {
    enumerable: true,
    get: function get() {
      return _Manager.default;
    }
  });
  Object.defineProperty(exports, "Reference", {
    enumerable: true,
    get: function get() {
      return _Reference.default;
    }
  });
  var _Popper = _interopRequireWildcard($__require('npm:react-popper@1.3.2/lib/cjs/Popper.js'));
  var _Manager = _interopRequireDefault($__require('npm:react-popper@1.3.2/lib/cjs/Manager.js'));
  var _Reference = _interopRequireDefault($__require('npm:react-popper@1.3.2/lib/cjs/Reference.js'));
});
System.registerDynamic("npm:react-popper@1.3.2.js", ["npm:react-popper@1.3.2/lib/cjs/index.js"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("npm:react-popper@1.3.2/lib/cjs/index.js");
});
System.registerDynamic("npm:@babel/runtime@7.2.0/helpers/interopRequireDefault.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  module.exports = _interopRequireDefault;
});
System.registerDynamic("npm:dom-helpers@3.4.0/class/hasClass.js", [], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  exports.default = hasClass;

  function hasClass(element, className) {
    if (element.classList) return !!className && element.classList.contains(className);else return (" " + (element.className.baseVal || element.className) + " ").indexOf(" " + className + " ") !== -1;
  }

  module.exports = exports["default"];
});
System.registerDynamic('npm:dom-helpers@3.4.0/class/addClass.js', ['npm:@babel/runtime@7.2.0/helpers/interopRequireDefault.js', 'npm:dom-helpers@3.4.0/class/hasClass.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  var _interopRequireDefault = $__require('npm:@babel/runtime@7.2.0/helpers/interopRequireDefault.js');
  exports.__esModule = true;
  exports.default = addClass;
  var _hasClass = _interopRequireDefault($__require('npm:dom-helpers@3.4.0/class/hasClass.js'));
  function addClass(element, className) {
    if (element.classList) element.classList.add(className);else if (!(0, _hasClass.default)(element, className)) if (typeof element.className === 'string') element.className = element.className + ' ' + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + ' ' + className);
  }
  module.exports = exports["default"];
});
System.registerDynamic('npm:dom-helpers@3.4.0/class/removeClass.js', [], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  function replaceClassName(origClass, classToRemove) {
    return origClass.replace(new RegExp('(^|\\s)' + classToRemove + '(?:\\s|$)', 'g'), '$1').replace(/\s+/g, ' ').replace(/^\s*|\s*$/g, '');
  }

  module.exports = function removeClass(element, className) {
    if (element.classList) element.classList.remove(className);else if (typeof element.className === 'string') element.className = replaceClassName(element.className, className);else element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));
  };
});
System.registerDynamic('npm:react-transition-group@2.5.3/CSSTransition.js', ['npm:prop-types@15.6.2.js', 'npm:dom-helpers@3.4.0/class/addClass.js', 'npm:dom-helpers@3.4.0/class/removeClass.js', 'npm:react@16.7.0.js', 'npm:react-transition-group@2.5.3/Transition.js', 'npm:react-transition-group@2.5.3/utils/PropTypes.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    "use strict";

    exports.__esModule = true;
    exports.default = void 0;
    var PropTypes = _interopRequireWildcard($__require('npm:prop-types@15.6.2.js'));
    var _addClass = _interopRequireDefault($__require('npm:dom-helpers@3.4.0/class/addClass.js'));
    var _removeClass = _interopRequireDefault($__require('npm:dom-helpers@3.4.0/class/removeClass.js'));
    var _react = _interopRequireDefault($__require('npm:react@16.7.0.js'));
    var _Transition = _interopRequireDefault($__require('npm:react-transition-group@2.5.3/Transition.js'));
    var _PropTypes = $__require('npm:react-transition-group@2.5.3/utils/PropTypes.js');
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _interopRequireWildcard(obj) {
      if (obj && obj.__esModule) {
        return obj;
      } else {
        var newObj = {};
        if (obj != null) {
          for (var key in obj) {
            if (Object.prototype.hasOwnProperty.call(obj, key)) {
              var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};
              if (desc.get || desc.set) {
                Object.defineProperty(newObj, key, desc);
              } else {
                newObj[key] = obj[key];
              }
            }
          }
        }
        newObj.default = obj;
        return newObj;
      }
    }
    function _extends() {
      _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends.apply(this, arguments);
    }
    function _inheritsLoose(subClass, superClass) {
      subClass.prototype = Object.create(superClass.prototype);
      subClass.prototype.constructor = subClass;
      subClass.__proto__ = superClass;
    }
    var addClass = function addClass(node, classes) {
      return node && classes && classes.split(' ').forEach(function (c) {
        return (0, _addClass.default)(node, c);
      });
    };
    var removeClass = function removeClass(node, classes) {
      return node && classes && classes.split(' ').forEach(function (c) {
        return (0, _removeClass.default)(node, c);
      });
    };
    var CSSTransition = function (_React$Component) {
      _inheritsLoose(CSSTransition, _React$Component);
      function CSSTransition() {
        var _this;
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
        _this.onEnter = function (node, appearing) {
          var _this$getClassNames = _this.getClassNames(appearing ? 'appear' : 'enter'),
              className = _this$getClassNames.className;
          _this.removeClasses(node, 'exit');
          addClass(node, className);
          if (_this.props.onEnter) {
            _this.props.onEnter(node, appearing);
          }
        };
        _this.onEntering = function (node, appearing) {
          var _this$getClassNames2 = _this.getClassNames(appearing ? 'appear' : 'enter'),
              activeClassName = _this$getClassNames2.activeClassName;
          _this.reflowAndAddClass(node, activeClassName);
          if (_this.props.onEntering) {
            _this.props.onEntering(node, appearing);
          }
        };
        _this.onEntered = function (node, appearing) {
          var _this$getClassNames3 = _this.getClassNames('enter'),
              doneClassName = _this$getClassNames3.doneClassName;
          _this.removeClasses(node, appearing ? 'appear' : 'enter');
          addClass(node, doneClassName);
          if (_this.props.onEntered) {
            _this.props.onEntered(node, appearing);
          }
        };
        _this.onExit = function (node) {
          var _this$getClassNames4 = _this.getClassNames('exit'),
              className = _this$getClassNames4.className;
          _this.removeClasses(node, 'appear');
          _this.removeClasses(node, 'enter');
          addClass(node, className);
          if (_this.props.onExit) {
            _this.props.onExit(node);
          }
        };
        _this.onExiting = function (node) {
          var _this$getClassNames5 = _this.getClassNames('exit'),
              activeClassName = _this$getClassNames5.activeClassName;
          _this.reflowAndAddClass(node, activeClassName);
          if (_this.props.onExiting) {
            _this.props.onExiting(node);
          }
        };
        _this.onExited = function (node) {
          var _this$getClassNames6 = _this.getClassNames('exit'),
              doneClassName = _this$getClassNames6.doneClassName;
          _this.removeClasses(node, 'exit');
          addClass(node, doneClassName);
          if (_this.props.onExited) {
            _this.props.onExited(node);
          }
        };
        _this.getClassNames = function (type) {
          var classNames = _this.props.classNames;
          var className = typeof classNames !== 'string' ? classNames[type] : classNames + '-' + type;
          var activeClassName = typeof classNames !== 'string' ? classNames[type + 'Active'] : className + '-active';
          var doneClassName = typeof classNames !== 'string' ? classNames[type + 'Done'] : className + '-done';
          return {
            className: className,
            activeClassName: activeClassName,
            doneClassName: doneClassName
          };
        };
        return _this;
      }
      var _proto = CSSTransition.prototype;
      _proto.removeClasses = function removeClasses(node, type) {
        var _this$getClassNames7 = this.getClassNames(type),
            className = _this$getClassNames7.className,
            activeClassName = _this$getClassNames7.activeClassName,
            doneClassName = _this$getClassNames7.doneClassName;
        className && removeClass(node, className);
        activeClassName && removeClass(node, activeClassName);
        doneClassName && removeClass(node, doneClassName);
      };
      _proto.reflowAndAddClass = function reflowAndAddClass(node, className) {
        if (className) {
          node && node.scrollTop;
          addClass(node, className);
        }
      };
      _proto.render = function render() {
        var props = _extends({}, this.props);
        delete props.classNames;
        return _react.default.createElement(_Transition.default, _extends({}, props, {
          onEnter: this.onEnter,
          onEntered: this.onEntered,
          onEntering: this.onEntering,
          onExit: this.onExit,
          onExiting: this.onExiting,
          onExited: this.onExited
        }));
      };
      return CSSTransition;
    }(_react.default.Component);
    CSSTransition.propTypes = 'production' !== "production" ? _extends({}, _Transition.default.propTypes, {
      classNames: _PropTypes.classNamesShape,
      onEnter: PropTypes.func,
      onEntering: PropTypes.func,
      onEntered: PropTypes.func,
      onExit: PropTypes.func,
      onExiting: PropTypes.func,
      onExited: PropTypes.func
    }) : {};
    var _default = CSSTransition;
    exports.default = _default;
    module.exports = exports["default"];
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react-transition-group@2.5.3/ReplaceTransition.js', ['npm:prop-types@15.6.2.js', 'npm:react@16.7.0.js', 'npm:react-dom@16.7.0.js', 'npm:react-transition-group@2.5.3/TransitionGroup.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    "use strict";

    exports.__esModule = true;
    exports.default = void 0;
    var _propTypes = _interopRequireDefault($__require('npm:prop-types@15.6.2.js'));
    var _react = _interopRequireDefault($__require('npm:react@16.7.0.js'));
    var _reactDom = $__require('npm:react-dom@16.7.0.js');
    var _TransitionGroup = _interopRequireDefault($__require('npm:react-transition-group@2.5.3/TransitionGroup.js'));
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectWithoutPropertiesLoose(source, excluded) {
      if (source == null) return {};
      var target = {};
      var sourceKeys = Object.keys(source);
      var key, i;
      for (i = 0; i < sourceKeys.length; i++) {
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
      }
      return target;
    }
    function _inheritsLoose(subClass, superClass) {
      subClass.prototype = Object.create(superClass.prototype);
      subClass.prototype.constructor = subClass;
      subClass.__proto__ = superClass;
    }
    var ReplaceTransition = function (_React$Component) {
      _inheritsLoose(ReplaceTransition, _React$Component);
      function ReplaceTransition() {
        var _this;
        for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {
          _args[_key] = arguments[_key];
        }
        _this = _React$Component.call.apply(_React$Component, [this].concat(_args)) || this;
        _this.handleEnter = function () {
          for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
            args[_key2] = arguments[_key2];
          }
          return _this.handleLifecycle('onEnter', 0, args);
        };
        _this.handleEntering = function () {
          for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
            args[_key3] = arguments[_key3];
          }
          return _this.handleLifecycle('onEntering', 0, args);
        };
        _this.handleEntered = function () {
          for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
            args[_key4] = arguments[_key4];
          }
          return _this.handleLifecycle('onEntered', 0, args);
        };
        _this.handleExit = function () {
          for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
            args[_key5] = arguments[_key5];
          }
          return _this.handleLifecycle('onExit', 1, args);
        };
        _this.handleExiting = function () {
          for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
            args[_key6] = arguments[_key6];
          }
          return _this.handleLifecycle('onExiting', 1, args);
        };
        _this.handleExited = function () {
          for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {
            args[_key7] = arguments[_key7];
          }
          return _this.handleLifecycle('onExited', 1, args);
        };
        return _this;
      }
      var _proto = ReplaceTransition.prototype;
      _proto.handleLifecycle = function handleLifecycle(handler, idx, originalArgs) {
        var _child$props;
        var children = this.props.children;
        var child = _react.default.Children.toArray(children)[idx];
        if (child.props[handler]) (_child$props = child.props)[handler].apply(_child$props, originalArgs);
        if (this.props[handler]) this.props[handler]((0, _reactDom.findDOMNode)(this));
      };
      _proto.render = function render() {
        var _this$props = this.props,
            children = _this$props.children,
            inProp = _this$props.in,
            props = _objectWithoutPropertiesLoose(_this$props, ["children", "in"]);
        var _React$Children$toArr = _react.default.Children.toArray(children),
            first = _React$Children$toArr[0],
            second = _React$Children$toArr[1];
        delete props.onEnter;
        delete props.onEntering;
        delete props.onEntered;
        delete props.onExit;
        delete props.onExiting;
        delete props.onExited;
        return _react.default.createElement(_TransitionGroup.default, props, inProp ? _react.default.cloneElement(first, {
          key: 'first',
          onEnter: this.handleEnter,
          onEntering: this.handleEntering,
          onEntered: this.handleEntered
        }) : _react.default.cloneElement(second, {
          key: 'second',
          onEnter: this.handleExit,
          onEntering: this.handleExiting,
          onEntered: this.handleExited
        }));
      };
      return ReplaceTransition;
    }(_react.default.Component);
    ReplaceTransition.propTypes = 'production' !== "production" ? {
      in: _propTypes.default.bool.isRequired,
      children: function children(props, propName) {
        if (_react.default.Children.count(props[propName]) !== 2) return new Error("\"" + propName + "\" must be exactly two transition components.");
        return null;
      }
    } : {};
    var _default = ReplaceTransition;
    exports.default = _default;
    module.exports = exports["default"];
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic("npm:react-transition-group@2.5.3/utils/ChildMapping.js", ["npm:react@16.7.0.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  exports.getChildMapping = getChildMapping;
  exports.mergeChildMappings = mergeChildMappings;
  exports.getInitialChildMapping = getInitialChildMapping;
  exports.getNextChildMapping = getNextChildMapping;

  var _react = $__require("npm:react@16.7.0.js");

  /**
   * Given `this.props.children`, return an object mapping key to child.
   *
   * @param {*} children `this.props.children`
   * @return {object} Mapping of key to child
   */
  function getChildMapping(children, mapFn) {
    var mapper = function mapper(child) {
      return mapFn && (0, _react.isValidElement)(child) ? mapFn(child) : child;
    };

    var result = Object.create(null);
    if (children) _react.Children.map(children, function (c) {
      return c;
    }).forEach(function (child) {
      // run the map function here instead so that the key is the computed one
      result[child.key] = mapper(child);
    });
    return result;
  }
  /**
   * When you're adding or removing children some may be added or removed in the
   * same render pass. We want to show *both* since we want to simultaneously
   * animate elements in and out. This function takes a previous set of keys
   * and a new set of keys and merges them with its best guess of the correct
   * ordering. In the future we may expose some of the utilities in
   * ReactMultiChild to make this easy, but for now React itself does not
   * directly have this concept of the union of prevChildren and nextChildren
   * so we implement it here.
   *
   * @param {object} prev prev children as returned from
   * `ReactTransitionChildMapping.getChildMapping()`.
   * @param {object} next next children as returned from
   * `ReactTransitionChildMapping.getChildMapping()`.
   * @return {object} a key set that contains all keys in `prev` and all keys
   * in `next` in a reasonable order.
   */

  function mergeChildMappings(prev, next) {
    prev = prev || {};
    next = next || {};

    function getValueForKey(key) {
      return key in next ? next[key] : prev[key];
    } // For each key of `next`, the list of keys to insert before that key in
    // the combined list


    var nextKeysPending = Object.create(null);
    var pendingKeys = [];

    for (var prevKey in prev) {
      if (prevKey in next) {
        if (pendingKeys.length) {
          nextKeysPending[prevKey] = pendingKeys;
          pendingKeys = [];
        }
      } else {
        pendingKeys.push(prevKey);
      }
    }

    var i;
    var childMapping = {};

    for (var nextKey in next) {
      if (nextKeysPending[nextKey]) {
        for (i = 0; i < nextKeysPending[nextKey].length; i++) {
          var pendingNextKey = nextKeysPending[nextKey][i];
          childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);
        }
      }

      childMapping[nextKey] = getValueForKey(nextKey);
    } // Finally, add the keys which didn't appear before any key in `next`


    for (i = 0; i < pendingKeys.length; i++) {
      childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);
    }

    return childMapping;
  }

  function getProp(child, prop, props) {
    return props[prop] != null ? props[prop] : child.props[prop];
  }

  function getInitialChildMapping(props, onExited) {
    return getChildMapping(props.children, function (child) {
      return (0, _react.cloneElement)(child, {
        onExited: onExited.bind(null, child),
        in: true,
        appear: getProp(child, 'appear', props),
        enter: getProp(child, 'enter', props),
        exit: getProp(child, 'exit', props)
      });
    });
  }

  function getNextChildMapping(nextProps, prevChildMapping, onExited) {
    var nextChildMapping = getChildMapping(nextProps.children);
    var children = mergeChildMappings(prevChildMapping, nextChildMapping);
    Object.keys(children).forEach(function (key) {
      var child = children[key];
      if (!(0, _react.isValidElement)(child)) return;
      var hasPrev = key in prevChildMapping;
      var hasNext = key in nextChildMapping;
      var prevChild = prevChildMapping[key];
      var isLeaving = (0, _react.isValidElement)(prevChild) && !prevChild.props.in; // item is new (entering)

      if (hasNext && (!hasPrev || isLeaving)) {
        // console.log('entering', key)
        children[key] = (0, _react.cloneElement)(child, {
          onExited: onExited.bind(null, child),
          in: true,
          exit: getProp(child, 'exit', nextProps),
          enter: getProp(child, 'enter', nextProps)
        });
      } else if (!hasNext && hasPrev && !isLeaving) {
        // item is old (exiting)
        // console.log('leaving', key)
        children[key] = (0, _react.cloneElement)(child, {
          in: false
        });
      } else if (hasNext && hasPrev && (0, _react.isValidElement)(prevChild)) {
        // item hasn't changed transition states
        // copy over the last transition props;
        // console.log('unchanged', key)
        children[key] = (0, _react.cloneElement)(child, {
          onExited: onExited.bind(null, child),
          in: prevChild.props.in,
          exit: getProp(child, 'exit', nextProps),
          enter: getProp(child, 'enter', nextProps)
        });
      }
    });
    return children;
  }
});
System.registerDynamic('npm:react-transition-group@2.5.3/TransitionGroup.js', ['npm:prop-types@15.6.2.js', 'npm:react@16.7.0.js', 'npm:react-lifecycles-compat@3.0.4.js', 'npm:react-transition-group@2.5.3/utils/ChildMapping.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    "use strict";

    exports.__esModule = true;
    exports.default = void 0;
    var _propTypes = _interopRequireDefault($__require('npm:prop-types@15.6.2.js'));
    var _react = _interopRequireDefault($__require('npm:react@16.7.0.js'));
    var _reactLifecyclesCompat = $__require('npm:react-lifecycles-compat@3.0.4.js');
    var _ChildMapping = $__require('npm:react-transition-group@2.5.3/utils/ChildMapping.js');
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectWithoutPropertiesLoose(source, excluded) {
      if (source == null) return {};
      var target = {};
      var sourceKeys = Object.keys(source);
      var key, i;
      for (i = 0; i < sourceKeys.length; i++) {
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
      }
      return target;
    }
    function _extends() {
      _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends.apply(this, arguments);
    }
    function _inheritsLoose(subClass, superClass) {
      subClass.prototype = Object.create(superClass.prototype);
      subClass.prototype.constructor = subClass;
      subClass.__proto__ = superClass;
    }
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    var values = Object.values || function (obj) {
      return Object.keys(obj).map(function (k) {
        return obj[k];
      });
    };
    var defaultProps = {
      component: 'div',
      childFactory: function childFactory(child) {
        return child;
      }
    };
    var TransitionGroup = function (_React$Component) {
      _inheritsLoose(TransitionGroup, _React$Component);
      function TransitionGroup(props, context) {
        var _this;
        _this = _React$Component.call(this, props, context) || this;
        var handleExited = _this.handleExited.bind(_assertThisInitialized(_assertThisInitialized(_this)));
        _this.state = {
          handleExited: handleExited,
          firstRender: true
        };
        return _this;
      }
      var _proto = TransitionGroup.prototype;
      _proto.getChildContext = function getChildContext() {
        return { transitionGroup: { isMounting: !this.appeared } };
      };
      _proto.componentDidMount = function componentDidMount() {
        this.appeared = true;
        this.mounted = true;
      };
      _proto.componentWillUnmount = function componentWillUnmount() {
        this.mounted = false;
      };
      TransitionGroup.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {
        var prevChildMapping = _ref.children,
            handleExited = _ref.handleExited,
            firstRender = _ref.firstRender;
        return {
          children: firstRender ? (0, _ChildMapping.getInitialChildMapping)(nextProps, handleExited) : (0, _ChildMapping.getNextChildMapping)(nextProps, prevChildMapping, handleExited),
          firstRender: false
        };
      };
      _proto.handleExited = function handleExited(child, node) {
        var currentChildMapping = (0, _ChildMapping.getChildMapping)(this.props.children);
        if (child.key in currentChildMapping) return;
        if (child.props.onExited) {
          child.props.onExited(node);
        }
        if (this.mounted) {
          this.setState(function (state) {
            var children = _extends({}, state.children);
            delete children[child.key];
            return { children: children };
          });
        }
      };
      _proto.render = function render() {
        var _this$props = this.props,
            Component = _this$props.component,
            childFactory = _this$props.childFactory,
            props = _objectWithoutPropertiesLoose(_this$props, ["component", "childFactory"]);
        var children = values(this.state.children).map(childFactory);
        delete props.appear;
        delete props.enter;
        delete props.exit;
        if (Component === null) {
          return children;
        }
        return _react.default.createElement(Component, props, children);
      };
      return TransitionGroup;
    }(_react.default.Component);
    TransitionGroup.childContextTypes = { transitionGroup: _propTypes.default.object.isRequired };
    TransitionGroup.propTypes = 'production' !== "production" ? {
      component: _propTypes.default.any,
      children: _propTypes.default.node,
      appear: _propTypes.default.bool,
      enter: _propTypes.default.bool,
      exit: _propTypes.default.bool,
      childFactory: _propTypes.default.func
    } : {};
    TransitionGroup.defaultProps = defaultProps;
    var _default = (0, _reactLifecyclesCompat.polyfill)(TransitionGroup);
    exports.default = _default;
    module.exports = exports["default"];
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react-lifecycles-compat@3.0.4/react-lifecycles-compat.cjs.js', [], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, '__esModule', { value: true });

  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   */

  function componentWillMount() {
    // Call this.constructor.gDSFP to support sub-classes.
    var state = this.constructor.getDerivedStateFromProps(this.props, this.state);
    if (state !== null && state !== undefined) {
      this.setState(state);
    }
  }

  function componentWillReceiveProps(nextProps) {
    // Call this.constructor.gDSFP to support sub-classes.
    // Use the setState() updater to ensure state isn't stale in certain edge cases.
    function updater(prevState) {
      var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);
      return state !== null && state !== undefined ? state : null;
    }
    // Binding "this" is important for shallow renderer support.
    this.setState(updater.bind(this));
  }

  function componentWillUpdate(nextProps, nextState) {
    try {
      var prevProps = this.props;
      var prevState = this.state;
      this.props = nextProps;
      this.state = nextState;
      this.__reactInternalSnapshotFlag = true;
      this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(prevProps, prevState);
    } finally {
      this.props = prevProps;
      this.state = prevState;
    }
  }

  // React may warn about cWM/cWRP/cWU methods being deprecated.
  // Add a flag to suppress these warnings for this special case.
  componentWillMount.__suppressDeprecationWarning = true;
  componentWillReceiveProps.__suppressDeprecationWarning = true;
  componentWillUpdate.__suppressDeprecationWarning = true;

  function polyfill(Component) {
    var prototype = Component.prototype;

    if (!prototype || !prototype.isReactComponent) {
      throw new Error('Can only polyfill class components');
    }

    if (typeof Component.getDerivedStateFromProps !== 'function' && typeof prototype.getSnapshotBeforeUpdate !== 'function') {
      return Component;
    }

    // If new component APIs are defined, "unsafe" lifecycles won't be called.
    // Error if any of these lifecycles are present,
    // Because they would work differently between older and newer (16.3+) versions of React.
    var foundWillMountName = null;
    var foundWillReceivePropsName = null;
    var foundWillUpdateName = null;
    if (typeof prototype.componentWillMount === 'function') {
      foundWillMountName = 'componentWillMount';
    } else if (typeof prototype.UNSAFE_componentWillMount === 'function') {
      foundWillMountName = 'UNSAFE_componentWillMount';
    }
    if (typeof prototype.componentWillReceiveProps === 'function') {
      foundWillReceivePropsName = 'componentWillReceiveProps';
    } else if (typeof prototype.UNSAFE_componentWillReceiveProps === 'function') {
      foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';
    }
    if (typeof prototype.componentWillUpdate === 'function') {
      foundWillUpdateName = 'componentWillUpdate';
    } else if (typeof prototype.UNSAFE_componentWillUpdate === 'function') {
      foundWillUpdateName = 'UNSAFE_componentWillUpdate';
    }
    if (foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {
      var componentName = Component.displayName || Component.name;
      var newApiName = typeof Component.getDerivedStateFromProps === 'function' ? 'getDerivedStateFromProps()' : 'getSnapshotBeforeUpdate()';

      throw Error('Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n' + componentName + ' uses ' + newApiName + ' but also contains the following legacy lifecycles:' + (foundWillMountName !== null ? '\n  ' + foundWillMountName : '') + (foundWillReceivePropsName !== null ? '\n  ' + foundWillReceivePropsName : '') + (foundWillUpdateName !== null ? '\n  ' + foundWillUpdateName : '') + '\n\nThe above lifecycles should be removed. Learn more about this warning here:\n' + 'https://fb.me/react-async-component-lifecycle-hooks');
    }

    // React <= 16.2 does not support static getDerivedStateFromProps.
    // As a workaround, use cWM and cWRP to invoke the new static lifecycle.
    // Newer versions of React will ignore these lifecycles if gDSFP exists.
    if (typeof Component.getDerivedStateFromProps === 'function') {
      prototype.componentWillMount = componentWillMount;
      prototype.componentWillReceiveProps = componentWillReceiveProps;
    }

    // React <= 16.2 does not support getSnapshotBeforeUpdate.
    // As a workaround, use cWU to invoke the new lifecycle.
    // Newer versions of React will ignore that lifecycle if gSBU exists.
    if (typeof prototype.getSnapshotBeforeUpdate === 'function') {
      if (typeof prototype.componentDidUpdate !== 'function') {
        throw new Error('Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype');
      }

      prototype.componentWillUpdate = componentWillUpdate;

      var componentDidUpdate = prototype.componentDidUpdate;

      prototype.componentDidUpdate = function componentDidUpdatePolyfill(prevProps, prevState, maybeSnapshot) {
        // 16.3+ will not execute our will-update method;
        // It will pass a snapshot value to did-update though.
        // Older versions will require our polyfilled will-update value.
        // We need to handle both cases, but can't just check for the presence of "maybeSnapshot",
        // Because for <= 15.x versions this might be a "prevContext" object.
        // We also can't just check "__reactInternalSnapshot",
        // Because get-snapshot might return a falsy value.
        // So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.
        var snapshot = this.__reactInternalSnapshotFlag ? this.__reactInternalSnapshot : maybeSnapshot;

        componentDidUpdate.call(this, prevProps, prevState, snapshot);
      };
    }

    return Component;
  }

  exports.polyfill = polyfill;
});
System.registerDynamic("npm:react-lifecycles-compat@3.0.4.js", ["npm:react-lifecycles-compat@3.0.4/react-lifecycles-compat.cjs.js"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("npm:react-lifecycles-compat@3.0.4/react-lifecycles-compat.cjs.js");
});
System.registerDynamic('npm:prop-types@15.6.2/factoryWithTypeCheckers.js', ['npm:object-assign@4.1.1.js', 'npm:prop-types@15.6.2/lib/ReactPropTypesSecret.js', 'npm:prop-types@15.6.2/checkPropTypes.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var assign = $__require('npm:object-assign@4.1.1.js');
    var ReactPropTypesSecret = $__require('npm:prop-types@15.6.2/lib/ReactPropTypesSecret.js');
    var checkPropTypes = $__require('npm:prop-types@15.6.2/checkPropTypes.js');
    var printWarning = function () {};
    if ('production' !== 'production') {
      printWarning = function (text) {
        var message = 'Warning: ' + text;
        if (typeof console !== 'undefined') {
          console.error(message);
        }
        try {
          throw new Error(message);
        } catch (x) {}
      };
    }
    function emptyFunctionThatReturnsNull() {
      return null;
    }
    module.exports = function (isValidElement, throwOnDirectAccess) {
      var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
      var FAUX_ITERATOR_SYMBOL = '@@iterator';
      function getIteratorFn(maybeIterable) {
        var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
        if (typeof iteratorFn === 'function') {
          return iteratorFn;
        }
      }
      var ANONYMOUS = '<<anonymous>>';
      var ReactPropTypes = {
        array: createPrimitiveTypeChecker('array'),
        bool: createPrimitiveTypeChecker('boolean'),
        func: createPrimitiveTypeChecker('function'),
        number: createPrimitiveTypeChecker('number'),
        object: createPrimitiveTypeChecker('object'),
        string: createPrimitiveTypeChecker('string'),
        symbol: createPrimitiveTypeChecker('symbol'),
        any: createAnyTypeChecker(),
        arrayOf: createArrayOfTypeChecker,
        element: createElementTypeChecker(),
        instanceOf: createInstanceTypeChecker,
        node: createNodeChecker(),
        objectOf: createObjectOfTypeChecker,
        oneOf: createEnumTypeChecker,
        oneOfType: createUnionTypeChecker,
        shape: createShapeTypeChecker,
        exact: createStrictShapeTypeChecker
      };
      function is(x, y) {
        if (x === y) {
          return x !== 0 || 1 / x === 1 / y;
        } else {
          return x !== x && y !== y;
        }
      }
      function PropTypeError(message) {
        this.message = message;
        this.stack = '';
      }
      PropTypeError.prototype = Error.prototype;
      function createChainableTypeChecker(validate) {
        if ('production' !== 'production') {
          var manualPropTypeCallCache = {};
          var manualPropTypeWarningCount = 0;
        }
        function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
          componentName = componentName || ANONYMOUS;
          propFullName = propFullName || propName;
          if (secret !== ReactPropTypesSecret) {
            if (throwOnDirectAccess) {
              var err = new Error('Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use `PropTypes.checkPropTypes()` to call them. ' + 'Read more at http://fb.me/use-check-prop-types');
              err.name = 'Invariant Violation';
              throw err;
            } else if ('production' !== 'production' && typeof console !== 'undefined') {
              var cacheKey = componentName + ':' + propName;
              if (!manualPropTypeCallCache[cacheKey] && manualPropTypeWarningCount < 3) {
                printWarning('You are manually calling a React.PropTypes validation ' + 'function for the `' + propFullName + '` prop on `' + componentName + '`. This is deprecated ' + 'and will throw in the standalone `prop-types` package. ' + 'You may be seeing this warning due to a third-party PropTypes ' + 'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.');
                manualPropTypeCallCache[cacheKey] = true;
                manualPropTypeWarningCount++;
              }
            }
          }
          if (props[propName] == null) {
            if (isRequired) {
              if (props[propName] === null) {
                return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
              }
              return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
            }
            return null;
          } else {
            return validate(props, propName, componentName, location, propFullName);
          }
        }
        var chainedCheckType = checkType.bind(null, false);
        chainedCheckType.isRequired = checkType.bind(null, true);
        return chainedCheckType;
      }
      function createPrimitiveTypeChecker(expectedType) {
        function validate(props, propName, componentName, location, propFullName, secret) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== expectedType) {
            var preciseType = getPreciseType(propValue);
            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createAnyTypeChecker() {
        return createChainableTypeChecker(emptyFunctionThatReturnsNull);
      }
      function createArrayOfTypeChecker(typeChecker) {
        function validate(props, propName, componentName, location, propFullName) {
          if (typeof typeChecker !== 'function') {
            return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
          }
          var propValue = props[propName];
          if (!Array.isArray(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
          }
          for (var i = 0; i < propValue.length; i++) {
            var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
            if (error instanceof Error) {
              return error;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createElementTypeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          if (!isValidElement(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createInstanceTypeChecker(expectedClass) {
        function validate(props, propName, componentName, location, propFullName) {
          if (!(props[propName] instanceof expectedClass)) {
            var expectedClassName = expectedClass.name || ANONYMOUS;
            var actualClassName = getClassName(props[propName]);
            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createEnumTypeChecker(expectedValues) {
        if (!Array.isArray(expectedValues)) {
          'production' !== 'production' ? printWarning('Invalid argument supplied to oneOf, expected an instance of array.') : void 0;
          return emptyFunctionThatReturnsNull;
        }
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          for (var i = 0; i < expectedValues.length; i++) {
            if (is(propValue, expectedValues[i])) {
              return null;
            }
          }
          var valuesString = JSON.stringify(expectedValues);
          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
        }
        return createChainableTypeChecker(validate);
      }
      function createObjectOfTypeChecker(typeChecker) {
        function validate(props, propName, componentName, location, propFullName) {
          if (typeof typeChecker !== 'function') {
            return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
          }
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== 'object') {
            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
          }
          for (var key in propValue) {
            if (propValue.hasOwnProperty(key)) {
              var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
              if (error instanceof Error) {
                return error;
              }
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createUnionTypeChecker(arrayOfTypeCheckers) {
        if (!Array.isArray(arrayOfTypeCheckers)) {
          'production' !== 'production' ? printWarning('Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
          return emptyFunctionThatReturnsNull;
        }
        for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
          var checker = arrayOfTypeCheckers[i];
          if (typeof checker !== 'function') {
            printWarning('Invalid argument supplied to oneOfType. Expected an array of check functions, but ' + 'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.');
            return emptyFunctionThatReturnsNull;
          }
        }
        function validate(props, propName, componentName, location, propFullName) {
          for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
            var checker = arrayOfTypeCheckers[i];
            if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
              return null;
            }
          }
          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
        }
        return createChainableTypeChecker(validate);
      }
      function createNodeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
          if (!isNode(props[propName])) {
            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createShapeTypeChecker(shapeTypes) {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== 'object') {
            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
          }
          for (var key in shapeTypes) {
            var checker = shapeTypes[key];
            if (!checker) {
              continue;
            }
            var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
            if (error) {
              return error;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createStrictShapeTypeChecker(shapeTypes) {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== 'object') {
            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
          }
          var allKeys = assign({}, props[propName], shapeTypes);
          for (var key in allKeys) {
            var checker = shapeTypes[key];
            if (!checker) {
              return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' + '\nBad object: ' + JSON.stringify(props[propName], null, '  ') + '\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  '));
            }
            var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
            if (error) {
              return error;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function isNode(propValue) {
        switch (typeof propValue) {
          case 'number':
          case 'string':
          case 'undefined':
            return true;
          case 'boolean':
            return !propValue;
          case 'object':
            if (Array.isArray(propValue)) {
              return propValue.every(isNode);
            }
            if (propValue === null || isValidElement(propValue)) {
              return true;
            }
            var iteratorFn = getIteratorFn(propValue);
            if (iteratorFn) {
              var iterator = iteratorFn.call(propValue);
              var step;
              if (iteratorFn !== propValue.entries) {
                while (!(step = iterator.next()).done) {
                  if (!isNode(step.value)) {
                    return false;
                  }
                }
              } else {
                while (!(step = iterator.next()).done) {
                  var entry = step.value;
                  if (entry) {
                    if (!isNode(entry[1])) {
                      return false;
                    }
                  }
                }
              }
            } else {
              return false;
            }
            return true;
          default:
            return false;
        }
      }
      function isSymbol(propType, propValue) {
        if (propType === 'symbol') {
          return true;
        }
        if (propValue['@@toStringTag'] === 'Symbol') {
          return true;
        }
        if (typeof Symbol === 'function' && propValue instanceof Symbol) {
          return true;
        }
        return false;
      }
      function getPropType(propValue) {
        var propType = typeof propValue;
        if (Array.isArray(propValue)) {
          return 'array';
        }
        if (propValue instanceof RegExp) {
          return 'object';
        }
        if (isSymbol(propType, propValue)) {
          return 'symbol';
        }
        return propType;
      }
      function getPreciseType(propValue) {
        if (typeof propValue === 'undefined' || propValue === null) {
          return '' + propValue;
        }
        var propType = getPropType(propValue);
        if (propType === 'object') {
          if (propValue instanceof Date) {
            return 'date';
          } else if (propValue instanceof RegExp) {
            return 'regexp';
          }
        }
        return propType;
      }
      function getPostfixForTypeWarning(value) {
        var type = getPreciseType(value);
        switch (type) {
          case 'array':
          case 'object':
            return 'an ' + type;
          case 'boolean':
          case 'date':
          case 'regexp':
            return 'a ' + type;
          default:
            return type;
        }
      }
      function getClassName(propValue) {
        if (!propValue.constructor || !propValue.constructor.name) {
          return ANONYMOUS;
        }
        return propValue.constructor.name;
      }
      ReactPropTypes.checkPropTypes = checkPropTypes;
      ReactPropTypes.PropTypes = ReactPropTypes;
      return ReactPropTypes;
    };
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:prop-types@15.6.2/factoryWithThrowingShims.js', ['npm:prop-types@15.6.2/lib/ReactPropTypesSecret.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var ReactPropTypesSecret = $__require('npm:prop-types@15.6.2/lib/ReactPropTypesSecret.js');
  function emptyFunction() {}
  module.exports = function () {
    function shim(props, propName, componentName, location, propFullName, secret) {
      if (secret === ReactPropTypesSecret) {
        return;
      }
      var err = new Error('Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use PropTypes.checkPropTypes() to call them. ' + 'Read more at http://fb.me/use-check-prop-types');
      err.name = 'Invariant Violation';
      throw err;
    }
    ;
    shim.isRequired = shim;
    function getShim() {
      return shim;
    }
    ;
    var ReactPropTypes = {
      array: shim,
      bool: shim,
      func: shim,
      number: shim,
      object: shim,
      string: shim,
      symbol: shim,
      any: shim,
      arrayOf: getShim,
      element: shim,
      instanceOf: getShim,
      node: shim,
      objectOf: getShim,
      oneOf: getShim,
      oneOfType: getShim,
      shape: getShim,
      exact: getShim
    };
    ReactPropTypes.checkPropTypes = emptyFunction;
    ReactPropTypes.PropTypes = ReactPropTypes;
    return ReactPropTypes;
  };
});
System.registerDynamic('npm:prop-types@15.6.2/index.js', ['npm:prop-types@15.6.2/factoryWithTypeCheckers.js', 'npm:prop-types@15.6.2/factoryWithThrowingShims.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    if ('production' !== 'production') {
      var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol.for && Symbol.for('react.element') || 0xeac7;
      var isValidElement = function (object) {
        return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
      };
      var throwOnDirectAccess = true;
      module.exports = $__require('npm:prop-types@15.6.2/factoryWithTypeCheckers.js')(isValidElement, throwOnDirectAccess);
    } else {
      module.exports = $__require('npm:prop-types@15.6.2/factoryWithThrowingShims.js')();
    }
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic("npm:prop-types@15.6.2.js", ["npm:prop-types@15.6.2/index.js"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("npm:prop-types@15.6.2/index.js");
});
System.registerDynamic('npm:react-transition-group@2.5.3/utils/PropTypes.js', ['npm:prop-types@15.6.2.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    "use strict";

    exports.__esModule = true;
    exports.classNamesShape = exports.timeoutsShape = void 0;
    var _propTypes = _interopRequireDefault($__require('npm:prop-types@15.6.2.js'));
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var timeoutsShape = 'production' !== 'production' ? _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.shape({
      enter: _propTypes.default.number,
      exit: _propTypes.default.number
    }).isRequired]) : null;
    exports.timeoutsShape = timeoutsShape;
    var classNamesShape = 'production' !== 'production' ? _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.shape({
      enter: _propTypes.default.string,
      exit: _propTypes.default.string,
      active: _propTypes.default.string
    }), _propTypes.default.shape({
      enter: _propTypes.default.string,
      enterDone: _propTypes.default.string,
      enterActive: _propTypes.default.string,
      exit: _propTypes.default.string,
      exitDone: _propTypes.default.string,
      exitActive: _propTypes.default.string
    })]) : null;
    exports.classNamesShape = classNamesShape;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react-transition-group@2.5.3/Transition.js', ['npm:prop-types@15.6.2.js', 'npm:react@16.7.0.js', 'npm:react-dom@16.7.0.js', 'npm:react-lifecycles-compat@3.0.4.js', 'npm:react-transition-group@2.5.3/utils/PropTypes.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    "use strict";

    exports.__esModule = true;
    exports.default = exports.EXITING = exports.ENTERED = exports.ENTERING = exports.EXITED = exports.UNMOUNTED = void 0;
    var PropTypes = _interopRequireWildcard($__require('npm:prop-types@15.6.2.js'));
    var _react = _interopRequireDefault($__require('npm:react@16.7.0.js'));
    var _reactDom = _interopRequireDefault($__require('npm:react-dom@16.7.0.js'));
    var _reactLifecyclesCompat = $__require('npm:react-lifecycles-compat@3.0.4.js');
    var _PropTypes = $__require('npm:react-transition-group@2.5.3/utils/PropTypes.js');
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _interopRequireWildcard(obj) {
      if (obj && obj.__esModule) {
        return obj;
      } else {
        var newObj = {};
        if (obj != null) {
          for (var key in obj) {
            if (Object.prototype.hasOwnProperty.call(obj, key)) {
              var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};
              if (desc.get || desc.set) {
                Object.defineProperty(newObj, key, desc);
              } else {
                newObj[key] = obj[key];
              }
            }
          }
        }
        newObj.default = obj;
        return newObj;
      }
    }
    function _objectWithoutPropertiesLoose(source, excluded) {
      if (source == null) return {};
      var target = {};
      var sourceKeys = Object.keys(source);
      var key, i;
      for (i = 0; i < sourceKeys.length; i++) {
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
      }
      return target;
    }
    function _inheritsLoose(subClass, superClass) {
      subClass.prototype = Object.create(superClass.prototype);
      subClass.prototype.constructor = subClass;
      subClass.__proto__ = superClass;
    }
    var UNMOUNTED = 'unmounted';
    exports.UNMOUNTED = UNMOUNTED;
    var EXITED = 'exited';
    exports.EXITED = EXITED;
    var ENTERING = 'entering';
    exports.ENTERING = ENTERING;
    var ENTERED = 'entered';
    exports.ENTERED = ENTERED;
    var EXITING = 'exiting';
    exports.EXITING = EXITING;
    var Transition = function (_React$Component) {
      _inheritsLoose(Transition, _React$Component);
      function Transition(props, context) {
        var _this;
        _this = _React$Component.call(this, props, context) || this;
        var parentGroup = context.transitionGroup;
        var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;
        var initialStatus;
        _this.appearStatus = null;
        if (props.in) {
          if (appear) {
            initialStatus = EXITED;
            _this.appearStatus = ENTERING;
          } else {
            initialStatus = ENTERED;
          }
        } else {
          if (props.unmountOnExit || props.mountOnEnter) {
            initialStatus = UNMOUNTED;
          } else {
            initialStatus = EXITED;
          }
        }
        _this.state = { status: initialStatus };
        _this.nextCallback = null;
        return _this;
      }
      var _proto = Transition.prototype;
      _proto.getChildContext = function getChildContext() {
        return { transitionGroup: null };
      };
      Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {
        var nextIn = _ref.in;
        if (nextIn && prevState.status === UNMOUNTED) {
          return { status: EXITED };
        }
        return null;
      };
      _proto.componentDidMount = function componentDidMount() {
        this.updateStatus(true, this.appearStatus);
      };
      _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
        var nextStatus = null;
        if (prevProps !== this.props) {
          var status = this.state.status;
          if (this.props.in) {
            if (status !== ENTERING && status !== ENTERED) {
              nextStatus = ENTERING;
            }
          } else {
            if (status === ENTERING || status === ENTERED) {
              nextStatus = EXITING;
            }
          }
        }
        this.updateStatus(false, nextStatus);
      };
      _proto.componentWillUnmount = function componentWillUnmount() {
        this.cancelNextCallback();
      };
      _proto.getTimeouts = function getTimeouts() {
        var timeout = this.props.timeout;
        var exit, enter, appear;
        exit = enter = appear = timeout;
        if (timeout != null && typeof timeout !== 'number') {
          exit = timeout.exit;
          enter = timeout.enter;
          appear = timeout.appear;
        }
        return {
          exit: exit,
          enter: enter,
          appear: appear
        };
      };
      _proto.updateStatus = function updateStatus(mounting, nextStatus) {
        if (mounting === void 0) {
          mounting = false;
        }
        if (nextStatus !== null) {
          this.cancelNextCallback();
          var node = _reactDom.default.findDOMNode(this);
          if (nextStatus === ENTERING) {
            this.performEnter(node, mounting);
          } else {
            this.performExit(node);
          }
        } else if (this.props.unmountOnExit && this.state.status === EXITED) {
          this.setState({ status: UNMOUNTED });
        }
      };
      _proto.performEnter = function performEnter(node, mounting) {
        var _this2 = this;
        var enter = this.props.enter;
        var appearing = this.context.transitionGroup ? this.context.transitionGroup.isMounting : mounting;
        var timeouts = this.getTimeouts();
        if (!mounting && !enter) {
          this.safeSetState({ status: ENTERED }, function () {
            _this2.props.onEntered(node);
          });
          return;
        }
        this.props.onEnter(node, appearing);
        this.safeSetState({ status: ENTERING }, function () {
          _this2.props.onEntering(node, appearing);
          _this2.onTransitionEnd(node, timeouts.enter, function () {
            _this2.safeSetState({ status: ENTERED }, function () {
              _this2.props.onEntered(node, appearing);
            });
          });
        });
      };
      _proto.performExit = function performExit(node) {
        var _this3 = this;
        var exit = this.props.exit;
        var timeouts = this.getTimeouts();
        if (!exit) {
          this.safeSetState({ status: EXITED }, function () {
            _this3.props.onExited(node);
          });
          return;
        }
        this.props.onExit(node);
        this.safeSetState({ status: EXITING }, function () {
          _this3.props.onExiting(node);
          _this3.onTransitionEnd(node, timeouts.exit, function () {
            _this3.safeSetState({ status: EXITED }, function () {
              _this3.props.onExited(node);
            });
          });
        });
      };
      _proto.cancelNextCallback = function cancelNextCallback() {
        if (this.nextCallback !== null) {
          this.nextCallback.cancel();
          this.nextCallback = null;
        }
      };
      _proto.safeSetState = function safeSetState(nextState, callback) {
        callback = this.setNextCallback(callback);
        this.setState(nextState, callback);
      };
      _proto.setNextCallback = function setNextCallback(callback) {
        var _this4 = this;
        var active = true;
        this.nextCallback = function (event) {
          if (active) {
            active = false;
            _this4.nextCallback = null;
            callback(event);
          }
        };
        this.nextCallback.cancel = function () {
          active = false;
        };
        return this.nextCallback;
      };
      _proto.onTransitionEnd = function onTransitionEnd(node, timeout, handler) {
        this.setNextCallback(handler);
        if (node) {
          if (this.props.addEndListener) {
            this.props.addEndListener(node, this.nextCallback);
          }
          if (timeout != null) {
            setTimeout(this.nextCallback, timeout);
          }
        } else {
          setTimeout(this.nextCallback, 0);
        }
      };
      _proto.render = function render() {
        var status = this.state.status;
        if (status === UNMOUNTED) {
          return null;
        }
        var _this$props = this.props,
            children = _this$props.children,
            childProps = _objectWithoutPropertiesLoose(_this$props, ["children"]);
        delete childProps.in;
        delete childProps.mountOnEnter;
        delete childProps.unmountOnExit;
        delete childProps.appear;
        delete childProps.enter;
        delete childProps.exit;
        delete childProps.timeout;
        delete childProps.addEndListener;
        delete childProps.onEnter;
        delete childProps.onEntering;
        delete childProps.onEntered;
        delete childProps.onExit;
        delete childProps.onExiting;
        delete childProps.onExited;
        if (typeof children === 'function') {
          return children(status, childProps);
        }
        var child = _react.default.Children.only(children);
        return _react.default.cloneElement(child, childProps);
      };
      return Transition;
    }(_react.default.Component);
    Transition.contextTypes = { transitionGroup: PropTypes.object };
    Transition.childContextTypes = { transitionGroup: function transitionGroup() {} };
    Transition.propTypes = 'production' !== "production" ? {
      children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,
      in: PropTypes.bool,
      mountOnEnter: PropTypes.bool,
      unmountOnExit: PropTypes.bool,
      appear: PropTypes.bool,
      enter: PropTypes.bool,
      exit: PropTypes.bool,
      timeout: function timeout(props) {
        var pt = 'production' !== "production" ? _PropTypes.timeoutsShape : {};
        ;
        if (!props.addEndListener) pt = pt.isRequired;
        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          args[_key - 1] = arguments[_key];
        }
        return pt.apply(void 0, [props].concat(args));
      },
      addEndListener: PropTypes.func,
      onEnter: PropTypes.func,
      onEntering: PropTypes.func,
      onEntered: PropTypes.func,
      onExit: PropTypes.func,
      onExiting: PropTypes.func,
      onExited: PropTypes.func
    } : {};
    function noop() {}
    Transition.defaultProps = {
      in: false,
      mountOnEnter: false,
      unmountOnExit: false,
      appear: false,
      enter: true,
      exit: true,
      onEnter: noop,
      onEntering: noop,
      onEntered: noop,
      onExit: noop,
      onExiting: noop,
      onExited: noop
    };
    Transition.UNMOUNTED = 0;
    Transition.EXITED = 1;
    Transition.ENTERING = 2;
    Transition.ENTERED = 3;
    Transition.EXITING = 4;
    var _default = (0, _reactLifecyclesCompat.polyfill)(Transition);
    exports.default = _default;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react-transition-group@2.5.3/index.js', ['npm:react-transition-group@2.5.3/CSSTransition.js', 'npm:react-transition-group@2.5.3/ReplaceTransition.js', 'npm:react-transition-group@2.5.3/TransitionGroup.js', 'npm:react-transition-group@2.5.3/Transition.js'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  var _CSSTransition = _interopRequireDefault($__require('npm:react-transition-group@2.5.3/CSSTransition.js'));
  var _ReplaceTransition = _interopRequireDefault($__require('npm:react-transition-group@2.5.3/ReplaceTransition.js'));
  var _TransitionGroup = _interopRequireDefault($__require('npm:react-transition-group@2.5.3/TransitionGroup.js'));
  var _Transition = _interopRequireDefault($__require('npm:react-transition-group@2.5.3/Transition.js'));
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  module.exports = {
    Transition: _Transition.default,
    TransitionGroup: _TransitionGroup.default,
    ReplaceTransition: _ReplaceTransition.default,
    CSSTransition: _CSSTransition.default
  };
});
System.registerDynamic("npm:react-transition-group@2.5.3.js", ["npm:react-transition-group@2.5.3/index.js"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("npm:react-transition-group@2.5.3/index.js");
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/components/portal/portal.js", ["npm:tslib@1.9.3.js", "npm:react@16.7.0.js", "npm:react-dom@16.7.0.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/errors.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/utils.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  var React = tslib_1.__importStar($__require("npm:react@16.7.0.js"));
  var ReactDOM = tslib_1.__importStar($__require("npm:react-dom@16.7.0.js"));
  var Classes = tslib_1.__importStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js"));
  var Errors = tslib_1.__importStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/errors.js"));
  var props_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js");
  var utils_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/utils.js");
  var cannotCreatePortal = !utils_1.isFunction(ReactDOM.createPortal);
  var REACT_CONTEXT_TYPES = { blueprintPortalClassName: function (obj, key) {
      if (obj[key] != null && typeof obj[key] !== "string") {
        return new Error(Errors.PORTAL_CONTEXT_CLASS_NAME_STRING);
      }
      return undefined;
    } };
  var Portal = function (_super) {
    tslib_1.__extends(Portal, _super);
    function Portal() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.state = { hasMounted: false };
      return _this;
    }
    Portal.prototype.render = function () {
      if (cannotCreatePortal || typeof document === "undefined" || !this.state.hasMounted) {
        return null;
      } else {
        return ReactDOM.createPortal(this.props.children, this.portalElement);
      }
    };
    Portal.prototype.componentDidMount = function () {
      if (!this.props.container) {
        return;
      }
      this.portalElement = this.createContainerElement();
      this.props.container.appendChild(this.portalElement);
      this.setState({ hasMounted: true }, this.props.onChildrenMount);
      if (cannotCreatePortal) {
        this.unstableRenderNoPortal();
      }
    };
    Portal.prototype.componentDidUpdate = function (prevProps) {
      if (this.portalElement != null && prevProps.className !== this.props.className) {
        this.portalElement.classList.remove(prevProps.className);
        maybeAddClass(this.portalElement.classList, this.props.className);
      }
      if (cannotCreatePortal) {
        this.unstableRenderNoPortal();
      }
    };
    Portal.prototype.componentWillUnmount = function () {
      if (this.portalElement != null) {
        if (cannotCreatePortal) {
          ReactDOM.unmountComponentAtNode(this.portalElement);
        }
        this.portalElement.remove();
      }
    };
    Portal.prototype.createContainerElement = function () {
      var container = document.createElement("div");
      container.classList.add(Classes.PORTAL);
      maybeAddClass(container.classList, this.props.className);
      if (this.context != null) {
        maybeAddClass(container.classList, this.context.blueprintPortalClassName);
      }
      return container;
    };
    Portal.prototype.unstableRenderNoPortal = function () {
      ReactDOM.unstable_renderSubtreeIntoContainer(this, React.createElement("div", null, this.props.children), this.portalElement);
    };
    Portal.displayName = props_1.DISPLAYNAME_PREFIX + ".Portal";
    Portal.contextTypes = REACT_CONTEXT_TYPES;
    Portal.defaultProps = { container: typeof document !== "undefined" ? document.body : null };
    return Portal;
  }(React.Component);
  exports.Portal = Portal;
  function maybeAddClass(classList, className) {
    if (className != null && className !== "") {
      classList.add.apply(classList, className.split(" "));
    }
  }
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/components/overlay/overlay.js", ["npm:tslib@1.9.3.js", "npm:classnames@2.2.6.js", "npm:react@16.7.0.js", "npm:react-transition-group@2.5.3.js", "npm:react-dom@16.7.0.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/keys.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/utils.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/portal/portal.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  var classnames_1 = tslib_1.__importDefault($__require("npm:classnames@2.2.6.js"));
  var React = tslib_1.__importStar($__require("npm:react@16.7.0.js"));
  var react_transition_group_1 = $__require("npm:react-transition-group@2.5.3.js");
  var react_dom_1 = $__require("npm:react-dom@16.7.0.js");
  var Classes = tslib_1.__importStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js"));
  var Keys = tslib_1.__importStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/keys.js"));
  var props_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js");
  var utils_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/utils.js");
  var portal_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/portal/portal.js");
  var Overlay = function (_super) {
    tslib_1.__extends(Overlay, _super);
    function Overlay(props, context) {
      var _this = _super.call(this, props, context) || this;
      _this.refHandlers = { container: function (ref) {
          return _this.containerElement = react_dom_1.findDOMNode(ref);
        } };
      _this.maybeRenderChild = function (child) {
        if (child == null) {
          return null;
        }
        var decoratedChild = typeof child === "object" ? React.cloneElement(child, {
          className: classnames_1.default(child.props.className, Classes.OVERLAY_CONTENT),
          tabIndex: 0
        }) : React.createElement("span", { className: Classes.OVERLAY_CONTENT }, child);
        var _a = _this.props,
            onOpening = _a.onOpening,
            onOpened = _a.onOpened,
            onClosing = _a.onClosing,
            onClosed = _a.onClosed,
            transitionDuration = _a.transitionDuration,
            transitionName = _a.transitionName;
        return React.createElement(react_transition_group_1.CSSTransition, {
          classNames: transitionName,
          onEntering: onOpening,
          onEntered: onOpened,
          onExiting: onClosing,
          onExited: onClosed,
          timeout: transitionDuration
        }, decoratedChild);
      };
      _this.handleBackdropMouseDown = function (e) {
        var _a = _this.props,
            backdropProps = _a.backdropProps,
            canOutsideClickClose = _a.canOutsideClickClose,
            enforceFocus = _a.enforceFocus,
            onClose = _a.onClose;
        if (canOutsideClickClose) {
          utils_1.safeInvoke(onClose, e);
        }
        if (enforceFocus) {
          _this.bringFocusInsideOverlay();
        }
        utils_1.safeInvoke(backdropProps.onMouseDown, e);
      };
      _this.handleDocumentClick = function (e) {
        var _a = _this.props,
            canOutsideClickClose = _a.canOutsideClickClose,
            isOpen = _a.isOpen,
            onClose = _a.onClose;
        var eventTarget = e.target;
        var stackIndex = Overlay.openStack.indexOf(_this);
        var isClickInThisOverlayOrDescendant = Overlay.openStack.slice(stackIndex).some(function (_a) {
          var elem = _a.containerElement;
          return elem && elem.contains(eventTarget) && !elem.isSameNode(eventTarget);
        });
        if (isOpen && canOutsideClickClose && !isClickInThisOverlayOrDescendant) {
          utils_1.safeInvoke(onClose, e);
        }
      };
      _this.handleDocumentFocus = function (e) {
        if (_this.props.enforceFocus && _this.containerElement != null && !_this.containerElement.contains(e.target)) {
          e.preventDefault();
          e.stopImmediatePropagation();
          _this.bringFocusInsideOverlay();
        }
      };
      _this.handleKeyDown = function (e) {
        var _a = _this.props,
            canEscapeKeyClose = _a.canEscapeKeyClose,
            onClose = _a.onClose;
        if (e.which === Keys.ESCAPE && canEscapeKeyClose) {
          utils_1.safeInvoke(onClose, e);
          e.preventDefault();
        }
      };
      _this.state = { hasEverOpened: props.isOpen };
      return _this;
    }
    Overlay.prototype.render = function () {
      if (this.props.lazy && !this.state.hasEverOpened) {
        return null;
      }
      var _a = this.props,
          children = _a.children,
          className = _a.className,
          usePortal = _a.usePortal,
          isOpen = _a.isOpen;
      var childrenWithTransitions = isOpen ? React.Children.map(children, this.maybeRenderChild) : [];
      childrenWithTransitions.unshift(this.maybeRenderBackdrop());
      var containerClasses = classnames_1.default(Classes.OVERLAY, (_b = {}, _b[Classes.OVERLAY_OPEN] = isOpen, _b[Classes.OVERLAY_INLINE] = !usePortal, _b), className);
      var transitionGroup = React.createElement(react_transition_group_1.TransitionGroup, {
        appear: true,
        className: containerClasses,
        component: "div",
        onKeyDown: this.handleKeyDown,
        ref: this.refHandlers.container
      }, childrenWithTransitions);
      if (usePortal) {
        return React.createElement(portal_1.Portal, {
          className: this.props.portalClassName,
          container: this.props.portalContainer
        }, transitionGroup);
      } else {
        return transitionGroup;
      }
      var _b;
    };
    Overlay.prototype.componentDidMount = function () {
      if (this.props.isOpen) {
        this.overlayWillOpen();
      }
    };
    Overlay.prototype.componentWillReceiveProps = function (nextProps) {
      this.setState({ hasEverOpened: this.state.hasEverOpened || nextProps.isOpen });
    };
    Overlay.prototype.componentDidUpdate = function (prevProps) {
      if (prevProps.isOpen && !this.props.isOpen) {
        this.overlayWillClose();
      } else if (!prevProps.isOpen && this.props.isOpen) {
        this.overlayWillOpen();
      }
    };
    Overlay.prototype.componentWillUnmount = function () {
      this.overlayWillClose();
    };
    Overlay.prototype.bringFocusInsideOverlay = function () {
      var _this = this;
      return requestAnimationFrame(function () {
        if (_this.containerElement == null || document.activeElement == null || !_this.props.isOpen) {
          return;
        }
        var isFocusOutsideModal = !_this.containerElement.contains(document.activeElement);
        if (isFocusOutsideModal) {
          var autofocusElement = _this.containerElement.querySelector("[autofocus]");
          var wrapperElement = _this.containerElement.querySelector("[tabindex]");
          if (autofocusElement != null) {
            autofocusElement.focus();
          } else if (wrapperElement != null) {
            wrapperElement.focus();
          }
        }
      });
    };
    Overlay.prototype.maybeRenderBackdrop = function () {
      var _a = this.props,
          backdropClassName = _a.backdropClassName,
          backdropProps = _a.backdropProps,
          hasBackdrop = _a.hasBackdrop,
          isOpen = _a.isOpen,
          transitionDuration = _a.transitionDuration,
          transitionName = _a.transitionName;
      if (hasBackdrop && isOpen) {
        return React.createElement(react_transition_group_1.CSSTransition, {
          classNames: transitionName,
          key: "__backdrop",
          timeout: transitionDuration
        }, React.createElement("div", tslib_1.__assign({}, backdropProps, {
          className: classnames_1.default(Classes.OVERLAY_BACKDROP, backdropClassName, backdropProps.className),
          onMouseDown: this.handleBackdropMouseDown,
          tabIndex: this.props.canOutsideClickClose ? 0 : null
        })));
      } else {
        return null;
      }
    };
    Overlay.prototype.overlayWillClose = function () {
      document.removeEventListener("focus", this.handleDocumentFocus, true);
      document.removeEventListener("mousedown", this.handleDocumentClick);
      var openStack = Overlay.openStack;
      var stackIndex = openStack.indexOf(this);
      if (stackIndex !== -1) {
        openStack.splice(stackIndex, 1);
        if (openStack.length > 0) {
          var lastOpenedOverlay = Overlay.getLastOpened();
          if (lastOpenedOverlay.props.enforceFocus) {
            document.addEventListener("focus", lastOpenedOverlay.handleDocumentFocus, true);
          }
        }
        if (openStack.filter(function (o) {
          return o.props.usePortal && o.props.hasBackdrop;
        }).length === 0) {
          document.body.classList.remove(Classes.OVERLAY_OPEN);
        }
      }
    };
    Overlay.prototype.overlayWillOpen = function () {
      var openStack = Overlay.openStack;
      if (openStack.length > 0) {
        document.removeEventListener("focus", Overlay.getLastOpened().handleDocumentFocus, true);
      }
      openStack.push(this);
      if (this.props.autoFocus) {
        this.bringFocusInsideOverlay();
      }
      if (this.props.enforceFocus) {
        document.addEventListener("focus", this.handleDocumentFocus, true);
      }
      if (this.props.canOutsideClickClose && !this.props.hasBackdrop) {
        document.addEventListener("mousedown", this.handleDocumentClick);
      }
      if (this.props.hasBackdrop && this.props.usePortal) {
        document.body.classList.add(Classes.OVERLAY_OPEN);
      }
    };
    Overlay.displayName = props_1.DISPLAYNAME_PREFIX + ".Overlay";
    Overlay.defaultProps = {
      autoFocus: true,
      backdropProps: {},
      canEscapeKeyClose: true,
      canOutsideClickClose: true,
      enforceFocus: true,
      hasBackdrop: true,
      isOpen: false,
      lazy: true,
      transitionDuration: 300,
      transitionName: Classes.OVERLAY,
      usePortal: true
    };
    Overlay.openStack = [];
    Overlay.getLastOpened = function () {
      return Overlay.openStack[Overlay.openStack.length - 1];
    };
    return Overlay;
  }(React.PureComponent);
  exports.Overlay = Overlay;
});
System.registerDynamic('npm:resize-observer-polyfill@1.5.1/dist/ResizeObserver.js', [], true, function ($__require, exports, module) {
    /* */
    "format cjs";

    var global = this || self,
        GLOBAL = global;
    (function (global, factory) {
        typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof undefined === 'function' && define.amd ? define(factory) : global.ResizeObserver = factory();
    })(this, function () {
        'use strict';

        /**
         * A collection of shims that provide minimal functionality of the ES6 collections.
         *
         * These implementations are not meant to be used outside of the ResizeObserver
         * modules as they cover only a limited range of use cases.
         */
        /* eslint-disable require-jsdoc, valid-jsdoc */

        var MapShim = function () {
            if (typeof Map !== 'undefined') {
                return Map;
            }
            /**
             * Returns index in provided array that matches the specified key.
             *
             * @param {Array<Array>} arr
             * @param {*} key
             * @returns {number}
             */
            function getIndex(arr, key) {
                var result = -1;
                arr.some(function (entry, index) {
                    if (entry[0] === key) {
                        result = index;
                        return true;
                    }
                    return false;
                });
                return result;
            }
            return (/** @class */function () {
                    function class_1() {
                        this.__entries__ = [];
                    }
                    Object.defineProperty(class_1.prototype, "size", {
                        /**
                         * @returns {boolean}
                         */
                        get: function () {
                            return this.__entries__.length;
                        },
                        enumerable: true,
                        configurable: true
                    });
                    /**
                     * @param {*} key
                     * @returns {*}
                     */
                    class_1.prototype.get = function (key) {
                        var index = getIndex(this.__entries__, key);
                        var entry = this.__entries__[index];
                        return entry && entry[1];
                    };
                    /**
                     * @param {*} key
                     * @param {*} value
                     * @returns {void}
                     */
                    class_1.prototype.set = function (key, value) {
                        var index = getIndex(this.__entries__, key);
                        if (~index) {
                            this.__entries__[index][1] = value;
                        } else {
                            this.__entries__.push([key, value]);
                        }
                    };
                    /**
                     * @param {*} key
                     * @returns {void}
                     */
                    class_1.prototype.delete = function (key) {
                        var entries = this.__entries__;
                        var index = getIndex(entries, key);
                        if (~index) {
                            entries.splice(index, 1);
                        }
                    };
                    /**
                     * @param {*} key
                     * @returns {void}
                     */
                    class_1.prototype.has = function (key) {
                        return !!~getIndex(this.__entries__, key);
                    };
                    /**
                     * @returns {void}
                     */
                    class_1.prototype.clear = function () {
                        this.__entries__.splice(0);
                    };
                    /**
                     * @param {Function} callback
                     * @param {*} [ctx=null]
                     * @returns {void}
                     */
                    class_1.prototype.forEach = function (callback, ctx) {
                        if (ctx === void 0) {
                            ctx = null;
                        }
                        for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {
                            var entry = _a[_i];
                            callback.call(ctx, entry[1], entry[0]);
                        }
                    };
                    return class_1;
                }()
            );
        }();

        /**
         * Detects whether window and document objects are available in current environment.
         */
        var isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;

        // Returns global object of a current environment.
        var global$1 = function () {
            if (typeof global !== 'undefined' && global.Math === Math) {
                return global;
            }
            if (typeof self !== 'undefined' && self.Math === Math) {
                return self;
            }
            if (typeof window !== 'undefined' && window.Math === Math) {
                return window;
            }
            // eslint-disable-next-line no-new-func
            return Function('return this')();
        }();

        /**
         * A shim for the requestAnimationFrame which falls back to the setTimeout if
         * first one is not supported.
         *
         * @returns {number} Requests' identifier.
         */
        var requestAnimationFrame$1 = function () {
            if (typeof requestAnimationFrame === 'function') {
                // It's required to use a bounded function because IE sometimes throws
                // an "Invalid calling object" error if rAF is invoked without the global
                // object on the left hand side.
                return requestAnimationFrame.bind(global$1);
            }
            return function (callback) {
                return setTimeout(function () {
                    return callback(Date.now());
                }, 1000 / 60);
            };
        }();

        // Defines minimum timeout before adding a trailing call.
        var trailingTimeout = 2;
        /**
         * Creates a wrapper function which ensures that provided callback will be
         * invoked only once during the specified delay period.
         *
         * @param {Function} callback - Function to be invoked after the delay period.
         * @param {number} delay - Delay after which to invoke callback.
         * @returns {Function}
         */
        function throttle(callback, delay) {
            var leadingCall = false,
                trailingCall = false,
                lastCallTime = 0;
            /**
             * Invokes the original callback function and schedules new invocation if
             * the "proxy" was called during current request.
             *
             * @returns {void}
             */
            function resolvePending() {
                if (leadingCall) {
                    leadingCall = false;
                    callback();
                }
                if (trailingCall) {
                    proxy();
                }
            }
            /**
             * Callback invoked after the specified delay. It will further postpone
             * invocation of the original function delegating it to the
             * requestAnimationFrame.
             *
             * @returns {void}
             */
            function timeoutCallback() {
                requestAnimationFrame$1(resolvePending);
            }
            /**
             * Schedules invocation of the original function.
             *
             * @returns {void}
             */
            function proxy() {
                var timeStamp = Date.now();
                if (leadingCall) {
                    // Reject immediately following calls.
                    if (timeStamp - lastCallTime < trailingTimeout) {
                        return;
                    }
                    // Schedule new call to be in invoked when the pending one is resolved.
                    // This is important for "transitions" which never actually start
                    // immediately so there is a chance that we might miss one if change
                    // happens amids the pending invocation.
                    trailingCall = true;
                } else {
                    leadingCall = true;
                    trailingCall = false;
                    setTimeout(timeoutCallback, delay);
                }
                lastCallTime = timeStamp;
            }
            return proxy;
        }

        // Minimum delay before invoking the update of observers.
        var REFRESH_DELAY = 20;
        // A list of substrings of CSS properties used to find transition events that
        // might affect dimensions of observed elements.
        var transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];
        // Check if MutationObserver is available.
        var mutationObserverSupported = typeof MutationObserver !== 'undefined';
        /**
         * Singleton controller class which handles updates of ResizeObserver instances.
         */
        var ResizeObserverController = /** @class */function () {
            /**
             * Creates a new instance of ResizeObserverController.
             *
             * @private
             */
            function ResizeObserverController() {
                /**
                 * Indicates whether DOM listeners have been added.
                 *
                 * @private {boolean}
                 */
                this.connected_ = false;
                /**
                 * Tells that controller has subscribed for Mutation Events.
                 *
                 * @private {boolean}
                 */
                this.mutationEventsAdded_ = false;
                /**
                 * Keeps reference to the instance of MutationObserver.
                 *
                 * @private {MutationObserver}
                 */
                this.mutationsObserver_ = null;
                /**
                 * A list of connected observers.
                 *
                 * @private {Array<ResizeObserverSPI>}
                 */
                this.observers_ = [];
                this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);
                this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);
            }
            /**
             * Adds observer to observers list.
             *
             * @param {ResizeObserverSPI} observer - Observer to be added.
             * @returns {void}
             */
            ResizeObserverController.prototype.addObserver = function (observer) {
                if (!~this.observers_.indexOf(observer)) {
                    this.observers_.push(observer);
                }
                // Add listeners if they haven't been added yet.
                if (!this.connected_) {
                    this.connect_();
                }
            };
            /**
             * Removes observer from observers list.
             *
             * @param {ResizeObserverSPI} observer - Observer to be removed.
             * @returns {void}
             */
            ResizeObserverController.prototype.removeObserver = function (observer) {
                var observers = this.observers_;
                var index = observers.indexOf(observer);
                // Remove observer if it's present in registry.
                if (~index) {
                    observers.splice(index, 1);
                }
                // Remove listeners if controller has no connected observers.
                if (!observers.length && this.connected_) {
                    this.disconnect_();
                }
            };
            /**
             * Invokes the update of observers. It will continue running updates insofar
             * it detects changes.
             *
             * @returns {void}
             */
            ResizeObserverController.prototype.refresh = function () {
                var changesDetected = this.updateObservers_();
                // Continue running updates if changes have been detected as there might
                // be future ones caused by CSS transitions.
                if (changesDetected) {
                    this.refresh();
                }
            };
            /**
             * Updates every observer from observers list and notifies them of queued
             * entries.
             *
             * @private
             * @returns {boolean} Returns "true" if any observer has detected changes in
             *      dimensions of it's elements.
             */
            ResizeObserverController.prototype.updateObservers_ = function () {
                // Collect observers that have active observations.
                var activeObservers = this.observers_.filter(function (observer) {
                    return observer.gatherActive(), observer.hasActive();
                });
                // Deliver notifications in a separate cycle in order to avoid any
                // collisions between observers, e.g. when multiple instances of
                // ResizeObserver are tracking the same element and the callback of one
                // of them changes content dimensions of the observed target. Sometimes
                // this may result in notifications being blocked for the rest of observers.
                activeObservers.forEach(function (observer) {
                    return observer.broadcastActive();
                });
                return activeObservers.length > 0;
            };
            /**
             * Initializes DOM listeners.
             *
             * @private
             * @returns {void}
             */
            ResizeObserverController.prototype.connect_ = function () {
                // Do nothing if running in a non-browser environment or if listeners
                // have been already added.
                if (!isBrowser || this.connected_) {
                    return;
                }
                // Subscription to the "Transitionend" event is used as a workaround for
                // delayed transitions. This way it's possible to capture at least the
                // final state of an element.
                document.addEventListener('transitionend', this.onTransitionEnd_);
                window.addEventListener('resize', this.refresh);
                if (mutationObserverSupported) {
                    this.mutationsObserver_ = new MutationObserver(this.refresh);
                    this.mutationsObserver_.observe(document, {
                        attributes: true,
                        childList: true,
                        characterData: true,
                        subtree: true
                    });
                } else {
                    document.addEventListener('DOMSubtreeModified', this.refresh);
                    this.mutationEventsAdded_ = true;
                }
                this.connected_ = true;
            };
            /**
             * Removes DOM listeners.
             *
             * @private
             * @returns {void}
             */
            ResizeObserverController.prototype.disconnect_ = function () {
                // Do nothing if running in a non-browser environment or if listeners
                // have been already removed.
                if (!isBrowser || !this.connected_) {
                    return;
                }
                document.removeEventListener('transitionend', this.onTransitionEnd_);
                window.removeEventListener('resize', this.refresh);
                if (this.mutationsObserver_) {
                    this.mutationsObserver_.disconnect();
                }
                if (this.mutationEventsAdded_) {
                    document.removeEventListener('DOMSubtreeModified', this.refresh);
                }
                this.mutationsObserver_ = null;
                this.mutationEventsAdded_ = false;
                this.connected_ = false;
            };
            /**
             * "Transitionend" event handler.
             *
             * @private
             * @param {TransitionEvent} event
             * @returns {void}
             */
            ResizeObserverController.prototype.onTransitionEnd_ = function (_a) {
                var _b = _a.propertyName,
                    propertyName = _b === void 0 ? '' : _b;
                // Detect whether transition may affect dimensions of an element.
                var isReflowProperty = transitionKeys.some(function (key) {
                    return !!~propertyName.indexOf(key);
                });
                if (isReflowProperty) {
                    this.refresh();
                }
            };
            /**
             * Returns instance of the ResizeObserverController.
             *
             * @returns {ResizeObserverController}
             */
            ResizeObserverController.getInstance = function () {
                if (!this.instance_) {
                    this.instance_ = new ResizeObserverController();
                }
                return this.instance_;
            };
            /**
             * Holds reference to the controller's instance.
             *
             * @private {ResizeObserverController}
             */
            ResizeObserverController.instance_ = null;
            return ResizeObserverController;
        }();

        /**
         * Defines non-writable/enumerable properties of the provided target object.
         *
         * @param {Object} target - Object for which to define properties.
         * @param {Object} props - Properties to be defined.
         * @returns {Object} Target object.
         */
        var defineConfigurable = function (target, props) {
            for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {
                var key = _a[_i];
                Object.defineProperty(target, key, {
                    value: props[key],
                    enumerable: false,
                    writable: false,
                    configurable: true
                });
            }
            return target;
        };

        /**
         * Returns the global object associated with provided element.
         *
         * @param {Object} target
         * @returns {Object}
         */
        var getWindowOf = function (target) {
            // Assume that the element is an instance of Node, which means that it
            // has the "ownerDocument" property from which we can retrieve a
            // corresponding global object.
            var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;
            // Return the local global object if it's not possible extract one from
            // provided element.
            return ownerGlobal || global$1;
        };

        // Placeholder of an empty content rectangle.
        var emptyRect = createRectInit(0, 0, 0, 0);
        /**
         * Converts provided string to a number.
         *
         * @param {number|string} value
         * @returns {number}
         */
        function toFloat(value) {
            return parseFloat(value) || 0;
        }
        /**
         * Extracts borders size from provided styles.
         *
         * @param {CSSStyleDeclaration} styles
         * @param {...string} positions - Borders positions (top, right, ...)
         * @returns {number}
         */
        function getBordersSize(styles) {
            var positions = [];
            for (var _i = 1; _i < arguments.length; _i++) {
                positions[_i - 1] = arguments[_i];
            }
            return positions.reduce(function (size, position) {
                var value = styles['border-' + position + '-width'];
                return size + toFloat(value);
            }, 0);
        }
        /**
         * Extracts paddings sizes from provided styles.
         *
         * @param {CSSStyleDeclaration} styles
         * @returns {Object} Paddings box.
         */
        function getPaddings(styles) {
            var positions = ['top', 'right', 'bottom', 'left'];
            var paddings = {};
            for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {
                var position = positions_1[_i];
                var value = styles['padding-' + position];
                paddings[position] = toFloat(value);
            }
            return paddings;
        }
        /**
         * Calculates content rectangle of provided SVG element.
         *
         * @param {SVGGraphicsElement} target - Element content rectangle of which needs
         *      to be calculated.
         * @returns {DOMRectInit}
         */
        function getSVGContentRect(target) {
            var bbox = target.getBBox();
            return createRectInit(0, 0, bbox.width, bbox.height);
        }
        /**
         * Calculates content rectangle of provided HTMLElement.
         *
         * @param {HTMLElement} target - Element for which to calculate the content rectangle.
         * @returns {DOMRectInit}
         */
        function getHTMLElementContentRect(target) {
            // Client width & height properties can't be
            // used exclusively as they provide rounded values.
            var clientWidth = target.clientWidth,
                clientHeight = target.clientHeight;
            // By this condition we can catch all non-replaced inline, hidden and
            // detached elements. Though elements with width & height properties less
            // than 0.5 will be discarded as well.
            //
            // Without it we would need to implement separate methods for each of
            // those cases and it's not possible to perform a precise and performance
            // effective test for hidden elements. E.g. even jQuery's ':visible' filter
            // gives wrong results for elements with width & height less than 0.5.
            if (!clientWidth && !clientHeight) {
                return emptyRect;
            }
            var styles = getWindowOf(target).getComputedStyle(target);
            var paddings = getPaddings(styles);
            var horizPad = paddings.left + paddings.right;
            var vertPad = paddings.top + paddings.bottom;
            // Computed styles of width & height are being used because they are the
            // only dimensions available to JS that contain non-rounded values. It could
            // be possible to utilize the getBoundingClientRect if only it's data wasn't
            // affected by CSS transformations let alone paddings, borders and scroll bars.
            var width = toFloat(styles.width),
                height = toFloat(styles.height);
            // Width & height include paddings and borders when the 'border-box' box
            // model is applied (except for IE).
            if (styles.boxSizing === 'border-box') {
                // Following conditions are required to handle Internet Explorer which
                // doesn't include paddings and borders to computed CSS dimensions.
                //
                // We can say that if CSS dimensions + paddings are equal to the "client"
                // properties then it's either IE, and thus we don't need to subtract
                // anything, or an element merely doesn't have paddings/borders styles.
                if (Math.round(width + horizPad) !== clientWidth) {
                    width -= getBordersSize(styles, 'left', 'right') + horizPad;
                }
                if (Math.round(height + vertPad) !== clientHeight) {
                    height -= getBordersSize(styles, 'top', 'bottom') + vertPad;
                }
            }
            // Following steps can't be applied to the document's root element as its
            // client[Width/Height] properties represent viewport area of the window.
            // Besides, it's as well not necessary as the <html> itself neither has
            // rendered scroll bars nor it can be clipped.
            if (!isDocumentElement(target)) {
                // In some browsers (only in Firefox, actually) CSS width & height
                // include scroll bars size which can be removed at this step as scroll
                // bars are the only difference between rounded dimensions + paddings
                // and "client" properties, though that is not always true in Chrome.
                var vertScrollbar = Math.round(width + horizPad) - clientWidth;
                var horizScrollbar = Math.round(height + vertPad) - clientHeight;
                // Chrome has a rather weird rounding of "client" properties.
                // E.g. for an element with content width of 314.2px it sometimes gives
                // the client width of 315px and for the width of 314.7px it may give
                // 314px. And it doesn't happen all the time. So just ignore this delta
                // as a non-relevant.
                if (Math.abs(vertScrollbar) !== 1) {
                    width -= vertScrollbar;
                }
                if (Math.abs(horizScrollbar) !== 1) {
                    height -= horizScrollbar;
                }
            }
            return createRectInit(paddings.left, paddings.top, width, height);
        }
        /**
         * Checks whether provided element is an instance of the SVGGraphicsElement.
         *
         * @param {Element} target - Element to be checked.
         * @returns {boolean}
         */
        var isSVGGraphicsElement = function () {
            // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement
            // interface.
            if (typeof SVGGraphicsElement !== 'undefined') {
                return function (target) {
                    return target instanceof getWindowOf(target).SVGGraphicsElement;
                };
            }
            // If it's so, then check that element is at least an instance of the
            // SVGElement and that it has the "getBBox" method.
            // eslint-disable-next-line no-extra-parens
            return function (target) {
                return target instanceof getWindowOf(target).SVGElement && typeof target.getBBox === 'function';
            };
        }();
        /**
         * Checks whether provided element is a document element (<html>).
         *
         * @param {Element} target - Element to be checked.
         * @returns {boolean}
         */
        function isDocumentElement(target) {
            return target === getWindowOf(target).document.documentElement;
        }
        /**
         * Calculates an appropriate content rectangle for provided html or svg element.
         *
         * @param {Element} target - Element content rectangle of which needs to be calculated.
         * @returns {DOMRectInit}
         */
        function getContentRect(target) {
            if (!isBrowser) {
                return emptyRect;
            }
            if (isSVGGraphicsElement(target)) {
                return getSVGContentRect(target);
            }
            return getHTMLElementContentRect(target);
        }
        /**
         * Creates rectangle with an interface of the DOMRectReadOnly.
         * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly
         *
         * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.
         * @returns {DOMRectReadOnly}
         */
        function createReadOnlyRect(_a) {
            var x = _a.x,
                y = _a.y,
                width = _a.width,
                height = _a.height;
            // If DOMRectReadOnly is available use it as a prototype for the rectangle.
            var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;
            var rect = Object.create(Constr.prototype);
            // Rectangle's properties are not writable and non-enumerable.
            defineConfigurable(rect, {
                x: x, y: y, width: width, height: height,
                top: y,
                right: x + width,
                bottom: height + y,
                left: x
            });
            return rect;
        }
        /**
         * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.
         * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit
         *
         * @param {number} x - X coordinate.
         * @param {number} y - Y coordinate.
         * @param {number} width - Rectangle's width.
         * @param {number} height - Rectangle's height.
         * @returns {DOMRectInit}
         */
        function createRectInit(x, y, width, height) {
            return { x: x, y: y, width: width, height: height };
        }

        /**
         * Class that is responsible for computations of the content rectangle of
         * provided DOM element and for keeping track of it's changes.
         */
        var ResizeObservation = /** @class */function () {
            /**
             * Creates an instance of ResizeObservation.
             *
             * @param {Element} target - Element to be observed.
             */
            function ResizeObservation(target) {
                /**
                 * Broadcasted width of content rectangle.
                 *
                 * @type {number}
                 */
                this.broadcastWidth = 0;
                /**
                 * Broadcasted height of content rectangle.
                 *
                 * @type {number}
                 */
                this.broadcastHeight = 0;
                /**
                 * Reference to the last observed content rectangle.
                 *
                 * @private {DOMRectInit}
                 */
                this.contentRect_ = createRectInit(0, 0, 0, 0);
                this.target = target;
            }
            /**
             * Updates content rectangle and tells whether it's width or height properties
             * have changed since the last broadcast.
             *
             * @returns {boolean}
             */
            ResizeObservation.prototype.isActive = function () {
                var rect = getContentRect(this.target);
                this.contentRect_ = rect;
                return rect.width !== this.broadcastWidth || rect.height !== this.broadcastHeight;
            };
            /**
             * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data
             * from the corresponding properties of the last observed content rectangle.
             *
             * @returns {DOMRectInit} Last observed content rectangle.
             */
            ResizeObservation.prototype.broadcastRect = function () {
                var rect = this.contentRect_;
                this.broadcastWidth = rect.width;
                this.broadcastHeight = rect.height;
                return rect;
            };
            return ResizeObservation;
        }();

        var ResizeObserverEntry = /** @class */function () {
            /**
             * Creates an instance of ResizeObserverEntry.
             *
             * @param {Element} target - Element that is being observed.
             * @param {DOMRectInit} rectInit - Data of the element's content rectangle.
             */
            function ResizeObserverEntry(target, rectInit) {
                var contentRect = createReadOnlyRect(rectInit);
                // According to the specification following properties are not writable
                // and are also not enumerable in the native implementation.
                //
                // Property accessors are not being used as they'd require to define a
                // private WeakMap storage which may cause memory leaks in browsers that
                // don't support this type of collections.
                defineConfigurable(this, { target: target, contentRect: contentRect });
            }
            return ResizeObserverEntry;
        }();

        var ResizeObserverSPI = /** @class */function () {
            /**
             * Creates a new instance of ResizeObserver.
             *
             * @param {ResizeObserverCallback} callback - Callback function that is invoked
             *      when one of the observed elements changes it's content dimensions.
             * @param {ResizeObserverController} controller - Controller instance which
             *      is responsible for the updates of observer.
             * @param {ResizeObserver} callbackCtx - Reference to the public
             *      ResizeObserver instance which will be passed to callback function.
             */
            function ResizeObserverSPI(callback, controller, callbackCtx) {
                /**
                 * Collection of resize observations that have detected changes in dimensions
                 * of elements.
                 *
                 * @private {Array<ResizeObservation>}
                 */
                this.activeObservations_ = [];
                /**
                 * Registry of the ResizeObservation instances.
                 *
                 * @private {Map<Element, ResizeObservation>}
                 */
                this.observations_ = new MapShim();
                if (typeof callback !== 'function') {
                    throw new TypeError('The callback provided as parameter 1 is not a function.');
                }
                this.callback_ = callback;
                this.controller_ = controller;
                this.callbackCtx_ = callbackCtx;
            }
            /**
             * Starts observing provided element.
             *
             * @param {Element} target - Element to be observed.
             * @returns {void}
             */
            ResizeObserverSPI.prototype.observe = function (target) {
                if (!arguments.length) {
                    throw new TypeError('1 argument required, but only 0 present.');
                }
                // Do nothing if current environment doesn't have the Element interface.
                if (typeof Element === 'undefined' || !(Element instanceof Object)) {
                    return;
                }
                if (!(target instanceof getWindowOf(target).Element)) {
                    throw new TypeError('parameter 1 is not of type "Element".');
                }
                var observations = this.observations_;
                // Do nothing if element is already being observed.
                if (observations.has(target)) {
                    return;
                }
                observations.set(target, new ResizeObservation(target));
                this.controller_.addObserver(this);
                // Force the update of observations.
                this.controller_.refresh();
            };
            /**
             * Stops observing provided element.
             *
             * @param {Element} target - Element to stop observing.
             * @returns {void}
             */
            ResizeObserverSPI.prototype.unobserve = function (target) {
                if (!arguments.length) {
                    throw new TypeError('1 argument required, but only 0 present.');
                }
                // Do nothing if current environment doesn't have the Element interface.
                if (typeof Element === 'undefined' || !(Element instanceof Object)) {
                    return;
                }
                if (!(target instanceof getWindowOf(target).Element)) {
                    throw new TypeError('parameter 1 is not of type "Element".');
                }
                var observations = this.observations_;
                // Do nothing if element is not being observed.
                if (!observations.has(target)) {
                    return;
                }
                observations.delete(target);
                if (!observations.size) {
                    this.controller_.removeObserver(this);
                }
            };
            /**
             * Stops observing all elements.
             *
             * @returns {void}
             */
            ResizeObserverSPI.prototype.disconnect = function () {
                this.clearActive();
                this.observations_.clear();
                this.controller_.removeObserver(this);
            };
            /**
             * Collects observation instances the associated element of which has changed
             * it's content rectangle.
             *
             * @returns {void}
             */
            ResizeObserverSPI.prototype.gatherActive = function () {
                var _this = this;
                this.clearActive();
                this.observations_.forEach(function (observation) {
                    if (observation.isActive()) {
                        _this.activeObservations_.push(observation);
                    }
                });
            };
            /**
             * Invokes initial callback function with a list of ResizeObserverEntry
             * instances collected from active resize observations.
             *
             * @returns {void}
             */
            ResizeObserverSPI.prototype.broadcastActive = function () {
                // Do nothing if observer doesn't have active observations.
                if (!this.hasActive()) {
                    return;
                }
                var ctx = this.callbackCtx_;
                // Create ResizeObserverEntry instance for every active observation.
                var entries = this.activeObservations_.map(function (observation) {
                    return new ResizeObserverEntry(observation.target, observation.broadcastRect());
                });
                this.callback_.call(ctx, entries, ctx);
                this.clearActive();
            };
            /**
             * Clears the collection of active observations.
             *
             * @returns {void}
             */
            ResizeObserverSPI.prototype.clearActive = function () {
                this.activeObservations_.splice(0);
            };
            /**
             * Tells whether observer has active observations.
             *
             * @returns {boolean}
             */
            ResizeObserverSPI.prototype.hasActive = function () {
                return this.activeObservations_.length > 0;
            };
            return ResizeObserverSPI;
        }();

        // Registry of internal observers. If WeakMap is not available use current shim
        // for the Map collection as it has all required methods and because WeakMap
        // can't be fully polyfilled anyway.
        var observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();
        /**
         * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation
         * exposing only those methods and properties that are defined in the spec.
         */
        var ResizeObserver = /** @class */function () {
            /**
             * Creates a new instance of ResizeObserver.
             *
             * @param {ResizeObserverCallback} callback - Callback that is invoked when
             *      dimensions of the observed elements change.
             */
            function ResizeObserver(callback) {
                if (!(this instanceof ResizeObserver)) {
                    throw new TypeError('Cannot call a class as a function.');
                }
                if (!arguments.length) {
                    throw new TypeError('1 argument required, but only 0 present.');
                }
                var controller = ResizeObserverController.getInstance();
                var observer = new ResizeObserverSPI(callback, controller, this);
                observers.set(this, observer);
            }
            return ResizeObserver;
        }();
        // Expose public methods of ResizeObserver.
        ['observe', 'unobserve', 'disconnect'].forEach(function (method) {
            ResizeObserver.prototype[method] = function () {
                var _a;
                return (_a = observers.get(this))[method].apply(_a, arguments);
            };
        });

        var index = function () {
            // Export existing implementation if available.
            if (typeof global$1.ResizeObserver !== 'undefined') {
                return global$1.ResizeObserver;
            }
            return ResizeObserver;
        }();

        return index;
    });
});
System.registerDynamic("npm:resize-observer-polyfill@1.5.1.js", ["npm:resize-observer-polyfill@1.5.1/dist/ResizeObserver.js"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("npm:resize-observer-polyfill@1.5.1/dist/ResizeObserver.js");
});
System.registerDynamic("npm:react-dom@16.7.0/cjs/react-dom.production.min.js", ["npm:react@16.7.0.js", "npm:object-assign@4.1.1.js", "npm:scheduler@0.12.0.js"], true, function ($__require, exports, module) {
  /** @license React v16.7.0
   * react-dom.production.min.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   */

  /*
   Modernizr 3.0.0pre (Custom Build) | MIT
  */
  'use strict';
  var global = this || self,
      GLOBAL = global;
  var aa = $__require("npm:react@16.7.0.js"),
      n = $__require("npm:object-assign@4.1.1.js"),
      ba = $__require("npm:scheduler@0.12.0.js");function ca(a, b, c, d, e, f, g, h) {
    if (!a) {
      a = void 0;if (void 0 === b) a = Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else {
        var k = [c, d, e, f, g, h],
            l = 0;a = Error(b.replace(/%s/g, function () {
          return k[l++];
        }));a.name = "Invariant Violation";
      }a.framesToPop = 1;throw a;
    }
  }
  function t(a) {
    for (var b = arguments.length - 1, c = "https://reactjs.org/docs/error-decoder.html?invariant=" + a, d = 0; d < b; d++) c += "&args[]=" + encodeURIComponent(arguments[d + 1]);ca(!1, "Minified React error #" + a + "; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ", c);
  }aa ? void 0 : t("227");function da(a, b, c, d, e, f, g, h, k) {
    var l = Array.prototype.slice.call(arguments, 3);try {
      b.apply(c, l);
    } catch (m) {
      this.onError(m);
    }
  }
  var ea = !1,
      fa = null,
      ha = !1,
      ia = null,
      ja = { onError: function (a) {
      ea = !0;fa = a;
    } };function ka(a, b, c, d, e, f, g, h, k) {
    ea = !1;fa = null;da.apply(ja, arguments);
  }function la(a, b, c, d, e, f, g, h, k) {
    ka.apply(this, arguments);if (ea) {
      if (ea) {
        var l = fa;ea = !1;fa = null;
      } else t("198"), l = void 0;ha || (ha = !0, ia = l);
    }
  }var ma = null,
      na = {};
  function oa() {
    if (ma) for (var a in na) {
      var b = na[a],
          c = ma.indexOf(a);-1 < c ? void 0 : t("96", a);if (!pa[c]) {
        b.extractEvents ? void 0 : t("97", a);pa[c] = b;c = b.eventTypes;for (var d in c) {
          var e = void 0;var f = c[d],
              g = b,
              h = d;qa.hasOwnProperty(h) ? t("99", h) : void 0;qa[h] = f;var k = f.phasedRegistrationNames;if (k) {
            for (e in k) k.hasOwnProperty(e) && ra(k[e], g, h);e = !0;
          } else f.registrationName ? (ra(f.registrationName, g, h), e = !0) : e = !1;e ? void 0 : t("98", d, a);
        }
      }
    }
  }
  function ra(a, b, c) {
    sa[a] ? t("100", a) : void 0;sa[a] = b;ta[a] = b.eventTypes[c].dependencies;
  }var pa = [],
      qa = {},
      sa = {},
      ta = {},
      ua = null,
      va = null,
      wa = null;function xa(a, b, c) {
    var d = a.type || "unknown-event";a.currentTarget = wa(c);la(d, b, void 0, a);a.currentTarget = null;
  }function ya(a, b) {
    null == b ? t("30") : void 0;if (null == a) return b;if (Array.isArray(a)) {
      if (Array.isArray(b)) return a.push.apply(a, b), a;a.push(b);return a;
    }return Array.isArray(b) ? [a].concat(b) : [a, b];
  }
  function za(a, b, c) {
    Array.isArray(a) ? a.forEach(b, c) : a && b.call(c, a);
  }var Aa = null;function Ba(a) {
    if (a) {
      var b = a._dispatchListeners,
          c = a._dispatchInstances;if (Array.isArray(b)) for (var d = 0; d < b.length && !a.isPropagationStopped(); d++) xa(a, b[d], c[d]);else b && xa(a, b, c);a._dispatchListeners = null;a._dispatchInstances = null;a.isPersistent() || a.constructor.release(a);
    }
  }
  var Ca = { injectEventPluginOrder: function (a) {
      ma ? t("101") : void 0;ma = Array.prototype.slice.call(a);oa();
    }, injectEventPluginsByName: function (a) {
      var b = !1,
          c;for (c in a) if (a.hasOwnProperty(c)) {
        var d = a[c];na.hasOwnProperty(c) && na[c] === d || (na[c] ? t("102", c) : void 0, na[c] = d, b = !0);
      }b && oa();
    } };
  function Da(a, b) {
    var c = a.stateNode;if (!c) return null;var d = ua(c);if (!d) return null;c = d[b];a: switch (b) {case "onClick":case "onClickCapture":case "onDoubleClick":case "onDoubleClickCapture":case "onMouseDown":case "onMouseDownCapture":case "onMouseMove":case "onMouseMoveCapture":case "onMouseUp":case "onMouseUpCapture":
        (d = !d.disabled) || (a = a.type, d = !("button" === a || "input" === a || "select" === a || "textarea" === a));a = !d;break a;default:
        a = !1;}if (a) return null;c && "function" !== typeof c ? t("231", b, typeof c) : void 0;
    return c;
  }function Ea(a) {
    null !== a && (Aa = ya(Aa, a));a = Aa;Aa = null;if (a && (za(a, Ba), Aa ? t("95") : void 0, ha)) throw a = ia, ha = !1, ia = null, a;
  }var Fa = Math.random().toString(36).slice(2),
      Ga = "__reactInternalInstance$" + Fa,
      Ha = "__reactEventHandlers$" + Fa;function Ia(a) {
    if (a[Ga]) return a[Ga];for (; !a[Ga];) if (a.parentNode) a = a.parentNode;else return null;a = a[Ga];return 5 === a.tag || 6 === a.tag ? a : null;
  }function Ja(a) {
    a = a[Ga];return !a || 5 !== a.tag && 6 !== a.tag ? null : a;
  }
  function Ka(a) {
    if (5 === a.tag || 6 === a.tag) return a.stateNode;t("33");
  }function La(a) {
    return a[Ha] || null;
  }function Ma(a) {
    do a = a.return; while (a && 5 !== a.tag);return a ? a : null;
  }function Na(a, b, c) {
    if (b = Da(a, c.dispatchConfig.phasedRegistrationNames[b])) c._dispatchListeners = ya(c._dispatchListeners, b), c._dispatchInstances = ya(c._dispatchInstances, a);
  }
  function Oa(a) {
    if (a && a.dispatchConfig.phasedRegistrationNames) {
      for (var b = a._targetInst, c = []; b;) c.push(b), b = Ma(b);for (b = c.length; 0 < b--;) Na(c[b], "captured", a);for (b = 0; b < c.length; b++) Na(c[b], "bubbled", a);
    }
  }function Pa(a, b, c) {
    a && c && c.dispatchConfig.registrationName && (b = Da(a, c.dispatchConfig.registrationName)) && (c._dispatchListeners = ya(c._dispatchListeners, b), c._dispatchInstances = ya(c._dispatchInstances, a));
  }function Qa(a) {
    a && a.dispatchConfig.registrationName && Pa(a._targetInst, null, a);
  }
  function Ra(a) {
    za(a, Oa);
  }var Sa = !("undefined" === typeof window || !window.document || !window.document.createElement);function Ta(a, b) {
    var c = {};c[a.toLowerCase()] = b.toLowerCase();c["Webkit" + a] = "webkit" + b;c["Moz" + a] = "moz" + b;return c;
  }var Ua = { animationend: Ta("Animation", "AnimationEnd"), animationiteration: Ta("Animation", "AnimationIteration"), animationstart: Ta("Animation", "AnimationStart"), transitionend: Ta("Transition", "TransitionEnd") },
      Va = {},
      Wa = {};
  Sa && (Wa = document.createElement("div").style, "AnimationEvent" in window || (delete Ua.animationend.animation, delete Ua.animationiteration.animation, delete Ua.animationstart.animation), "TransitionEvent" in window || delete Ua.transitionend.transition);function Xa(a) {
    if (Va[a]) return Va[a];if (!Ua[a]) return a;var b = Ua[a],
        c;for (c in b) if (b.hasOwnProperty(c) && c in Wa) return Va[a] = b[c];return a;
  }
  var Ya = Xa("animationend"),
      Za = Xa("animationiteration"),
      $a = Xa("animationstart"),
      ab = Xa("transitionend"),
      bb = "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),
      cb = null,
      eb = null,
      fb = null;
  function gb() {
    if (fb) return fb;var a,
        b = eb,
        c = b.length,
        d,
        e = "value" in cb ? cb.value : cb.textContent,
        f = e.length;for (a = 0; a < c && b[a] === e[a]; a++);var g = c - a;for (d = 1; d <= g && b[c - d] === e[f - d]; d++);return fb = e.slice(a, 1 < d ? 1 - d : void 0);
  }function hb() {
    return !0;
  }function ib() {
    return !1;
  }
  function z(a, b, c, d) {
    this.dispatchConfig = a;this._targetInst = b;this.nativeEvent = c;a = this.constructor.Interface;for (var e in a) a.hasOwnProperty(e) && ((b = a[e]) ? this[e] = b(c) : "target" === e ? this.target = d : this[e] = c[e]);this.isDefaultPrevented = (null != c.defaultPrevented ? c.defaultPrevented : !1 === c.returnValue) ? hb : ib;this.isPropagationStopped = ib;return this;
  }
  n(z.prototype, { preventDefault: function () {
      this.defaultPrevented = !0;var a = this.nativeEvent;a && (a.preventDefault ? a.preventDefault() : "unknown" !== typeof a.returnValue && (a.returnValue = !1), this.isDefaultPrevented = hb);
    }, stopPropagation: function () {
      var a = this.nativeEvent;a && (a.stopPropagation ? a.stopPropagation() : "unknown" !== typeof a.cancelBubble && (a.cancelBubble = !0), this.isPropagationStopped = hb);
    }, persist: function () {
      this.isPersistent = hb;
    }, isPersistent: ib, destructor: function () {
      var a = this.constructor.Interface,
          b;for (b in a) this[b] = null;this.nativeEvent = this._targetInst = this.dispatchConfig = null;this.isPropagationStopped = this.isDefaultPrevented = ib;this._dispatchInstances = this._dispatchListeners = null;
    } });z.Interface = { type: null, target: null, currentTarget: function () {
      return null;
    }, eventPhase: null, bubbles: null, cancelable: null, timeStamp: function (a) {
      return a.timeStamp || Date.now();
    }, defaultPrevented: null, isTrusted: null };
  z.extend = function (a) {
    function b() {}function c() {
      return d.apply(this, arguments);
    }var d = this;b.prototype = d.prototype;var e = new b();n(e, c.prototype);c.prototype = e;c.prototype.constructor = c;c.Interface = n({}, d.Interface, a);c.extend = d.extend;jb(c);return c;
  };jb(z);function kb(a, b, c, d) {
    if (this.eventPool.length) {
      var e = this.eventPool.pop();this.call(e, a, b, c, d);return e;
    }return new this(a, b, c, d);
  }function lb(a) {
    a instanceof this ? void 0 : t("279");a.destructor();10 > this.eventPool.length && this.eventPool.push(a);
  }
  function jb(a) {
    a.eventPool = [];a.getPooled = kb;a.release = lb;
  }var mb = z.extend({ data: null }),
      nb = z.extend({ data: null }),
      ob = [9, 13, 27, 32],
      pb = Sa && "CompositionEvent" in window,
      qb = null;Sa && "documentMode" in document && (qb = document.documentMode);
  var rb = Sa && "TextEvent" in window && !qb,
      sb = Sa && (!pb || qb && 8 < qb && 11 >= qb),
      tb = String.fromCharCode(32),
      ub = { beforeInput: { phasedRegistrationNames: { bubbled: "onBeforeInput", captured: "onBeforeInputCapture" }, dependencies: ["compositionend", "keypress", "textInput", "paste"] }, compositionEnd: { phasedRegistrationNames: { bubbled: "onCompositionEnd", captured: "onCompositionEndCapture" }, dependencies: "blur compositionend keydown keypress keyup mousedown".split(" ") }, compositionStart: { phasedRegistrationNames: { bubbled: "onCompositionStart",
        captured: "onCompositionStartCapture" }, dependencies: "blur compositionstart keydown keypress keyup mousedown".split(" ") }, compositionUpdate: { phasedRegistrationNames: { bubbled: "onCompositionUpdate", captured: "onCompositionUpdateCapture" }, dependencies: "blur compositionupdate keydown keypress keyup mousedown".split(" ") } },
      vb = !1;
  function wb(a, b) {
    switch (a) {case "keyup":
        return -1 !== ob.indexOf(b.keyCode);case "keydown":
        return 229 !== b.keyCode;case "keypress":case "mousedown":case "blur":
        return !0;default:
        return !1;}
  }function xb(a) {
    a = a.detail;return "object" === typeof a && "data" in a ? a.data : null;
  }var yb = !1;function zb(a, b) {
    switch (a) {case "compositionend":
        return xb(b);case "keypress":
        if (32 !== b.which) return null;vb = !0;return tb;case "textInput":
        return a = b.data, a === tb && vb ? null : a;default:
        return null;}
  }
  function Ab(a, b) {
    if (yb) return "compositionend" === a || !pb && wb(a, b) ? (a = gb(), fb = eb = cb = null, yb = !1, a) : null;switch (a) {case "paste":
        return null;case "keypress":
        if (!(b.ctrlKey || b.altKey || b.metaKey) || b.ctrlKey && b.altKey) {
          if (b.char && 1 < b.char.length) return b.char;if (b.which) return String.fromCharCode(b.which);
        }return null;case "compositionend":
        return sb && "ko" !== b.locale ? null : b.data;default:
        return null;}
  }
  var Bb = { eventTypes: ub, extractEvents: function (a, b, c, d) {
      var e = void 0;var f = void 0;if (pb) b: {
        switch (a) {case "compositionstart":
            e = ub.compositionStart;break b;case "compositionend":
            e = ub.compositionEnd;break b;case "compositionupdate":
            e = ub.compositionUpdate;break b;}e = void 0;
      } else yb ? wb(a, c) && (e = ub.compositionEnd) : "keydown" === a && 229 === c.keyCode && (e = ub.compositionStart);e ? (sb && "ko" !== c.locale && (yb || e !== ub.compositionStart ? e === ub.compositionEnd && yb && (f = gb()) : (cb = d, eb = "value" in cb ? cb.value : cb.textContent, yb = !0)), e = mb.getPooled(e, b, c, d), f ? e.data = f : (f = xb(c), null !== f && (e.data = f)), Ra(e), f = e) : f = null;(a = rb ? zb(a, c) : Ab(a, c)) ? (b = nb.getPooled(ub.beforeInput, b, c, d), b.data = a, Ra(b)) : b = null;return null === f ? b : null === b ? f : [f, b];
    } },
      Cb = null,
      Db = null,
      Eb = null;function Hb(a) {
    if (a = va(a)) {
      "function" !== typeof Cb ? t("280") : void 0;var b = ua(a.stateNode);Cb(a.stateNode, a.type, b);
    }
  }function Ib(a) {
    Db ? Eb ? Eb.push(a) : Eb = [a] : Db = a;
  }function Jb() {
    if (Db) {
      var a = Db,
          b = Eb;Eb = Db = null;Hb(a);if (b) for (a = 0; a < b.length; a++) Hb(b[a]);
    }
  }
  function Kb(a, b) {
    return a(b);
  }function Lb(a, b, c) {
    return a(b, c);
  }function Mb() {}var Nb = !1;function Ob(a, b) {
    if (Nb) return a(b);Nb = !0;try {
      return Kb(a, b);
    } finally {
      if (Nb = !1, null !== Db || null !== Eb) Mb(), Jb();
    }
  }var Pb = { color: !0, date: !0, datetime: !0, "datetime-local": !0, email: !0, month: !0, number: !0, password: !0, range: !0, search: !0, tel: !0, text: !0, time: !0, url: !0, week: !0 };function Qb(a) {
    var b = a && a.nodeName && a.nodeName.toLowerCase();return "input" === b ? !!Pb[a.type] : "textarea" === b ? !0 : !1;
  }
  function Rb(a) {
    a = a.target || a.srcElement || window;a.correspondingUseElement && (a = a.correspondingUseElement);return 3 === a.nodeType ? a.parentNode : a;
  }function Sb(a) {
    if (!Sa) return !1;a = "on" + a;var b = a in document;b || (b = document.createElement("div"), b.setAttribute(a, "return;"), b = "function" === typeof b[a]);return b;
  }function Tb(a) {
    var b = a.type;return (a = a.nodeName) && "input" === a.toLowerCase() && ("checkbox" === b || "radio" === b);
  }
  function Ub(a) {
    var b = Tb(a) ? "checked" : "value",
        c = Object.getOwnPropertyDescriptor(a.constructor.prototype, b),
        d = "" + a[b];if (!a.hasOwnProperty(b) && "undefined" !== typeof c && "function" === typeof c.get && "function" === typeof c.set) {
      var e = c.get,
          f = c.set;Object.defineProperty(a, b, { configurable: !0, get: function () {
          return e.call(this);
        }, set: function (a) {
          d = "" + a;f.call(this, a);
        } });Object.defineProperty(a, b, { enumerable: c.enumerable });return { getValue: function () {
          return d;
        }, setValue: function (a) {
          d = "" + a;
        }, stopTracking: function () {
          a._valueTracker = null;delete a[b];
        } };
    }
  }function Vb(a) {
    a._valueTracker || (a._valueTracker = Ub(a));
  }function Wb(a) {
    if (!a) return !1;var b = a._valueTracker;if (!b) return !0;var c = b.getValue();var d = "";a && (d = Tb(a) ? a.checked ? "true" : "false" : a.value);a = d;return a !== c ? (b.setValue(a), !0) : !1;
  }
  var Xb = aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,
      Yb = /^(.*)[\\\/]/,
      D = "function" === typeof Symbol && Symbol.for,
      Zb = D ? Symbol.for("react.element") : 60103,
      $b = D ? Symbol.for("react.portal") : 60106,
      ac = D ? Symbol.for("react.fragment") : 60107,
      bc = D ? Symbol.for("react.strict_mode") : 60108,
      cc = D ? Symbol.for("react.profiler") : 60114,
      dc = D ? Symbol.for("react.provider") : 60109,
      ec = D ? Symbol.for("react.context") : 60110,
      fc = D ? Symbol.for("react.concurrent_mode") : 60111,
      gc = D ? Symbol.for("react.forward_ref") : 60112,
      hc = D ? Symbol.for("react.suspense") : 60113,
      ic = D ? Symbol.for("react.memo") : 60115,
      jc = D ? Symbol.for("react.lazy") : 60116,
      kc = "function" === typeof Symbol && Symbol.iterator;function lc(a) {
    if (null === a || "object" !== typeof a) return null;a = kc && a[kc] || a["@@iterator"];return "function" === typeof a ? a : null;
  }
  function mc(a) {
    if (null == a) return null;if ("function" === typeof a) return a.displayName || a.name || null;if ("string" === typeof a) return a;switch (a) {case fc:
        return "ConcurrentMode";case ac:
        return "Fragment";case $b:
        return "Portal";case cc:
        return "Profiler";case bc:
        return "StrictMode";case hc:
        return "Suspense";}if ("object" === typeof a) switch (a.$$typeof) {case ec:
        return "Context.Consumer";case dc:
        return "Context.Provider";case gc:
        var b = a.render;b = b.displayName || b.name || "";return a.displayName || ("" !== b ? "ForwardRef(" + b + ")" : "ForwardRef");case ic:
        return mc(a.type);case jc:
        if (a = 1 === a._status ? a._result : null) return mc(a);}return null;
  }function nc(a) {
    var b = "";do {
      a: switch (a.tag) {case 3:case 4:case 6:case 7:case 10:case 9:
          var c = "";break a;default:
          var d = a._debugOwner,
              e = a._debugSource,
              f = mc(a.type);c = null;d && (c = mc(d.type));d = f;f = "";e ? f = " (at " + e.fileName.replace(Yb, "") + ":" + e.lineNumber + ")" : c && (f = " (created by " + c + ")");c = "\n    in " + (d || "Unknown") + f;}b += c;a = a.return;
    } while (a);return b;
  }
  var oc = /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,
      pc = Object.prototype.hasOwnProperty,
      qc = {},
      rc = {};
  function sc(a) {
    if (pc.call(rc, a)) return !0;if (pc.call(qc, a)) return !1;if (oc.test(a)) return rc[a] = !0;qc[a] = !0;return !1;
  }function tc(a, b, c, d) {
    if (null !== c && 0 === c.type) return !1;switch (typeof b) {case "function":case "symbol":
        return !0;case "boolean":
        if (d) return !1;if (null !== c) return !c.acceptsBooleans;a = a.toLowerCase().slice(0, 5);return "data-" !== a && "aria-" !== a;default:
        return !1;}
  }
  function uc(a, b, c, d) {
    if (null === b || "undefined" === typeof b || tc(a, b, c, d)) return !0;if (d) return !1;if (null !== c) switch (c.type) {case 3:
        return !b;case 4:
        return !1 === b;case 5:
        return isNaN(b);case 6:
        return isNaN(b) || 1 > b;}return !1;
  }function E(a, b, c, d, e) {
    this.acceptsBooleans = 2 === b || 3 === b || 4 === b;this.attributeName = d;this.attributeNamespace = e;this.mustUseProperty = c;this.propertyName = a;this.type = b;
  }var F = {};
  "children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function (a) {
    F[a] = new E(a, 0, !1, a, null);
  });[["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function (a) {
    var b = a[0];F[b] = new E(b, 1, !1, a[1], null);
  });["contentEditable", "draggable", "spellCheck", "value"].forEach(function (a) {
    F[a] = new E(a, 2, !1, a.toLowerCase(), null);
  });
  ["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function (a) {
    F[a] = new E(a, 2, !1, a, null);
  });"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function (a) {
    F[a] = new E(a, 3, !1, a.toLowerCase(), null);
  });["checked", "multiple", "muted", "selected"].forEach(function (a) {
    F[a] = new E(a, 3, !0, a, null);
  });
  ["capture", "download"].forEach(function (a) {
    F[a] = new E(a, 4, !1, a, null);
  });["cols", "rows", "size", "span"].forEach(function (a) {
    F[a] = new E(a, 6, !1, a, null);
  });["rowSpan", "start"].forEach(function (a) {
    F[a] = new E(a, 5, !1, a.toLowerCase(), null);
  });var vc = /[\-:]([a-z])/g;function wc(a) {
    return a[1].toUpperCase();
  }
  "accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function (a) {
    var b = a.replace(vc, wc);F[b] = new E(b, 1, !1, a, null);
  });"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function (a) {
    var b = a.replace(vc, wc);F[b] = new E(b, 1, !1, a, "http://www.w3.org/1999/xlink");
  });["xml:base", "xml:lang", "xml:space"].forEach(function (a) {
    var b = a.replace(vc, wc);F[b] = new E(b, 1, !1, a, "http://www.w3.org/XML/1998/namespace");
  });F.tabIndex = new E("tabIndex", 1, !1, "tabindex", null);
  function xc(a, b, c, d) {
    var e = F.hasOwnProperty(b) ? F[b] : null;var f = null !== e ? 0 === e.type : d ? !1 : !(2 < b.length) || "o" !== b[0] && "O" !== b[0] || "n" !== b[1] && "N" !== b[1] ? !1 : !0;f || (uc(b, c, e, d) && (c = null), d || null === e ? sc(b) && (null === c ? a.removeAttribute(b) : a.setAttribute(b, "" + c)) : e.mustUseProperty ? a[e.propertyName] = null === c ? 3 === e.type ? !1 : "" : c : (b = e.attributeName, d = e.attributeNamespace, null === c ? a.removeAttribute(b) : (e = e.type, c = 3 === e || 4 === e && !0 === c ? "" : "" + c, d ? a.setAttributeNS(d, b, c) : a.setAttribute(b, c))));
  }
  function yc(a) {
    switch (typeof a) {case "boolean":case "number":case "object":case "string":case "undefined":
        return a;default:
        return "";}
  }function zc(a, b) {
    var c = b.checked;return n({}, b, { defaultChecked: void 0, defaultValue: void 0, value: void 0, checked: null != c ? c : a._wrapperState.initialChecked });
  }
  function Ac(a, b) {
    var c = null == b.defaultValue ? "" : b.defaultValue,
        d = null != b.checked ? b.checked : b.defaultChecked;c = yc(null != b.value ? b.value : c);a._wrapperState = { initialChecked: d, initialValue: c, controlled: "checkbox" === b.type || "radio" === b.type ? null != b.checked : null != b.value };
  }function Bc(a, b) {
    b = b.checked;null != b && xc(a, "checked", b, !1);
  }
  function Cc(a, b) {
    Bc(a, b);var c = yc(b.value),
        d = b.type;if (null != c) {
      if ("number" === d) {
        if (0 === c && "" === a.value || a.value != c) a.value = "" + c;
      } else a.value !== "" + c && (a.value = "" + c);
    } else if ("submit" === d || "reset" === d) {
      a.removeAttribute("value");return;
    }b.hasOwnProperty("value") ? Dc(a, b.type, c) : b.hasOwnProperty("defaultValue") && Dc(a, b.type, yc(b.defaultValue));null == b.checked && null != b.defaultChecked && (a.defaultChecked = !!b.defaultChecked);
  }
  function Ec(a, b, c) {
    if (b.hasOwnProperty("value") || b.hasOwnProperty("defaultValue")) {
      var d = b.type;if (!("submit" !== d && "reset" !== d || void 0 !== b.value && null !== b.value)) return;b = "" + a._wrapperState.initialValue;c || b === a.value || (a.value = b);a.defaultValue = b;
    }c = a.name;"" !== c && (a.name = "");a.defaultChecked = !a.defaultChecked;a.defaultChecked = !!a._wrapperState.initialChecked;"" !== c && (a.name = c);
  }
  function Dc(a, b, c) {
    if ("number" !== b || a.ownerDocument.activeElement !== a) null == c ? a.defaultValue = "" + a._wrapperState.initialValue : a.defaultValue !== "" + c && (a.defaultValue = "" + c);
  }var Fc = { change: { phasedRegistrationNames: { bubbled: "onChange", captured: "onChangeCapture" }, dependencies: "blur change click focus input keydown keyup selectionchange".split(" ") } };function Gc(a, b, c) {
    a = z.getPooled(Fc.change, a, b, c);a.type = "change";Ib(c);Ra(a);return a;
  }var Jc = null,
      Kc = null;function Lc(a) {
    Ea(a);
  }
  function Mc(a) {
    var b = Ka(a);if (Wb(b)) return a;
  }function Nc(a, b) {
    if ("change" === a) return b;
  }var Oc = !1;Sa && (Oc = Sb("input") && (!document.documentMode || 9 < document.documentMode));function Pc() {
    Jc && (Jc.detachEvent("onpropertychange", Qc), Kc = Jc = null);
  }function Qc(a) {
    "value" === a.propertyName && Mc(Kc) && (a = Gc(Kc, a, Rb(a)), Ob(Lc, a));
  }function Rc(a, b, c) {
    "focus" === a ? (Pc(), Jc = b, Kc = c, Jc.attachEvent("onpropertychange", Qc)) : "blur" === a && Pc();
  }function Sc(a) {
    if ("selectionchange" === a || "keyup" === a || "keydown" === a) return Mc(Kc);
  }
  function Tc(a, b) {
    if ("click" === a) return Mc(b);
  }function Uc(a, b) {
    if ("input" === a || "change" === a) return Mc(b);
  }
  var Vc = { eventTypes: Fc, _isInputEventSupported: Oc, extractEvents: function (a, b, c, d) {
      var e = b ? Ka(b) : window,
          f = void 0,
          g = void 0,
          h = e.nodeName && e.nodeName.toLowerCase();"select" === h || "input" === h && "file" === e.type ? f = Nc : Qb(e) ? Oc ? f = Uc : (f = Sc, g = Rc) : (h = e.nodeName) && "input" === h.toLowerCase() && ("checkbox" === e.type || "radio" === e.type) && (f = Tc);if (f && (f = f(a, b))) return Gc(f, c, d);g && g(a, e, b);"blur" === a && (a = e._wrapperState) && a.controlled && "number" === e.type && Dc(e, "number", e.value);
    } },
      Wc = z.extend({ view: null, detail: null }),
      Xc = { Alt: "altKey",
    Control: "ctrlKey", Meta: "metaKey", Shift: "shiftKey" };function Yc(a) {
    var b = this.nativeEvent;return b.getModifierState ? b.getModifierState(a) : (a = Xc[a]) ? !!b[a] : !1;
  }function Zc() {
    return Yc;
  }
  var $c = 0,
      ad = 0,
      bd = !1,
      cd = !1,
      dd = Wc.extend({ screenX: null, screenY: null, clientX: null, clientY: null, pageX: null, pageY: null, ctrlKey: null, shiftKey: null, altKey: null, metaKey: null, getModifierState: Zc, button: null, buttons: null, relatedTarget: function (a) {
      return a.relatedTarget || (a.fromElement === a.srcElement ? a.toElement : a.fromElement);
    }, movementX: function (a) {
      if ("movementX" in a) return a.movementX;var b = $c;$c = a.screenX;return bd ? "mousemove" === a.type ? a.screenX - b : 0 : (bd = !0, 0);
    }, movementY: function (a) {
      if ("movementY" in a) return a.movementY;
      var b = ad;ad = a.screenY;return cd ? "mousemove" === a.type ? a.screenY - b : 0 : (cd = !0, 0);
    } }),
      ed = dd.extend({ pointerId: null, width: null, height: null, pressure: null, tangentialPressure: null, tiltX: null, tiltY: null, twist: null, pointerType: null, isPrimary: null }),
      fd = { mouseEnter: { registrationName: "onMouseEnter", dependencies: ["mouseout", "mouseover"] }, mouseLeave: { registrationName: "onMouseLeave", dependencies: ["mouseout", "mouseover"] }, pointerEnter: { registrationName: "onPointerEnter", dependencies: ["pointerout", "pointerover"] }, pointerLeave: { registrationName: "onPointerLeave",
      dependencies: ["pointerout", "pointerover"] } },
      gd = { eventTypes: fd, extractEvents: function (a, b, c, d) {
      var e = "mouseover" === a || "pointerover" === a,
          f = "mouseout" === a || "pointerout" === a;if (e && (c.relatedTarget || c.fromElement) || !f && !e) return null;e = d.window === d ? d : (e = d.ownerDocument) ? e.defaultView || e.parentWindow : window;f ? (f = b, b = (b = c.relatedTarget || c.toElement) ? Ia(b) : null) : f = null;if (f === b) return null;var g = void 0,
          h = void 0,
          k = void 0,
          l = void 0;if ("mouseout" === a || "mouseover" === a) g = dd, h = fd.mouseLeave, k = fd.mouseEnter, l = "mouse";else if ("pointerout" === a || "pointerover" === a) g = ed, h = fd.pointerLeave, k = fd.pointerEnter, l = "pointer";var m = null == f ? e : Ka(f);e = null == b ? e : Ka(b);a = g.getPooled(h, f, c, d);a.type = l + "leave";a.target = m;a.relatedTarget = e;c = g.getPooled(k, b, c, d);c.type = l + "enter";c.target = e;c.relatedTarget = m;d = b;if (f && d) a: {
        b = f;e = d;l = 0;for (g = b; g; g = Ma(g)) l++;g = 0;for (k = e; k; k = Ma(k)) g++;for (; 0 < l - g;) b = Ma(b), l--;for (; 0 < g - l;) e = Ma(e), g--;for (; l--;) {
          if (b === e || b === e.alternate) break a;b = Ma(b);e = Ma(e);
        }b = null;
      } else b = null;e = b;for (b = []; f && f !== e;) {
        l = f.alternate;if (null !== l && l === e) break;b.push(f);f = Ma(f);
      }for (f = []; d && d !== e;) {
        l = d.alternate;if (null !== l && l === e) break;f.push(d);d = Ma(d);
      }for (d = 0; d < b.length; d++) Pa(b[d], "bubbled", a);for (d = f.length; 0 < d--;) Pa(f[d], "captured", c);return [a, c];
    } },
      hd = Object.prototype.hasOwnProperty;function id(a, b) {
    return a === b ? 0 !== a || 0 !== b || 1 / a === 1 / b : a !== a && b !== b;
  }
  function jd(a, b) {
    if (id(a, b)) return !0;if ("object" !== typeof a || null === a || "object" !== typeof b || null === b) return !1;var c = Object.keys(a),
        d = Object.keys(b);if (c.length !== d.length) return !1;for (d = 0; d < c.length; d++) if (!hd.call(b, c[d]) || !id(a[c[d]], b[c[d]])) return !1;return !0;
  }function kd(a) {
    var b = a;if (a.alternate) for (; b.return;) b = b.return;else {
      if (0 !== (b.effectTag & 2)) return 1;for (; b.return;) if (b = b.return, 0 !== (b.effectTag & 2)) return 1;
    }return 3 === b.tag ? 2 : 3;
  }function ld(a) {
    2 !== kd(a) ? t("188") : void 0;
  }
  function md(a) {
    var b = a.alternate;if (!b) return b = kd(a), 3 === b ? t("188") : void 0, 1 === b ? null : a;for (var c = a, d = b;;) {
      var e = c.return,
          f = e ? e.alternate : null;if (!e || !f) break;if (e.child === f.child) {
        for (var g = e.child; g;) {
          if (g === c) return ld(e), a;if (g === d) return ld(e), b;g = g.sibling;
        }t("188");
      }if (c.return !== d.return) c = e, d = f;else {
        g = !1;for (var h = e.child; h;) {
          if (h === c) {
            g = !0;c = e;d = f;break;
          }if (h === d) {
            g = !0;d = e;c = f;break;
          }h = h.sibling;
        }if (!g) {
          for (h = f.child; h;) {
            if (h === c) {
              g = !0;c = f;d = e;break;
            }if (h === d) {
              g = !0;d = f;c = e;break;
            }h = h.sibling;
          }g ? void 0 : t("189");
        }
      }c.alternate !== d ? t("190") : void 0;
    }3 !== c.tag ? t("188") : void 0;return c.stateNode.current === c ? a : b;
  }function nd(a) {
    a = md(a);if (!a) return null;for (var b = a;;) {
      if (5 === b.tag || 6 === b.tag) return b;if (b.child) b.child.return = b, b = b.child;else {
        if (b === a) break;for (; !b.sibling;) {
          if (!b.return || b.return === a) return null;b = b.return;
        }b.sibling.return = b.return;b = b.sibling;
      }
    }return null;
  }
  var od = z.extend({ animationName: null, elapsedTime: null, pseudoElement: null }),
      pd = z.extend({ clipboardData: function (a) {
      return "clipboardData" in a ? a.clipboardData : window.clipboardData;
    } }),
      qd = Wc.extend({ relatedTarget: null });function rd(a) {
    var b = a.keyCode;"charCode" in a ? (a = a.charCode, 0 === a && 13 === b && (a = 13)) : a = b;10 === a && (a = 13);return 32 <= a || 13 === a ? a : 0;
  }
  var sd = { Esc: "Escape", Spacebar: " ", Left: "ArrowLeft", Up: "ArrowUp", Right: "ArrowRight", Down: "ArrowDown", Del: "Delete", Win: "OS", Menu: "ContextMenu", Apps: "ContextMenu", Scroll: "ScrollLock", MozPrintableKey: "Unidentified" },
      td = { 8: "Backspace", 9: "Tab", 12: "Clear", 13: "Enter", 16: "Shift", 17: "Control", 18: "Alt", 19: "Pause", 20: "CapsLock", 27: "Escape", 32: " ", 33: "PageUp", 34: "PageDown", 35: "End", 36: "Home", 37: "ArrowLeft", 38: "ArrowUp", 39: "ArrowRight", 40: "ArrowDown", 45: "Insert", 46: "Delete", 112: "F1", 113: "F2", 114: "F3", 115: "F4",
    116: "F5", 117: "F6", 118: "F7", 119: "F8", 120: "F9", 121: "F10", 122: "F11", 123: "F12", 144: "NumLock", 145: "ScrollLock", 224: "Meta" },
      ud = Wc.extend({ key: function (a) {
      if (a.key) {
        var b = sd[a.key] || a.key;if ("Unidentified" !== b) return b;
      }return "keypress" === a.type ? (a = rd(a), 13 === a ? "Enter" : String.fromCharCode(a)) : "keydown" === a.type || "keyup" === a.type ? td[a.keyCode] || "Unidentified" : "";
    }, location: null, ctrlKey: null, shiftKey: null, altKey: null, metaKey: null, repeat: null, locale: null, getModifierState: Zc, charCode: function (a) {
      return "keypress" === a.type ? rd(a) : 0;
    }, keyCode: function (a) {
      return "keydown" === a.type || "keyup" === a.type ? a.keyCode : 0;
    }, which: function (a) {
      return "keypress" === a.type ? rd(a) : "keydown" === a.type || "keyup" === a.type ? a.keyCode : 0;
    } }),
      vd = dd.extend({ dataTransfer: null }),
      wd = Wc.extend({ touches: null, targetTouches: null, changedTouches: null, altKey: null, metaKey: null, ctrlKey: null, shiftKey: null, getModifierState: Zc }),
      xd = z.extend({ propertyName: null, elapsedTime: null, pseudoElement: null }),
      yd = dd.extend({ deltaX: function (a) {
      return "deltaX" in a ? a.deltaX : "wheelDeltaX" in a ? -a.wheelDeltaX : 0;
    }, deltaY: function (a) {
      return "deltaY" in a ? a.deltaY : "wheelDeltaY" in a ? -a.wheelDeltaY : "wheelDelta" in a ? -a.wheelDelta : 0;
    }, deltaZ: null, deltaMode: null }),
      zd = [["abort", "abort"], [Ya, "animationEnd"], [Za, "animationIteration"], [$a, "animationStart"], ["canplay", "canPlay"], ["canplaythrough", "canPlayThrough"], ["drag", "drag"], ["dragenter", "dragEnter"], ["dragexit", "dragExit"], ["dragleave", "dragLeave"], ["dragover", "dragOver"], ["durationchange", "durationChange"], ["emptied", "emptied"], ["encrypted", "encrypted"], ["ended", "ended"], ["error", "error"], ["gotpointercapture", "gotPointerCapture"], ["load", "load"], ["loadeddata", "loadedData"], ["loadedmetadata", "loadedMetadata"], ["loadstart", "loadStart"], ["lostpointercapture", "lostPointerCapture"], ["mousemove", "mouseMove"], ["mouseout", "mouseOut"], ["mouseover", "mouseOver"], ["playing", "playing"], ["pointermove", "pointerMove"], ["pointerout", "pointerOut"], ["pointerover", "pointerOver"], ["progress", "progress"], ["scroll", "scroll"], ["seeking", "seeking"], ["stalled", "stalled"], ["suspend", "suspend"], ["timeupdate", "timeUpdate"], ["toggle", "toggle"], ["touchmove", "touchMove"], [ab, "transitionEnd"], ["waiting", "waiting"], ["wheel", "wheel"]],
      Ad = {},
      Bd = {};function Cd(a, b) {
    var c = a[0];a = a[1];var d = "on" + (a[0].toUpperCase() + a.slice(1));b = { phasedRegistrationNames: { bubbled: d, captured: d + "Capture" }, dependencies: [c], isInteractive: b };Ad[a] = b;Bd[c] = b;
  }
  [["blur", "blur"], ["cancel", "cancel"], ["click", "click"], ["close", "close"], ["contextmenu", "contextMenu"], ["copy", "copy"], ["cut", "cut"], ["auxclick", "auxClick"], ["dblclick", "doubleClick"], ["dragend", "dragEnd"], ["dragstart", "dragStart"], ["drop", "drop"], ["focus", "focus"], ["input", "input"], ["invalid", "invalid"], ["keydown", "keyDown"], ["keypress", "keyPress"], ["keyup", "keyUp"], ["mousedown", "mouseDown"], ["mouseup", "mouseUp"], ["paste", "paste"], ["pause", "pause"], ["play", "play"], ["pointercancel", "pointerCancel"], ["pointerdown", "pointerDown"], ["pointerup", "pointerUp"], ["ratechange", "rateChange"], ["reset", "reset"], ["seeked", "seeked"], ["submit", "submit"], ["touchcancel", "touchCancel"], ["touchend", "touchEnd"], ["touchstart", "touchStart"], ["volumechange", "volumeChange"]].forEach(function (a) {
    Cd(a, !0);
  });zd.forEach(function (a) {
    Cd(a, !1);
  });
  var Dd = { eventTypes: Ad, isInteractiveTopLevelEventType: function (a) {
      a = Bd[a];return void 0 !== a && !0 === a.isInteractive;
    }, extractEvents: function (a, b, c, d) {
      var e = Bd[a];if (!e) return null;switch (a) {case "keypress":
          if (0 === rd(c)) return null;case "keydown":case "keyup":
          a = ud;break;case "blur":case "focus":
          a = qd;break;case "click":
          if (2 === c.button) return null;case "auxclick":case "dblclick":case "mousedown":case "mousemove":case "mouseup":case "mouseout":case "mouseover":case "contextmenu":
          a = dd;break;case "drag":case "dragend":case "dragenter":case "dragexit":case "dragleave":case "dragover":case "dragstart":case "drop":
          a = vd;break;case "touchcancel":case "touchend":case "touchmove":case "touchstart":
          a = wd;break;case Ya:case Za:case $a:
          a = od;break;case ab:
          a = xd;break;case "scroll":
          a = Wc;break;case "wheel":
          a = yd;break;case "copy":case "cut":case "paste":
          a = pd;break;case "gotpointercapture":case "lostpointercapture":case "pointercancel":case "pointerdown":case "pointermove":case "pointerout":case "pointerover":case "pointerup":
          a = ed;break;default:
          a = z;}b = a.getPooled(e, b, c, d);Ra(b);return b;
    } },
      Ed = Dd.isInteractiveTopLevelEventType,
      Fd = [];function Gd(a) {
    var b = a.targetInst,
        c = b;do {
      if (!c) {
        a.ancestors.push(c);break;
      }var d;for (d = c; d.return;) d = d.return;d = 3 !== d.tag ? null : d.stateNode.containerInfo;if (!d) break;a.ancestors.push(c);c = Ia(d);
    } while (c);for (c = 0; c < a.ancestors.length; c++) {
      b = a.ancestors[c];var e = Rb(a.nativeEvent);d = a.topLevelType;for (var f = a.nativeEvent, g = null, h = 0; h < pa.length; h++) {
        var k = pa[h];k && (k = k.extractEvents(d, b, f, e)) && (g = ya(g, k));
      }Ea(g);
    }
  }var Hd = !0;
  function H(a, b) {
    if (!b) return null;var c = (Ed(a) ? Id : Jd).bind(null, a);b.addEventListener(a, c, !1);
  }function Kd(a, b) {
    if (!b) return null;var c = (Ed(a) ? Id : Jd).bind(null, a);b.addEventListener(a, c, !0);
  }function Id(a, b) {
    Lb(Jd, a, b);
  }
  function Jd(a, b) {
    if (Hd) {
      var c = Rb(b);c = Ia(c);null === c || "number" !== typeof c.tag || 2 === kd(c) || (c = null);if (Fd.length) {
        var d = Fd.pop();d.topLevelType = a;d.nativeEvent = b;d.targetInst = c;a = d;
      } else a = { topLevelType: a, nativeEvent: b, targetInst: c, ancestors: [] };try {
        Ob(Gd, a);
      } finally {
        a.topLevelType = null, a.nativeEvent = null, a.targetInst = null, a.ancestors.length = 0, 10 > Fd.length && Fd.push(a);
      }
    }
  }var Ld = {},
      Md = 0,
      Nd = "_reactListenersID" + ("" + Math.random()).slice(2);
  function Od(a) {
    Object.prototype.hasOwnProperty.call(a, Nd) || (a[Nd] = Md++, Ld[a[Nd]] = {});return Ld[a[Nd]];
  }function Pd(a) {
    a = a || ("undefined" !== typeof document ? document : void 0);if ("undefined" === typeof a) return null;try {
      return a.activeElement || a.body;
    } catch (b) {
      return a.body;
    }
  }function Qd(a) {
    for (; a && a.firstChild;) a = a.firstChild;return a;
  }
  function Rd(a, b) {
    var c = Qd(a);a = 0;for (var d; c;) {
      if (3 === c.nodeType) {
        d = a + c.textContent.length;if (a <= b && d >= b) return { node: c, offset: b - a };a = d;
      }a: {
        for (; c;) {
          if (c.nextSibling) {
            c = c.nextSibling;break a;
          }c = c.parentNode;
        }c = void 0;
      }c = Qd(c);
    }
  }function Sd(a, b) {
    return a && b ? a === b ? !0 : a && 3 === a.nodeType ? !1 : b && 3 === b.nodeType ? Sd(a, b.parentNode) : "contains" in a ? a.contains(b) : a.compareDocumentPosition ? !!(a.compareDocumentPosition(b) & 16) : !1 : !1;
  }
  function Td() {
    for (var a = window, b = Pd(); b instanceof a.HTMLIFrameElement;) {
      try {
        a = b.contentDocument.defaultView;
      } catch (c) {
        break;
      }b = Pd(a.document);
    }return b;
  }function Ud(a) {
    var b = a && a.nodeName && a.nodeName.toLowerCase();return b && ("input" === b && ("text" === a.type || "search" === a.type || "tel" === a.type || "url" === a.type || "password" === a.type) || "textarea" === b || "true" === a.contentEditable);
  }
  var Vd = Sa && "documentMode" in document && 11 >= document.documentMode,
      Wd = { select: { phasedRegistrationNames: { bubbled: "onSelect", captured: "onSelectCapture" }, dependencies: "blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ") } },
      Xd = null,
      Yd = null,
      Zd = null,
      $d = !1;
  function ae(a, b) {
    var c = b.window === b ? b.document : 9 === b.nodeType ? b : b.ownerDocument;if ($d || null == Xd || Xd !== Pd(c)) return null;c = Xd;"selectionStart" in c && Ud(c) ? c = { start: c.selectionStart, end: c.selectionEnd } : (c = (c.ownerDocument && c.ownerDocument.defaultView || window).getSelection(), c = { anchorNode: c.anchorNode, anchorOffset: c.anchorOffset, focusNode: c.focusNode, focusOffset: c.focusOffset });return Zd && jd(Zd, c) ? null : (Zd = c, a = z.getPooled(Wd.select, Yd, a, b), a.type = "select", a.target = Xd, Ra(a), a);
  }
  var be = { eventTypes: Wd, extractEvents: function (a, b, c, d) {
      var e = d.window === d ? d.document : 9 === d.nodeType ? d : d.ownerDocument,
          f;if (!(f = !e)) {
        a: {
          e = Od(e);f = ta.onSelect;for (var g = 0; g < f.length; g++) {
            var h = f[g];if (!e.hasOwnProperty(h) || !e[h]) {
              e = !1;break a;
            }
          }e = !0;
        }f = !e;
      }if (f) return null;e = b ? Ka(b) : window;switch (a) {case "focus":
          if (Qb(e) || "true" === e.contentEditable) Xd = e, Yd = b, Zd = null;break;case "blur":
          Zd = Yd = Xd = null;break;case "mousedown":
          $d = !0;break;case "contextmenu":case "mouseup":case "dragend":
          return $d = !1, ae(c, d);case "selectionchange":
          if (Vd) break;
        case "keydown":case "keyup":
          return ae(c, d);}return null;
    } };Ca.injectEventPluginOrder("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" "));ua = La;va = Ja;wa = Ka;Ca.injectEventPluginsByName({ SimpleEventPlugin: Dd, EnterLeaveEventPlugin: gd, ChangeEventPlugin: Vc, SelectEventPlugin: be, BeforeInputEventPlugin: Bb });function de(a) {
    var b = "";aa.Children.forEach(a, function (a) {
      null != a && (b += a);
    });return b;
  }
  function ee(a, b) {
    a = n({ children: void 0 }, b);if (b = de(b.children)) a.children = b;return a;
  }function fe(a, b, c, d) {
    a = a.options;if (b) {
      b = {};for (var e = 0; e < c.length; e++) b["$" + c[e]] = !0;for (c = 0; c < a.length; c++) e = b.hasOwnProperty("$" + a[c].value), a[c].selected !== e && (a[c].selected = e), e && d && (a[c].defaultSelected = !0);
    } else {
      c = "" + yc(c);b = null;for (e = 0; e < a.length; e++) {
        if (a[e].value === c) {
          a[e].selected = !0;d && (a[e].defaultSelected = !0);return;
        }null !== b || a[e].disabled || (b = a[e]);
      }null !== b && (b.selected = !0);
    }
  }
  function ge(a, b) {
    null != b.dangerouslySetInnerHTML ? t("91") : void 0;return n({}, b, { value: void 0, defaultValue: void 0, children: "" + a._wrapperState.initialValue });
  }function he(a, b) {
    var c = b.value;null == c && (c = b.defaultValue, b = b.children, null != b && (null != c ? t("92") : void 0, Array.isArray(b) && (1 >= b.length ? void 0 : t("93"), b = b[0]), c = b), null == c && (c = ""));a._wrapperState = { initialValue: yc(c) };
  }
  function ie(a, b) {
    var c = yc(b.value),
        d = yc(b.defaultValue);null != c && (c = "" + c, c !== a.value && (a.value = c), null == b.defaultValue && a.defaultValue !== c && (a.defaultValue = c));null != d && (a.defaultValue = "" + d);
  }function je(a) {
    var b = a.textContent;b === a._wrapperState.initialValue && (a.value = b);
  }var ke = { html: "http://www.w3.org/1999/xhtml", mathml: "http://www.w3.org/1998/Math/MathML", svg: "http://www.w3.org/2000/svg" };
  function le(a) {
    switch (a) {case "svg":
        return "http://www.w3.org/2000/svg";case "math":
        return "http://www.w3.org/1998/Math/MathML";default:
        return "http://www.w3.org/1999/xhtml";}
  }function me(a, b) {
    return null == a || "http://www.w3.org/1999/xhtml" === a ? le(b) : "http://www.w3.org/2000/svg" === a && "foreignObject" === b ? "http://www.w3.org/1999/xhtml" : a;
  }
  var ne = void 0,
      oe = function (a) {
    return "undefined" !== typeof MSApp && MSApp.execUnsafeLocalFunction ? function (b, c, d, e) {
      MSApp.execUnsafeLocalFunction(function () {
        return a(b, c, d, e);
      });
    } : a;
  }(function (a, b) {
    if (a.namespaceURI !== ke.svg || "innerHTML" in a) a.innerHTML = b;else {
      ne = ne || document.createElement("div");ne.innerHTML = "<svg>" + b + "</svg>";for (b = ne.firstChild; a.firstChild;) a.removeChild(a.firstChild);for (; b.firstChild;) a.appendChild(b.firstChild);
    }
  });
  function pe(a, b) {
    if (b) {
      var c = a.firstChild;if (c && c === a.lastChild && 3 === c.nodeType) {
        c.nodeValue = b;return;
      }
    }a.textContent = b;
  }
  var qe = { animationIterationCount: !0, borderImageOutset: !0, borderImageSlice: !0, borderImageWidth: !0, boxFlex: !0, boxFlexGroup: !0, boxOrdinalGroup: !0, columnCount: !0, columns: !0, flex: !0, flexGrow: !0, flexPositive: !0, flexShrink: !0, flexNegative: !0, flexOrder: !0, gridArea: !0, gridRow: !0, gridRowEnd: !0, gridRowSpan: !0, gridRowStart: !0, gridColumn: !0, gridColumnEnd: !0, gridColumnSpan: !0, gridColumnStart: !0, fontWeight: !0, lineClamp: !0, lineHeight: !0, opacity: !0, order: !0, orphans: !0, tabSize: !0, widows: !0, zIndex: !0, zoom: !0, fillOpacity: !0,
    floodOpacity: !0, stopOpacity: !0, strokeDasharray: !0, strokeDashoffset: !0, strokeMiterlimit: !0, strokeOpacity: !0, strokeWidth: !0 },
      re = ["Webkit", "ms", "Moz", "O"];Object.keys(qe).forEach(function (a) {
    re.forEach(function (b) {
      b = b + a.charAt(0).toUpperCase() + a.substring(1);qe[b] = qe[a];
    });
  });function se(a, b, c) {
    return null == b || "boolean" === typeof b || "" === b ? "" : c || "number" !== typeof b || 0 === b || qe.hasOwnProperty(a) && qe[a] ? ("" + b).trim() : b + "px";
  }
  function te(a, b) {
    a = a.style;for (var c in b) if (b.hasOwnProperty(c)) {
      var d = 0 === c.indexOf("--"),
          e = se(c, b[c], d);"float" === c && (c = "cssFloat");d ? a.setProperty(c, e) : a[c] = e;
    }
  }var ue = n({ menuitem: !0 }, { area: !0, base: !0, br: !0, col: !0, embed: !0, hr: !0, img: !0, input: !0, keygen: !0, link: !0, meta: !0, param: !0, source: !0, track: !0, wbr: !0 });
  function ve(a, b) {
    b && (ue[a] && (null != b.children || null != b.dangerouslySetInnerHTML ? t("137", a, "") : void 0), null != b.dangerouslySetInnerHTML && (null != b.children ? t("60") : void 0, "object" === typeof b.dangerouslySetInnerHTML && "__html" in b.dangerouslySetInnerHTML ? void 0 : t("61")), null != b.style && "object" !== typeof b.style ? t("62", "") : void 0);
  }
  function we(a, b) {
    if (-1 === a.indexOf("-")) return "string" === typeof b.is;switch (a) {case "annotation-xml":case "color-profile":case "font-face":case "font-face-src":case "font-face-uri":case "font-face-format":case "font-face-name":case "missing-glyph":
        return !1;default:
        return !0;}
  }
  function xe(a, b) {
    a = 9 === a.nodeType || 11 === a.nodeType ? a : a.ownerDocument;var c = Od(a);b = ta[b];for (var d = 0; d < b.length; d++) {
      var e = b[d];if (!c.hasOwnProperty(e) || !c[e]) {
        switch (e) {case "scroll":
            Kd("scroll", a);break;case "focus":case "blur":
            Kd("focus", a);Kd("blur", a);c.blur = !0;c.focus = !0;break;case "cancel":case "close":
            Sb(e) && Kd(e, a);break;case "invalid":case "submit":case "reset":
            break;default:
            -1 === bb.indexOf(e) && H(e, a);}c[e] = !0;
      }
    }
  }function ye() {}var ze = null,
      Ae = null;
  function Be(a, b) {
    switch (a) {case "button":case "input":case "select":case "textarea":
        return !!b.autoFocus;}return !1;
  }function Ce(a, b) {
    return "textarea" === a || "option" === a || "noscript" === a || "string" === typeof b.children || "number" === typeof b.children || "object" === typeof b.dangerouslySetInnerHTML && null !== b.dangerouslySetInnerHTML && null != b.dangerouslySetInnerHTML.__html;
  }var De = "function" === typeof setTimeout ? setTimeout : void 0,
      Ee = "function" === typeof clearTimeout ? clearTimeout : void 0;
  function Fe(a, b, c, d, e) {
    a[Ha] = e;"input" === c && "radio" === e.type && null != e.name && Bc(a, e);we(c, d);d = we(c, e);for (var f = 0; f < b.length; f += 2) {
      var g = b[f],
          h = b[f + 1];"style" === g ? te(a, h) : "dangerouslySetInnerHTML" === g ? oe(a, h) : "children" === g ? pe(a, h) : xc(a, g, h, d);
    }switch (c) {case "input":
        Cc(a, e);break;case "textarea":
        ie(a, e);break;case "select":
        b = a._wrapperState.wasMultiple, a._wrapperState.wasMultiple = !!e.multiple, c = e.value, null != c ? fe(a, !!e.multiple, c, !1) : b !== !!e.multiple && (null != e.defaultValue ? fe(a, !!e.multiple, e.defaultValue, !0) : fe(a, !!e.multiple, e.multiple ? [] : "", !1));}
  }function Ge(a) {
    for (a = a.nextSibling; a && 1 !== a.nodeType && 3 !== a.nodeType;) a = a.nextSibling;return a;
  }function He(a) {
    for (a = a.firstChild; a && 1 !== a.nodeType && 3 !== a.nodeType;) a = a.nextSibling;return a;
  }new Set();var Ie = [],
      Je = -1;function I(a) {
    0 > Je || (a.current = Ie[Je], Ie[Je] = null, Je--);
  }function J(a, b) {
    Je++;Ie[Je] = a.current;a.current = b;
  }var Ke = {},
      K = { current: Ke },
      L = { current: !1 },
      Le = Ke;
  function Me(a, b) {
    var c = a.type.contextTypes;if (!c) return Ke;var d = a.stateNode;if (d && d.__reactInternalMemoizedUnmaskedChildContext === b) return d.__reactInternalMemoizedMaskedChildContext;var e = {},
        f;for (f in c) e[f] = b[f];d && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = b, a.__reactInternalMemoizedMaskedChildContext = e);return e;
  }function M(a) {
    a = a.childContextTypes;return null !== a && void 0 !== a;
  }function Ne(a) {
    I(L, a);I(K, a);
  }function Oe(a) {
    I(L, a);I(K, a);
  }
  function Pe(a, b, c) {
    K.current !== Ke ? t("168") : void 0;J(K, b, a);J(L, c, a);
  }function Qe(a, b, c) {
    var d = a.stateNode;a = b.childContextTypes;if ("function" !== typeof d.getChildContext) return c;d = d.getChildContext();for (var e in d) e in a ? void 0 : t("108", mc(b) || "Unknown", e);return n({}, c, d);
  }function Re(a) {
    var b = a.stateNode;b = b && b.__reactInternalMemoizedMergedChildContext || Ke;Le = K.current;J(K, b, a);J(L, L.current, a);return !0;
  }
  function Se(a, b, c) {
    var d = a.stateNode;d ? void 0 : t("169");c ? (b = Qe(a, b, Le), d.__reactInternalMemoizedMergedChildContext = b, I(L, a), I(K, a), J(K, b, a)) : I(L, a);J(L, c, a);
  }var Te = null,
      Ue = null;function Ve(a) {
    return function (b) {
      try {
        return a(b);
      } catch (c) {}
    };
  }
  function We(a) {
    if ("undefined" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) return !1;var b = __REACT_DEVTOOLS_GLOBAL_HOOK__;if (b.isDisabled || !b.supportsFiber) return !0;try {
      var c = b.inject(a);Te = Ve(function (a) {
        return b.onCommitFiberRoot(c, a);
      });Ue = Ve(function (a) {
        return b.onCommitFiberUnmount(c, a);
      });
    } catch (d) {}return !0;
  }
  function Xe(a, b, c, d) {
    this.tag = a;this.key = c;this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null;this.index = 0;this.ref = null;this.pendingProps = b;this.firstContextDependency = this.memoizedState = this.updateQueue = this.memoizedProps = null;this.mode = d;this.effectTag = 0;this.lastEffect = this.firstEffect = this.nextEffect = null;this.childExpirationTime = this.expirationTime = 0;this.alternate = null;
  }function N(a, b, c, d) {
    return new Xe(a, b, c, d);
  }
  function Ye(a) {
    a = a.prototype;return !(!a || !a.isReactComponent);
  }function Ze(a) {
    if ("function" === typeof a) return Ye(a) ? 1 : 0;if (void 0 !== a && null !== a) {
      a = a.$$typeof;if (a === gc) return 11;if (a === ic) return 14;
    }return 2;
  }
  function $e(a, b) {
    var c = a.alternate;null === c ? (c = N(a.tag, b, a.key, a.mode), c.elementType = a.elementType, c.type = a.type, c.stateNode = a.stateNode, c.alternate = a, a.alternate = c) : (c.pendingProps = b, c.effectTag = 0, c.nextEffect = null, c.firstEffect = null, c.lastEffect = null);c.childExpirationTime = a.childExpirationTime;c.expirationTime = a.expirationTime;c.child = a.child;c.memoizedProps = a.memoizedProps;c.memoizedState = a.memoizedState;c.updateQueue = a.updateQueue;c.firstContextDependency = a.firstContextDependency;c.sibling = a.sibling;
    c.index = a.index;c.ref = a.ref;return c;
  }
  function af(a, b, c, d, e, f) {
    var g = 2;d = a;if ("function" === typeof a) Ye(a) && (g = 1);else if ("string" === typeof a) g = 5;else a: switch (a) {case ac:
        return bf(c.children, e, f, b);case fc:
        return cf(c, e | 3, f, b);case bc:
        return cf(c, e | 2, f, b);case cc:
        return a = N(12, c, b, e | 4), a.elementType = cc, a.type = cc, a.expirationTime = f, a;case hc:
        return a = N(13, c, b, e), a.elementType = hc, a.type = hc, a.expirationTime = f, a;default:
        if ("object" === typeof a && null !== a) switch (a.$$typeof) {case dc:
            g = 10;break a;case ec:
            g = 9;break a;case gc:
            g = 11;break a;case ic:
            g = 14;break a;case jc:
            g = 16;d = null;break a;}t("130", null == a ? a : typeof a, "");}b = N(g, c, b, e);b.elementType = a;b.type = d;b.expirationTime = f;return b;
  }function bf(a, b, c, d) {
    a = N(7, a, d, b);a.expirationTime = c;return a;
  }function cf(a, b, c, d) {
    a = N(8, a, d, b);b = 0 === (b & 1) ? bc : fc;a.elementType = b;a.type = b;a.expirationTime = c;return a;
  }function df(a, b, c) {
    a = N(6, a, null, b);a.expirationTime = c;return a;
  }
  function ef(a, b, c) {
    b = N(4, null !== a.children ? a.children : [], a.key, b);b.expirationTime = c;b.stateNode = { containerInfo: a.containerInfo, pendingChildren: null, implementation: a.implementation };return b;
  }function ff(a, b) {
    a.didError = !1;var c = a.earliestPendingTime;0 === c ? a.earliestPendingTime = a.latestPendingTime = b : c < b ? a.earliestPendingTime = b : a.latestPendingTime > b && (a.latestPendingTime = b);gf(b, a);
  }
  function hf(a, b) {
    a.didError = !1;a.latestPingedTime >= b && (a.latestPingedTime = 0);var c = a.earliestPendingTime,
        d = a.latestPendingTime;c === b ? a.earliestPendingTime = d === b ? a.latestPendingTime = 0 : d : d === b && (a.latestPendingTime = c);c = a.earliestSuspendedTime;d = a.latestSuspendedTime;0 === c ? a.earliestSuspendedTime = a.latestSuspendedTime = b : c < b ? a.earliestSuspendedTime = b : d > b && (a.latestSuspendedTime = b);gf(b, a);
  }function jf(a, b) {
    var c = a.earliestPendingTime;a = a.earliestSuspendedTime;c > b && (b = c);a > b && (b = a);return b;
  }
  function gf(a, b) {
    var c = b.earliestSuspendedTime,
        d = b.latestSuspendedTime,
        e = b.earliestPendingTime,
        f = b.latestPingedTime;e = 0 !== e ? e : f;0 === e && (0 === a || d < a) && (e = d);a = e;0 !== a && c > a && (a = c);b.nextExpirationTimeToWorkOn = e;b.expirationTime = a;
  }var kf = !1;function lf(a) {
    return { baseState: a, firstUpdate: null, lastUpdate: null, firstCapturedUpdate: null, lastCapturedUpdate: null, firstEffect: null, lastEffect: null, firstCapturedEffect: null, lastCapturedEffect: null };
  }
  function mf(a) {
    return { baseState: a.baseState, firstUpdate: a.firstUpdate, lastUpdate: a.lastUpdate, firstCapturedUpdate: null, lastCapturedUpdate: null, firstEffect: null, lastEffect: null, firstCapturedEffect: null, lastCapturedEffect: null };
  }function nf(a) {
    return { expirationTime: a, tag: 0, payload: null, callback: null, next: null, nextEffect: null };
  }function of(a, b) {
    null === a.lastUpdate ? a.firstUpdate = a.lastUpdate = b : (a.lastUpdate.next = b, a.lastUpdate = b);
  }
  function pf(a, b) {
    var c = a.alternate;if (null === c) {
      var d = a.updateQueue;var e = null;null === d && (d = a.updateQueue = lf(a.memoizedState));
    } else d = a.updateQueue, e = c.updateQueue, null === d ? null === e ? (d = a.updateQueue = lf(a.memoizedState), e = c.updateQueue = lf(c.memoizedState)) : d = a.updateQueue = mf(e) : null === e && (e = c.updateQueue = mf(d));null === e || d === e ? of(d, b) : null === d.lastUpdate || null === e.lastUpdate ? (of(d, b), of(e, b)) : (of(d, b), e.lastUpdate = b);
  }
  function qf(a, b) {
    var c = a.updateQueue;c = null === c ? a.updateQueue = lf(a.memoizedState) : rf(a, c);null === c.lastCapturedUpdate ? c.firstCapturedUpdate = c.lastCapturedUpdate = b : (c.lastCapturedUpdate.next = b, c.lastCapturedUpdate = b);
  }function rf(a, b) {
    var c = a.alternate;null !== c && b === c.updateQueue && (b = a.updateQueue = mf(b));return b;
  }
  function sf(a, b, c, d, e, f) {
    switch (c.tag) {case 1:
        return a = c.payload, "function" === typeof a ? a.call(f, d, e) : a;case 3:
        a.effectTag = a.effectTag & -2049 | 64;case 0:
        a = c.payload;e = "function" === typeof a ? a.call(f, d, e) : a;if (null === e || void 0 === e) break;return n({}, d, e);case 2:
        kf = !0;}return d;
  }
  function tf(a, b, c, d, e) {
    kf = !1;b = rf(a, b);for (var f = b.baseState, g = null, h = 0, k = b.firstUpdate, l = f; null !== k;) {
      var m = k.expirationTime;m < e ? (null === g && (g = k, f = l), h < m && (h = m)) : (l = sf(a, b, k, l, c, d), null !== k.callback && (a.effectTag |= 32, k.nextEffect = null, null === b.lastEffect ? b.firstEffect = b.lastEffect = k : (b.lastEffect.nextEffect = k, b.lastEffect = k)));k = k.next;
    }m = null;for (k = b.firstCapturedUpdate; null !== k;) {
      var r = k.expirationTime;r < e ? (null === m && (m = k, null === g && (f = l)), h < r && (h = r)) : (l = sf(a, b, k, l, c, d), null !== k.callback && (a.effectTag |= 32, k.nextEffect = null, null === b.lastCapturedEffect ? b.firstCapturedEffect = b.lastCapturedEffect = k : (b.lastCapturedEffect.nextEffect = k, b.lastCapturedEffect = k)));k = k.next;
    }null === g && (b.lastUpdate = null);null === m ? b.lastCapturedUpdate = null : a.effectTag |= 32;null === g && null === m && (f = l);b.baseState = f;b.firstUpdate = g;b.firstCapturedUpdate = m;a.expirationTime = h;a.memoizedState = l;
  }
  function uf(a, b, c) {
    null !== b.firstCapturedUpdate && (null !== b.lastUpdate && (b.lastUpdate.next = b.firstCapturedUpdate, b.lastUpdate = b.lastCapturedUpdate), b.firstCapturedUpdate = b.lastCapturedUpdate = null);vf(b.firstEffect, c);b.firstEffect = b.lastEffect = null;vf(b.firstCapturedEffect, c);b.firstCapturedEffect = b.lastCapturedEffect = null;
  }function vf(a, b) {
    for (; null !== a;) {
      var c = a.callback;if (null !== c) {
        a.callback = null;var d = b;"function" !== typeof c ? t("191", c) : void 0;c.call(d);
      }a = a.nextEffect;
    }
  }
  function wf(a, b) {
    return { value: a, source: b, stack: nc(b) };
  }var xf = { current: null },
      yf = null,
      zf = null,
      Af = null;function Bf(a, b) {
    var c = a.type._context;J(xf, c._currentValue, a);c._currentValue = b;
  }function Cf(a) {
    var b = xf.current;I(xf, a);a.type._context._currentValue = b;
  }function Df(a) {
    yf = a;Af = zf = null;a.firstContextDependency = null;
  }
  function Ef(a, b) {
    if (Af !== a && !1 !== b && 0 !== b) {
      if ("number" !== typeof b || 1073741823 === b) Af = a, b = 1073741823;b = { context: a, observedBits: b, next: null };null === zf ? (null === yf ? t("293") : void 0, yf.firstContextDependency = zf = b) : zf = zf.next = b;
    }return a._currentValue;
  }var Ff = {},
      O = { current: Ff },
      Gf = { current: Ff },
      Hf = { current: Ff };function If(a) {
    a === Ff ? t("174") : void 0;return a;
  }
  function Jf(a, b) {
    J(Hf, b, a);J(Gf, a, a);J(O, Ff, a);var c = b.nodeType;switch (c) {case 9:case 11:
        b = (b = b.documentElement) ? b.namespaceURI : me(null, "");break;default:
        c = 8 === c ? b.parentNode : b, b = c.namespaceURI || null, c = c.tagName, b = me(b, c);}I(O, a);J(O, b, a);
  }function Kf(a) {
    I(O, a);I(Gf, a);I(Hf, a);
  }function Lf(a) {
    If(Hf.current);var b = If(O.current);var c = me(b, a.type);b !== c && (J(Gf, a, a), J(O, c, a));
  }function Mf(a) {
    Gf.current === a && (I(O, a), I(Gf, a));
  }
  function P(a, b) {
    if (a && a.defaultProps) {
      b = n({}, b);a = a.defaultProps;for (var c in a) void 0 === b[c] && (b[c] = a[c]);
    }return b;
  }function Nf(a) {
    var b = a._result;switch (a._status) {case 1:
        return b;case 2:
        throw b;case 0:
        throw b;default:
        throw a._status = 0, b = a._ctor, b = b(), b.then(function (b) {
          0 === a._status && (b = b.default, a._status = 1, a._result = b);
        }, function (b) {
          0 === a._status && (a._status = 2, a._result = b);
        }), a._result = b, b;}
  }var Of = Xb.ReactCurrentOwner,
      Pf = new aa.Component().refs;
  function Qf(a, b, c, d) {
    b = a.memoizedState;c = c(d, b);c = null === c || void 0 === c ? b : n({}, b, c);a.memoizedState = c;d = a.updateQueue;null !== d && 0 === a.expirationTime && (d.baseState = c);
  }
  var Vf = { isMounted: function (a) {
      return (a = a._reactInternalFiber) ? 2 === kd(a) : !1;
    }, enqueueSetState: function (a, b, c) {
      a = a._reactInternalFiber;var d = Rf();d = Sf(d, a);var e = nf(d);e.payload = b;void 0 !== c && null !== c && (e.callback = c);Tf();pf(a, e);Uf(a, d);
    }, enqueueReplaceState: function (a, b, c) {
      a = a._reactInternalFiber;var d = Rf();d = Sf(d, a);var e = nf(d);e.tag = 1;e.payload = b;void 0 !== c && null !== c && (e.callback = c);Tf();pf(a, e);Uf(a, d);
    }, enqueueForceUpdate: function (a, b) {
      a = a._reactInternalFiber;var c = Rf();c = Sf(c, a);var d = nf(c);d.tag = 2;void 0 !== b && null !== b && (d.callback = b);Tf();pf(a, d);Uf(a, c);
    } };function Wf(a, b, c, d, e, f, g) {
    a = a.stateNode;return "function" === typeof a.shouldComponentUpdate ? a.shouldComponentUpdate(d, f, g) : b.prototype && b.prototype.isPureReactComponent ? !jd(c, d) || !jd(e, f) : !0;
  }
  function Xf(a, b, c) {
    var d = !1,
        e = Ke;var f = b.contextType;"object" === typeof f && null !== f ? f = Of.currentDispatcher.readContext(f) : (e = M(b) ? Le : K.current, d = b.contextTypes, f = (d = null !== d && void 0 !== d) ? Me(a, e) : Ke);b = new b(c, f);a.memoizedState = null !== b.state && void 0 !== b.state ? b.state : null;b.updater = Vf;a.stateNode = b;b._reactInternalFiber = a;d && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = e, a.__reactInternalMemoizedMaskedChildContext = f);return b;
  }
  function Zf(a, b, c, d) {
    a = b.state;"function" === typeof b.componentWillReceiveProps && b.componentWillReceiveProps(c, d);"function" === typeof b.UNSAFE_componentWillReceiveProps && b.UNSAFE_componentWillReceiveProps(c, d);b.state !== a && Vf.enqueueReplaceState(b, b.state, null);
  }
  function $f(a, b, c, d) {
    var e = a.stateNode;e.props = c;e.state = a.memoizedState;e.refs = Pf;var f = b.contextType;"object" === typeof f && null !== f ? e.context = Of.currentDispatcher.readContext(f) : (f = M(b) ? Le : K.current, e.context = Me(a, f));f = a.updateQueue;null !== f && (tf(a, f, c, e, d), e.state = a.memoizedState);f = b.getDerivedStateFromProps;"function" === typeof f && (Qf(a, b, f, c), e.state = a.memoizedState);"function" === typeof b.getDerivedStateFromProps || "function" === typeof e.getSnapshotBeforeUpdate || "function" !== typeof e.UNSAFE_componentWillMount && "function" !== typeof e.componentWillMount || (b = e.state, "function" === typeof e.componentWillMount && e.componentWillMount(), "function" === typeof e.UNSAFE_componentWillMount && e.UNSAFE_componentWillMount(), b !== e.state && Vf.enqueueReplaceState(e, e.state, null), f = a.updateQueue, null !== f && (tf(a, f, c, e, d), e.state = a.memoizedState));"function" === typeof e.componentDidMount && (a.effectTag |= 4);
  }var ag = Array.isArray;
  function bg(a, b, c) {
    a = c.ref;if (null !== a && "function" !== typeof a && "object" !== typeof a) {
      if (c._owner) {
        c = c._owner;var d = void 0;c && (1 !== c.tag ? t("289") : void 0, d = c.stateNode);d ? void 0 : t("147", a);var e = "" + a;if (null !== b && null !== b.ref && "function" === typeof b.ref && b.ref._stringRef === e) return b.ref;b = function (a) {
          var b = d.refs;b === Pf && (b = d.refs = {});null === a ? delete b[e] : b[e] = a;
        };b._stringRef = e;return b;
      }"string" !== typeof a ? t("284") : void 0;c._owner ? void 0 : t("290", a);
    }return a;
  }
  function cg(a, b) {
    "textarea" !== a.type && t("31", "[object Object]" === Object.prototype.toString.call(b) ? "object with keys {" + Object.keys(b).join(", ") + "}" : b, "");
  }
  function dg(a) {
    function b(b, c) {
      if (a) {
        var d = b.lastEffect;null !== d ? (d.nextEffect = c, b.lastEffect = c) : b.firstEffect = b.lastEffect = c;c.nextEffect = null;c.effectTag = 8;
      }
    }function c(c, d) {
      if (!a) return null;for (; null !== d;) b(c, d), d = d.sibling;return null;
    }function d(a, b) {
      for (a = new Map(); null !== b;) null !== b.key ? a.set(b.key, b) : a.set(b.index, b), b = b.sibling;return a;
    }function e(a, b, c) {
      a = $e(a, b, c);a.index = 0;a.sibling = null;return a;
    }function f(b, c, d) {
      b.index = d;if (!a) return c;d = b.alternate;if (null !== d) return d = d.index, d < c ? (b.effectTag = 2, c) : d;b.effectTag = 2;return c;
    }function g(b) {
      a && null === b.alternate && (b.effectTag = 2);return b;
    }function h(a, b, c, d) {
      if (null === b || 6 !== b.tag) return b = df(c, a.mode, d), b.return = a, b;b = e(b, c, d);b.return = a;return b;
    }function k(a, b, c, d) {
      if (null !== b && b.elementType === c.type) return d = e(b, c.props, d), d.ref = bg(a, b, c), d.return = a, d;d = af(c.type, c.key, c.props, null, a.mode, d);d.ref = bg(a, b, c);d.return = a;return d;
    }function l(a, b, c, d) {
      if (null === b || 4 !== b.tag || b.stateNode.containerInfo !== c.containerInfo || b.stateNode.implementation !== c.implementation) return b = ef(c, a.mode, d), b.return = a, b;b = e(b, c.children || [], d);b.return = a;return b;
    }function m(a, b, c, d, g) {
      if (null === b || 7 !== b.tag) return b = bf(c, a.mode, d, g), b.return = a, b;b = e(b, c, d);b.return = a;return b;
    }function r(a, b, c) {
      if ("string" === typeof b || "number" === typeof b) return b = df("" + b, a.mode, c), b.return = a, b;if ("object" === typeof b && null !== b) {
        switch (b.$$typeof) {case Zb:
            return c = af(b.type, b.key, b.props, null, a.mode, c), c.ref = bg(a, null, b), c.return = a, c;case $b:
            return b = ef(b, a.mode, c), b.return = a, b;}if (ag(b) || lc(b)) return b = bf(b, a.mode, c, null), b.return = a, b;cg(a, b);
      }return null;
    }function w(a, b, c, d) {
      var e = null !== b ? b.key : null;if ("string" === typeof c || "number" === typeof c) return null !== e ? null : h(a, b, "" + c, d);if ("object" === typeof c && null !== c) {
        switch (c.$$typeof) {case Zb:
            return c.key === e ? c.type === ac ? m(a, b, c.props.children, d, e) : k(a, b, c, d) : null;case $b:
            return c.key === e ? l(a, b, c, d) : null;}if (ag(c) || lc(c)) return null !== e ? null : m(a, b, c, d, null);cg(a, c);
      }return null;
    }function y(a, b, c, d, e) {
      if ("string" === typeof d || "number" === typeof d) return a = a.get(c) || null, h(b, a, "" + d, e);if ("object" === typeof d && null !== d) {
        switch (d.$$typeof) {case Zb:
            return a = a.get(null === d.key ? c : d.key) || null, d.type === ac ? m(b, a, d.props.children, e, d.key) : k(b, a, d, e);case $b:
            return a = a.get(null === d.key ? c : d.key) || null, l(b, a, d, e);}if (ag(d) || lc(d)) return a = a.get(c) || null, m(b, a, d, e, null);cg(b, d);
      }return null;
    }function B(e, g, h, k) {
      for (var l = null, q = null, m = g, u = g = 0, p = null; null !== m && u < h.length; u++) {
        m.index > u ? (p = m, m = null) : p = m.sibling;var v = w(e, m, h[u], k);if (null === v) {
          null === m && (m = p);break;
        }a && m && null === v.alternate && b(e, m);g = f(v, g, u);null === q ? l = v : q.sibling = v;q = v;m = p;
      }if (u === h.length) return c(e, m), l;if (null === m) {
        for (; u < h.length; u++) if (m = r(e, h[u], k)) g = f(m, g, u), null === q ? l = m : q.sibling = m, q = m;return l;
      }for (m = d(e, m); u < h.length; u++) if (p = y(m, e, u, h[u], k)) a && null !== p.alternate && m.delete(null === p.key ? u : p.key), g = f(p, g, u), null === q ? l = p : q.sibling = p, q = p;a && m.forEach(function (a) {
        return b(e, a);
      });return l;
    }function R(e, g, h, k) {
      var l = lc(h);"function" !== typeof l ? t("150") : void 0;h = l.call(h);null == h ? t("151") : void 0;
      for (var m = l = null, q = g, u = g = 0, p = null, v = h.next(); null !== q && !v.done; u++, v = h.next()) {
        q.index > u ? (p = q, q = null) : p = q.sibling;var A = w(e, q, v.value, k);if (null === A) {
          q || (q = p);break;
        }a && q && null === A.alternate && b(e, q);g = f(A, g, u);null === m ? l = A : m.sibling = A;m = A;q = p;
      }if (v.done) return c(e, q), l;if (null === q) {
        for (; !v.done; u++, v = h.next()) v = r(e, v.value, k), null !== v && (g = f(v, g, u), null === m ? l = v : m.sibling = v, m = v);return l;
      }for (q = d(e, q); !v.done; u++, v = h.next()) v = y(q, e, u, v.value, k), null !== v && (a && null !== v.alternate && q.delete(null === v.key ? u : v.key), g = f(v, g, u), null === m ? l = v : m.sibling = v, m = v);a && q.forEach(function (a) {
        return b(e, a);
      });return l;
    }return function (a, d, f, h) {
      var k = "object" === typeof f && null !== f && f.type === ac && null === f.key;k && (f = f.props.children);var l = "object" === typeof f && null !== f;if (l) switch (f.$$typeof) {case Zb:
          a: {
            l = f.key;for (k = d; null !== k;) {
              if (k.key === l) {
                if (7 === k.tag ? f.type === ac : k.elementType === f.type) {
                  c(a, k.sibling);d = e(k, f.type === ac ? f.props.children : f.props, h);d.ref = bg(a, k, f);d.return = a;a = d;break a;
                } else {
                  c(a, k);break;
                }
              } else b(a, k);k = k.sibling;
            }f.type === ac ? (d = bf(f.props.children, a.mode, h, f.key), d.return = a, a = d) : (h = af(f.type, f.key, f.props, null, a.mode, h), h.ref = bg(a, d, f), h.return = a, a = h);
          }return g(a);case $b:
          a: {
            for (k = f.key; null !== d;) {
              if (d.key === k) {
                if (4 === d.tag && d.stateNode.containerInfo === f.containerInfo && d.stateNode.implementation === f.implementation) {
                  c(a, d.sibling);d = e(d, f.children || [], h);d.return = a;a = d;break a;
                } else {
                  c(a, d);break;
                }
              } else b(a, d);d = d.sibling;
            }d = ef(f, a.mode, h);d.return = a;a = d;
          }return g(a);}if ("string" === typeof f || "number" === typeof f) return f = "" + f, null !== d && 6 === d.tag ? (c(a, d.sibling), d = e(d, f, h), d.return = a, a = d) : (c(a, d), d = df(f, a.mode, h), d.return = a, a = d), g(a);if (ag(f)) return B(a, d, f, h);if (lc(f)) return R(a, d, f, h);l && cg(a, f);if ("undefined" === typeof f && !k) switch (a.tag) {case 1:case 0:
          h = a.type, t("152", h.displayName || h.name || "Component");}return c(a, d);
    };
  }var eg = dg(!0),
      fg = dg(!1),
      gg = null,
      hg = null,
      ig = !1;
  function jg(a, b) {
    var c = N(5, null, null, 0);c.elementType = "DELETED";c.type = "DELETED";c.stateNode = b;c.return = a;c.effectTag = 8;null !== a.lastEffect ? (a.lastEffect.nextEffect = c, a.lastEffect = c) : a.firstEffect = a.lastEffect = c;
  }function kg(a, b) {
    switch (a.tag) {case 5:
        var c = a.type;b = 1 !== b.nodeType || c.toLowerCase() !== b.nodeName.toLowerCase() ? null : b;return null !== b ? (a.stateNode = b, !0) : !1;case 6:
        return b = "" === a.pendingProps || 3 !== b.nodeType ? null : b, null !== b ? (a.stateNode = b, !0) : !1;default:
        return !1;}
  }
  function lg(a) {
    if (ig) {
      var b = hg;if (b) {
        var c = b;if (!kg(a, b)) {
          b = Ge(c);if (!b || !kg(a, b)) {
            a.effectTag |= 2;ig = !1;gg = a;return;
          }jg(gg, c);
        }gg = a;hg = He(b);
      } else a.effectTag |= 2, ig = !1, gg = a;
    }
  }function mg(a) {
    for (a = a.return; null !== a && 5 !== a.tag && 3 !== a.tag;) a = a.return;gg = a;
  }function ng(a) {
    if (a !== gg) return !1;if (!ig) return mg(a), ig = !0, !1;var b = a.type;if (5 !== a.tag || "head" !== b && "body" !== b && !Ce(b, a.memoizedProps)) for (b = hg; b;) jg(a, b), b = Ge(b);mg(a);hg = gg ? Ge(a.stateNode) : null;return !0;
  }function og() {
    hg = gg = null;ig = !1;
  }var pg = Xb.ReactCurrentOwner;
  function Q(a, b, c, d) {
    b.child = null === a ? fg(b, null, c, d) : eg(b, a.child, c, d);
  }function qg(a, b, c, d, e) {
    c = c.render;var f = b.ref;Df(b, e);d = c(d, f);b.effectTag |= 1;Q(a, b, d, e);return b.child;
  }
  function rg(a, b, c, d, e, f) {
    if (null === a) {
      var g = c.type;if ("function" === typeof g && !Ye(g) && void 0 === g.defaultProps && null === c.compare && void 0 === c.defaultProps) return b.tag = 15, b.type = g, sg(a, b, g, d, e, f);a = af(c.type, null, d, null, b.mode, f);a.ref = b.ref;a.return = b;return b.child = a;
    }g = a.child;if (e < f && (e = g.memoizedProps, c = c.compare, c = null !== c ? c : jd, c(e, d) && a.ref === b.ref)) return tg(a, b, f);b.effectTag |= 1;a = $e(g, d, f);a.ref = b.ref;a.return = b;return b.child = a;
  }
  function sg(a, b, c, d, e, f) {
    return null !== a && e < f && jd(a.memoizedProps, d) && a.ref === b.ref ? tg(a, b, f) : ug(a, b, c, d, f);
  }function vg(a, b) {
    var c = b.ref;if (null === a && null !== c || null !== a && a.ref !== c) b.effectTag |= 128;
  }function ug(a, b, c, d, e) {
    var f = M(c) ? Le : K.current;f = Me(b, f);Df(b, e);c = c(d, f);b.effectTag |= 1;Q(a, b, c, e);return b.child;
  }
  function wg(a, b, c, d, e) {
    if (M(c)) {
      var f = !0;Re(b);
    } else f = !1;Df(b, e);if (null === b.stateNode) null !== a && (a.alternate = null, b.alternate = null, b.effectTag |= 2), Xf(b, c, d, e), $f(b, c, d, e), d = !0;else if (null === a) {
      var g = b.stateNode,
          h = b.memoizedProps;g.props = h;var k = g.context,
          l = c.contextType;"object" === typeof l && null !== l ? l = Of.currentDispatcher.readContext(l) : (l = M(c) ? Le : K.current, l = Me(b, l));var m = c.getDerivedStateFromProps,
          r = "function" === typeof m || "function" === typeof g.getSnapshotBeforeUpdate;r || "function" !== typeof g.UNSAFE_componentWillReceiveProps && "function" !== typeof g.componentWillReceiveProps || (h !== d || k !== l) && Zf(b, g, d, l);kf = !1;var w = b.memoizedState;k = g.state = w;var y = b.updateQueue;null !== y && (tf(b, y, d, g, e), k = b.memoizedState);h !== d || w !== k || L.current || kf ? ("function" === typeof m && (Qf(b, c, m, d), k = b.memoizedState), (h = kf || Wf(b, c, h, d, w, k, l)) ? (r || "function" !== typeof g.UNSAFE_componentWillMount && "function" !== typeof g.componentWillMount || ("function" === typeof g.componentWillMount && g.componentWillMount(), "function" === typeof g.UNSAFE_componentWillMount && g.UNSAFE_componentWillMount()), "function" === typeof g.componentDidMount && (b.effectTag |= 4)) : ("function" === typeof g.componentDidMount && (b.effectTag |= 4), b.memoizedProps = d, b.memoizedState = k), g.props = d, g.state = k, g.context = l, d = h) : ("function" === typeof g.componentDidMount && (b.effectTag |= 4), d = !1);
    } else g = b.stateNode, h = b.memoizedProps, g.props = b.type === b.elementType ? h : P(b.type, h), k = g.context, l = c.contextType, "object" === typeof l && null !== l ? l = Of.currentDispatcher.readContext(l) : (l = M(c) ? Le : K.current, l = Me(b, l)), m = c.getDerivedStateFromProps, (r = "function" === typeof m || "function" === typeof g.getSnapshotBeforeUpdate) || "function" !== typeof g.UNSAFE_componentWillReceiveProps && "function" !== typeof g.componentWillReceiveProps || (h !== d || k !== l) && Zf(b, g, d, l), kf = !1, k = b.memoizedState, w = g.state = k, y = b.updateQueue, null !== y && (tf(b, y, d, g, e), w = b.memoizedState), h !== d || k !== w || L.current || kf ? ("function" === typeof m && (Qf(b, c, m, d), w = b.memoizedState), (m = kf || Wf(b, c, h, d, k, w, l)) ? (r || "function" !== typeof g.UNSAFE_componentWillUpdate && "function" !== typeof g.componentWillUpdate || ("function" === typeof g.componentWillUpdate && g.componentWillUpdate(d, w, l), "function" === typeof g.UNSAFE_componentWillUpdate && g.UNSAFE_componentWillUpdate(d, w, l)), "function" === typeof g.componentDidUpdate && (b.effectTag |= 4), "function" === typeof g.getSnapshotBeforeUpdate && (b.effectTag |= 256)) : ("function" !== typeof g.componentDidUpdate || h === a.memoizedProps && k === a.memoizedState || (b.effectTag |= 4), "function" !== typeof g.getSnapshotBeforeUpdate || h === a.memoizedProps && k === a.memoizedState || (b.effectTag |= 256), b.memoizedProps = d, b.memoizedState = w), g.props = d, g.state = w, g.context = l, d = m) : ("function" !== typeof g.componentDidUpdate || h === a.memoizedProps && k === a.memoizedState || (b.effectTag |= 4), "function" !== typeof g.getSnapshotBeforeUpdate || h === a.memoizedProps && k === a.memoizedState || (b.effectTag |= 256), d = !1);return xg(a, b, c, d, f, e);
  }
  function xg(a, b, c, d, e, f) {
    vg(a, b);var g = 0 !== (b.effectTag & 64);if (!d && !g) return e && Se(b, c, !1), tg(a, b, f);d = b.stateNode;pg.current = b;var h = g && "function" !== typeof c.getDerivedStateFromError ? null : d.render();b.effectTag |= 1;null !== a && g ? (b.child = eg(b, a.child, null, f), b.child = eg(b, null, h, f)) : Q(a, b, h, f);b.memoizedState = d.state;e && Se(b, c, !0);return b.child;
  }function yg(a) {
    var b = a.stateNode;b.pendingContext ? Pe(a, b.pendingContext, b.pendingContext !== b.context) : b.context && Pe(a, b.context, !1);Jf(a, b.containerInfo);
  }
  function zg(a, b, c) {
    var d = b.mode,
        e = b.pendingProps,
        f = b.memoizedState;if (0 === (b.effectTag & 64)) {
      f = null;var g = !1;
    } else f = { timedOutAt: null !== f ? f.timedOutAt : 0 }, g = !0, b.effectTag &= -65;if (null === a) {
      if (g) {
        var h = e.fallback;a = bf(null, d, 0, null);0 === (b.mode & 1) && (a.child = null !== b.memoizedState ? b.child.child : b.child);d = bf(h, d, c, null);a.sibling = d;c = a;c.return = d.return = b;
      } else c = d = fg(b, null, e.children, c);
    } else null !== a.memoizedState ? (d = a.child, h = d.sibling, g ? (c = e.fallback, e = $e(d, d.pendingProps, 0), 0 === (b.mode & 1) && (g = null !== b.memoizedState ? b.child.child : b.child, g !== d.child && (e.child = g)), d = e.sibling = $e(h, c, h.expirationTime), c = e, e.childExpirationTime = 0, c.return = d.return = b) : c = d = eg(b, d.child, e.children, c)) : (h = a.child, g ? (g = e.fallback, e = bf(null, d, 0, null), e.child = h, 0 === (b.mode & 1) && (e.child = null !== b.memoizedState ? b.child.child : b.child), d = e.sibling = bf(g, d, c, null), d.effectTag |= 2, c = e, e.childExpirationTime = 0, c.return = d.return = b) : d = c = eg(b, h, e.children, c)), b.stateNode = a.stateNode;b.memoizedState = f;b.child = c;return d;
  }
  function tg(a, b, c) {
    null !== a && (b.firstContextDependency = a.firstContextDependency);if (b.childExpirationTime < c) return null;null !== a && b.child !== a.child ? t("153") : void 0;if (null !== b.child) {
      a = b.child;c = $e(a, a.pendingProps, a.expirationTime);b.child = c;for (c.return = b; null !== a.sibling;) a = a.sibling, c = c.sibling = $e(a, a.pendingProps, a.expirationTime), c.return = b;c.sibling = null;
    }return b.child;
  }
  function Ag(a, b, c) {
    var d = b.expirationTime;if (null !== a && a.memoizedProps === b.pendingProps && !L.current && d < c) {
      switch (b.tag) {case 3:
          yg(b);og();break;case 5:
          Lf(b);break;case 1:
          M(b.type) && Re(b);break;case 4:
          Jf(b, b.stateNode.containerInfo);break;case 10:
          Bf(b, b.memoizedProps.value);break;case 13:
          if (null !== b.memoizedState) {
            d = b.child.childExpirationTime;if (0 !== d && d >= c) return zg(a, b, c);b = tg(a, b, c);return null !== b ? b.sibling : null;
          }}return tg(a, b, c);
    }b.expirationTime = 0;switch (b.tag) {case 2:
        d = b.elementType;null !== a && (a.alternate = null, b.alternate = null, b.effectTag |= 2);a = b.pendingProps;var e = Me(b, K.current);Df(b, c);e = d(a, e);b.effectTag |= 1;if ("object" === typeof e && null !== e && "function" === typeof e.render && void 0 === e.$$typeof) {
          b.tag = 1;if (M(d)) {
            var f = !0;Re(b);
          } else f = !1;b.memoizedState = null !== e.state && void 0 !== e.state ? e.state : null;var g = d.getDerivedStateFromProps;"function" === typeof g && Qf(b, d, g, a);e.updater = Vf;b.stateNode = e;e._reactInternalFiber = b;$f(b, d, a, c);b = xg(null, b, d, !0, f, c);
        } else b.tag = 0, Q(null, b, e, c), b = b.child;
        return b;case 16:
        e = b.elementType;null !== a && (a.alternate = null, b.alternate = null, b.effectTag |= 2);f = b.pendingProps;a = Nf(e);b.type = a;e = b.tag = Ze(a);f = P(a, f);g = void 0;switch (e) {case 0:
            g = ug(null, b, a, f, c);break;case 1:
            g = wg(null, b, a, f, c);break;case 11:
            g = qg(null, b, a, f, c);break;case 14:
            g = rg(null, b, a, P(a.type, f), d, c);break;default:
            t("306", a, "");}return g;case 0:
        return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : P(d, e), ug(a, b, d, e, c);case 1:
        return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : P(d, e), wg(a, b, d, e, c);case 3:
        yg(b);d = b.updateQueue;null === d ? t("282") : void 0;e = b.memoizedState;e = null !== e ? e.element : null;tf(b, d, b.pendingProps, null, c);d = b.memoizedState.element;if (d === e) og(), b = tg(a, b, c);else {
          e = b.stateNode;if (e = (null === a || null === a.child) && e.hydrate) hg = He(b.stateNode.containerInfo), gg = b, e = ig = !0;e ? (b.effectTag |= 2, b.child = fg(b, null, d, c)) : (Q(a, b, d, c), og());b = b.child;
        }return b;case 5:
        return Lf(b), null === a && lg(b), d = b.type, e = b.pendingProps, f = null !== a ? a.memoizedProps : null, g = e.children, Ce(d, e) ? g = null : null !== f && Ce(d, f) && (b.effectTag |= 16), vg(a, b), 1 !== c && b.mode & 1 && e.hidden ? (b.expirationTime = 1, b = null) : (Q(a, b, g, c), b = b.child), b;case 6:
        return null === a && lg(b), null;case 13:
        return zg(a, b, c);case 4:
        return Jf(b, b.stateNode.containerInfo), d = b.pendingProps, null === a ? b.child = eg(b, null, d, c) : Q(a, b, d, c), b.child;case 11:
        return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : P(d, e), qg(a, b, d, e, c);case 7:
        return Q(a, b, b.pendingProps, c), b.child;case 8:
        return Q(a, b, b.pendingProps.children, c), b.child;case 12:
        return Q(a, b, b.pendingProps.children, c), b.child;case 10:
        a: {
          d = b.type._context;e = b.pendingProps;g = b.memoizedProps;f = e.value;Bf(b, f);if (null !== g) {
            var h = g.value;f = h === f && (0 !== h || 1 / h === 1 / f) || h !== h && f !== f ? 0 : ("function" === typeof d._calculateChangedBits ? d._calculateChangedBits(h, f) : 1073741823) | 0;if (0 === f) {
              if (g.children === e.children && !L.current) {
                b = tg(a, b, c);break a;
              }
            } else for (g = b.child, null !== g && (g.return = b); null !== g;) {
              h = g.firstContextDependency;if (null !== h) {
                do {
                  if (h.context === d && 0 !== (h.observedBits & f)) {
                    if (1 === g.tag) {
                      var k = nf(c);k.tag = 2;pf(g, k);
                    }g.expirationTime < c && (g.expirationTime = c);k = g.alternate;null !== k && k.expirationTime < c && (k.expirationTime = c);for (var l = g.return; null !== l;) {
                      k = l.alternate;if (l.childExpirationTime < c) l.childExpirationTime = c, null !== k && k.childExpirationTime < c && (k.childExpirationTime = c);else if (null !== k && k.childExpirationTime < c) k.childExpirationTime = c;else break;l = l.return;
                    }
                  }k = g.child;h = h.next;
                } while (null !== h);
              } else k = 10 === g.tag ? g.type === b.type ? null : g.child : g.child;if (null !== k) k.return = g;else for (k = g; null !== k;) {
                if (k === b) {
                  k = null;break;
                }g = k.sibling;
                if (null !== g) {
                  g.return = k.return;k = g;break;
                }k = k.return;
              }g = k;
            }
          }Q(a, b, e.children, c);b = b.child;
        }return b;case 9:
        return e = b.type, f = b.pendingProps, d = f.children, Df(b, c), e = Ef(e, f.unstable_observedBits), d = d(e), b.effectTag |= 1, Q(a, b, d, c), b.child;case 14:
        return e = b.type, f = P(e, b.pendingProps), f = P(e.type, f), rg(a, b, e, f, d, c);case 15:
        return sg(a, b, b.type, b.pendingProps, d, c);case 17:
        return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : P(d, e), null !== a && (a.alternate = null, b.alternate = null, b.effectTag |= 2), b.tag = 1, M(d) ? (a = !0, Re(b)) : a = !1, Df(b, c), Xf(b, d, e, c), $f(b, d, e, c), xg(null, b, d, !0, a, c);default:
        t("156");}
  }function Bg(a) {
    a.effectTag |= 4;
  }var Cg = void 0,
      Gg = void 0,
      Hg = void 0,
      Ig = void 0;Cg = function (a, b) {
    for (var c = b.child; null !== c;) {
      if (5 === c.tag || 6 === c.tag) a.appendChild(c.stateNode);else if (4 !== c.tag && null !== c.child) {
        c.child.return = c;c = c.child;continue;
      }if (c === b) break;for (; null === c.sibling;) {
        if (null === c.return || c.return === b) return;c = c.return;
      }c.sibling.return = c.return;c = c.sibling;
    }
  };Gg = function () {};
  Hg = function (a, b, c, d, e) {
    var f = a.memoizedProps;if (f !== d) {
      var g = b.stateNode;If(O.current);a = null;switch (c) {case "input":
          f = zc(g, f);d = zc(g, d);a = [];break;case "option":
          f = ee(g, f);d = ee(g, d);a = [];break;case "select":
          f = n({}, f, { value: void 0 });d = n({}, d, { value: void 0 });a = [];break;case "textarea":
          f = ge(g, f);d = ge(g, d);a = [];break;default:
          "function" !== typeof f.onClick && "function" === typeof d.onClick && (g.onclick = ye);}ve(c, d);g = c = void 0;var h = null;for (c in f) if (!d.hasOwnProperty(c) && f.hasOwnProperty(c) && null != f[c]) if ("style" === c) {
        var k = f[c];for (g in k) k.hasOwnProperty(g) && (h || (h = {}), h[g] = "");
      } else "dangerouslySetInnerHTML" !== c && "children" !== c && "suppressContentEditableWarning" !== c && "suppressHydrationWarning" !== c && "autoFocus" !== c && (sa.hasOwnProperty(c) ? a || (a = []) : (a = a || []).push(c, null));for (c in d) {
        var l = d[c];k = null != f ? f[c] : void 0;if (d.hasOwnProperty(c) && l !== k && (null != l || null != k)) if ("style" === c) {
          if (k) {
            for (g in k) !k.hasOwnProperty(g) || l && l.hasOwnProperty(g) || (h || (h = {}), h[g] = "");for (g in l) l.hasOwnProperty(g) && k[g] !== l[g] && (h || (h = {}), h[g] = l[g]);
          } else h || (a || (a = []), a.push(c, h)), h = l;
        } else "dangerouslySetInnerHTML" === c ? (l = l ? l.__html : void 0, k = k ? k.__html : void 0, null != l && k !== l && (a = a || []).push(c, "" + l)) : "children" === c ? k === l || "string" !== typeof l && "number" !== typeof l || (a = a || []).push(c, "" + l) : "suppressContentEditableWarning" !== c && "suppressHydrationWarning" !== c && (sa.hasOwnProperty(c) ? (null != l && xe(e, c), a || k === l || (a = [])) : (a = a || []).push(c, l));
      }h && (a = a || []).push("style", h);e = a;(b.updateQueue = e) && Bg(b);
    }
  };Ig = function (a, b, c, d) {
    c !== d && Bg(b);
  };
  var Jg = "function" === typeof WeakSet ? WeakSet : Set;function Kg(a, b) {
    var c = b.source,
        d = b.stack;null === d && null !== c && (d = nc(c));null !== c && mc(c.type);b = b.value;null !== a && 1 === a.tag && mc(a.type);try {
      console.error(b);
    } catch (e) {
      setTimeout(function () {
        throw e;
      });
    }
  }function Lg(a) {
    var b = a.ref;if (null !== b) if ("function" === typeof b) try {
      b(null);
    } catch (c) {
      Mg(a, c);
    } else b.current = null;
  }
  function Ng(a, b) {
    for (var c = a;;) {
      if (5 === c.tag) {
        var d = c.stateNode;if (b) d.style.display = "none";else {
          d = c.stateNode;var e = c.memoizedProps.style;e = void 0 !== e && null !== e && e.hasOwnProperty("display") ? e.display : null;d.style.display = se("display", e);
        }
      } else if (6 === c.tag) c.stateNode.nodeValue = b ? "" : c.memoizedProps;else if (13 === c.tag && null !== c.memoizedState) {
        d = c.child.sibling;d.return = c;c = d;continue;
      } else if (null !== c.child) {
        c.child.return = c;c = c.child;continue;
      }if (c === a) break;for (; null === c.sibling;) {
        if (null === c.return || c.return === a) return;c = c.return;
      }c.sibling.return = c.return;c = c.sibling;
    }
  }
  function Og(a) {
    "function" === typeof Ue && Ue(a);switch (a.tag) {case 0:case 11:case 14:case 15:
        var b = a.updateQueue;if (null !== b && (b = b.lastEffect, null !== b)) {
          var c = b = b.next;do {
            var d = c.destroy;if (null !== d) {
              var e = a;try {
                d();
              } catch (f) {
                Mg(e, f);
              }
            }c = c.next;
          } while (c !== b);
        }break;case 1:
        Lg(a);b = a.stateNode;if ("function" === typeof b.componentWillUnmount) try {
          b.props = a.memoizedProps, b.state = a.memoizedState, b.componentWillUnmount();
        } catch (f) {
          Mg(a, f);
        }break;case 5:
        Lg(a);break;case 4:
        Pg(a);}
  }
  function Qg(a) {
    return 5 === a.tag || 3 === a.tag || 4 === a.tag;
  }
  function Rg(a) {
    a: {
      for (var b = a.return; null !== b;) {
        if (Qg(b)) {
          var c = b;break a;
        }b = b.return;
      }t("160");c = void 0;
    }var d = b = void 0;switch (c.tag) {case 5:
        b = c.stateNode;d = !1;break;case 3:
        b = c.stateNode.containerInfo;d = !0;break;case 4:
        b = c.stateNode.containerInfo;d = !0;break;default:
        t("161");}c.effectTag & 16 && (pe(b, ""), c.effectTag &= -17);a: b: for (c = a;;) {
      for (; null === c.sibling;) {
        if (null === c.return || Qg(c.return)) {
          c = null;break a;
        }c = c.return;
      }c.sibling.return = c.return;for (c = c.sibling; 5 !== c.tag && 6 !== c.tag;) {
        if (c.effectTag & 2) continue b;
        if (null === c.child || 4 === c.tag) continue b;else c.child.return = c, c = c.child;
      }if (!(c.effectTag & 2)) {
        c = c.stateNode;break a;
      }
    }for (var e = a;;) {
      if (5 === e.tag || 6 === e.tag) {
        if (c) {
          if (d) {
            var f = b,
                g = e.stateNode,
                h = c;8 === f.nodeType ? f.parentNode.insertBefore(g, h) : f.insertBefore(g, h);
          } else b.insertBefore(e.stateNode, c);
        } else d ? (g = b, h = e.stateNode, 8 === g.nodeType ? (f = g.parentNode, f.insertBefore(h, g)) : (f = g, f.appendChild(h)), g = g._reactRootContainer, null !== g && void 0 !== g || null !== f.onclick || (f.onclick = ye)) : b.appendChild(e.stateNode);
      } else if (4 !== e.tag && null !== e.child) {
        e.child.return = e;e = e.child;continue;
      }if (e === a) break;for (; null === e.sibling;) {
        if (null === e.return || e.return === a) return;e = e.return;
      }e.sibling.return = e.return;e = e.sibling;
    }
  }
  function Pg(a) {
    for (var b = a, c = !1, d = void 0, e = void 0;;) {
      if (!c) {
        c = b.return;a: for (;;) {
          null === c ? t("160") : void 0;switch (c.tag) {case 5:
              d = c.stateNode;e = !1;break a;case 3:
              d = c.stateNode.containerInfo;e = !0;break a;case 4:
              d = c.stateNode.containerInfo;e = !0;break a;}c = c.return;
        }c = !0;
      }if (5 === b.tag || 6 === b.tag) {
        a: for (var f = b, g = f;;) if (Og(g), null !== g.child && 4 !== g.tag) g.child.return = g, g = g.child;else {
          if (g === f) break;for (; null === g.sibling;) {
            if (null === g.return || g.return === f) break a;g = g.return;
          }g.sibling.return = g.return;g = g.sibling;
        }e ? (f = d, g = b.stateNode, 8 === f.nodeType ? f.parentNode.removeChild(g) : f.removeChild(g)) : d.removeChild(b.stateNode);
      } else if (4 === b.tag ? (d = b.stateNode.containerInfo, e = !0) : Og(b), null !== b.child) {
        b.child.return = b;b = b.child;continue;
      }if (b === a) break;for (; null === b.sibling;) {
        if (null === b.return || b.return === a) return;b = b.return;4 === b.tag && (c = !1);
      }b.sibling.return = b.return;b = b.sibling;
    }
  }
  function Sg(a, b) {
    switch (b.tag) {case 0:case 11:case 14:case 15:
        break;case 1:
        break;case 5:
        var c = b.stateNode;if (null != c) {
          var d = b.memoizedProps;a = null !== a ? a.memoizedProps : d;var e = b.type,
              f = b.updateQueue;b.updateQueue = null;null !== f && Fe(c, f, e, a, d, b);
        }break;case 6:
        null === b.stateNode ? t("162") : void 0;b.stateNode.nodeValue = b.memoizedProps;break;case 3:
        break;case 12:
        break;case 13:
        c = b.memoizedState;d = void 0;a = b;null === c ? d = !1 : (d = !0, a = b.child, 0 === c.timedOutAt && (c.timedOutAt = Rf()));null !== a && Ng(a, d);c = b.updateQueue;
        if (null !== c) {
          b.updateQueue = null;var g = b.stateNode;null === g && (g = b.stateNode = new Jg());c.forEach(function (a) {
            var c = Tg.bind(null, b, a);g.has(a) || (g.add(a), a.then(c, c));
          });
        }break;case 17:
        break;default:
        t("163");}
  }var Ug = "function" === typeof WeakMap ? WeakMap : Map;function Vg(a, b, c) {
    c = nf(c);c.tag = 3;c.payload = { element: null };var d = b.value;c.callback = function () {
      Wg(d);Kg(a, b);
    };return c;
  }
  function Xg(a, b, c) {
    c = nf(c);c.tag = 3;var d = a.type.getDerivedStateFromError;if ("function" === typeof d) {
      var e = b.value;c.payload = function () {
        return d(e);
      };
    }var f = a.stateNode;null !== f && "function" === typeof f.componentDidCatch && (c.callback = function () {
      "function" !== typeof d && (null === Yg ? Yg = new Set([this]) : Yg.add(this));var c = b.value,
          e = b.stack;Kg(a, b);this.componentDidCatch(c, { componentStack: null !== e ? e : "" });
    });return c;
  }
  function Zg(a) {
    switch (a.tag) {case 1:
        M(a.type) && Ne(a);var b = a.effectTag;return b & 2048 ? (a.effectTag = b & -2049 | 64, a) : null;case 3:
        return Kf(a), Oe(a), b = a.effectTag, 0 !== (b & 64) ? t("285") : void 0, a.effectTag = b & -2049 | 64, a;case 5:
        return Mf(a), null;case 13:
        return b = a.effectTag, b & 2048 ? (a.effectTag = b & -2049 | 64, a) : null;case 4:
        return Kf(a), null;case 10:
        return Cf(a), null;default:
        return null;}
  }
  var $g = { readContext: Ef },
      ah = Xb.ReactCurrentOwner,
      bh = 1073741822,
      ch = 0,
      dh = !1,
      S = null,
      T = null,
      U = 0,
      eh = -1,
      fh = !1,
      V = null,
      gh = !1,
      hh = null,
      ih = null,
      Yg = null;function jh() {
    if (null !== S) for (var a = S.return; null !== a;) {
      var b = a;switch (b.tag) {case 1:
          var c = b.type.childContextTypes;null !== c && void 0 !== c && Ne(b);break;case 3:
          Kf(b);Oe(b);break;case 5:
          Mf(b);break;case 4:
          Kf(b);break;case 10:
          Cf(b);}a = a.return;
    }T = null;U = 0;eh = -1;fh = !1;S = null;
  }function Tf() {
    null !== ih && (ba.unstable_cancelCallback(hh), ih());
  }
  function kh(a) {
    for (;;) {
      var b = a.alternate,
          c = a.return,
          d = a.sibling;if (0 === (a.effectTag & 1024)) {
        S = a;a: {
          var e = b;b = a;var f = U;var g = b.pendingProps;switch (b.tag) {case 2:
              break;case 16:
              break;case 15:case 0:
              break;case 1:
              M(b.type) && Ne(b);break;case 3:
              Kf(b);Oe(b);g = b.stateNode;g.pendingContext && (g.context = g.pendingContext, g.pendingContext = null);if (null === e || null === e.child) ng(b), b.effectTag &= -3;Gg(b);break;case 5:
              Mf(b);var h = If(Hf.current);f = b.type;if (null !== e && null != b.stateNode) Hg(e, b, f, g, h), e.ref !== b.ref && (b.effectTag |= 128);else if (g) {
                var k = If(O.current);if (ng(b)) {
                  g = b;e = g.stateNode;var l = g.type,
                      m = g.memoizedProps,
                      r = h;e[Ga] = g;e[Ha] = m;f = void 0;h = l;switch (h) {case "iframe":case "object":
                      H("load", e);break;case "video":case "audio":
                      for (l = 0; l < bb.length; l++) H(bb[l], e);break;case "source":
                      H("error", e);break;case "img":case "image":case "link":
                      H("error", e);H("load", e);break;case "form":
                      H("reset", e);H("submit", e);break;case "details":
                      H("toggle", e);break;case "input":
                      Ac(e, m);H("invalid", e);xe(r, "onChange");break;case "select":
                      e._wrapperState = { wasMultiple: !!m.multiple };H("invalid", e);xe(r, "onChange");break;case "textarea":
                      he(e, m), H("invalid", e), xe(r, "onChange");}ve(h, m);l = null;for (f in m) m.hasOwnProperty(f) && (k = m[f], "children" === f ? "string" === typeof k ? e.textContent !== k && (l = ["children", k]) : "number" === typeof k && e.textContent !== "" + k && (l = ["children", "" + k]) : sa.hasOwnProperty(f) && null != k && xe(r, f));switch (h) {case "input":
                      Vb(e);Ec(e, m, !0);break;case "textarea":
                      Vb(e);je(e, m);break;case "select":case "option":
                      break;default:
                      "function" === typeof m.onClick && (e.onclick = ye);}f = l;g.updateQueue = f;g = null !== f ? !0 : !1;g && Bg(b);
                } else {
                  m = b;e = f;r = g;l = 9 === h.nodeType ? h : h.ownerDocument;k === ke.html && (k = le(e));k === ke.html ? "script" === e ? (e = l.createElement("div"), e.innerHTML = "<script>\x3c/script>", l = e.removeChild(e.firstChild)) : "string" === typeof r.is ? l = l.createElement(e, { is: r.is }) : (l = l.createElement(e), "select" === e && r.multiple && (l.multiple = !0)) : l = l.createElementNS(k, e);e = l;e[Ga] = m;e[Ha] = g;Cg(e, b, !1, !1);r = e;l = f;m = g;var w = h,
                      y = we(l, m);switch (l) {case "iframe":case "object":
                      H("load", r);h = m;break;case "video":case "audio":
                      for (h = 0; h < bb.length; h++) H(bb[h], r);h = m;break;case "source":
                      H("error", r);h = m;break;case "img":case "image":case "link":
                      H("error", r);H("load", r);h = m;break;case "form":
                      H("reset", r);H("submit", r);h = m;break;case "details":
                      H("toggle", r);h = m;break;case "input":
                      Ac(r, m);h = zc(r, m);H("invalid", r);xe(w, "onChange");break;case "option":
                      h = ee(r, m);break;case "select":
                      r._wrapperState = { wasMultiple: !!m.multiple };h = n({}, m, { value: void 0 });H("invalid", r);xe(w, "onChange");break;case "textarea":
                      he(r, m);h = ge(r, m);H("invalid", r);xe(w, "onChange");break;default:
                      h = m;}ve(l, h);k = void 0;var B = l,
                      R = r,
                      v = h;for (k in v) if (v.hasOwnProperty(k)) {
                    var q = v[k];"style" === k ? te(R, q) : "dangerouslySetInnerHTML" === k ? (q = q ? q.__html : void 0, null != q && oe(R, q)) : "children" === k ? "string" === typeof q ? ("textarea" !== B || "" !== q) && pe(R, q) : "number" === typeof q && pe(R, "" + q) : "suppressContentEditableWarning" !== k && "suppressHydrationWarning" !== k && "autoFocus" !== k && (sa.hasOwnProperty(k) ? null != q && xe(w, k) : null != q && xc(R, k, q, y));
                  }switch (l) {case "input":
                      Vb(r);
                      Ec(r, m, !1);break;case "textarea":
                      Vb(r);je(r, m);break;case "option":
                      null != m.value && r.setAttribute("value", "" + yc(m.value));break;case "select":
                      h = r;h.multiple = !!m.multiple;r = m.value;null != r ? fe(h, !!m.multiple, r, !1) : null != m.defaultValue && fe(h, !!m.multiple, m.defaultValue, !0);break;default:
                      "function" === typeof h.onClick && (r.onclick = ye);}(g = Be(f, g)) && Bg(b);b.stateNode = e;
                }null !== b.ref && (b.effectTag |= 128);
              } else null === b.stateNode ? t("166") : void 0;break;case 6:
              e && null != b.stateNode ? Ig(e, b, e.memoizedProps, g) : ("string" !== typeof g && (null === b.stateNode ? t("166") : void 0), e = If(Hf.current), If(O.current), ng(b) ? (g = b, f = g.stateNode, e = g.memoizedProps, f[Ga] = g, (g = f.nodeValue !== e) && Bg(b)) : (f = b, g = (9 === e.nodeType ? e : e.ownerDocument).createTextNode(g), g[Ga] = b, f.stateNode = g));break;case 11:
              break;case 13:
              g = b.memoizedState;if (0 !== (b.effectTag & 64)) {
                b.expirationTime = f;S = b;break a;
              }g = null !== g;f = null !== e && null !== e.memoizedState;null !== e && !g && f && (e = e.child.sibling, null !== e && (h = b.firstEffect, null !== h ? (b.firstEffect = e, e.nextEffect = h) : (b.firstEffect = b.lastEffect = e, e.nextEffect = null), e.effectTag = 8));if (g !== f || 0 === (b.effectTag & 1) && g) b.effectTag |= 4;break;case 7:
              break;case 8:
              break;case 12:
              break;case 4:
              Kf(b);Gg(b);break;case 10:
              Cf(b);break;case 9:
              break;case 14:
              break;case 17:
              M(b.type) && Ne(b);break;default:
              t("156");}S = null;
        }b = a;if (1 === U || 1 !== b.childExpirationTime) {
          g = 0;for (f = b.child; null !== f;) e = f.expirationTime, h = f.childExpirationTime, e > g && (g = e), h > g && (g = h), f = f.sibling;b.childExpirationTime = g;
        }if (null !== S) return S;null !== c && 0 === (c.effectTag & 1024) && (null === c.firstEffect && (c.firstEffect = a.firstEffect), null !== a.lastEffect && (null !== c.lastEffect && (c.lastEffect.nextEffect = a.firstEffect), c.lastEffect = a.lastEffect), 1 < a.effectTag && (null !== c.lastEffect ? c.lastEffect.nextEffect = a : c.firstEffect = a, c.lastEffect = a));
      } else {
        a = Zg(a, U);if (null !== a) return a.effectTag &= 1023, a;null !== c && (c.firstEffect = c.lastEffect = null, c.effectTag |= 1024);
      }if (null !== d) return d;if (null !== c) a = c;else break;
    }return null;
  }
  function lh(a) {
    var b = Ag(a.alternate, a, U);a.memoizedProps = a.pendingProps;null === b && (b = kh(a));ah.current = null;return b;
  }
  function mh(a, b) {
    dh ? t("243") : void 0;Tf();dh = !0;ah.currentDispatcher = $g;var c = a.nextExpirationTimeToWorkOn;if (c !== U || a !== T || null === S) jh(), T = a, U = c, S = $e(T.current, null, U), a.pendingCommitExpirationTime = 0;var d = !1;do {
      try {
        if (b) for (; null !== S && !nh();) S = lh(S);else for (; null !== S;) S = lh(S);
      } catch (B) {
        if (Af = zf = yf = null, null === S) d = !0, Wg(B);else {
          null === S ? t("271") : void 0;var e = S,
              f = e.return;if (null === f) d = !0, Wg(B);else {
            a: {
              var g = a,
                  h = f,
                  k = e,
                  l = B;f = U;k.effectTag |= 1024;k.firstEffect = k.lastEffect = null;if (null !== l && "object" === typeof l && "function" === typeof l.then) {
                var m = l;l = h;var r = -1,
                    w = -1;do {
                  if (13 === l.tag) {
                    var y = l.alternate;if (null !== y && (y = y.memoizedState, null !== y)) {
                      w = 10 * (1073741822 - y.timedOutAt);break;
                    }y = l.pendingProps.maxDuration;if ("number" === typeof y) if (0 >= y) r = 0;else if (-1 === r || y < r) r = y;
                  }l = l.return;
                } while (null !== l);l = h;do {
                  if (y = 13 === l.tag) y = void 0 === l.memoizedProps.fallback ? !1 : null === l.memoizedState;if (y) {
                    h = l.updateQueue;null === h ? l.updateQueue = new Set([m]) : h.add(m);if (0 === (l.mode & 1)) {
                      l.effectTag |= 64;k.effectTag &= -1957;
                      1 === k.tag && (null === k.alternate ? k.tag = 17 : (f = nf(1073741823), f.tag = 2, pf(k, f)));k.expirationTime = 1073741823;break a;
                    }k = g.pingCache;null === k ? (k = g.pingCache = new Ug(), h = new Set(), k.set(m, h)) : (h = k.get(m), void 0 === h && (h = new Set(), k.set(m, h)));h.has(f) || (h.add(f), k = oh.bind(null, g, m, f), m.then(k, k));-1 === r ? g = 1073741823 : (-1 === w && (w = 10 * (1073741822 - jf(g, f)) - 5E3), g = w + r);0 <= g && eh < g && (eh = g);l.effectTag |= 2048;l.expirationTime = f;break a;
                  }l = l.return;
                } while (null !== l);l = Error((mc(k.type) || "A React component") + " suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display." + nc(k));
              }fh = !0;l = wf(l, k);g = h;do {
                switch (g.tag) {case 3:
                    g.effectTag |= 2048;g.expirationTime = f;f = Vg(g, l, f);qf(g, f);break a;case 1:
                    if (m = l, r = g.type, w = g.stateNode, 0 === (g.effectTag & 64) && ("function" === typeof r.getDerivedStateFromError || null !== w && "function" === typeof w.componentDidCatch && (null === Yg || !Yg.has(w)))) {
                      g.effectTag |= 2048;g.expirationTime = f;f = Xg(g, m, f);qf(g, f);break a;
                    }}g = g.return;
              } while (null !== g);
            }S = kh(e);continue;
          }
        }
      }break;
    } while (1);dh = !1;Af = zf = yf = ah.currentDispatcher = null;if (d) T = null, a.finishedWork = null;else if (null !== S) a.finishedWork = null;else {
      d = a.current.alternate;null === d ? t("281") : void 0;T = null;if (fh) {
        e = a.latestPendingTime;f = a.latestSuspendedTime;g = a.latestPingedTime;if (0 !== e && e < c || 0 !== f && f < c || 0 !== g && g < c) {
          hf(a, c);ph(a, d, c, a.expirationTime, -1);return;
        }if (!a.didError && b) {
          a.didError = !0;c = a.nextExpirationTimeToWorkOn = c;b = a.expirationTime = 1073741823;ph(a, d, c, b, -1);return;
        }
      }b && -1 !== eh ? (hf(a, c), b = 10 * (1073741822 - jf(a, c)), b < eh && (eh = b), b = 10 * (1073741822 - Rf()), b = eh - b, ph(a, d, c, a.expirationTime, 0 > b ? 0 : b)) : (a.pendingCommitExpirationTime = c, a.finishedWork = d);
    }
  }function Mg(a, b) {
    for (var c = a.return; null !== c;) {
      switch (c.tag) {case 1:
          var d = c.stateNode;if ("function" === typeof c.type.getDerivedStateFromError || "function" === typeof d.componentDidCatch && (null === Yg || !Yg.has(d))) {
            a = wf(b, a);a = Xg(c, a, 1073741823);pf(c, a);Uf(c, 1073741823);return;
          }break;case 3:
          a = wf(b, a);a = Vg(c, a, 1073741823);pf(c, a);Uf(c, 1073741823);return;}c = c.return;
    }3 === a.tag && (c = wf(b, a), c = Vg(a, c, 1073741823), pf(a, c), Uf(a, 1073741823));
  }
  function Sf(a, b) {
    0 !== ch ? a = ch : dh ? a = gh ? 1073741823 : U : b.mode & 1 ? (a = qh ? 1073741822 - 10 * (((1073741822 - a + 15) / 10 | 0) + 1) : 1073741822 - 25 * (((1073741822 - a + 500) / 25 | 0) + 1), null !== T && a === U && --a) : a = 1073741823;qh && (0 === rh || a < rh) && (rh = a);return a;
  }function oh(a, b, c) {
    var d = a.pingCache;null !== d && d.delete(b);if (null !== T && U === c) T = null;else if (b = a.earliestSuspendedTime, d = a.latestSuspendedTime, 0 !== b && c <= b && c >= d) {
      a.didError = !1;b = a.latestPingedTime;if (0 === b || b > c) a.latestPingedTime = c;gf(c, a);c = a.expirationTime;0 !== c && sh(a, c);
    }
  }
  function Tg(a, b) {
    var c = a.stateNode;null !== c && c.delete(b);b = Rf();b = Sf(b, a);a = th(a, b);null !== a && (ff(a, b), b = a.expirationTime, 0 !== b && sh(a, b));
  }
  function th(a, b) {
    a.expirationTime < b && (a.expirationTime = b);var c = a.alternate;null !== c && c.expirationTime < b && (c.expirationTime = b);var d = a.return,
        e = null;if (null === d && 3 === a.tag) e = a.stateNode;else for (; null !== d;) {
      c = d.alternate;d.childExpirationTime < b && (d.childExpirationTime = b);null !== c && c.childExpirationTime < b && (c.childExpirationTime = b);if (null === d.return && 3 === d.tag) {
        e = d.stateNode;break;
      }d = d.return;
    }return e;
  }
  function Uf(a, b) {
    a = th(a, b);null !== a && (!dh && 0 !== U && b > U && jh(), ff(a, b), dh && !gh && T === a || sh(a, a.expirationTime), uh > vh && (uh = 0, t("185")));
  }function wh(a, b, c, d, e) {
    var f = ch;ch = 1073741823;try {
      return a(b, c, d, e);
    } finally {
      ch = f;
    }
  }var xh = null,
      W = null,
      yh = 0,
      zh = void 0,
      X = !1,
      Ah = null,
      Y = 0,
      rh = 0,
      Bh = !1,
      Ch = null,
      Z = !1,
      Dh = !1,
      qh = !1,
      Eh = null,
      Fh = ba.unstable_now(),
      Gh = 1073741822 - (Fh / 10 | 0),
      Hh = Gh,
      vh = 50,
      uh = 0,
      Ih = null;function Jh() {
    Gh = 1073741822 - ((ba.unstable_now() - Fh) / 10 | 0);
  }
  function Kh(a, b) {
    if (0 !== yh) {
      if (b < yh) return;null !== zh && ba.unstable_cancelCallback(zh);
    }yh = b;a = ba.unstable_now() - Fh;zh = ba.unstable_scheduleCallback(Lh, { timeout: 10 * (1073741822 - b) - a });
  }function ph(a, b, c, d, e) {
    a.expirationTime = d;0 !== e || nh() ? 0 < e && (a.timeoutHandle = De(Mh.bind(null, a, b, c), e)) : (a.pendingCommitExpirationTime = c, a.finishedWork = b);
  }function Mh(a, b, c) {
    a.pendingCommitExpirationTime = c;a.finishedWork = b;Jh();Hh = Gh;Nh(a, c);
  }function Rf() {
    if (X) return Hh;Oh();if (0 === Y || 1 === Y) Jh(), Hh = Gh;return Hh;
  }
  function sh(a, b) {
    null === a.nextScheduledRoot ? (a.expirationTime = b, null === W ? (xh = W = a, a.nextScheduledRoot = a) : (W = W.nextScheduledRoot = a, W.nextScheduledRoot = xh)) : b > a.expirationTime && (a.expirationTime = b);X || (Z ? Dh && (Ah = a, Y = 1073741823, Ph(a, 1073741823, !1)) : 1073741823 === b ? Qh(1073741823, !1) : Kh(a, b));
  }
  function Oh() {
    var a = 0,
        b = null;if (null !== W) for (var c = W, d = xh; null !== d;) {
      var e = d.expirationTime;if (0 === e) {
        null === c || null === W ? t("244") : void 0;if (d === d.nextScheduledRoot) {
          xh = W = d.nextScheduledRoot = null;break;
        } else if (d === xh) xh = e = d.nextScheduledRoot, W.nextScheduledRoot = e, d.nextScheduledRoot = null;else if (d === W) {
          W = c;W.nextScheduledRoot = xh;d.nextScheduledRoot = null;break;
        } else c.nextScheduledRoot = d.nextScheduledRoot, d.nextScheduledRoot = null;d = c.nextScheduledRoot;
      } else {
        e > a && (a = e, b = d);if (d === W) break;if (1073741823 === a) break;c = d;d = d.nextScheduledRoot;
      }
    }Ah = b;Y = a;
  }var Rh = !1;function nh() {
    return Rh ? !0 : ba.unstable_shouldYield() ? Rh = !0 : !1;
  }function Lh() {
    try {
      if (!nh() && null !== xh) {
        Jh();var a = xh;do {
          var b = a.expirationTime;0 !== b && Gh <= b && (a.nextExpirationTimeToWorkOn = Gh);a = a.nextScheduledRoot;
        } while (a !== xh);
      }Qh(0, !0);
    } finally {
      Rh = !1;
    }
  }
  function Qh(a, b) {
    Oh();if (b) for (Jh(), Hh = Gh; null !== Ah && 0 !== Y && a <= Y && !(Rh && Gh > Y);) Ph(Ah, Y, Gh > Y), Oh(), Jh(), Hh = Gh;else for (; null !== Ah && 0 !== Y && a <= Y;) Ph(Ah, Y, !1), Oh();b && (yh = 0, zh = null);0 !== Y && Kh(Ah, Y);uh = 0;Ih = null;if (null !== Eh) for (a = Eh, Eh = null, b = 0; b < a.length; b++) {
      var c = a[b];try {
        c._onComplete();
      } catch (d) {
        Bh || (Bh = !0, Ch = d);
      }
    }if (Bh) throw a = Ch, Ch = null, Bh = !1, a;
  }function Nh(a, b) {
    X ? t("253") : void 0;Ah = a;Y = b;Ph(a, b, !1);Qh(1073741823, !1);
  }
  function Ph(a, b, c) {
    X ? t("245") : void 0;X = !0;if (c) {
      var d = a.finishedWork;null !== d ? Sh(a, d, b) : (a.finishedWork = null, d = a.timeoutHandle, -1 !== d && (a.timeoutHandle = -1, Ee(d)), mh(a, c), d = a.finishedWork, null !== d && (nh() ? a.finishedWork = d : Sh(a, d, b)));
    } else d = a.finishedWork, null !== d ? Sh(a, d, b) : (a.finishedWork = null, d = a.timeoutHandle, -1 !== d && (a.timeoutHandle = -1, Ee(d)), mh(a, c), d = a.finishedWork, null !== d && Sh(a, d, b));X = !1;
  }
  function Sh(a, b, c) {
    var d = a.firstBatch;if (null !== d && d._expirationTime >= c && (null === Eh ? Eh = [d] : Eh.push(d), d._defer)) {
      a.finishedWork = b;a.expirationTime = 0;return;
    }a.finishedWork = null;a === Ih ? uh++ : (Ih = a, uh = 0);gh = dh = !0;a.current === b ? t("177") : void 0;c = a.pendingCommitExpirationTime;0 === c ? t("261") : void 0;a.pendingCommitExpirationTime = 0;d = b.expirationTime;var e = b.childExpirationTime;d = e > d ? e : d;a.didError = !1;0 === d ? (a.earliestPendingTime = 0, a.latestPendingTime = 0, a.earliestSuspendedTime = 0, a.latestSuspendedTime = 0, a.latestPingedTime = 0) : (d < a.latestPingedTime && (a.latestPingedTime = 0), e = a.latestPendingTime, 0 !== e && (e > d ? a.earliestPendingTime = a.latestPendingTime = 0 : a.earliestPendingTime > d && (a.earliestPendingTime = a.latestPendingTime)), e = a.earliestSuspendedTime, 0 === e ? ff(a, d) : d < a.latestSuspendedTime ? (a.earliestSuspendedTime = 0, a.latestSuspendedTime = 0, a.latestPingedTime = 0, ff(a, d)) : d > e && ff(a, d));gf(0, a);ah.current = null;1 < b.effectTag ? null !== b.lastEffect ? (b.lastEffect.nextEffect = b, d = b.firstEffect) : d = b : d = b.firstEffect;ze = Hd;e = Td();if (Ud(e)) {
      if ("selectionStart" in e) var f = { start: e.selectionStart, end: e.selectionEnd };else a: {
        f = (f = e.ownerDocument) && f.defaultView || window;var g = f.getSelection && f.getSelection();if (g && 0 !== g.rangeCount) {
          f = g.anchorNode;var h = g.anchorOffset,
              k = g.focusNode;g = g.focusOffset;try {
            f.nodeType, k.nodeType;
          } catch (db) {
            f = null;break a;
          }var l = 0,
              m = -1,
              r = -1,
              w = 0,
              y = 0,
              B = e,
              R = null;b: for (;;) {
            for (var v;;) {
              B !== f || 0 !== h && 3 !== B.nodeType || (m = l + h);B !== k || 0 !== g && 3 !== B.nodeType || (r = l + g);3 === B.nodeType && (l += B.nodeValue.length);if (null === (v = B.firstChild)) break;R = B;B = v;
            }for (;;) {
              if (B === e) break b;R === f && ++w === h && (m = l);R === k && ++y === g && (r = l);if (null !== (v = B.nextSibling)) break;B = R;R = B.parentNode;
            }B = v;
          }f = -1 === m || -1 === r ? null : { start: m, end: r };
        } else f = null;
      }f = f || { start: 0, end: 0 };
    } else f = null;Ae = { focusedElem: e, selectionRange: f };Hd = !1;for (V = d; null !== V;) {
      e = !1;f = void 0;try {
        for (; null !== V;) {
          if (V.effectTag & 256) a: {
            var q = V.alternate;h = V;switch (h.tag) {case 0:case 11:case 15:
                break a;case 1:
                if (h.effectTag & 256 && null !== q) {
                  var u = q.memoizedProps,
                      A = q.memoizedState,
                      Yf = h.stateNode,
                      Vh = Yf.getSnapshotBeforeUpdate(h.elementType === h.type ? u : P(h.type, u), A);Yf.__reactInternalSnapshotBeforeUpdate = Vh;
                }break a;case 3:case 5:case 6:case 4:case 17:
                break a;default:
                t("163");}
          }V = V.nextEffect;
        }
      } catch (db) {
        e = !0, f = db;
      }e && (null === V ? t("178") : void 0, Mg(V, f), null !== V && (V = V.nextEffect));
    }for (V = d; null !== V;) {
      q = !1;u = void 0;try {
        for (; null !== V;) {
          var x = V.effectTag;x & 16 && pe(V.stateNode, "");if (x & 128) {
            var C = V.alternate;if (null !== C) {
              var p = C.ref;null !== p && ("function" === typeof p ? p(null) : p.current = null);
            }
          }switch (x & 14) {case 2:
              Rg(V);V.effectTag &= -3;break;case 6:
              Rg(V);
              V.effectTag &= -3;Sg(V.alternate, V);break;case 4:
              Sg(V.alternate, V);break;case 8:
              A = V;Pg(A);A.return = null;A.child = null;A.memoizedState = null;A.updateQueue = null;var G = A.alternate;null !== G && (G.return = null, G.child = null, G.memoizedState = null, G.updateQueue = null);}V = V.nextEffect;
        }
      } catch (db) {
        q = !0, u = db;
      }q && (null === V ? t("178") : void 0, Mg(V, u), null !== V && (V = V.nextEffect));
    }p = Ae;C = Td();x = p.focusedElem;q = p.selectionRange;if (C !== x && x && x.ownerDocument && Sd(x.ownerDocument.documentElement, x)) {
      null !== q && Ud(x) && (C = q.start, p = q.end, void 0 === p && (p = C), "selectionStart" in x ? (x.selectionStart = C, x.selectionEnd = Math.min(p, x.value.length)) : (p = (C = x.ownerDocument || document) && C.defaultView || window, p.getSelection && (p = p.getSelection(), u = x.textContent.length, G = Math.min(q.start, u), q = void 0 === q.end ? G : Math.min(q.end, u), !p.extend && G > q && (u = q, q = G, G = u), u = Rd(x, G), A = Rd(x, q), u && A && (1 !== p.rangeCount || p.anchorNode !== u.node || p.anchorOffset !== u.offset || p.focusNode !== A.node || p.focusOffset !== A.offset) && (C = C.createRange(), C.setStart(u.node, u.offset), p.removeAllRanges(), G > q ? (p.addRange(C), p.extend(A.node, A.offset)) : (C.setEnd(A.node, A.offset), p.addRange(C))))));C = [];for (p = x; p = p.parentNode;) 1 === p.nodeType && C.push({ element: p, left: p.scrollLeft, top: p.scrollTop });"function" === typeof x.focus && x.focus();for (x = 0; x < C.length; x++) p = C[x], p.element.scrollLeft = p.left, p.element.scrollTop = p.top;
    }Ae = null;Hd = !!ze;ze = null;a.current = b;for (V = d; null !== V;) {
      d = !1;x = void 0;try {
        for (C = c; null !== V;) {
          var Fb = V.effectTag;if (Fb & 36) {
            var Gb = V.alternate;p = V;G = C;switch (p.tag) {case 0:case 11:case 15:
                break;
              case 1:
                var Hc = p.stateNode;if (p.effectTag & 4) if (null === Gb) Hc.componentDidMount();else {
                  var ii = p.elementType === p.type ? Gb.memoizedProps : P(p.type, Gb.memoizedProps);Hc.componentDidUpdate(ii, Gb.memoizedState, Hc.__reactInternalSnapshotBeforeUpdate);
                }var Dg = p.updateQueue;null !== Dg && uf(p, Dg, Hc, G);break;case 3:
                var Eg = p.updateQueue;if (null !== Eg) {
                  q = null;if (null !== p.child) switch (p.child.tag) {case 5:
                      q = p.child.stateNode;break;case 1:
                      q = p.child.stateNode;}uf(p, Eg, q, G);
                }break;case 5:
                var ji = p.stateNode;null === Gb && p.effectTag & 4 && Be(p.type, p.memoizedProps) && ji.focus();break;case 6:
                break;case 4:
                break;case 12:
                break;case 13:
                break;case 17:
                break;default:
                t("163");}
          }if (Fb & 128) {
            var Ic = V.ref;if (null !== Ic) {
              var Fg = V.stateNode;switch (V.tag) {case 5:
                  var ce = Fg;break;default:
                  ce = Fg;}"function" === typeof Ic ? Ic(ce) : Ic.current = ce;
            }
          }V = V.nextEffect;
        }
      } catch (db) {
        d = !0, x = db;
      }d && (null === V ? t("178") : void 0, Mg(V, x), null !== V && (V = V.nextEffect));
    }dh = gh = !1;"function" === typeof Te && Te(b.stateNode);Fb = b.expirationTime;b = b.childExpirationTime;b = b > Fb ? b : Fb;0 === b && (Yg = null);a.expirationTime = b;a.finishedWork = null;
  }function Wg(a) {
    null === Ah ? t("246") : void 0;Ah.expirationTime = 0;Bh || (Bh = !0, Ch = a);
  }function Th(a, b) {
    var c = Z;Z = !0;try {
      return a(b);
    } finally {
      (Z = c) || X || Qh(1073741823, !1);
    }
  }function Uh(a, b) {
    if (Z && !Dh) {
      Dh = !0;try {
        return a(b);
      } finally {
        Dh = !1;
      }
    }return a(b);
  }function Wh(a, b, c) {
    if (qh) return a(b, c);Z || X || 0 === rh || (Qh(rh, !1), rh = 0);var d = qh,
        e = Z;Z = qh = !0;try {
      return a(b, c);
    } finally {
      qh = d, (Z = e) || X || Qh(1073741823, !1);
    }
  }
  function Xh(a, b, c, d, e) {
    var f = b.current;a: if (c) {
      c = c._reactInternalFiber;b: {
        2 === kd(c) && 1 === c.tag ? void 0 : t("170");var g = c;do {
          switch (g.tag) {case 3:
              g = g.stateNode.context;break b;case 1:
              if (M(g.type)) {
                g = g.stateNode.__reactInternalMemoizedMergedChildContext;break b;
              }}g = g.return;
        } while (null !== g);t("171");g = void 0;
      }if (1 === c.tag) {
        var h = c.type;if (M(h)) {
          c = Qe(c, h, g);break a;
        }
      }c = g;
    } else c = Ke;null === b.context ? b.context = c : b.pendingContext = c;b = e;e = nf(d);e.payload = { element: a };b = void 0 === b ? null : b;null !== b && (e.callback = b);
    Tf();pf(f, e);Uf(f, d);return d;
  }function Yh(a, b, c, d) {
    var e = b.current,
        f = Rf();e = Sf(f, e);return Xh(a, b, c, e, d);
  }function Zh(a) {
    a = a.current;if (!a.child) return null;switch (a.child.tag) {case 5:
        return a.child.stateNode;default:
        return a.child.stateNode;}
  }function $h(a, b, c) {
    var d = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null;return { $$typeof: $b, key: null == d ? null : "" + d, children: a, containerInfo: b, implementation: c };
  }
  Cb = function (a, b, c) {
    switch (b) {case "input":
        Cc(a, c);b = c.name;if ("radio" === c.type && null != b) {
          for (c = a; c.parentNode;) c = c.parentNode;c = c.querySelectorAll("input[name=" + JSON.stringify("" + b) + '][type="radio"]');for (b = 0; b < c.length; b++) {
            var d = c[b];if (d !== a && d.form === a.form) {
              var e = La(d);e ? void 0 : t("90");Wb(d);Cc(d, e);
            }
          }
        }break;case "textarea":
        ie(a, c);break;case "select":
        b = c.value, null != b && fe(a, !!c.multiple, b, !1);}
  };
  function ai(a) {
    var b = 1073741822 - 25 * (((1073741822 - Rf() + 500) / 25 | 0) + 1);b >= bh && (b = bh - 1);this._expirationTime = bh = b;this._root = a;this._callbacks = this._next = null;this._hasChildren = this._didComplete = !1;this._children = null;this._defer = !0;
  }ai.prototype.render = function (a) {
    this._defer ? void 0 : t("250");this._hasChildren = !0;this._children = a;var b = this._root._internalRoot,
        c = this._expirationTime,
        d = new bi();Xh(a, b, null, c, d._onCommit);return d;
  };
  ai.prototype.then = function (a) {
    if (this._didComplete) a();else {
      var b = this._callbacks;null === b && (b = this._callbacks = []);b.push(a);
    }
  };
  ai.prototype.commit = function () {
    var a = this._root._internalRoot,
        b = a.firstBatch;this._defer && null !== b ? void 0 : t("251");if (this._hasChildren) {
      var c = this._expirationTime;if (b !== this) {
        this._hasChildren && (c = this._expirationTime = b._expirationTime, this.render(this._children));for (var d = null, e = b; e !== this;) d = e, e = e._next;null === d ? t("251") : void 0;d._next = e._next;this._next = b;a.firstBatch = this;
      }this._defer = !1;Nh(a, c);b = this._next;this._next = null;b = a.firstBatch = b;null !== b && b._hasChildren && b.render(b._children);
    } else this._next = null, this._defer = !1;
  };ai.prototype._onComplete = function () {
    if (!this._didComplete) {
      this._didComplete = !0;var a = this._callbacks;if (null !== a) for (var b = 0; b < a.length; b++) (0, a[b])();
    }
  };function bi() {
    this._callbacks = null;this._didCommit = !1;this._onCommit = this._onCommit.bind(this);
  }bi.prototype.then = function (a) {
    if (this._didCommit) a();else {
      var b = this._callbacks;null === b && (b = this._callbacks = []);b.push(a);
    }
  };
  bi.prototype._onCommit = function () {
    if (!this._didCommit) {
      this._didCommit = !0;var a = this._callbacks;if (null !== a) for (var b = 0; b < a.length; b++) {
        var c = a[b];"function" !== typeof c ? t("191", c) : void 0;c();
      }
    }
  };
  function ci(a, b, c) {
    b = N(3, null, null, b ? 3 : 0);a = { current: b, containerInfo: a, pendingChildren: null, pingCache: null, earliestPendingTime: 0, latestPendingTime: 0, earliestSuspendedTime: 0, latestSuspendedTime: 0, latestPingedTime: 0, didError: !1, pendingCommitExpirationTime: 0, finishedWork: null, timeoutHandle: -1, context: null, pendingContext: null, hydrate: c, nextExpirationTimeToWorkOn: 0, expirationTime: 0, firstBatch: null, nextScheduledRoot: null };this._internalRoot = b.stateNode = a;
  }
  ci.prototype.render = function (a, b) {
    var c = this._internalRoot,
        d = new bi();b = void 0 === b ? null : b;null !== b && d.then(b);Yh(a, c, null, d._onCommit);return d;
  };ci.prototype.unmount = function (a) {
    var b = this._internalRoot,
        c = new bi();a = void 0 === a ? null : a;null !== a && c.then(a);Yh(null, b, null, c._onCommit);return c;
  };ci.prototype.legacy_renderSubtreeIntoContainer = function (a, b, c) {
    var d = this._internalRoot,
        e = new bi();c = void 0 === c ? null : c;null !== c && e.then(c);Yh(b, d, a, e._onCommit);return e;
  };
  ci.prototype.createBatch = function () {
    var a = new ai(this),
        b = a._expirationTime,
        c = this._internalRoot,
        d = c.firstBatch;if (null === d) c.firstBatch = a, a._next = null;else {
      for (c = null; null !== d && d._expirationTime >= b;) c = d, d = d._next;a._next = d;null !== c && (c._next = a);
    }return a;
  };function di(a) {
    return !(!a || 1 !== a.nodeType && 9 !== a.nodeType && 11 !== a.nodeType && (8 !== a.nodeType || " react-mount-point-unstable " !== a.nodeValue));
  }Kb = Th;Lb = Wh;Mb = function () {
    X || 0 === rh || (Qh(rh, !1), rh = 0);
  };
  function ei(a, b) {
    b || (b = a ? 9 === a.nodeType ? a.documentElement : a.firstChild : null, b = !(!b || 1 !== b.nodeType || !b.hasAttribute("data-reactroot")));if (!b) for (var c; c = a.lastChild;) a.removeChild(c);return new ci(a, !1, b);
  }
  function fi(a, b, c, d, e) {
    di(c) ? void 0 : t("200");var f = c._reactRootContainer;if (f) {
      if ("function" === typeof e) {
        var g = e;e = function () {
          var a = Zh(f._internalRoot);g.call(a);
        };
      }null != a ? f.legacy_renderSubtreeIntoContainer(a, b, e) : f.render(b, e);
    } else {
      f = c._reactRootContainer = ei(c, d);if ("function" === typeof e) {
        var h = e;e = function () {
          var a = Zh(f._internalRoot);h.call(a);
        };
      }Uh(function () {
        null != a ? f.legacy_renderSubtreeIntoContainer(a, b, e) : f.render(b, e);
      });
    }return Zh(f._internalRoot);
  }
  function gi(a, b) {
    var c = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null;di(b) ? void 0 : t("200");return $h(a, b, null, c);
  }
  var ki = { createPortal: gi, findDOMNode: function (a) {
      if (null == a) return null;if (1 === a.nodeType) return a;var b = a._reactInternalFiber;void 0 === b && ("function" === typeof a.render ? t("188") : t("268", Object.keys(a)));a = nd(b);a = null === a ? null : a.stateNode;return a;
    }, hydrate: function (a, b, c) {
      return fi(null, a, b, !0, c);
    }, render: function (a, b, c) {
      return fi(null, a, b, !1, c);
    }, unstable_renderSubtreeIntoContainer: function (a, b, c, d) {
      null == a || void 0 === a._reactInternalFiber ? t("38") : void 0;return fi(a, b, c, !1, d);
    }, unmountComponentAtNode: function (a) {
      di(a) ? void 0 : t("40");return a._reactRootContainer ? (Uh(function () {
        fi(null, null, a, !1, function () {
          a._reactRootContainer = null;
        });
      }), !0) : !1;
    }, unstable_createPortal: function () {
      return gi.apply(void 0, arguments);
    }, unstable_batchedUpdates: Th, unstable_interactiveUpdates: Wh, flushSync: function (a, b) {
      X ? t("187") : void 0;var c = Z;Z = !0;try {
        return wh(a, b);
      } finally {
        Z = c, Qh(1073741823, !1);
      }
    }, unstable_createRoot: hi, unstable_flushControlled: function (a) {
      var b = Z;Z = !0;try {
        wh(a);
      } finally {
        (Z = b) || X || Qh(1073741823, !1);
      }
    }, __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: { Events: [Ja, Ka, La, Ca.injectEventPluginsByName, qa, Ra, function (a) {
        za(a, Qa);
      }, Ib, Jb, Jd, Ea] } };function hi(a, b) {
    di(a) ? void 0 : t("299", "unstable_createRoot");return new ci(a, !0, null != b && !0 === b.hydrate);
  }(function (a) {
    var b = a.findFiberByHostInstance;return We(n({}, a, { overrideProps: null, findHostInstanceByFiber: function (a) {
        a = nd(a);return null === a ? null : a.stateNode;
      }, findFiberByHostInstance: function (a) {
        return b ? b(a) : null;
      } }));
  })({ findFiberByHostInstance: Ia, bundleType: 0, version: "16.7.0", rendererPackageName: "react-dom" });
  var li = { default: ki },
      mi = li && ki || li;module.exports = mi.default || mi;
});
System.registerDynamic("npm:scheduler@0.12.0/cjs/scheduler.production.min.js", [], true, function ($__require, exports, module) {
  /** @license React v0.12.0
   * scheduler.production.min.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   */

  'use strict';
  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: !0 });var c = null,
      f = !1,
      h = 3,
      k = -1,
      l = -1,
      m = !1,
      n = !1;function p() {
    if (!m) {
      var a = c.expirationTime;n ? q() : n = !0;r(t, a);
    }
  }
  function u() {
    var a = c,
        b = c.next;if (c === b) c = null;else {
      var d = c.previous;c = d.next = b;b.previous = d;
    }a.next = a.previous = null;d = a.callback;b = a.expirationTime;a = a.priorityLevel;var e = h,
        Q = l;h = a;l = b;try {
      var g = d();
    } finally {
      h = e, l = Q;
    }if ("function" === typeof g) if (g = { callback: g, priorityLevel: a, expirationTime: b, next: null, previous: null }, null === c) c = g.next = g.previous = g;else {
      d = null;a = c;do {
        if (a.expirationTime >= b) {
          d = a;break;
        }a = a.next;
      } while (a !== c);null === d ? d = c : d === c && (c = g, p());b = d.previous;b.next = d.previous = g;g.next = d;g.previous = b;
    }
  }function v() {
    if (-1 === k && null !== c && 1 === c.priorityLevel) {
      m = !0;try {
        do u(); while (null !== c && 1 === c.priorityLevel);
      } finally {
        m = !1, null !== c ? p() : n = !1;
      }
    }
  }function t(a) {
    m = !0;var b = f;f = a;try {
      if (a) for (; null !== c;) {
        var d = exports.unstable_now();if (c.expirationTime <= d) {
          do u(); while (null !== c && c.expirationTime <= d);
        } else break;
      } else if (null !== c) {
        do u(); while (null !== c && !w());
      }
    } finally {
      m = !1, f = b, null !== c ? p() : n = !1, v();
    }
  }
  var x = Date,
      y = "function" === typeof setTimeout ? setTimeout : void 0,
      z = "function" === typeof clearTimeout ? clearTimeout : void 0,
      A = "function" === typeof requestAnimationFrame ? requestAnimationFrame : void 0,
      B = "function" === typeof cancelAnimationFrame ? cancelAnimationFrame : void 0,
      C,
      D;function E(a) {
    C = A(function (b) {
      z(D);a(b);
    });D = y(function () {
      B(C);a(exports.unstable_now());
    }, 100);
  }
  if ("object" === typeof performance && "function" === typeof performance.now) {
    var F = performance;exports.unstable_now = function () {
      return F.now();
    };
  } else exports.unstable_now = function () {
    return x.now();
  };var r,
      q,
      w,
      G = null;"undefined" !== typeof window ? G = window : "undefined" !== typeof global && (G = global);
  if (G && G._schedMock) {
    var H = G._schedMock;r = H[0];q = H[1];w = H[2];exports.unstable_now = H[3];
  } else if ("undefined" === typeof window || "function" !== typeof MessageChannel) {
    var I = null,
        J = function (a) {
      if (null !== I) try {
        I(a);
      } finally {
        I = null;
      }
    };r = function (a) {
      null !== I ? setTimeout(r, 0, a) : (I = a, setTimeout(J, 0, !1));
    };q = function () {
      I = null;
    };w = function () {
      return !1;
    };
  } else {
    "undefined" !== typeof console && ("function" !== typeof A && console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"), "function" !== typeof B && console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"));var K = null,
        L = !1,
        M = -1,
        N = !1,
        O = !1,
        P = 0,
        R = 33,
        S = 33;w = function () {
      return P <= exports.unstable_now();
    };var T = new MessageChannel(),
        U = T.port2;T.port1.onmessage = function () {
      L = !1;var a = K,
          b = M;K = null;M = -1;var d = exports.unstable_now(),
          e = !1;if (0 >= P - d) if (-1 !== b && b <= d) e = !0;else {
        N || (N = !0, E(V));K = a;M = b;return;
      }if (null !== a) {
        O = !0;try {
          a(e);
        } finally {
          O = !1;
        }
      }
    };
    var V = function (a) {
      if (null !== K) {
        E(V);var b = a - P + S;b < S && R < S ? (8 > b && (b = 8), S = b < R ? R : b) : R = b;P = a + S;L || (L = !0, U.postMessage(void 0));
      } else N = !1;
    };r = function (a, b) {
      K = a;M = b;O || 0 > b ? U.postMessage(void 0) : N || (N = !0, E(V));
    };q = function () {
      K = null;L = !1;M = -1;
    };
  }exports.unstable_ImmediatePriority = 1;exports.unstable_UserBlockingPriority = 2;exports.unstable_NormalPriority = 3;exports.unstable_IdlePriority = 5;exports.unstable_LowPriority = 4;
  exports.unstable_runWithPriority = function (a, b) {
    switch (a) {case 1:case 2:case 3:case 4:case 5:
        break;default:
        a = 3;}var d = h,
        e = k;h = a;k = exports.unstable_now();try {
      return b();
    } finally {
      h = d, k = e, v();
    }
  };
  exports.unstable_scheduleCallback = function (a, b) {
    var d = -1 !== k ? k : exports.unstable_now();if ("object" === typeof b && null !== b && "number" === typeof b.timeout) b = d + b.timeout;else switch (h) {case 1:
        b = d + -1;break;case 2:
        b = d + 250;break;case 5:
        b = d + 1073741823;break;case 4:
        b = d + 1E4;break;default:
        b = d + 5E3;}a = { callback: a, priorityLevel: h, expirationTime: b, next: null, previous: null };if (null === c) c = a.next = a.previous = a, p();else {
      d = null;var e = c;do {
        if (e.expirationTime > b) {
          d = e;break;
        }e = e.next;
      } while (e !== c);null === d ? d = c : d === c && (c = a, p());
      b = d.previous;b.next = d.previous = a;a.next = d;a.previous = b;
    }return a;
  };exports.unstable_cancelCallback = function (a) {
    var b = a.next;if (null !== b) {
      if (b === a) c = null;else {
        a === c && (c = b);var d = a.previous;d.next = b;b.previous = d;
      }a.next = a.previous = null;
    }
  };exports.unstable_wrapCallback = function (a) {
    var b = h;return function () {
      var d = h,
          e = k;h = b;k = exports.unstable_now();try {
        return a.apply(this, arguments);
      } finally {
        h = d, k = e, v();
      }
    };
  };exports.unstable_getCurrentPriorityLevel = function () {
    return h;
  };
  exports.unstable_shouldYield = function () {
    return !f && (null !== c && c.expirationTime < l || w());
  };exports.unstable_continueExecution = function () {
    null !== c && p();
  };exports.unstable_pauseExecution = function () {};exports.unstable_getFirstCallbackNode = function () {
    return c;
  };
});
System.registerDynamic('npm:scheduler@0.12.0/cjs/scheduler.development.js', ['github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    if ('production' !== "production") {
      (function () {
        'use strict';

        Object.defineProperty(exports, '__esModule', { value: true });
        var enableSchedulerDebugging = true;
        var ImmediatePriority = 1;
        var UserBlockingPriority = 2;
        var NormalPriority = 3;
        var LowPriority = 4;
        var IdlePriority = 5;
        var maxSigned31BitInt = 1073741823;
        var IMMEDIATE_PRIORITY_TIMEOUT = -1;
        var USER_BLOCKING_PRIORITY = 250;
        var NORMAL_PRIORITY_TIMEOUT = 5000;
        var LOW_PRIORITY_TIMEOUT = 10000;
        var IDLE_PRIORITY = maxSigned31BitInt;
        var firstCallbackNode = null;
        var currentDidTimeout = false;
        var isSchedulerPaused = false;
        var currentPriorityLevel = NormalPriority;
        var currentEventStartTime = -1;
        var currentExpirationTime = -1;
        var isExecutingCallback = false;
        var isHostCallbackScheduled = false;
        var hasNativePerformanceNow = typeof performance === 'object' && typeof performance.now === 'function';
        function ensureHostCallbackIsScheduled() {
          if (isExecutingCallback) {
            return;
          }
          var expirationTime = firstCallbackNode.expirationTime;
          if (!isHostCallbackScheduled) {
            isHostCallbackScheduled = true;
          } else {
            cancelHostCallback();
          }
          requestHostCallback(flushWork, expirationTime);
        }
        function flushFirstCallback() {
          var flushedNode = firstCallbackNode;
          var next = firstCallbackNode.next;
          if (firstCallbackNode === next) {
            firstCallbackNode = null;
            next = null;
          } else {
            var lastCallbackNode = firstCallbackNode.previous;
            firstCallbackNode = lastCallbackNode.next = next;
            next.previous = lastCallbackNode;
          }
          flushedNode.next = flushedNode.previous = null;
          var callback = flushedNode.callback;
          var expirationTime = flushedNode.expirationTime;
          var priorityLevel = flushedNode.priorityLevel;
          var previousPriorityLevel = currentPriorityLevel;
          var previousExpirationTime = currentExpirationTime;
          currentPriorityLevel = priorityLevel;
          currentExpirationTime = expirationTime;
          var continuationCallback;
          try {
            continuationCallback = callback();
          } finally {
            currentPriorityLevel = previousPriorityLevel;
            currentExpirationTime = previousExpirationTime;
          }
          if (typeof continuationCallback === 'function') {
            var continuationNode = {
              callback: continuationCallback,
              priorityLevel: priorityLevel,
              expirationTime: expirationTime,
              next: null,
              previous: null
            };
            if (firstCallbackNode === null) {
              firstCallbackNode = continuationNode.next = continuationNode.previous = continuationNode;
            } else {
              var nextAfterContinuation = null;
              var node = firstCallbackNode;
              do {
                if (node.expirationTime >= expirationTime) {
                  nextAfterContinuation = node;
                  break;
                }
                node = node.next;
              } while (node !== firstCallbackNode);
              if (nextAfterContinuation === null) {
                nextAfterContinuation = firstCallbackNode;
              } else if (nextAfterContinuation === firstCallbackNode) {
                firstCallbackNode = continuationNode;
                ensureHostCallbackIsScheduled();
              }
              var previous = nextAfterContinuation.previous;
              previous.next = nextAfterContinuation.previous = continuationNode;
              continuationNode.next = nextAfterContinuation;
              continuationNode.previous = previous;
            }
          }
        }
        function flushImmediateWork() {
          if (currentEventStartTime === -1 && firstCallbackNode !== null && firstCallbackNode.priorityLevel === ImmediatePriority) {
            isExecutingCallback = true;
            try {
              do {
                flushFirstCallback();
              } while (firstCallbackNode !== null && firstCallbackNode.priorityLevel === ImmediatePriority);
            } finally {
              isExecutingCallback = false;
              if (firstCallbackNode !== null) {
                ensureHostCallbackIsScheduled();
              } else {
                isHostCallbackScheduled = false;
              }
            }
          }
        }
        function flushWork(didTimeout) {
          if (enableSchedulerDebugging && isSchedulerPaused) {
            return;
          }
          isExecutingCallback = true;
          var previousDidTimeout = currentDidTimeout;
          currentDidTimeout = didTimeout;
          try {
            if (didTimeout) {
              while (firstCallbackNode !== null && !(enableSchedulerDebugging && isSchedulerPaused)) {
                var currentTime = exports.unstable_now();
                if (firstCallbackNode.expirationTime <= currentTime) {
                  do {
                    flushFirstCallback();
                  } while (firstCallbackNode !== null && firstCallbackNode.expirationTime <= currentTime && !(enableSchedulerDebugging && isSchedulerPaused));
                  continue;
                }
                break;
              }
            } else {
              if (firstCallbackNode !== null) {
                do {
                  if (enableSchedulerDebugging && isSchedulerPaused) {
                    break;
                  }
                  flushFirstCallback();
                } while (firstCallbackNode !== null && !shouldYieldToHost());
              }
            }
          } finally {
            isExecutingCallback = false;
            currentDidTimeout = previousDidTimeout;
            if (firstCallbackNode !== null) {
              ensureHostCallbackIsScheduled();
            } else {
              isHostCallbackScheduled = false;
            }
            flushImmediateWork();
          }
        }
        function unstable_runWithPriority(priorityLevel, eventHandler) {
          switch (priorityLevel) {
            case ImmediatePriority:
            case UserBlockingPriority:
            case NormalPriority:
            case LowPriority:
            case IdlePriority:
              break;
            default:
              priorityLevel = NormalPriority;
          }
          var previousPriorityLevel = currentPriorityLevel;
          var previousEventStartTime = currentEventStartTime;
          currentPriorityLevel = priorityLevel;
          currentEventStartTime = exports.unstable_now();
          try {
            return eventHandler();
          } finally {
            currentPriorityLevel = previousPriorityLevel;
            currentEventStartTime = previousEventStartTime;
            flushImmediateWork();
          }
        }
        function unstable_wrapCallback(callback) {
          var parentPriorityLevel = currentPriorityLevel;
          return function () {
            var previousPriorityLevel = currentPriorityLevel;
            var previousEventStartTime = currentEventStartTime;
            currentPriorityLevel = parentPriorityLevel;
            currentEventStartTime = exports.unstable_now();
            try {
              return callback.apply(this, arguments);
            } finally {
              currentPriorityLevel = previousPriorityLevel;
              currentEventStartTime = previousEventStartTime;
              flushImmediateWork();
            }
          };
        }
        function unstable_scheduleCallback(callback, deprecated_options) {
          var startTime = currentEventStartTime !== -1 ? currentEventStartTime : exports.unstable_now();
          var expirationTime;
          if (typeof deprecated_options === 'object' && deprecated_options !== null && typeof deprecated_options.timeout === 'number') {
            expirationTime = startTime + deprecated_options.timeout;
          } else {
            switch (currentPriorityLevel) {
              case ImmediatePriority:
                expirationTime = startTime + IMMEDIATE_PRIORITY_TIMEOUT;
                break;
              case UserBlockingPriority:
                expirationTime = startTime + USER_BLOCKING_PRIORITY;
                break;
              case IdlePriority:
                expirationTime = startTime + IDLE_PRIORITY;
                break;
              case LowPriority:
                expirationTime = startTime + LOW_PRIORITY_TIMEOUT;
                break;
              case NormalPriority:
              default:
                expirationTime = startTime + NORMAL_PRIORITY_TIMEOUT;
            }
          }
          var newNode = {
            callback: callback,
            priorityLevel: currentPriorityLevel,
            expirationTime: expirationTime,
            next: null,
            previous: null
          };
          if (firstCallbackNode === null) {
            firstCallbackNode = newNode.next = newNode.previous = newNode;
            ensureHostCallbackIsScheduled();
          } else {
            var next = null;
            var node = firstCallbackNode;
            do {
              if (node.expirationTime > expirationTime) {
                next = node;
                break;
              }
              node = node.next;
            } while (node !== firstCallbackNode);
            if (next === null) {
              next = firstCallbackNode;
            } else if (next === firstCallbackNode) {
              firstCallbackNode = newNode;
              ensureHostCallbackIsScheduled();
            }
            var previous = next.previous;
            previous.next = next.previous = newNode;
            newNode.next = next;
            newNode.previous = previous;
          }
          return newNode;
        }
        function unstable_pauseExecution() {
          isSchedulerPaused = true;
        }
        function unstable_continueExecution() {
          isSchedulerPaused = false;
          if (firstCallbackNode !== null) {
            ensureHostCallbackIsScheduled();
          }
        }
        function unstable_getFirstCallbackNode() {
          return firstCallbackNode;
        }
        function unstable_cancelCallback(callbackNode) {
          var next = callbackNode.next;
          if (next === null) {
            return;
          }
          if (next === callbackNode) {
            firstCallbackNode = null;
          } else {
            if (callbackNode === firstCallbackNode) {
              firstCallbackNode = next;
            }
            var previous = callbackNode.previous;
            previous.next = next;
            next.previous = previous;
          }
          callbackNode.next = callbackNode.previous = null;
        }
        function unstable_getCurrentPriorityLevel() {
          return currentPriorityLevel;
        }
        function unstable_shouldYield() {
          return !currentDidTimeout && (firstCallbackNode !== null && firstCallbackNode.expirationTime < currentExpirationTime || shouldYieldToHost());
        }
        var localDate = Date;
        var localSetTimeout = typeof setTimeout === 'function' ? setTimeout : undefined;
        var localClearTimeout = typeof clearTimeout === 'function' ? clearTimeout : undefined;
        var localRequestAnimationFrame = typeof requestAnimationFrame === 'function' ? requestAnimationFrame : undefined;
        var localCancelAnimationFrame = typeof cancelAnimationFrame === 'function' ? cancelAnimationFrame : undefined;
        var ANIMATION_FRAME_TIMEOUT = 100;
        var rAFID;
        var rAFTimeoutID;
        var requestAnimationFrameWithTimeout = function (callback) {
          rAFID = localRequestAnimationFrame(function (timestamp) {
            localClearTimeout(rAFTimeoutID);
            callback(timestamp);
          });
          rAFTimeoutID = localSetTimeout(function () {
            localCancelAnimationFrame(rAFID);
            callback(exports.unstable_now());
          }, ANIMATION_FRAME_TIMEOUT);
        };
        if (hasNativePerformanceNow) {
          var Performance = performance;
          exports.unstable_now = function () {
            return Performance.now();
          };
        } else {
          exports.unstable_now = function () {
            return localDate.now();
          };
        }
        var requestHostCallback;
        var cancelHostCallback;
        var shouldYieldToHost;
        var globalValue = null;
        if (typeof window !== 'undefined') {
          globalValue = window;
        } else if (typeof global !== 'undefined') {
          globalValue = global;
        }
        if (globalValue && globalValue._schedMock) {
          var globalImpl = globalValue._schedMock;
          requestHostCallback = globalImpl[0];
          cancelHostCallback = globalImpl[1];
          shouldYieldToHost = globalImpl[2];
          exports.unstable_now = globalImpl[3];
        } else if (typeof window === 'undefined' || typeof MessageChannel !== 'function') {
          var _callback = null;
          var _flushCallback = function (didTimeout) {
            if (_callback !== null) {
              try {
                _callback(didTimeout);
              } finally {
                _callback = null;
              }
            }
          };
          requestHostCallback = function (cb, ms) {
            if (_callback !== null) {
              setTimeout(requestHostCallback, 0, cb);
            } else {
              _callback = cb;
              setTimeout(_flushCallback, 0, false);
            }
          };
          cancelHostCallback = function () {
            _callback = null;
          };
          shouldYieldToHost = function () {
            return false;
          };
        } else {
          if (typeof console !== 'undefined') {
            if (typeof localRequestAnimationFrame !== 'function') {
              console.error("This browser doesn't support requestAnimationFrame. " + 'Make sure that you load a ' + 'polyfill in older browsers. https://fb.me/react-polyfills');
            }
            if (typeof localCancelAnimationFrame !== 'function') {
              console.error("This browser doesn't support cancelAnimationFrame. " + 'Make sure that you load a ' + 'polyfill in older browsers. https://fb.me/react-polyfills');
            }
          }
          var scheduledHostCallback = null;
          var isMessageEventScheduled = false;
          var timeoutTime = -1;
          var isAnimationFrameScheduled = false;
          var isFlushingHostCallback = false;
          var frameDeadline = 0;
          var previousFrameTime = 33;
          var activeFrameTime = 33;
          shouldYieldToHost = function () {
            return frameDeadline <= exports.unstable_now();
          };
          var channel = new MessageChannel();
          var port = channel.port2;
          channel.port1.onmessage = function (event) {
            isMessageEventScheduled = false;
            var prevScheduledCallback = scheduledHostCallback;
            var prevTimeoutTime = timeoutTime;
            scheduledHostCallback = null;
            timeoutTime = -1;
            var currentTime = exports.unstable_now();
            var didTimeout = false;
            if (frameDeadline - currentTime <= 0) {
              if (prevTimeoutTime !== -1 && prevTimeoutTime <= currentTime) {
                didTimeout = true;
              } else {
                if (!isAnimationFrameScheduled) {
                  isAnimationFrameScheduled = true;
                  requestAnimationFrameWithTimeout(animationTick);
                }
                scheduledHostCallback = prevScheduledCallback;
                timeoutTime = prevTimeoutTime;
                return;
              }
            }
            if (prevScheduledCallback !== null) {
              isFlushingHostCallback = true;
              try {
                prevScheduledCallback(didTimeout);
              } finally {
                isFlushingHostCallback = false;
              }
            }
          };
          var animationTick = function (rafTime) {
            if (scheduledHostCallback !== null) {
              requestAnimationFrameWithTimeout(animationTick);
            } else {
              isAnimationFrameScheduled = false;
              return;
            }
            var nextFrameTime = rafTime - frameDeadline + activeFrameTime;
            if (nextFrameTime < activeFrameTime && previousFrameTime < activeFrameTime) {
              if (nextFrameTime < 8) {
                nextFrameTime = 8;
              }
              activeFrameTime = nextFrameTime < previousFrameTime ? previousFrameTime : nextFrameTime;
            } else {
              previousFrameTime = nextFrameTime;
            }
            frameDeadline = rafTime + activeFrameTime;
            if (!isMessageEventScheduled) {
              isMessageEventScheduled = true;
              port.postMessage(undefined);
            }
          };
          requestHostCallback = function (callback, absoluteTimeout) {
            scheduledHostCallback = callback;
            timeoutTime = absoluteTimeout;
            if (isFlushingHostCallback || absoluteTimeout < 0) {
              port.postMessage(undefined);
            } else if (!isAnimationFrameScheduled) {
              isAnimationFrameScheduled = true;
              requestAnimationFrameWithTimeout(animationTick);
            }
          };
          cancelHostCallback = function () {
            scheduledHostCallback = null;
            isMessageEventScheduled = false;
            timeoutTime = -1;
          };
        }
        exports.unstable_ImmediatePriority = ImmediatePriority;
        exports.unstable_UserBlockingPriority = UserBlockingPriority;
        exports.unstable_NormalPriority = NormalPriority;
        exports.unstable_IdlePriority = IdlePriority;
        exports.unstable_LowPriority = LowPriority;
        exports.unstable_runWithPriority = unstable_runWithPriority;
        exports.unstable_scheduleCallback = unstable_scheduleCallback;
        exports.unstable_cancelCallback = unstable_cancelCallback;
        exports.unstable_wrapCallback = unstable_wrapCallback;
        exports.unstable_getCurrentPriorityLevel = unstable_getCurrentPriorityLevel;
        exports.unstable_shouldYield = unstable_shouldYield;
        exports.unstable_continueExecution = unstable_continueExecution;
        exports.unstable_pauseExecution = unstable_pauseExecution;
        exports.unstable_getFirstCallbackNode = unstable_getFirstCallbackNode;
      })();
    }
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:scheduler@0.12.0/index.js', ['npm:scheduler@0.12.0/cjs/scheduler.production.min.js', 'npm:scheduler@0.12.0/cjs/scheduler.development.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    if ('production' === 'production') {
      module.exports = $__require('npm:scheduler@0.12.0/cjs/scheduler.production.min.js');
    } else {
      module.exports = $__require('npm:scheduler@0.12.0/cjs/scheduler.development.js');
    }
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic("npm:scheduler@0.12.0.js", ["npm:scheduler@0.12.0/index.js"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("npm:scheduler@0.12.0/index.js");
});
System.registerDynamic("npm:scheduler@0.12.0/cjs/scheduler-tracing.production.min.js", [], true, function ($__require, exports, module) {
  /** @license React v0.12.0
   * scheduler-tracing.production.min.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   */

  'use strict';
  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: !0 });var b = 0;exports.__interactionsRef = null;exports.__subscriberRef = null;exports.unstable_clear = function (a) {
    return a();
  };exports.unstable_getCurrent = function () {
    return null;
  };exports.unstable_getThreadID = function () {
    return ++b;
  };exports.unstable_trace = function (a, d, c) {
    return c();
  };exports.unstable_wrap = function (a) {
    return a;
  };exports.unstable_subscribe = function () {};exports.unstable_unsubscribe = function () {};
});
System.registerDynamic('npm:scheduler@0.12.0/cjs/scheduler-tracing.development.js', ['github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    if ('production' !== "production") {
      (function () {
        'use strict';

        Object.defineProperty(exports, '__esModule', { value: true });
        var enableSchedulerTracing = true;
        var DEFAULT_THREAD_ID = 0;
        var interactionIDCounter = 0;
        var threadIDCounter = 0;
        exports.__interactionsRef = null;
        exports.__subscriberRef = null;
        if (enableSchedulerTracing) {
          exports.__interactionsRef = { current: new Set() };
          exports.__subscriberRef = { current: null };
        }
        function unstable_clear(callback) {
          if (!enableSchedulerTracing) {
            return callback();
          }
          var prevInteractions = exports.__interactionsRef.current;
          exports.__interactionsRef.current = new Set();
          try {
            return callback();
          } finally {
            exports.__interactionsRef.current = prevInteractions;
          }
        }
        function unstable_getCurrent() {
          if (!enableSchedulerTracing) {
            return null;
          } else {
            return exports.__interactionsRef.current;
          }
        }
        function unstable_getThreadID() {
          return ++threadIDCounter;
        }
        function unstable_trace(name, timestamp, callback) {
          var threadID = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : DEFAULT_THREAD_ID;
          if (!enableSchedulerTracing) {
            return callback();
          }
          var interaction = {
            __count: 1,
            id: interactionIDCounter++,
            name: name,
            timestamp: timestamp
          };
          var prevInteractions = exports.__interactionsRef.current;
          var interactions = new Set(prevInteractions);
          interactions.add(interaction);
          exports.__interactionsRef.current = interactions;
          var subscriber = exports.__subscriberRef.current;
          var returnValue = void 0;
          try {
            if (subscriber !== null) {
              subscriber.onInteractionTraced(interaction);
            }
          } finally {
            try {
              if (subscriber !== null) {
                subscriber.onWorkStarted(interactions, threadID);
              }
            } finally {
              try {
                returnValue = callback();
              } finally {
                exports.__interactionsRef.current = prevInteractions;
                try {
                  if (subscriber !== null) {
                    subscriber.onWorkStopped(interactions, threadID);
                  }
                } finally {
                  interaction.__count--;
                  if (subscriber !== null && interaction.__count === 0) {
                    subscriber.onInteractionScheduledWorkCompleted(interaction);
                  }
                }
              }
            }
          }
          return returnValue;
        }
        function unstable_wrap(callback) {
          var threadID = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_THREAD_ID;
          if (!enableSchedulerTracing) {
            return callback;
          }
          var wrappedInteractions = exports.__interactionsRef.current;
          var subscriber = exports.__subscriberRef.current;
          if (subscriber !== null) {
            subscriber.onWorkScheduled(wrappedInteractions, threadID);
          }
          wrappedInteractions.forEach(function (interaction) {
            interaction.__count++;
          });
          var hasRun = false;
          function wrapped() {
            var prevInteractions = exports.__interactionsRef.current;
            exports.__interactionsRef.current = wrappedInteractions;
            subscriber = exports.__subscriberRef.current;
            try {
              var returnValue = void 0;
              try {
                if (subscriber !== null) {
                  subscriber.onWorkStarted(wrappedInteractions, threadID);
                }
              } finally {
                try {
                  returnValue = callback.apply(undefined, arguments);
                } finally {
                  exports.__interactionsRef.current = prevInteractions;
                  if (subscriber !== null) {
                    subscriber.onWorkStopped(wrappedInteractions, threadID);
                  }
                }
              }
              return returnValue;
            } finally {
              if (!hasRun) {
                hasRun = true;
                wrappedInteractions.forEach(function (interaction) {
                  interaction.__count--;
                  if (subscriber !== null && interaction.__count === 0) {
                    subscriber.onInteractionScheduledWorkCompleted(interaction);
                  }
                });
              }
            }
          }
          wrapped.cancel = function cancel() {
            subscriber = exports.__subscriberRef.current;
            try {
              if (subscriber !== null) {
                subscriber.onWorkCanceled(wrappedInteractions, threadID);
              }
            } finally {
              wrappedInteractions.forEach(function (interaction) {
                interaction.__count--;
                if (subscriber && interaction.__count === 0) {
                  subscriber.onInteractionScheduledWorkCompleted(interaction);
                }
              });
            }
          };
          return wrapped;
        }
        var subscribers = null;
        if (enableSchedulerTracing) {
          subscribers = new Set();
        }
        function unstable_subscribe(subscriber) {
          if (enableSchedulerTracing) {
            subscribers.add(subscriber);
            if (subscribers.size === 1) {
              exports.__subscriberRef.current = {
                onInteractionScheduledWorkCompleted: onInteractionScheduledWorkCompleted,
                onInteractionTraced: onInteractionTraced,
                onWorkCanceled: onWorkCanceled,
                onWorkScheduled: onWorkScheduled,
                onWorkStarted: onWorkStarted,
                onWorkStopped: onWorkStopped
              };
            }
          }
        }
        function unstable_unsubscribe(subscriber) {
          if (enableSchedulerTracing) {
            subscribers.delete(subscriber);
            if (subscribers.size === 0) {
              exports.__subscriberRef.current = null;
            }
          }
        }
        function onInteractionTraced(interaction) {
          var didCatchError = false;
          var caughtError = null;
          subscribers.forEach(function (subscriber) {
            try {
              subscriber.onInteractionTraced(interaction);
            } catch (error) {
              if (!didCatchError) {
                didCatchError = true;
                caughtError = error;
              }
            }
          });
          if (didCatchError) {
            throw caughtError;
          }
        }
        function onInteractionScheduledWorkCompleted(interaction) {
          var didCatchError = false;
          var caughtError = null;
          subscribers.forEach(function (subscriber) {
            try {
              subscriber.onInteractionScheduledWorkCompleted(interaction);
            } catch (error) {
              if (!didCatchError) {
                didCatchError = true;
                caughtError = error;
              }
            }
          });
          if (didCatchError) {
            throw caughtError;
          }
        }
        function onWorkScheduled(interactions, threadID) {
          var didCatchError = false;
          var caughtError = null;
          subscribers.forEach(function (subscriber) {
            try {
              subscriber.onWorkScheduled(interactions, threadID);
            } catch (error) {
              if (!didCatchError) {
                didCatchError = true;
                caughtError = error;
              }
            }
          });
          if (didCatchError) {
            throw caughtError;
          }
        }
        function onWorkStarted(interactions, threadID) {
          var didCatchError = false;
          var caughtError = null;
          subscribers.forEach(function (subscriber) {
            try {
              subscriber.onWorkStarted(interactions, threadID);
            } catch (error) {
              if (!didCatchError) {
                didCatchError = true;
                caughtError = error;
              }
            }
          });
          if (didCatchError) {
            throw caughtError;
          }
        }
        function onWorkStopped(interactions, threadID) {
          var didCatchError = false;
          var caughtError = null;
          subscribers.forEach(function (subscriber) {
            try {
              subscriber.onWorkStopped(interactions, threadID);
            } catch (error) {
              if (!didCatchError) {
                didCatchError = true;
                caughtError = error;
              }
            }
          });
          if (didCatchError) {
            throw caughtError;
          }
        }
        function onWorkCanceled(interactions, threadID) {
          var didCatchError = false;
          var caughtError = null;
          subscribers.forEach(function (subscriber) {
            try {
              subscriber.onWorkCanceled(interactions, threadID);
            } catch (error) {
              if (!didCatchError) {
                didCatchError = true;
                caughtError = error;
              }
            }
          });
          if (didCatchError) {
            throw caughtError;
          }
        }
        exports.unstable_clear = unstable_clear;
        exports.unstable_getCurrent = unstable_getCurrent;
        exports.unstable_getThreadID = unstable_getThreadID;
        exports.unstable_trace = unstable_trace;
        exports.unstable_wrap = unstable_wrap;
        exports.unstable_subscribe = unstable_subscribe;
        exports.unstable_unsubscribe = unstable_unsubscribe;
      })();
    }
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:scheduler@0.12.0/tracing.js', ['npm:scheduler@0.12.0/cjs/scheduler-tracing.production.min.js', 'npm:scheduler@0.12.0/cjs/scheduler-tracing.development.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    if ('production' === 'production') {
      module.exports = $__require('npm:scheduler@0.12.0/cjs/scheduler-tracing.production.min.js');
    } else {
      module.exports = $__require('npm:scheduler@0.12.0/cjs/scheduler-tracing.development.js');
    }
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react-dom@16.7.0/cjs/react-dom.development.js', ['npm:react@16.7.0.js', 'npm:object-assign@4.1.1.js', 'npm:prop-types@15.6.2/checkPropTypes.js', 'npm:scheduler@0.12.0.js', 'npm:scheduler@0.12.0/tracing.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    if ('production' !== "production") {
      (function () {
        'use strict';

        var React = $__require('npm:react@16.7.0.js');
        var _assign = $__require('npm:object-assign@4.1.1.js');
        var checkPropTypes = $__require('npm:prop-types@15.6.2/checkPropTypes.js');
        var scheduler = $__require('npm:scheduler@0.12.0.js');
        var tracing = $__require('npm:scheduler@0.12.0/tracing.js');
        var validateFormat = function () {};
        {
          validateFormat = function (format) {
            if (format === undefined) {
              throw new Error('invariant requires an error message argument');
            }
          };
        }
        function invariant(condition, format, a, b, c, d, e, f) {
          validateFormat(format);
          if (!condition) {
            var error = void 0;
            if (format === undefined) {
              error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
            } else {
              var args = [a, b, c, d, e, f];
              var argIndex = 0;
              error = new Error(format.replace(/%s/g, function () {
                return args[argIndex++];
              }));
              error.name = 'Invariant Violation';
            }
            error.framesToPop = 1;
            throw error;
          }
        }
        !React ? invariant(false, 'ReactDOM was loaded before React. Make sure you load the React package before loading ReactDOM.') : void 0;
        var invokeGuardedCallbackImpl = function (name, func, context, a, b, c, d, e, f) {
          var funcArgs = Array.prototype.slice.call(arguments, 3);
          try {
            func.apply(context, funcArgs);
          } catch (error) {
            this.onError(error);
          }
        };
        {
          if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
            var fakeNode = document.createElement('react');
            var invokeGuardedCallbackDev = function (name, func, context, a, b, c, d, e, f) {
              !(typeof document !== 'undefined') ? invariant(false, 'The `document` global was defined when React was initialized, but is not defined anymore. This can happen in a test environment if a component schedules an update from an asynchronous callback, but the test has already finished running. To solve this, you can either unmount the component at the end of your test (and ensure that any asynchronous operations get canceled in `componentWillUnmount`), or you can change the test itself to be asynchronous.') : void 0;
              var evt = document.createEvent('Event');
              var didError = true;
              var windowEvent = window.event;
              var windowEventDescriptor = Object.getOwnPropertyDescriptor(window, 'event');
              var funcArgs = Array.prototype.slice.call(arguments, 3);
              function callCallback() {
                fakeNode.removeEventListener(evtType, callCallback, false);
                if (typeof window.event !== 'undefined' && window.hasOwnProperty('event')) {
                  window.event = windowEvent;
                }
                func.apply(context, funcArgs);
                didError = false;
              }
              var error = void 0;
              var didSetError = false;
              var isCrossOriginError = false;
              function handleWindowError(event) {
                error = event.error;
                didSetError = true;
                if (error === null && event.colno === 0 && event.lineno === 0) {
                  isCrossOriginError = true;
                }
                if (event.defaultPrevented) {
                  if (error != null && typeof error === 'object') {
                    try {
                      error._suppressLogging = true;
                    } catch (inner) {}
                  }
                }
              }
              var evtType = 'react-' + (name ? name : 'invokeguardedcallback');
              window.addEventListener('error', handleWindowError);
              fakeNode.addEventListener(evtType, callCallback, false);
              evt.initEvent(evtType, false, false);
              fakeNode.dispatchEvent(evt);
              if (windowEventDescriptor) {
                Object.defineProperty(window, 'event', windowEventDescriptor);
              }
              if (didError) {
                if (!didSetError) {
                  error = new Error('An error was thrown inside one of your components, but React ' + "doesn't know what it was. This is likely due to browser " + 'flakiness. React does its best to preserve the "Pause on ' + 'exceptions" behavior of the DevTools, which requires some ' + "DEV-mode only tricks. It's possible that these don't work in " + 'your browser. Try triggering the error in production mode, ' + 'or switching to a modern browser. If you suspect that this is ' + 'actually an issue with React, please file an issue.');
                } else if (isCrossOriginError) {
                  error = new Error("A cross-origin error was thrown. React doesn't have access to " + 'the actual error object in development. ' + 'See https://fb.me/react-crossorigin-error for more information.');
                }
                this.onError(error);
              }
              window.removeEventListener('error', handleWindowError);
            };
            invokeGuardedCallbackImpl = invokeGuardedCallbackDev;
          }
        }
        var invokeGuardedCallbackImpl$1 = invokeGuardedCallbackImpl;
        var hasError = false;
        var caughtError = null;
        var hasRethrowError = false;
        var rethrowError = null;
        var reporter = { onError: function (error) {
            hasError = true;
            caughtError = error;
          } };
        function invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {
          hasError = false;
          caughtError = null;
          invokeGuardedCallbackImpl$1.apply(reporter, arguments);
        }
        function invokeGuardedCallbackAndCatchFirstError(name, func, context, a, b, c, d, e, f) {
          invokeGuardedCallback.apply(this, arguments);
          if (hasError) {
            var error = clearCaughtError();
            if (!hasRethrowError) {
              hasRethrowError = true;
              rethrowError = error;
            }
          }
        }
        function rethrowCaughtError() {
          if (hasRethrowError) {
            var error = rethrowError;
            hasRethrowError = false;
            rethrowError = null;
            throw error;
          }
        }
        function hasCaughtError() {
          return hasError;
        }
        function clearCaughtError() {
          if (hasError) {
            var error = caughtError;
            hasError = false;
            caughtError = null;
            return error;
          } else {
            invariant(false, 'clearCaughtError was called but no error was captured. This error is likely caused by a bug in React. Please file an issue.');
          }
        }
        var eventPluginOrder = null;
        var namesToPlugins = {};
        function recomputePluginOrdering() {
          if (!eventPluginOrder) {
            return;
          }
          for (var pluginName in namesToPlugins) {
            var pluginModule = namesToPlugins[pluginName];
            var pluginIndex = eventPluginOrder.indexOf(pluginName);
            !(pluginIndex > -1) ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `%s`.', pluginName) : void 0;
            if (plugins[pluginIndex]) {
              continue;
            }
            !pluginModule.extractEvents ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `%s` does not.', pluginName) : void 0;
            plugins[pluginIndex] = pluginModule;
            var publishedEvents = pluginModule.eventTypes;
            for (var eventName in publishedEvents) {
              !publishEventForPlugin(publishedEvents[eventName], pluginModule, eventName) ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : void 0;
            }
          }
        }
        function publishEventForPlugin(dispatchConfig, pluginModule, eventName) {
          !!eventNameDispatchConfigs.hasOwnProperty(eventName) ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same event name, `%s`.', eventName) : void 0;
          eventNameDispatchConfigs[eventName] = dispatchConfig;
          var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
          if (phasedRegistrationNames) {
            for (var phaseName in phasedRegistrationNames) {
              if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
                var phasedRegistrationName = phasedRegistrationNames[phaseName];
                publishRegistrationName(phasedRegistrationName, pluginModule, eventName);
              }
            }
            return true;
          } else if (dispatchConfig.registrationName) {
            publishRegistrationName(dispatchConfig.registrationName, pluginModule, eventName);
            return true;
          }
          return false;
        }
        function publishRegistrationName(registrationName, pluginModule, eventName) {
          !!registrationNameModules[registrationName] ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same registration name, `%s`.', registrationName) : void 0;
          registrationNameModules[registrationName] = pluginModule;
          registrationNameDependencies[registrationName] = pluginModule.eventTypes[eventName].dependencies;
          {
            var lowerCasedName = registrationName.toLowerCase();
            possibleRegistrationNames[lowerCasedName] = registrationName;
            if (registrationName === 'onDoubleClick') {
              possibleRegistrationNames.ondblclick = registrationName;
            }
          }
        }
        var plugins = [];
        var eventNameDispatchConfigs = {};
        var registrationNameModules = {};
        var registrationNameDependencies = {};
        var possibleRegistrationNames = {};
        function injectEventPluginOrder(injectedEventPluginOrder) {
          !!eventPluginOrder ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React.') : void 0;
          eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);
          recomputePluginOrdering();
        }
        function injectEventPluginsByName(injectedNamesToPlugins) {
          var isOrderingDirty = false;
          for (var pluginName in injectedNamesToPlugins) {
            if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
              continue;
            }
            var pluginModule = injectedNamesToPlugins[pluginName];
            if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== pluginModule) {
              !!namesToPlugins[pluginName] ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins using the same name, `%s`.', pluginName) : void 0;
              namesToPlugins[pluginName] = pluginModule;
              isOrderingDirty = true;
            }
          }
          if (isOrderingDirty) {
            recomputePluginOrdering();
          }
        }
        var warningWithoutStack = function () {};
        {
          warningWithoutStack = function (condition, format) {
            for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
              args[_key - 2] = arguments[_key];
            }
            if (format === undefined) {
              throw new Error('`warningWithoutStack(condition, format, ...args)` requires a warning ' + 'message argument');
            }
            if (args.length > 8) {
              throw new Error('warningWithoutStack() currently supports at most 8 arguments.');
            }
            if (condition) {
              return;
            }
            if (typeof console !== 'undefined') {
              var argsWithFormat = args.map(function (item) {
                return '' + item;
              });
              argsWithFormat.unshift('Warning: ' + format);
              Function.prototype.apply.call(console.error, console, argsWithFormat);
            }
            try {
              var argIndex = 0;
              var message = 'Warning: ' + format.replace(/%s/g, function () {
                return args[argIndex++];
              });
              throw new Error(message);
            } catch (x) {}
          };
        }
        var warningWithoutStack$1 = warningWithoutStack;
        var getFiberCurrentPropsFromNode = null;
        var getInstanceFromNode = null;
        var getNodeFromInstance = null;
        function setComponentTree(getFiberCurrentPropsFromNodeImpl, getInstanceFromNodeImpl, getNodeFromInstanceImpl) {
          getFiberCurrentPropsFromNode = getFiberCurrentPropsFromNodeImpl;
          getInstanceFromNode = getInstanceFromNodeImpl;
          getNodeFromInstance = getNodeFromInstanceImpl;
          {
            !(getNodeFromInstance && getInstanceFromNode) ? warningWithoutStack$1(false, 'EventPluginUtils.setComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.') : void 0;
          }
        }
        var validateEventDispatches = void 0;
        {
          validateEventDispatches = function (event) {
            var dispatchListeners = event._dispatchListeners;
            var dispatchInstances = event._dispatchInstances;
            var listenersIsArr = Array.isArray(dispatchListeners);
            var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;
            var instancesIsArr = Array.isArray(dispatchInstances);
            var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;
            !(instancesIsArr === listenersIsArr && instancesLen === listenersLen) ? warningWithoutStack$1(false, 'EventPluginUtils: Invalid `event`.') : void 0;
          };
        }
        function executeDispatch(event, listener, inst) {
          var type = event.type || 'unknown-event';
          event.currentTarget = getNodeFromInstance(inst);
          invokeGuardedCallbackAndCatchFirstError(type, listener, undefined, event);
          event.currentTarget = null;
        }
        function executeDispatchesInOrder(event) {
          var dispatchListeners = event._dispatchListeners;
          var dispatchInstances = event._dispatchInstances;
          {
            validateEventDispatches(event);
          }
          if (Array.isArray(dispatchListeners)) {
            for (var i = 0; i < dispatchListeners.length; i++) {
              if (event.isPropagationStopped()) {
                break;
              }
              executeDispatch(event, dispatchListeners[i], dispatchInstances[i]);
            }
          } else if (dispatchListeners) {
            executeDispatch(event, dispatchListeners, dispatchInstances);
          }
          event._dispatchListeners = null;
          event._dispatchInstances = null;
        }
        function accumulateInto(current, next) {
          !(next != null) ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : void 0;
          if (current == null) {
            return next;
          }
          if (Array.isArray(current)) {
            if (Array.isArray(next)) {
              current.push.apply(current, next);
              return current;
            }
            current.push(next);
            return current;
          }
          if (Array.isArray(next)) {
            return [current].concat(next);
          }
          return [current, next];
        }
        function forEachAccumulated(arr, cb, scope) {
          if (Array.isArray(arr)) {
            arr.forEach(cb, scope);
          } else if (arr) {
            cb.call(scope, arr);
          }
        }
        var eventQueue = null;
        var executeDispatchesAndRelease = function (event) {
          if (event) {
            executeDispatchesInOrder(event);
            if (!event.isPersistent()) {
              event.constructor.release(event);
            }
          }
        };
        var executeDispatchesAndReleaseTopLevel = function (e) {
          return executeDispatchesAndRelease(e);
        };
        function isInteractive(tag) {
          return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';
        }
        function shouldPreventMouseEvent(name, type, props) {
          switch (name) {
            case 'onClick':
            case 'onClickCapture':
            case 'onDoubleClick':
            case 'onDoubleClickCapture':
            case 'onMouseDown':
            case 'onMouseDownCapture':
            case 'onMouseMove':
            case 'onMouseMoveCapture':
            case 'onMouseUp':
            case 'onMouseUpCapture':
              return !!(props.disabled && isInteractive(type));
            default:
              return false;
          }
        }
        var injection = {
          injectEventPluginOrder: injectEventPluginOrder,
          injectEventPluginsByName: injectEventPluginsByName
        };
        function getListener(inst, registrationName) {
          var listener = void 0;
          var stateNode = inst.stateNode;
          if (!stateNode) {
            return null;
          }
          var props = getFiberCurrentPropsFromNode(stateNode);
          if (!props) {
            return null;
          }
          listener = props[registrationName];
          if (shouldPreventMouseEvent(registrationName, inst.type, props)) {
            return null;
          }
          !(!listener || typeof listener === 'function') ? invariant(false, 'Expected `%s` listener to be a function, instead got a value of `%s` type.', registrationName, typeof listener) : void 0;
          return listener;
        }
        function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
          var events = null;
          for (var i = 0; i < plugins.length; i++) {
            var possiblePlugin = plugins[i];
            if (possiblePlugin) {
              var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
              if (extractedEvents) {
                events = accumulateInto(events, extractedEvents);
              }
            }
          }
          return events;
        }
        function runEventsInBatch(events) {
          if (events !== null) {
            eventQueue = accumulateInto(eventQueue, events);
          }
          var processingEventQueue = eventQueue;
          eventQueue = null;
          if (!processingEventQueue) {
            return;
          }
          forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);
          !!eventQueue ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented.') : void 0;
          rethrowCaughtError();
        }
        function runExtractedEventsInBatch(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
          var events = extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
          runEventsInBatch(events);
        }
        var FunctionComponent = 0;
        var ClassComponent = 1;
        var IndeterminateComponent = 2;
        var HostRoot = 3;
        var HostPortal = 4;
        var HostComponent = 5;
        var HostText = 6;
        var Fragment = 7;
        var Mode = 8;
        var ContextConsumer = 9;
        var ContextProvider = 10;
        var ForwardRef = 11;
        var Profiler = 12;
        var SuspenseComponent = 13;
        var MemoComponent = 14;
        var SimpleMemoComponent = 15;
        var LazyComponent = 16;
        var IncompleteClassComponent = 17;
        var randomKey = Math.random().toString(36).slice(2);
        var internalInstanceKey = '__reactInternalInstance$' + randomKey;
        var internalEventHandlersKey = '__reactEventHandlers$' + randomKey;
        function precacheFiberNode(hostInst, node) {
          node[internalInstanceKey] = hostInst;
        }
        function getClosestInstanceFromNode(node) {
          if (node[internalInstanceKey]) {
            return node[internalInstanceKey];
          }
          while (!node[internalInstanceKey]) {
            if (node.parentNode) {
              node = node.parentNode;
            } else {
              return null;
            }
          }
          var inst = node[internalInstanceKey];
          if (inst.tag === HostComponent || inst.tag === HostText) {
            return inst;
          }
          return null;
        }
        function getInstanceFromNode$1(node) {
          var inst = node[internalInstanceKey];
          if (inst) {
            if (inst.tag === HostComponent || inst.tag === HostText) {
              return inst;
            } else {
              return null;
            }
          }
          return null;
        }
        function getNodeFromInstance$1(inst) {
          if (inst.tag === HostComponent || inst.tag === HostText) {
            return inst.stateNode;
          }
          invariant(false, 'getNodeFromInstance: Invalid argument.');
        }
        function getFiberCurrentPropsFromNode$1(node) {
          return node[internalEventHandlersKey] || null;
        }
        function updateFiberProps(node, props) {
          node[internalEventHandlersKey] = props;
        }
        function getParent(inst) {
          do {
            inst = inst.return;
          } while (inst && inst.tag !== HostComponent);
          if (inst) {
            return inst;
          }
          return null;
        }
        function getLowestCommonAncestor(instA, instB) {
          var depthA = 0;
          for (var tempA = instA; tempA; tempA = getParent(tempA)) {
            depthA++;
          }
          var depthB = 0;
          for (var tempB = instB; tempB; tempB = getParent(tempB)) {
            depthB++;
          }
          while (depthA - depthB > 0) {
            instA = getParent(instA);
            depthA--;
          }
          while (depthB - depthA > 0) {
            instB = getParent(instB);
            depthB--;
          }
          var depth = depthA;
          while (depth--) {
            if (instA === instB || instA === instB.alternate) {
              return instA;
            }
            instA = getParent(instA);
            instB = getParent(instB);
          }
          return null;
        }
        function traverseTwoPhase(inst, fn, arg) {
          var path = [];
          while (inst) {
            path.push(inst);
            inst = getParent(inst);
          }
          var i = void 0;
          for (i = path.length; i-- > 0;) {
            fn(path[i], 'captured', arg);
          }
          for (i = 0; i < path.length; i++) {
            fn(path[i], 'bubbled', arg);
          }
        }
        function traverseEnterLeave(from, to, fn, argFrom, argTo) {
          var common = from && to ? getLowestCommonAncestor(from, to) : null;
          var pathFrom = [];
          while (true) {
            if (!from) {
              break;
            }
            if (from === common) {
              break;
            }
            var alternate = from.alternate;
            if (alternate !== null && alternate === common) {
              break;
            }
            pathFrom.push(from);
            from = getParent(from);
          }
          var pathTo = [];
          while (true) {
            if (!to) {
              break;
            }
            if (to === common) {
              break;
            }
            var _alternate = to.alternate;
            if (_alternate !== null && _alternate === common) {
              break;
            }
            pathTo.push(to);
            to = getParent(to);
          }
          for (var i = 0; i < pathFrom.length; i++) {
            fn(pathFrom[i], 'bubbled', argFrom);
          }
          for (var _i = pathTo.length; _i-- > 0;) {
            fn(pathTo[_i], 'captured', argTo);
          }
        }
        function listenerAtPhase(inst, event, propagationPhase) {
          var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
          return getListener(inst, registrationName);
        }
        function accumulateDirectionalDispatches(inst, phase, event) {
          {
            !inst ? warningWithoutStack$1(false, 'Dispatching inst must not be null') : void 0;
          }
          var listener = listenerAtPhase(inst, event, phase);
          if (listener) {
            event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
            event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
          }
        }
        function accumulateTwoPhaseDispatchesSingle(event) {
          if (event && event.dispatchConfig.phasedRegistrationNames) {
            traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
          }
        }
        function accumulateDispatches(inst, ignoredDirection, event) {
          if (inst && event && event.dispatchConfig.registrationName) {
            var registrationName = event.dispatchConfig.registrationName;
            var listener = getListener(inst, registrationName);
            if (listener) {
              event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
              event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
            }
          }
        }
        function accumulateDirectDispatchesSingle(event) {
          if (event && event.dispatchConfig.registrationName) {
            accumulateDispatches(event._targetInst, null, event);
          }
        }
        function accumulateTwoPhaseDispatches(events) {
          forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
        }
        function accumulateEnterLeaveDispatches(leave, enter, from, to) {
          traverseEnterLeave(from, to, accumulateDispatches, leave, enter);
        }
        function accumulateDirectDispatches(events) {
          forEachAccumulated(events, accumulateDirectDispatchesSingle);
        }
        var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
        function unsafeCastStringToDOMTopLevelType(topLevelType) {
          return topLevelType;
        }
        function unsafeCastDOMTopLevelTypeToString(topLevelType) {
          return topLevelType;
        }
        function makePrefixMap(styleProp, eventName) {
          var prefixes = {};
          prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
          prefixes['Webkit' + styleProp] = 'webkit' + eventName;
          prefixes['Moz' + styleProp] = 'moz' + eventName;
          return prefixes;
        }
        var vendorPrefixes = {
          animationend: makePrefixMap('Animation', 'AnimationEnd'),
          animationiteration: makePrefixMap('Animation', 'AnimationIteration'),
          animationstart: makePrefixMap('Animation', 'AnimationStart'),
          transitionend: makePrefixMap('Transition', 'TransitionEnd')
        };
        var prefixedEventNames = {};
        var style = {};
        if (canUseDOM) {
          style = document.createElement('div').style;
          if (!('AnimationEvent' in window)) {
            delete vendorPrefixes.animationend.animation;
            delete vendorPrefixes.animationiteration.animation;
            delete vendorPrefixes.animationstart.animation;
          }
          if (!('TransitionEvent' in window)) {
            delete vendorPrefixes.transitionend.transition;
          }
        }
        function getVendorPrefixedEventName(eventName) {
          if (prefixedEventNames[eventName]) {
            return prefixedEventNames[eventName];
          } else if (!vendorPrefixes[eventName]) {
            return eventName;
          }
          var prefixMap = vendorPrefixes[eventName];
          for (var styleProp in prefixMap) {
            if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
              return prefixedEventNames[eventName] = prefixMap[styleProp];
            }
          }
          return eventName;
        }
        var TOP_ABORT = unsafeCastStringToDOMTopLevelType('abort');
        var TOP_ANIMATION_END = unsafeCastStringToDOMTopLevelType(getVendorPrefixedEventName('animationend'));
        var TOP_ANIMATION_ITERATION = unsafeCastStringToDOMTopLevelType(getVendorPrefixedEventName('animationiteration'));
        var TOP_ANIMATION_START = unsafeCastStringToDOMTopLevelType(getVendorPrefixedEventName('animationstart'));
        var TOP_BLUR = unsafeCastStringToDOMTopLevelType('blur');
        var TOP_CAN_PLAY = unsafeCastStringToDOMTopLevelType('canplay');
        var TOP_CAN_PLAY_THROUGH = unsafeCastStringToDOMTopLevelType('canplaythrough');
        var TOP_CANCEL = unsafeCastStringToDOMTopLevelType('cancel');
        var TOP_CHANGE = unsafeCastStringToDOMTopLevelType('change');
        var TOP_CLICK = unsafeCastStringToDOMTopLevelType('click');
        var TOP_CLOSE = unsafeCastStringToDOMTopLevelType('close');
        var TOP_COMPOSITION_END = unsafeCastStringToDOMTopLevelType('compositionend');
        var TOP_COMPOSITION_START = unsafeCastStringToDOMTopLevelType('compositionstart');
        var TOP_COMPOSITION_UPDATE = unsafeCastStringToDOMTopLevelType('compositionupdate');
        var TOP_CONTEXT_MENU = unsafeCastStringToDOMTopLevelType('contextmenu');
        var TOP_COPY = unsafeCastStringToDOMTopLevelType('copy');
        var TOP_CUT = unsafeCastStringToDOMTopLevelType('cut');
        var TOP_DOUBLE_CLICK = unsafeCastStringToDOMTopLevelType('dblclick');
        var TOP_AUX_CLICK = unsafeCastStringToDOMTopLevelType('auxclick');
        var TOP_DRAG = unsafeCastStringToDOMTopLevelType('drag');
        var TOP_DRAG_END = unsafeCastStringToDOMTopLevelType('dragend');
        var TOP_DRAG_ENTER = unsafeCastStringToDOMTopLevelType('dragenter');
        var TOP_DRAG_EXIT = unsafeCastStringToDOMTopLevelType('dragexit');
        var TOP_DRAG_LEAVE = unsafeCastStringToDOMTopLevelType('dragleave');
        var TOP_DRAG_OVER = unsafeCastStringToDOMTopLevelType('dragover');
        var TOP_DRAG_START = unsafeCastStringToDOMTopLevelType('dragstart');
        var TOP_DROP = unsafeCastStringToDOMTopLevelType('drop');
        var TOP_DURATION_CHANGE = unsafeCastStringToDOMTopLevelType('durationchange');
        var TOP_EMPTIED = unsafeCastStringToDOMTopLevelType('emptied');
        var TOP_ENCRYPTED = unsafeCastStringToDOMTopLevelType('encrypted');
        var TOP_ENDED = unsafeCastStringToDOMTopLevelType('ended');
        var TOP_ERROR = unsafeCastStringToDOMTopLevelType('error');
        var TOP_FOCUS = unsafeCastStringToDOMTopLevelType('focus');
        var TOP_GOT_POINTER_CAPTURE = unsafeCastStringToDOMTopLevelType('gotpointercapture');
        var TOP_INPUT = unsafeCastStringToDOMTopLevelType('input');
        var TOP_INVALID = unsafeCastStringToDOMTopLevelType('invalid');
        var TOP_KEY_DOWN = unsafeCastStringToDOMTopLevelType('keydown');
        var TOP_KEY_PRESS = unsafeCastStringToDOMTopLevelType('keypress');
        var TOP_KEY_UP = unsafeCastStringToDOMTopLevelType('keyup');
        var TOP_LOAD = unsafeCastStringToDOMTopLevelType('load');
        var TOP_LOAD_START = unsafeCastStringToDOMTopLevelType('loadstart');
        var TOP_LOADED_DATA = unsafeCastStringToDOMTopLevelType('loadeddata');
        var TOP_LOADED_METADATA = unsafeCastStringToDOMTopLevelType('loadedmetadata');
        var TOP_LOST_POINTER_CAPTURE = unsafeCastStringToDOMTopLevelType('lostpointercapture');
        var TOP_MOUSE_DOWN = unsafeCastStringToDOMTopLevelType('mousedown');
        var TOP_MOUSE_MOVE = unsafeCastStringToDOMTopLevelType('mousemove');
        var TOP_MOUSE_OUT = unsafeCastStringToDOMTopLevelType('mouseout');
        var TOP_MOUSE_OVER = unsafeCastStringToDOMTopLevelType('mouseover');
        var TOP_MOUSE_UP = unsafeCastStringToDOMTopLevelType('mouseup');
        var TOP_PASTE = unsafeCastStringToDOMTopLevelType('paste');
        var TOP_PAUSE = unsafeCastStringToDOMTopLevelType('pause');
        var TOP_PLAY = unsafeCastStringToDOMTopLevelType('play');
        var TOP_PLAYING = unsafeCastStringToDOMTopLevelType('playing');
        var TOP_POINTER_CANCEL = unsafeCastStringToDOMTopLevelType('pointercancel');
        var TOP_POINTER_DOWN = unsafeCastStringToDOMTopLevelType('pointerdown');
        var TOP_POINTER_MOVE = unsafeCastStringToDOMTopLevelType('pointermove');
        var TOP_POINTER_OUT = unsafeCastStringToDOMTopLevelType('pointerout');
        var TOP_POINTER_OVER = unsafeCastStringToDOMTopLevelType('pointerover');
        var TOP_POINTER_UP = unsafeCastStringToDOMTopLevelType('pointerup');
        var TOP_PROGRESS = unsafeCastStringToDOMTopLevelType('progress');
        var TOP_RATE_CHANGE = unsafeCastStringToDOMTopLevelType('ratechange');
        var TOP_RESET = unsafeCastStringToDOMTopLevelType('reset');
        var TOP_SCROLL = unsafeCastStringToDOMTopLevelType('scroll');
        var TOP_SEEKED = unsafeCastStringToDOMTopLevelType('seeked');
        var TOP_SEEKING = unsafeCastStringToDOMTopLevelType('seeking');
        var TOP_SELECTION_CHANGE = unsafeCastStringToDOMTopLevelType('selectionchange');
        var TOP_STALLED = unsafeCastStringToDOMTopLevelType('stalled');
        var TOP_SUBMIT = unsafeCastStringToDOMTopLevelType('submit');
        var TOP_SUSPEND = unsafeCastStringToDOMTopLevelType('suspend');
        var TOP_TEXT_INPUT = unsafeCastStringToDOMTopLevelType('textInput');
        var TOP_TIME_UPDATE = unsafeCastStringToDOMTopLevelType('timeupdate');
        var TOP_TOGGLE = unsafeCastStringToDOMTopLevelType('toggle');
        var TOP_TOUCH_CANCEL = unsafeCastStringToDOMTopLevelType('touchcancel');
        var TOP_TOUCH_END = unsafeCastStringToDOMTopLevelType('touchend');
        var TOP_TOUCH_MOVE = unsafeCastStringToDOMTopLevelType('touchmove');
        var TOP_TOUCH_START = unsafeCastStringToDOMTopLevelType('touchstart');
        var TOP_TRANSITION_END = unsafeCastStringToDOMTopLevelType(getVendorPrefixedEventName('transitionend'));
        var TOP_VOLUME_CHANGE = unsafeCastStringToDOMTopLevelType('volumechange');
        var TOP_WAITING = unsafeCastStringToDOMTopLevelType('waiting');
        var TOP_WHEEL = unsafeCastStringToDOMTopLevelType('wheel');
        var mediaEventTypes = [TOP_ABORT, TOP_CAN_PLAY, TOP_CAN_PLAY_THROUGH, TOP_DURATION_CHANGE, TOP_EMPTIED, TOP_ENCRYPTED, TOP_ENDED, TOP_ERROR, TOP_LOADED_DATA, TOP_LOADED_METADATA, TOP_LOAD_START, TOP_PAUSE, TOP_PLAY, TOP_PLAYING, TOP_PROGRESS, TOP_RATE_CHANGE, TOP_SEEKED, TOP_SEEKING, TOP_STALLED, TOP_SUSPEND, TOP_TIME_UPDATE, TOP_VOLUME_CHANGE, TOP_WAITING];
        function getRawEventName(topLevelType) {
          return unsafeCastDOMTopLevelTypeToString(topLevelType);
        }
        var root = null;
        var startText = null;
        var fallbackText = null;
        function initialize(nativeEventTarget) {
          root = nativeEventTarget;
          startText = getText();
          return true;
        }
        function reset() {
          root = null;
          startText = null;
          fallbackText = null;
        }
        function getData() {
          if (fallbackText) {
            return fallbackText;
          }
          var start = void 0;
          var startValue = startText;
          var startLength = startValue.length;
          var end = void 0;
          var endValue = getText();
          var endLength = endValue.length;
          for (start = 0; start < startLength; start++) {
            if (startValue[start] !== endValue[start]) {
              break;
            }
          }
          var minEnd = startLength - start;
          for (end = 1; end <= minEnd; end++) {
            if (startValue[startLength - end] !== endValue[endLength - end]) {
              break;
            }
          }
          var sliceTail = end > 1 ? 1 - end : undefined;
          fallbackText = endValue.slice(start, sliceTail);
          return fallbackText;
        }
        function getText() {
          if ('value' in root) {
            return root.value;
          }
          return root.textContent;
        }
        var EVENT_POOL_SIZE = 10;
        var EventInterface = {
          type: null,
          target: null,
          currentTarget: function () {
            return null;
          },
          eventPhase: null,
          bubbles: null,
          cancelable: null,
          timeStamp: function (event) {
            return event.timeStamp || Date.now();
          },
          defaultPrevented: null,
          isTrusted: null
        };
        function functionThatReturnsTrue() {
          return true;
        }
        function functionThatReturnsFalse() {
          return false;
        }
        function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
          {
            delete this.nativeEvent;
            delete this.preventDefault;
            delete this.stopPropagation;
            delete this.isDefaultPrevented;
            delete this.isPropagationStopped;
          }
          this.dispatchConfig = dispatchConfig;
          this._targetInst = targetInst;
          this.nativeEvent = nativeEvent;
          var Interface = this.constructor.Interface;
          for (var propName in Interface) {
            if (!Interface.hasOwnProperty(propName)) {
              continue;
            }
            {
              delete this[propName];
            }
            var normalize = Interface[propName];
            if (normalize) {
              this[propName] = normalize(nativeEvent);
            } else {
              if (propName === 'target') {
                this.target = nativeEventTarget;
              } else {
                this[propName] = nativeEvent[propName];
              }
            }
          }
          var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
          if (defaultPrevented) {
            this.isDefaultPrevented = functionThatReturnsTrue;
          } else {
            this.isDefaultPrevented = functionThatReturnsFalse;
          }
          this.isPropagationStopped = functionThatReturnsFalse;
          return this;
        }
        _assign(SyntheticEvent.prototype, {
          preventDefault: function () {
            this.defaultPrevented = true;
            var event = this.nativeEvent;
            if (!event) {
              return;
            }
            if (event.preventDefault) {
              event.preventDefault();
            } else if (typeof event.returnValue !== 'unknown') {
              event.returnValue = false;
            }
            this.isDefaultPrevented = functionThatReturnsTrue;
          },
          stopPropagation: function () {
            var event = this.nativeEvent;
            if (!event) {
              return;
            }
            if (event.stopPropagation) {
              event.stopPropagation();
            } else if (typeof event.cancelBubble !== 'unknown') {
              event.cancelBubble = true;
            }
            this.isPropagationStopped = functionThatReturnsTrue;
          },
          persist: function () {
            this.isPersistent = functionThatReturnsTrue;
          },
          isPersistent: functionThatReturnsFalse,
          destructor: function () {
            var Interface = this.constructor.Interface;
            for (var propName in Interface) {
              {
                Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));
              }
            }
            this.dispatchConfig = null;
            this._targetInst = null;
            this.nativeEvent = null;
            this.isDefaultPrevented = functionThatReturnsFalse;
            this.isPropagationStopped = functionThatReturnsFalse;
            this._dispatchListeners = null;
            this._dispatchInstances = null;
            {
              Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));
              Object.defineProperty(this, 'isDefaultPrevented', getPooledWarningPropertyDefinition('isDefaultPrevented', functionThatReturnsFalse));
              Object.defineProperty(this, 'isPropagationStopped', getPooledWarningPropertyDefinition('isPropagationStopped', functionThatReturnsFalse));
              Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', function () {}));
              Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', function () {}));
            }
          }
        });
        SyntheticEvent.Interface = EventInterface;
        SyntheticEvent.extend = function (Interface) {
          var Super = this;
          var E = function () {};
          E.prototype = Super.prototype;
          var prototype = new E();
          function Class() {
            return Super.apply(this, arguments);
          }
          _assign(prototype, Class.prototype);
          Class.prototype = prototype;
          Class.prototype.constructor = Class;
          Class.Interface = _assign({}, Super.Interface, Interface);
          Class.extend = Super.extend;
          addEventPoolingTo(Class);
          return Class;
        };
        addEventPoolingTo(SyntheticEvent);
        function getPooledWarningPropertyDefinition(propName, getVal) {
          var isFunction = typeof getVal === 'function';
          return {
            configurable: true,
            set: set,
            get: get
          };
          function set(val) {
            var action = isFunction ? 'setting the method' : 'setting the property';
            warn(action, 'This is effectively a no-op');
            return val;
          }
          function get() {
            var action = isFunction ? 'accessing the method' : 'accessing the property';
            var result = isFunction ? 'This is a no-op function' : 'This is set to null';
            warn(action, result);
            return getVal;
          }
          function warn(action, result) {
            var warningCondition = false;
            !warningCondition ? warningWithoutStack$1(false, "This synthetic event is reused for performance reasons. If you're seeing this, " + "you're %s `%s` on a released/nullified synthetic event. %s. " + 'If you must keep the original synthetic event around, use event.persist(). ' + 'See https://fb.me/react-event-pooling for more information.', action, propName, result) : void 0;
          }
        }
        function getPooledEvent(dispatchConfig, targetInst, nativeEvent, nativeInst) {
          var EventConstructor = this;
          if (EventConstructor.eventPool.length) {
            var instance = EventConstructor.eventPool.pop();
            EventConstructor.call(instance, dispatchConfig, targetInst, nativeEvent, nativeInst);
            return instance;
          }
          return new EventConstructor(dispatchConfig, targetInst, nativeEvent, nativeInst);
        }
        function releasePooledEvent(event) {
          var EventConstructor = this;
          !(event instanceof EventConstructor) ? invariant(false, 'Trying to release an event instance into a pool of a different type.') : void 0;
          event.destructor();
          if (EventConstructor.eventPool.length < EVENT_POOL_SIZE) {
            EventConstructor.eventPool.push(event);
          }
        }
        function addEventPoolingTo(EventConstructor) {
          EventConstructor.eventPool = [];
          EventConstructor.getPooled = getPooledEvent;
          EventConstructor.release = releasePooledEvent;
        }
        var SyntheticCompositionEvent = SyntheticEvent.extend({ data: null });
        var SyntheticInputEvent = SyntheticEvent.extend({ data: null });
        var END_KEYCODES = [9, 13, 27, 32];
        var START_KEYCODE = 229;
        var canUseCompositionEvent = canUseDOM && 'CompositionEvent' in window;
        var documentMode = null;
        if (canUseDOM && 'documentMode' in document) {
          documentMode = document.documentMode;
        }
        var canUseTextInputEvent = canUseDOM && 'TextEvent' in window && !documentMode;
        var useFallbackCompositionData = canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);
        var SPACEBAR_CODE = 32;
        var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);
        var eventTypes = {
          beforeInput: {
            phasedRegistrationNames: {
              bubbled: 'onBeforeInput',
              captured: 'onBeforeInputCapture'
            },
            dependencies: [TOP_COMPOSITION_END, TOP_KEY_PRESS, TOP_TEXT_INPUT, TOP_PASTE]
          },
          compositionEnd: {
            phasedRegistrationNames: {
              bubbled: 'onCompositionEnd',
              captured: 'onCompositionEndCapture'
            },
            dependencies: [TOP_BLUR, TOP_COMPOSITION_END, TOP_KEY_DOWN, TOP_KEY_PRESS, TOP_KEY_UP, TOP_MOUSE_DOWN]
          },
          compositionStart: {
            phasedRegistrationNames: {
              bubbled: 'onCompositionStart',
              captured: 'onCompositionStartCapture'
            },
            dependencies: [TOP_BLUR, TOP_COMPOSITION_START, TOP_KEY_DOWN, TOP_KEY_PRESS, TOP_KEY_UP, TOP_MOUSE_DOWN]
          },
          compositionUpdate: {
            phasedRegistrationNames: {
              bubbled: 'onCompositionUpdate',
              captured: 'onCompositionUpdateCapture'
            },
            dependencies: [TOP_BLUR, TOP_COMPOSITION_UPDATE, TOP_KEY_DOWN, TOP_KEY_PRESS, TOP_KEY_UP, TOP_MOUSE_DOWN]
          }
        };
        var hasSpaceKeypress = false;
        function isKeypressCommand(nativeEvent) {
          return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) && !(nativeEvent.ctrlKey && nativeEvent.altKey);
        }
        function getCompositionEventType(topLevelType) {
          switch (topLevelType) {
            case TOP_COMPOSITION_START:
              return eventTypes.compositionStart;
            case TOP_COMPOSITION_END:
              return eventTypes.compositionEnd;
            case TOP_COMPOSITION_UPDATE:
              return eventTypes.compositionUpdate;
          }
        }
        function isFallbackCompositionStart(topLevelType, nativeEvent) {
          return topLevelType === TOP_KEY_DOWN && nativeEvent.keyCode === START_KEYCODE;
        }
        function isFallbackCompositionEnd(topLevelType, nativeEvent) {
          switch (topLevelType) {
            case TOP_KEY_UP:
              return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
            case TOP_KEY_DOWN:
              return nativeEvent.keyCode !== START_KEYCODE;
            case TOP_KEY_PRESS:
            case TOP_MOUSE_DOWN:
            case TOP_BLUR:
              return true;
            default:
              return false;
          }
        }
        function getDataFromCustomEvent(nativeEvent) {
          var detail = nativeEvent.detail;
          if (typeof detail === 'object' && 'data' in detail) {
            return detail.data;
          }
          return null;
        }
        function isUsingKoreanIME(nativeEvent) {
          return nativeEvent.locale === 'ko';
        }
        var isComposing = false;
        function extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
          var eventType = void 0;
          var fallbackData = void 0;
          if (canUseCompositionEvent) {
            eventType = getCompositionEventType(topLevelType);
          } else if (!isComposing) {
            if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
              eventType = eventTypes.compositionStart;
            }
          } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
            eventType = eventTypes.compositionEnd;
          }
          if (!eventType) {
            return null;
          }
          if (useFallbackCompositionData && !isUsingKoreanIME(nativeEvent)) {
            if (!isComposing && eventType === eventTypes.compositionStart) {
              isComposing = initialize(nativeEventTarget);
            } else if (eventType === eventTypes.compositionEnd) {
              if (isComposing) {
                fallbackData = getData();
              }
            }
          }
          var event = SyntheticCompositionEvent.getPooled(eventType, targetInst, nativeEvent, nativeEventTarget);
          if (fallbackData) {
            event.data = fallbackData;
          } else {
            var customData = getDataFromCustomEvent(nativeEvent);
            if (customData !== null) {
              event.data = customData;
            }
          }
          accumulateTwoPhaseDispatches(event);
          return event;
        }
        function getNativeBeforeInputChars(topLevelType, nativeEvent) {
          switch (topLevelType) {
            case TOP_COMPOSITION_END:
              return getDataFromCustomEvent(nativeEvent);
            case TOP_KEY_PRESS:
              var which = nativeEvent.which;
              if (which !== SPACEBAR_CODE) {
                return null;
              }
              hasSpaceKeypress = true;
              return SPACEBAR_CHAR;
            case TOP_TEXT_INPUT:
              var chars = nativeEvent.data;
              if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
                return null;
              }
              return chars;
            default:
              return null;
          }
        }
        function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
          if (isComposing) {
            if (topLevelType === TOP_COMPOSITION_END || !canUseCompositionEvent && isFallbackCompositionEnd(topLevelType, nativeEvent)) {
              var chars = getData();
              reset();
              isComposing = false;
              return chars;
            }
            return null;
          }
          switch (topLevelType) {
            case TOP_PASTE:
              return null;
            case TOP_KEY_PRESS:
              if (!isKeypressCommand(nativeEvent)) {
                if (nativeEvent.char && nativeEvent.char.length > 1) {
                  return nativeEvent.char;
                } else if (nativeEvent.which) {
                  return String.fromCharCode(nativeEvent.which);
                }
              }
              return null;
            case TOP_COMPOSITION_END:
              return useFallbackCompositionData && !isUsingKoreanIME(nativeEvent) ? null : nativeEvent.data;
            default:
              return null;
          }
        }
        function extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
          var chars = void 0;
          if (canUseTextInputEvent) {
            chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
          } else {
            chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
          }
          if (!chars) {
            return null;
          }
          var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, targetInst, nativeEvent, nativeEventTarget);
          event.data = chars;
          accumulateTwoPhaseDispatches(event);
          return event;
        }
        var BeforeInputEventPlugin = {
          eventTypes: eventTypes,
          extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
            var composition = extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget);
            var beforeInput = extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget);
            if (composition === null) {
              return beforeInput;
            }
            if (beforeInput === null) {
              return composition;
            }
            return [composition, beforeInput];
          }
        };
        var restoreImpl = null;
        var restoreTarget = null;
        var restoreQueue = null;
        function restoreStateOfTarget(target) {
          var internalInstance = getInstanceFromNode(target);
          if (!internalInstance) {
            return;
          }
          !(typeof restoreImpl === 'function') ? invariant(false, 'setRestoreImplementation() needs to be called to handle a target for controlled events. This error is likely caused by a bug in React. Please file an issue.') : void 0;
          var props = getFiberCurrentPropsFromNode(internalInstance.stateNode);
          restoreImpl(internalInstance.stateNode, internalInstance.type, props);
        }
        function setRestoreImplementation(impl) {
          restoreImpl = impl;
        }
        function enqueueStateRestore(target) {
          if (restoreTarget) {
            if (restoreQueue) {
              restoreQueue.push(target);
            } else {
              restoreQueue = [target];
            }
          } else {
            restoreTarget = target;
          }
        }
        function needsStateRestore() {
          return restoreTarget !== null || restoreQueue !== null;
        }
        function restoreStateIfNeeded() {
          if (!restoreTarget) {
            return;
          }
          var target = restoreTarget;
          var queuedTargets = restoreQueue;
          restoreTarget = null;
          restoreQueue = null;
          restoreStateOfTarget(target);
          if (queuedTargets) {
            for (var i = 0; i < queuedTargets.length; i++) {
              restoreStateOfTarget(queuedTargets[i]);
            }
          }
        }
        var _batchedUpdatesImpl = function (fn, bookkeeping) {
          return fn(bookkeeping);
        };
        var _interactiveUpdatesImpl = function (fn, a, b) {
          return fn(a, b);
        };
        var _flushInteractiveUpdatesImpl = function () {};
        var isBatching = false;
        function batchedUpdates(fn, bookkeeping) {
          if (isBatching) {
            return fn(bookkeeping);
          }
          isBatching = true;
          try {
            return _batchedUpdatesImpl(fn, bookkeeping);
          } finally {
            isBatching = false;
            var controlledComponentsHavePendingUpdates = needsStateRestore();
            if (controlledComponentsHavePendingUpdates) {
              _flushInteractiveUpdatesImpl();
              restoreStateIfNeeded();
            }
          }
        }
        function interactiveUpdates(fn, a, b) {
          return _interactiveUpdatesImpl(fn, a, b);
        }
        function setBatchingImplementation(batchedUpdatesImpl, interactiveUpdatesImpl, flushInteractiveUpdatesImpl) {
          _batchedUpdatesImpl = batchedUpdatesImpl;
          _interactiveUpdatesImpl = interactiveUpdatesImpl;
          _flushInteractiveUpdatesImpl = flushInteractiveUpdatesImpl;
        }
        var supportedInputTypes = {
          color: true,
          date: true,
          datetime: true,
          'datetime-local': true,
          email: true,
          month: true,
          number: true,
          password: true,
          range: true,
          search: true,
          tel: true,
          text: true,
          time: true,
          url: true,
          week: true
        };
        function isTextInputElement(elem) {
          var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
          if (nodeName === 'input') {
            return !!supportedInputTypes[elem.type];
          }
          if (nodeName === 'textarea') {
            return true;
          }
          return false;
        }
        var ELEMENT_NODE = 1;
        var TEXT_NODE = 3;
        var COMMENT_NODE = 8;
        var DOCUMENT_NODE = 9;
        var DOCUMENT_FRAGMENT_NODE = 11;
        function getEventTarget(nativeEvent) {
          var target = nativeEvent.target || nativeEvent.srcElement || window;
          if (target.correspondingUseElement) {
            target = target.correspondingUseElement;
          }
          return target.nodeType === TEXT_NODE ? target.parentNode : target;
        }
        function isEventSupported(eventNameSuffix) {
          if (!canUseDOM) {
            return false;
          }
          var eventName = 'on' + eventNameSuffix;
          var isSupported = eventName in document;
          if (!isSupported) {
            var element = document.createElement('div');
            element.setAttribute(eventName, 'return;');
            isSupported = typeof element[eventName] === 'function';
          }
          return isSupported;
        }
        function isCheckable(elem) {
          var type = elem.type;
          var nodeName = elem.nodeName;
          return nodeName && nodeName.toLowerCase() === 'input' && (type === 'checkbox' || type === 'radio');
        }
        function getTracker(node) {
          return node._valueTracker;
        }
        function detachTracker(node) {
          node._valueTracker = null;
        }
        function getValueFromNode(node) {
          var value = '';
          if (!node) {
            return value;
          }
          if (isCheckable(node)) {
            value = node.checked ? 'true' : 'false';
          } else {
            value = node.value;
          }
          return value;
        }
        function trackValueOnNode(node) {
          var valueField = isCheckable(node) ? 'checked' : 'value';
          var descriptor = Object.getOwnPropertyDescriptor(node.constructor.prototype, valueField);
          var currentValue = '' + node[valueField];
          if (node.hasOwnProperty(valueField) || typeof descriptor === 'undefined' || typeof descriptor.get !== 'function' || typeof descriptor.set !== 'function') {
            return;
          }
          var get = descriptor.get,
              set = descriptor.set;
          Object.defineProperty(node, valueField, {
            configurable: true,
            get: function () {
              return get.call(this);
            },
            set: function (value) {
              currentValue = '' + value;
              set.call(this, value);
            }
          });
          Object.defineProperty(node, valueField, { enumerable: descriptor.enumerable });
          var tracker = {
            getValue: function () {
              return currentValue;
            },
            setValue: function (value) {
              currentValue = '' + value;
            },
            stopTracking: function () {
              detachTracker(node);
              delete node[valueField];
            }
          };
          return tracker;
        }
        function track(node) {
          if (getTracker(node)) {
            return;
          }
          node._valueTracker = trackValueOnNode(node);
        }
        function updateValueIfChanged(node) {
          if (!node) {
            return false;
          }
          var tracker = getTracker(node);
          if (!tracker) {
            return true;
          }
          var lastValue = tracker.getValue();
          var nextValue = getValueFromNode(node);
          if (nextValue !== lastValue) {
            tracker.setValue(nextValue);
            return true;
          }
          return false;
        }
        var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
        var BEFORE_SLASH_RE = /^(.*)[\\\/]/;
        var describeComponentFrame = function (name, source, ownerName) {
          var sourceInfo = '';
          if (source) {
            var path = source.fileName;
            var fileName = path.replace(BEFORE_SLASH_RE, '');
            {
              if (/^index\./.test(fileName)) {
                var match = path.match(BEFORE_SLASH_RE);
                if (match) {
                  var pathBeforeSlash = match[1];
                  if (pathBeforeSlash) {
                    var folderName = pathBeforeSlash.replace(BEFORE_SLASH_RE, '');
                    fileName = folderName + '/' + fileName;
                  }
                }
              }
            }
            sourceInfo = ' (at ' + fileName + ':' + source.lineNumber + ')';
          } else if (ownerName) {
            sourceInfo = ' (created by ' + ownerName + ')';
          }
          return '\n    in ' + (name || 'Unknown') + sourceInfo;
        };
        var hasSymbol = typeof Symbol === 'function' && Symbol.for;
        var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
        var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
        var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
        var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
        var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
        var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
        var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace;
        var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;
        var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
        var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;
        var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;
        var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;
        var MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
        var FAUX_ITERATOR_SYMBOL = '@@iterator';
        function getIteratorFn(maybeIterable) {
          if (maybeIterable === null || typeof maybeIterable !== 'object') {
            return null;
          }
          var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
          if (typeof maybeIterator === 'function') {
            return maybeIterator;
          }
          return null;
        }
        var Pending = 0;
        var Resolved = 1;
        var Rejected = 2;
        function refineResolvedLazyComponent(lazyComponent) {
          return lazyComponent._status === Resolved ? lazyComponent._result : null;
        }
        function getWrappedName(outerType, innerType, wrapperName) {
          var functionName = innerType.displayName || innerType.name || '';
          return outerType.displayName || (functionName !== '' ? wrapperName + '(' + functionName + ')' : wrapperName);
        }
        function getComponentName(type) {
          if (type == null) {
            return null;
          }
          {
            if (typeof type.tag === 'number') {
              warningWithoutStack$1(false, 'Received an unexpected object in getComponentName(). ' + 'This is likely a bug in React. Please file an issue.');
            }
          }
          if (typeof type === 'function') {
            return type.displayName || type.name || null;
          }
          if (typeof type === 'string') {
            return type;
          }
          switch (type) {
            case REACT_CONCURRENT_MODE_TYPE:
              return 'ConcurrentMode';
            case REACT_FRAGMENT_TYPE:
              return 'Fragment';
            case REACT_PORTAL_TYPE:
              return 'Portal';
            case REACT_PROFILER_TYPE:
              return 'Profiler';
            case REACT_STRICT_MODE_TYPE:
              return 'StrictMode';
            case REACT_SUSPENSE_TYPE:
              return 'Suspense';
          }
          if (typeof type === 'object') {
            switch (type.$$typeof) {
              case REACT_CONTEXT_TYPE:
                return 'Context.Consumer';
              case REACT_PROVIDER_TYPE:
                return 'Context.Provider';
              case REACT_FORWARD_REF_TYPE:
                return getWrappedName(type, type.render, 'ForwardRef');
              case REACT_MEMO_TYPE:
                return getComponentName(type.type);
              case REACT_LAZY_TYPE:
                {
                  var thenable = type;
                  var resolvedThenable = refineResolvedLazyComponent(thenable);
                  if (resolvedThenable) {
                    return getComponentName(resolvedThenable);
                  }
                }
            }
          }
          return null;
        }
        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
        function describeFiber(fiber) {
          switch (fiber.tag) {
            case HostRoot:
            case HostPortal:
            case HostText:
            case Fragment:
            case ContextProvider:
            case ContextConsumer:
              return '';
            default:
              var owner = fiber._debugOwner;
              var source = fiber._debugSource;
              var name = getComponentName(fiber.type);
              var ownerName = null;
              if (owner) {
                ownerName = getComponentName(owner.type);
              }
              return describeComponentFrame(name, source, ownerName);
          }
        }
        function getStackByFiberInDevAndProd(workInProgress) {
          var info = '';
          var node = workInProgress;
          do {
            info += describeFiber(node);
            node = node.return;
          } while (node);
          return info;
        }
        var current = null;
        var phase = null;
        function getCurrentFiberOwnerNameInDevOrNull() {
          {
            if (current === null) {
              return null;
            }
            var owner = current._debugOwner;
            if (owner !== null && typeof owner !== 'undefined') {
              return getComponentName(owner.type);
            }
          }
          return null;
        }
        function getCurrentFiberStackInDev() {
          {
            if (current === null) {
              return '';
            }
            return getStackByFiberInDevAndProd(current);
          }
          return '';
        }
        function resetCurrentFiber() {
          {
            ReactDebugCurrentFrame.getCurrentStack = null;
            current = null;
            phase = null;
          }
        }
        function setCurrentFiber(fiber) {
          {
            ReactDebugCurrentFrame.getCurrentStack = getCurrentFiberStackInDev;
            current = fiber;
            phase = null;
          }
        }
        function setCurrentPhase(lifeCyclePhase) {
          {
            phase = lifeCyclePhase;
          }
        }
        var warning = warningWithoutStack$1;
        {
          warning = function (condition, format) {
            if (condition) {
              return;
            }
            var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
            var stack = ReactDebugCurrentFrame.getStackAddendum();
            for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
              args[_key - 2] = arguments[_key];
            }
            warningWithoutStack$1.apply(undefined, [false, format + '%s'].concat(args, [stack]));
          };
        }
        var warning$1 = warning;
        var RESERVED = 0;
        var STRING = 1;
        var BOOLEANISH_STRING = 2;
        var BOOLEAN = 3;
        var OVERLOADED_BOOLEAN = 4;
        var NUMERIC = 5;
        var POSITIVE_NUMERIC = 6;
        var ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD';
        var ATTRIBUTE_NAME_CHAR = ATTRIBUTE_NAME_START_CHAR + '\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040';
        var ROOT_ATTRIBUTE_NAME = 'data-reactroot';
        var VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + ATTRIBUTE_NAME_START_CHAR + '][' + ATTRIBUTE_NAME_CHAR + ']*$');
        var hasOwnProperty = Object.prototype.hasOwnProperty;
        var illegalAttributeNameCache = {};
        var validatedAttributeNameCache = {};
        function isAttributeNameSafe(attributeName) {
          if (hasOwnProperty.call(validatedAttributeNameCache, attributeName)) {
            return true;
          }
          if (hasOwnProperty.call(illegalAttributeNameCache, attributeName)) {
            return false;
          }
          if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
            validatedAttributeNameCache[attributeName] = true;
            return true;
          }
          illegalAttributeNameCache[attributeName] = true;
          {
            warning$1(false, 'Invalid attribute name: `%s`', attributeName);
          }
          return false;
        }
        function shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag) {
          if (propertyInfo !== null) {
            return propertyInfo.type === RESERVED;
          }
          if (isCustomComponentTag) {
            return false;
          }
          if (name.length > 2 && (name[0] === 'o' || name[0] === 'O') && (name[1] === 'n' || name[1] === 'N')) {
            return true;
          }
          return false;
        }
        function shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag) {
          if (propertyInfo !== null && propertyInfo.type === RESERVED) {
            return false;
          }
          switch (typeof value) {
            case 'function':
            case 'symbol':
              return true;
            case 'boolean':
              {
                if (isCustomComponentTag) {
                  return false;
                }
                if (propertyInfo !== null) {
                  return !propertyInfo.acceptsBooleans;
                } else {
                  var prefix = name.toLowerCase().slice(0, 5);
                  return prefix !== 'data-' && prefix !== 'aria-';
                }
              }
            default:
              return false;
          }
        }
        function shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag) {
          if (value === null || typeof value === 'undefined') {
            return true;
          }
          if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag)) {
            return true;
          }
          if (isCustomComponentTag) {
            return false;
          }
          if (propertyInfo !== null) {
            switch (propertyInfo.type) {
              case BOOLEAN:
                return !value;
              case OVERLOADED_BOOLEAN:
                return value === false;
              case NUMERIC:
                return isNaN(value);
              case POSITIVE_NUMERIC:
                return isNaN(value) || value < 1;
            }
          }
          return false;
        }
        function getPropertyInfo(name) {
          return properties.hasOwnProperty(name) ? properties[name] : null;
        }
        function PropertyInfoRecord(name, type, mustUseProperty, attributeName, attributeNamespace) {
          this.acceptsBooleans = type === BOOLEANISH_STRING || type === BOOLEAN || type === OVERLOADED_BOOLEAN;
          this.attributeName = attributeName;
          this.attributeNamespace = attributeNamespace;
          this.mustUseProperty = mustUseProperty;
          this.propertyName = name;
          this.type = type;
        }
        var properties = {};
        ['children', 'dangerouslySetInnerHTML', 'defaultValue', 'defaultChecked', 'innerHTML', 'suppressContentEditableWarning', 'suppressHydrationWarning', 'style'].forEach(function (name) {
          properties[name] = new PropertyInfoRecord(name, RESERVED, false, name, null);
        });
        [['acceptCharset', 'accept-charset'], ['className', 'class'], ['htmlFor', 'for'], ['httpEquiv', 'http-equiv']].forEach(function (_ref) {
          var name = _ref[0],
              attributeName = _ref[1];
          properties[name] = new PropertyInfoRecord(name, STRING, false, attributeName, null);
        });
        ['contentEditable', 'draggable', 'spellCheck', 'value'].forEach(function (name) {
          properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, name.toLowerCase(), null);
        });
        ['autoReverse', 'externalResourcesRequired', 'focusable', 'preserveAlpha'].forEach(function (name) {
          properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, name, null);
        });
        ['allowFullScreen', 'async', 'autoFocus', 'autoPlay', 'controls', 'default', 'defer', 'disabled', 'formNoValidate', 'hidden', 'loop', 'noModule', 'noValidate', 'open', 'playsInline', 'readOnly', 'required', 'reversed', 'scoped', 'seamless', 'itemScope'].forEach(function (name) {
          properties[name] = new PropertyInfoRecord(name, BOOLEAN, false, name.toLowerCase(), null);
        });
        ['checked', 'multiple', 'muted', 'selected'].forEach(function (name) {
          properties[name] = new PropertyInfoRecord(name, BOOLEAN, true, name, null);
        });
        ['capture', 'download'].forEach(function (name) {
          properties[name] = new PropertyInfoRecord(name, OVERLOADED_BOOLEAN, false, name, null);
        });
        ['cols', 'rows', 'size', 'span'].forEach(function (name) {
          properties[name] = new PropertyInfoRecord(name, POSITIVE_NUMERIC, false, name, null);
        });
        ['rowSpan', 'start'].forEach(function (name) {
          properties[name] = new PropertyInfoRecord(name, NUMERIC, false, name.toLowerCase(), null);
        });
        var CAMELIZE = /[\-\:]([a-z])/g;
        var capitalize = function (token) {
          return token[1].toUpperCase();
        };
        ['accent-height', 'alignment-baseline', 'arabic-form', 'baseline-shift', 'cap-height', 'clip-path', 'clip-rule', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'dominant-baseline', 'enable-background', 'fill-opacity', 'fill-rule', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'glyph-name', 'glyph-orientation-horizontal', 'glyph-orientation-vertical', 'horiz-adv-x', 'horiz-origin-x', 'image-rendering', 'letter-spacing', 'lighting-color', 'marker-end', 'marker-mid', 'marker-start', 'overline-position', 'overline-thickness', 'paint-order', 'panose-1', 'pointer-events', 'rendering-intent', 'shape-rendering', 'stop-color', 'stop-opacity', 'strikethrough-position', 'strikethrough-thickness', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke-width', 'text-anchor', 'text-decoration', 'text-rendering', 'underline-position', 'underline-thickness', 'unicode-bidi', 'unicode-range', 'units-per-em', 'v-alphabetic', 'v-hanging', 'v-ideographic', 'v-mathematical', 'vector-effect', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'word-spacing', 'writing-mode', 'xmlns:xlink', 'x-height'].forEach(function (attributeName) {
          var name = attributeName.replace(CAMELIZE, capitalize);
          properties[name] = new PropertyInfoRecord(name, STRING, false, attributeName, null);
        });
        ['xlink:actuate', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type'].forEach(function (attributeName) {
          var name = attributeName.replace(CAMELIZE, capitalize);
          properties[name] = new PropertyInfoRecord(name, STRING, false, attributeName, 'http://www.w3.org/1999/xlink');
        });
        ['xml:base', 'xml:lang', 'xml:space'].forEach(function (attributeName) {
          var name = attributeName.replace(CAMELIZE, capitalize);
          properties[name] = new PropertyInfoRecord(name, STRING, false, attributeName, 'http://www.w3.org/XML/1998/namespace');
        });
        properties.tabIndex = new PropertyInfoRecord('tabIndex', STRING, false, 'tabindex', null);
        function getValueForProperty(node, name, expected, propertyInfo) {
          {
            if (propertyInfo.mustUseProperty) {
              var propertyName = propertyInfo.propertyName;
              return node[propertyName];
            } else {
              var attributeName = propertyInfo.attributeName;
              var stringValue = null;
              if (propertyInfo.type === OVERLOADED_BOOLEAN) {
                if (node.hasAttribute(attributeName)) {
                  var value = node.getAttribute(attributeName);
                  if (value === '') {
                    return true;
                  }
                  if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {
                    return value;
                  }
                  if (value === '' + expected) {
                    return expected;
                  }
                  return value;
                }
              } else if (node.hasAttribute(attributeName)) {
                if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {
                  return node.getAttribute(attributeName);
                }
                if (propertyInfo.type === BOOLEAN) {
                  return expected;
                }
                stringValue = node.getAttribute(attributeName);
              }
              if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {
                return stringValue === null ? expected : stringValue;
              } else if (stringValue === '' + expected) {
                return expected;
              } else {
                return stringValue;
              }
            }
          }
        }
        function getValueForAttribute(node, name, expected) {
          {
            if (!isAttributeNameSafe(name)) {
              return;
            }
            if (!node.hasAttribute(name)) {
              return expected === undefined ? undefined : null;
            }
            var value = node.getAttribute(name);
            if (value === '' + expected) {
              return expected;
            }
            return value;
          }
        }
        function setValueForProperty(node, name, value, isCustomComponentTag) {
          var propertyInfo = getPropertyInfo(name);
          if (shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag)) {
            return;
          }
          if (shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag)) {
            value = null;
          }
          if (isCustomComponentTag || propertyInfo === null) {
            if (isAttributeNameSafe(name)) {
              var _attributeName = name;
              if (value === null) {
                node.removeAttribute(_attributeName);
              } else {
                node.setAttribute(_attributeName, '' + value);
              }
            }
            return;
          }
          var mustUseProperty = propertyInfo.mustUseProperty;
          if (mustUseProperty) {
            var propertyName = propertyInfo.propertyName;
            if (value === null) {
              var type = propertyInfo.type;
              node[propertyName] = type === BOOLEAN ? false : '';
            } else {
              node[propertyName] = value;
            }
            return;
          }
          var attributeName = propertyInfo.attributeName,
              attributeNamespace = propertyInfo.attributeNamespace;
          if (value === null) {
            node.removeAttribute(attributeName);
          } else {
            var _type = propertyInfo.type;
            var attributeValue = void 0;
            if (_type === BOOLEAN || _type === OVERLOADED_BOOLEAN && value === true) {
              attributeValue = '';
            } else {
              attributeValue = '' + value;
            }
            if (attributeNamespace) {
              node.setAttributeNS(attributeNamespace, attributeName, attributeValue);
            } else {
              node.setAttribute(attributeName, attributeValue);
            }
          }
        }
        function toString(value) {
          return '' + value;
        }
        function getToStringValue(value) {
          switch (typeof value) {
            case 'boolean':
            case 'number':
            case 'object':
            case 'string':
            case 'undefined':
              return value;
            default:
              return '';
          }
        }
        var ReactDebugCurrentFrame$1 = null;
        var ReactControlledValuePropTypes = { checkPropTypes: null };
        {
          ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
          var hasReadOnlyValue = {
            button: true,
            checkbox: true,
            image: true,
            hidden: true,
            radio: true,
            reset: true,
            submit: true
          };
          var propTypes = {
            value: function (props, propName, componentName) {
              if (hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled || props[propName] == null) {
                return null;
              }
              return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
            },
            checked: function (props, propName, componentName) {
              if (props.onChange || props.readOnly || props.disabled || props[propName] == null) {
                return null;
              }
              return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
            }
          };
          ReactControlledValuePropTypes.checkPropTypes = function (tagName, props) {
            checkPropTypes(propTypes, props, 'prop', tagName, ReactDebugCurrentFrame$1.getStackAddendum);
          };
        }
        var enableUserTimingAPI = true;
        var enableHooks = false;
        var debugRenderPhaseSideEffects = false;
        var debugRenderPhaseSideEffectsForStrictMode = true;
        var replayFailedUnitOfWorkWithInvokeGuardedCallback = true;
        var warnAboutDeprecatedLifecycles = false;
        var enableProfilerTimer = true;
        var enableSchedulerTracing = true;
        var disableInputAttributeSyncing = false;
        var enableStableConcurrentModeAPIs = false;
        var warnAboutShorthandPropertyCollision = false;
        var didWarnValueDefaultValue = false;
        var didWarnCheckedDefaultChecked = false;
        var didWarnControlledToUncontrolled = false;
        var didWarnUncontrolledToControlled = false;
        function isControlled(props) {
          var usesChecked = props.type === 'checkbox' || props.type === 'radio';
          return usesChecked ? props.checked != null : props.value != null;
        }
        function getHostProps(element, props) {
          var node = element;
          var checked = props.checked;
          var hostProps = _assign({}, props, {
            defaultChecked: undefined,
            defaultValue: undefined,
            value: undefined,
            checked: checked != null ? checked : node._wrapperState.initialChecked
          });
          return hostProps;
        }
        function initWrapperState(element, props) {
          {
            ReactControlledValuePropTypes.checkPropTypes('input', props);
            if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {
              warning$1(false, '%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', getCurrentFiberOwnerNameInDevOrNull() || 'A component', props.type);
              didWarnCheckedDefaultChecked = true;
            }
            if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
              warning$1(false, '%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', getCurrentFiberOwnerNameInDevOrNull() || 'A component', props.type);
              didWarnValueDefaultValue = true;
            }
          }
          var node = element;
          var defaultValue = props.defaultValue == null ? '' : props.defaultValue;
          node._wrapperState = {
            initialChecked: props.checked != null ? props.checked : props.defaultChecked,
            initialValue: getToStringValue(props.value != null ? props.value : defaultValue),
            controlled: isControlled(props)
          };
        }
        function updateChecked(element, props) {
          var node = element;
          var checked = props.checked;
          if (checked != null) {
            setValueForProperty(node, 'checked', checked, false);
          }
        }
        function updateWrapper(element, props) {
          var node = element;
          {
            var _controlled = isControlled(props);
            if (!node._wrapperState.controlled && _controlled && !didWarnUncontrolledToControlled) {
              warning$1(false, 'A component is changing an uncontrolled input of type %s to be controlled. ' + 'Input elements should not switch from uncontrolled to controlled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', props.type);
              didWarnUncontrolledToControlled = true;
            }
            if (node._wrapperState.controlled && !_controlled && !didWarnControlledToUncontrolled) {
              warning$1(false, 'A component is changing a controlled input of type %s to be uncontrolled. ' + 'Input elements should not switch from controlled to uncontrolled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', props.type);
              didWarnControlledToUncontrolled = true;
            }
          }
          updateChecked(element, props);
          var value = getToStringValue(props.value);
          var type = props.type;
          if (value != null) {
            if (type === 'number') {
              if (value === 0 && node.value === '' || node.value != value) {
                node.value = toString(value);
              }
            } else if (node.value !== toString(value)) {
              node.value = toString(value);
            }
          } else if (type === 'submit' || type === 'reset') {
            node.removeAttribute('value');
            return;
          }
          if (disableInputAttributeSyncing) {
            if (props.hasOwnProperty('defaultValue')) {
              setDefaultValue(node, props.type, getToStringValue(props.defaultValue));
            }
          } else {
            if (props.hasOwnProperty('value')) {
              setDefaultValue(node, props.type, value);
            } else if (props.hasOwnProperty('defaultValue')) {
              setDefaultValue(node, props.type, getToStringValue(props.defaultValue));
            }
          }
          if (disableInputAttributeSyncing) {
            if (props.defaultChecked == null) {
              node.removeAttribute('checked');
            } else {
              node.defaultChecked = !!props.defaultChecked;
            }
          } else {
            if (props.checked == null && props.defaultChecked != null) {
              node.defaultChecked = !!props.defaultChecked;
            }
          }
        }
        function postMountWrapper(element, props, isHydrating) {
          var node = element;
          if (props.hasOwnProperty('value') || props.hasOwnProperty('defaultValue')) {
            var type = props.type;
            var isButton = type === 'submit' || type === 'reset';
            if (isButton && (props.value === undefined || props.value === null)) {
              return;
            }
            var _initialValue = toString(node._wrapperState.initialValue);
            if (!isHydrating) {
              if (disableInputAttributeSyncing) {
                var value = getToStringValue(props.value);
                if (value != null) {
                  if (isButton || value !== node.value) {
                    node.value = toString(value);
                  }
                }
              } else {
                if (_initialValue !== node.value) {
                  node.value = _initialValue;
                }
              }
            }
            if (disableInputAttributeSyncing) {
              var defaultValue = getToStringValue(props.defaultValue);
              if (defaultValue != null) {
                node.defaultValue = toString(defaultValue);
              }
            } else {
              node.defaultValue = _initialValue;
            }
          }
          var name = node.name;
          if (name !== '') {
            node.name = '';
          }
          if (disableInputAttributeSyncing) {
            if (!isHydrating) {
              updateChecked(element, props);
            }
            if (props.hasOwnProperty('defaultChecked')) {
              node.defaultChecked = !node.defaultChecked;
              node.defaultChecked = !!props.defaultChecked;
            }
          } else {
            node.defaultChecked = !node.defaultChecked;
            node.defaultChecked = !!node._wrapperState.initialChecked;
          }
          if (name !== '') {
            node.name = name;
          }
        }
        function restoreControlledState(element, props) {
          var node = element;
          updateWrapper(node, props);
          updateNamedCousins(node, props);
        }
        function updateNamedCousins(rootNode, props) {
          var name = props.name;
          if (props.type === 'radio' && name != null) {
            var queryRoot = rootNode;
            while (queryRoot.parentNode) {
              queryRoot = queryRoot.parentNode;
            }
            var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');
            for (var i = 0; i < group.length; i++) {
              var otherNode = group[i];
              if (otherNode === rootNode || otherNode.form !== rootNode.form) {
                continue;
              }
              var otherProps = getFiberCurrentPropsFromNode$1(otherNode);
              !otherProps ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.') : void 0;
              updateValueIfChanged(otherNode);
              updateWrapper(otherNode, otherProps);
            }
          }
        }
        function setDefaultValue(node, type, value) {
          if (type !== 'number' || node.ownerDocument.activeElement !== node) {
            if (value == null) {
              node.defaultValue = toString(node._wrapperState.initialValue);
            } else if (node.defaultValue !== toString(value)) {
              node.defaultValue = toString(value);
            }
          }
        }
        var eventTypes$1 = { change: {
            phasedRegistrationNames: {
              bubbled: 'onChange',
              captured: 'onChangeCapture'
            },
            dependencies: [TOP_BLUR, TOP_CHANGE, TOP_CLICK, TOP_FOCUS, TOP_INPUT, TOP_KEY_DOWN, TOP_KEY_UP, TOP_SELECTION_CHANGE]
          } };
        function createAndAccumulateChangeEvent(inst, nativeEvent, target) {
          var event = SyntheticEvent.getPooled(eventTypes$1.change, inst, nativeEvent, target);
          event.type = 'change';
          enqueueStateRestore(target);
          accumulateTwoPhaseDispatches(event);
          return event;
        }
        var activeElement = null;
        var activeElementInst = null;
        function shouldUseChangeEvent(elem) {
          var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
          return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
        }
        function manualDispatchChangeEvent(nativeEvent) {
          var event = createAndAccumulateChangeEvent(activeElementInst, nativeEvent, getEventTarget(nativeEvent));
          batchedUpdates(runEventInBatch, event);
        }
        function runEventInBatch(event) {
          runEventsInBatch(event);
        }
        function getInstIfValueChanged(targetInst) {
          var targetNode = getNodeFromInstance$1(targetInst);
          if (updateValueIfChanged(targetNode)) {
            return targetInst;
          }
        }
        function getTargetInstForChangeEvent(topLevelType, targetInst) {
          if (topLevelType === TOP_CHANGE) {
            return targetInst;
          }
        }
        var isInputEventSupported = false;
        if (canUseDOM) {
          isInputEventSupported = isEventSupported('input') && (!document.documentMode || document.documentMode > 9);
        }
        function startWatchingForValueChange(target, targetInst) {
          activeElement = target;
          activeElementInst = targetInst;
          activeElement.attachEvent('onpropertychange', handlePropertyChange);
        }
        function stopWatchingForValueChange() {
          if (!activeElement) {
            return;
          }
          activeElement.detachEvent('onpropertychange', handlePropertyChange);
          activeElement = null;
          activeElementInst = null;
        }
        function handlePropertyChange(nativeEvent) {
          if (nativeEvent.propertyName !== 'value') {
            return;
          }
          if (getInstIfValueChanged(activeElementInst)) {
            manualDispatchChangeEvent(nativeEvent);
          }
        }
        function handleEventsForInputEventPolyfill(topLevelType, target, targetInst) {
          if (topLevelType === TOP_FOCUS) {
            stopWatchingForValueChange();
            startWatchingForValueChange(target, targetInst);
          } else if (topLevelType === TOP_BLUR) {
            stopWatchingForValueChange();
          }
        }
        function getTargetInstForInputEventPolyfill(topLevelType, targetInst) {
          if (topLevelType === TOP_SELECTION_CHANGE || topLevelType === TOP_KEY_UP || topLevelType === TOP_KEY_DOWN) {
            return getInstIfValueChanged(activeElementInst);
          }
        }
        function shouldUseClickEvent(elem) {
          var nodeName = elem.nodeName;
          return nodeName && nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
        }
        function getTargetInstForClickEvent(topLevelType, targetInst) {
          if (topLevelType === TOP_CLICK) {
            return getInstIfValueChanged(targetInst);
          }
        }
        function getTargetInstForInputOrChangeEvent(topLevelType, targetInst) {
          if (topLevelType === TOP_INPUT || topLevelType === TOP_CHANGE) {
            return getInstIfValueChanged(targetInst);
          }
        }
        function handleControlledInputBlur(node) {
          var state = node._wrapperState;
          if (!state || !state.controlled || node.type !== 'number') {
            return;
          }
          if (!disableInputAttributeSyncing) {
            setDefaultValue(node, 'number', node.value);
          }
        }
        var ChangeEventPlugin = {
          eventTypes: eventTypes$1,
          _isInputEventSupported: isInputEventSupported,
          extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
            var targetNode = targetInst ? getNodeFromInstance$1(targetInst) : window;
            var getTargetInstFunc = void 0,
                handleEventFunc = void 0;
            if (shouldUseChangeEvent(targetNode)) {
              getTargetInstFunc = getTargetInstForChangeEvent;
            } else if (isTextInputElement(targetNode)) {
              if (isInputEventSupported) {
                getTargetInstFunc = getTargetInstForInputOrChangeEvent;
              } else {
                getTargetInstFunc = getTargetInstForInputEventPolyfill;
                handleEventFunc = handleEventsForInputEventPolyfill;
              }
            } else if (shouldUseClickEvent(targetNode)) {
              getTargetInstFunc = getTargetInstForClickEvent;
            }
            if (getTargetInstFunc) {
              var inst = getTargetInstFunc(topLevelType, targetInst);
              if (inst) {
                var event = createAndAccumulateChangeEvent(inst, nativeEvent, nativeEventTarget);
                return event;
              }
            }
            if (handleEventFunc) {
              handleEventFunc(topLevelType, targetNode, targetInst);
            }
            if (topLevelType === TOP_BLUR) {
              handleControlledInputBlur(targetNode);
            }
          }
        };
        var DOMEventPluginOrder = ['ResponderEventPlugin', 'SimpleEventPlugin', 'EnterLeaveEventPlugin', 'ChangeEventPlugin', 'SelectEventPlugin', 'BeforeInputEventPlugin'];
        var SyntheticUIEvent = SyntheticEvent.extend({
          view: null,
          detail: null
        });
        var modifierKeyToProp = {
          Alt: 'altKey',
          Control: 'ctrlKey',
          Meta: 'metaKey',
          Shift: 'shiftKey'
        };
        function modifierStateGetter(keyArg) {
          var syntheticEvent = this;
          var nativeEvent = syntheticEvent.nativeEvent;
          if (nativeEvent.getModifierState) {
            return nativeEvent.getModifierState(keyArg);
          }
          var keyProp = modifierKeyToProp[keyArg];
          return keyProp ? !!nativeEvent[keyProp] : false;
        }
        function getEventModifierState(nativeEvent) {
          return modifierStateGetter;
        }
        var previousScreenX = 0;
        var previousScreenY = 0;
        var isMovementXSet = false;
        var isMovementYSet = false;
        var SyntheticMouseEvent = SyntheticUIEvent.extend({
          screenX: null,
          screenY: null,
          clientX: null,
          clientY: null,
          pageX: null,
          pageY: null,
          ctrlKey: null,
          shiftKey: null,
          altKey: null,
          metaKey: null,
          getModifierState: getEventModifierState,
          button: null,
          buttons: null,
          relatedTarget: function (event) {
            return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);
          },
          movementX: function (event) {
            if ('movementX' in event) {
              return event.movementX;
            }
            var screenX = previousScreenX;
            previousScreenX = event.screenX;
            if (!isMovementXSet) {
              isMovementXSet = true;
              return 0;
            }
            return event.type === 'mousemove' ? event.screenX - screenX : 0;
          },
          movementY: function (event) {
            if ('movementY' in event) {
              return event.movementY;
            }
            var screenY = previousScreenY;
            previousScreenY = event.screenY;
            if (!isMovementYSet) {
              isMovementYSet = true;
              return 0;
            }
            return event.type === 'mousemove' ? event.screenY - screenY : 0;
          }
        });
        var SyntheticPointerEvent = SyntheticMouseEvent.extend({
          pointerId: null,
          width: null,
          height: null,
          pressure: null,
          tangentialPressure: null,
          tiltX: null,
          tiltY: null,
          twist: null,
          pointerType: null,
          isPrimary: null
        });
        var eventTypes$2 = {
          mouseEnter: {
            registrationName: 'onMouseEnter',
            dependencies: [TOP_MOUSE_OUT, TOP_MOUSE_OVER]
          },
          mouseLeave: {
            registrationName: 'onMouseLeave',
            dependencies: [TOP_MOUSE_OUT, TOP_MOUSE_OVER]
          },
          pointerEnter: {
            registrationName: 'onPointerEnter',
            dependencies: [TOP_POINTER_OUT, TOP_POINTER_OVER]
          },
          pointerLeave: {
            registrationName: 'onPointerLeave',
            dependencies: [TOP_POINTER_OUT, TOP_POINTER_OVER]
          }
        };
        var EnterLeaveEventPlugin = {
          eventTypes: eventTypes$2,
          extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
            var isOverEvent = topLevelType === TOP_MOUSE_OVER || topLevelType === TOP_POINTER_OVER;
            var isOutEvent = topLevelType === TOP_MOUSE_OUT || topLevelType === TOP_POINTER_OUT;
            if (isOverEvent && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
              return null;
            }
            if (!isOutEvent && !isOverEvent) {
              return null;
            }
            var win = void 0;
            if (nativeEventTarget.window === nativeEventTarget) {
              win = nativeEventTarget;
            } else {
              var doc = nativeEventTarget.ownerDocument;
              if (doc) {
                win = doc.defaultView || doc.parentWindow;
              } else {
                win = window;
              }
            }
            var from = void 0;
            var to = void 0;
            if (isOutEvent) {
              from = targetInst;
              var related = nativeEvent.relatedTarget || nativeEvent.toElement;
              to = related ? getClosestInstanceFromNode(related) : null;
            } else {
              from = null;
              to = targetInst;
            }
            if (from === to) {
              return null;
            }
            var eventInterface = void 0,
                leaveEventType = void 0,
                enterEventType = void 0,
                eventTypePrefix = void 0;
            if (topLevelType === TOP_MOUSE_OUT || topLevelType === TOP_MOUSE_OVER) {
              eventInterface = SyntheticMouseEvent;
              leaveEventType = eventTypes$2.mouseLeave;
              enterEventType = eventTypes$2.mouseEnter;
              eventTypePrefix = 'mouse';
            } else if (topLevelType === TOP_POINTER_OUT || topLevelType === TOP_POINTER_OVER) {
              eventInterface = SyntheticPointerEvent;
              leaveEventType = eventTypes$2.pointerLeave;
              enterEventType = eventTypes$2.pointerEnter;
              eventTypePrefix = 'pointer';
            }
            var fromNode = from == null ? win : getNodeFromInstance$1(from);
            var toNode = to == null ? win : getNodeFromInstance$1(to);
            var leave = eventInterface.getPooled(leaveEventType, from, nativeEvent, nativeEventTarget);
            leave.type = eventTypePrefix + 'leave';
            leave.target = fromNode;
            leave.relatedTarget = toNode;
            var enter = eventInterface.getPooled(enterEventType, to, nativeEvent, nativeEventTarget);
            enter.type = eventTypePrefix + 'enter';
            enter.target = toNode;
            enter.relatedTarget = fromNode;
            accumulateEnterLeaveDispatches(leave, enter, from, to);
            return [leave, enter];
          }
        };
        var hasOwnProperty$1 = Object.prototype.hasOwnProperty;
        function is(x, y) {
          if (x === y) {
            return x !== 0 || y !== 0 || 1 / x === 1 / y;
          } else {
            return x !== x && y !== y;
          }
        }
        function shallowEqual(objA, objB) {
          if (is(objA, objB)) {
            return true;
          }
          if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
            return false;
          }
          var keysA = Object.keys(objA);
          var keysB = Object.keys(objB);
          if (keysA.length !== keysB.length) {
            return false;
          }
          for (var i = 0; i < keysA.length; i++) {
            if (!hasOwnProperty$1.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
              return false;
            }
          }
          return true;
        }
        function get(key) {
          return key._reactInternalFiber;
        }
        function has(key) {
          return key._reactInternalFiber !== undefined;
        }
        function set(key, value) {
          key._reactInternalFiber = value;
        }
        var NoEffect = 0;
        var PerformedWork = 1;
        var Placement = 2;
        var Update = 4;
        var PlacementAndUpdate = 6;
        var Deletion = 8;
        var ContentReset = 16;
        var Callback = 32;
        var DidCapture = 64;
        var Ref = 128;
        var Snapshot = 256;
        var Passive = 512;
        var LifecycleEffectMask = 932;
        var HostEffectMask = 1023;
        var Incomplete = 1024;
        var ShouldCapture = 2048;
        var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;
        var MOUNTING = 1;
        var MOUNTED = 2;
        var UNMOUNTED = 3;
        function isFiberMountedImpl(fiber) {
          var node = fiber;
          if (!fiber.alternate) {
            if ((node.effectTag & Placement) !== NoEffect) {
              return MOUNTING;
            }
            while (node.return) {
              node = node.return;
              if ((node.effectTag & Placement) !== NoEffect) {
                return MOUNTING;
              }
            }
          } else {
            while (node.return) {
              node = node.return;
            }
          }
          if (node.tag === HostRoot) {
            return MOUNTED;
          }
          return UNMOUNTED;
        }
        function isFiberMounted(fiber) {
          return isFiberMountedImpl(fiber) === MOUNTED;
        }
        function isMounted(component) {
          {
            var owner = ReactCurrentOwner$1.current;
            if (owner !== null && owner.tag === ClassComponent) {
              var ownerFiber = owner;
              var instance = ownerFiber.stateNode;
              !instance._warnedAboutRefsInRender ? warningWithoutStack$1(false, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', getComponentName(ownerFiber.type) || 'A component') : void 0;
              instance._warnedAboutRefsInRender = true;
            }
          }
          var fiber = get(component);
          if (!fiber) {
            return false;
          }
          return isFiberMountedImpl(fiber) === MOUNTED;
        }
        function assertIsMounted(fiber) {
          !(isFiberMountedImpl(fiber) === MOUNTED) ? invariant(false, 'Unable to find node on an unmounted component.') : void 0;
        }
        function findCurrentFiberUsingSlowPath(fiber) {
          var alternate = fiber.alternate;
          if (!alternate) {
            var state = isFiberMountedImpl(fiber);
            !(state !== UNMOUNTED) ? invariant(false, 'Unable to find node on an unmounted component.') : void 0;
            if (state === MOUNTING) {
              return null;
            }
            return fiber;
          }
          var a = fiber;
          var b = alternate;
          while (true) {
            var parentA = a.return;
            var parentB = parentA ? parentA.alternate : null;
            if (!parentA || !parentB) {
              break;
            }
            if (parentA.child === parentB.child) {
              var child = parentA.child;
              while (child) {
                if (child === a) {
                  assertIsMounted(parentA);
                  return fiber;
                }
                if (child === b) {
                  assertIsMounted(parentA);
                  return alternate;
                }
                child = child.sibling;
              }
              invariant(false, 'Unable to find node on an unmounted component.');
            }
            if (a.return !== b.return) {
              a = parentA;
              b = parentB;
            } else {
              var didFindChild = false;
              var _child = parentA.child;
              while (_child) {
                if (_child === a) {
                  didFindChild = true;
                  a = parentA;
                  b = parentB;
                  break;
                }
                if (_child === b) {
                  didFindChild = true;
                  b = parentA;
                  a = parentB;
                  break;
                }
                _child = _child.sibling;
              }
              if (!didFindChild) {
                _child = parentB.child;
                while (_child) {
                  if (_child === a) {
                    didFindChild = true;
                    a = parentB;
                    b = parentA;
                    break;
                  }
                  if (_child === b) {
                    didFindChild = true;
                    b = parentB;
                    a = parentA;
                    break;
                  }
                  _child = _child.sibling;
                }
                !didFindChild ? invariant(false, 'Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue.') : void 0;
              }
            }
            !(a.alternate === b) ? invariant(false, 'Return fibers should always be each others\' alternates. This error is likely caused by a bug in React. Please file an issue.') : void 0;
          }
          !(a.tag === HostRoot) ? invariant(false, 'Unable to find node on an unmounted component.') : void 0;
          if (a.stateNode.current === a) {
            return fiber;
          }
          return alternate;
        }
        function findCurrentHostFiber(parent) {
          var currentParent = findCurrentFiberUsingSlowPath(parent);
          if (!currentParent) {
            return null;
          }
          var node = currentParent;
          while (true) {
            if (node.tag === HostComponent || node.tag === HostText) {
              return node;
            } else if (node.child) {
              node.child.return = node;
              node = node.child;
              continue;
            }
            if (node === currentParent) {
              return null;
            }
            while (!node.sibling) {
              if (!node.return || node.return === currentParent) {
                return null;
              }
              node = node.return;
            }
            node.sibling.return = node.return;
            node = node.sibling;
          }
          return null;
        }
        function findCurrentHostFiberWithNoPortals(parent) {
          var currentParent = findCurrentFiberUsingSlowPath(parent);
          if (!currentParent) {
            return null;
          }
          var node = currentParent;
          while (true) {
            if (node.tag === HostComponent || node.tag === HostText) {
              return node;
            } else if (node.child && node.tag !== HostPortal) {
              node.child.return = node;
              node = node.child;
              continue;
            }
            if (node === currentParent) {
              return null;
            }
            while (!node.sibling) {
              if (!node.return || node.return === currentParent) {
                return null;
              }
              node = node.return;
            }
            node.sibling.return = node.return;
            node = node.sibling;
          }
          return null;
        }
        function addEventBubbleListener(element, eventType, listener) {
          element.addEventListener(eventType, listener, false);
        }
        function addEventCaptureListener(element, eventType, listener) {
          element.addEventListener(eventType, listener, true);
        }
        var SyntheticAnimationEvent = SyntheticEvent.extend({
          animationName: null,
          elapsedTime: null,
          pseudoElement: null
        });
        var SyntheticClipboardEvent = SyntheticEvent.extend({ clipboardData: function (event) {
            return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
          } });
        var SyntheticFocusEvent = SyntheticUIEvent.extend({ relatedTarget: null });
        function getEventCharCode(nativeEvent) {
          var charCode = void 0;
          var keyCode = nativeEvent.keyCode;
          if ('charCode' in nativeEvent) {
            charCode = nativeEvent.charCode;
            if (charCode === 0 && keyCode === 13) {
              charCode = 13;
            }
          } else {
            charCode = keyCode;
          }
          if (charCode === 10) {
            charCode = 13;
          }
          if (charCode >= 32 || charCode === 13) {
            return charCode;
          }
          return 0;
        }
        var normalizeKey = {
          Esc: 'Escape',
          Spacebar: ' ',
          Left: 'ArrowLeft',
          Up: 'ArrowUp',
          Right: 'ArrowRight',
          Down: 'ArrowDown',
          Del: 'Delete',
          Win: 'OS',
          Menu: 'ContextMenu',
          Apps: 'ContextMenu',
          Scroll: 'ScrollLock',
          MozPrintableKey: 'Unidentified'
        };
        var translateToKey = {
          '8': 'Backspace',
          '9': 'Tab',
          '12': 'Clear',
          '13': 'Enter',
          '16': 'Shift',
          '17': 'Control',
          '18': 'Alt',
          '19': 'Pause',
          '20': 'CapsLock',
          '27': 'Escape',
          '32': ' ',
          '33': 'PageUp',
          '34': 'PageDown',
          '35': 'End',
          '36': 'Home',
          '37': 'ArrowLeft',
          '38': 'ArrowUp',
          '39': 'ArrowRight',
          '40': 'ArrowDown',
          '45': 'Insert',
          '46': 'Delete',
          '112': 'F1',
          '113': 'F2',
          '114': 'F3',
          '115': 'F4',
          '116': 'F5',
          '117': 'F6',
          '118': 'F7',
          '119': 'F8',
          '120': 'F9',
          '121': 'F10',
          '122': 'F11',
          '123': 'F12',
          '144': 'NumLock',
          '145': 'ScrollLock',
          '224': 'Meta'
        };
        function getEventKey(nativeEvent) {
          if (nativeEvent.key) {
            var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
            if (key !== 'Unidentified') {
              return key;
            }
          }
          if (nativeEvent.type === 'keypress') {
            var charCode = getEventCharCode(nativeEvent);
            return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
          }
          if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
            return translateToKey[nativeEvent.keyCode] || 'Unidentified';
          }
          return '';
        }
        var SyntheticKeyboardEvent = SyntheticUIEvent.extend({
          key: getEventKey,
          location: null,
          ctrlKey: null,
          shiftKey: null,
          altKey: null,
          metaKey: null,
          repeat: null,
          locale: null,
          getModifierState: getEventModifierState,
          charCode: function (event) {
            if (event.type === 'keypress') {
              return getEventCharCode(event);
            }
            return 0;
          },
          keyCode: function (event) {
            if (event.type === 'keydown' || event.type === 'keyup') {
              return event.keyCode;
            }
            return 0;
          },
          which: function (event) {
            if (event.type === 'keypress') {
              return getEventCharCode(event);
            }
            if (event.type === 'keydown' || event.type === 'keyup') {
              return event.keyCode;
            }
            return 0;
          }
        });
        var SyntheticDragEvent = SyntheticMouseEvent.extend({ dataTransfer: null });
        var SyntheticTouchEvent = SyntheticUIEvent.extend({
          touches: null,
          targetTouches: null,
          changedTouches: null,
          altKey: null,
          metaKey: null,
          ctrlKey: null,
          shiftKey: null,
          getModifierState: getEventModifierState
        });
        var SyntheticTransitionEvent = SyntheticEvent.extend({
          propertyName: null,
          elapsedTime: null,
          pseudoElement: null
        });
        var SyntheticWheelEvent = SyntheticMouseEvent.extend({
          deltaX: function (event) {
            return 'deltaX' in event ? event.deltaX : 'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
          },
          deltaY: function (event) {
            return 'deltaY' in event ? event.deltaY : 'wheelDeltaY' in event ? -event.wheelDeltaY : 'wheelDelta' in event ? -event.wheelDelta : 0;
          },
          deltaZ: null,
          deltaMode: null
        });
        var interactiveEventTypeNames = [[TOP_BLUR, 'blur'], [TOP_CANCEL, 'cancel'], [TOP_CLICK, 'click'], [TOP_CLOSE, 'close'], [TOP_CONTEXT_MENU, 'contextMenu'], [TOP_COPY, 'copy'], [TOP_CUT, 'cut'], [TOP_AUX_CLICK, 'auxClick'], [TOP_DOUBLE_CLICK, 'doubleClick'], [TOP_DRAG_END, 'dragEnd'], [TOP_DRAG_START, 'dragStart'], [TOP_DROP, 'drop'], [TOP_FOCUS, 'focus'], [TOP_INPUT, 'input'], [TOP_INVALID, 'invalid'], [TOP_KEY_DOWN, 'keyDown'], [TOP_KEY_PRESS, 'keyPress'], [TOP_KEY_UP, 'keyUp'], [TOP_MOUSE_DOWN, 'mouseDown'], [TOP_MOUSE_UP, 'mouseUp'], [TOP_PASTE, 'paste'], [TOP_PAUSE, 'pause'], [TOP_PLAY, 'play'], [TOP_POINTER_CANCEL, 'pointerCancel'], [TOP_POINTER_DOWN, 'pointerDown'], [TOP_POINTER_UP, 'pointerUp'], [TOP_RATE_CHANGE, 'rateChange'], [TOP_RESET, 'reset'], [TOP_SEEKED, 'seeked'], [TOP_SUBMIT, 'submit'], [TOP_TOUCH_CANCEL, 'touchCancel'], [TOP_TOUCH_END, 'touchEnd'], [TOP_TOUCH_START, 'touchStart'], [TOP_VOLUME_CHANGE, 'volumeChange']];
        var nonInteractiveEventTypeNames = [[TOP_ABORT, 'abort'], [TOP_ANIMATION_END, 'animationEnd'], [TOP_ANIMATION_ITERATION, 'animationIteration'], [TOP_ANIMATION_START, 'animationStart'], [TOP_CAN_PLAY, 'canPlay'], [TOP_CAN_PLAY_THROUGH, 'canPlayThrough'], [TOP_DRAG, 'drag'], [TOP_DRAG_ENTER, 'dragEnter'], [TOP_DRAG_EXIT, 'dragExit'], [TOP_DRAG_LEAVE, 'dragLeave'], [TOP_DRAG_OVER, 'dragOver'], [TOP_DURATION_CHANGE, 'durationChange'], [TOP_EMPTIED, 'emptied'], [TOP_ENCRYPTED, 'encrypted'], [TOP_ENDED, 'ended'], [TOP_ERROR, 'error'], [TOP_GOT_POINTER_CAPTURE, 'gotPointerCapture'], [TOP_LOAD, 'load'], [TOP_LOADED_DATA, 'loadedData'], [TOP_LOADED_METADATA, 'loadedMetadata'], [TOP_LOAD_START, 'loadStart'], [TOP_LOST_POINTER_CAPTURE, 'lostPointerCapture'], [TOP_MOUSE_MOVE, 'mouseMove'], [TOP_MOUSE_OUT, 'mouseOut'], [TOP_MOUSE_OVER, 'mouseOver'], [TOP_PLAYING, 'playing'], [TOP_POINTER_MOVE, 'pointerMove'], [TOP_POINTER_OUT, 'pointerOut'], [TOP_POINTER_OVER, 'pointerOver'], [TOP_PROGRESS, 'progress'], [TOP_SCROLL, 'scroll'], [TOP_SEEKING, 'seeking'], [TOP_STALLED, 'stalled'], [TOP_SUSPEND, 'suspend'], [TOP_TIME_UPDATE, 'timeUpdate'], [TOP_TOGGLE, 'toggle'], [TOP_TOUCH_MOVE, 'touchMove'], [TOP_TRANSITION_END, 'transitionEnd'], [TOP_WAITING, 'waiting'], [TOP_WHEEL, 'wheel']];
        var eventTypes$4 = {};
        var topLevelEventsToDispatchConfig = {};
        function addEventTypeNameToConfig(_ref, isInteractive) {
          var topEvent = _ref[0],
              event = _ref[1];
          var capitalizedEvent = event[0].toUpperCase() + event.slice(1);
          var onEvent = 'on' + capitalizedEvent;
          var type = {
            phasedRegistrationNames: {
              bubbled: onEvent,
              captured: onEvent + 'Capture'
            },
            dependencies: [topEvent],
            isInteractive: isInteractive
          };
          eventTypes$4[event] = type;
          topLevelEventsToDispatchConfig[topEvent] = type;
        }
        interactiveEventTypeNames.forEach(function (eventTuple) {
          addEventTypeNameToConfig(eventTuple, true);
        });
        nonInteractiveEventTypeNames.forEach(function (eventTuple) {
          addEventTypeNameToConfig(eventTuple, false);
        });
        var knownHTMLTopLevelTypes = [TOP_ABORT, TOP_CANCEL, TOP_CAN_PLAY, TOP_CAN_PLAY_THROUGH, TOP_CLOSE, TOP_DURATION_CHANGE, TOP_EMPTIED, TOP_ENCRYPTED, TOP_ENDED, TOP_ERROR, TOP_INPUT, TOP_INVALID, TOP_LOAD, TOP_LOADED_DATA, TOP_LOADED_METADATA, TOP_LOAD_START, TOP_PAUSE, TOP_PLAY, TOP_PLAYING, TOP_PROGRESS, TOP_RATE_CHANGE, TOP_RESET, TOP_SEEKED, TOP_SEEKING, TOP_STALLED, TOP_SUBMIT, TOP_SUSPEND, TOP_TIME_UPDATE, TOP_TOGGLE, TOP_VOLUME_CHANGE, TOP_WAITING];
        var SimpleEventPlugin = {
          eventTypes: eventTypes$4,
          isInteractiveTopLevelEventType: function (topLevelType) {
            var config = topLevelEventsToDispatchConfig[topLevelType];
            return config !== undefined && config.isInteractive === true;
          },
          extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
            var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
            if (!dispatchConfig) {
              return null;
            }
            var EventConstructor = void 0;
            switch (topLevelType) {
              case TOP_KEY_PRESS:
                if (getEventCharCode(nativeEvent) === 0) {
                  return null;
                }
              case TOP_KEY_DOWN:
              case TOP_KEY_UP:
                EventConstructor = SyntheticKeyboardEvent;
                break;
              case TOP_BLUR:
              case TOP_FOCUS:
                EventConstructor = SyntheticFocusEvent;
                break;
              case TOP_CLICK:
                if (nativeEvent.button === 2) {
                  return null;
                }
              case TOP_AUX_CLICK:
              case TOP_DOUBLE_CLICK:
              case TOP_MOUSE_DOWN:
              case TOP_MOUSE_MOVE:
              case TOP_MOUSE_UP:
              case TOP_MOUSE_OUT:
              case TOP_MOUSE_OVER:
              case TOP_CONTEXT_MENU:
                EventConstructor = SyntheticMouseEvent;
                break;
              case TOP_DRAG:
              case TOP_DRAG_END:
              case TOP_DRAG_ENTER:
              case TOP_DRAG_EXIT:
              case TOP_DRAG_LEAVE:
              case TOP_DRAG_OVER:
              case TOP_DRAG_START:
              case TOP_DROP:
                EventConstructor = SyntheticDragEvent;
                break;
              case TOP_TOUCH_CANCEL:
              case TOP_TOUCH_END:
              case TOP_TOUCH_MOVE:
              case TOP_TOUCH_START:
                EventConstructor = SyntheticTouchEvent;
                break;
              case TOP_ANIMATION_END:
              case TOP_ANIMATION_ITERATION:
              case TOP_ANIMATION_START:
                EventConstructor = SyntheticAnimationEvent;
                break;
              case TOP_TRANSITION_END:
                EventConstructor = SyntheticTransitionEvent;
                break;
              case TOP_SCROLL:
                EventConstructor = SyntheticUIEvent;
                break;
              case TOP_WHEEL:
                EventConstructor = SyntheticWheelEvent;
                break;
              case TOP_COPY:
              case TOP_CUT:
              case TOP_PASTE:
                EventConstructor = SyntheticClipboardEvent;
                break;
              case TOP_GOT_POINTER_CAPTURE:
              case TOP_LOST_POINTER_CAPTURE:
              case TOP_POINTER_CANCEL:
              case TOP_POINTER_DOWN:
              case TOP_POINTER_MOVE:
              case TOP_POINTER_OUT:
              case TOP_POINTER_OVER:
              case TOP_POINTER_UP:
                EventConstructor = SyntheticPointerEvent;
                break;
              default:
                {
                  if (knownHTMLTopLevelTypes.indexOf(topLevelType) === -1) {
                    warningWithoutStack$1(false, 'SimpleEventPlugin: Unhandled event type, `%s`. This warning ' + 'is likely caused by a bug in React. Please file an issue.', topLevelType);
                  }
                }
                EventConstructor = SyntheticEvent;
                break;
            }
            var event = EventConstructor.getPooled(dispatchConfig, targetInst, nativeEvent, nativeEventTarget);
            accumulateTwoPhaseDispatches(event);
            return event;
          }
        };
        var isInteractiveTopLevelEventType = SimpleEventPlugin.isInteractiveTopLevelEventType;
        var CALLBACK_BOOKKEEPING_POOL_SIZE = 10;
        var callbackBookkeepingPool = [];
        function findRootContainerNode(inst) {
          while (inst.return) {
            inst = inst.return;
          }
          if (inst.tag !== HostRoot) {
            return null;
          }
          return inst.stateNode.containerInfo;
        }
        function getTopLevelCallbackBookKeeping(topLevelType, nativeEvent, targetInst) {
          if (callbackBookkeepingPool.length) {
            var instance = callbackBookkeepingPool.pop();
            instance.topLevelType = topLevelType;
            instance.nativeEvent = nativeEvent;
            instance.targetInst = targetInst;
            return instance;
          }
          return {
            topLevelType: topLevelType,
            nativeEvent: nativeEvent,
            targetInst: targetInst,
            ancestors: []
          };
        }
        function releaseTopLevelCallbackBookKeeping(instance) {
          instance.topLevelType = null;
          instance.nativeEvent = null;
          instance.targetInst = null;
          instance.ancestors.length = 0;
          if (callbackBookkeepingPool.length < CALLBACK_BOOKKEEPING_POOL_SIZE) {
            callbackBookkeepingPool.push(instance);
          }
        }
        function handleTopLevel(bookKeeping) {
          var targetInst = bookKeeping.targetInst;
          var ancestor = targetInst;
          do {
            if (!ancestor) {
              bookKeeping.ancestors.push(ancestor);
              break;
            }
            var root = findRootContainerNode(ancestor);
            if (!root) {
              break;
            }
            bookKeeping.ancestors.push(ancestor);
            ancestor = getClosestInstanceFromNode(root);
          } while (ancestor);
          for (var i = 0; i < bookKeeping.ancestors.length; i++) {
            targetInst = bookKeeping.ancestors[i];
            runExtractedEventsInBatch(bookKeeping.topLevelType, targetInst, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));
          }
        }
        var _enabled = true;
        function setEnabled(enabled) {
          _enabled = !!enabled;
        }
        function isEnabled() {
          return _enabled;
        }
        function trapBubbledEvent(topLevelType, element) {
          if (!element) {
            return null;
          }
          var dispatch = isInteractiveTopLevelEventType(topLevelType) ? dispatchInteractiveEvent : dispatchEvent;
          addEventBubbleListener(element, getRawEventName(topLevelType), dispatch.bind(null, topLevelType));
        }
        function trapCapturedEvent(topLevelType, element) {
          if (!element) {
            return null;
          }
          var dispatch = isInteractiveTopLevelEventType(topLevelType) ? dispatchInteractiveEvent : dispatchEvent;
          addEventCaptureListener(element, getRawEventName(topLevelType), dispatch.bind(null, topLevelType));
        }
        function dispatchInteractiveEvent(topLevelType, nativeEvent) {
          interactiveUpdates(dispatchEvent, topLevelType, nativeEvent);
        }
        function dispatchEvent(topLevelType, nativeEvent) {
          if (!_enabled) {
            return;
          }
          var nativeEventTarget = getEventTarget(nativeEvent);
          var targetInst = getClosestInstanceFromNode(nativeEventTarget);
          if (targetInst !== null && typeof targetInst.tag === 'number' && !isFiberMounted(targetInst)) {
            targetInst = null;
          }
          var bookKeeping = getTopLevelCallbackBookKeeping(topLevelType, nativeEvent, targetInst);
          try {
            batchedUpdates(handleTopLevel, bookKeeping);
          } finally {
            releaseTopLevelCallbackBookKeeping(bookKeeping);
          }
        }
        var alreadyListeningTo = {};
        var reactTopListenersCounter = 0;
        var topListenersIDKey = '_reactListenersID' + ('' + Math.random()).slice(2);
        function getListeningForDocument(mountAt) {
          if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {
            mountAt[topListenersIDKey] = reactTopListenersCounter++;
            alreadyListeningTo[mountAt[topListenersIDKey]] = {};
          }
          return alreadyListeningTo[mountAt[topListenersIDKey]];
        }
        function listenTo(registrationName, mountAt) {
          var isListening = getListeningForDocument(mountAt);
          var dependencies = registrationNameDependencies[registrationName];
          for (var i = 0; i < dependencies.length; i++) {
            var dependency = dependencies[i];
            if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
              switch (dependency) {
                case TOP_SCROLL:
                  trapCapturedEvent(TOP_SCROLL, mountAt);
                  break;
                case TOP_FOCUS:
                case TOP_BLUR:
                  trapCapturedEvent(TOP_FOCUS, mountAt);
                  trapCapturedEvent(TOP_BLUR, mountAt);
                  isListening[TOP_BLUR] = true;
                  isListening[TOP_FOCUS] = true;
                  break;
                case TOP_CANCEL:
                case TOP_CLOSE:
                  if (isEventSupported(getRawEventName(dependency))) {
                    trapCapturedEvent(dependency, mountAt);
                  }
                  break;
                case TOP_INVALID:
                case TOP_SUBMIT:
                case TOP_RESET:
                  break;
                default:
                  var isMediaEvent = mediaEventTypes.indexOf(dependency) !== -1;
                  if (!isMediaEvent) {
                    trapBubbledEvent(dependency, mountAt);
                  }
                  break;
              }
              isListening[dependency] = true;
            }
          }
        }
        function isListeningToAllDependencies(registrationName, mountAt) {
          var isListening = getListeningForDocument(mountAt);
          var dependencies = registrationNameDependencies[registrationName];
          for (var i = 0; i < dependencies.length; i++) {
            var dependency = dependencies[i];
            if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
              return false;
            }
          }
          return true;
        }
        function getActiveElement(doc) {
          doc = doc || (typeof document !== 'undefined' ? document : undefined);
          if (typeof doc === 'undefined') {
            return null;
          }
          try {
            return doc.activeElement || doc.body;
          } catch (e) {
            return doc.body;
          }
        }
        function getLeafNode(node) {
          while (node && node.firstChild) {
            node = node.firstChild;
          }
          return node;
        }
        function getSiblingNode(node) {
          while (node) {
            if (node.nextSibling) {
              return node.nextSibling;
            }
            node = node.parentNode;
          }
        }
        function getNodeForCharacterOffset(root, offset) {
          var node = getLeafNode(root);
          var nodeStart = 0;
          var nodeEnd = 0;
          while (node) {
            if (node.nodeType === TEXT_NODE) {
              nodeEnd = nodeStart + node.textContent.length;
              if (nodeStart <= offset && nodeEnd >= offset) {
                return {
                  node: node,
                  offset: offset - nodeStart
                };
              }
              nodeStart = nodeEnd;
            }
            node = getLeafNode(getSiblingNode(node));
          }
        }
        function getOffsets(outerNode) {
          var ownerDocument = outerNode.ownerDocument;
          var win = ownerDocument && ownerDocument.defaultView || window;
          var selection = win.getSelection && win.getSelection();
          if (!selection || selection.rangeCount === 0) {
            return null;
          }
          var anchorNode = selection.anchorNode,
              anchorOffset = selection.anchorOffset,
              focusNode = selection.focusNode,
              focusOffset = selection.focusOffset;
          try {
            anchorNode.nodeType;
            focusNode.nodeType;
          } catch (e) {
            return null;
          }
          return getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode, focusOffset);
        }
        function getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode, focusOffset) {
          var length = 0;
          var start = -1;
          var end = -1;
          var indexWithinAnchor = 0;
          var indexWithinFocus = 0;
          var node = outerNode;
          var parentNode = null;
          outer: while (true) {
            var next = null;
            while (true) {
              if (node === anchorNode && (anchorOffset === 0 || node.nodeType === TEXT_NODE)) {
                start = length + anchorOffset;
              }
              if (node === focusNode && (focusOffset === 0 || node.nodeType === TEXT_NODE)) {
                end = length + focusOffset;
              }
              if (node.nodeType === TEXT_NODE) {
                length += node.nodeValue.length;
              }
              if ((next = node.firstChild) === null) {
                break;
              }
              parentNode = node;
              node = next;
            }
            while (true) {
              if (node === outerNode) {
                break outer;
              }
              if (parentNode === anchorNode && ++indexWithinAnchor === anchorOffset) {
                start = length;
              }
              if (parentNode === focusNode && ++indexWithinFocus === focusOffset) {
                end = length;
              }
              if ((next = node.nextSibling) !== null) {
                break;
              }
              node = parentNode;
              parentNode = node.parentNode;
            }
            node = next;
          }
          if (start === -1 || end === -1) {
            return null;
          }
          return {
            start: start,
            end: end
          };
        }
        function setOffsets(node, offsets) {
          var doc = node.ownerDocument || document;
          var win = doc && doc.defaultView || window;
          if (!win.getSelection) {
            return;
          }
          var selection = win.getSelection();
          var length = node.textContent.length;
          var start = Math.min(offsets.start, length);
          var end = offsets.end === undefined ? start : Math.min(offsets.end, length);
          if (!selection.extend && start > end) {
            var temp = end;
            end = start;
            start = temp;
          }
          var startMarker = getNodeForCharacterOffset(node, start);
          var endMarker = getNodeForCharacterOffset(node, end);
          if (startMarker && endMarker) {
            if (selection.rangeCount === 1 && selection.anchorNode === startMarker.node && selection.anchorOffset === startMarker.offset && selection.focusNode === endMarker.node && selection.focusOffset === endMarker.offset) {
              return;
            }
            var range = doc.createRange();
            range.setStart(startMarker.node, startMarker.offset);
            selection.removeAllRanges();
            if (start > end) {
              selection.addRange(range);
              selection.extend(endMarker.node, endMarker.offset);
            } else {
              range.setEnd(endMarker.node, endMarker.offset);
              selection.addRange(range);
            }
          }
        }
        function isTextNode(node) {
          return node && node.nodeType === TEXT_NODE;
        }
        function containsNode(outerNode, innerNode) {
          if (!outerNode || !innerNode) {
            return false;
          } else if (outerNode === innerNode) {
            return true;
          } else if (isTextNode(outerNode)) {
            return false;
          } else if (isTextNode(innerNode)) {
            return containsNode(outerNode, innerNode.parentNode);
          } else if ('contains' in outerNode) {
            return outerNode.contains(innerNode);
          } else if (outerNode.compareDocumentPosition) {
            return !!(outerNode.compareDocumentPosition(innerNode) & 16);
          } else {
            return false;
          }
        }
        function isInDocument(node) {
          return node && node.ownerDocument && containsNode(node.ownerDocument.documentElement, node);
        }
        function getActiveElementDeep() {
          var win = window;
          var element = getActiveElement();
          while (element instanceof win.HTMLIFrameElement) {
            try {
              win = element.contentDocument.defaultView;
            } catch (e) {
              return element;
            }
            element = getActiveElement(win.document);
          }
          return element;
        }
        function hasSelectionCapabilities(elem) {
          var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
          return nodeName && (nodeName === 'input' && (elem.type === 'text' || elem.type === 'search' || elem.type === 'tel' || elem.type === 'url' || elem.type === 'password') || nodeName === 'textarea' || elem.contentEditable === 'true');
        }
        function getSelectionInformation() {
          var focusedElem = getActiveElementDeep();
          return {
            focusedElem: focusedElem,
            selectionRange: hasSelectionCapabilities(focusedElem) ? getSelection$1(focusedElem) : null
          };
        }
        function restoreSelection(priorSelectionInformation) {
          var curFocusedElem = getActiveElementDeep();
          var priorFocusedElem = priorSelectionInformation.focusedElem;
          var priorSelectionRange = priorSelectionInformation.selectionRange;
          if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
            if (priorSelectionRange !== null && hasSelectionCapabilities(priorFocusedElem)) {
              setSelection(priorFocusedElem, priorSelectionRange);
            }
            var ancestors = [];
            var ancestor = priorFocusedElem;
            while (ancestor = ancestor.parentNode) {
              if (ancestor.nodeType === ELEMENT_NODE) {
                ancestors.push({
                  element: ancestor,
                  left: ancestor.scrollLeft,
                  top: ancestor.scrollTop
                });
              }
            }
            if (typeof priorFocusedElem.focus === 'function') {
              priorFocusedElem.focus();
            }
            for (var i = 0; i < ancestors.length; i++) {
              var info = ancestors[i];
              info.element.scrollLeft = info.left;
              info.element.scrollTop = info.top;
            }
          }
        }
        function getSelection$1(input) {
          var selection = void 0;
          if ('selectionStart' in input) {
            selection = {
              start: input.selectionStart,
              end: input.selectionEnd
            };
          } else {
            selection = getOffsets(input);
          }
          return selection || {
            start: 0,
            end: 0
          };
        }
        function setSelection(input, offsets) {
          var start = offsets.start,
              end = offsets.end;
          if (end === undefined) {
            end = start;
          }
          if ('selectionStart' in input) {
            input.selectionStart = start;
            input.selectionEnd = Math.min(end, input.value.length);
          } else {
            setOffsets(input, offsets);
          }
        }
        var skipSelectionChangeEvent = canUseDOM && 'documentMode' in document && document.documentMode <= 11;
        var eventTypes$3 = { select: {
            phasedRegistrationNames: {
              bubbled: 'onSelect',
              captured: 'onSelectCapture'
            },
            dependencies: [TOP_BLUR, TOP_CONTEXT_MENU, TOP_DRAG_END, TOP_FOCUS, TOP_KEY_DOWN, TOP_KEY_UP, TOP_MOUSE_DOWN, TOP_MOUSE_UP, TOP_SELECTION_CHANGE]
          } };
        var activeElement$1 = null;
        var activeElementInst$1 = null;
        var lastSelection = null;
        var mouseDown = false;
        function getSelection(node) {
          if ('selectionStart' in node && hasSelectionCapabilities(node)) {
            return {
              start: node.selectionStart,
              end: node.selectionEnd
            };
          } else {
            var win = node.ownerDocument && node.ownerDocument.defaultView || window;
            var selection = win.getSelection();
            return {
              anchorNode: selection.anchorNode,
              anchorOffset: selection.anchorOffset,
              focusNode: selection.focusNode,
              focusOffset: selection.focusOffset
            };
          }
        }
        function getEventTargetDocument(eventTarget) {
          return eventTarget.window === eventTarget ? eventTarget.document : eventTarget.nodeType === DOCUMENT_NODE ? eventTarget : eventTarget.ownerDocument;
        }
        function constructSelectEvent(nativeEvent, nativeEventTarget) {
          var doc = getEventTargetDocument(nativeEventTarget);
          if (mouseDown || activeElement$1 == null || activeElement$1 !== getActiveElement(doc)) {
            return null;
          }
          var currentSelection = getSelection(activeElement$1);
          if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
            lastSelection = currentSelection;
            var syntheticEvent = SyntheticEvent.getPooled(eventTypes$3.select, activeElementInst$1, nativeEvent, nativeEventTarget);
            syntheticEvent.type = 'select';
            syntheticEvent.target = activeElement$1;
            accumulateTwoPhaseDispatches(syntheticEvent);
            return syntheticEvent;
          }
          return null;
        }
        var SelectEventPlugin = {
          eventTypes: eventTypes$3,
          extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
            var doc = getEventTargetDocument(nativeEventTarget);
            if (!doc || !isListeningToAllDependencies('onSelect', doc)) {
              return null;
            }
            var targetNode = targetInst ? getNodeFromInstance$1(targetInst) : window;
            switch (topLevelType) {
              case TOP_FOCUS:
                if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {
                  activeElement$1 = targetNode;
                  activeElementInst$1 = targetInst;
                  lastSelection = null;
                }
                break;
              case TOP_BLUR:
                activeElement$1 = null;
                activeElementInst$1 = null;
                lastSelection = null;
                break;
              case TOP_MOUSE_DOWN:
                mouseDown = true;
                break;
              case TOP_CONTEXT_MENU:
              case TOP_MOUSE_UP:
              case TOP_DRAG_END:
                mouseDown = false;
                return constructSelectEvent(nativeEvent, nativeEventTarget);
              case TOP_SELECTION_CHANGE:
                if (skipSelectionChangeEvent) {
                  break;
                }
              case TOP_KEY_DOWN:
              case TOP_KEY_UP:
                return constructSelectEvent(nativeEvent, nativeEventTarget);
            }
            return null;
          }
        };
        injection.injectEventPluginOrder(DOMEventPluginOrder);
        setComponentTree(getFiberCurrentPropsFromNode$1, getInstanceFromNode$1, getNodeFromInstance$1);
        injection.injectEventPluginsByName({
          SimpleEventPlugin: SimpleEventPlugin,
          EnterLeaveEventPlugin: EnterLeaveEventPlugin,
          ChangeEventPlugin: ChangeEventPlugin,
          SelectEventPlugin: SelectEventPlugin,
          BeforeInputEventPlugin: BeforeInputEventPlugin
        });
        var didWarnSelectedSetOnOption = false;
        var didWarnInvalidChild = false;
        function flattenChildren(children) {
          var content = '';
          React.Children.forEach(children, function (child) {
            if (child == null) {
              return;
            }
            content += child;
          });
          return content;
        }
        function validateProps(element, props) {
          {
            if (typeof props.children === 'object' && props.children !== null) {
              React.Children.forEach(props.children, function (child) {
                if (child == null) {
                  return;
                }
                if (typeof child === 'string' || typeof child === 'number') {
                  return;
                }
                if (typeof child.type !== 'string') {
                  return;
                }
                if (!didWarnInvalidChild) {
                  didWarnInvalidChild = true;
                  warning$1(false, 'Only strings and numbers are supported as <option> children.');
                }
              });
            }
            if (props.selected != null && !didWarnSelectedSetOnOption) {
              warning$1(false, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.');
              didWarnSelectedSetOnOption = true;
            }
          }
        }
        function postMountWrapper$1(element, props) {
          if (props.value != null) {
            element.setAttribute('value', toString(getToStringValue(props.value)));
          }
        }
        function getHostProps$1(element, props) {
          var hostProps = _assign({ children: undefined }, props);
          var content = flattenChildren(props.children);
          if (content) {
            hostProps.children = content;
          }
          return hostProps;
        }
        var didWarnValueDefaultValue$1 = void 0;
        {
          didWarnValueDefaultValue$1 = false;
        }
        function getDeclarationErrorAddendum() {
          var ownerName = getCurrentFiberOwnerNameInDevOrNull();
          if (ownerName) {
            return '\n\nCheck the render method of `' + ownerName + '`.';
          }
          return '';
        }
        var valuePropNames = ['value', 'defaultValue'];
        function checkSelectPropTypes(props) {
          ReactControlledValuePropTypes.checkPropTypes('select', props);
          for (var i = 0; i < valuePropNames.length; i++) {
            var propName = valuePropNames[i];
            if (props[propName] == null) {
              continue;
            }
            var isArray = Array.isArray(props[propName]);
            if (props.multiple && !isArray) {
              warning$1(false, 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum());
            } else if (!props.multiple && isArray) {
              warning$1(false, 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum());
            }
          }
        }
        function updateOptions(node, multiple, propValue, setDefaultSelected) {
          var options = node.options;
          if (multiple) {
            var selectedValues = propValue;
            var selectedValue = {};
            for (var i = 0; i < selectedValues.length; i++) {
              selectedValue['$' + selectedValues[i]] = true;
            }
            for (var _i = 0; _i < options.length; _i++) {
              var selected = selectedValue.hasOwnProperty('$' + options[_i].value);
              if (options[_i].selected !== selected) {
                options[_i].selected = selected;
              }
              if (selected && setDefaultSelected) {
                options[_i].defaultSelected = true;
              }
            }
          } else {
            var _selectedValue = toString(getToStringValue(propValue));
            var defaultSelected = null;
            for (var _i2 = 0; _i2 < options.length; _i2++) {
              if (options[_i2].value === _selectedValue) {
                options[_i2].selected = true;
                if (setDefaultSelected) {
                  options[_i2].defaultSelected = true;
                }
                return;
              }
              if (defaultSelected === null && !options[_i2].disabled) {
                defaultSelected = options[_i2];
              }
            }
            if (defaultSelected !== null) {
              defaultSelected.selected = true;
            }
          }
        }
        function getHostProps$2(element, props) {
          return _assign({}, props, { value: undefined });
        }
        function initWrapperState$1(element, props) {
          var node = element;
          {
            checkSelectPropTypes(props);
          }
          node._wrapperState = { wasMultiple: !!props.multiple };
          {
            if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue$1) {
              warning$1(false, 'Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components');
              didWarnValueDefaultValue$1 = true;
            }
          }
        }
        function postMountWrapper$2(element, props) {
          var node = element;
          node.multiple = !!props.multiple;
          var value = props.value;
          if (value != null) {
            updateOptions(node, !!props.multiple, value, false);
          } else if (props.defaultValue != null) {
            updateOptions(node, !!props.multiple, props.defaultValue, true);
          }
        }
        function postUpdateWrapper(element, props) {
          var node = element;
          var wasMultiple = node._wrapperState.wasMultiple;
          node._wrapperState.wasMultiple = !!props.multiple;
          var value = props.value;
          if (value != null) {
            updateOptions(node, !!props.multiple, value, false);
          } else if (wasMultiple !== !!props.multiple) {
            if (props.defaultValue != null) {
              updateOptions(node, !!props.multiple, props.defaultValue, true);
            } else {
              updateOptions(node, !!props.multiple, props.multiple ? [] : '', false);
            }
          }
        }
        function restoreControlledState$2(element, props) {
          var node = element;
          var value = props.value;
          if (value != null) {
            updateOptions(node, !!props.multiple, value, false);
          }
        }
        var didWarnValDefaultVal = false;
        function getHostProps$3(element, props) {
          var node = element;
          !(props.dangerouslySetInnerHTML == null) ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : void 0;
          var hostProps = _assign({}, props, {
            value: undefined,
            defaultValue: undefined,
            children: toString(node._wrapperState.initialValue)
          });
          return hostProps;
        }
        function initWrapperState$2(element, props) {
          var node = element;
          {
            ReactControlledValuePropTypes.checkPropTypes('textarea', props);
            if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {
              warning$1(false, '%s contains a textarea with both value and defaultValue props. ' + 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', getCurrentFiberOwnerNameInDevOrNull() || 'A component');
              didWarnValDefaultVal = true;
            }
          }
          var initialValue = props.value;
          if (initialValue == null) {
            var defaultValue = props.defaultValue;
            var children = props.children;
            if (children != null) {
              {
                warning$1(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.');
              }
              !(defaultValue == null) ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : void 0;
              if (Array.isArray(children)) {
                !(children.length <= 1) ? invariant(false, '<textarea> can only have at most one child.') : void 0;
                children = children[0];
              }
              defaultValue = children;
            }
            if (defaultValue == null) {
              defaultValue = '';
            }
            initialValue = defaultValue;
          }
          node._wrapperState = { initialValue: getToStringValue(initialValue) };
        }
        function updateWrapper$1(element, props) {
          var node = element;
          var value = getToStringValue(props.value);
          var defaultValue = getToStringValue(props.defaultValue);
          if (value != null) {
            var newValue = toString(value);
            if (newValue !== node.value) {
              node.value = newValue;
            }
            if (props.defaultValue == null && node.defaultValue !== newValue) {
              node.defaultValue = newValue;
            }
          }
          if (defaultValue != null) {
            node.defaultValue = toString(defaultValue);
          }
        }
        function postMountWrapper$3(element, props) {
          var node = element;
          var textContent = node.textContent;
          if (textContent === node._wrapperState.initialValue) {
            node.value = textContent;
          }
        }
        function restoreControlledState$3(element, props) {
          updateWrapper$1(element, props);
        }
        var HTML_NAMESPACE$1 = 'http://www.w3.org/1999/xhtml';
        var MATH_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';
        var SVG_NAMESPACE = 'http://www.w3.org/2000/svg';
        var Namespaces = {
          html: HTML_NAMESPACE$1,
          mathml: MATH_NAMESPACE,
          svg: SVG_NAMESPACE
        };
        function getIntrinsicNamespace(type) {
          switch (type) {
            case 'svg':
              return SVG_NAMESPACE;
            case 'math':
              return MATH_NAMESPACE;
            default:
              return HTML_NAMESPACE$1;
          }
        }
        function getChildNamespace(parentNamespace, type) {
          if (parentNamespace == null || parentNamespace === HTML_NAMESPACE$1) {
            return getIntrinsicNamespace(type);
          }
          if (parentNamespace === SVG_NAMESPACE && type === 'foreignObject') {
            return HTML_NAMESPACE$1;
          }
          return parentNamespace;
        }
        var createMicrosoftUnsafeLocalFunction = function (func) {
          if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
            return function (arg0, arg1, arg2, arg3) {
              MSApp.execUnsafeLocalFunction(function () {
                return func(arg0, arg1, arg2, arg3);
              });
            };
          } else {
            return func;
          }
        };
        var reusableSVGContainer = void 0;
        var setInnerHTML = createMicrosoftUnsafeLocalFunction(function (node, html) {
          if (node.namespaceURI === Namespaces.svg && !('innerHTML' in node)) {
            reusableSVGContainer = reusableSVGContainer || document.createElement('div');
            reusableSVGContainer.innerHTML = '<svg>' + html + '</svg>';
            var svgNode = reusableSVGContainer.firstChild;
            while (node.firstChild) {
              node.removeChild(node.firstChild);
            }
            while (svgNode.firstChild) {
              node.appendChild(svgNode.firstChild);
            }
          } else {
            node.innerHTML = html;
          }
        });
        var setTextContent = function (node, text) {
          if (text) {
            var firstChild = node.firstChild;
            if (firstChild && firstChild === node.lastChild && firstChild.nodeType === TEXT_NODE) {
              firstChild.nodeValue = text;
              return;
            }
          }
          node.textContent = text;
        };
        var shorthandToLonghand = {
          animation: ['animationDelay', 'animationDirection', 'animationDuration', 'animationFillMode', 'animationIterationCount', 'animationName', 'animationPlayState', 'animationTimingFunction'],
          background: ['backgroundAttachment', 'backgroundClip', 'backgroundColor', 'backgroundImage', 'backgroundOrigin', 'backgroundPositionX', 'backgroundPositionY', 'backgroundRepeat', 'backgroundSize'],
          backgroundPosition: ['backgroundPositionX', 'backgroundPositionY'],
          border: ['borderBottomColor', 'borderBottomStyle', 'borderBottomWidth', 'borderImageOutset', 'borderImageRepeat', 'borderImageSlice', 'borderImageSource', 'borderImageWidth', 'borderLeftColor', 'borderLeftStyle', 'borderLeftWidth', 'borderRightColor', 'borderRightStyle', 'borderRightWidth', 'borderTopColor', 'borderTopStyle', 'borderTopWidth'],
          borderBlockEnd: ['borderBlockEndColor', 'borderBlockEndStyle', 'borderBlockEndWidth'],
          borderBlockStart: ['borderBlockStartColor', 'borderBlockStartStyle', 'borderBlockStartWidth'],
          borderBottom: ['borderBottomColor', 'borderBottomStyle', 'borderBottomWidth'],
          borderColor: ['borderBottomColor', 'borderLeftColor', 'borderRightColor', 'borderTopColor'],
          borderImage: ['borderImageOutset', 'borderImageRepeat', 'borderImageSlice', 'borderImageSource', 'borderImageWidth'],
          borderInlineEnd: ['borderInlineEndColor', 'borderInlineEndStyle', 'borderInlineEndWidth'],
          borderInlineStart: ['borderInlineStartColor', 'borderInlineStartStyle', 'borderInlineStartWidth'],
          borderLeft: ['borderLeftColor', 'borderLeftStyle', 'borderLeftWidth'],
          borderRadius: ['borderBottomLeftRadius', 'borderBottomRightRadius', 'borderTopLeftRadius', 'borderTopRightRadius'],
          borderRight: ['borderRightColor', 'borderRightStyle', 'borderRightWidth'],
          borderStyle: ['borderBottomStyle', 'borderLeftStyle', 'borderRightStyle', 'borderTopStyle'],
          borderTop: ['borderTopColor', 'borderTopStyle', 'borderTopWidth'],
          borderWidth: ['borderBottomWidth', 'borderLeftWidth', 'borderRightWidth', 'borderTopWidth'],
          columnRule: ['columnRuleColor', 'columnRuleStyle', 'columnRuleWidth'],
          columns: ['columnCount', 'columnWidth'],
          flex: ['flexBasis', 'flexGrow', 'flexShrink'],
          flexFlow: ['flexDirection', 'flexWrap'],
          font: ['fontFamily', 'fontFeatureSettings', 'fontKerning', 'fontLanguageOverride', 'fontSize', 'fontSizeAdjust', 'fontStretch', 'fontStyle', 'fontVariant', 'fontVariantAlternates', 'fontVariantCaps', 'fontVariantEastAsian', 'fontVariantLigatures', 'fontVariantNumeric', 'fontVariantPosition', 'fontWeight', 'lineHeight'],
          fontVariant: ['fontVariantAlternates', 'fontVariantCaps', 'fontVariantEastAsian', 'fontVariantLigatures', 'fontVariantNumeric', 'fontVariantPosition'],
          gap: ['columnGap', 'rowGap'],
          grid: ['gridAutoColumns', 'gridAutoFlow', 'gridAutoRows', 'gridTemplateAreas', 'gridTemplateColumns', 'gridTemplateRows'],
          gridArea: ['gridColumnEnd', 'gridColumnStart', 'gridRowEnd', 'gridRowStart'],
          gridColumn: ['gridColumnEnd', 'gridColumnStart'],
          gridColumnGap: ['columnGap'],
          gridGap: ['columnGap', 'rowGap'],
          gridRow: ['gridRowEnd', 'gridRowStart'],
          gridRowGap: ['rowGap'],
          gridTemplate: ['gridTemplateAreas', 'gridTemplateColumns', 'gridTemplateRows'],
          listStyle: ['listStyleImage', 'listStylePosition', 'listStyleType'],
          margin: ['marginBottom', 'marginLeft', 'marginRight', 'marginTop'],
          marker: ['markerEnd', 'markerMid', 'markerStart'],
          mask: ['maskClip', 'maskComposite', 'maskImage', 'maskMode', 'maskOrigin', 'maskPositionX', 'maskPositionY', 'maskRepeat', 'maskSize'],
          maskPosition: ['maskPositionX', 'maskPositionY'],
          outline: ['outlineColor', 'outlineStyle', 'outlineWidth'],
          overflow: ['overflowX', 'overflowY'],
          padding: ['paddingBottom', 'paddingLeft', 'paddingRight', 'paddingTop'],
          placeContent: ['alignContent', 'justifyContent'],
          placeItems: ['alignItems', 'justifyItems'],
          placeSelf: ['alignSelf', 'justifySelf'],
          textDecoration: ['textDecorationColor', 'textDecorationLine', 'textDecorationStyle'],
          textEmphasis: ['textEmphasisColor', 'textEmphasisStyle'],
          transition: ['transitionDelay', 'transitionDuration', 'transitionProperty', 'transitionTimingFunction'],
          wordWrap: ['overflowWrap']
        };
        var isUnitlessNumber = {
          animationIterationCount: true,
          borderImageOutset: true,
          borderImageSlice: true,
          borderImageWidth: true,
          boxFlex: true,
          boxFlexGroup: true,
          boxOrdinalGroup: true,
          columnCount: true,
          columns: true,
          flex: true,
          flexGrow: true,
          flexPositive: true,
          flexShrink: true,
          flexNegative: true,
          flexOrder: true,
          gridArea: true,
          gridRow: true,
          gridRowEnd: true,
          gridRowSpan: true,
          gridRowStart: true,
          gridColumn: true,
          gridColumnEnd: true,
          gridColumnSpan: true,
          gridColumnStart: true,
          fontWeight: true,
          lineClamp: true,
          lineHeight: true,
          opacity: true,
          order: true,
          orphans: true,
          tabSize: true,
          widows: true,
          zIndex: true,
          zoom: true,
          fillOpacity: true,
          floodOpacity: true,
          stopOpacity: true,
          strokeDasharray: true,
          strokeDashoffset: true,
          strokeMiterlimit: true,
          strokeOpacity: true,
          strokeWidth: true
        };
        function prefixKey(prefix, key) {
          return prefix + key.charAt(0).toUpperCase() + key.substring(1);
        }
        var prefixes = ['Webkit', 'ms', 'Moz', 'O'];
        Object.keys(isUnitlessNumber).forEach(function (prop) {
          prefixes.forEach(function (prefix) {
            isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
          });
        });
        function dangerousStyleValue(name, value, isCustomProperty) {
          var isEmpty = value == null || typeof value === 'boolean' || value === '';
          if (isEmpty) {
            return '';
          }
          if (!isCustomProperty && typeof value === 'number' && value !== 0 && !(isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name])) {
            return value + 'px';
          }
          return ('' + value).trim();
        }
        var uppercasePattern = /([A-Z])/g;
        var msPattern = /^ms-/;
        function hyphenateStyleName(name) {
          return name.replace(uppercasePattern, '-$1').toLowerCase().replace(msPattern, '-ms-');
        }
        var warnValidStyle = function () {};
        {
          var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;
          var msPattern$1 = /^-ms-/;
          var hyphenPattern = /-(.)/g;
          var badStyleValueWithSemicolonPattern = /;\s*$/;
          var warnedStyleNames = {};
          var warnedStyleValues = {};
          var warnedForNaNValue = false;
          var warnedForInfinityValue = false;
          var camelize = function (string) {
            return string.replace(hyphenPattern, function (_, character) {
              return character.toUpperCase();
            });
          };
          var warnHyphenatedStyleName = function (name) {
            if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
              return;
            }
            warnedStyleNames[name] = true;
            warning$1(false, 'Unsupported style property %s. Did you mean %s?', name, camelize(name.replace(msPattern$1, 'ms-')));
          };
          var warnBadVendoredStyleName = function (name) {
            if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
              return;
            }
            warnedStyleNames[name] = true;
            warning$1(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?', name, name.charAt(0).toUpperCase() + name.slice(1));
          };
          var warnStyleValueWithSemicolon = function (name, value) {
            if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
              return;
            }
            warnedStyleValues[value] = true;
            warning$1(false, "Style property values shouldn't contain a semicolon. " + 'Try "%s: %s" instead.', name, value.replace(badStyleValueWithSemicolonPattern, ''));
          };
          var warnStyleValueIsNaN = function (name, value) {
            if (warnedForNaNValue) {
              return;
            }
            warnedForNaNValue = true;
            warning$1(false, '`NaN` is an invalid value for the `%s` css style property.', name);
          };
          var warnStyleValueIsInfinity = function (name, value) {
            if (warnedForInfinityValue) {
              return;
            }
            warnedForInfinityValue = true;
            warning$1(false, '`Infinity` is an invalid value for the `%s` css style property.', name);
          };
          warnValidStyle = function (name, value) {
            if (name.indexOf('-') > -1) {
              warnHyphenatedStyleName(name);
            } else if (badVendoredStyleNamePattern.test(name)) {
              warnBadVendoredStyleName(name);
            } else if (badStyleValueWithSemicolonPattern.test(value)) {
              warnStyleValueWithSemicolon(name, value);
            }
            if (typeof value === 'number') {
              if (isNaN(value)) {
                warnStyleValueIsNaN(name, value);
              } else if (!isFinite(value)) {
                warnStyleValueIsInfinity(name, value);
              }
            }
          };
        }
        var warnValidStyle$1 = warnValidStyle;
        function createDangerousStringForStyles(styles) {
          {
            var serialized = '';
            var delimiter = '';
            for (var styleName in styles) {
              if (!styles.hasOwnProperty(styleName)) {
                continue;
              }
              var styleValue = styles[styleName];
              if (styleValue != null) {
                var isCustomProperty = styleName.indexOf('--') === 0;
                serialized += delimiter + hyphenateStyleName(styleName) + ':';
                serialized += dangerousStyleValue(styleName, styleValue, isCustomProperty);
                delimiter = ';';
              }
            }
            return serialized || null;
          }
        }
        function setValueForStyles(node, styles) {
          var style = node.style;
          for (var styleName in styles) {
            if (!styles.hasOwnProperty(styleName)) {
              continue;
            }
            var isCustomProperty = styleName.indexOf('--') === 0;
            {
              if (!isCustomProperty) {
                warnValidStyle$1(styleName, styles[styleName]);
              }
            }
            var styleValue = dangerousStyleValue(styleName, styles[styleName], isCustomProperty);
            if (styleName === 'float') {
              styleName = 'cssFloat';
            }
            if (isCustomProperty) {
              style.setProperty(styleName, styleValue);
            } else {
              style[styleName] = styleValue;
            }
          }
        }
        function isValueEmpty(value) {
          return value == null || typeof value === 'boolean' || value === '';
        }
        function expandShorthandMap(styles) {
          var expanded = {};
          for (var key in styles) {
            var longhands = shorthandToLonghand[key] || [key];
            for (var i = 0; i < longhands.length; i++) {
              expanded[longhands[i]] = key;
            }
          }
          return expanded;
        }
        function validateShorthandPropertyCollisionInDev(styleUpdates, nextStyles) {
          if (!warnAboutShorthandPropertyCollision) {
            return;
          }
          if (!nextStyles) {
            return;
          }
          var expandedUpdates = expandShorthandMap(styleUpdates);
          var expandedStyles = expandShorthandMap(nextStyles);
          var warnedAbout = {};
          for (var key in expandedUpdates) {
            var originalKey = expandedUpdates[key];
            var correctOriginalKey = expandedStyles[key];
            if (correctOriginalKey && originalKey !== correctOriginalKey) {
              var warningKey = originalKey + ',' + correctOriginalKey;
              if (warnedAbout[warningKey]) {
                continue;
              }
              warnedAbout[warningKey] = true;
              warning$1(false, '%s a style property during rerender (%s) when a ' + 'conflicting property is set (%s) can lead to styling bugs. To ' + "avoid this, don't mix shorthand and non-shorthand properties " + 'for the same value; instead, replace the shorthand with ' + 'separate values.', isValueEmpty(styleUpdates[originalKey]) ? 'Removing' : 'Updating', originalKey, correctOriginalKey);
            }
          }
        }
        var omittedCloseTags = {
          area: true,
          base: true,
          br: true,
          col: true,
          embed: true,
          hr: true,
          img: true,
          input: true,
          keygen: true,
          link: true,
          meta: true,
          param: true,
          source: true,
          track: true,
          wbr: true
        };
        var voidElementTags = _assign({ menuitem: true }, omittedCloseTags);
        var HTML$1 = '__html';
        var ReactDebugCurrentFrame$2 = null;
        {
          ReactDebugCurrentFrame$2 = ReactSharedInternals.ReactDebugCurrentFrame;
        }
        function assertValidProps(tag, props) {
          if (!props) {
            return;
          }
          if (voidElementTags[tag]) {
            !(props.children == null && props.dangerouslySetInnerHTML == null) ? invariant(false, '%s is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.%s', tag, ReactDebugCurrentFrame$2.getStackAddendum()) : void 0;
          }
          if (props.dangerouslySetInnerHTML != null) {
            !(props.children == null) ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : void 0;
            !(typeof props.dangerouslySetInnerHTML === 'object' && HTML$1 in props.dangerouslySetInnerHTML) ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.') : void 0;
          }
          {
            !(props.suppressContentEditableWarning || !props.contentEditable || props.children == null) ? warning$1(false, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : void 0;
          }
          !(props.style == null || typeof props.style === 'object') ? invariant(false, 'The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + \'em\'}} when using JSX.%s', ReactDebugCurrentFrame$2.getStackAddendum()) : void 0;
        }
        function isCustomComponent(tagName, props) {
          if (tagName.indexOf('-') === -1) {
            return typeof props.is === 'string';
          }
          switch (tagName) {
            case 'annotation-xml':
            case 'color-profile':
            case 'font-face':
            case 'font-face-src':
            case 'font-face-uri':
            case 'font-face-format':
            case 'font-face-name':
            case 'missing-glyph':
              return false;
            default:
              return true;
          }
        }
        var possibleStandardNames = {
          accept: 'accept',
          acceptcharset: 'acceptCharset',
          'accept-charset': 'acceptCharset',
          accesskey: 'accessKey',
          action: 'action',
          allowfullscreen: 'allowFullScreen',
          alt: 'alt',
          as: 'as',
          async: 'async',
          autocapitalize: 'autoCapitalize',
          autocomplete: 'autoComplete',
          autocorrect: 'autoCorrect',
          autofocus: 'autoFocus',
          autoplay: 'autoPlay',
          autosave: 'autoSave',
          capture: 'capture',
          cellpadding: 'cellPadding',
          cellspacing: 'cellSpacing',
          challenge: 'challenge',
          charset: 'charSet',
          checked: 'checked',
          children: 'children',
          cite: 'cite',
          class: 'className',
          classid: 'classID',
          classname: 'className',
          cols: 'cols',
          colspan: 'colSpan',
          content: 'content',
          contenteditable: 'contentEditable',
          contextmenu: 'contextMenu',
          controls: 'controls',
          controlslist: 'controlsList',
          coords: 'coords',
          crossorigin: 'crossOrigin',
          dangerouslysetinnerhtml: 'dangerouslySetInnerHTML',
          data: 'data',
          datetime: 'dateTime',
          default: 'default',
          defaultchecked: 'defaultChecked',
          defaultvalue: 'defaultValue',
          defer: 'defer',
          dir: 'dir',
          disabled: 'disabled',
          download: 'download',
          draggable: 'draggable',
          enctype: 'encType',
          for: 'htmlFor',
          form: 'form',
          formmethod: 'formMethod',
          formaction: 'formAction',
          formenctype: 'formEncType',
          formnovalidate: 'formNoValidate',
          formtarget: 'formTarget',
          frameborder: 'frameBorder',
          headers: 'headers',
          height: 'height',
          hidden: 'hidden',
          high: 'high',
          href: 'href',
          hreflang: 'hrefLang',
          htmlfor: 'htmlFor',
          httpequiv: 'httpEquiv',
          'http-equiv': 'httpEquiv',
          icon: 'icon',
          id: 'id',
          innerhtml: 'innerHTML',
          inputmode: 'inputMode',
          integrity: 'integrity',
          is: 'is',
          itemid: 'itemID',
          itemprop: 'itemProp',
          itemref: 'itemRef',
          itemscope: 'itemScope',
          itemtype: 'itemType',
          keyparams: 'keyParams',
          keytype: 'keyType',
          kind: 'kind',
          label: 'label',
          lang: 'lang',
          list: 'list',
          loop: 'loop',
          low: 'low',
          manifest: 'manifest',
          marginwidth: 'marginWidth',
          marginheight: 'marginHeight',
          max: 'max',
          maxlength: 'maxLength',
          media: 'media',
          mediagroup: 'mediaGroup',
          method: 'method',
          min: 'min',
          minlength: 'minLength',
          multiple: 'multiple',
          muted: 'muted',
          name: 'name',
          nomodule: 'noModule',
          nonce: 'nonce',
          novalidate: 'noValidate',
          open: 'open',
          optimum: 'optimum',
          pattern: 'pattern',
          placeholder: 'placeholder',
          playsinline: 'playsInline',
          poster: 'poster',
          preload: 'preload',
          profile: 'profile',
          radiogroup: 'radioGroup',
          readonly: 'readOnly',
          referrerpolicy: 'referrerPolicy',
          rel: 'rel',
          required: 'required',
          reversed: 'reversed',
          role: 'role',
          rows: 'rows',
          rowspan: 'rowSpan',
          sandbox: 'sandbox',
          scope: 'scope',
          scoped: 'scoped',
          scrolling: 'scrolling',
          seamless: 'seamless',
          selected: 'selected',
          shape: 'shape',
          size: 'size',
          sizes: 'sizes',
          span: 'span',
          spellcheck: 'spellCheck',
          src: 'src',
          srcdoc: 'srcDoc',
          srclang: 'srcLang',
          srcset: 'srcSet',
          start: 'start',
          step: 'step',
          style: 'style',
          summary: 'summary',
          tabindex: 'tabIndex',
          target: 'target',
          title: 'title',
          type: 'type',
          usemap: 'useMap',
          value: 'value',
          width: 'width',
          wmode: 'wmode',
          wrap: 'wrap',
          about: 'about',
          accentheight: 'accentHeight',
          'accent-height': 'accentHeight',
          accumulate: 'accumulate',
          additive: 'additive',
          alignmentbaseline: 'alignmentBaseline',
          'alignment-baseline': 'alignmentBaseline',
          allowreorder: 'allowReorder',
          alphabetic: 'alphabetic',
          amplitude: 'amplitude',
          arabicform: 'arabicForm',
          'arabic-form': 'arabicForm',
          ascent: 'ascent',
          attributename: 'attributeName',
          attributetype: 'attributeType',
          autoreverse: 'autoReverse',
          azimuth: 'azimuth',
          basefrequency: 'baseFrequency',
          baselineshift: 'baselineShift',
          'baseline-shift': 'baselineShift',
          baseprofile: 'baseProfile',
          bbox: 'bbox',
          begin: 'begin',
          bias: 'bias',
          by: 'by',
          calcmode: 'calcMode',
          capheight: 'capHeight',
          'cap-height': 'capHeight',
          clip: 'clip',
          clippath: 'clipPath',
          'clip-path': 'clipPath',
          clippathunits: 'clipPathUnits',
          cliprule: 'clipRule',
          'clip-rule': 'clipRule',
          color: 'color',
          colorinterpolation: 'colorInterpolation',
          'color-interpolation': 'colorInterpolation',
          colorinterpolationfilters: 'colorInterpolationFilters',
          'color-interpolation-filters': 'colorInterpolationFilters',
          colorprofile: 'colorProfile',
          'color-profile': 'colorProfile',
          colorrendering: 'colorRendering',
          'color-rendering': 'colorRendering',
          contentscripttype: 'contentScriptType',
          contentstyletype: 'contentStyleType',
          cursor: 'cursor',
          cx: 'cx',
          cy: 'cy',
          d: 'd',
          datatype: 'datatype',
          decelerate: 'decelerate',
          descent: 'descent',
          diffuseconstant: 'diffuseConstant',
          direction: 'direction',
          display: 'display',
          divisor: 'divisor',
          dominantbaseline: 'dominantBaseline',
          'dominant-baseline': 'dominantBaseline',
          dur: 'dur',
          dx: 'dx',
          dy: 'dy',
          edgemode: 'edgeMode',
          elevation: 'elevation',
          enablebackground: 'enableBackground',
          'enable-background': 'enableBackground',
          end: 'end',
          exponent: 'exponent',
          externalresourcesrequired: 'externalResourcesRequired',
          fill: 'fill',
          fillopacity: 'fillOpacity',
          'fill-opacity': 'fillOpacity',
          fillrule: 'fillRule',
          'fill-rule': 'fillRule',
          filter: 'filter',
          filterres: 'filterRes',
          filterunits: 'filterUnits',
          floodopacity: 'floodOpacity',
          'flood-opacity': 'floodOpacity',
          floodcolor: 'floodColor',
          'flood-color': 'floodColor',
          focusable: 'focusable',
          fontfamily: 'fontFamily',
          'font-family': 'fontFamily',
          fontsize: 'fontSize',
          'font-size': 'fontSize',
          fontsizeadjust: 'fontSizeAdjust',
          'font-size-adjust': 'fontSizeAdjust',
          fontstretch: 'fontStretch',
          'font-stretch': 'fontStretch',
          fontstyle: 'fontStyle',
          'font-style': 'fontStyle',
          fontvariant: 'fontVariant',
          'font-variant': 'fontVariant',
          fontweight: 'fontWeight',
          'font-weight': 'fontWeight',
          format: 'format',
          from: 'from',
          fx: 'fx',
          fy: 'fy',
          g1: 'g1',
          g2: 'g2',
          glyphname: 'glyphName',
          'glyph-name': 'glyphName',
          glyphorientationhorizontal: 'glyphOrientationHorizontal',
          'glyph-orientation-horizontal': 'glyphOrientationHorizontal',
          glyphorientationvertical: 'glyphOrientationVertical',
          'glyph-orientation-vertical': 'glyphOrientationVertical',
          glyphref: 'glyphRef',
          gradienttransform: 'gradientTransform',
          gradientunits: 'gradientUnits',
          hanging: 'hanging',
          horizadvx: 'horizAdvX',
          'horiz-adv-x': 'horizAdvX',
          horizoriginx: 'horizOriginX',
          'horiz-origin-x': 'horizOriginX',
          ideographic: 'ideographic',
          imagerendering: 'imageRendering',
          'image-rendering': 'imageRendering',
          in2: 'in2',
          in: 'in',
          inlist: 'inlist',
          intercept: 'intercept',
          k1: 'k1',
          k2: 'k2',
          k3: 'k3',
          k4: 'k4',
          k: 'k',
          kernelmatrix: 'kernelMatrix',
          kernelunitlength: 'kernelUnitLength',
          kerning: 'kerning',
          keypoints: 'keyPoints',
          keysplines: 'keySplines',
          keytimes: 'keyTimes',
          lengthadjust: 'lengthAdjust',
          letterspacing: 'letterSpacing',
          'letter-spacing': 'letterSpacing',
          lightingcolor: 'lightingColor',
          'lighting-color': 'lightingColor',
          limitingconeangle: 'limitingConeAngle',
          local: 'local',
          markerend: 'markerEnd',
          'marker-end': 'markerEnd',
          markerheight: 'markerHeight',
          markermid: 'markerMid',
          'marker-mid': 'markerMid',
          markerstart: 'markerStart',
          'marker-start': 'markerStart',
          markerunits: 'markerUnits',
          markerwidth: 'markerWidth',
          mask: 'mask',
          maskcontentunits: 'maskContentUnits',
          maskunits: 'maskUnits',
          mathematical: 'mathematical',
          mode: 'mode',
          numoctaves: 'numOctaves',
          offset: 'offset',
          opacity: 'opacity',
          operator: 'operator',
          order: 'order',
          orient: 'orient',
          orientation: 'orientation',
          origin: 'origin',
          overflow: 'overflow',
          overlineposition: 'overlinePosition',
          'overline-position': 'overlinePosition',
          overlinethickness: 'overlineThickness',
          'overline-thickness': 'overlineThickness',
          paintorder: 'paintOrder',
          'paint-order': 'paintOrder',
          panose1: 'panose1',
          'panose-1': 'panose1',
          pathlength: 'pathLength',
          patterncontentunits: 'patternContentUnits',
          patterntransform: 'patternTransform',
          patternunits: 'patternUnits',
          pointerevents: 'pointerEvents',
          'pointer-events': 'pointerEvents',
          points: 'points',
          pointsatx: 'pointsAtX',
          pointsaty: 'pointsAtY',
          pointsatz: 'pointsAtZ',
          prefix: 'prefix',
          preservealpha: 'preserveAlpha',
          preserveaspectratio: 'preserveAspectRatio',
          primitiveunits: 'primitiveUnits',
          property: 'property',
          r: 'r',
          radius: 'radius',
          refx: 'refX',
          refy: 'refY',
          renderingintent: 'renderingIntent',
          'rendering-intent': 'renderingIntent',
          repeatcount: 'repeatCount',
          repeatdur: 'repeatDur',
          requiredextensions: 'requiredExtensions',
          requiredfeatures: 'requiredFeatures',
          resource: 'resource',
          restart: 'restart',
          result: 'result',
          results: 'results',
          rotate: 'rotate',
          rx: 'rx',
          ry: 'ry',
          scale: 'scale',
          security: 'security',
          seed: 'seed',
          shaperendering: 'shapeRendering',
          'shape-rendering': 'shapeRendering',
          slope: 'slope',
          spacing: 'spacing',
          specularconstant: 'specularConstant',
          specularexponent: 'specularExponent',
          speed: 'speed',
          spreadmethod: 'spreadMethod',
          startoffset: 'startOffset',
          stddeviation: 'stdDeviation',
          stemh: 'stemh',
          stemv: 'stemv',
          stitchtiles: 'stitchTiles',
          stopcolor: 'stopColor',
          'stop-color': 'stopColor',
          stopopacity: 'stopOpacity',
          'stop-opacity': 'stopOpacity',
          strikethroughposition: 'strikethroughPosition',
          'strikethrough-position': 'strikethroughPosition',
          strikethroughthickness: 'strikethroughThickness',
          'strikethrough-thickness': 'strikethroughThickness',
          string: 'string',
          stroke: 'stroke',
          strokedasharray: 'strokeDasharray',
          'stroke-dasharray': 'strokeDasharray',
          strokedashoffset: 'strokeDashoffset',
          'stroke-dashoffset': 'strokeDashoffset',
          strokelinecap: 'strokeLinecap',
          'stroke-linecap': 'strokeLinecap',
          strokelinejoin: 'strokeLinejoin',
          'stroke-linejoin': 'strokeLinejoin',
          strokemiterlimit: 'strokeMiterlimit',
          'stroke-miterlimit': 'strokeMiterlimit',
          strokewidth: 'strokeWidth',
          'stroke-width': 'strokeWidth',
          strokeopacity: 'strokeOpacity',
          'stroke-opacity': 'strokeOpacity',
          suppresscontenteditablewarning: 'suppressContentEditableWarning',
          suppresshydrationwarning: 'suppressHydrationWarning',
          surfacescale: 'surfaceScale',
          systemlanguage: 'systemLanguage',
          tablevalues: 'tableValues',
          targetx: 'targetX',
          targety: 'targetY',
          textanchor: 'textAnchor',
          'text-anchor': 'textAnchor',
          textdecoration: 'textDecoration',
          'text-decoration': 'textDecoration',
          textlength: 'textLength',
          textrendering: 'textRendering',
          'text-rendering': 'textRendering',
          to: 'to',
          transform: 'transform',
          typeof: 'typeof',
          u1: 'u1',
          u2: 'u2',
          underlineposition: 'underlinePosition',
          'underline-position': 'underlinePosition',
          underlinethickness: 'underlineThickness',
          'underline-thickness': 'underlineThickness',
          unicode: 'unicode',
          unicodebidi: 'unicodeBidi',
          'unicode-bidi': 'unicodeBidi',
          unicoderange: 'unicodeRange',
          'unicode-range': 'unicodeRange',
          unitsperem: 'unitsPerEm',
          'units-per-em': 'unitsPerEm',
          unselectable: 'unselectable',
          valphabetic: 'vAlphabetic',
          'v-alphabetic': 'vAlphabetic',
          values: 'values',
          vectoreffect: 'vectorEffect',
          'vector-effect': 'vectorEffect',
          version: 'version',
          vertadvy: 'vertAdvY',
          'vert-adv-y': 'vertAdvY',
          vertoriginx: 'vertOriginX',
          'vert-origin-x': 'vertOriginX',
          vertoriginy: 'vertOriginY',
          'vert-origin-y': 'vertOriginY',
          vhanging: 'vHanging',
          'v-hanging': 'vHanging',
          videographic: 'vIdeographic',
          'v-ideographic': 'vIdeographic',
          viewbox: 'viewBox',
          viewtarget: 'viewTarget',
          visibility: 'visibility',
          vmathematical: 'vMathematical',
          'v-mathematical': 'vMathematical',
          vocab: 'vocab',
          widths: 'widths',
          wordspacing: 'wordSpacing',
          'word-spacing': 'wordSpacing',
          writingmode: 'writingMode',
          'writing-mode': 'writingMode',
          x1: 'x1',
          x2: 'x2',
          x: 'x',
          xchannelselector: 'xChannelSelector',
          xheight: 'xHeight',
          'x-height': 'xHeight',
          xlinkactuate: 'xlinkActuate',
          'xlink:actuate': 'xlinkActuate',
          xlinkarcrole: 'xlinkArcrole',
          'xlink:arcrole': 'xlinkArcrole',
          xlinkhref: 'xlinkHref',
          'xlink:href': 'xlinkHref',
          xlinkrole: 'xlinkRole',
          'xlink:role': 'xlinkRole',
          xlinkshow: 'xlinkShow',
          'xlink:show': 'xlinkShow',
          xlinktitle: 'xlinkTitle',
          'xlink:title': 'xlinkTitle',
          xlinktype: 'xlinkType',
          'xlink:type': 'xlinkType',
          xmlbase: 'xmlBase',
          'xml:base': 'xmlBase',
          xmllang: 'xmlLang',
          'xml:lang': 'xmlLang',
          xmlns: 'xmlns',
          'xml:space': 'xmlSpace',
          xmlnsxlink: 'xmlnsXlink',
          'xmlns:xlink': 'xmlnsXlink',
          xmlspace: 'xmlSpace',
          y1: 'y1',
          y2: 'y2',
          y: 'y',
          ychannelselector: 'yChannelSelector',
          z: 'z',
          zoomandpan: 'zoomAndPan'
        };
        var ariaProperties = {
          'aria-current': 0,
          'aria-details': 0,
          'aria-disabled': 0,
          'aria-hidden': 0,
          'aria-invalid': 0,
          'aria-keyshortcuts': 0,
          'aria-label': 0,
          'aria-roledescription': 0,
          'aria-autocomplete': 0,
          'aria-checked': 0,
          'aria-expanded': 0,
          'aria-haspopup': 0,
          'aria-level': 0,
          'aria-modal': 0,
          'aria-multiline': 0,
          'aria-multiselectable': 0,
          'aria-orientation': 0,
          'aria-placeholder': 0,
          'aria-pressed': 0,
          'aria-readonly': 0,
          'aria-required': 0,
          'aria-selected': 0,
          'aria-sort': 0,
          'aria-valuemax': 0,
          'aria-valuemin': 0,
          'aria-valuenow': 0,
          'aria-valuetext': 0,
          'aria-atomic': 0,
          'aria-busy': 0,
          'aria-live': 0,
          'aria-relevant': 0,
          'aria-dropeffect': 0,
          'aria-grabbed': 0,
          'aria-activedescendant': 0,
          'aria-colcount': 0,
          'aria-colindex': 0,
          'aria-colspan': 0,
          'aria-controls': 0,
          'aria-describedby': 0,
          'aria-errormessage': 0,
          'aria-flowto': 0,
          'aria-labelledby': 0,
          'aria-owns': 0,
          'aria-posinset': 0,
          'aria-rowcount': 0,
          'aria-rowindex': 0,
          'aria-rowspan': 0,
          'aria-setsize': 0
        };
        var warnedProperties = {};
        var rARIA = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');
        var rARIACamel = new RegExp('^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$');
        var hasOwnProperty$2 = Object.prototype.hasOwnProperty;
        function validateProperty(tagName, name) {
          if (hasOwnProperty$2.call(warnedProperties, name) && warnedProperties[name]) {
            return true;
          }
          if (rARIACamel.test(name)) {
            var ariaName = 'aria-' + name.slice(4).toLowerCase();
            var correctName = ariaProperties.hasOwnProperty(ariaName) ? ariaName : null;
            if (correctName == null) {
              warning$1(false, 'Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.', name);
              warnedProperties[name] = true;
              return true;
            }
            if (name !== correctName) {
              warning$1(false, 'Invalid ARIA attribute `%s`. Did you mean `%s`?', name, correctName);
              warnedProperties[name] = true;
              return true;
            }
          }
          if (rARIA.test(name)) {
            var lowerCasedName = name.toLowerCase();
            var standardName = ariaProperties.hasOwnProperty(lowerCasedName) ? lowerCasedName : null;
            if (standardName == null) {
              warnedProperties[name] = true;
              return false;
            }
            if (name !== standardName) {
              warning$1(false, 'Unknown ARIA attribute `%s`. Did you mean `%s`?', name, standardName);
              warnedProperties[name] = true;
              return true;
            }
          }
          return true;
        }
        function warnInvalidARIAProps(type, props) {
          var invalidProps = [];
          for (var key in props) {
            var isValid = validateProperty(type, key);
            if (!isValid) {
              invalidProps.push(key);
            }
          }
          var unknownPropString = invalidProps.map(function (prop) {
            return '`' + prop + '`';
          }).join(', ');
          if (invalidProps.length === 1) {
            warning$1(false, 'Invalid aria prop %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop', unknownPropString, type);
          } else if (invalidProps.length > 1) {
            warning$1(false, 'Invalid aria props %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop', unknownPropString, type);
          }
        }
        function validateProperties(type, props) {
          if (isCustomComponent(type, props)) {
            return;
          }
          warnInvalidARIAProps(type, props);
        }
        var didWarnValueNull = false;
        function validateProperties$1(type, props) {
          if (type !== 'input' && type !== 'textarea' && type !== 'select') {
            return;
          }
          if (props != null && props.value === null && !didWarnValueNull) {
            didWarnValueNull = true;
            if (type === 'select' && props.multiple) {
              warning$1(false, '`value` prop on `%s` should not be null. ' + 'Consider using an empty array when `multiple` is set to `true` ' + 'to clear the component or `undefined` for uncontrolled components.', type);
            } else {
              warning$1(false, '`value` prop on `%s` should not be null. ' + 'Consider using an empty string to clear the component or `undefined` ' + 'for uncontrolled components.', type);
            }
          }
        }
        var validateProperty$1 = function () {};
        {
          var warnedProperties$1 = {};
          var _hasOwnProperty = Object.prototype.hasOwnProperty;
          var EVENT_NAME_REGEX = /^on./;
          var INVALID_EVENT_NAME_REGEX = /^on[^A-Z]/;
          var rARIA$1 = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');
          var rARIACamel$1 = new RegExp('^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$');
          validateProperty$1 = function (tagName, name, value, canUseEventSystem) {
            if (_hasOwnProperty.call(warnedProperties$1, name) && warnedProperties$1[name]) {
              return true;
            }
            var lowerCasedName = name.toLowerCase();
            if (lowerCasedName === 'onfocusin' || lowerCasedName === 'onfocusout') {
              warning$1(false, 'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.');
              warnedProperties$1[name] = true;
              return true;
            }
            if (canUseEventSystem) {
              if (registrationNameModules.hasOwnProperty(name)) {
                return true;
              }
              var registrationName = possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? possibleRegistrationNames[lowerCasedName] : null;
              if (registrationName != null) {
                warning$1(false, 'Invalid event handler property `%s`. Did you mean `%s`?', name, registrationName);
                warnedProperties$1[name] = true;
                return true;
              }
              if (EVENT_NAME_REGEX.test(name)) {
                warning$1(false, 'Unknown event handler property `%s`. It will be ignored.', name);
                warnedProperties$1[name] = true;
                return true;
              }
            } else if (EVENT_NAME_REGEX.test(name)) {
              if (INVALID_EVENT_NAME_REGEX.test(name)) {
                warning$1(false, 'Invalid event handler property `%s`. ' + 'React events use the camelCase naming convention, for example `onClick`.', name);
              }
              warnedProperties$1[name] = true;
              return true;
            }
            if (rARIA$1.test(name) || rARIACamel$1.test(name)) {
              return true;
            }
            if (lowerCasedName === 'innerhtml') {
              warning$1(false, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.');
              warnedProperties$1[name] = true;
              return true;
            }
            if (lowerCasedName === 'aria') {
              warning$1(false, 'The `aria` attribute is reserved for future use in React. ' + 'Pass individual `aria-` attributes instead.');
              warnedProperties$1[name] = true;
              return true;
            }
            if (lowerCasedName === 'is' && value !== null && value !== undefined && typeof value !== 'string') {
              warning$1(false, 'Received a `%s` for a string attribute `is`. If this is expected, cast ' + 'the value to a string.', typeof value);
              warnedProperties$1[name] = true;
              return true;
            }
            if (typeof value === 'number' && isNaN(value)) {
              warning$1(false, 'Received NaN for the `%s` attribute. If this is expected, cast ' + 'the value to a string.', name);
              warnedProperties$1[name] = true;
              return true;
            }
            var propertyInfo = getPropertyInfo(name);
            var isReserved = propertyInfo !== null && propertyInfo.type === RESERVED;
            if (possibleStandardNames.hasOwnProperty(lowerCasedName)) {
              var standardName = possibleStandardNames[lowerCasedName];
              if (standardName !== name) {
                warning$1(false, 'Invalid DOM property `%s`. Did you mean `%s`?', name, standardName);
                warnedProperties$1[name] = true;
                return true;
              }
            } else if (!isReserved && name !== lowerCasedName) {
              warning$1(false, 'React does not recognize the `%s` prop on a DOM element. If you ' + 'intentionally want it to appear in the DOM as a custom ' + 'attribute, spell it as lowercase `%s` instead. ' + 'If you accidentally passed it from a parent component, remove ' + 'it from the DOM element.', name, lowerCasedName);
              warnedProperties$1[name] = true;
              return true;
            }
            if (typeof value === 'boolean' && shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
              if (value) {
                warning$1(false, 'Received `%s` for a non-boolean attribute `%s`.\n\n' + 'If you want to write it to the DOM, pass a string instead: ' + '%s="%s" or %s={value.toString()}.', value, name, name, value, name);
              } else {
                warning$1(false, 'Received `%s` for a non-boolean attribute `%s`.\n\n' + 'If you want to write it to the DOM, pass a string instead: ' + '%s="%s" or %s={value.toString()}.\n\n' + 'If you used to conditionally omit it with %s={condition && value}, ' + 'pass %s={condition ? value : undefined} instead.', value, name, name, value, name, name, name);
              }
              warnedProperties$1[name] = true;
              return true;
            }
            if (isReserved) {
              return true;
            }
            if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
              warnedProperties$1[name] = true;
              return false;
            }
            if ((value === 'false' || value === 'true') && propertyInfo !== null && propertyInfo.type === BOOLEAN) {
              warning$1(false, 'Received the string `%s` for the boolean attribute `%s`. ' + '%s ' + 'Did you mean %s={%s}?', value, name, value === 'false' ? 'The browser will interpret it as a truthy value.' : 'Although this works, it will not work as expected if you pass the string "false".', name, value);
              warnedProperties$1[name] = true;
              return true;
            }
            return true;
          };
        }
        var warnUnknownProperties = function (type, props, canUseEventSystem) {
          var unknownProps = [];
          for (var key in props) {
            var isValid = validateProperty$1(type, key, props[key], canUseEventSystem);
            if (!isValid) {
              unknownProps.push(key);
            }
          }
          var unknownPropString = unknownProps.map(function (prop) {
            return '`' + prop + '`';
          }).join(', ');
          if (unknownProps.length === 1) {
            warning$1(false, 'Invalid value for prop %s on <%s> tag. Either remove it from the element, ' + 'or pass a string or number value to keep it in the DOM. ' + 'For details, see https://fb.me/react-attribute-behavior', unknownPropString, type);
          } else if (unknownProps.length > 1) {
            warning$1(false, 'Invalid values for props %s on <%s> tag. Either remove them from the element, ' + 'or pass a string or number value to keep them in the DOM. ' + 'For details, see https://fb.me/react-attribute-behavior', unknownPropString, type);
          }
        };
        function validateProperties$2(type, props, canUseEventSystem) {
          if (isCustomComponent(type, props)) {
            return;
          }
          warnUnknownProperties(type, props, canUseEventSystem);
        }
        var didWarnInvalidHydration = false;
        var didWarnShadyDOM = false;
        var DANGEROUSLY_SET_INNER_HTML = 'dangerouslySetInnerHTML';
        var SUPPRESS_CONTENT_EDITABLE_WARNING = 'suppressContentEditableWarning';
        var SUPPRESS_HYDRATION_WARNING$1 = 'suppressHydrationWarning';
        var AUTOFOCUS = 'autoFocus';
        var CHILDREN = 'children';
        var STYLE$1 = 'style';
        var HTML = '__html';
        var HTML_NAMESPACE = Namespaces.html;
        var warnedUnknownTags = void 0;
        var suppressHydrationWarning = void 0;
        var validatePropertiesInDevelopment = void 0;
        var warnForTextDifference = void 0;
        var warnForPropDifference = void 0;
        var warnForExtraAttributes = void 0;
        var warnForInvalidEventListener = void 0;
        var canDiffStyleForHydrationWarning = void 0;
        var normalizeMarkupForTextOrAttribute = void 0;
        var normalizeHTML = void 0;
        {
          warnedUnknownTags = {
            time: true,
            dialog: true,
            webview: true
          };
          validatePropertiesInDevelopment = function (type, props) {
            validateProperties(type, props);
            validateProperties$1(type, props);
            validateProperties$2(type, props, true);
          };
          canDiffStyleForHydrationWarning = canUseDOM && !document.documentMode;
          var NORMALIZE_NEWLINES_REGEX = /\r\n?/g;
          var NORMALIZE_NULL_AND_REPLACEMENT_REGEX = /\u0000|\uFFFD/g;
          normalizeMarkupForTextOrAttribute = function (markup) {
            var markupString = typeof markup === 'string' ? markup : '' + markup;
            return markupString.replace(NORMALIZE_NEWLINES_REGEX, '\n').replace(NORMALIZE_NULL_AND_REPLACEMENT_REGEX, '');
          };
          warnForTextDifference = function (serverText, clientText) {
            if (didWarnInvalidHydration) {
              return;
            }
            var normalizedClientText = normalizeMarkupForTextOrAttribute(clientText);
            var normalizedServerText = normalizeMarkupForTextOrAttribute(serverText);
            if (normalizedServerText === normalizedClientText) {
              return;
            }
            didWarnInvalidHydration = true;
            warningWithoutStack$1(false, 'Text content did not match. Server: "%s" Client: "%s"', normalizedServerText, normalizedClientText);
          };
          warnForPropDifference = function (propName, serverValue, clientValue) {
            if (didWarnInvalidHydration) {
              return;
            }
            var normalizedClientValue = normalizeMarkupForTextOrAttribute(clientValue);
            var normalizedServerValue = normalizeMarkupForTextOrAttribute(serverValue);
            if (normalizedServerValue === normalizedClientValue) {
              return;
            }
            didWarnInvalidHydration = true;
            warningWithoutStack$1(false, 'Prop `%s` did not match. Server: %s Client: %s', propName, JSON.stringify(normalizedServerValue), JSON.stringify(normalizedClientValue));
          };
          warnForExtraAttributes = function (attributeNames) {
            if (didWarnInvalidHydration) {
              return;
            }
            didWarnInvalidHydration = true;
            var names = [];
            attributeNames.forEach(function (name) {
              names.push(name);
            });
            warningWithoutStack$1(false, 'Extra attributes from the server: %s', names);
          };
          warnForInvalidEventListener = function (registrationName, listener) {
            if (listener === false) {
              warning$1(false, 'Expected `%s` listener to be a function, instead got `false`.\n\n' + 'If you used to conditionally omit it with %s={condition && value}, ' + 'pass %s={condition ? value : undefined} instead.', registrationName, registrationName, registrationName);
            } else {
              warning$1(false, 'Expected `%s` listener to be a function, instead got a value of `%s` type.', registrationName, typeof listener);
            }
          };
          normalizeHTML = function (parent, html) {
            var testElement = parent.namespaceURI === HTML_NAMESPACE ? parent.ownerDocument.createElement(parent.tagName) : parent.ownerDocument.createElementNS(parent.namespaceURI, parent.tagName);
            testElement.innerHTML = html;
            return testElement.innerHTML;
          };
        }
        function ensureListeningTo(rootContainerElement, registrationName) {
          var isDocumentOrFragment = rootContainerElement.nodeType === DOCUMENT_NODE || rootContainerElement.nodeType === DOCUMENT_FRAGMENT_NODE;
          var doc = isDocumentOrFragment ? rootContainerElement : rootContainerElement.ownerDocument;
          listenTo(registrationName, doc);
        }
        function getOwnerDocumentFromRootContainer(rootContainerElement) {
          return rootContainerElement.nodeType === DOCUMENT_NODE ? rootContainerElement : rootContainerElement.ownerDocument;
        }
        function noop() {}
        function trapClickOnNonInteractiveElement(node) {
          node.onclick = noop;
        }
        function setInitialDOMProperties(tag, domElement, rootContainerElement, nextProps, isCustomComponentTag) {
          for (var propKey in nextProps) {
            if (!nextProps.hasOwnProperty(propKey)) {
              continue;
            }
            var nextProp = nextProps[propKey];
            if (propKey === STYLE$1) {
              {
                if (nextProp) {
                  Object.freeze(nextProp);
                }
              }
              setValueForStyles(domElement, nextProp);
            } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
              var nextHtml = nextProp ? nextProp[HTML] : undefined;
              if (nextHtml != null) {
                setInnerHTML(domElement, nextHtml);
              }
            } else if (propKey === CHILDREN) {
              if (typeof nextProp === 'string') {
                var canSetTextContent = tag !== 'textarea' || nextProp !== '';
                if (canSetTextContent) {
                  setTextContent(domElement, nextProp);
                }
              } else if (typeof nextProp === 'number') {
                setTextContent(domElement, '' + nextProp);
              }
            } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING$1) {} else if (propKey === AUTOFOCUS) {} else if (registrationNameModules.hasOwnProperty(propKey)) {
              if (nextProp != null) {
                if (true && typeof nextProp !== 'function') {
                  warnForInvalidEventListener(propKey, nextProp);
                }
                ensureListeningTo(rootContainerElement, propKey);
              }
            } else if (nextProp != null) {
              setValueForProperty(domElement, propKey, nextProp, isCustomComponentTag);
            }
          }
        }
        function updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag) {
          for (var i = 0; i < updatePayload.length; i += 2) {
            var propKey = updatePayload[i];
            var propValue = updatePayload[i + 1];
            if (propKey === STYLE$1) {
              setValueForStyles(domElement, propValue);
            } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
              setInnerHTML(domElement, propValue);
            } else if (propKey === CHILDREN) {
              setTextContent(domElement, propValue);
            } else {
              setValueForProperty(domElement, propKey, propValue, isCustomComponentTag);
            }
          }
        }
        function createElement(type, props, rootContainerElement, parentNamespace) {
          var isCustomComponentTag = void 0;
          var ownerDocument = getOwnerDocumentFromRootContainer(rootContainerElement);
          var domElement = void 0;
          var namespaceURI = parentNamespace;
          if (namespaceURI === HTML_NAMESPACE) {
            namespaceURI = getIntrinsicNamespace(type);
          }
          if (namespaceURI === HTML_NAMESPACE) {
            {
              isCustomComponentTag = isCustomComponent(type, props);
              !(isCustomComponentTag || type === type.toLowerCase()) ? warning$1(false, '<%s /> is using incorrect casing. ' + 'Use PascalCase for React components, ' + 'or lowercase for HTML elements.', type) : void 0;
            }
            if (type === 'script') {
              var div = ownerDocument.createElement('div');
              div.innerHTML = '<script><' + '/script>';
              var firstChild = div.firstChild;
              domElement = div.removeChild(firstChild);
            } else if (typeof props.is === 'string') {
              domElement = ownerDocument.createElement(type, { is: props.is });
            } else {
              domElement = ownerDocument.createElement(type);
              if (type === 'select' && props.multiple) {
                var node = domElement;
                node.multiple = true;
              }
            }
          } else {
            domElement = ownerDocument.createElementNS(namespaceURI, type);
          }
          {
            if (namespaceURI === HTML_NAMESPACE) {
              if (!isCustomComponentTag && Object.prototype.toString.call(domElement) === '[object HTMLUnknownElement]' && !Object.prototype.hasOwnProperty.call(warnedUnknownTags, type)) {
                warnedUnknownTags[type] = true;
                warning$1(false, 'The tag <%s> is unrecognized in this browser. ' + 'If you meant to render a React component, start its name with ' + 'an uppercase letter.', type);
              }
            }
          }
          return domElement;
        }
        function createTextNode(text, rootContainerElement) {
          return getOwnerDocumentFromRootContainer(rootContainerElement).createTextNode(text);
        }
        function setInitialProperties(domElement, tag, rawProps, rootContainerElement) {
          var isCustomComponentTag = isCustomComponent(tag, rawProps);
          {
            validatePropertiesInDevelopment(tag, rawProps);
            if (isCustomComponentTag && !didWarnShadyDOM && domElement.shadyRoot) {
              warning$1(false, '%s is using shady DOM. Using shady DOM with React can ' + 'cause things to break subtly.', getCurrentFiberOwnerNameInDevOrNull() || 'A component');
              didWarnShadyDOM = true;
            }
          }
          var props = void 0;
          switch (tag) {
            case 'iframe':
            case 'object':
              trapBubbledEvent(TOP_LOAD, domElement);
              props = rawProps;
              break;
            case 'video':
            case 'audio':
              for (var i = 0; i < mediaEventTypes.length; i++) {
                trapBubbledEvent(mediaEventTypes[i], domElement);
              }
              props = rawProps;
              break;
            case 'source':
              trapBubbledEvent(TOP_ERROR, domElement);
              props = rawProps;
              break;
            case 'img':
            case 'image':
            case 'link':
              trapBubbledEvent(TOP_ERROR, domElement);
              trapBubbledEvent(TOP_LOAD, domElement);
              props = rawProps;
              break;
            case 'form':
              trapBubbledEvent(TOP_RESET, domElement);
              trapBubbledEvent(TOP_SUBMIT, domElement);
              props = rawProps;
              break;
            case 'details':
              trapBubbledEvent(TOP_TOGGLE, domElement);
              props = rawProps;
              break;
            case 'input':
              initWrapperState(domElement, rawProps);
              props = getHostProps(domElement, rawProps);
              trapBubbledEvent(TOP_INVALID, domElement);
              ensureListeningTo(rootContainerElement, 'onChange');
              break;
            case 'option':
              validateProps(domElement, rawProps);
              props = getHostProps$1(domElement, rawProps);
              break;
            case 'select':
              initWrapperState$1(domElement, rawProps);
              props = getHostProps$2(domElement, rawProps);
              trapBubbledEvent(TOP_INVALID, domElement);
              ensureListeningTo(rootContainerElement, 'onChange');
              break;
            case 'textarea':
              initWrapperState$2(domElement, rawProps);
              props = getHostProps$3(domElement, rawProps);
              trapBubbledEvent(TOP_INVALID, domElement);
              ensureListeningTo(rootContainerElement, 'onChange');
              break;
            default:
              props = rawProps;
          }
          assertValidProps(tag, props);
          setInitialDOMProperties(tag, domElement, rootContainerElement, props, isCustomComponentTag);
          switch (tag) {
            case 'input':
              track(domElement);
              postMountWrapper(domElement, rawProps, false);
              break;
            case 'textarea':
              track(domElement);
              postMountWrapper$3(domElement, rawProps);
              break;
            case 'option':
              postMountWrapper$1(domElement, rawProps);
              break;
            case 'select':
              postMountWrapper$2(domElement, rawProps);
              break;
            default:
              if (typeof props.onClick === 'function') {
                trapClickOnNonInteractiveElement(domElement);
              }
              break;
          }
        }
        function diffProperties(domElement, tag, lastRawProps, nextRawProps, rootContainerElement) {
          {
            validatePropertiesInDevelopment(tag, nextRawProps);
          }
          var updatePayload = null;
          var lastProps = void 0;
          var nextProps = void 0;
          switch (tag) {
            case 'input':
              lastProps = getHostProps(domElement, lastRawProps);
              nextProps = getHostProps(domElement, nextRawProps);
              updatePayload = [];
              break;
            case 'option':
              lastProps = getHostProps$1(domElement, lastRawProps);
              nextProps = getHostProps$1(domElement, nextRawProps);
              updatePayload = [];
              break;
            case 'select':
              lastProps = getHostProps$2(domElement, lastRawProps);
              nextProps = getHostProps$2(domElement, nextRawProps);
              updatePayload = [];
              break;
            case 'textarea':
              lastProps = getHostProps$3(domElement, lastRawProps);
              nextProps = getHostProps$3(domElement, nextRawProps);
              updatePayload = [];
              break;
            default:
              lastProps = lastRawProps;
              nextProps = nextRawProps;
              if (typeof lastProps.onClick !== 'function' && typeof nextProps.onClick === 'function') {
                trapClickOnNonInteractiveElement(domElement);
              }
              break;
          }
          assertValidProps(tag, nextProps);
          var propKey = void 0;
          var styleName = void 0;
          var styleUpdates = null;
          for (propKey in lastProps) {
            if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {
              continue;
            }
            if (propKey === STYLE$1) {
              var lastStyle = lastProps[propKey];
              for (styleName in lastStyle) {
                if (lastStyle.hasOwnProperty(styleName)) {
                  if (!styleUpdates) {
                    styleUpdates = {};
                  }
                  styleUpdates[styleName] = '';
                }
              }
            } else if (propKey === DANGEROUSLY_SET_INNER_HTML || propKey === CHILDREN) {} else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING$1) {} else if (propKey === AUTOFOCUS) {} else if (registrationNameModules.hasOwnProperty(propKey)) {
              if (!updatePayload) {
                updatePayload = [];
              }
            } else {
              (updatePayload = updatePayload || []).push(propKey, null);
            }
          }
          for (propKey in nextProps) {
            var nextProp = nextProps[propKey];
            var lastProp = lastProps != null ? lastProps[propKey] : undefined;
            if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {
              continue;
            }
            if (propKey === STYLE$1) {
              {
                if (nextProp) {
                  Object.freeze(nextProp);
                }
              }
              if (lastProp) {
                for (styleName in lastProp) {
                  if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
                    if (!styleUpdates) {
                      styleUpdates = {};
                    }
                    styleUpdates[styleName] = '';
                  }
                }
                for (styleName in nextProp) {
                  if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
                    if (!styleUpdates) {
                      styleUpdates = {};
                    }
                    styleUpdates[styleName] = nextProp[styleName];
                  }
                }
              } else {
                if (!styleUpdates) {
                  if (!updatePayload) {
                    updatePayload = [];
                  }
                  updatePayload.push(propKey, styleUpdates);
                }
                styleUpdates = nextProp;
              }
            } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
              var nextHtml = nextProp ? nextProp[HTML] : undefined;
              var lastHtml = lastProp ? lastProp[HTML] : undefined;
              if (nextHtml != null) {
                if (lastHtml !== nextHtml) {
                  (updatePayload = updatePayload || []).push(propKey, '' + nextHtml);
                }
              } else {}
            } else if (propKey === CHILDREN) {
              if (lastProp !== nextProp && (typeof nextProp === 'string' || typeof nextProp === 'number')) {
                (updatePayload = updatePayload || []).push(propKey, '' + nextProp);
              }
            } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING$1) {} else if (registrationNameModules.hasOwnProperty(propKey)) {
              if (nextProp != null) {
                if (true && typeof nextProp !== 'function') {
                  warnForInvalidEventListener(propKey, nextProp);
                }
                ensureListeningTo(rootContainerElement, propKey);
              }
              if (!updatePayload && lastProp !== nextProp) {
                updatePayload = [];
              }
            } else {
              (updatePayload = updatePayload || []).push(propKey, nextProp);
            }
          }
          if (styleUpdates) {
            {
              validateShorthandPropertyCollisionInDev(styleUpdates, nextProps[STYLE$1]);
            }
            (updatePayload = updatePayload || []).push(STYLE$1, styleUpdates);
          }
          return updatePayload;
        }
        function updateProperties(domElement, updatePayload, tag, lastRawProps, nextRawProps) {
          if (tag === 'input' && nextRawProps.type === 'radio' && nextRawProps.name != null) {
            updateChecked(domElement, nextRawProps);
          }
          var wasCustomComponentTag = isCustomComponent(tag, lastRawProps);
          var isCustomComponentTag = isCustomComponent(tag, nextRawProps);
          updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag);
          switch (tag) {
            case 'input':
              updateWrapper(domElement, nextRawProps);
              break;
            case 'textarea':
              updateWrapper$1(domElement, nextRawProps);
              break;
            case 'select':
              postUpdateWrapper(domElement, nextRawProps);
              break;
          }
        }
        function getPossibleStandardName(propName) {
          {
            var lowerCasedName = propName.toLowerCase();
            if (!possibleStandardNames.hasOwnProperty(lowerCasedName)) {
              return null;
            }
            return possibleStandardNames[lowerCasedName] || null;
          }
          return null;
        }
        function diffHydratedProperties(domElement, tag, rawProps, parentNamespace, rootContainerElement) {
          var isCustomComponentTag = void 0;
          var extraAttributeNames = void 0;
          {
            suppressHydrationWarning = rawProps[SUPPRESS_HYDRATION_WARNING$1] === true;
            isCustomComponentTag = isCustomComponent(tag, rawProps);
            validatePropertiesInDevelopment(tag, rawProps);
            if (isCustomComponentTag && !didWarnShadyDOM && domElement.shadyRoot) {
              warning$1(false, '%s is using shady DOM. Using shady DOM with React can ' + 'cause things to break subtly.', getCurrentFiberOwnerNameInDevOrNull() || 'A component');
              didWarnShadyDOM = true;
            }
          }
          switch (tag) {
            case 'iframe':
            case 'object':
              trapBubbledEvent(TOP_LOAD, domElement);
              break;
            case 'video':
            case 'audio':
              for (var i = 0; i < mediaEventTypes.length; i++) {
                trapBubbledEvent(mediaEventTypes[i], domElement);
              }
              break;
            case 'source':
              trapBubbledEvent(TOP_ERROR, domElement);
              break;
            case 'img':
            case 'image':
            case 'link':
              trapBubbledEvent(TOP_ERROR, domElement);
              trapBubbledEvent(TOP_LOAD, domElement);
              break;
            case 'form':
              trapBubbledEvent(TOP_RESET, domElement);
              trapBubbledEvent(TOP_SUBMIT, domElement);
              break;
            case 'details':
              trapBubbledEvent(TOP_TOGGLE, domElement);
              break;
            case 'input':
              initWrapperState(domElement, rawProps);
              trapBubbledEvent(TOP_INVALID, domElement);
              ensureListeningTo(rootContainerElement, 'onChange');
              break;
            case 'option':
              validateProps(domElement, rawProps);
              break;
            case 'select':
              initWrapperState$1(domElement, rawProps);
              trapBubbledEvent(TOP_INVALID, domElement);
              ensureListeningTo(rootContainerElement, 'onChange');
              break;
            case 'textarea':
              initWrapperState$2(domElement, rawProps);
              trapBubbledEvent(TOP_INVALID, domElement);
              ensureListeningTo(rootContainerElement, 'onChange');
              break;
          }
          assertValidProps(tag, rawProps);
          {
            extraAttributeNames = new Set();
            var attributes = domElement.attributes;
            for (var _i = 0; _i < attributes.length; _i++) {
              var name = attributes[_i].name.toLowerCase();
              switch (name) {
                case 'data-reactroot':
                  break;
                case 'value':
                  break;
                case 'checked':
                  break;
                case 'selected':
                  break;
                default:
                  extraAttributeNames.add(attributes[_i].name);
              }
            }
          }
          var updatePayload = null;
          for (var propKey in rawProps) {
            if (!rawProps.hasOwnProperty(propKey)) {
              continue;
            }
            var nextProp = rawProps[propKey];
            if (propKey === CHILDREN) {
              if (typeof nextProp === 'string') {
                if (domElement.textContent !== nextProp) {
                  if (true && !suppressHydrationWarning) {
                    warnForTextDifference(domElement.textContent, nextProp);
                  }
                  updatePayload = [CHILDREN, nextProp];
                }
              } else if (typeof nextProp === 'number') {
                if (domElement.textContent !== '' + nextProp) {
                  if (true && !suppressHydrationWarning) {
                    warnForTextDifference(domElement.textContent, nextProp);
                  }
                  updatePayload = [CHILDREN, '' + nextProp];
                }
              }
            } else if (registrationNameModules.hasOwnProperty(propKey)) {
              if (nextProp != null) {
                if (true && typeof nextProp !== 'function') {
                  warnForInvalidEventListener(propKey, nextProp);
                }
                ensureListeningTo(rootContainerElement, propKey);
              }
            } else if (true && typeof isCustomComponentTag === 'boolean') {
              var serverValue = void 0;
              var propertyInfo = getPropertyInfo(propKey);
              if (suppressHydrationWarning) {} else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING$1 || propKey === 'value' || propKey === 'checked' || propKey === 'selected') {} else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
                var serverHTML = domElement.innerHTML;
                var nextHtml = nextProp ? nextProp[HTML] : undefined;
                var expectedHTML = normalizeHTML(domElement, nextHtml != null ? nextHtml : '');
                if (expectedHTML !== serverHTML) {
                  warnForPropDifference(propKey, serverHTML, expectedHTML);
                }
              } else if (propKey === STYLE$1) {
                extraAttributeNames.delete(propKey);
                if (canDiffStyleForHydrationWarning) {
                  var expectedStyle = createDangerousStringForStyles(nextProp);
                  serverValue = domElement.getAttribute('style');
                  if (expectedStyle !== serverValue) {
                    warnForPropDifference(propKey, serverValue, expectedStyle);
                  }
                }
              } else if (isCustomComponentTag) {
                extraAttributeNames.delete(propKey.toLowerCase());
                serverValue = getValueForAttribute(domElement, propKey, nextProp);
                if (nextProp !== serverValue) {
                  warnForPropDifference(propKey, serverValue, nextProp);
                }
              } else if (!shouldIgnoreAttribute(propKey, propertyInfo, isCustomComponentTag) && !shouldRemoveAttribute(propKey, nextProp, propertyInfo, isCustomComponentTag)) {
                var isMismatchDueToBadCasing = false;
                if (propertyInfo !== null) {
                  extraAttributeNames.delete(propertyInfo.attributeName);
                  serverValue = getValueForProperty(domElement, propKey, nextProp, propertyInfo);
                } else {
                  var ownNamespace = parentNamespace;
                  if (ownNamespace === HTML_NAMESPACE) {
                    ownNamespace = getIntrinsicNamespace(tag);
                  }
                  if (ownNamespace === HTML_NAMESPACE) {
                    extraAttributeNames.delete(propKey.toLowerCase());
                  } else {
                    var standardName = getPossibleStandardName(propKey);
                    if (standardName !== null && standardName !== propKey) {
                      isMismatchDueToBadCasing = true;
                      extraAttributeNames.delete(standardName);
                    }
                    extraAttributeNames.delete(propKey);
                  }
                  serverValue = getValueForAttribute(domElement, propKey, nextProp);
                }
                if (nextProp !== serverValue && !isMismatchDueToBadCasing) {
                  warnForPropDifference(propKey, serverValue, nextProp);
                }
              }
            }
          }
          {
            if (extraAttributeNames.size > 0 && !suppressHydrationWarning) {
              warnForExtraAttributes(extraAttributeNames);
            }
          }
          switch (tag) {
            case 'input':
              track(domElement);
              postMountWrapper(domElement, rawProps, true);
              break;
            case 'textarea':
              track(domElement);
              postMountWrapper$3(domElement, rawProps);
              break;
            case 'select':
            case 'option':
              break;
            default:
              if (typeof rawProps.onClick === 'function') {
                trapClickOnNonInteractiveElement(domElement);
              }
              break;
          }
          return updatePayload;
        }
        function diffHydratedText(textNode, text) {
          var isDifferent = textNode.nodeValue !== text;
          return isDifferent;
        }
        function warnForUnmatchedText(textNode, text) {
          {
            warnForTextDifference(textNode.nodeValue, text);
          }
        }
        function warnForDeletedHydratableElement(parentNode, child) {
          {
            if (didWarnInvalidHydration) {
              return;
            }
            didWarnInvalidHydration = true;
            warningWithoutStack$1(false, 'Did not expect server HTML to contain a <%s> in <%s>.', child.nodeName.toLowerCase(), parentNode.nodeName.toLowerCase());
          }
        }
        function warnForDeletedHydratableText(parentNode, child) {
          {
            if (didWarnInvalidHydration) {
              return;
            }
            didWarnInvalidHydration = true;
            warningWithoutStack$1(false, 'Did not expect server HTML to contain the text node "%s" in <%s>.', child.nodeValue, parentNode.nodeName.toLowerCase());
          }
        }
        function warnForInsertedHydratedElement(parentNode, tag, props) {
          {
            if (didWarnInvalidHydration) {
              return;
            }
            didWarnInvalidHydration = true;
            warningWithoutStack$1(false, 'Expected server HTML to contain a matching <%s> in <%s>.', tag, parentNode.nodeName.toLowerCase());
          }
        }
        function warnForInsertedHydratedText(parentNode, text) {
          {
            if (text === '') {
              return;
            }
            if (didWarnInvalidHydration) {
              return;
            }
            didWarnInvalidHydration = true;
            warningWithoutStack$1(false, 'Expected server HTML to contain a matching text node for "%s" in <%s>.', text, parentNode.nodeName.toLowerCase());
          }
        }
        function restoreControlledState$1(domElement, tag, props) {
          switch (tag) {
            case 'input':
              restoreControlledState(domElement, props);
              return;
            case 'textarea':
              restoreControlledState$3(domElement, props);
              return;
            case 'select':
              restoreControlledState$2(domElement, props);
              return;
          }
        }
        var validateDOMNesting = function () {};
        var updatedAncestorInfo = function () {};
        {
          var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];
          var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template', 'foreignObject', 'desc', 'title'];
          var buttonScopeTags = inScopeTags.concat(['button']);
          var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];
          var emptyAncestorInfo = {
            current: null,
            formTag: null,
            aTagInScope: null,
            buttonTagInScope: null,
            nobrTagInScope: null,
            pTagInButtonScope: null,
            listItemTagAutoclosing: null,
            dlItemTagAutoclosing: null
          };
          updatedAncestorInfo = function (oldInfo, tag) {
            var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);
            var info = { tag: tag };
            if (inScopeTags.indexOf(tag) !== -1) {
              ancestorInfo.aTagInScope = null;
              ancestorInfo.buttonTagInScope = null;
              ancestorInfo.nobrTagInScope = null;
            }
            if (buttonScopeTags.indexOf(tag) !== -1) {
              ancestorInfo.pTagInButtonScope = null;
            }
            if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
              ancestorInfo.listItemTagAutoclosing = null;
              ancestorInfo.dlItemTagAutoclosing = null;
            }
            ancestorInfo.current = info;
            if (tag === 'form') {
              ancestorInfo.formTag = info;
            }
            if (tag === 'a') {
              ancestorInfo.aTagInScope = info;
            }
            if (tag === 'button') {
              ancestorInfo.buttonTagInScope = info;
            }
            if (tag === 'nobr') {
              ancestorInfo.nobrTagInScope = info;
            }
            if (tag === 'p') {
              ancestorInfo.pTagInButtonScope = info;
            }
            if (tag === 'li') {
              ancestorInfo.listItemTagAutoclosing = info;
            }
            if (tag === 'dd' || tag === 'dt') {
              ancestorInfo.dlItemTagAutoclosing = info;
            }
            return ancestorInfo;
          };
          var isTagValidWithParent = function (tag, parentTag) {
            switch (parentTag) {
              case 'select':
                return tag === 'option' || tag === 'optgroup' || tag === '#text';
              case 'optgroup':
                return tag === 'option' || tag === '#text';
              case 'option':
                return tag === '#text';
              case 'tr':
                return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';
              case 'tbody':
              case 'thead':
              case 'tfoot':
                return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';
              case 'colgroup':
                return tag === 'col' || tag === 'template';
              case 'table':
                return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';
              case 'head':
                return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';
              case 'html':
                return tag === 'head' || tag === 'body';
              case '#document':
                return tag === 'html';
            }
            switch (tag) {
              case 'h1':
              case 'h2':
              case 'h3':
              case 'h4':
              case 'h5':
              case 'h6':
                return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';
              case 'rp':
              case 'rt':
                return impliedEndTags.indexOf(parentTag) === -1;
              case 'body':
              case 'caption':
              case 'col':
              case 'colgroup':
              case 'frame':
              case 'head':
              case 'html':
              case 'tbody':
              case 'td':
              case 'tfoot':
              case 'th':
              case 'thead':
              case 'tr':
                return parentTag == null;
            }
            return true;
          };
          var findInvalidAncestorForTag = function (tag, ancestorInfo) {
            switch (tag) {
              case 'address':
              case 'article':
              case 'aside':
              case 'blockquote':
              case 'center':
              case 'details':
              case 'dialog':
              case 'dir':
              case 'div':
              case 'dl':
              case 'fieldset':
              case 'figcaption':
              case 'figure':
              case 'footer':
              case 'header':
              case 'hgroup':
              case 'main':
              case 'menu':
              case 'nav':
              case 'ol':
              case 'p':
              case 'section':
              case 'summary':
              case 'ul':
              case 'pre':
              case 'listing':
              case 'table':
              case 'hr':
              case 'xmp':
              case 'h1':
              case 'h2':
              case 'h3':
              case 'h4':
              case 'h5':
              case 'h6':
                return ancestorInfo.pTagInButtonScope;
              case 'form':
                return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;
              case 'li':
                return ancestorInfo.listItemTagAutoclosing;
              case 'dd':
              case 'dt':
                return ancestorInfo.dlItemTagAutoclosing;
              case 'button':
                return ancestorInfo.buttonTagInScope;
              case 'a':
                return ancestorInfo.aTagInScope;
              case 'nobr':
                return ancestorInfo.nobrTagInScope;
            }
            return null;
          };
          var didWarn = {};
          validateDOMNesting = function (childTag, childText, ancestorInfo) {
            ancestorInfo = ancestorInfo || emptyAncestorInfo;
            var parentInfo = ancestorInfo.current;
            var parentTag = parentInfo && parentInfo.tag;
            if (childText != null) {
              !(childTag == null) ? warningWithoutStack$1(false, 'validateDOMNesting: when childText is passed, childTag should be null') : void 0;
              childTag = '#text';
            }
            var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
            var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
            var invalidParentOrAncestor = invalidParent || invalidAncestor;
            if (!invalidParentOrAncestor) {
              return;
            }
            var ancestorTag = invalidParentOrAncestor.tag;
            var addendum = getCurrentFiberStackInDev();
            var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + addendum;
            if (didWarn[warnKey]) {
              return;
            }
            didWarn[warnKey] = true;
            var tagDisplayName = childTag;
            var whitespaceInfo = '';
            if (childTag === '#text') {
              if (/\S/.test(childText)) {
                tagDisplayName = 'Text nodes';
              } else {
                tagDisplayName = 'Whitespace text nodes';
                whitespaceInfo = " Make sure you don't have any extra whitespace between tags on " + 'each line of your source code.';
              }
            } else {
              tagDisplayName = '<' + childTag + '>';
            }
            if (invalidParent) {
              var info = '';
              if (ancestorTag === 'table' && childTag === 'tr') {
                info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';
              }
              warningWithoutStack$1(false, 'validateDOMNesting(...): %s cannot appear as a child of <%s>.%s%s%s', tagDisplayName, ancestorTag, whitespaceInfo, info, addendum);
            } else {
              warningWithoutStack$1(false, 'validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>.%s', tagDisplayName, ancestorTag, addendum);
            }
          };
        }
        function shim() {
          invariant(false, 'The current renderer does not support persistence. This error is likely caused by a bug in React. Please file an issue.');
        }
        var supportsPersistence = false;
        var cloneInstance = shim;
        var createContainerChildSet = shim;
        var appendChildToContainerChildSet = shim;
        var finalizeContainerChildren = shim;
        var replaceContainerChildren = shim;
        var cloneHiddenInstance = shim;
        var cloneUnhiddenInstance = shim;
        var createHiddenTextInstance = shim;
        var SUPPRESS_HYDRATION_WARNING = void 0;
        {
          SUPPRESS_HYDRATION_WARNING = 'suppressHydrationWarning';
        }
        var STYLE = 'style';
        var eventsEnabled = null;
        var selectionInformation = null;
        function shouldAutoFocusHostComponent(type, props) {
          switch (type) {
            case 'button':
            case 'input':
            case 'select':
            case 'textarea':
              return !!props.autoFocus;
          }
          return false;
        }
        function getRootHostContext(rootContainerInstance) {
          var type = void 0;
          var namespace = void 0;
          var nodeType = rootContainerInstance.nodeType;
          switch (nodeType) {
            case DOCUMENT_NODE:
            case DOCUMENT_FRAGMENT_NODE:
              {
                type = nodeType === DOCUMENT_NODE ? '#document' : '#fragment';
                var root = rootContainerInstance.documentElement;
                namespace = root ? root.namespaceURI : getChildNamespace(null, '');
                break;
              }
            default:
              {
                var container = nodeType === COMMENT_NODE ? rootContainerInstance.parentNode : rootContainerInstance;
                var ownNamespace = container.namespaceURI || null;
                type = container.tagName;
                namespace = getChildNamespace(ownNamespace, type);
                break;
              }
          }
          {
            var validatedTag = type.toLowerCase();
            var _ancestorInfo = updatedAncestorInfo(null, validatedTag);
            return {
              namespace: namespace,
              ancestorInfo: _ancestorInfo
            };
          }
          return namespace;
        }
        function getChildHostContext(parentHostContext, type, rootContainerInstance) {
          {
            var parentHostContextDev = parentHostContext;
            var _namespace = getChildNamespace(parentHostContextDev.namespace, type);
            var _ancestorInfo2 = updatedAncestorInfo(parentHostContextDev.ancestorInfo, type);
            return {
              namespace: _namespace,
              ancestorInfo: _ancestorInfo2
            };
          }
          var parentNamespace = parentHostContext;
          return getChildNamespace(parentNamespace, type);
        }
        function getPublicInstance(instance) {
          return instance;
        }
        function prepareForCommit(containerInfo) {
          eventsEnabled = isEnabled();
          selectionInformation = getSelectionInformation();
          setEnabled(false);
        }
        function resetAfterCommit(containerInfo) {
          restoreSelection(selectionInformation);
          selectionInformation = null;
          setEnabled(eventsEnabled);
          eventsEnabled = null;
        }
        function createInstance(type, props, rootContainerInstance, hostContext, internalInstanceHandle) {
          var parentNamespace = void 0;
          {
            var hostContextDev = hostContext;
            validateDOMNesting(type, null, hostContextDev.ancestorInfo);
            if (typeof props.children === 'string' || typeof props.children === 'number') {
              var string = '' + props.children;
              var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type);
              validateDOMNesting(null, string, ownAncestorInfo);
            }
            parentNamespace = hostContextDev.namespace;
          }
          var domElement = createElement(type, props, rootContainerInstance, parentNamespace);
          precacheFiberNode(internalInstanceHandle, domElement);
          updateFiberProps(domElement, props);
          return domElement;
        }
        function appendInitialChild(parentInstance, child) {
          parentInstance.appendChild(child);
        }
        function finalizeInitialChildren(domElement, type, props, rootContainerInstance, hostContext) {
          setInitialProperties(domElement, type, props, rootContainerInstance);
          return shouldAutoFocusHostComponent(type, props);
        }
        function prepareUpdate(domElement, type, oldProps, newProps, rootContainerInstance, hostContext) {
          {
            var hostContextDev = hostContext;
            if (typeof newProps.children !== typeof oldProps.children && (typeof newProps.children === 'string' || typeof newProps.children === 'number')) {
              var string = '' + newProps.children;
              var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type);
              validateDOMNesting(null, string, ownAncestorInfo);
            }
          }
          return diffProperties(domElement, type, oldProps, newProps, rootContainerInstance);
        }
        function shouldSetTextContent(type, props) {
          return type === 'textarea' || type === 'option' || type === 'noscript' || typeof props.children === 'string' || typeof props.children === 'number' || typeof props.dangerouslySetInnerHTML === 'object' && props.dangerouslySetInnerHTML !== null && props.dangerouslySetInnerHTML.__html != null;
        }
        function shouldDeprioritizeSubtree(type, props) {
          return !!props.hidden;
        }
        function createTextInstance(text, rootContainerInstance, hostContext, internalInstanceHandle) {
          {
            var hostContextDev = hostContext;
            validateDOMNesting(null, text, hostContextDev.ancestorInfo);
          }
          var textNode = createTextNode(text, rootContainerInstance);
          precacheFiberNode(internalInstanceHandle, textNode);
          return textNode;
        }
        var isPrimaryRenderer = true;
        var scheduleTimeout = typeof setTimeout === 'function' ? setTimeout : undefined;
        var cancelTimeout = typeof clearTimeout === 'function' ? clearTimeout : undefined;
        var noTimeout = -1;
        var supportsMutation = true;
        function commitMount(domElement, type, newProps, internalInstanceHandle) {
          if (shouldAutoFocusHostComponent(type, newProps)) {
            domElement.focus();
          }
        }
        function commitUpdate(domElement, updatePayload, type, oldProps, newProps, internalInstanceHandle) {
          updateFiberProps(domElement, newProps);
          updateProperties(domElement, updatePayload, type, oldProps, newProps);
        }
        function resetTextContent(domElement) {
          setTextContent(domElement, '');
        }
        function commitTextUpdate(textInstance, oldText, newText) {
          textInstance.nodeValue = newText;
        }
        function appendChild(parentInstance, child) {
          parentInstance.appendChild(child);
        }
        function appendChildToContainer(container, child) {
          var parentNode = void 0;
          if (container.nodeType === COMMENT_NODE) {
            parentNode = container.parentNode;
            parentNode.insertBefore(child, container);
          } else {
            parentNode = container;
            parentNode.appendChild(child);
          }
          var reactRootContainer = container._reactRootContainer;
          if ((reactRootContainer === null || reactRootContainer === undefined) && parentNode.onclick === null) {
            trapClickOnNonInteractiveElement(parentNode);
          }
        }
        function insertBefore(parentInstance, child, beforeChild) {
          parentInstance.insertBefore(child, beforeChild);
        }
        function insertInContainerBefore(container, child, beforeChild) {
          if (container.nodeType === COMMENT_NODE) {
            container.parentNode.insertBefore(child, beforeChild);
          } else {
            container.insertBefore(child, beforeChild);
          }
        }
        function removeChild(parentInstance, child) {
          parentInstance.removeChild(child);
        }
        function removeChildFromContainer(container, child) {
          if (container.nodeType === COMMENT_NODE) {
            container.parentNode.removeChild(child);
          } else {
            container.removeChild(child);
          }
        }
        function hideInstance(instance) {
          instance = instance;
          instance.style.display = 'none';
        }
        function hideTextInstance(textInstance) {
          textInstance.nodeValue = '';
        }
        function unhideInstance(instance, props) {
          instance = instance;
          var styleProp = props[STYLE];
          var display = styleProp !== undefined && styleProp !== null && styleProp.hasOwnProperty('display') ? styleProp.display : null;
          instance.style.display = dangerousStyleValue('display', display);
        }
        function unhideTextInstance(textInstance, text) {
          textInstance.nodeValue = text;
        }
        var supportsHydration = true;
        function canHydrateInstance(instance, type, props) {
          if (instance.nodeType !== ELEMENT_NODE || type.toLowerCase() !== instance.nodeName.toLowerCase()) {
            return null;
          }
          return instance;
        }
        function canHydrateTextInstance(instance, text) {
          if (text === '' || instance.nodeType !== TEXT_NODE) {
            return null;
          }
          return instance;
        }
        function getNextHydratableSibling(instance) {
          var node = instance.nextSibling;
          while (node && node.nodeType !== ELEMENT_NODE && node.nodeType !== TEXT_NODE) {
            node = node.nextSibling;
          }
          return node;
        }
        function getFirstHydratableChild(parentInstance) {
          var next = parentInstance.firstChild;
          while (next && next.nodeType !== ELEMENT_NODE && next.nodeType !== TEXT_NODE) {
            next = next.nextSibling;
          }
          return next;
        }
        function hydrateInstance(instance, type, props, rootContainerInstance, hostContext, internalInstanceHandle) {
          precacheFiberNode(internalInstanceHandle, instance);
          updateFiberProps(instance, props);
          var parentNamespace = void 0;
          {
            var hostContextDev = hostContext;
            parentNamespace = hostContextDev.namespace;
          }
          return diffHydratedProperties(instance, type, props, parentNamespace, rootContainerInstance);
        }
        function hydrateTextInstance(textInstance, text, internalInstanceHandle) {
          precacheFiberNode(internalInstanceHandle, textInstance);
          return diffHydratedText(textInstance, text);
        }
        function didNotMatchHydratedContainerTextInstance(parentContainer, textInstance, text) {
          {
            warnForUnmatchedText(textInstance, text);
          }
        }
        function didNotMatchHydratedTextInstance(parentType, parentProps, parentInstance, textInstance, text) {
          if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {
            warnForUnmatchedText(textInstance, text);
          }
        }
        function didNotHydrateContainerInstance(parentContainer, instance) {
          {
            if (instance.nodeType === ELEMENT_NODE) {
              warnForDeletedHydratableElement(parentContainer, instance);
            } else {
              warnForDeletedHydratableText(parentContainer, instance);
            }
          }
        }
        function didNotHydrateInstance(parentType, parentProps, parentInstance, instance) {
          if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {
            if (instance.nodeType === ELEMENT_NODE) {
              warnForDeletedHydratableElement(parentInstance, instance);
            } else {
              warnForDeletedHydratableText(parentInstance, instance);
            }
          }
        }
        function didNotFindHydratableContainerInstance(parentContainer, type, props) {
          {
            warnForInsertedHydratedElement(parentContainer, type, props);
          }
        }
        function didNotFindHydratableContainerTextInstance(parentContainer, text) {
          {
            warnForInsertedHydratedText(parentContainer, text);
          }
        }
        function didNotFindHydratableInstance(parentType, parentProps, parentInstance, type, props) {
          if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {
            warnForInsertedHydratedElement(parentInstance, type, props);
          }
        }
        function didNotFindHydratableTextInstance(parentType, parentProps, parentInstance, text) {
          if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {
            warnForInsertedHydratedText(parentInstance, text);
          }
        }
        var reactEmoji = '\u269B';
        var warningEmoji = '\u26D4';
        var supportsUserTiming = typeof performance !== 'undefined' && typeof performance.mark === 'function' && typeof performance.clearMarks === 'function' && typeof performance.measure === 'function' && typeof performance.clearMeasures === 'function';
        var currentFiber = null;
        var currentPhase = null;
        var currentPhaseFiber = null;
        var isCommitting = false;
        var hasScheduledUpdateInCurrentCommit = false;
        var hasScheduledUpdateInCurrentPhase = false;
        var commitCountInCurrentWorkLoop = 0;
        var effectCountInCurrentCommit = 0;
        var isWaitingForCallback = false;
        var labelsInCurrentCommit = new Set();
        var formatMarkName = function (markName) {
          return reactEmoji + ' ' + markName;
        };
        var formatLabel = function (label, warning) {
          var prefix = warning ? warningEmoji + ' ' : reactEmoji + ' ';
          var suffix = warning ? ' Warning: ' + warning : '';
          return '' + prefix + label + suffix;
        };
        var beginMark = function (markName) {
          performance.mark(formatMarkName(markName));
        };
        var clearMark = function (markName) {
          performance.clearMarks(formatMarkName(markName));
        };
        var endMark = function (label, markName, warning) {
          var formattedMarkName = formatMarkName(markName);
          var formattedLabel = formatLabel(label, warning);
          try {
            performance.measure(formattedLabel, formattedMarkName);
          } catch (err) {}
          performance.clearMarks(formattedMarkName);
          performance.clearMeasures(formattedLabel);
        };
        var getFiberMarkName = function (label, debugID) {
          return label + ' (#' + debugID + ')';
        };
        var getFiberLabel = function (componentName, isMounted, phase) {
          if (phase === null) {
            return componentName + ' [' + (isMounted ? 'update' : 'mount') + ']';
          } else {
            return componentName + '.' + phase;
          }
        };
        var beginFiberMark = function (fiber, phase) {
          var componentName = getComponentName(fiber.type) || 'Unknown';
          var debugID = fiber._debugID;
          var isMounted = fiber.alternate !== null;
          var label = getFiberLabel(componentName, isMounted, phase);
          if (isCommitting && labelsInCurrentCommit.has(label)) {
            return false;
          }
          labelsInCurrentCommit.add(label);
          var markName = getFiberMarkName(label, debugID);
          beginMark(markName);
          return true;
        };
        var clearFiberMark = function (fiber, phase) {
          var componentName = getComponentName(fiber.type) || 'Unknown';
          var debugID = fiber._debugID;
          var isMounted = fiber.alternate !== null;
          var label = getFiberLabel(componentName, isMounted, phase);
          var markName = getFiberMarkName(label, debugID);
          clearMark(markName);
        };
        var endFiberMark = function (fiber, phase, warning) {
          var componentName = getComponentName(fiber.type) || 'Unknown';
          var debugID = fiber._debugID;
          var isMounted = fiber.alternate !== null;
          var label = getFiberLabel(componentName, isMounted, phase);
          var markName = getFiberMarkName(label, debugID);
          endMark(label, markName, warning);
        };
        var shouldIgnoreFiber = function (fiber) {
          switch (fiber.tag) {
            case HostRoot:
            case HostComponent:
            case HostText:
            case HostPortal:
            case Fragment:
            case ContextProvider:
            case ContextConsumer:
            case Mode:
              return true;
            default:
              return false;
          }
        };
        var clearPendingPhaseMeasurement = function () {
          if (currentPhase !== null && currentPhaseFiber !== null) {
            clearFiberMark(currentPhaseFiber, currentPhase);
          }
          currentPhaseFiber = null;
          currentPhase = null;
          hasScheduledUpdateInCurrentPhase = false;
        };
        var pauseTimers = function () {
          var fiber = currentFiber;
          while (fiber) {
            if (fiber._debugIsCurrentlyTiming) {
              endFiberMark(fiber, null, null);
            }
            fiber = fiber.return;
          }
        };
        var resumeTimersRecursively = function (fiber) {
          if (fiber.return !== null) {
            resumeTimersRecursively(fiber.return);
          }
          if (fiber._debugIsCurrentlyTiming) {
            beginFiberMark(fiber, null);
          }
        };
        var resumeTimers = function () {
          if (currentFiber !== null) {
            resumeTimersRecursively(currentFiber);
          }
        };
        function recordEffect() {
          if (enableUserTimingAPI) {
            effectCountInCurrentCommit++;
          }
        }
        function recordScheduleUpdate() {
          if (enableUserTimingAPI) {
            if (isCommitting) {
              hasScheduledUpdateInCurrentCommit = true;
            }
            if (currentPhase !== null && currentPhase !== 'componentWillMount' && currentPhase !== 'componentWillReceiveProps') {
              hasScheduledUpdateInCurrentPhase = true;
            }
          }
        }
        function startRequestCallbackTimer() {
          if (enableUserTimingAPI) {
            if (supportsUserTiming && !isWaitingForCallback) {
              isWaitingForCallback = true;
              beginMark('(Waiting for async callback...)');
            }
          }
        }
        function stopRequestCallbackTimer(didExpire, expirationTime) {
          if (enableUserTimingAPI) {
            if (supportsUserTiming) {
              isWaitingForCallback = false;
              var warning = didExpire ? 'React was blocked by main thread' : null;
              endMark('(Waiting for async callback... will force flush in ' + expirationTime + ' ms)', '(Waiting for async callback...)', warning);
            }
          }
        }
        function startWorkTimer(fiber) {
          if (enableUserTimingAPI) {
            if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
              return;
            }
            currentFiber = fiber;
            if (!beginFiberMark(fiber, null)) {
              return;
            }
            fiber._debugIsCurrentlyTiming = true;
          }
        }
        function cancelWorkTimer(fiber) {
          if (enableUserTimingAPI) {
            if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
              return;
            }
            fiber._debugIsCurrentlyTiming = false;
            clearFiberMark(fiber, null);
          }
        }
        function stopWorkTimer(fiber) {
          if (enableUserTimingAPI) {
            if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
              return;
            }
            currentFiber = fiber.return;
            if (!fiber._debugIsCurrentlyTiming) {
              return;
            }
            fiber._debugIsCurrentlyTiming = false;
            endFiberMark(fiber, null, null);
          }
        }
        function stopFailedWorkTimer(fiber) {
          if (enableUserTimingAPI) {
            if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
              return;
            }
            currentFiber = fiber.return;
            if (!fiber._debugIsCurrentlyTiming) {
              return;
            }
            fiber._debugIsCurrentlyTiming = false;
            var warning = fiber.tag === SuspenseComponent ? 'Rendering was suspended' : 'An error was thrown inside this error boundary';
            endFiberMark(fiber, null, warning);
          }
        }
        function startPhaseTimer(fiber, phase) {
          if (enableUserTimingAPI) {
            if (!supportsUserTiming) {
              return;
            }
            clearPendingPhaseMeasurement();
            if (!beginFiberMark(fiber, phase)) {
              return;
            }
            currentPhaseFiber = fiber;
            currentPhase = phase;
          }
        }
        function stopPhaseTimer() {
          if (enableUserTimingAPI) {
            if (!supportsUserTiming) {
              return;
            }
            if (currentPhase !== null && currentPhaseFiber !== null) {
              var warning = hasScheduledUpdateInCurrentPhase ? 'Scheduled a cascading update' : null;
              endFiberMark(currentPhaseFiber, currentPhase, warning);
            }
            currentPhase = null;
            currentPhaseFiber = null;
          }
        }
        function startWorkLoopTimer(nextUnitOfWork) {
          if (enableUserTimingAPI) {
            currentFiber = nextUnitOfWork;
            if (!supportsUserTiming) {
              return;
            }
            commitCountInCurrentWorkLoop = 0;
            beginMark('(React Tree Reconciliation)');
            resumeTimers();
          }
        }
        function stopWorkLoopTimer(interruptedBy, didCompleteRoot) {
          if (enableUserTimingAPI) {
            if (!supportsUserTiming) {
              return;
            }
            var warning = null;
            if (interruptedBy !== null) {
              if (interruptedBy.tag === HostRoot) {
                warning = 'A top-level update interrupted the previous render';
              } else {
                var componentName = getComponentName(interruptedBy.type) || 'Unknown';
                warning = 'An update to ' + componentName + ' interrupted the previous render';
              }
            } else if (commitCountInCurrentWorkLoop > 1) {
              warning = 'There were cascading updates';
            }
            commitCountInCurrentWorkLoop = 0;
            var label = didCompleteRoot ? '(React Tree Reconciliation: Completed Root)' : '(React Tree Reconciliation: Yielded)';
            pauseTimers();
            endMark(label, '(React Tree Reconciliation)', warning);
          }
        }
        function startCommitTimer() {
          if (enableUserTimingAPI) {
            if (!supportsUserTiming) {
              return;
            }
            isCommitting = true;
            hasScheduledUpdateInCurrentCommit = false;
            labelsInCurrentCommit.clear();
            beginMark('(Committing Changes)');
          }
        }
        function stopCommitTimer() {
          if (enableUserTimingAPI) {
            if (!supportsUserTiming) {
              return;
            }
            var warning = null;
            if (hasScheduledUpdateInCurrentCommit) {
              warning = 'Lifecycle hook scheduled a cascading update';
            } else if (commitCountInCurrentWorkLoop > 0) {
              warning = 'Caused by a cascading update in earlier commit';
            }
            hasScheduledUpdateInCurrentCommit = false;
            commitCountInCurrentWorkLoop++;
            isCommitting = false;
            labelsInCurrentCommit.clear();
            endMark('(Committing Changes)', '(Committing Changes)', warning);
          }
        }
        function startCommitSnapshotEffectsTimer() {
          if (enableUserTimingAPI) {
            if (!supportsUserTiming) {
              return;
            }
            effectCountInCurrentCommit = 0;
            beginMark('(Committing Snapshot Effects)');
          }
        }
        function stopCommitSnapshotEffectsTimer() {
          if (enableUserTimingAPI) {
            if (!supportsUserTiming) {
              return;
            }
            var count = effectCountInCurrentCommit;
            effectCountInCurrentCommit = 0;
            endMark('(Committing Snapshot Effects: ' + count + ' Total)', '(Committing Snapshot Effects)', null);
          }
        }
        function startCommitHostEffectsTimer() {
          if (enableUserTimingAPI) {
            if (!supportsUserTiming) {
              return;
            }
            effectCountInCurrentCommit = 0;
            beginMark('(Committing Host Effects)');
          }
        }
        function stopCommitHostEffectsTimer() {
          if (enableUserTimingAPI) {
            if (!supportsUserTiming) {
              return;
            }
            var count = effectCountInCurrentCommit;
            effectCountInCurrentCommit = 0;
            endMark('(Committing Host Effects: ' + count + ' Total)', '(Committing Host Effects)', null);
          }
        }
        function startCommitLifeCyclesTimer() {
          if (enableUserTimingAPI) {
            if (!supportsUserTiming) {
              return;
            }
            effectCountInCurrentCommit = 0;
            beginMark('(Calling Lifecycle Methods)');
          }
        }
        function stopCommitLifeCyclesTimer() {
          if (enableUserTimingAPI) {
            if (!supportsUserTiming) {
              return;
            }
            var count = effectCountInCurrentCommit;
            effectCountInCurrentCommit = 0;
            endMark('(Calling Lifecycle Methods: ' + count + ' Total)', '(Calling Lifecycle Methods)', null);
          }
        }
        var valueStack = [];
        var fiberStack = void 0;
        {
          fiberStack = [];
        }
        var index = -1;
        function createCursor(defaultValue) {
          return { current: defaultValue };
        }
        function pop(cursor, fiber) {
          if (index < 0) {
            {
              warningWithoutStack$1(false, 'Unexpected pop.');
            }
            return;
          }
          {
            if (fiber !== fiberStack[index]) {
              warningWithoutStack$1(false, 'Unexpected Fiber popped.');
            }
          }
          cursor.current = valueStack[index];
          valueStack[index] = null;
          {
            fiberStack[index] = null;
          }
          index--;
        }
        function push(cursor, value, fiber) {
          index++;
          valueStack[index] = cursor.current;
          {
            fiberStack[index] = fiber;
          }
          cursor.current = value;
        }
        function checkThatStackIsEmpty() {
          {
            if (index !== -1) {
              warningWithoutStack$1(false, 'Expected an empty stack. Something was not reset properly.');
            }
          }
        }
        function resetStackAfterFatalErrorInDev() {
          {
            index = -1;
            valueStack.length = 0;
            fiberStack.length = 0;
          }
        }
        var warnedAboutMissingGetChildContext = void 0;
        {
          warnedAboutMissingGetChildContext = {};
        }
        var emptyContextObject = {};
        {
          Object.freeze(emptyContextObject);
        }
        var contextStackCursor = createCursor(emptyContextObject);
        var didPerformWorkStackCursor = createCursor(false);
        var previousContext = emptyContextObject;
        function getUnmaskedContext(workInProgress, Component, didPushOwnContextIfProvider) {
          if (didPushOwnContextIfProvider && isContextProvider(Component)) {
            return previousContext;
          }
          return contextStackCursor.current;
        }
        function cacheContext(workInProgress, unmaskedContext, maskedContext) {
          var instance = workInProgress.stateNode;
          instance.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext;
          instance.__reactInternalMemoizedMaskedChildContext = maskedContext;
        }
        function getMaskedContext(workInProgress, unmaskedContext) {
          var type = workInProgress.type;
          var contextTypes = type.contextTypes;
          if (!contextTypes) {
            return emptyContextObject;
          }
          var instance = workInProgress.stateNode;
          if (instance && instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext) {
            return instance.__reactInternalMemoizedMaskedChildContext;
          }
          var context = {};
          for (var key in contextTypes) {
            context[key] = unmaskedContext[key];
          }
          {
            var name = getComponentName(type) || 'Unknown';
            checkPropTypes(contextTypes, context, 'context', name, getCurrentFiberStackInDev);
          }
          if (instance) {
            cacheContext(workInProgress, unmaskedContext, context);
          }
          return context;
        }
        function hasContextChanged() {
          return didPerformWorkStackCursor.current;
        }
        function isContextProvider(type) {
          var childContextTypes = type.childContextTypes;
          return childContextTypes !== null && childContextTypes !== undefined;
        }
        function popContext(fiber) {
          pop(didPerformWorkStackCursor, fiber);
          pop(contextStackCursor, fiber);
        }
        function popTopLevelContextObject(fiber) {
          pop(didPerformWorkStackCursor, fiber);
          pop(contextStackCursor, fiber);
        }
        function pushTopLevelContextObject(fiber, context, didChange) {
          !(contextStackCursor.current === emptyContextObject) ? invariant(false, 'Unexpected context found on stack. This error is likely caused by a bug in React. Please file an issue.') : void 0;
          push(contextStackCursor, context, fiber);
          push(didPerformWorkStackCursor, didChange, fiber);
        }
        function processChildContext(fiber, type, parentContext) {
          var instance = fiber.stateNode;
          var childContextTypes = type.childContextTypes;
          if (typeof instance.getChildContext !== 'function') {
            {
              var componentName = getComponentName(type) || 'Unknown';
              if (!warnedAboutMissingGetChildContext[componentName]) {
                warnedAboutMissingGetChildContext[componentName] = true;
                warningWithoutStack$1(false, '%s.childContextTypes is specified but there is no getChildContext() method ' + 'on the instance. You can either define getChildContext() on %s or remove ' + 'childContextTypes from it.', componentName, componentName);
              }
            }
            return parentContext;
          }
          var childContext = void 0;
          {
            setCurrentPhase('getChildContext');
          }
          startPhaseTimer(fiber, 'getChildContext');
          childContext = instance.getChildContext();
          stopPhaseTimer();
          {
            setCurrentPhase(null);
          }
          for (var contextKey in childContext) {
            !(contextKey in childContextTypes) ? invariant(false, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', getComponentName(type) || 'Unknown', contextKey) : void 0;
          }
          {
            var name = getComponentName(type) || 'Unknown';
            checkPropTypes(childContextTypes, childContext, 'child context', name, getCurrentFiberStackInDev);
          }
          return _assign({}, parentContext, childContext);
        }
        function pushContextProvider(workInProgress) {
          var instance = workInProgress.stateNode;
          var memoizedMergedChildContext = instance && instance.__reactInternalMemoizedMergedChildContext || emptyContextObject;
          previousContext = contextStackCursor.current;
          push(contextStackCursor, memoizedMergedChildContext, workInProgress);
          push(didPerformWorkStackCursor, didPerformWorkStackCursor.current, workInProgress);
          return true;
        }
        function invalidateContextProvider(workInProgress, type, didChange) {
          var instance = workInProgress.stateNode;
          !instance ? invariant(false, 'Expected to have an instance by this point. This error is likely caused by a bug in React. Please file an issue.') : void 0;
          if (didChange) {
            var mergedContext = processChildContext(workInProgress, type, previousContext);
            instance.__reactInternalMemoizedMergedChildContext = mergedContext;
            pop(didPerformWorkStackCursor, workInProgress);
            pop(contextStackCursor, workInProgress);
            push(contextStackCursor, mergedContext, workInProgress);
            push(didPerformWorkStackCursor, didChange, workInProgress);
          } else {
            pop(didPerformWorkStackCursor, workInProgress);
            push(didPerformWorkStackCursor, didChange, workInProgress);
          }
        }
        function findCurrentUnmaskedContext(fiber) {
          !(isFiberMounted(fiber) && fiber.tag === ClassComponent) ? invariant(false, 'Expected subtree parent to be a mounted class component. This error is likely caused by a bug in React. Please file an issue.') : void 0;
          var node = fiber;
          do {
            switch (node.tag) {
              case HostRoot:
                return node.stateNode.context;
              case ClassComponent:
                {
                  var Component = node.type;
                  if (isContextProvider(Component)) {
                    return node.stateNode.__reactInternalMemoizedMergedChildContext;
                  }
                  break;
                }
            }
            node = node.return;
          } while (node !== null);
          invariant(false, 'Found unexpected detached subtree parent. This error is likely caused by a bug in React. Please file an issue.');
        }
        var onCommitFiberRoot = null;
        var onCommitFiberUnmount = null;
        var hasLoggedError = false;
        function catchErrors(fn) {
          return function (arg) {
            try {
              return fn(arg);
            } catch (err) {
              if (true && !hasLoggedError) {
                hasLoggedError = true;
                warningWithoutStack$1(false, 'React DevTools encountered an error: %s', err);
              }
            }
          };
        }
        var isDevToolsPresent = typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined';
        function injectInternals(internals) {
          if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
            return false;
          }
          var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;
          if (hook.isDisabled) {
            return true;
          }
          if (!hook.supportsFiber) {
            {
              warningWithoutStack$1(false, 'The installed version of React DevTools is too old and will not work ' + 'with the current version of React. Please update React DevTools. ' + 'https://fb.me/react-devtools');
            }
            return true;
          }
          try {
            var rendererID = hook.inject(internals);
            onCommitFiberRoot = catchErrors(function (root) {
              return hook.onCommitFiberRoot(rendererID, root);
            });
            onCommitFiberUnmount = catchErrors(function (fiber) {
              return hook.onCommitFiberUnmount(rendererID, fiber);
            });
          } catch (err) {
            {
              warningWithoutStack$1(false, 'React DevTools encountered an error: %s.', err);
            }
          }
          return true;
        }
        function onCommitRoot(root) {
          if (typeof onCommitFiberRoot === 'function') {
            onCommitFiberRoot(root);
          }
        }
        function onCommitUnmount(fiber) {
          if (typeof onCommitFiberUnmount === 'function') {
            onCommitFiberUnmount(fiber);
          }
        }
        var maxSigned31BitInt = 1073741823;
        var NoWork = 0;
        var Never = 1;
        var Sync = maxSigned31BitInt;
        var UNIT_SIZE = 10;
        var MAGIC_NUMBER_OFFSET = maxSigned31BitInt - 1;
        function msToExpirationTime(ms) {
          return MAGIC_NUMBER_OFFSET - (ms / UNIT_SIZE | 0);
        }
        function expirationTimeToMs(expirationTime) {
          return (MAGIC_NUMBER_OFFSET - expirationTime) * UNIT_SIZE;
        }
        function ceiling(num, precision) {
          return ((num / precision | 0) + 1) * precision;
        }
        function computeExpirationBucket(currentTime, expirationInMs, bucketSizeMs) {
          return MAGIC_NUMBER_OFFSET - ceiling(MAGIC_NUMBER_OFFSET - currentTime + expirationInMs / UNIT_SIZE, bucketSizeMs / UNIT_SIZE);
        }
        var LOW_PRIORITY_EXPIRATION = 5000;
        var LOW_PRIORITY_BATCH_SIZE = 250;
        function computeAsyncExpiration(currentTime) {
          return computeExpirationBucket(currentTime, LOW_PRIORITY_EXPIRATION, LOW_PRIORITY_BATCH_SIZE);
        }
        var HIGH_PRIORITY_EXPIRATION = 500;
        var HIGH_PRIORITY_BATCH_SIZE = 100;
        function computeInteractiveExpiration(currentTime) {
          return computeExpirationBucket(currentTime, HIGH_PRIORITY_EXPIRATION, HIGH_PRIORITY_BATCH_SIZE);
        }
        var NoContext = 0;
        var ConcurrentMode = 1;
        var StrictMode = 2;
        var ProfileMode = 4;
        var hasBadMapPolyfill = void 0;
        {
          hasBadMapPolyfill = false;
          try {
            var nonExtensibleObject = Object.preventExtensions({});
            var testMap = new Map([[nonExtensibleObject, null]]);
            var testSet = new Set([nonExtensibleObject]);
            testMap.set(0, 0);
            testSet.add(0);
          } catch (e) {
            hasBadMapPolyfill = true;
          }
        }
        var debugCounter = void 0;
        {
          debugCounter = 1;
        }
        function FiberNode(tag, pendingProps, key, mode) {
          this.tag = tag;
          this.key = key;
          this.elementType = null;
          this.type = null;
          this.stateNode = null;
          this.return = null;
          this.child = null;
          this.sibling = null;
          this.index = 0;
          this.ref = null;
          this.pendingProps = pendingProps;
          this.memoizedProps = null;
          this.updateQueue = null;
          this.memoizedState = null;
          this.firstContextDependency = null;
          this.mode = mode;
          this.effectTag = NoEffect;
          this.nextEffect = null;
          this.firstEffect = null;
          this.lastEffect = null;
          this.expirationTime = NoWork;
          this.childExpirationTime = NoWork;
          this.alternate = null;
          if (enableProfilerTimer) {
            this.actualDuration = Number.NaN;
            this.actualStartTime = Number.NaN;
            this.selfBaseDuration = Number.NaN;
            this.treeBaseDuration = Number.NaN;
            this.actualDuration = 0;
            this.actualStartTime = -1;
            this.selfBaseDuration = 0;
            this.treeBaseDuration = 0;
          }
          {
            this._debugID = debugCounter++;
            this._debugSource = null;
            this._debugOwner = null;
            this._debugIsCurrentlyTiming = false;
            if (!hasBadMapPolyfill && typeof Object.preventExtensions === 'function') {
              Object.preventExtensions(this);
            }
          }
        }
        var createFiber = function (tag, pendingProps, key, mode) {
          return new FiberNode(tag, pendingProps, key, mode);
        };
        function shouldConstruct(Component) {
          var prototype = Component.prototype;
          return !!(prototype && prototype.isReactComponent);
        }
        function isSimpleFunctionComponent(type) {
          return typeof type === 'function' && !shouldConstruct(type) && type.defaultProps === undefined;
        }
        function resolveLazyComponentTag(Component) {
          if (typeof Component === 'function') {
            return shouldConstruct(Component) ? ClassComponent : FunctionComponent;
          } else if (Component !== undefined && Component !== null) {
            var $$typeof = Component.$$typeof;
            if ($$typeof === REACT_FORWARD_REF_TYPE) {
              return ForwardRef;
            }
            if ($$typeof === REACT_MEMO_TYPE) {
              return MemoComponent;
            }
          }
          return IndeterminateComponent;
        }
        function createWorkInProgress(current, pendingProps, expirationTime) {
          var workInProgress = current.alternate;
          if (workInProgress === null) {
            workInProgress = createFiber(current.tag, pendingProps, current.key, current.mode);
            workInProgress.elementType = current.elementType;
            workInProgress.type = current.type;
            workInProgress.stateNode = current.stateNode;
            {
              workInProgress._debugID = current._debugID;
              workInProgress._debugSource = current._debugSource;
              workInProgress._debugOwner = current._debugOwner;
            }
            workInProgress.alternate = current;
            current.alternate = workInProgress;
          } else {
            workInProgress.pendingProps = pendingProps;
            workInProgress.effectTag = NoEffect;
            workInProgress.nextEffect = null;
            workInProgress.firstEffect = null;
            workInProgress.lastEffect = null;
            if (enableProfilerTimer) {
              workInProgress.actualDuration = 0;
              workInProgress.actualStartTime = -1;
            }
          }
          workInProgress.childExpirationTime = current.childExpirationTime;
          workInProgress.expirationTime = current.expirationTime;
          workInProgress.child = current.child;
          workInProgress.memoizedProps = current.memoizedProps;
          workInProgress.memoizedState = current.memoizedState;
          workInProgress.updateQueue = current.updateQueue;
          workInProgress.firstContextDependency = current.firstContextDependency;
          workInProgress.sibling = current.sibling;
          workInProgress.index = current.index;
          workInProgress.ref = current.ref;
          if (enableProfilerTimer) {
            workInProgress.selfBaseDuration = current.selfBaseDuration;
            workInProgress.treeBaseDuration = current.treeBaseDuration;
          }
          return workInProgress;
        }
        function createHostRootFiber(isConcurrent) {
          var mode = isConcurrent ? ConcurrentMode | StrictMode : NoContext;
          if (enableProfilerTimer && isDevToolsPresent) {
            mode |= ProfileMode;
          }
          return createFiber(HostRoot, null, null, mode);
        }
        function createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, expirationTime) {
          var fiber = void 0;
          var fiberTag = IndeterminateComponent;
          var resolvedType = type;
          if (typeof type === 'function') {
            if (shouldConstruct(type)) {
              fiberTag = ClassComponent;
            }
          } else if (typeof type === 'string') {
            fiberTag = HostComponent;
          } else {
            getTag: switch (type) {
              case REACT_FRAGMENT_TYPE:
                return createFiberFromFragment(pendingProps.children, mode, expirationTime, key);
              case REACT_CONCURRENT_MODE_TYPE:
                return createFiberFromMode(pendingProps, mode | ConcurrentMode | StrictMode, expirationTime, key);
              case REACT_STRICT_MODE_TYPE:
                return createFiberFromMode(pendingProps, mode | StrictMode, expirationTime, key);
              case REACT_PROFILER_TYPE:
                return createFiberFromProfiler(pendingProps, mode, expirationTime, key);
              case REACT_SUSPENSE_TYPE:
                return createFiberFromSuspense(pendingProps, mode, expirationTime, key);
              default:
                {
                  if (typeof type === 'object' && type !== null) {
                    switch (type.$$typeof) {
                      case REACT_PROVIDER_TYPE:
                        fiberTag = ContextProvider;
                        break getTag;
                      case REACT_CONTEXT_TYPE:
                        fiberTag = ContextConsumer;
                        break getTag;
                      case REACT_FORWARD_REF_TYPE:
                        fiberTag = ForwardRef;
                        break getTag;
                      case REACT_MEMO_TYPE:
                        fiberTag = MemoComponent;
                        break getTag;
                      case REACT_LAZY_TYPE:
                        fiberTag = LazyComponent;
                        resolvedType = null;
                        break getTag;
                    }
                  }
                  var info = '';
                  {
                    if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
                      info += ' You likely forgot to export your component from the file ' + "it's defined in, or you might have mixed up default and " + 'named imports.';
                    }
                    var ownerName = owner ? getComponentName(owner.type) : null;
                    if (ownerName) {
                      info += '\n\nCheck the render method of `' + ownerName + '`.';
                    }
                  }
                  invariant(false, 'Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s', type == null ? type : typeof type, info);
                }
            }
          }
          fiber = createFiber(fiberTag, pendingProps, key, mode);
          fiber.elementType = type;
          fiber.type = resolvedType;
          fiber.expirationTime = expirationTime;
          return fiber;
        }
        function createFiberFromElement(element, mode, expirationTime) {
          var owner = null;
          {
            owner = element._owner;
          }
          var type = element.type;
          var key = element.key;
          var pendingProps = element.props;
          var fiber = createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, expirationTime);
          {
            fiber._debugSource = element._source;
            fiber._debugOwner = element._owner;
          }
          return fiber;
        }
        function createFiberFromFragment(elements, mode, expirationTime, key) {
          var fiber = createFiber(Fragment, elements, key, mode);
          fiber.expirationTime = expirationTime;
          return fiber;
        }
        function createFiberFromProfiler(pendingProps, mode, expirationTime, key) {
          {
            if (typeof pendingProps.id !== 'string' || typeof pendingProps.onRender !== 'function') {
              warningWithoutStack$1(false, 'Profiler must specify an "id" string and "onRender" function as props');
            }
          }
          var fiber = createFiber(Profiler, pendingProps, key, mode | ProfileMode);
          fiber.elementType = REACT_PROFILER_TYPE;
          fiber.type = REACT_PROFILER_TYPE;
          fiber.expirationTime = expirationTime;
          return fiber;
        }
        function createFiberFromMode(pendingProps, mode, expirationTime, key) {
          var fiber = createFiber(Mode, pendingProps, key, mode);
          var type = (mode & ConcurrentMode) === NoContext ? REACT_STRICT_MODE_TYPE : REACT_CONCURRENT_MODE_TYPE;
          fiber.elementType = type;
          fiber.type = type;
          fiber.expirationTime = expirationTime;
          return fiber;
        }
        function createFiberFromSuspense(pendingProps, mode, expirationTime, key) {
          var fiber = createFiber(SuspenseComponent, pendingProps, key, mode);
          var type = REACT_SUSPENSE_TYPE;
          fiber.elementType = type;
          fiber.type = type;
          fiber.expirationTime = expirationTime;
          return fiber;
        }
        function createFiberFromText(content, mode, expirationTime) {
          var fiber = createFiber(HostText, content, null, mode);
          fiber.expirationTime = expirationTime;
          return fiber;
        }
        function createFiberFromHostInstanceForDeletion() {
          var fiber = createFiber(HostComponent, null, null, NoContext);
          fiber.elementType = 'DELETED';
          fiber.type = 'DELETED';
          return fiber;
        }
        function createFiberFromPortal(portal, mode, expirationTime) {
          var pendingProps = portal.children !== null ? portal.children : [];
          var fiber = createFiber(HostPortal, pendingProps, portal.key, mode);
          fiber.expirationTime = expirationTime;
          fiber.stateNode = {
            containerInfo: portal.containerInfo,
            pendingChildren: null,
            implementation: portal.implementation
          };
          return fiber;
        }
        function assignFiberPropertiesInDEV(target, source) {
          if (target === null) {
            target = createFiber(IndeterminateComponent, null, null, NoContext);
          }
          target.tag = source.tag;
          target.key = source.key;
          target.elementType = source.elementType;
          target.type = source.type;
          target.stateNode = source.stateNode;
          target.return = source.return;
          target.child = source.child;
          target.sibling = source.sibling;
          target.index = source.index;
          target.ref = source.ref;
          target.pendingProps = source.pendingProps;
          target.memoizedProps = source.memoizedProps;
          target.updateQueue = source.updateQueue;
          target.memoizedState = source.memoizedState;
          target.firstContextDependency = source.firstContextDependency;
          target.mode = source.mode;
          target.effectTag = source.effectTag;
          target.nextEffect = source.nextEffect;
          target.firstEffect = source.firstEffect;
          target.lastEffect = source.lastEffect;
          target.expirationTime = source.expirationTime;
          target.childExpirationTime = source.childExpirationTime;
          target.alternate = source.alternate;
          if (enableProfilerTimer) {
            target.actualDuration = source.actualDuration;
            target.actualStartTime = source.actualStartTime;
            target.selfBaseDuration = source.selfBaseDuration;
            target.treeBaseDuration = source.treeBaseDuration;
          }
          target._debugID = source._debugID;
          target._debugSource = source._debugSource;
          target._debugOwner = source._debugOwner;
          target._debugIsCurrentlyTiming = source._debugIsCurrentlyTiming;
          return target;
        }
        function createFiberRoot(containerInfo, isConcurrent, hydrate) {
          var uninitializedFiber = createHostRootFiber(isConcurrent);
          var root = void 0;
          if (enableSchedulerTracing) {
            root = {
              current: uninitializedFiber,
              containerInfo: containerInfo,
              pendingChildren: null,
              earliestPendingTime: NoWork,
              latestPendingTime: NoWork,
              earliestSuspendedTime: NoWork,
              latestSuspendedTime: NoWork,
              latestPingedTime: NoWork,
              pingCache: null,
              didError: false,
              pendingCommitExpirationTime: NoWork,
              finishedWork: null,
              timeoutHandle: noTimeout,
              context: null,
              pendingContext: null,
              hydrate: hydrate,
              nextExpirationTimeToWorkOn: NoWork,
              expirationTime: NoWork,
              firstBatch: null,
              nextScheduledRoot: null,
              interactionThreadID: tracing.unstable_getThreadID(),
              memoizedInteractions: new Set(),
              pendingInteractionMap: new Map()
            };
          } else {
            root = {
              current: uninitializedFiber,
              containerInfo: containerInfo,
              pendingChildren: null,
              pingCache: null,
              earliestPendingTime: NoWork,
              latestPendingTime: NoWork,
              earliestSuspendedTime: NoWork,
              latestSuspendedTime: NoWork,
              latestPingedTime: NoWork,
              didError: false,
              pendingCommitExpirationTime: NoWork,
              finishedWork: null,
              timeoutHandle: noTimeout,
              context: null,
              pendingContext: null,
              hydrate: hydrate,
              nextExpirationTimeToWorkOn: NoWork,
              expirationTime: NoWork,
              firstBatch: null,
              nextScheduledRoot: null
            };
          }
          uninitializedFiber.stateNode = root;
          return root;
        }
        var lowPriorityWarning = function () {};
        {
          var printWarning = function (format) {
            for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
              args[_key - 1] = arguments[_key];
            }
            var argIndex = 0;
            var message = 'Warning: ' + format.replace(/%s/g, function () {
              return args[argIndex++];
            });
            if (typeof console !== 'undefined') {
              console.warn(message);
            }
            try {
              throw new Error(message);
            } catch (x) {}
          };
          lowPriorityWarning = function (condition, format) {
            if (format === undefined) {
              throw new Error('`lowPriorityWarning(condition, format, ...args)` requires a warning ' + 'message argument');
            }
            if (!condition) {
              for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
                args[_key2 - 2] = arguments[_key2];
              }
              printWarning.apply(undefined, [format].concat(args));
            }
          };
        }
        var lowPriorityWarning$1 = lowPriorityWarning;
        var ReactStrictModeWarnings = {
          discardPendingWarnings: function () {},
          flushPendingDeprecationWarnings: function () {},
          flushPendingUnsafeLifecycleWarnings: function () {},
          recordDeprecationWarnings: function (fiber, instance) {},
          recordUnsafeLifecycleWarnings: function (fiber, instance) {},
          recordLegacyContextWarning: function (fiber, instance) {},
          flushLegacyContextWarning: function () {}
        };
        {
          var LIFECYCLE_SUGGESTIONS = {
            UNSAFE_componentWillMount: 'componentDidMount',
            UNSAFE_componentWillReceiveProps: 'static getDerivedStateFromProps',
            UNSAFE_componentWillUpdate: 'componentDidUpdate'
          };
          var pendingComponentWillMountWarnings = [];
          var pendingComponentWillReceivePropsWarnings = [];
          var pendingComponentWillUpdateWarnings = [];
          var pendingUnsafeLifecycleWarnings = new Map();
          var pendingLegacyContextWarning = new Map();
          var didWarnAboutDeprecatedLifecycles = new Set();
          var didWarnAboutUnsafeLifecycles = new Set();
          var didWarnAboutLegacyContext = new Set();
          var setToSortedString = function (set) {
            var array = [];
            set.forEach(function (value) {
              array.push(value);
            });
            return array.sort().join(', ');
          };
          ReactStrictModeWarnings.discardPendingWarnings = function () {
            pendingComponentWillMountWarnings = [];
            pendingComponentWillReceivePropsWarnings = [];
            pendingComponentWillUpdateWarnings = [];
            pendingUnsafeLifecycleWarnings = new Map();
            pendingLegacyContextWarning = new Map();
          };
          ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings = function () {
            pendingUnsafeLifecycleWarnings.forEach(function (lifecycleWarningsMap, strictRoot) {
              var lifecyclesWarningMesages = [];
              Object.keys(lifecycleWarningsMap).forEach(function (lifecycle) {
                var lifecycleWarnings = lifecycleWarningsMap[lifecycle];
                if (lifecycleWarnings.length > 0) {
                  var componentNames = new Set();
                  lifecycleWarnings.forEach(function (fiber) {
                    componentNames.add(getComponentName(fiber.type) || 'Component');
                    didWarnAboutUnsafeLifecycles.add(fiber.type);
                  });
                  var formatted = lifecycle.replace('UNSAFE_', '');
                  var suggestion = LIFECYCLE_SUGGESTIONS[lifecycle];
                  var sortedComponentNames = setToSortedString(componentNames);
                  lifecyclesWarningMesages.push(formatted + ': Please update the following components to use ' + (suggestion + ' instead: ' + sortedComponentNames));
                }
              });
              if (lifecyclesWarningMesages.length > 0) {
                var strictRootComponentStack = getStackByFiberInDevAndProd(strictRoot);
                warningWithoutStack$1(false, 'Unsafe lifecycle methods were found within a strict-mode tree:%s' + '\n\n%s' + '\n\nLearn more about this warning here:' + '\nhttps://fb.me/react-strict-mode-warnings', strictRootComponentStack, lifecyclesWarningMesages.join('\n\n'));
              }
            });
            pendingUnsafeLifecycleWarnings = new Map();
          };
          var findStrictRoot = function (fiber) {
            var maybeStrictRoot = null;
            var node = fiber;
            while (node !== null) {
              if (node.mode & StrictMode) {
                maybeStrictRoot = node;
              }
              node = node.return;
            }
            return maybeStrictRoot;
          };
          ReactStrictModeWarnings.flushPendingDeprecationWarnings = function () {
            if (pendingComponentWillMountWarnings.length > 0) {
              var uniqueNames = new Set();
              pendingComponentWillMountWarnings.forEach(function (fiber) {
                uniqueNames.add(getComponentName(fiber.type) || 'Component');
                didWarnAboutDeprecatedLifecycles.add(fiber.type);
              });
              var sortedNames = setToSortedString(uniqueNames);
              lowPriorityWarning$1(false, 'componentWillMount is deprecated and will be removed in the next major version. ' + 'Use componentDidMount instead. As a temporary workaround, ' + 'you can rename to UNSAFE_componentWillMount.' + '\n\nPlease update the following components: %s' + '\n\nLearn more about this warning here:' + '\nhttps://fb.me/react-async-component-lifecycle-hooks', sortedNames);
              pendingComponentWillMountWarnings = [];
            }
            if (pendingComponentWillReceivePropsWarnings.length > 0) {
              var _uniqueNames = new Set();
              pendingComponentWillReceivePropsWarnings.forEach(function (fiber) {
                _uniqueNames.add(getComponentName(fiber.type) || 'Component');
                didWarnAboutDeprecatedLifecycles.add(fiber.type);
              });
              var _sortedNames = setToSortedString(_uniqueNames);
              lowPriorityWarning$1(false, 'componentWillReceiveProps is deprecated and will be removed in the next major version. ' + 'Use static getDerivedStateFromProps instead.' + '\n\nPlease update the following components: %s' + '\n\nLearn more about this warning here:' + '\nhttps://fb.me/react-async-component-lifecycle-hooks', _sortedNames);
              pendingComponentWillReceivePropsWarnings = [];
            }
            if (pendingComponentWillUpdateWarnings.length > 0) {
              var _uniqueNames2 = new Set();
              pendingComponentWillUpdateWarnings.forEach(function (fiber) {
                _uniqueNames2.add(getComponentName(fiber.type) || 'Component');
                didWarnAboutDeprecatedLifecycles.add(fiber.type);
              });
              var _sortedNames2 = setToSortedString(_uniqueNames2);
              lowPriorityWarning$1(false, 'componentWillUpdate is deprecated and will be removed in the next major version. ' + 'Use componentDidUpdate instead. As a temporary workaround, ' + 'you can rename to UNSAFE_componentWillUpdate.' + '\n\nPlease update the following components: %s' + '\n\nLearn more about this warning here:' + '\nhttps://fb.me/react-async-component-lifecycle-hooks', _sortedNames2);
              pendingComponentWillUpdateWarnings = [];
            }
          };
          ReactStrictModeWarnings.recordDeprecationWarnings = function (fiber, instance) {
            if (didWarnAboutDeprecatedLifecycles.has(fiber.type)) {
              return;
            }
            if (typeof instance.componentWillMount === 'function' && instance.componentWillMount.__suppressDeprecationWarning !== true) {
              pendingComponentWillMountWarnings.push(fiber);
            }
            if (typeof instance.componentWillReceiveProps === 'function' && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {
              pendingComponentWillReceivePropsWarnings.push(fiber);
            }
            if (typeof instance.componentWillUpdate === 'function' && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {
              pendingComponentWillUpdateWarnings.push(fiber);
            }
          };
          ReactStrictModeWarnings.recordUnsafeLifecycleWarnings = function (fiber, instance) {
            var strictRoot = findStrictRoot(fiber);
            if (strictRoot === null) {
              warningWithoutStack$1(false, 'Expected to find a StrictMode component in a strict mode tree. ' + 'This error is likely caused by a bug in React. Please file an issue.');
              return;
            }
            if (didWarnAboutUnsafeLifecycles.has(fiber.type)) {
              return;
            }
            var warningsForRoot = void 0;
            if (!pendingUnsafeLifecycleWarnings.has(strictRoot)) {
              warningsForRoot = {
                UNSAFE_componentWillMount: [],
                UNSAFE_componentWillReceiveProps: [],
                UNSAFE_componentWillUpdate: []
              };
              pendingUnsafeLifecycleWarnings.set(strictRoot, warningsForRoot);
            } else {
              warningsForRoot = pendingUnsafeLifecycleWarnings.get(strictRoot);
            }
            var unsafeLifecycles = [];
            if (typeof instance.componentWillMount === 'function' && instance.componentWillMount.__suppressDeprecationWarning !== true || typeof instance.UNSAFE_componentWillMount === 'function') {
              unsafeLifecycles.push('UNSAFE_componentWillMount');
            }
            if (typeof instance.componentWillReceiveProps === 'function' && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true || typeof instance.UNSAFE_componentWillReceiveProps === 'function') {
              unsafeLifecycles.push('UNSAFE_componentWillReceiveProps');
            }
            if (typeof instance.componentWillUpdate === 'function' && instance.componentWillUpdate.__suppressDeprecationWarning !== true || typeof instance.UNSAFE_componentWillUpdate === 'function') {
              unsafeLifecycles.push('UNSAFE_componentWillUpdate');
            }
            if (unsafeLifecycles.length > 0) {
              unsafeLifecycles.forEach(function (lifecycle) {
                warningsForRoot[lifecycle].push(fiber);
              });
            }
          };
          ReactStrictModeWarnings.recordLegacyContextWarning = function (fiber, instance) {
            var strictRoot = findStrictRoot(fiber);
            if (strictRoot === null) {
              warningWithoutStack$1(false, 'Expected to find a StrictMode component in a strict mode tree. ' + 'This error is likely caused by a bug in React. Please file an issue.');
              return;
            }
            if (didWarnAboutLegacyContext.has(fiber.type)) {
              return;
            }
            var warningsForRoot = pendingLegacyContextWarning.get(strictRoot);
            if (fiber.type.contextTypes != null || fiber.type.childContextTypes != null || instance !== null && typeof instance.getChildContext === 'function') {
              if (warningsForRoot === undefined) {
                warningsForRoot = [];
                pendingLegacyContextWarning.set(strictRoot, warningsForRoot);
              }
              warningsForRoot.push(fiber);
            }
          };
          ReactStrictModeWarnings.flushLegacyContextWarning = function () {
            pendingLegacyContextWarning.forEach(function (fiberArray, strictRoot) {
              var uniqueNames = new Set();
              fiberArray.forEach(function (fiber) {
                uniqueNames.add(getComponentName(fiber.type) || 'Component');
                didWarnAboutLegacyContext.add(fiber.type);
              });
              var sortedNames = setToSortedString(uniqueNames);
              var strictRootComponentStack = getStackByFiberInDevAndProd(strictRoot);
              warningWithoutStack$1(false, 'Legacy context API has been detected within a strict-mode tree: %s' + '\n\nPlease update the following components: %s' + '\n\nLearn more about this warning here:' + '\nhttps://fb.me/react-strict-mode-warnings', strictRootComponentStack, sortedNames);
            });
          };
        }
        var ReactFiberInstrumentation = { debugTool: null };
        var ReactFiberInstrumentation_1 = ReactFiberInstrumentation;
        function markPendingPriorityLevel(root, expirationTime) {
          root.didError = false;
          var earliestPendingTime = root.earliestPendingTime;
          if (earliestPendingTime === NoWork) {
            root.earliestPendingTime = root.latestPendingTime = expirationTime;
          } else {
            if (earliestPendingTime < expirationTime) {
              root.earliestPendingTime = expirationTime;
            } else {
              var latestPendingTime = root.latestPendingTime;
              if (latestPendingTime > expirationTime) {
                root.latestPendingTime = expirationTime;
              }
            }
          }
          findNextExpirationTimeToWorkOn(expirationTime, root);
        }
        function markCommittedPriorityLevels(root, earliestRemainingTime) {
          root.didError = false;
          if (earliestRemainingTime === NoWork) {
            root.earliestPendingTime = NoWork;
            root.latestPendingTime = NoWork;
            root.earliestSuspendedTime = NoWork;
            root.latestSuspendedTime = NoWork;
            root.latestPingedTime = NoWork;
            findNextExpirationTimeToWorkOn(NoWork, root);
            return;
          }
          if (earliestRemainingTime < root.latestPingedTime) {
            root.latestPingedTime = NoWork;
          }
          var latestPendingTime = root.latestPendingTime;
          if (latestPendingTime !== NoWork) {
            if (latestPendingTime > earliestRemainingTime) {
              root.earliestPendingTime = root.latestPendingTime = NoWork;
            } else {
              var earliestPendingTime = root.earliestPendingTime;
              if (earliestPendingTime > earliestRemainingTime) {
                root.earliestPendingTime = root.latestPendingTime;
              }
            }
          }
          var earliestSuspendedTime = root.earliestSuspendedTime;
          if (earliestSuspendedTime === NoWork) {
            markPendingPriorityLevel(root, earliestRemainingTime);
            findNextExpirationTimeToWorkOn(NoWork, root);
            return;
          }
          var latestSuspendedTime = root.latestSuspendedTime;
          if (earliestRemainingTime < latestSuspendedTime) {
            root.earliestSuspendedTime = NoWork;
            root.latestSuspendedTime = NoWork;
            root.latestPingedTime = NoWork;
            markPendingPriorityLevel(root, earliestRemainingTime);
            findNextExpirationTimeToWorkOn(NoWork, root);
            return;
          }
          if (earliestRemainingTime > earliestSuspendedTime) {
            markPendingPriorityLevel(root, earliestRemainingTime);
            findNextExpirationTimeToWorkOn(NoWork, root);
            return;
          }
          findNextExpirationTimeToWorkOn(NoWork, root);
        }
        function hasLowerPriorityWork(root, erroredExpirationTime) {
          var latestPendingTime = root.latestPendingTime;
          var latestSuspendedTime = root.latestSuspendedTime;
          var latestPingedTime = root.latestPingedTime;
          return latestPendingTime !== NoWork && latestPendingTime < erroredExpirationTime || latestSuspendedTime !== NoWork && latestSuspendedTime < erroredExpirationTime || latestPingedTime !== NoWork && latestPingedTime < erroredExpirationTime;
        }
        function isPriorityLevelSuspended(root, expirationTime) {
          var earliestSuspendedTime = root.earliestSuspendedTime;
          var latestSuspendedTime = root.latestSuspendedTime;
          return earliestSuspendedTime !== NoWork && expirationTime <= earliestSuspendedTime && expirationTime >= latestSuspendedTime;
        }
        function markSuspendedPriorityLevel(root, suspendedTime) {
          root.didError = false;
          clearPing(root, suspendedTime);
          var earliestPendingTime = root.earliestPendingTime;
          var latestPendingTime = root.latestPendingTime;
          if (earliestPendingTime === suspendedTime) {
            if (latestPendingTime === suspendedTime) {
              root.earliestPendingTime = root.latestPendingTime = NoWork;
            } else {
              root.earliestPendingTime = latestPendingTime;
            }
          } else if (latestPendingTime === suspendedTime) {
            root.latestPendingTime = earliestPendingTime;
          }
          var earliestSuspendedTime = root.earliestSuspendedTime;
          var latestSuspendedTime = root.latestSuspendedTime;
          if (earliestSuspendedTime === NoWork) {
            root.earliestSuspendedTime = root.latestSuspendedTime = suspendedTime;
          } else {
            if (earliestSuspendedTime < suspendedTime) {
              root.earliestSuspendedTime = suspendedTime;
            } else if (latestSuspendedTime > suspendedTime) {
              root.latestSuspendedTime = suspendedTime;
            }
          }
          findNextExpirationTimeToWorkOn(suspendedTime, root);
        }
        function markPingedPriorityLevel(root, pingedTime) {
          root.didError = false;
          var latestPingedTime = root.latestPingedTime;
          if (latestPingedTime === NoWork || latestPingedTime > pingedTime) {
            root.latestPingedTime = pingedTime;
          }
          findNextExpirationTimeToWorkOn(pingedTime, root);
        }
        function clearPing(root, completedTime) {
          var latestPingedTime = root.latestPingedTime;
          if (latestPingedTime >= completedTime) {
            root.latestPingedTime = NoWork;
          }
        }
        function findEarliestOutstandingPriorityLevel(root, renderExpirationTime) {
          var earliestExpirationTime = renderExpirationTime;
          var earliestPendingTime = root.earliestPendingTime;
          var earliestSuspendedTime = root.earliestSuspendedTime;
          if (earliestPendingTime > earliestExpirationTime) {
            earliestExpirationTime = earliestPendingTime;
          }
          if (earliestSuspendedTime > earliestExpirationTime) {
            earliestExpirationTime = earliestSuspendedTime;
          }
          return earliestExpirationTime;
        }
        function didExpireAtExpirationTime(root, currentTime) {
          var expirationTime = root.expirationTime;
          if (expirationTime !== NoWork && currentTime <= expirationTime) {
            root.nextExpirationTimeToWorkOn = currentTime;
          }
        }
        function findNextExpirationTimeToWorkOn(completedExpirationTime, root) {
          var earliestSuspendedTime = root.earliestSuspendedTime;
          var latestSuspendedTime = root.latestSuspendedTime;
          var earliestPendingTime = root.earliestPendingTime;
          var latestPingedTime = root.latestPingedTime;
          var nextExpirationTimeToWorkOn = earliestPendingTime !== NoWork ? earliestPendingTime : latestPingedTime;
          if (nextExpirationTimeToWorkOn === NoWork && (completedExpirationTime === NoWork || latestSuspendedTime < completedExpirationTime)) {
            nextExpirationTimeToWorkOn = latestSuspendedTime;
          }
          var expirationTime = nextExpirationTimeToWorkOn;
          if (expirationTime !== NoWork && earliestSuspendedTime > expirationTime) {
            expirationTime = earliestSuspendedTime;
          }
          root.nextExpirationTimeToWorkOn = nextExpirationTimeToWorkOn;
          root.expirationTime = expirationTime;
        }
        var UpdateState = 0;
        var ReplaceState = 1;
        var ForceUpdate = 2;
        var CaptureUpdate = 3;
        var hasForceUpdate = false;
        var didWarnUpdateInsideUpdate = void 0;
        var currentlyProcessingQueue = void 0;
        var resetCurrentlyProcessingQueue = void 0;
        {
          didWarnUpdateInsideUpdate = false;
          currentlyProcessingQueue = null;
          resetCurrentlyProcessingQueue = function () {
            currentlyProcessingQueue = null;
          };
        }
        function createUpdateQueue(baseState) {
          var queue = {
            baseState: baseState,
            firstUpdate: null,
            lastUpdate: null,
            firstCapturedUpdate: null,
            lastCapturedUpdate: null,
            firstEffect: null,
            lastEffect: null,
            firstCapturedEffect: null,
            lastCapturedEffect: null
          };
          return queue;
        }
        function cloneUpdateQueue(currentQueue) {
          var queue = {
            baseState: currentQueue.baseState,
            firstUpdate: currentQueue.firstUpdate,
            lastUpdate: currentQueue.lastUpdate,
            firstCapturedUpdate: null,
            lastCapturedUpdate: null,
            firstEffect: null,
            lastEffect: null,
            firstCapturedEffect: null,
            lastCapturedEffect: null
          };
          return queue;
        }
        function createUpdate(expirationTime) {
          return {
            expirationTime: expirationTime,
            tag: UpdateState,
            payload: null,
            callback: null,
            next: null,
            nextEffect: null
          };
        }
        function appendUpdateToQueue(queue, update) {
          if (queue.lastUpdate === null) {
            queue.firstUpdate = queue.lastUpdate = update;
          } else {
            queue.lastUpdate.next = update;
            queue.lastUpdate = update;
          }
        }
        function enqueueUpdate(fiber, update) {
          var alternate = fiber.alternate;
          var queue1 = void 0;
          var queue2 = void 0;
          if (alternate === null) {
            queue1 = fiber.updateQueue;
            queue2 = null;
            if (queue1 === null) {
              queue1 = fiber.updateQueue = createUpdateQueue(fiber.memoizedState);
            }
          } else {
            queue1 = fiber.updateQueue;
            queue2 = alternate.updateQueue;
            if (queue1 === null) {
              if (queue2 === null) {
                queue1 = fiber.updateQueue = createUpdateQueue(fiber.memoizedState);
                queue2 = alternate.updateQueue = createUpdateQueue(alternate.memoizedState);
              } else {
                queue1 = fiber.updateQueue = cloneUpdateQueue(queue2);
              }
            } else {
              if (queue2 === null) {
                queue2 = alternate.updateQueue = cloneUpdateQueue(queue1);
              } else {}
            }
          }
          if (queue2 === null || queue1 === queue2) {
            appendUpdateToQueue(queue1, update);
          } else {
            if (queue1.lastUpdate === null || queue2.lastUpdate === null) {
              appendUpdateToQueue(queue1, update);
              appendUpdateToQueue(queue2, update);
            } else {
              appendUpdateToQueue(queue1, update);
              queue2.lastUpdate = update;
            }
          }
          {
            if (fiber.tag === ClassComponent && (currentlyProcessingQueue === queue1 || queue2 !== null && currentlyProcessingQueue === queue2) && !didWarnUpdateInsideUpdate) {
              warningWithoutStack$1(false, 'An update (setState, replaceState, or forceUpdate) was scheduled ' + 'from inside an update function. Update functions should be pure, ' + 'with zero side-effects. Consider using componentDidUpdate or a ' + 'callback.');
              didWarnUpdateInsideUpdate = true;
            }
          }
        }
        function enqueueCapturedUpdate(workInProgress, update) {
          var workInProgressQueue = workInProgress.updateQueue;
          if (workInProgressQueue === null) {
            workInProgressQueue = workInProgress.updateQueue = createUpdateQueue(workInProgress.memoizedState);
          } else {
            workInProgressQueue = ensureWorkInProgressQueueIsAClone(workInProgress, workInProgressQueue);
          }
          if (workInProgressQueue.lastCapturedUpdate === null) {
            workInProgressQueue.firstCapturedUpdate = workInProgressQueue.lastCapturedUpdate = update;
          } else {
            workInProgressQueue.lastCapturedUpdate.next = update;
            workInProgressQueue.lastCapturedUpdate = update;
          }
        }
        function ensureWorkInProgressQueueIsAClone(workInProgress, queue) {
          var current = workInProgress.alternate;
          if (current !== null) {
            if (queue === current.updateQueue) {
              queue = workInProgress.updateQueue = cloneUpdateQueue(queue);
            }
          }
          return queue;
        }
        function getStateFromUpdate(workInProgress, queue, update, prevState, nextProps, instance) {
          switch (update.tag) {
            case ReplaceState:
              {
                var _payload = update.payload;
                if (typeof _payload === 'function') {
                  {
                    if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
                      _payload.call(instance, prevState, nextProps);
                    }
                  }
                  return _payload.call(instance, prevState, nextProps);
                }
                return _payload;
              }
            case CaptureUpdate:
              {
                workInProgress.effectTag = workInProgress.effectTag & ~ShouldCapture | DidCapture;
              }
            case UpdateState:
              {
                var _payload2 = update.payload;
                var partialState = void 0;
                if (typeof _payload2 === 'function') {
                  {
                    if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
                      _payload2.call(instance, prevState, nextProps);
                    }
                  }
                  partialState = _payload2.call(instance, prevState, nextProps);
                } else {
                  partialState = _payload2;
                }
                if (partialState === null || partialState === undefined) {
                  return prevState;
                }
                return _assign({}, prevState, partialState);
              }
            case ForceUpdate:
              {
                hasForceUpdate = true;
                return prevState;
              }
          }
          return prevState;
        }
        function processUpdateQueue(workInProgress, queue, props, instance, renderExpirationTime) {
          hasForceUpdate = false;
          queue = ensureWorkInProgressQueueIsAClone(workInProgress, queue);
          {
            currentlyProcessingQueue = queue;
          }
          var newBaseState = queue.baseState;
          var newFirstUpdate = null;
          var newExpirationTime = NoWork;
          var update = queue.firstUpdate;
          var resultState = newBaseState;
          while (update !== null) {
            var updateExpirationTime = update.expirationTime;
            if (updateExpirationTime < renderExpirationTime) {
              if (newFirstUpdate === null) {
                newFirstUpdate = update;
                newBaseState = resultState;
              }
              if (newExpirationTime < updateExpirationTime) {
                newExpirationTime = updateExpirationTime;
              }
            } else {
              resultState = getStateFromUpdate(workInProgress, queue, update, resultState, props, instance);
              var _callback = update.callback;
              if (_callback !== null) {
                workInProgress.effectTag |= Callback;
                update.nextEffect = null;
                if (queue.lastEffect === null) {
                  queue.firstEffect = queue.lastEffect = update;
                } else {
                  queue.lastEffect.nextEffect = update;
                  queue.lastEffect = update;
                }
              }
            }
            update = update.next;
          }
          var newFirstCapturedUpdate = null;
          update = queue.firstCapturedUpdate;
          while (update !== null) {
            var _updateExpirationTime = update.expirationTime;
            if (_updateExpirationTime < renderExpirationTime) {
              if (newFirstCapturedUpdate === null) {
                newFirstCapturedUpdate = update;
                if (newFirstUpdate === null) {
                  newBaseState = resultState;
                }
              }
              if (newExpirationTime < _updateExpirationTime) {
                newExpirationTime = _updateExpirationTime;
              }
            } else {
              resultState = getStateFromUpdate(workInProgress, queue, update, resultState, props, instance);
              var _callback2 = update.callback;
              if (_callback2 !== null) {
                workInProgress.effectTag |= Callback;
                update.nextEffect = null;
                if (queue.lastCapturedEffect === null) {
                  queue.firstCapturedEffect = queue.lastCapturedEffect = update;
                } else {
                  queue.lastCapturedEffect.nextEffect = update;
                  queue.lastCapturedEffect = update;
                }
              }
            }
            update = update.next;
          }
          if (newFirstUpdate === null) {
            queue.lastUpdate = null;
          }
          if (newFirstCapturedUpdate === null) {
            queue.lastCapturedUpdate = null;
          } else {
            workInProgress.effectTag |= Callback;
          }
          if (newFirstUpdate === null && newFirstCapturedUpdate === null) {
            newBaseState = resultState;
          }
          queue.baseState = newBaseState;
          queue.firstUpdate = newFirstUpdate;
          queue.firstCapturedUpdate = newFirstCapturedUpdate;
          workInProgress.expirationTime = newExpirationTime;
          workInProgress.memoizedState = resultState;
          {
            currentlyProcessingQueue = null;
          }
        }
        function callCallback(callback, context) {
          !(typeof callback === 'function') ? invariant(false, 'Invalid argument passed as callback. Expected a function. Instead received: %s', callback) : void 0;
          callback.call(context);
        }
        function resetHasForceUpdateBeforeProcessing() {
          hasForceUpdate = false;
        }
        function checkHasForceUpdateAfterProcessing() {
          return hasForceUpdate;
        }
        function commitUpdateQueue(finishedWork, finishedQueue, instance, renderExpirationTime) {
          if (finishedQueue.firstCapturedUpdate !== null) {
            if (finishedQueue.lastUpdate !== null) {
              finishedQueue.lastUpdate.next = finishedQueue.firstCapturedUpdate;
              finishedQueue.lastUpdate = finishedQueue.lastCapturedUpdate;
            }
            finishedQueue.firstCapturedUpdate = finishedQueue.lastCapturedUpdate = null;
          }
          commitUpdateEffects(finishedQueue.firstEffect, instance);
          finishedQueue.firstEffect = finishedQueue.lastEffect = null;
          commitUpdateEffects(finishedQueue.firstCapturedEffect, instance);
          finishedQueue.firstCapturedEffect = finishedQueue.lastCapturedEffect = null;
        }
        function commitUpdateEffects(effect, instance) {
          while (effect !== null) {
            var _callback3 = effect.callback;
            if (_callback3 !== null) {
              effect.callback = null;
              callCallback(_callback3, instance);
            }
            effect = effect.nextEffect;
          }
        }
        function createCapturedValue(value, source) {
          return {
            value: value,
            source: source,
            stack: getStackByFiberInDevAndProd(source)
          };
        }
        var valueCursor = createCursor(null);
        var rendererSigil = void 0;
        {
          rendererSigil = {};
        }
        var currentlyRenderingFiber = null;
        var lastContextDependency = null;
        var lastContextWithAllBitsObserved = null;
        function resetContextDependences() {
          currentlyRenderingFiber = null;
          lastContextDependency = null;
          lastContextWithAllBitsObserved = null;
        }
        function pushProvider(providerFiber, nextValue) {
          var context = providerFiber.type._context;
          if (isPrimaryRenderer) {
            push(valueCursor, context._currentValue, providerFiber);
            context._currentValue = nextValue;
            {
              !(context._currentRenderer === undefined || context._currentRenderer === null || context._currentRenderer === rendererSigil) ? warningWithoutStack$1(false, 'Detected multiple renderers concurrently rendering the ' + 'same context provider. This is currently unsupported.') : void 0;
              context._currentRenderer = rendererSigil;
            }
          } else {
            push(valueCursor, context._currentValue2, providerFiber);
            context._currentValue2 = nextValue;
            {
              !(context._currentRenderer2 === undefined || context._currentRenderer2 === null || context._currentRenderer2 === rendererSigil) ? warningWithoutStack$1(false, 'Detected multiple renderers concurrently rendering the ' + 'same context provider. This is currently unsupported.') : void 0;
              context._currentRenderer2 = rendererSigil;
            }
          }
        }
        function popProvider(providerFiber) {
          var currentValue = valueCursor.current;
          pop(valueCursor, providerFiber);
          var context = providerFiber.type._context;
          if (isPrimaryRenderer) {
            context._currentValue = currentValue;
          } else {
            context._currentValue2 = currentValue;
          }
        }
        function calculateChangedBits(context, newValue, oldValue) {
          if (oldValue === newValue && (oldValue !== 0 || 1 / oldValue === 1 / newValue) || oldValue !== oldValue && newValue !== newValue) {
            return 0;
          } else {
            var changedBits = typeof context._calculateChangedBits === 'function' ? context._calculateChangedBits(oldValue, newValue) : maxSigned31BitInt;
            {
              !((changedBits & maxSigned31BitInt) === changedBits) ? warning$1(false, 'calculateChangedBits: Expected the return value to be a ' + '31-bit integer. Instead received: %s', changedBits) : void 0;
            }
            return changedBits | 0;
          }
        }
        function propagateContextChange(workInProgress, context, changedBits, renderExpirationTime) {
          var fiber = workInProgress.child;
          if (fiber !== null) {
            fiber.return = workInProgress;
          }
          while (fiber !== null) {
            var nextFiber = void 0;
            var dependency = fiber.firstContextDependency;
            if (dependency !== null) {
              do {
                if (dependency.context === context && (dependency.observedBits & changedBits) !== 0) {
                  if (fiber.tag === ClassComponent) {
                    var update = createUpdate(renderExpirationTime);
                    update.tag = ForceUpdate;
                    enqueueUpdate(fiber, update);
                  }
                  if (fiber.expirationTime < renderExpirationTime) {
                    fiber.expirationTime = renderExpirationTime;
                  }
                  var alternate = fiber.alternate;
                  if (alternate !== null && alternate.expirationTime < renderExpirationTime) {
                    alternate.expirationTime = renderExpirationTime;
                  }
                  var node = fiber.return;
                  while (node !== null) {
                    alternate = node.alternate;
                    if (node.childExpirationTime < renderExpirationTime) {
                      node.childExpirationTime = renderExpirationTime;
                      if (alternate !== null && alternate.childExpirationTime < renderExpirationTime) {
                        alternate.childExpirationTime = renderExpirationTime;
                      }
                    } else if (alternate !== null && alternate.childExpirationTime < renderExpirationTime) {
                      alternate.childExpirationTime = renderExpirationTime;
                    } else {
                      break;
                    }
                    node = node.return;
                  }
                }
                nextFiber = fiber.child;
                dependency = dependency.next;
              } while (dependency !== null);
            } else if (fiber.tag === ContextProvider) {
              nextFiber = fiber.type === workInProgress.type ? null : fiber.child;
            } else {
              nextFiber = fiber.child;
            }
            if (nextFiber !== null) {
              nextFiber.return = fiber;
            } else {
              nextFiber = fiber;
              while (nextFiber !== null) {
                if (nextFiber === workInProgress) {
                  nextFiber = null;
                  break;
                }
                var sibling = nextFiber.sibling;
                if (sibling !== null) {
                  sibling.return = nextFiber.return;
                  nextFiber = sibling;
                  break;
                }
                nextFiber = nextFiber.return;
              }
            }
            fiber = nextFiber;
          }
        }
        function prepareToReadContext(workInProgress, renderExpirationTime) {
          currentlyRenderingFiber = workInProgress;
          lastContextDependency = null;
          lastContextWithAllBitsObserved = null;
          workInProgress.firstContextDependency = null;
        }
        function readContext(context, observedBits) {
          if (lastContextWithAllBitsObserved === context) {} else if (observedBits === false || observedBits === 0) {} else {
            var resolvedObservedBits = void 0;
            if (typeof observedBits !== 'number' || observedBits === maxSigned31BitInt) {
              lastContextWithAllBitsObserved = context;
              resolvedObservedBits = maxSigned31BitInt;
            } else {
              resolvedObservedBits = observedBits;
            }
            var contextItem = {
              context: context,
              observedBits: resolvedObservedBits,
              next: null
            };
            if (lastContextDependency === null) {
              !(currentlyRenderingFiber !== null) ? invariant(false, 'Context can only be read while React is rendering, e.g. inside the render method or getDerivedStateFromProps.') : void 0;
              currentlyRenderingFiber.firstContextDependency = lastContextDependency = contextItem;
            } else {
              lastContextDependency = lastContextDependency.next = contextItem;
            }
          }
          return isPrimaryRenderer ? context._currentValue : context._currentValue2;
        }
        var NoEffect$1 = 0;
        var UnmountSnapshot = 2;
        var UnmountMutation = 4;
        var MountMutation = 8;
        var UnmountLayout = 16;
        var MountLayout = 32;
        var MountPassive = 64;
        var UnmountPassive = 128;
        function areHookInputsEqual(arr1, arr2) {
          {
            !(arr1.length === arr2.length) ? warning$1(false, 'Detected a variable number of hook dependencies. The length of the ' + 'dependencies array should be constant between renders.\n\n' + 'Previous: %s\n' + 'Incoming: %s', arr1.join(', '), arr2.join(', ')) : void 0;
          }
          for (var i = 0; i < arr1.length; i++) {
            var val1 = arr1[i];
            var val2 = arr2[i];
            if (val1 === val2 && (val1 !== 0 || 1 / val1 === 1 / val2) || val1 !== val1 && val2 !== val2) {
              continue;
            }
            return false;
          }
          return true;
        }
        var renderExpirationTime = NoWork;
        var currentlyRenderingFiber$1 = null;
        var firstCurrentHook = null;
        var currentHook = null;
        var firstWorkInProgressHook = null;
        var workInProgressHook = null;
        var remainingExpirationTime = NoWork;
        var componentUpdateQueue = null;
        var isReRender = false;
        var didScheduleRenderPhaseUpdate = false;
        var renderPhaseUpdates = null;
        var numberOfReRenders = 0;
        var RE_RENDER_LIMIT = 25;
        function resolveCurrentlyRenderingFiber() {
          !(currentlyRenderingFiber$1 !== null) ? invariant(false, 'Hooks can only be called inside the body of a function component.') : void 0;
          return currentlyRenderingFiber$1;
        }
        function prepareToUseHooks(current, workInProgress, nextRenderExpirationTime) {
          if (!enableHooks) {
            return;
          }
          renderExpirationTime = nextRenderExpirationTime;
          currentlyRenderingFiber$1 = workInProgress;
          firstCurrentHook = current !== null ? current.memoizedState : null;
        }
        function finishHooks(Component, props, children, refOrContext) {
          if (!enableHooks) {
            return children;
          }
          while (didScheduleRenderPhaseUpdate) {
            didScheduleRenderPhaseUpdate = false;
            numberOfReRenders += 1;
            currentHook = null;
            workInProgressHook = null;
            componentUpdateQueue = null;
            children = Component(props, refOrContext);
          }
          renderPhaseUpdates = null;
          numberOfReRenders = 0;
          var renderedWork = currentlyRenderingFiber$1;
          renderedWork.memoizedState = firstWorkInProgressHook;
          renderedWork.expirationTime = remainingExpirationTime;
          renderedWork.updateQueue = componentUpdateQueue;
          var didRenderTooFewHooks = currentHook !== null && currentHook.next !== null;
          renderExpirationTime = NoWork;
          currentlyRenderingFiber$1 = null;
          firstCurrentHook = null;
          currentHook = null;
          firstWorkInProgressHook = null;
          workInProgressHook = null;
          remainingExpirationTime = NoWork;
          componentUpdateQueue = null;
          !!didRenderTooFewHooks ? invariant(false, 'Rendered fewer hooks than expected. This may be caused by an accidental early return statement.') : void 0;
          return children;
        }
        function resetHooks() {
          if (!enableHooks) {
            return;
          }
          renderExpirationTime = NoWork;
          currentlyRenderingFiber$1 = null;
          firstCurrentHook = null;
          currentHook = null;
          firstWorkInProgressHook = null;
          workInProgressHook = null;
          remainingExpirationTime = NoWork;
          componentUpdateQueue = null;
          didScheduleRenderPhaseUpdate = false;
          renderPhaseUpdates = null;
          numberOfReRenders = 0;
        }
        function createHook() {
          return {
            memoizedState: null,
            baseState: null,
            queue: null,
            baseUpdate: null,
            next: null
          };
        }
        function cloneHook(hook) {
          return {
            memoizedState: hook.memoizedState,
            baseState: hook.baseState,
            queue: hook.queue,
            baseUpdate: hook.baseUpdate,
            next: null
          };
        }
        function createWorkInProgressHook() {
          if (workInProgressHook === null) {
            if (firstWorkInProgressHook === null) {
              isReRender = false;
              currentHook = firstCurrentHook;
              if (currentHook === null) {
                workInProgressHook = createHook();
              } else {
                workInProgressHook = cloneHook(currentHook);
              }
              firstWorkInProgressHook = workInProgressHook;
            } else {
              isReRender = true;
              currentHook = firstCurrentHook;
              workInProgressHook = firstWorkInProgressHook;
            }
          } else {
            if (workInProgressHook.next === null) {
              isReRender = false;
              var hook = void 0;
              if (currentHook === null) {
                hook = createHook();
              } else {
                currentHook = currentHook.next;
                if (currentHook === null) {
                  hook = createHook();
                } else {
                  hook = cloneHook(currentHook);
                }
              }
              workInProgressHook = workInProgressHook.next = hook;
            } else {
              isReRender = true;
              workInProgressHook = workInProgressHook.next;
              currentHook = currentHook !== null ? currentHook.next : null;
            }
          }
          return workInProgressHook;
        }
        function createFunctionComponentUpdateQueue() {
          return { lastEffect: null };
        }
        function basicStateReducer(state, action) {
          return typeof action === 'function' ? action(state) : action;
        }
        function useContext(context, observedBits) {
          resolveCurrentlyRenderingFiber();
          return readContext(context, observedBits);
        }
        function useState(initialState) {
          return useReducer(basicStateReducer, initialState);
        }
        function useReducer(reducer, initialState, initialAction) {
          currentlyRenderingFiber$1 = resolveCurrentlyRenderingFiber();
          workInProgressHook = createWorkInProgressHook();
          var queue = workInProgressHook.queue;
          if (queue !== null) {
            if (isReRender) {
              var _dispatch2 = queue.dispatch;
              if (renderPhaseUpdates !== null) {
                var firstRenderPhaseUpdate = renderPhaseUpdates.get(queue);
                if (firstRenderPhaseUpdate !== undefined) {
                  renderPhaseUpdates.delete(queue);
                  var newState = workInProgressHook.memoizedState;
                  var update = firstRenderPhaseUpdate;
                  do {
                    var _action = update.action;
                    newState = reducer(newState, _action);
                    update = update.next;
                  } while (update !== null);
                  workInProgressHook.memoizedState = newState;
                  if (workInProgressHook.baseUpdate === queue.last) {
                    workInProgressHook.baseState = newState;
                  }
                  return [newState, _dispatch2];
                }
              }
              return [workInProgressHook.memoizedState, _dispatch2];
            }
            var _last = queue.last;
            var _baseUpdate = workInProgressHook.baseUpdate;
            var first = void 0;
            if (_baseUpdate !== null) {
              if (_last !== null) {
                _last.next = null;
              }
              first = _baseUpdate.next;
            } else {
              first = _last !== null ? _last.next : null;
            }
            if (first !== null) {
              var _newState = workInProgressHook.baseState;
              var newBaseState = null;
              var newBaseUpdate = null;
              var prevUpdate = _baseUpdate;
              var _update = first;
              var didSkip = false;
              do {
                var updateExpirationTime = _update.expirationTime;
                if (updateExpirationTime < renderExpirationTime) {
                  if (!didSkip) {
                    didSkip = true;
                    newBaseUpdate = prevUpdate;
                    newBaseState = _newState;
                  }
                  if (updateExpirationTime > remainingExpirationTime) {
                    remainingExpirationTime = updateExpirationTime;
                  }
                } else {
                  var _action2 = _update.action;
                  _newState = reducer(_newState, _action2);
                }
                prevUpdate = _update;
                _update = _update.next;
              } while (_update !== null && _update !== first);
              if (!didSkip) {
                newBaseUpdate = prevUpdate;
                newBaseState = _newState;
              }
              workInProgressHook.memoizedState = _newState;
              workInProgressHook.baseUpdate = newBaseUpdate;
              workInProgressHook.baseState = newBaseState;
            }
            var _dispatch = queue.dispatch;
            return [workInProgressHook.memoizedState, _dispatch];
          }
          if (reducer === basicStateReducer) {
            if (typeof initialState === 'function') {
              initialState = initialState();
            }
          } else if (initialAction !== undefined && initialAction !== null) {
            initialState = reducer(initialState, initialAction);
          }
          workInProgressHook.memoizedState = workInProgressHook.baseState = initialState;
          queue = workInProgressHook.queue = {
            last: null,
            dispatch: null
          };
          var dispatch = queue.dispatch = dispatchAction.bind(null, currentlyRenderingFiber$1, queue);
          return [workInProgressHook.memoizedState, dispatch];
        }
        function pushEffect(tag, create, destroy, inputs) {
          var effect = {
            tag: tag,
            create: create,
            destroy: destroy,
            inputs: inputs,
            next: null
          };
          if (componentUpdateQueue === null) {
            componentUpdateQueue = createFunctionComponentUpdateQueue();
            componentUpdateQueue.lastEffect = effect.next = effect;
          } else {
            var _lastEffect = componentUpdateQueue.lastEffect;
            if (_lastEffect === null) {
              componentUpdateQueue.lastEffect = effect.next = effect;
            } else {
              var firstEffect = _lastEffect.next;
              _lastEffect.next = effect;
              effect.next = firstEffect;
              componentUpdateQueue.lastEffect = effect;
            }
          }
          return effect;
        }
        function useRef(initialValue) {
          currentlyRenderingFiber$1 = resolveCurrentlyRenderingFiber();
          workInProgressHook = createWorkInProgressHook();
          var ref = void 0;
          if (workInProgressHook.memoizedState === null) {
            ref = { current: initialValue };
            {
              Object.seal(ref);
            }
            workInProgressHook.memoizedState = ref;
          } else {
            ref = workInProgressHook.memoizedState;
          }
          return ref;
        }
        function useLayoutEffect(create, inputs) {
          useEffectImpl(Update, UnmountMutation | MountLayout, create, inputs);
        }
        function useEffect(create, inputs) {
          useEffectImpl(Update | Passive, UnmountPassive | MountPassive, create, inputs);
        }
        function useEffectImpl(fiberEffectTag, hookEffectTag, create, inputs) {
          currentlyRenderingFiber$1 = resolveCurrentlyRenderingFiber();
          workInProgressHook = createWorkInProgressHook();
          var nextInputs = inputs !== undefined && inputs !== null ? inputs : [create];
          var destroy = null;
          if (currentHook !== null) {
            var prevEffect = currentHook.memoizedState;
            destroy = prevEffect.destroy;
            if (areHookInputsEqual(nextInputs, prevEffect.inputs)) {
              pushEffect(NoEffect$1, create, destroy, nextInputs);
              return;
            }
          }
          currentlyRenderingFiber$1.effectTag |= fiberEffectTag;
          workInProgressHook.memoizedState = pushEffect(hookEffectTag, create, destroy, nextInputs);
        }
        function useImperativeMethods(ref, create, inputs) {
          var nextInputs = inputs !== null && inputs !== undefined ? inputs.concat([ref]) : [ref, create];
          useLayoutEffect(function () {
            if (typeof ref === 'function') {
              var refCallback = ref;
              var _inst = create();
              refCallback(_inst);
              return function () {
                return refCallback(null);
              };
            } else if (ref !== null && ref !== undefined) {
              var refObject = ref;
              var _inst2 = create();
              refObject.current = _inst2;
              return function () {
                refObject.current = null;
              };
            }
          }, nextInputs);
        }
        function useCallback(callback, inputs) {
          currentlyRenderingFiber$1 = resolveCurrentlyRenderingFiber();
          workInProgressHook = createWorkInProgressHook();
          var nextInputs = inputs !== undefined && inputs !== null ? inputs : [callback];
          var prevState = workInProgressHook.memoizedState;
          if (prevState !== null) {
            var prevInputs = prevState[1];
            if (areHookInputsEqual(nextInputs, prevInputs)) {
              return prevState[0];
            }
          }
          workInProgressHook.memoizedState = [callback, nextInputs];
          return callback;
        }
        function useMemo(nextCreate, inputs) {
          currentlyRenderingFiber$1 = resolveCurrentlyRenderingFiber();
          workInProgressHook = createWorkInProgressHook();
          var nextInputs = inputs !== undefined && inputs !== null ? inputs : [nextCreate];
          var prevState = workInProgressHook.memoizedState;
          if (prevState !== null) {
            var prevInputs = prevState[1];
            if (areHookInputsEqual(nextInputs, prevInputs)) {
              return prevState[0];
            }
          }
          var nextValue = nextCreate();
          workInProgressHook.memoizedState = [nextValue, nextInputs];
          return nextValue;
        }
        function dispatchAction(fiber, queue, action) {
          !(numberOfReRenders < RE_RENDER_LIMIT) ? invariant(false, 'Too many re-renders. React limits the number of renders to prevent an infinite loop.') : void 0;
          var alternate = fiber.alternate;
          if (fiber === currentlyRenderingFiber$1 || alternate !== null && alternate === currentlyRenderingFiber$1) {
            didScheduleRenderPhaseUpdate = true;
            var update = {
              expirationTime: renderExpirationTime,
              action: action,
              next: null
            };
            if (renderPhaseUpdates === null) {
              renderPhaseUpdates = new Map();
            }
            var firstRenderPhaseUpdate = renderPhaseUpdates.get(queue);
            if (firstRenderPhaseUpdate === undefined) {
              renderPhaseUpdates.set(queue, update);
            } else {
              var lastRenderPhaseUpdate = firstRenderPhaseUpdate;
              while (lastRenderPhaseUpdate.next !== null) {
                lastRenderPhaseUpdate = lastRenderPhaseUpdate.next;
              }
              lastRenderPhaseUpdate.next = update;
            }
          } else {
            var currentTime = requestCurrentTime();
            var _expirationTime = computeExpirationForFiber(currentTime, fiber);
            var _update2 = {
              expirationTime: _expirationTime,
              action: action,
              next: null
            };
            flushPassiveEffects();
            var _last2 = queue.last;
            if (_last2 === null) {
              _update2.next = _update2;
            } else {
              var first = _last2.next;
              if (first !== null) {
                _update2.next = first;
              }
              _last2.next = _update2;
            }
            queue.last = _update2;
            scheduleWork(fiber, _expirationTime);
          }
        }
        var NO_CONTEXT = {};
        var contextStackCursor$1 = createCursor(NO_CONTEXT);
        var contextFiberStackCursor = createCursor(NO_CONTEXT);
        var rootInstanceStackCursor = createCursor(NO_CONTEXT);
        function requiredContext(c) {
          !(c !== NO_CONTEXT) ? invariant(false, 'Expected host context to exist. This error is likely caused by a bug in React. Please file an issue.') : void 0;
          return c;
        }
        function getRootHostContainer() {
          var rootInstance = requiredContext(rootInstanceStackCursor.current);
          return rootInstance;
        }
        function pushHostContainer(fiber, nextRootInstance) {
          push(rootInstanceStackCursor, nextRootInstance, fiber);
          push(contextFiberStackCursor, fiber, fiber);
          push(contextStackCursor$1, NO_CONTEXT, fiber);
          var nextRootContext = getRootHostContext(nextRootInstance);
          pop(contextStackCursor$1, fiber);
          push(contextStackCursor$1, nextRootContext, fiber);
        }
        function popHostContainer(fiber) {
          pop(contextStackCursor$1, fiber);
          pop(contextFiberStackCursor, fiber);
          pop(rootInstanceStackCursor, fiber);
        }
        function getHostContext() {
          var context = requiredContext(contextStackCursor$1.current);
          return context;
        }
        function pushHostContext(fiber) {
          var rootInstance = requiredContext(rootInstanceStackCursor.current);
          var context = requiredContext(contextStackCursor$1.current);
          var nextContext = getChildHostContext(context, fiber.type, rootInstance);
          if (context === nextContext) {
            return;
          }
          push(contextFiberStackCursor, fiber, fiber);
          push(contextStackCursor$1, nextContext, fiber);
        }
        function popHostContext(fiber) {
          if (contextFiberStackCursor.current !== fiber) {
            return;
          }
          pop(contextStackCursor$1, fiber);
          pop(contextFiberStackCursor, fiber);
        }
        var commitTime = 0;
        var profilerStartTime = -1;
        function getCommitTime() {
          return commitTime;
        }
        function recordCommitTime() {
          if (!enableProfilerTimer) {
            return;
          }
          commitTime = scheduler.unstable_now();
        }
        function startProfilerTimer(fiber) {
          if (!enableProfilerTimer) {
            return;
          }
          profilerStartTime = scheduler.unstable_now();
          if (fiber.actualStartTime < 0) {
            fiber.actualStartTime = scheduler.unstable_now();
          }
        }
        function stopProfilerTimerIfRunning(fiber) {
          if (!enableProfilerTimer) {
            return;
          }
          profilerStartTime = -1;
        }
        function stopProfilerTimerIfRunningAndRecordDelta(fiber, overrideBaseTime) {
          if (!enableProfilerTimer) {
            return;
          }
          if (profilerStartTime >= 0) {
            var elapsedTime = scheduler.unstable_now() - profilerStartTime;
            fiber.actualDuration += elapsedTime;
            if (overrideBaseTime) {
              fiber.selfBaseDuration = elapsedTime;
            }
            profilerStartTime = -1;
          }
        }
        function resolveDefaultProps(Component, baseProps) {
          if (Component && Component.defaultProps) {
            var props = _assign({}, baseProps);
            var defaultProps = Component.defaultProps;
            for (var propName in defaultProps) {
              if (props[propName] === undefined) {
                props[propName] = defaultProps[propName];
              }
            }
            return props;
          }
          return baseProps;
        }
        function readLazyComponentType(lazyComponent) {
          var status = lazyComponent._status;
          var result = lazyComponent._result;
          switch (status) {
            case Resolved:
              {
                var Component = result;
                return Component;
              }
            case Rejected:
              {
                var error = result;
                throw error;
              }
            case Pending:
              {
                var thenable = result;
                throw thenable;
              }
            default:
              {
                lazyComponent._status = Pending;
                var ctor = lazyComponent._ctor;
                var _thenable = ctor();
                _thenable.then(function (moduleObject) {
                  if (lazyComponent._status === Pending) {
                    var defaultExport = moduleObject.default;
                    {
                      if (defaultExport === undefined) {
                        warning$1(false, 'lazy: Expected the result of a dynamic import() call. ' + 'Instead received: %s\n\nYour code should look like: \n  ' + "const MyComponent = lazy(() => import('./MyComponent'))", moduleObject);
                      }
                    }
                    lazyComponent._status = Resolved;
                    lazyComponent._result = defaultExport;
                  }
                }, function (error) {
                  if (lazyComponent._status === Pending) {
                    lazyComponent._status = Rejected;
                    lazyComponent._result = error;
                  }
                });
                lazyComponent._result = _thenable;
                throw _thenable;
              }
          }
        }
        var ReactCurrentOwner$4 = ReactSharedInternals.ReactCurrentOwner;
        function readContext$1(contextType) {
          var dispatcher = ReactCurrentOwner$4.currentDispatcher;
          return dispatcher.readContext(contextType);
        }
        var fakeInternalInstance = {};
        var isArray$1 = Array.isArray;
        var emptyRefsObject = new React.Component().refs;
        var didWarnAboutStateAssignmentForComponent = void 0;
        var didWarnAboutUninitializedState = void 0;
        var didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = void 0;
        var didWarnAboutLegacyLifecyclesAndDerivedState = void 0;
        var didWarnAboutUndefinedDerivedState = void 0;
        var warnOnUndefinedDerivedState = void 0;
        var warnOnInvalidCallback$1 = void 0;
        var didWarnAboutDirectlyAssigningPropsToState = void 0;
        var didWarnAboutContextTypeAndContextTypes = void 0;
        var didWarnAboutInvalidateContextType = void 0;
        {
          didWarnAboutStateAssignmentForComponent = new Set();
          didWarnAboutUninitializedState = new Set();
          didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = new Set();
          didWarnAboutLegacyLifecyclesAndDerivedState = new Set();
          didWarnAboutDirectlyAssigningPropsToState = new Set();
          didWarnAboutUndefinedDerivedState = new Set();
          didWarnAboutContextTypeAndContextTypes = new Set();
          didWarnAboutInvalidateContextType = new Set();
          var didWarnOnInvalidCallback = new Set();
          warnOnInvalidCallback$1 = function (callback, callerName) {
            if (callback === null || typeof callback === 'function') {
              return;
            }
            var key = callerName + '_' + callback;
            if (!didWarnOnInvalidCallback.has(key)) {
              didWarnOnInvalidCallback.add(key);
              warningWithoutStack$1(false, '%s(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callerName, callback);
            }
          };
          warnOnUndefinedDerivedState = function (type, partialState) {
            if (partialState === undefined) {
              var componentName = getComponentName(type) || 'Component';
              if (!didWarnAboutUndefinedDerivedState.has(componentName)) {
                didWarnAboutUndefinedDerivedState.add(componentName);
                warningWithoutStack$1(false, '%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. ' + 'You have returned undefined.', componentName);
              }
            }
          };
          Object.defineProperty(fakeInternalInstance, '_processChildContext', {
            enumerable: false,
            value: function () {
              invariant(false, '_processChildContext is not available in React 16+. This likely means you have multiple copies of React and are attempting to nest a React 15 tree inside a React 16 tree using unstable_renderSubtreeIntoContainer, which isn\'t supported. Try to make sure you have only one copy of React (and ideally, switch to ReactDOM.createPortal).');
            }
          });
          Object.freeze(fakeInternalInstance);
        }
        function applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, nextProps) {
          var prevState = workInProgress.memoizedState;
          {
            if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
              getDerivedStateFromProps(nextProps, prevState);
            }
          }
          var partialState = getDerivedStateFromProps(nextProps, prevState);
          {
            warnOnUndefinedDerivedState(ctor, partialState);
          }
          var memoizedState = partialState === null || partialState === undefined ? prevState : _assign({}, prevState, partialState);
          workInProgress.memoizedState = memoizedState;
          var updateQueue = workInProgress.updateQueue;
          if (updateQueue !== null && workInProgress.expirationTime === NoWork) {
            updateQueue.baseState = memoizedState;
          }
        }
        var classComponentUpdater = {
          isMounted: isMounted,
          enqueueSetState: function (inst, payload, callback) {
            var fiber = get(inst);
            var currentTime = requestCurrentTime();
            var expirationTime = computeExpirationForFiber(currentTime, fiber);
            var update = createUpdate(expirationTime);
            update.payload = payload;
            if (callback !== undefined && callback !== null) {
              {
                warnOnInvalidCallback$1(callback, 'setState');
              }
              update.callback = callback;
            }
            flushPassiveEffects();
            enqueueUpdate(fiber, update);
            scheduleWork(fiber, expirationTime);
          },
          enqueueReplaceState: function (inst, payload, callback) {
            var fiber = get(inst);
            var currentTime = requestCurrentTime();
            var expirationTime = computeExpirationForFiber(currentTime, fiber);
            var update = createUpdate(expirationTime);
            update.tag = ReplaceState;
            update.payload = payload;
            if (callback !== undefined && callback !== null) {
              {
                warnOnInvalidCallback$1(callback, 'replaceState');
              }
              update.callback = callback;
            }
            flushPassiveEffects();
            enqueueUpdate(fiber, update);
            scheduleWork(fiber, expirationTime);
          },
          enqueueForceUpdate: function (inst, callback) {
            var fiber = get(inst);
            var currentTime = requestCurrentTime();
            var expirationTime = computeExpirationForFiber(currentTime, fiber);
            var update = createUpdate(expirationTime);
            update.tag = ForceUpdate;
            if (callback !== undefined && callback !== null) {
              {
                warnOnInvalidCallback$1(callback, 'forceUpdate');
              }
              update.callback = callback;
            }
            flushPassiveEffects();
            enqueueUpdate(fiber, update);
            scheduleWork(fiber, expirationTime);
          }
        };
        function checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext) {
          var instance = workInProgress.stateNode;
          if (typeof instance.shouldComponentUpdate === 'function') {
            startPhaseTimer(workInProgress, 'shouldComponentUpdate');
            var shouldUpdate = instance.shouldComponentUpdate(newProps, newState, nextContext);
            stopPhaseTimer();
            {
              !(shouldUpdate !== undefined) ? warningWithoutStack$1(false, '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', getComponentName(ctor) || 'Component') : void 0;
            }
            return shouldUpdate;
          }
          if (ctor.prototype && ctor.prototype.isPureReactComponent) {
            return !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState);
          }
          return true;
        }
        function checkClassInstance(workInProgress, ctor, newProps) {
          var instance = workInProgress.stateNode;
          {
            var name = getComponentName(ctor) || 'Component';
            var renderPresent = instance.render;
            if (!renderPresent) {
              if (ctor.prototype && typeof ctor.prototype.render === 'function') {
                warningWithoutStack$1(false, '%s(...): No `render` method found on the returned component ' + 'instance: did you accidentally return an object from the constructor?', name);
              } else {
                warningWithoutStack$1(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', name);
              }
            }
            var noGetInitialStateOnES6 = !instance.getInitialState || instance.getInitialState.isReactClassApproved || instance.state;
            !noGetInitialStateOnES6 ? warningWithoutStack$1(false, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', name) : void 0;
            var noGetDefaultPropsOnES6 = !instance.getDefaultProps || instance.getDefaultProps.isReactClassApproved;
            !noGetDefaultPropsOnES6 ? warningWithoutStack$1(false, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', name) : void 0;
            var noInstancePropTypes = !instance.propTypes;
            !noInstancePropTypes ? warningWithoutStack$1(false, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', name) : void 0;
            var noInstanceContextType = !instance.contextType;
            !noInstanceContextType ? warningWithoutStack$1(false, 'contextType was defined as an instance property on %s. Use a static ' + 'property to define contextType instead.', name) : void 0;
            var noInstanceContextTypes = !instance.contextTypes;
            !noInstanceContextTypes ? warningWithoutStack$1(false, 'contextTypes was defined as an instance property on %s. Use a static ' + 'property to define contextTypes instead.', name) : void 0;
            if (ctor.contextType && ctor.contextTypes && !didWarnAboutContextTypeAndContextTypes.has(ctor)) {
              didWarnAboutContextTypeAndContextTypes.add(ctor);
              warningWithoutStack$1(false, '%s declares both contextTypes and contextType static properties. ' + 'The legacy contextTypes property will be ignored.', name);
            }
            var noComponentShouldUpdate = typeof instance.componentShouldUpdate !== 'function';
            !noComponentShouldUpdate ? warningWithoutStack$1(false, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', name) : void 0;
            if (ctor.prototype && ctor.prototype.isPureReactComponent && typeof instance.shouldComponentUpdate !== 'undefined') {
              warningWithoutStack$1(false, '%s has a method called shouldComponentUpdate(). ' + 'shouldComponentUpdate should not be used when extending React.PureComponent. ' + 'Please extend React.Component if shouldComponentUpdate is used.', getComponentName(ctor) || 'A pure component');
            }
            var noComponentDidUnmount = typeof instance.componentDidUnmount !== 'function';
            !noComponentDidUnmount ? warningWithoutStack$1(false, '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', name) : void 0;
            var noComponentDidReceiveProps = typeof instance.componentDidReceiveProps !== 'function';
            !noComponentDidReceiveProps ? warningWithoutStack$1(false, '%s has a method called ' + 'componentDidReceiveProps(). But there is no such lifecycle method. ' + 'If you meant to update the state in response to changing props, ' + 'use componentWillReceiveProps(). If you meant to fetch data or ' + 'run side-effects or mutations after React has updated the UI, use componentDidUpdate().', name) : void 0;
            var noComponentWillRecieveProps = typeof instance.componentWillRecieveProps !== 'function';
            !noComponentWillRecieveProps ? warningWithoutStack$1(false, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', name) : void 0;
            var noUnsafeComponentWillRecieveProps = typeof instance.UNSAFE_componentWillRecieveProps !== 'function';
            !noUnsafeComponentWillRecieveProps ? warningWithoutStack$1(false, '%s has a method called ' + 'UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?', name) : void 0;
            var hasMutatedProps = instance.props !== newProps;
            !(instance.props === undefined || !hasMutatedProps) ? warningWithoutStack$1(false, '%s(...): When calling super() in `%s`, make sure to pass ' + "up the same props that your component's constructor was passed.", name, name) : void 0;
            var noInstanceDefaultProps = !instance.defaultProps;
            !noInstanceDefaultProps ? warningWithoutStack$1(false, 'Setting defaultProps as an instance property on %s is not supported and will be ignored.' + ' Instead, define defaultProps as a static property on %s.', name, name) : void 0;
            if (typeof instance.getSnapshotBeforeUpdate === 'function' && typeof instance.componentDidUpdate !== 'function' && !didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(ctor)) {
              didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(ctor);
              warningWithoutStack$1(false, '%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). ' + 'This component defines getSnapshotBeforeUpdate() only.', getComponentName(ctor));
            }
            var noInstanceGetDerivedStateFromProps = typeof instance.getDerivedStateFromProps !== 'function';
            !noInstanceGetDerivedStateFromProps ? warningWithoutStack$1(false, '%s: getDerivedStateFromProps() is defined as an instance method ' + 'and will be ignored. Instead, declare it as a static method.', name) : void 0;
            var noInstanceGetDerivedStateFromCatch = typeof instance.getDerivedStateFromError !== 'function';
            !noInstanceGetDerivedStateFromCatch ? warningWithoutStack$1(false, '%s: getDerivedStateFromError() is defined as an instance method ' + 'and will be ignored. Instead, declare it as a static method.', name) : void 0;
            var noStaticGetSnapshotBeforeUpdate = typeof ctor.getSnapshotBeforeUpdate !== 'function';
            !noStaticGetSnapshotBeforeUpdate ? warningWithoutStack$1(false, '%s: getSnapshotBeforeUpdate() is defined as a static method ' + 'and will be ignored. Instead, declare it as an instance method.', name) : void 0;
            var _state = instance.state;
            if (_state && (typeof _state !== 'object' || isArray$1(_state))) {
              warningWithoutStack$1(false, '%s.state: must be set to an object or null', name);
            }
            if (typeof instance.getChildContext === 'function') {
              !(typeof ctor.childContextTypes === 'object') ? warningWithoutStack$1(false, '%s.getChildContext(): childContextTypes must be defined in order to ' + 'use getChildContext().', name) : void 0;
            }
          }
        }
        function adoptClassInstance(workInProgress, instance) {
          instance.updater = classComponentUpdater;
          workInProgress.stateNode = instance;
          set(instance, workInProgress);
          {
            instance._reactInternalInstance = fakeInternalInstance;
          }
        }
        function constructClassInstance(workInProgress, ctor, props, renderExpirationTime) {
          var isLegacyContextConsumer = false;
          var unmaskedContext = emptyContextObject;
          var context = null;
          var contextType = ctor.contextType;
          if (typeof contextType === 'object' && contextType !== null) {
            {
              if (contextType.$$typeof !== REACT_CONTEXT_TYPE && !didWarnAboutInvalidateContextType.has(ctor)) {
                didWarnAboutInvalidateContextType.add(ctor);
                warningWithoutStack$1(false, '%s defines an invalid contextType. ' + 'contextType should point to the Context object returned by React.createContext(). ' + 'Did you accidentally pass the Context.Provider instead?', getComponentName(ctor) || 'Component');
              }
            }
            context = readContext$1(contextType);
          } else {
            unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
            var contextTypes = ctor.contextTypes;
            isLegacyContextConsumer = contextTypes !== null && contextTypes !== undefined;
            context = isLegacyContextConsumer ? getMaskedContext(workInProgress, unmaskedContext) : emptyContextObject;
          }
          {
            if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
              new ctor(props, context);
            }
          }
          var instance = new ctor(props, context);
          var state = workInProgress.memoizedState = instance.state !== null && instance.state !== undefined ? instance.state : null;
          adoptClassInstance(workInProgress, instance);
          {
            if (typeof ctor.getDerivedStateFromProps === 'function' && state === null) {
              var componentName = getComponentName(ctor) || 'Component';
              if (!didWarnAboutUninitializedState.has(componentName)) {
                didWarnAboutUninitializedState.add(componentName);
                warningWithoutStack$1(false, '`%s` uses `getDerivedStateFromProps` but its initial state is ' + '%s. This is not recommended. Instead, define the initial state by ' + 'assigning an object to `this.state` in the constructor of `%s`. ' + 'This ensures that `getDerivedStateFromProps` arguments have a consistent shape.', componentName, instance.state === null ? 'null' : 'undefined', componentName);
              }
            }
            if (typeof ctor.getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function') {
              var foundWillMountName = null;
              var foundWillReceivePropsName = null;
              var foundWillUpdateName = null;
              if (typeof instance.componentWillMount === 'function' && instance.componentWillMount.__suppressDeprecationWarning !== true) {
                foundWillMountName = 'componentWillMount';
              } else if (typeof instance.UNSAFE_componentWillMount === 'function') {
                foundWillMountName = 'UNSAFE_componentWillMount';
              }
              if (typeof instance.componentWillReceiveProps === 'function' && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {
                foundWillReceivePropsName = 'componentWillReceiveProps';
              } else if (typeof instance.UNSAFE_componentWillReceiveProps === 'function') {
                foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';
              }
              if (typeof instance.componentWillUpdate === 'function' && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {
                foundWillUpdateName = 'componentWillUpdate';
              } else if (typeof instance.UNSAFE_componentWillUpdate === 'function') {
                foundWillUpdateName = 'UNSAFE_componentWillUpdate';
              }
              if (foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {
                var _componentName = getComponentName(ctor) || 'Component';
                var newApiName = typeof ctor.getDerivedStateFromProps === 'function' ? 'getDerivedStateFromProps()' : 'getSnapshotBeforeUpdate()';
                if (!didWarnAboutLegacyLifecyclesAndDerivedState.has(_componentName)) {
                  didWarnAboutLegacyLifecyclesAndDerivedState.add(_componentName);
                  warningWithoutStack$1(false, 'Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n' + '%s uses %s but also contains the following legacy lifecycles:%s%s%s\n\n' + 'The above lifecycles should be removed. Learn more about this warning here:\n' + 'https://fb.me/react-async-component-lifecycle-hooks', _componentName, newApiName, foundWillMountName !== null ? '\n  ' + foundWillMountName : '', foundWillReceivePropsName !== null ? '\n  ' + foundWillReceivePropsName : '', foundWillUpdateName !== null ? '\n  ' + foundWillUpdateName : '');
                }
              }
            }
          }
          if (isLegacyContextConsumer) {
            cacheContext(workInProgress, unmaskedContext, context);
          }
          return instance;
        }
        function callComponentWillMount(workInProgress, instance) {
          startPhaseTimer(workInProgress, 'componentWillMount');
          var oldState = instance.state;
          if (typeof instance.componentWillMount === 'function') {
            instance.componentWillMount();
          }
          if (typeof instance.UNSAFE_componentWillMount === 'function') {
            instance.UNSAFE_componentWillMount();
          }
          stopPhaseTimer();
          if (oldState !== instance.state) {
            {
              warningWithoutStack$1(false, '%s.componentWillMount(): Assigning directly to this.state is ' + "deprecated (except inside a component's " + 'constructor). Use setState instead.', getComponentName(workInProgress.type) || 'Component');
            }
            classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
          }
        }
        function callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext) {
          var oldState = instance.state;
          startPhaseTimer(workInProgress, 'componentWillReceiveProps');
          if (typeof instance.componentWillReceiveProps === 'function') {
            instance.componentWillReceiveProps(newProps, nextContext);
          }
          if (typeof instance.UNSAFE_componentWillReceiveProps === 'function') {
            instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);
          }
          stopPhaseTimer();
          if (instance.state !== oldState) {
            {
              var componentName = getComponentName(workInProgress.type) || 'Component';
              if (!didWarnAboutStateAssignmentForComponent.has(componentName)) {
                didWarnAboutStateAssignmentForComponent.add(componentName);
                warningWithoutStack$1(false, '%s.componentWillReceiveProps(): Assigning directly to ' + "this.state is deprecated (except inside a component's " + 'constructor). Use setState instead.', componentName);
              }
            }
            classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
          }
        }
        function mountClassInstance(workInProgress, ctor, newProps, renderExpirationTime) {
          {
            checkClassInstance(workInProgress, ctor, newProps);
          }
          var instance = workInProgress.stateNode;
          instance.props = newProps;
          instance.state = workInProgress.memoizedState;
          instance.refs = emptyRefsObject;
          var contextType = ctor.contextType;
          if (typeof contextType === 'object' && contextType !== null) {
            instance.context = readContext$1(contextType);
          } else {
            var unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
            instance.context = getMaskedContext(workInProgress, unmaskedContext);
          }
          {
            if (instance.state === newProps) {
              var componentName = getComponentName(ctor) || 'Component';
              if (!didWarnAboutDirectlyAssigningPropsToState.has(componentName)) {
                didWarnAboutDirectlyAssigningPropsToState.add(componentName);
                warningWithoutStack$1(false, '%s: It is not recommended to assign props directly to state ' + "because updates to props won't be reflected in state. " + 'In most cases, it is better to use props directly.', componentName);
              }
            }
            if (workInProgress.mode & StrictMode) {
              ReactStrictModeWarnings.recordUnsafeLifecycleWarnings(workInProgress, instance);
              ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, instance);
            }
            if (warnAboutDeprecatedLifecycles) {
              ReactStrictModeWarnings.recordDeprecationWarnings(workInProgress, instance);
            }
          }
          var updateQueue = workInProgress.updateQueue;
          if (updateQueue !== null) {
            processUpdateQueue(workInProgress, updateQueue, newProps, instance, renderExpirationTime);
            instance.state = workInProgress.memoizedState;
          }
          var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
          if (typeof getDerivedStateFromProps === 'function') {
            applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);
            instance.state = workInProgress.memoizedState;
          }
          if (typeof ctor.getDerivedStateFromProps !== 'function' && typeof instance.getSnapshotBeforeUpdate !== 'function' && (typeof instance.UNSAFE_componentWillMount === 'function' || typeof instance.componentWillMount === 'function')) {
            callComponentWillMount(workInProgress, instance);
            updateQueue = workInProgress.updateQueue;
            if (updateQueue !== null) {
              processUpdateQueue(workInProgress, updateQueue, newProps, instance, renderExpirationTime);
              instance.state = workInProgress.memoizedState;
            }
          }
          if (typeof instance.componentDidMount === 'function') {
            workInProgress.effectTag |= Update;
          }
        }
        function resumeMountClassInstance(workInProgress, ctor, newProps, renderExpirationTime) {
          var instance = workInProgress.stateNode;
          var oldProps = workInProgress.memoizedProps;
          instance.props = oldProps;
          var oldContext = instance.context;
          var contextType = ctor.contextType;
          var nextContext = void 0;
          if (typeof contextType === 'object' && contextType !== null) {
            nextContext = readContext$1(contextType);
          } else {
            var nextLegacyUnmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
            nextContext = getMaskedContext(workInProgress, nextLegacyUnmaskedContext);
          }
          var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
          var hasNewLifecycles = typeof getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function';
          if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === 'function' || typeof instance.componentWillReceiveProps === 'function')) {
            if (oldProps !== newProps || oldContext !== nextContext) {
              callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext);
            }
          }
          resetHasForceUpdateBeforeProcessing();
          var oldState = workInProgress.memoizedState;
          var newState = instance.state = oldState;
          var updateQueue = workInProgress.updateQueue;
          if (updateQueue !== null) {
            processUpdateQueue(workInProgress, updateQueue, newProps, instance, renderExpirationTime);
            newState = workInProgress.memoizedState;
          }
          if (oldProps === newProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing()) {
            if (typeof instance.componentDidMount === 'function') {
              workInProgress.effectTag |= Update;
            }
            return false;
          }
          if (typeof getDerivedStateFromProps === 'function') {
            applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);
            newState = workInProgress.memoizedState;
          }
          var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext);
          if (shouldUpdate) {
            if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillMount === 'function' || typeof instance.componentWillMount === 'function')) {
              startPhaseTimer(workInProgress, 'componentWillMount');
              if (typeof instance.componentWillMount === 'function') {
                instance.componentWillMount();
              }
              if (typeof instance.UNSAFE_componentWillMount === 'function') {
                instance.UNSAFE_componentWillMount();
              }
              stopPhaseTimer();
            }
            if (typeof instance.componentDidMount === 'function') {
              workInProgress.effectTag |= Update;
            }
          } else {
            if (typeof instance.componentDidMount === 'function') {
              workInProgress.effectTag |= Update;
            }
            workInProgress.memoizedProps = newProps;
            workInProgress.memoizedState = newState;
          }
          instance.props = newProps;
          instance.state = newState;
          instance.context = nextContext;
          return shouldUpdate;
        }
        function updateClassInstance(current, workInProgress, ctor, newProps, renderExpirationTime) {
          var instance = workInProgress.stateNode;
          var oldProps = workInProgress.memoizedProps;
          instance.props = workInProgress.type === workInProgress.elementType ? oldProps : resolveDefaultProps(workInProgress.type, oldProps);
          var oldContext = instance.context;
          var contextType = ctor.contextType;
          var nextContext = void 0;
          if (typeof contextType === 'object' && contextType !== null) {
            nextContext = readContext$1(contextType);
          } else {
            var nextUnmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
            nextContext = getMaskedContext(workInProgress, nextUnmaskedContext);
          }
          var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
          var hasNewLifecycles = typeof getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function';
          if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === 'function' || typeof instance.componentWillReceiveProps === 'function')) {
            if (oldProps !== newProps || oldContext !== nextContext) {
              callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext);
            }
          }
          resetHasForceUpdateBeforeProcessing();
          var oldState = workInProgress.memoizedState;
          var newState = instance.state = oldState;
          var updateQueue = workInProgress.updateQueue;
          if (updateQueue !== null) {
            processUpdateQueue(workInProgress, updateQueue, newProps, instance, renderExpirationTime);
            newState = workInProgress.memoizedState;
          }
          if (oldProps === newProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing()) {
            if (typeof instance.componentDidUpdate === 'function') {
              if (oldProps !== current.memoizedProps || oldState !== current.memoizedState) {
                workInProgress.effectTag |= Update;
              }
            }
            if (typeof instance.getSnapshotBeforeUpdate === 'function') {
              if (oldProps !== current.memoizedProps || oldState !== current.memoizedState) {
                workInProgress.effectTag |= Snapshot;
              }
            }
            return false;
          }
          if (typeof getDerivedStateFromProps === 'function') {
            applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);
            newState = workInProgress.memoizedState;
          }
          var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext);
          if (shouldUpdate) {
            if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillUpdate === 'function' || typeof instance.componentWillUpdate === 'function')) {
              startPhaseTimer(workInProgress, 'componentWillUpdate');
              if (typeof instance.componentWillUpdate === 'function') {
                instance.componentWillUpdate(newProps, newState, nextContext);
              }
              if (typeof instance.UNSAFE_componentWillUpdate === 'function') {
                instance.UNSAFE_componentWillUpdate(newProps, newState, nextContext);
              }
              stopPhaseTimer();
            }
            if (typeof instance.componentDidUpdate === 'function') {
              workInProgress.effectTag |= Update;
            }
            if (typeof instance.getSnapshotBeforeUpdate === 'function') {
              workInProgress.effectTag |= Snapshot;
            }
          } else {
            if (typeof instance.componentDidUpdate === 'function') {
              if (oldProps !== current.memoizedProps || oldState !== current.memoizedState) {
                workInProgress.effectTag |= Update;
              }
            }
            if (typeof instance.getSnapshotBeforeUpdate === 'function') {
              if (oldProps !== current.memoizedProps || oldState !== current.memoizedState) {
                workInProgress.effectTag |= Snapshot;
              }
            }
            workInProgress.memoizedProps = newProps;
            workInProgress.memoizedState = newState;
          }
          instance.props = newProps;
          instance.state = newState;
          instance.context = nextContext;
          return shouldUpdate;
        }
        var didWarnAboutMaps = void 0;
        var didWarnAboutGenerators = void 0;
        var didWarnAboutStringRefInStrictMode = void 0;
        var ownerHasKeyUseWarning = void 0;
        var ownerHasFunctionTypeWarning = void 0;
        var warnForMissingKey = function (child) {};
        {
          didWarnAboutMaps = false;
          didWarnAboutGenerators = false;
          didWarnAboutStringRefInStrictMode = {};
          ownerHasKeyUseWarning = {};
          ownerHasFunctionTypeWarning = {};
          warnForMissingKey = function (child) {
            if (child === null || typeof child !== 'object') {
              return;
            }
            if (!child._store || child._store.validated || child.key != null) {
              return;
            }
            !(typeof child._store === 'object') ? invariant(false, 'React Component in warnForMissingKey should have a _store. This error is likely caused by a bug in React. Please file an issue.') : void 0;
            child._store.validated = true;
            var currentComponentErrorInfo = 'Each child in an array or iterator should have a unique ' + '"key" prop. See https://fb.me/react-warning-keys for ' + 'more information.' + getCurrentFiberStackInDev();
            if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
              return;
            }
            ownerHasKeyUseWarning[currentComponentErrorInfo] = true;
            warning$1(false, 'Each child in an array or iterator should have a unique ' + '"key" prop. See https://fb.me/react-warning-keys for ' + 'more information.');
          };
        }
        var isArray = Array.isArray;
        function coerceRef(returnFiber, current$$1, element) {
          var mixedRef = element.ref;
          if (mixedRef !== null && typeof mixedRef !== 'function' && typeof mixedRef !== 'object') {
            {
              if (returnFiber.mode & StrictMode) {
                var componentName = getComponentName(returnFiber.type) || 'Component';
                if (!didWarnAboutStringRefInStrictMode[componentName]) {
                  warningWithoutStack$1(false, 'A string ref, "%s", has been found within a strict mode tree. ' + 'String refs are a source of potential bugs and should be avoided. ' + 'We recommend using createRef() instead.' + '\n%s' + '\n\nLearn more about using refs safely here:' + '\nhttps://fb.me/react-strict-mode-string-ref', mixedRef, getStackByFiberInDevAndProd(returnFiber));
                  didWarnAboutStringRefInStrictMode[componentName] = true;
                }
              }
            }
            if (element._owner) {
              var owner = element._owner;
              var inst = void 0;
              if (owner) {
                var ownerFiber = owner;
                !(ownerFiber.tag === ClassComponent) ? invariant(false, 'Function components cannot have refs.') : void 0;
                inst = ownerFiber.stateNode;
              }
              !inst ? invariant(false, 'Missing owner for string ref %s. This error is likely caused by a bug in React. Please file an issue.', mixedRef) : void 0;
              var stringRef = '' + mixedRef;
              if (current$$1 !== null && current$$1.ref !== null && typeof current$$1.ref === 'function' && current$$1.ref._stringRef === stringRef) {
                return current$$1.ref;
              }
              var ref = function (value) {
                var refs = inst.refs;
                if (refs === emptyRefsObject) {
                  refs = inst.refs = {};
                }
                if (value === null) {
                  delete refs[stringRef];
                } else {
                  refs[stringRef] = value;
                }
              };
              ref._stringRef = stringRef;
              return ref;
            } else {
              !(typeof mixedRef === 'string') ? invariant(false, 'Expected ref to be a function, a string, an object returned by React.createRef(), or null.') : void 0;
              !element._owner ? invariant(false, 'Element ref was specified as a string (%s) but no owner was set. This could happen for one of the following reasons:\n1. You may be adding a ref to a function component\n2. You may be adding a ref to a component that was not created inside a component\'s render method\n3. You have multiple copies of React loaded\nSee https://fb.me/react-refs-must-have-owner for more information.', mixedRef) : void 0;
            }
          }
          return mixedRef;
        }
        function throwOnInvalidObjectType(returnFiber, newChild) {
          if (returnFiber.type !== 'textarea') {
            var addendum = '';
            {
              addendum = ' If you meant to render a collection of children, use an array ' + 'instead.' + getCurrentFiberStackInDev();
            }
            invariant(false, 'Objects are not valid as a React child (found: %s).%s', Object.prototype.toString.call(newChild) === '[object Object]' ? 'object with keys {' + Object.keys(newChild).join(', ') + '}' : newChild, addendum);
          }
        }
        function warnOnFunctionType() {
          var currentComponentErrorInfo = 'Functions are not valid as a React child. This may happen if ' + 'you return a Component instead of <Component /> from render. ' + 'Or maybe you meant to call this function rather than return it.' + getCurrentFiberStackInDev();
          if (ownerHasFunctionTypeWarning[currentComponentErrorInfo]) {
            return;
          }
          ownerHasFunctionTypeWarning[currentComponentErrorInfo] = true;
          warning$1(false, 'Functions are not valid as a React child. This may happen if ' + 'you return a Component instead of <Component /> from render. ' + 'Or maybe you meant to call this function rather than return it.');
        }
        function ChildReconciler(shouldTrackSideEffects) {
          function deleteChild(returnFiber, childToDelete) {
            if (!shouldTrackSideEffects) {
              return;
            }
            var last = returnFiber.lastEffect;
            if (last !== null) {
              last.nextEffect = childToDelete;
              returnFiber.lastEffect = childToDelete;
            } else {
              returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;
            }
            childToDelete.nextEffect = null;
            childToDelete.effectTag = Deletion;
          }
          function deleteRemainingChildren(returnFiber, currentFirstChild) {
            if (!shouldTrackSideEffects) {
              return null;
            }
            var childToDelete = currentFirstChild;
            while (childToDelete !== null) {
              deleteChild(returnFiber, childToDelete);
              childToDelete = childToDelete.sibling;
            }
            return null;
          }
          function mapRemainingChildren(returnFiber, currentFirstChild) {
            var existingChildren = new Map();
            var existingChild = currentFirstChild;
            while (existingChild !== null) {
              if (existingChild.key !== null) {
                existingChildren.set(existingChild.key, existingChild);
              } else {
                existingChildren.set(existingChild.index, existingChild);
              }
              existingChild = existingChild.sibling;
            }
            return existingChildren;
          }
          function useFiber(fiber, pendingProps, expirationTime) {
            var clone = createWorkInProgress(fiber, pendingProps, expirationTime);
            clone.index = 0;
            clone.sibling = null;
            return clone;
          }
          function placeChild(newFiber, lastPlacedIndex, newIndex) {
            newFiber.index = newIndex;
            if (!shouldTrackSideEffects) {
              return lastPlacedIndex;
            }
            var current$$1 = newFiber.alternate;
            if (current$$1 !== null) {
              var oldIndex = current$$1.index;
              if (oldIndex < lastPlacedIndex) {
                newFiber.effectTag = Placement;
                return lastPlacedIndex;
              } else {
                return oldIndex;
              }
            } else {
              newFiber.effectTag = Placement;
              return lastPlacedIndex;
            }
          }
          function placeSingleChild(newFiber) {
            if (shouldTrackSideEffects && newFiber.alternate === null) {
              newFiber.effectTag = Placement;
            }
            return newFiber;
          }
          function updateTextNode(returnFiber, current$$1, textContent, expirationTime) {
            if (current$$1 === null || current$$1.tag !== HostText) {
              var created = createFiberFromText(textContent, returnFiber.mode, expirationTime);
              created.return = returnFiber;
              return created;
            } else {
              var existing = useFiber(current$$1, textContent, expirationTime);
              existing.return = returnFiber;
              return existing;
            }
          }
          function updateElement(returnFiber, current$$1, element, expirationTime) {
            if (current$$1 !== null && current$$1.elementType === element.type) {
              var existing = useFiber(current$$1, element.props, expirationTime);
              existing.ref = coerceRef(returnFiber, current$$1, element);
              existing.return = returnFiber;
              {
                existing._debugSource = element._source;
                existing._debugOwner = element._owner;
              }
              return existing;
            } else {
              var created = createFiberFromElement(element, returnFiber.mode, expirationTime);
              created.ref = coerceRef(returnFiber, current$$1, element);
              created.return = returnFiber;
              return created;
            }
          }
          function updatePortal(returnFiber, current$$1, portal, expirationTime) {
            if (current$$1 === null || current$$1.tag !== HostPortal || current$$1.stateNode.containerInfo !== portal.containerInfo || current$$1.stateNode.implementation !== portal.implementation) {
              var created = createFiberFromPortal(portal, returnFiber.mode, expirationTime);
              created.return = returnFiber;
              return created;
            } else {
              var existing = useFiber(current$$1, portal.children || [], expirationTime);
              existing.return = returnFiber;
              return existing;
            }
          }
          function updateFragment(returnFiber, current$$1, fragment, expirationTime, key) {
            if (current$$1 === null || current$$1.tag !== Fragment) {
              var created = createFiberFromFragment(fragment, returnFiber.mode, expirationTime, key);
              created.return = returnFiber;
              return created;
            } else {
              var existing = useFiber(current$$1, fragment, expirationTime);
              existing.return = returnFiber;
              return existing;
            }
          }
          function createChild(returnFiber, newChild, expirationTime) {
            if (typeof newChild === 'string' || typeof newChild === 'number') {
              var created = createFiberFromText('' + newChild, returnFiber.mode, expirationTime);
              created.return = returnFiber;
              return created;
            }
            if (typeof newChild === 'object' && newChild !== null) {
              switch (newChild.$$typeof) {
                case REACT_ELEMENT_TYPE:
                  {
                    var _created = createFiberFromElement(newChild, returnFiber.mode, expirationTime);
                    _created.ref = coerceRef(returnFiber, null, newChild);
                    _created.return = returnFiber;
                    return _created;
                  }
                case REACT_PORTAL_TYPE:
                  {
                    var _created2 = createFiberFromPortal(newChild, returnFiber.mode, expirationTime);
                    _created2.return = returnFiber;
                    return _created2;
                  }
              }
              if (isArray(newChild) || getIteratorFn(newChild)) {
                var _created3 = createFiberFromFragment(newChild, returnFiber.mode, expirationTime, null);
                _created3.return = returnFiber;
                return _created3;
              }
              throwOnInvalidObjectType(returnFiber, newChild);
            }
            {
              if (typeof newChild === 'function') {
                warnOnFunctionType();
              }
            }
            return null;
          }
          function updateSlot(returnFiber, oldFiber, newChild, expirationTime) {
            var key = oldFiber !== null ? oldFiber.key : null;
            if (typeof newChild === 'string' || typeof newChild === 'number') {
              if (key !== null) {
                return null;
              }
              return updateTextNode(returnFiber, oldFiber, '' + newChild, expirationTime);
            }
            if (typeof newChild === 'object' && newChild !== null) {
              switch (newChild.$$typeof) {
                case REACT_ELEMENT_TYPE:
                  {
                    if (newChild.key === key) {
                      if (newChild.type === REACT_FRAGMENT_TYPE) {
                        return updateFragment(returnFiber, oldFiber, newChild.props.children, expirationTime, key);
                      }
                      return updateElement(returnFiber, oldFiber, newChild, expirationTime);
                    } else {
                      return null;
                    }
                  }
                case REACT_PORTAL_TYPE:
                  {
                    if (newChild.key === key) {
                      return updatePortal(returnFiber, oldFiber, newChild, expirationTime);
                    } else {
                      return null;
                    }
                  }
              }
              if (isArray(newChild) || getIteratorFn(newChild)) {
                if (key !== null) {
                  return null;
                }
                return updateFragment(returnFiber, oldFiber, newChild, expirationTime, null);
              }
              throwOnInvalidObjectType(returnFiber, newChild);
            }
            {
              if (typeof newChild === 'function') {
                warnOnFunctionType();
              }
            }
            return null;
          }
          function updateFromMap(existingChildren, returnFiber, newIdx, newChild, expirationTime) {
            if (typeof newChild === 'string' || typeof newChild === 'number') {
              var matchedFiber = existingChildren.get(newIdx) || null;
              return updateTextNode(returnFiber, matchedFiber, '' + newChild, expirationTime);
            }
            if (typeof newChild === 'object' && newChild !== null) {
              switch (newChild.$$typeof) {
                case REACT_ELEMENT_TYPE:
                  {
                    var _matchedFiber = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;
                    if (newChild.type === REACT_FRAGMENT_TYPE) {
                      return updateFragment(returnFiber, _matchedFiber, newChild.props.children, expirationTime, newChild.key);
                    }
                    return updateElement(returnFiber, _matchedFiber, newChild, expirationTime);
                  }
                case REACT_PORTAL_TYPE:
                  {
                    var _matchedFiber2 = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;
                    return updatePortal(returnFiber, _matchedFiber2, newChild, expirationTime);
                  }
              }
              if (isArray(newChild) || getIteratorFn(newChild)) {
                var _matchedFiber3 = existingChildren.get(newIdx) || null;
                return updateFragment(returnFiber, _matchedFiber3, newChild, expirationTime, null);
              }
              throwOnInvalidObjectType(returnFiber, newChild);
            }
            {
              if (typeof newChild === 'function') {
                warnOnFunctionType();
              }
            }
            return null;
          }
          function warnOnInvalidKey(child, knownKeys) {
            {
              if (typeof child !== 'object' || child === null) {
                return knownKeys;
              }
              switch (child.$$typeof) {
                case REACT_ELEMENT_TYPE:
                case REACT_PORTAL_TYPE:
                  warnForMissingKey(child);
                  var key = child.key;
                  if (typeof key !== 'string') {
                    break;
                  }
                  if (knownKeys === null) {
                    knownKeys = new Set();
                    knownKeys.add(key);
                    break;
                  }
                  if (!knownKeys.has(key)) {
                    knownKeys.add(key);
                    break;
                  }
                  warning$1(false, 'Encountered two children with the same key, `%s`. ' + 'Keys should be unique so that components maintain their identity ' + 'across updates. Non-unique keys may cause children to be ' + 'duplicated and/or omitted — the behavior is unsupported and ' + 'could change in a future version.', key);
                  break;
                default:
                  break;
              }
            }
            return knownKeys;
          }
          function reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, expirationTime) {
            {
              var knownKeys = null;
              for (var i = 0; i < newChildren.length; i++) {
                var child = newChildren[i];
                knownKeys = warnOnInvalidKey(child, knownKeys);
              }
            }
            var resultingFirstChild = null;
            var previousNewFiber = null;
            var oldFiber = currentFirstChild;
            var lastPlacedIndex = 0;
            var newIdx = 0;
            var nextOldFiber = null;
            for (; oldFiber !== null && newIdx < newChildren.length; newIdx++) {
              if (oldFiber.index > newIdx) {
                nextOldFiber = oldFiber;
                oldFiber = null;
              } else {
                nextOldFiber = oldFiber.sibling;
              }
              var newFiber = updateSlot(returnFiber, oldFiber, newChildren[newIdx], expirationTime);
              if (newFiber === null) {
                if (oldFiber === null) {
                  oldFiber = nextOldFiber;
                }
                break;
              }
              if (shouldTrackSideEffects) {
                if (oldFiber && newFiber.alternate === null) {
                  deleteChild(returnFiber, oldFiber);
                }
              }
              lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);
              if (previousNewFiber === null) {
                resultingFirstChild = newFiber;
              } else {
                previousNewFiber.sibling = newFiber;
              }
              previousNewFiber = newFiber;
              oldFiber = nextOldFiber;
            }
            if (newIdx === newChildren.length) {
              deleteRemainingChildren(returnFiber, oldFiber);
              return resultingFirstChild;
            }
            if (oldFiber === null) {
              for (; newIdx < newChildren.length; newIdx++) {
                var _newFiber = createChild(returnFiber, newChildren[newIdx], expirationTime);
                if (!_newFiber) {
                  continue;
                }
                lastPlacedIndex = placeChild(_newFiber, lastPlacedIndex, newIdx);
                if (previousNewFiber === null) {
                  resultingFirstChild = _newFiber;
                } else {
                  previousNewFiber.sibling = _newFiber;
                }
                previousNewFiber = _newFiber;
              }
              return resultingFirstChild;
            }
            var existingChildren = mapRemainingChildren(returnFiber, oldFiber);
            for (; newIdx < newChildren.length; newIdx++) {
              var _newFiber2 = updateFromMap(existingChildren, returnFiber, newIdx, newChildren[newIdx], expirationTime);
              if (_newFiber2) {
                if (shouldTrackSideEffects) {
                  if (_newFiber2.alternate !== null) {
                    existingChildren.delete(_newFiber2.key === null ? newIdx : _newFiber2.key);
                  }
                }
                lastPlacedIndex = placeChild(_newFiber2, lastPlacedIndex, newIdx);
                if (previousNewFiber === null) {
                  resultingFirstChild = _newFiber2;
                } else {
                  previousNewFiber.sibling = _newFiber2;
                }
                previousNewFiber = _newFiber2;
              }
            }
            if (shouldTrackSideEffects) {
              existingChildren.forEach(function (child) {
                return deleteChild(returnFiber, child);
              });
            }
            return resultingFirstChild;
          }
          function reconcileChildrenIterator(returnFiber, currentFirstChild, newChildrenIterable, expirationTime) {
            var iteratorFn = getIteratorFn(newChildrenIterable);
            !(typeof iteratorFn === 'function') ? invariant(false, 'An object is not an iterable. This error is likely caused by a bug in React. Please file an issue.') : void 0;
            {
              if (typeof Symbol === 'function' && newChildrenIterable[Symbol.toStringTag] === 'Generator') {
                !didWarnAboutGenerators ? warning$1(false, 'Using Generators as children is unsupported and will likely yield ' + 'unexpected results because enumerating a generator mutates it. ' + 'You may convert it to an array with `Array.from()` or the ' + '`[...spread]` operator before rendering. Keep in mind ' + 'you might need to polyfill these features for older browsers.') : void 0;
                didWarnAboutGenerators = true;
              }
              if (newChildrenIterable.entries === iteratorFn) {
                !didWarnAboutMaps ? warning$1(false, 'Using Maps as children is unsupported and will likely yield ' + 'unexpected results. Convert it to a sequence/iterable of keyed ' + 'ReactElements instead.') : void 0;
                didWarnAboutMaps = true;
              }
              var _newChildren = iteratorFn.call(newChildrenIterable);
              if (_newChildren) {
                var knownKeys = null;
                var _step = _newChildren.next();
                for (; !_step.done; _step = _newChildren.next()) {
                  var child = _step.value;
                  knownKeys = warnOnInvalidKey(child, knownKeys);
                }
              }
            }
            var newChildren = iteratorFn.call(newChildrenIterable);
            !(newChildren != null) ? invariant(false, 'An iterable object provided no iterator.') : void 0;
            var resultingFirstChild = null;
            var previousNewFiber = null;
            var oldFiber = currentFirstChild;
            var lastPlacedIndex = 0;
            var newIdx = 0;
            var nextOldFiber = null;
            var step = newChildren.next();
            for (; oldFiber !== null && !step.done; newIdx++, step = newChildren.next()) {
              if (oldFiber.index > newIdx) {
                nextOldFiber = oldFiber;
                oldFiber = null;
              } else {
                nextOldFiber = oldFiber.sibling;
              }
              var newFiber = updateSlot(returnFiber, oldFiber, step.value, expirationTime);
              if (newFiber === null) {
                if (!oldFiber) {
                  oldFiber = nextOldFiber;
                }
                break;
              }
              if (shouldTrackSideEffects) {
                if (oldFiber && newFiber.alternate === null) {
                  deleteChild(returnFiber, oldFiber);
                }
              }
              lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);
              if (previousNewFiber === null) {
                resultingFirstChild = newFiber;
              } else {
                previousNewFiber.sibling = newFiber;
              }
              previousNewFiber = newFiber;
              oldFiber = nextOldFiber;
            }
            if (step.done) {
              deleteRemainingChildren(returnFiber, oldFiber);
              return resultingFirstChild;
            }
            if (oldFiber === null) {
              for (; !step.done; newIdx++, step = newChildren.next()) {
                var _newFiber3 = createChild(returnFiber, step.value, expirationTime);
                if (_newFiber3 === null) {
                  continue;
                }
                lastPlacedIndex = placeChild(_newFiber3, lastPlacedIndex, newIdx);
                if (previousNewFiber === null) {
                  resultingFirstChild = _newFiber3;
                } else {
                  previousNewFiber.sibling = _newFiber3;
                }
                previousNewFiber = _newFiber3;
              }
              return resultingFirstChild;
            }
            var existingChildren = mapRemainingChildren(returnFiber, oldFiber);
            for (; !step.done; newIdx++, step = newChildren.next()) {
              var _newFiber4 = updateFromMap(existingChildren, returnFiber, newIdx, step.value, expirationTime);
              if (_newFiber4 !== null) {
                if (shouldTrackSideEffects) {
                  if (_newFiber4.alternate !== null) {
                    existingChildren.delete(_newFiber4.key === null ? newIdx : _newFiber4.key);
                  }
                }
                lastPlacedIndex = placeChild(_newFiber4, lastPlacedIndex, newIdx);
                if (previousNewFiber === null) {
                  resultingFirstChild = _newFiber4;
                } else {
                  previousNewFiber.sibling = _newFiber4;
                }
                previousNewFiber = _newFiber4;
              }
            }
            if (shouldTrackSideEffects) {
              existingChildren.forEach(function (child) {
                return deleteChild(returnFiber, child);
              });
            }
            return resultingFirstChild;
          }
          function reconcileSingleTextNode(returnFiber, currentFirstChild, textContent, expirationTime) {
            if (currentFirstChild !== null && currentFirstChild.tag === HostText) {
              deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
              var existing = useFiber(currentFirstChild, textContent, expirationTime);
              existing.return = returnFiber;
              return existing;
            }
            deleteRemainingChildren(returnFiber, currentFirstChild);
            var created = createFiberFromText(textContent, returnFiber.mode, expirationTime);
            created.return = returnFiber;
            return created;
          }
          function reconcileSingleElement(returnFiber, currentFirstChild, element, expirationTime) {
            var key = element.key;
            var child = currentFirstChild;
            while (child !== null) {
              if (child.key === key) {
                if (child.tag === Fragment ? element.type === REACT_FRAGMENT_TYPE : child.elementType === element.type) {
                  deleteRemainingChildren(returnFiber, child.sibling);
                  var existing = useFiber(child, element.type === REACT_FRAGMENT_TYPE ? element.props.children : element.props, expirationTime);
                  existing.ref = coerceRef(returnFiber, child, element);
                  existing.return = returnFiber;
                  {
                    existing._debugSource = element._source;
                    existing._debugOwner = element._owner;
                  }
                  return existing;
                } else {
                  deleteRemainingChildren(returnFiber, child);
                  break;
                }
              } else {
                deleteChild(returnFiber, child);
              }
              child = child.sibling;
            }
            if (element.type === REACT_FRAGMENT_TYPE) {
              var created = createFiberFromFragment(element.props.children, returnFiber.mode, expirationTime, element.key);
              created.return = returnFiber;
              return created;
            } else {
              var _created4 = createFiberFromElement(element, returnFiber.mode, expirationTime);
              _created4.ref = coerceRef(returnFiber, currentFirstChild, element);
              _created4.return = returnFiber;
              return _created4;
            }
          }
          function reconcileSinglePortal(returnFiber, currentFirstChild, portal, expirationTime) {
            var key = portal.key;
            var child = currentFirstChild;
            while (child !== null) {
              if (child.key === key) {
                if (child.tag === HostPortal && child.stateNode.containerInfo === portal.containerInfo && child.stateNode.implementation === portal.implementation) {
                  deleteRemainingChildren(returnFiber, child.sibling);
                  var existing = useFiber(child, portal.children || [], expirationTime);
                  existing.return = returnFiber;
                  return existing;
                } else {
                  deleteRemainingChildren(returnFiber, child);
                  break;
                }
              } else {
                deleteChild(returnFiber, child);
              }
              child = child.sibling;
            }
            var created = createFiberFromPortal(portal, returnFiber.mode, expirationTime);
            created.return = returnFiber;
            return created;
          }
          function reconcileChildFibers(returnFiber, currentFirstChild, newChild, expirationTime) {
            var isUnkeyedTopLevelFragment = typeof newChild === 'object' && newChild !== null && newChild.type === REACT_FRAGMENT_TYPE && newChild.key === null;
            if (isUnkeyedTopLevelFragment) {
              newChild = newChild.props.children;
            }
            var isObject = typeof newChild === 'object' && newChild !== null;
            if (isObject) {
              switch (newChild.$$typeof) {
                case REACT_ELEMENT_TYPE:
                  return placeSingleChild(reconcileSingleElement(returnFiber, currentFirstChild, newChild, expirationTime));
                case REACT_PORTAL_TYPE:
                  return placeSingleChild(reconcileSinglePortal(returnFiber, currentFirstChild, newChild, expirationTime));
              }
            }
            if (typeof newChild === 'string' || typeof newChild === 'number') {
              return placeSingleChild(reconcileSingleTextNode(returnFiber, currentFirstChild, '' + newChild, expirationTime));
            }
            if (isArray(newChild)) {
              return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, expirationTime);
            }
            if (getIteratorFn(newChild)) {
              return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, expirationTime);
            }
            if (isObject) {
              throwOnInvalidObjectType(returnFiber, newChild);
            }
            {
              if (typeof newChild === 'function') {
                warnOnFunctionType();
              }
            }
            if (typeof newChild === 'undefined' && !isUnkeyedTopLevelFragment) {
              switch (returnFiber.tag) {
                case ClassComponent:
                  {
                    {
                      var instance = returnFiber.stateNode;
                      if (instance.render._isMockFunction) {
                        break;
                      }
                    }
                  }
                case FunctionComponent:
                  {
                    var Component = returnFiber.type;
                    invariant(false, '%s(...): Nothing was returned from render. This usually means a return statement is missing. Or, to render nothing, return null.', Component.displayName || Component.name || 'Component');
                  }
              }
            }
            return deleteRemainingChildren(returnFiber, currentFirstChild);
          }
          return reconcileChildFibers;
        }
        var reconcileChildFibers = ChildReconciler(true);
        var mountChildFibers = ChildReconciler(false);
        function cloneChildFibers(current$$1, workInProgress) {
          !(current$$1 === null || workInProgress.child === current$$1.child) ? invariant(false, 'Resuming work not yet implemented.') : void 0;
          if (workInProgress.child === null) {
            return;
          }
          var currentChild = workInProgress.child;
          var newChild = createWorkInProgress(currentChild, currentChild.pendingProps, currentChild.expirationTime);
          workInProgress.child = newChild;
          newChild.return = workInProgress;
          while (currentChild.sibling !== null) {
            currentChild = currentChild.sibling;
            newChild = newChild.sibling = createWorkInProgress(currentChild, currentChild.pendingProps, currentChild.expirationTime);
            newChild.return = workInProgress;
          }
          newChild.sibling = null;
        }
        var hydrationParentFiber = null;
        var nextHydratableInstance = null;
        var isHydrating = false;
        function enterHydrationState(fiber) {
          if (!supportsHydration) {
            return false;
          }
          var parentInstance = fiber.stateNode.containerInfo;
          nextHydratableInstance = getFirstHydratableChild(parentInstance);
          hydrationParentFiber = fiber;
          isHydrating = true;
          return true;
        }
        function deleteHydratableInstance(returnFiber, instance) {
          {
            switch (returnFiber.tag) {
              case HostRoot:
                didNotHydrateContainerInstance(returnFiber.stateNode.containerInfo, instance);
                break;
              case HostComponent:
                didNotHydrateInstance(returnFiber.type, returnFiber.memoizedProps, returnFiber.stateNode, instance);
                break;
            }
          }
          var childToDelete = createFiberFromHostInstanceForDeletion();
          childToDelete.stateNode = instance;
          childToDelete.return = returnFiber;
          childToDelete.effectTag = Deletion;
          if (returnFiber.lastEffect !== null) {
            returnFiber.lastEffect.nextEffect = childToDelete;
            returnFiber.lastEffect = childToDelete;
          } else {
            returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;
          }
        }
        function insertNonHydratedInstance(returnFiber, fiber) {
          fiber.effectTag |= Placement;
          {
            switch (returnFiber.tag) {
              case HostRoot:
                {
                  var parentContainer = returnFiber.stateNode.containerInfo;
                  switch (fiber.tag) {
                    case HostComponent:
                      var type = fiber.type;
                      var props = fiber.pendingProps;
                      didNotFindHydratableContainerInstance(parentContainer, type, props);
                      break;
                    case HostText:
                      var text = fiber.pendingProps;
                      didNotFindHydratableContainerTextInstance(parentContainer, text);
                      break;
                  }
                  break;
                }
              case HostComponent:
                {
                  var parentType = returnFiber.type;
                  var parentProps = returnFiber.memoizedProps;
                  var parentInstance = returnFiber.stateNode;
                  switch (fiber.tag) {
                    case HostComponent:
                      var _type = fiber.type;
                      var _props = fiber.pendingProps;
                      didNotFindHydratableInstance(parentType, parentProps, parentInstance, _type, _props);
                      break;
                    case HostText:
                      var _text = fiber.pendingProps;
                      didNotFindHydratableTextInstance(parentType, parentProps, parentInstance, _text);
                      break;
                  }
                  break;
                }
              default:
                return;
            }
          }
        }
        function tryHydrate(fiber, nextInstance) {
          switch (fiber.tag) {
            case HostComponent:
              {
                var type = fiber.type;
                var props = fiber.pendingProps;
                var instance = canHydrateInstance(nextInstance, type, props);
                if (instance !== null) {
                  fiber.stateNode = instance;
                  return true;
                }
                return false;
              }
            case HostText:
              {
                var text = fiber.pendingProps;
                var textInstance = canHydrateTextInstance(nextInstance, text);
                if (textInstance !== null) {
                  fiber.stateNode = textInstance;
                  return true;
                }
                return false;
              }
            default:
              return false;
          }
        }
        function tryToClaimNextHydratableInstance(fiber) {
          if (!isHydrating) {
            return;
          }
          var nextInstance = nextHydratableInstance;
          if (!nextInstance) {
            insertNonHydratedInstance(hydrationParentFiber, fiber);
            isHydrating = false;
            hydrationParentFiber = fiber;
            return;
          }
          var firstAttemptedInstance = nextInstance;
          if (!tryHydrate(fiber, nextInstance)) {
            nextInstance = getNextHydratableSibling(firstAttemptedInstance);
            if (!nextInstance || !tryHydrate(fiber, nextInstance)) {
              insertNonHydratedInstance(hydrationParentFiber, fiber);
              isHydrating = false;
              hydrationParentFiber = fiber;
              return;
            }
            deleteHydratableInstance(hydrationParentFiber, firstAttemptedInstance);
          }
          hydrationParentFiber = fiber;
          nextHydratableInstance = getFirstHydratableChild(nextInstance);
        }
        function prepareToHydrateHostInstance(fiber, rootContainerInstance, hostContext) {
          if (!supportsHydration) {
            invariant(false, 'Expected prepareToHydrateHostInstance() to never be called. This error is likely caused by a bug in React. Please file an issue.');
          }
          var instance = fiber.stateNode;
          var updatePayload = hydrateInstance(instance, fiber.type, fiber.memoizedProps, rootContainerInstance, hostContext, fiber);
          fiber.updateQueue = updatePayload;
          if (updatePayload !== null) {
            return true;
          }
          return false;
        }
        function prepareToHydrateHostTextInstance(fiber) {
          if (!supportsHydration) {
            invariant(false, 'Expected prepareToHydrateHostTextInstance() to never be called. This error is likely caused by a bug in React. Please file an issue.');
          }
          var textInstance = fiber.stateNode;
          var textContent = fiber.memoizedProps;
          var shouldUpdate = hydrateTextInstance(textInstance, textContent, fiber);
          {
            if (shouldUpdate) {
              var returnFiber = hydrationParentFiber;
              if (returnFiber !== null) {
                switch (returnFiber.tag) {
                  case HostRoot:
                    {
                      var parentContainer = returnFiber.stateNode.containerInfo;
                      didNotMatchHydratedContainerTextInstance(parentContainer, textInstance, textContent);
                      break;
                    }
                  case HostComponent:
                    {
                      var parentType = returnFiber.type;
                      var parentProps = returnFiber.memoizedProps;
                      var parentInstance = returnFiber.stateNode;
                      didNotMatchHydratedTextInstance(parentType, parentProps, parentInstance, textInstance, textContent);
                      break;
                    }
                }
              }
            }
          }
          return shouldUpdate;
        }
        function popToNextHostParent(fiber) {
          var parent = fiber.return;
          while (parent !== null && parent.tag !== HostComponent && parent.tag !== HostRoot) {
            parent = parent.return;
          }
          hydrationParentFiber = parent;
        }
        function popHydrationState(fiber) {
          if (!supportsHydration) {
            return false;
          }
          if (fiber !== hydrationParentFiber) {
            return false;
          }
          if (!isHydrating) {
            popToNextHostParent(fiber);
            isHydrating = true;
            return false;
          }
          var type = fiber.type;
          if (fiber.tag !== HostComponent || type !== 'head' && type !== 'body' && !shouldSetTextContent(type, fiber.memoizedProps)) {
            var nextInstance = nextHydratableInstance;
            while (nextInstance) {
              deleteHydratableInstance(fiber, nextInstance);
              nextInstance = getNextHydratableSibling(nextInstance);
            }
          }
          popToNextHostParent(fiber);
          nextHydratableInstance = hydrationParentFiber ? getNextHydratableSibling(fiber.stateNode) : null;
          return true;
        }
        function resetHydrationState() {
          if (!supportsHydration) {
            return;
          }
          hydrationParentFiber = null;
          nextHydratableInstance = null;
          isHydrating = false;
        }
        var ReactCurrentOwner$3 = ReactSharedInternals.ReactCurrentOwner;
        var didWarnAboutBadClass = void 0;
        var didWarnAboutContextTypeOnFunctionComponent = void 0;
        var didWarnAboutGetDerivedStateOnFunctionComponent = void 0;
        var didWarnAboutFunctionRefs = void 0;
        var didWarnAboutReassigningProps = void 0;
        {
          didWarnAboutBadClass = {};
          didWarnAboutContextTypeOnFunctionComponent = {};
          didWarnAboutGetDerivedStateOnFunctionComponent = {};
          didWarnAboutFunctionRefs = {};
          didWarnAboutReassigningProps = false;
        }
        function reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime) {
          if (current$$1 === null) {
            workInProgress.child = mountChildFibers(workInProgress, null, nextChildren, renderExpirationTime);
          } else {
            workInProgress.child = reconcileChildFibers(workInProgress, current$$1.child, nextChildren, renderExpirationTime);
          }
        }
        function forceUnmountCurrentAndReconcile(current$$1, workInProgress, nextChildren, renderExpirationTime) {
          workInProgress.child = reconcileChildFibers(workInProgress, current$$1.child, null, renderExpirationTime);
          workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderExpirationTime);
        }
        function updateForwardRef(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {
          {
            if (workInProgress.type !== workInProgress.elementType) {
              var innerPropTypes = Component.propTypes;
              if (innerPropTypes) {
                checkPropTypes(innerPropTypes, nextProps, 'prop', getComponentName(Component), getCurrentFiberStackInDev);
              }
            }
          }
          var render = Component.render;
          var ref = workInProgress.ref;
          var nextChildren = void 0;
          prepareToReadContext(workInProgress, renderExpirationTime);
          prepareToUseHooks(current$$1, workInProgress, renderExpirationTime);
          {
            ReactCurrentOwner$3.current = workInProgress;
            setCurrentPhase('render');
            nextChildren = render(nextProps, ref);
            setCurrentPhase(null);
          }
          nextChildren = finishHooks(render, nextProps, nextChildren, ref);
          workInProgress.effectTag |= PerformedWork;
          reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
          return workInProgress.child;
        }
        function updateMemoComponent(current$$1, workInProgress, Component, nextProps, updateExpirationTime, renderExpirationTime) {
          if (current$$1 === null) {
            var type = Component.type;
            if (isSimpleFunctionComponent(type) && Component.compare === null && Component.defaultProps === undefined) {
              workInProgress.tag = SimpleMemoComponent;
              workInProgress.type = type;
              {
                validateFunctionComponentInDev(workInProgress, type);
              }
              return updateSimpleMemoComponent(current$$1, workInProgress, type, nextProps, updateExpirationTime, renderExpirationTime);
            }
            {
              var innerPropTypes = type.propTypes;
              if (innerPropTypes) {
                checkPropTypes(innerPropTypes, nextProps, 'prop', getComponentName(type), getCurrentFiberStackInDev);
              }
            }
            var child = createFiberFromTypeAndProps(Component.type, null, nextProps, null, workInProgress.mode, renderExpirationTime);
            child.ref = workInProgress.ref;
            child.return = workInProgress;
            workInProgress.child = child;
            return child;
          }
          {
            var _type = Component.type;
            var _innerPropTypes = _type.propTypes;
            if (_innerPropTypes) {
              checkPropTypes(_innerPropTypes, nextProps, 'prop', getComponentName(_type), getCurrentFiberStackInDev);
            }
          }
          var currentChild = current$$1.child;
          if (updateExpirationTime < renderExpirationTime) {
            var prevProps = currentChild.memoizedProps;
            var compare = Component.compare;
            compare = compare !== null ? compare : shallowEqual;
            if (compare(prevProps, nextProps) && current$$1.ref === workInProgress.ref) {
              return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
            }
          }
          workInProgress.effectTag |= PerformedWork;
          var newChild = createWorkInProgress(currentChild, nextProps, renderExpirationTime);
          newChild.ref = workInProgress.ref;
          newChild.return = workInProgress;
          workInProgress.child = newChild;
          return newChild;
        }
        function updateSimpleMemoComponent(current$$1, workInProgress, Component, nextProps, updateExpirationTime, renderExpirationTime) {
          {
            if (workInProgress.type !== workInProgress.elementType) {
              var outerMemoType = workInProgress.elementType;
              if (outerMemoType.$$typeof === REACT_LAZY_TYPE) {
                outerMemoType = refineResolvedLazyComponent(outerMemoType);
              }
              var outerPropTypes = outerMemoType && outerMemoType.propTypes;
              if (outerPropTypes) {
                checkPropTypes(outerPropTypes, nextProps, 'prop', getComponentName(outerMemoType), getCurrentFiberStackInDev);
              }
            }
          }
          if (current$$1 !== null && updateExpirationTime < renderExpirationTime) {
            var prevProps = current$$1.memoizedProps;
            if (shallowEqual(prevProps, nextProps) && current$$1.ref === workInProgress.ref) {
              return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
            }
          }
          return updateFunctionComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime);
        }
        function updateFragment(current$$1, workInProgress, renderExpirationTime) {
          var nextChildren = workInProgress.pendingProps;
          reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
          return workInProgress.child;
        }
        function updateMode(current$$1, workInProgress, renderExpirationTime) {
          var nextChildren = workInProgress.pendingProps.children;
          reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
          return workInProgress.child;
        }
        function updateProfiler(current$$1, workInProgress, renderExpirationTime) {
          if (enableProfilerTimer) {
            workInProgress.effectTag |= Update;
          }
          var nextProps = workInProgress.pendingProps;
          var nextChildren = nextProps.children;
          reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
          return workInProgress.child;
        }
        function markRef(current$$1, workInProgress) {
          var ref = workInProgress.ref;
          if (current$$1 === null && ref !== null || current$$1 !== null && current$$1.ref !== ref) {
            workInProgress.effectTag |= Ref;
          }
        }
        function updateFunctionComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {
          {
            if (workInProgress.type !== workInProgress.elementType) {
              var innerPropTypes = Component.propTypes;
              if (innerPropTypes) {
                checkPropTypes(innerPropTypes, nextProps, 'prop', getComponentName(Component), getCurrentFiberStackInDev);
              }
            }
          }
          var unmaskedContext = getUnmaskedContext(workInProgress, Component, true);
          var context = getMaskedContext(workInProgress, unmaskedContext);
          var nextChildren = void 0;
          prepareToReadContext(workInProgress, renderExpirationTime);
          prepareToUseHooks(current$$1, workInProgress, renderExpirationTime);
          {
            ReactCurrentOwner$3.current = workInProgress;
            setCurrentPhase('render');
            nextChildren = Component(nextProps, context);
            setCurrentPhase(null);
          }
          nextChildren = finishHooks(Component, nextProps, nextChildren, context);
          workInProgress.effectTag |= PerformedWork;
          reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
          return workInProgress.child;
        }
        function updateClassComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {
          {
            if (workInProgress.type !== workInProgress.elementType) {
              var innerPropTypes = Component.propTypes;
              if (innerPropTypes) {
                checkPropTypes(innerPropTypes, nextProps, 'prop', getComponentName(Component), getCurrentFiberStackInDev);
              }
            }
          }
          var hasContext = void 0;
          if (isContextProvider(Component)) {
            hasContext = true;
            pushContextProvider(workInProgress);
          } else {
            hasContext = false;
          }
          prepareToReadContext(workInProgress, renderExpirationTime);
          var instance = workInProgress.stateNode;
          var shouldUpdate = void 0;
          if (instance === null) {
            if (current$$1 !== null) {
              current$$1.alternate = null;
              workInProgress.alternate = null;
              workInProgress.effectTag |= Placement;
            }
            constructClassInstance(workInProgress, Component, nextProps, renderExpirationTime);
            mountClassInstance(workInProgress, Component, nextProps, renderExpirationTime);
            shouldUpdate = true;
          } else if (current$$1 === null) {
            shouldUpdate = resumeMountClassInstance(workInProgress, Component, nextProps, renderExpirationTime);
          } else {
            shouldUpdate = updateClassInstance(current$$1, workInProgress, Component, nextProps, renderExpirationTime);
          }
          var nextUnitOfWork = finishClassComponent(current$$1, workInProgress, Component, shouldUpdate, hasContext, renderExpirationTime);
          {
            var inst = workInProgress.stateNode;
            if (inst.props !== nextProps) {
              !didWarnAboutReassigningProps ? warning$1(false, 'It looks like %s is reassigning its own `this.props` while rendering. ' + 'This is not supported and can lead to confusing bugs.', getComponentName(workInProgress.type) || 'a component') : void 0;
              didWarnAboutReassigningProps = true;
            }
          }
          return nextUnitOfWork;
        }
        function finishClassComponent(current$$1, workInProgress, Component, shouldUpdate, hasContext, renderExpirationTime) {
          markRef(current$$1, workInProgress);
          var didCaptureError = (workInProgress.effectTag & DidCapture) !== NoEffect;
          if (!shouldUpdate && !didCaptureError) {
            if (hasContext) {
              invalidateContextProvider(workInProgress, Component, false);
            }
            return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
          }
          var instance = workInProgress.stateNode;
          ReactCurrentOwner$3.current = workInProgress;
          var nextChildren = void 0;
          if (didCaptureError && typeof Component.getDerivedStateFromError !== 'function') {
            nextChildren = null;
            if (enableProfilerTimer) {
              stopProfilerTimerIfRunning(workInProgress);
            }
          } else {
            {
              setCurrentPhase('render');
              nextChildren = instance.render();
              if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
                instance.render();
              }
              setCurrentPhase(null);
            }
          }
          workInProgress.effectTag |= PerformedWork;
          if (current$$1 !== null && didCaptureError) {
            forceUnmountCurrentAndReconcile(current$$1, workInProgress, nextChildren, renderExpirationTime);
          } else {
            reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
          }
          workInProgress.memoizedState = instance.state;
          if (hasContext) {
            invalidateContextProvider(workInProgress, Component, true);
          }
          return workInProgress.child;
        }
        function pushHostRootContext(workInProgress) {
          var root = workInProgress.stateNode;
          if (root.pendingContext) {
            pushTopLevelContextObject(workInProgress, root.pendingContext, root.pendingContext !== root.context);
          } else if (root.context) {
            pushTopLevelContextObject(workInProgress, root.context, false);
          }
          pushHostContainer(workInProgress, root.containerInfo);
        }
        function updateHostRoot(current$$1, workInProgress, renderExpirationTime) {
          pushHostRootContext(workInProgress);
          var updateQueue = workInProgress.updateQueue;
          !(updateQueue !== null) ? invariant(false, 'If the root does not have an updateQueue, we should have already bailed out. This error is likely caused by a bug in React. Please file an issue.') : void 0;
          var nextProps = workInProgress.pendingProps;
          var prevState = workInProgress.memoizedState;
          var prevChildren = prevState !== null ? prevState.element : null;
          processUpdateQueue(workInProgress, updateQueue, nextProps, null, renderExpirationTime);
          var nextState = workInProgress.memoizedState;
          var nextChildren = nextState.element;
          if (nextChildren === prevChildren) {
            resetHydrationState();
            return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
          }
          var root = workInProgress.stateNode;
          if ((current$$1 === null || current$$1.child === null) && root.hydrate && enterHydrationState(workInProgress)) {
            workInProgress.effectTag |= Placement;
            workInProgress.child = mountChildFibers(workInProgress, null, nextChildren, renderExpirationTime);
          } else {
            reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
            resetHydrationState();
          }
          return workInProgress.child;
        }
        function updateHostComponent(current$$1, workInProgress, renderExpirationTime) {
          pushHostContext(workInProgress);
          if (current$$1 === null) {
            tryToClaimNextHydratableInstance(workInProgress);
          }
          var type = workInProgress.type;
          var nextProps = workInProgress.pendingProps;
          var prevProps = current$$1 !== null ? current$$1.memoizedProps : null;
          var nextChildren = nextProps.children;
          var isDirectTextChild = shouldSetTextContent(type, nextProps);
          if (isDirectTextChild) {
            nextChildren = null;
          } else if (prevProps !== null && shouldSetTextContent(type, prevProps)) {
            workInProgress.effectTag |= ContentReset;
          }
          markRef(current$$1, workInProgress);
          if (renderExpirationTime !== Never && workInProgress.mode & ConcurrentMode && shouldDeprioritizeSubtree(type, nextProps)) {
            workInProgress.expirationTime = Never;
            return null;
          }
          reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
          return workInProgress.child;
        }
        function updateHostText(current$$1, workInProgress) {
          if (current$$1 === null) {
            tryToClaimNextHydratableInstance(workInProgress);
          }
          return null;
        }
        function mountLazyComponent(_current, workInProgress, elementType, updateExpirationTime, renderExpirationTime) {
          if (_current !== null) {
            _current.alternate = null;
            workInProgress.alternate = null;
            workInProgress.effectTag |= Placement;
          }
          var props = workInProgress.pendingProps;
          cancelWorkTimer(workInProgress);
          var Component = readLazyComponentType(elementType);
          workInProgress.type = Component;
          var resolvedTag = workInProgress.tag = resolveLazyComponentTag(Component);
          startWorkTimer(workInProgress);
          var resolvedProps = resolveDefaultProps(Component, props);
          var child = void 0;
          switch (resolvedTag) {
            case FunctionComponent:
              {
                child = updateFunctionComponent(null, workInProgress, Component, resolvedProps, renderExpirationTime);
                break;
              }
            case ClassComponent:
              {
                child = updateClassComponent(null, workInProgress, Component, resolvedProps, renderExpirationTime);
                break;
              }
            case ForwardRef:
              {
                child = updateForwardRef(null, workInProgress, Component, resolvedProps, renderExpirationTime);
                break;
              }
            case MemoComponent:
              {
                {
                  if (workInProgress.type !== workInProgress.elementType) {
                    var outerPropTypes = Component.propTypes;
                    if (outerPropTypes) {
                      checkPropTypes(outerPropTypes, resolvedProps, 'prop', getComponentName(Component), getCurrentFiberStackInDev);
                    }
                  }
                }
                child = updateMemoComponent(null, workInProgress, Component, resolveDefaultProps(Component.type, resolvedProps), updateExpirationTime, renderExpirationTime);
                break;
              }
            default:
              {
                var hint = '';
                {
                  if (Component !== null && typeof Component === 'object' && Component.$$typeof === REACT_LAZY_TYPE) {
                    hint = ' Did you wrap a component in React.lazy() more than once?';
                  }
                }
                invariant(false, 'Element type is invalid. Received a promise that resolves to: %s. Lazy element type must resolve to a class or function.%s', Component, hint);
              }
          }
          return child;
        }
        function mountIncompleteClassComponent(_current, workInProgress, Component, nextProps, renderExpirationTime) {
          if (_current !== null) {
            _current.alternate = null;
            workInProgress.alternate = null;
            workInProgress.effectTag |= Placement;
          }
          workInProgress.tag = ClassComponent;
          var hasContext = void 0;
          if (isContextProvider(Component)) {
            hasContext = true;
            pushContextProvider(workInProgress);
          } else {
            hasContext = false;
          }
          prepareToReadContext(workInProgress, renderExpirationTime);
          constructClassInstance(workInProgress, Component, nextProps, renderExpirationTime);
          mountClassInstance(workInProgress, Component, nextProps, renderExpirationTime);
          return finishClassComponent(null, workInProgress, Component, true, hasContext, renderExpirationTime);
        }
        function mountIndeterminateComponent(_current, workInProgress, Component, renderExpirationTime) {
          if (_current !== null) {
            _current.alternate = null;
            workInProgress.alternate = null;
            workInProgress.effectTag |= Placement;
          }
          var props = workInProgress.pendingProps;
          var unmaskedContext = getUnmaskedContext(workInProgress, Component, false);
          var context = getMaskedContext(workInProgress, unmaskedContext);
          prepareToReadContext(workInProgress, renderExpirationTime);
          prepareToUseHooks(null, workInProgress, renderExpirationTime);
          var value = void 0;
          {
            if (Component.prototype && typeof Component.prototype.render === 'function') {
              var componentName = getComponentName(Component) || 'Unknown';
              if (!didWarnAboutBadClass[componentName]) {
                warningWithoutStack$1(false, "The <%s /> component appears to have a render method, but doesn't extend React.Component. " + 'This is likely to cause errors. Change %s to extend React.Component instead.', componentName, componentName);
                didWarnAboutBadClass[componentName] = true;
              }
            }
            if (workInProgress.mode & StrictMode) {
              ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, null);
            }
            ReactCurrentOwner$3.current = workInProgress;
            value = Component(props, context);
          }
          workInProgress.effectTag |= PerformedWork;
          if (typeof value === 'object' && value !== null && typeof value.render === 'function' && value.$$typeof === undefined) {
            workInProgress.tag = ClassComponent;
            resetHooks();
            var hasContext = false;
            if (isContextProvider(Component)) {
              hasContext = true;
              pushContextProvider(workInProgress);
            } else {
              hasContext = false;
            }
            workInProgress.memoizedState = value.state !== null && value.state !== undefined ? value.state : null;
            var getDerivedStateFromProps = Component.getDerivedStateFromProps;
            if (typeof getDerivedStateFromProps === 'function') {
              applyDerivedStateFromProps(workInProgress, Component, getDerivedStateFromProps, props);
            }
            adoptClassInstance(workInProgress, value);
            mountClassInstance(workInProgress, Component, props, renderExpirationTime);
            return finishClassComponent(null, workInProgress, Component, true, hasContext, renderExpirationTime);
          } else {
            workInProgress.tag = FunctionComponent;
            value = finishHooks(Component, props, value, context);
            reconcileChildren(null, workInProgress, value, renderExpirationTime);
            {
              validateFunctionComponentInDev(workInProgress, Component);
            }
            return workInProgress.child;
          }
        }
        function validateFunctionComponentInDev(workInProgress, Component) {
          if (Component) {
            !!Component.childContextTypes ? warningWithoutStack$1(false, '%s(...): childContextTypes cannot be defined on a function component.', Component.displayName || Component.name || 'Component') : void 0;
          }
          if (workInProgress.ref !== null) {
            var info = '';
            var ownerName = getCurrentFiberOwnerNameInDevOrNull();
            if (ownerName) {
              info += '\n\nCheck the render method of `' + ownerName + '`.';
            }
            var warningKey = ownerName || workInProgress._debugID || '';
            var debugSource = workInProgress._debugSource;
            if (debugSource) {
              warningKey = debugSource.fileName + ':' + debugSource.lineNumber;
            }
            if (!didWarnAboutFunctionRefs[warningKey]) {
              didWarnAboutFunctionRefs[warningKey] = true;
              warning$1(false, 'Function components cannot be given refs. ' + 'Attempts to access this ref will fail.%s', info);
            }
          }
          if (typeof Component.getDerivedStateFromProps === 'function') {
            var componentName = getComponentName(Component) || 'Unknown';
            if (!didWarnAboutGetDerivedStateOnFunctionComponent[componentName]) {
              warningWithoutStack$1(false, '%s: Function components do not support getDerivedStateFromProps.', componentName);
              didWarnAboutGetDerivedStateOnFunctionComponent[componentName] = true;
            }
          }
          if (typeof Component.contextType === 'object' && Component.contextType !== null) {
            var _componentName = getComponentName(Component) || 'Unknown';
            if (!didWarnAboutContextTypeOnFunctionComponent[_componentName]) {
              warningWithoutStack$1(false, '%s: Function components do not support contextType.', _componentName);
              didWarnAboutContextTypeOnFunctionComponent[_componentName] = true;
            }
          }
        }
        function updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime) {
          var mode = workInProgress.mode;
          var nextProps = workInProgress.pendingProps;
          var nextState = workInProgress.memoizedState;
          var nextDidTimeout = void 0;
          if ((workInProgress.effectTag & DidCapture) === NoEffect) {
            nextState = null;
            nextDidTimeout = false;
          } else {
            nextState = { timedOutAt: nextState !== null ? nextState.timedOutAt : NoWork };
            nextDidTimeout = true;
            workInProgress.effectTag &= ~DidCapture;
          }
          var child = void 0;
          var next = void 0;
          if (current$$1 === null) {
            if (nextDidTimeout) {
              var nextFallbackChildren = nextProps.fallback;
              var primaryChildFragment = createFiberFromFragment(null, mode, NoWork, null);
              if ((workInProgress.mode & ConcurrentMode) === NoContext) {
                var progressedState = workInProgress.memoizedState;
                var progressedPrimaryChild = progressedState !== null ? workInProgress.child.child : workInProgress.child;
                primaryChildFragment.child = progressedPrimaryChild;
              }
              var fallbackChildFragment = createFiberFromFragment(nextFallbackChildren, mode, renderExpirationTime, null);
              primaryChildFragment.sibling = fallbackChildFragment;
              child = primaryChildFragment;
              next = fallbackChildFragment;
              child.return = next.return = workInProgress;
            } else {
              var nextPrimaryChildren = nextProps.children;
              child = next = mountChildFibers(workInProgress, null, nextPrimaryChildren, renderExpirationTime);
            }
          } else {
            var prevState = current$$1.memoizedState;
            var prevDidTimeout = prevState !== null;
            if (prevDidTimeout) {
              var currentPrimaryChildFragment = current$$1.child;
              var currentFallbackChildFragment = currentPrimaryChildFragment.sibling;
              if (nextDidTimeout) {
                var _nextFallbackChildren = nextProps.fallback;
                var _primaryChildFragment = createWorkInProgress(currentPrimaryChildFragment, currentPrimaryChildFragment.pendingProps, NoWork);
                if ((workInProgress.mode & ConcurrentMode) === NoContext) {
                  var _progressedState = workInProgress.memoizedState;
                  var _progressedPrimaryChild = _progressedState !== null ? workInProgress.child.child : workInProgress.child;
                  if (_progressedPrimaryChild !== currentPrimaryChildFragment.child) {
                    _primaryChildFragment.child = _progressedPrimaryChild;
                  }
                }
                if (enableProfilerTimer && workInProgress.mode & ProfileMode) {
                  var treeBaseDuration = 0;
                  var hiddenChild = _primaryChildFragment.child;
                  while (hiddenChild !== null) {
                    treeBaseDuration += hiddenChild.treeBaseDuration;
                    hiddenChild = hiddenChild.sibling;
                  }
                  _primaryChildFragment.treeBaseDuration = treeBaseDuration;
                }
                var _fallbackChildFragment = _primaryChildFragment.sibling = createWorkInProgress(currentFallbackChildFragment, _nextFallbackChildren, currentFallbackChildFragment.expirationTime);
                child = _primaryChildFragment;
                _primaryChildFragment.childExpirationTime = NoWork;
                next = _fallbackChildFragment;
                child.return = next.return = workInProgress;
              } else {
                var _nextPrimaryChildren = nextProps.children;
                var currentPrimaryChild = currentPrimaryChildFragment.child;
                var primaryChild = reconcileChildFibers(workInProgress, currentPrimaryChild, _nextPrimaryChildren, renderExpirationTime);
                child = next = primaryChild;
              }
            } else {
              var _currentPrimaryChild = current$$1.child;
              if (nextDidTimeout) {
                var _nextFallbackChildren2 = nextProps.fallback;
                var _primaryChildFragment2 = createFiberFromFragment(null, mode, NoWork, null);
                _primaryChildFragment2.child = _currentPrimaryChild;
                if ((workInProgress.mode & ConcurrentMode) === NoContext) {
                  var _progressedState2 = workInProgress.memoizedState;
                  var _progressedPrimaryChild2 = _progressedState2 !== null ? workInProgress.child.child : workInProgress.child;
                  _primaryChildFragment2.child = _progressedPrimaryChild2;
                }
                if (enableProfilerTimer && workInProgress.mode & ProfileMode) {
                  var _treeBaseDuration = 0;
                  var _hiddenChild = _primaryChildFragment2.child;
                  while (_hiddenChild !== null) {
                    _treeBaseDuration += _hiddenChild.treeBaseDuration;
                    _hiddenChild = _hiddenChild.sibling;
                  }
                  _primaryChildFragment2.treeBaseDuration = _treeBaseDuration;
                }
                var _fallbackChildFragment2 = _primaryChildFragment2.sibling = createFiberFromFragment(_nextFallbackChildren2, mode, renderExpirationTime, null);
                _fallbackChildFragment2.effectTag |= Placement;
                child = _primaryChildFragment2;
                _primaryChildFragment2.childExpirationTime = NoWork;
                next = _fallbackChildFragment2;
                child.return = next.return = workInProgress;
              } else {
                var _nextPrimaryChildren2 = nextProps.children;
                next = child = reconcileChildFibers(workInProgress, _currentPrimaryChild, _nextPrimaryChildren2, renderExpirationTime);
              }
            }
            workInProgress.stateNode = current$$1.stateNode;
          }
          workInProgress.memoizedState = nextState;
          workInProgress.child = child;
          return next;
        }
        function updatePortalComponent(current$$1, workInProgress, renderExpirationTime) {
          pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
          var nextChildren = workInProgress.pendingProps;
          if (current$$1 === null) {
            workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderExpirationTime);
          } else {
            reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
          }
          return workInProgress.child;
        }
        function updateContextProvider(current$$1, workInProgress, renderExpirationTime) {
          var providerType = workInProgress.type;
          var context = providerType._context;
          var newProps = workInProgress.pendingProps;
          var oldProps = workInProgress.memoizedProps;
          var newValue = newProps.value;
          {
            var providerPropTypes = workInProgress.type.propTypes;
            if (providerPropTypes) {
              checkPropTypes(providerPropTypes, newProps, 'prop', 'Context.Provider', getCurrentFiberStackInDev);
            }
          }
          pushProvider(workInProgress, newValue);
          if (oldProps !== null) {
            var oldValue = oldProps.value;
            var changedBits = calculateChangedBits(context, newValue, oldValue);
            if (changedBits === 0) {
              if (oldProps.children === newProps.children && !hasContextChanged()) {
                return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
              }
            } else {
              propagateContextChange(workInProgress, context, changedBits, renderExpirationTime);
            }
          }
          var newChildren = newProps.children;
          reconcileChildren(current$$1, workInProgress, newChildren, renderExpirationTime);
          return workInProgress.child;
        }
        var hasWarnedAboutUsingContextAsConsumer = false;
        function updateContextConsumer(current$$1, workInProgress, renderExpirationTime) {
          var context = workInProgress.type;
          {
            if (context._context === undefined) {
              if (context !== context.Consumer) {
                if (!hasWarnedAboutUsingContextAsConsumer) {
                  hasWarnedAboutUsingContextAsConsumer = true;
                  warning$1(false, 'Rendering <Context> directly is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Consumer> instead?');
                }
              }
            } else {
              context = context._context;
            }
          }
          var newProps = workInProgress.pendingProps;
          var render = newProps.children;
          {
            !(typeof render === 'function') ? warningWithoutStack$1(false, 'A context consumer was rendered with multiple children, or a child ' + "that isn't a function. A context consumer expects a single child " + 'that is a function. If you did pass a function, make sure there ' + 'is no trailing or leading whitespace around it.') : void 0;
          }
          prepareToReadContext(workInProgress, renderExpirationTime);
          var newValue = readContext(context, newProps.unstable_observedBits);
          var newChildren = void 0;
          {
            ReactCurrentOwner$3.current = workInProgress;
            setCurrentPhase('render');
            newChildren = render(newValue);
            setCurrentPhase(null);
          }
          workInProgress.effectTag |= PerformedWork;
          reconcileChildren(current$$1, workInProgress, newChildren, renderExpirationTime);
          return workInProgress.child;
        }
        function bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime) {
          cancelWorkTimer(workInProgress);
          if (current$$1 !== null) {
            workInProgress.firstContextDependency = current$$1.firstContextDependency;
          }
          if (enableProfilerTimer) {
            stopProfilerTimerIfRunning(workInProgress);
          }
          var childExpirationTime = workInProgress.childExpirationTime;
          if (childExpirationTime < renderExpirationTime) {
            return null;
          } else {
            cloneChildFibers(current$$1, workInProgress);
            return workInProgress.child;
          }
        }
        function beginWork(current$$1, workInProgress, renderExpirationTime) {
          var updateExpirationTime = workInProgress.expirationTime;
          if (current$$1 !== null) {
            var oldProps = current$$1.memoizedProps;
            var newProps = workInProgress.pendingProps;
            if (oldProps === newProps && !hasContextChanged() && updateExpirationTime < renderExpirationTime) {
              switch (workInProgress.tag) {
                case HostRoot:
                  pushHostRootContext(workInProgress);
                  resetHydrationState();
                  break;
                case HostComponent:
                  pushHostContext(workInProgress);
                  break;
                case ClassComponent:
                  {
                    var Component = workInProgress.type;
                    if (isContextProvider(Component)) {
                      pushContextProvider(workInProgress);
                    }
                    break;
                  }
                case HostPortal:
                  pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
                  break;
                case ContextProvider:
                  {
                    var newValue = workInProgress.memoizedProps.value;
                    pushProvider(workInProgress, newValue);
                    break;
                  }
                case Profiler:
                  if (enableProfilerTimer) {
                    workInProgress.effectTag |= Update;
                  }
                  break;
                case SuspenseComponent:
                  {
                    var state = workInProgress.memoizedState;
                    var didTimeout = state !== null;
                    if (didTimeout) {
                      var primaryChildFragment = workInProgress.child;
                      var primaryChildExpirationTime = primaryChildFragment.childExpirationTime;
                      if (primaryChildExpirationTime !== NoWork && primaryChildExpirationTime >= renderExpirationTime) {
                        return updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime);
                      } else {
                        var child = bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
                        if (child !== null) {
                          return child.sibling;
                        } else {
                          return null;
                        }
                      }
                    }
                    break;
                  }
              }
              return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
            }
          }
          workInProgress.expirationTime = NoWork;
          switch (workInProgress.tag) {
            case IndeterminateComponent:
              {
                var elementType = workInProgress.elementType;
                return mountIndeterminateComponent(current$$1, workInProgress, elementType, renderExpirationTime);
              }
            case LazyComponent:
              {
                var _elementType = workInProgress.elementType;
                return mountLazyComponent(current$$1, workInProgress, _elementType, updateExpirationTime, renderExpirationTime);
              }
            case FunctionComponent:
              {
                var _Component = workInProgress.type;
                var unresolvedProps = workInProgress.pendingProps;
                var resolvedProps = workInProgress.elementType === _Component ? unresolvedProps : resolveDefaultProps(_Component, unresolvedProps);
                return updateFunctionComponent(current$$1, workInProgress, _Component, resolvedProps, renderExpirationTime);
              }
            case ClassComponent:
              {
                var _Component2 = workInProgress.type;
                var _unresolvedProps = workInProgress.pendingProps;
                var _resolvedProps = workInProgress.elementType === _Component2 ? _unresolvedProps : resolveDefaultProps(_Component2, _unresolvedProps);
                return updateClassComponent(current$$1, workInProgress, _Component2, _resolvedProps, renderExpirationTime);
              }
            case HostRoot:
              return updateHostRoot(current$$1, workInProgress, renderExpirationTime);
            case HostComponent:
              return updateHostComponent(current$$1, workInProgress, renderExpirationTime);
            case HostText:
              return updateHostText(current$$1, workInProgress);
            case SuspenseComponent:
              return updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime);
            case HostPortal:
              return updatePortalComponent(current$$1, workInProgress, renderExpirationTime);
            case ForwardRef:
              {
                var type = workInProgress.type;
                var _unresolvedProps2 = workInProgress.pendingProps;
                var _resolvedProps2 = workInProgress.elementType === type ? _unresolvedProps2 : resolveDefaultProps(type, _unresolvedProps2);
                return updateForwardRef(current$$1, workInProgress, type, _resolvedProps2, renderExpirationTime);
              }
            case Fragment:
              return updateFragment(current$$1, workInProgress, renderExpirationTime);
            case Mode:
              return updateMode(current$$1, workInProgress, renderExpirationTime);
            case Profiler:
              return updateProfiler(current$$1, workInProgress, renderExpirationTime);
            case ContextProvider:
              return updateContextProvider(current$$1, workInProgress, renderExpirationTime);
            case ContextConsumer:
              return updateContextConsumer(current$$1, workInProgress, renderExpirationTime);
            case MemoComponent:
              {
                var _type2 = workInProgress.type;
                var _unresolvedProps3 = workInProgress.pendingProps;
                var _resolvedProps3 = resolveDefaultProps(_type2, _unresolvedProps3);
                {
                  if (workInProgress.type !== workInProgress.elementType) {
                    var outerPropTypes = _type2.propTypes;
                    if (outerPropTypes) {
                      checkPropTypes(outerPropTypes, _resolvedProps3, 'prop', getComponentName(_type2), getCurrentFiberStackInDev);
                    }
                  }
                }
                _resolvedProps3 = resolveDefaultProps(_type2.type, _resolvedProps3);
                return updateMemoComponent(current$$1, workInProgress, _type2, _resolvedProps3, updateExpirationTime, renderExpirationTime);
              }
            case SimpleMemoComponent:
              {
                return updateSimpleMemoComponent(current$$1, workInProgress, workInProgress.type, workInProgress.pendingProps, updateExpirationTime, renderExpirationTime);
              }
            case IncompleteClassComponent:
              {
                var _Component3 = workInProgress.type;
                var _unresolvedProps4 = workInProgress.pendingProps;
                var _resolvedProps4 = workInProgress.elementType === _Component3 ? _unresolvedProps4 : resolveDefaultProps(_Component3, _unresolvedProps4);
                return mountIncompleteClassComponent(current$$1, workInProgress, _Component3, _resolvedProps4, renderExpirationTime);
              }
            default:
              invariant(false, 'Unknown unit of work tag. This error is likely caused by a bug in React. Please file an issue.');
          }
        }
        function markUpdate(workInProgress) {
          workInProgress.effectTag |= Update;
        }
        function markRef$1(workInProgress) {
          workInProgress.effectTag |= Ref;
        }
        var appendAllChildren = void 0;
        var updateHostContainer = void 0;
        var updateHostComponent$1 = void 0;
        var updateHostText$1 = void 0;
        if (supportsMutation) {
          appendAllChildren = function (parent, workInProgress, needsVisibilityToggle, isHidden) {
            var node = workInProgress.child;
            while (node !== null) {
              if (node.tag === HostComponent || node.tag === HostText) {
                appendInitialChild(parent, node.stateNode);
              } else if (node.tag === HostPortal) {} else if (node.child !== null) {
                node.child.return = node;
                node = node.child;
                continue;
              }
              if (node === workInProgress) {
                return;
              }
              while (node.sibling === null) {
                if (node.return === null || node.return === workInProgress) {
                  return;
                }
                node = node.return;
              }
              node.sibling.return = node.return;
              node = node.sibling;
            }
          };
          updateHostContainer = function (workInProgress) {};
          updateHostComponent$1 = function (current, workInProgress, type, newProps, rootContainerInstance) {
            var oldProps = current.memoizedProps;
            if (oldProps === newProps) {
              return;
            }
            var instance = workInProgress.stateNode;
            var currentHostContext = getHostContext();
            var updatePayload = prepareUpdate(instance, type, oldProps, newProps, rootContainerInstance, currentHostContext);
            workInProgress.updateQueue = updatePayload;
            if (updatePayload) {
              markUpdate(workInProgress);
            }
          };
          updateHostText$1 = function (current, workInProgress, oldText, newText) {
            if (oldText !== newText) {
              markUpdate(workInProgress);
            }
          };
        } else if (supportsPersistence) {
          appendAllChildren = function (parent, workInProgress, needsVisibilityToggle, isHidden) {
            var node = workInProgress.child;
            while (node !== null) {
              branches: if (node.tag === HostComponent) {
                var instance = node.stateNode;
                if (needsVisibilityToggle) {
                  var props = node.memoizedProps;
                  var type = node.type;
                  if (isHidden) {
                    instance = cloneHiddenInstance(instance, type, props, node);
                  } else {
                    instance = cloneUnhiddenInstance(instance, type, props, node);
                  }
                  node.stateNode = instance;
                }
                appendInitialChild(parent, instance);
              } else if (node.tag === HostText) {
                var _instance = node.stateNode;
                if (needsVisibilityToggle) {
                  var text = node.memoizedProps;
                  var rootContainerInstance = getRootHostContainer();
                  var currentHostContext = getHostContext();
                  if (isHidden) {
                    _instance = createHiddenTextInstance(text, rootContainerInstance, currentHostContext, workInProgress);
                  } else {
                    _instance = createTextInstance(text, rootContainerInstance, currentHostContext, workInProgress);
                  }
                  node.stateNode = _instance;
                }
                appendInitialChild(parent, _instance);
              } else if (node.tag === HostPortal) {} else if (node.tag === SuspenseComponent) {
                var current = node.alternate;
                if (current !== null) {
                  var oldState = current.memoizedState;
                  var newState = node.memoizedState;
                  var oldIsHidden = oldState !== null;
                  var newIsHidden = newState !== null;
                  if (oldIsHidden !== newIsHidden) {
                    var primaryChildParent = newIsHidden ? node.child : node;
                    if (primaryChildParent !== null) {
                      appendAllChildren(parent, primaryChildParent, true, newIsHidden);
                    }
                    break branches;
                  }
                }
                if (node.child !== null) {
                  node.child.return = node;
                  node = node.child;
                  continue;
                }
              } else if (node.child !== null) {
                node.child.return = node;
                node = node.child;
                continue;
              }
              node = node;
              if (node === workInProgress) {
                return;
              }
              while (node.sibling === null) {
                if (node.return === null || node.return === workInProgress) {
                  return;
                }
                node = node.return;
              }
              node.sibling.return = node.return;
              node = node.sibling;
            }
          };
          var appendAllChildrenToContainer = function (containerChildSet, workInProgress, needsVisibilityToggle, isHidden) {
            var node = workInProgress.child;
            while (node !== null) {
              branches: if (node.tag === HostComponent) {
                var instance = node.stateNode;
                if (needsVisibilityToggle) {
                  var props = node.memoizedProps;
                  var type = node.type;
                  if (isHidden) {
                    instance = cloneHiddenInstance(instance, type, props, node);
                  } else {
                    instance = cloneUnhiddenInstance(instance, type, props, node);
                  }
                  node.stateNode = instance;
                }
                appendChildToContainerChildSet(containerChildSet, instance);
              } else if (node.tag === HostText) {
                var _instance2 = node.stateNode;
                if (needsVisibilityToggle) {
                  var text = node.memoizedProps;
                  var rootContainerInstance = getRootHostContainer();
                  var currentHostContext = getHostContext();
                  if (isHidden) {
                    _instance2 = createHiddenTextInstance(text, rootContainerInstance, currentHostContext, workInProgress);
                  } else {
                    _instance2 = createTextInstance(text, rootContainerInstance, currentHostContext, workInProgress);
                  }
                  node.stateNode = _instance2;
                }
                appendChildToContainerChildSet(containerChildSet, _instance2);
              } else if (node.tag === HostPortal) {} else if (node.tag === SuspenseComponent) {
                var current = node.alternate;
                if (current !== null) {
                  var oldState = current.memoizedState;
                  var newState = node.memoizedState;
                  var oldIsHidden = oldState !== null;
                  var newIsHidden = newState !== null;
                  if (oldIsHidden !== newIsHidden) {
                    var primaryChildParent = newIsHidden ? node.child : node;
                    if (primaryChildParent !== null) {
                      appendAllChildrenToContainer(containerChildSet, primaryChildParent, true, newIsHidden);
                    }
                    break branches;
                  }
                }
                if (node.child !== null) {
                  node.child.return = node;
                  node = node.child;
                  continue;
                }
              } else if (node.child !== null) {
                node.child.return = node;
                node = node.child;
                continue;
              }
              node = node;
              if (node === workInProgress) {
                return;
              }
              while (node.sibling === null) {
                if (node.return === null || node.return === workInProgress) {
                  return;
                }
                node = node.return;
              }
              node.sibling.return = node.return;
              node = node.sibling;
            }
          };
          updateHostContainer = function (workInProgress) {
            var portalOrRoot = workInProgress.stateNode;
            var childrenUnchanged = workInProgress.firstEffect === null;
            if (childrenUnchanged) {} else {
              var container = portalOrRoot.containerInfo;
              var newChildSet = createContainerChildSet(container);
              appendAllChildrenToContainer(newChildSet, workInProgress, false, false);
              portalOrRoot.pendingChildren = newChildSet;
              markUpdate(workInProgress);
              finalizeContainerChildren(container, newChildSet);
            }
          };
          updateHostComponent$1 = function (current, workInProgress, type, newProps, rootContainerInstance) {
            var currentInstance = current.stateNode;
            var oldProps = current.memoizedProps;
            var childrenUnchanged = workInProgress.firstEffect === null;
            if (childrenUnchanged && oldProps === newProps) {
              workInProgress.stateNode = currentInstance;
              return;
            }
            var recyclableInstance = workInProgress.stateNode;
            var currentHostContext = getHostContext();
            var updatePayload = null;
            if (oldProps !== newProps) {
              updatePayload = prepareUpdate(recyclableInstance, type, oldProps, newProps, rootContainerInstance, currentHostContext);
            }
            if (childrenUnchanged && updatePayload === null) {
              workInProgress.stateNode = currentInstance;
              return;
            }
            var newInstance = cloneInstance(currentInstance, updatePayload, type, oldProps, newProps, workInProgress, childrenUnchanged, recyclableInstance);
            if (finalizeInitialChildren(newInstance, type, newProps, rootContainerInstance, currentHostContext)) {
              markUpdate(workInProgress);
            }
            workInProgress.stateNode = newInstance;
            if (childrenUnchanged) {
              markUpdate(workInProgress);
            } else {
              appendAllChildren(newInstance, workInProgress, false, false);
            }
          };
          updateHostText$1 = function (current, workInProgress, oldText, newText) {
            if (oldText !== newText) {
              var rootContainerInstance = getRootHostContainer();
              var currentHostContext = getHostContext();
              workInProgress.stateNode = createTextInstance(newText, rootContainerInstance, currentHostContext, workInProgress);
              markUpdate(workInProgress);
            }
          };
        } else {
          updateHostContainer = function (workInProgress) {};
          updateHostComponent$1 = function (current, workInProgress, type, newProps, rootContainerInstance) {};
          updateHostText$1 = function (current, workInProgress, oldText, newText) {};
        }
        function completeWork(current, workInProgress, renderExpirationTime) {
          var newProps = workInProgress.pendingProps;
          switch (workInProgress.tag) {
            case IndeterminateComponent:
              break;
            case LazyComponent:
              break;
            case SimpleMemoComponent:
            case FunctionComponent:
              break;
            case ClassComponent:
              {
                var Component = workInProgress.type;
                if (isContextProvider(Component)) {
                  popContext(workInProgress);
                }
                break;
              }
            case HostRoot:
              {
                popHostContainer(workInProgress);
                popTopLevelContextObject(workInProgress);
                var fiberRoot = workInProgress.stateNode;
                if (fiberRoot.pendingContext) {
                  fiberRoot.context = fiberRoot.pendingContext;
                  fiberRoot.pendingContext = null;
                }
                if (current === null || current.child === null) {
                  popHydrationState(workInProgress);
                  workInProgress.effectTag &= ~Placement;
                }
                updateHostContainer(workInProgress);
                break;
              }
            case HostComponent:
              {
                popHostContext(workInProgress);
                var rootContainerInstance = getRootHostContainer();
                var type = workInProgress.type;
                if (current !== null && workInProgress.stateNode != null) {
                  updateHostComponent$1(current, workInProgress, type, newProps, rootContainerInstance);
                  if (current.ref !== workInProgress.ref) {
                    markRef$1(workInProgress);
                  }
                } else {
                  if (!newProps) {
                    !(workInProgress.stateNode !== null) ? invariant(false, 'We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.') : void 0;
                    break;
                  }
                  var currentHostContext = getHostContext();
                  var wasHydrated = popHydrationState(workInProgress);
                  if (wasHydrated) {
                    if (prepareToHydrateHostInstance(workInProgress, rootContainerInstance, currentHostContext)) {
                      markUpdate(workInProgress);
                    }
                  } else {
                    var instance = createInstance(type, newProps, rootContainerInstance, currentHostContext, workInProgress);
                    appendAllChildren(instance, workInProgress, false, false);
                    if (finalizeInitialChildren(instance, type, newProps, rootContainerInstance, currentHostContext)) {
                      markUpdate(workInProgress);
                    }
                    workInProgress.stateNode = instance;
                  }
                  if (workInProgress.ref !== null) {
                    markRef$1(workInProgress);
                  }
                }
                break;
              }
            case HostText:
              {
                var newText = newProps;
                if (current && workInProgress.stateNode != null) {
                  var oldText = current.memoizedProps;
                  updateHostText$1(current, workInProgress, oldText, newText);
                } else {
                  if (typeof newText !== 'string') {
                    !(workInProgress.stateNode !== null) ? invariant(false, 'We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.') : void 0;
                  }
                  var _rootContainerInstance = getRootHostContainer();
                  var _currentHostContext = getHostContext();
                  var _wasHydrated = popHydrationState(workInProgress);
                  if (_wasHydrated) {
                    if (prepareToHydrateHostTextInstance(workInProgress)) {
                      markUpdate(workInProgress);
                    }
                  } else {
                    workInProgress.stateNode = createTextInstance(newText, _rootContainerInstance, _currentHostContext, workInProgress);
                  }
                }
                break;
              }
            case ForwardRef:
              break;
            case SuspenseComponent:
              {
                var nextState = workInProgress.memoizedState;
                if ((workInProgress.effectTag & DidCapture) !== NoEffect) {
                  workInProgress.expirationTime = renderExpirationTime;
                  return workInProgress;
                }
                var nextDidTimeout = nextState !== null;
                var prevDidTimeout = current !== null && current.memoizedState !== null;
                if (current !== null && !nextDidTimeout && prevDidTimeout) {
                  var currentFallbackChild = current.child.sibling;
                  if (currentFallbackChild !== null) {
                    var first = workInProgress.firstEffect;
                    if (first !== null) {
                      workInProgress.firstEffect = currentFallbackChild;
                      currentFallbackChild.nextEffect = first;
                    } else {
                      workInProgress.firstEffect = workInProgress.lastEffect = currentFallbackChild;
                      currentFallbackChild.nextEffect = null;
                    }
                    currentFallbackChild.effectTag = Deletion;
                  }
                }
                if (nextDidTimeout !== prevDidTimeout || (workInProgress.effectTag & ConcurrentMode) === NoContext && nextDidTimeout) {
                  workInProgress.effectTag |= Update;
                }
                break;
              }
            case Fragment:
              break;
            case Mode:
              break;
            case Profiler:
              break;
            case HostPortal:
              popHostContainer(workInProgress);
              updateHostContainer(workInProgress);
              break;
            case ContextProvider:
              popProvider(workInProgress);
              break;
            case ContextConsumer:
              break;
            case MemoComponent:
              break;
            case IncompleteClassComponent:
              {
                var _Component = workInProgress.type;
                if (isContextProvider(_Component)) {
                  popContext(workInProgress);
                }
                break;
              }
            default:
              invariant(false, 'Unknown unit of work tag. This error is likely caused by a bug in React. Please file an issue.');
          }
          return null;
        }
        function shouldCaptureSuspense(workInProgress) {
          if (workInProgress.memoizedProps.fallback === undefined) {
            return false;
          }
          var nextState = workInProgress.memoizedState;
          return nextState === null;
        }
        function showErrorDialog(capturedError) {
          return true;
        }
        function logCapturedError(capturedError) {
          var logError = showErrorDialog(capturedError);
          if (logError === false) {
            return;
          }
          var error = capturedError.error;
          {
            var componentName = capturedError.componentName,
                componentStack = capturedError.componentStack,
                errorBoundaryName = capturedError.errorBoundaryName,
                errorBoundaryFound = capturedError.errorBoundaryFound,
                willRetry = capturedError.willRetry;
            if (error != null && error._suppressLogging) {
              if (errorBoundaryFound && willRetry) {
                return;
              }
              console.error(error);
            }
            var componentNameMessage = componentName ? 'The above error occurred in the <' + componentName + '> component:' : 'The above error occurred in one of your React components:';
            var errorBoundaryMessage = void 0;
            if (errorBoundaryFound && errorBoundaryName) {
              if (willRetry) {
                errorBoundaryMessage = 'React will try to recreate this component tree from scratch ' + ('using the error boundary you provided, ' + errorBoundaryName + '.');
              } else {
                errorBoundaryMessage = 'This error was initially handled by the error boundary ' + errorBoundaryName + '.\n' + 'Recreating the tree from scratch failed so React will unmount the tree.';
              }
            } else {
              errorBoundaryMessage = 'Consider adding an error boundary to your tree to customize error handling behavior.\n' + 'Visit https://fb.me/react-error-boundaries to learn more about error boundaries.';
            }
            var combinedMessage = '' + componentNameMessage + componentStack + '\n\n' + ('' + errorBoundaryMessage);
            console.error(combinedMessage);
          }
        }
        var didWarnAboutUndefinedSnapshotBeforeUpdate = null;
        {
          didWarnAboutUndefinedSnapshotBeforeUpdate = new Set();
        }
        var PossiblyWeakSet = typeof WeakSet === 'function' ? WeakSet : Set;
        function logError(boundary, errorInfo) {
          var source = errorInfo.source;
          var stack = errorInfo.stack;
          if (stack === null && source !== null) {
            stack = getStackByFiberInDevAndProd(source);
          }
          var capturedError = {
            componentName: source !== null ? getComponentName(source.type) : null,
            componentStack: stack !== null ? stack : '',
            error: errorInfo.value,
            errorBoundary: null,
            errorBoundaryName: null,
            errorBoundaryFound: false,
            willRetry: false
          };
          if (boundary !== null && boundary.tag === ClassComponent) {
            capturedError.errorBoundary = boundary.stateNode;
            capturedError.errorBoundaryName = getComponentName(boundary.type);
            capturedError.errorBoundaryFound = true;
            capturedError.willRetry = true;
          }
          try {
            logCapturedError(capturedError);
          } catch (e) {
            setTimeout(function () {
              throw e;
            });
          }
        }
        var callComponentWillUnmountWithTimer = function (current$$1, instance) {
          startPhaseTimer(current$$1, 'componentWillUnmount');
          instance.props = current$$1.memoizedProps;
          instance.state = current$$1.memoizedState;
          instance.componentWillUnmount();
          stopPhaseTimer();
        };
        function safelyCallComponentWillUnmount(current$$1, instance) {
          {
            invokeGuardedCallback(null, callComponentWillUnmountWithTimer, null, current$$1, instance);
            if (hasCaughtError()) {
              var unmountError = clearCaughtError();
              captureCommitPhaseError(current$$1, unmountError);
            }
          }
        }
        function safelyDetachRef(current$$1) {
          var ref = current$$1.ref;
          if (ref !== null) {
            if (typeof ref === 'function') {
              {
                invokeGuardedCallback(null, ref, null, null);
                if (hasCaughtError()) {
                  var refError = clearCaughtError();
                  captureCommitPhaseError(current$$1, refError);
                }
              }
            } else {
              ref.current = null;
            }
          }
        }
        function safelyCallDestroy(current$$1, destroy) {
          {
            invokeGuardedCallback(null, destroy, null);
            if (hasCaughtError()) {
              var error = clearCaughtError();
              captureCommitPhaseError(current$$1, error);
            }
          }
        }
        function commitBeforeMutationLifeCycles(current$$1, finishedWork) {
          switch (finishedWork.tag) {
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent:
              {
                commitHookEffectList(UnmountSnapshot, NoEffect$1, finishedWork);
                return;
              }
            case ClassComponent:
              {
                if (finishedWork.effectTag & Snapshot) {
                  if (current$$1 !== null) {
                    var prevProps = current$$1.memoizedProps;
                    var prevState = current$$1.memoizedState;
                    startPhaseTimer(finishedWork, 'getSnapshotBeforeUpdate');
                    var instance = finishedWork.stateNode;
                    {
                      if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                        !(instance.props === finishedWork.memoizedProps) ? warning$1(false, 'Expected %s props to match memoized props before ' + 'getSnapshotBeforeUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;
                        !(instance.state === finishedWork.memoizedState) ? warning$1(false, 'Expected %s state to match memoized state before ' + 'getSnapshotBeforeUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;
                      }
                    }
                    var snapshot = instance.getSnapshotBeforeUpdate(finishedWork.elementType === finishedWork.type ? prevProps : resolveDefaultProps(finishedWork.type, prevProps), prevState);
                    {
                      var didWarnSet = didWarnAboutUndefinedSnapshotBeforeUpdate;
                      if (snapshot === undefined && !didWarnSet.has(finishedWork.type)) {
                        didWarnSet.add(finishedWork.type);
                        warningWithoutStack$1(false, '%s.getSnapshotBeforeUpdate(): A snapshot value (or null) ' + 'must be returned. You have returned undefined.', getComponentName(finishedWork.type));
                      }
                    }
                    instance.__reactInternalSnapshotBeforeUpdate = snapshot;
                    stopPhaseTimer();
                  }
                }
                return;
              }
            case HostRoot:
            case HostComponent:
            case HostText:
            case HostPortal:
            case IncompleteClassComponent:
              return;
            default:
              {
                invariant(false, 'This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.');
              }
          }
        }
        function commitHookEffectList(unmountTag, mountTag, finishedWork) {
          if (!enableHooks) {
            return;
          }
          var updateQueue = finishedWork.updateQueue;
          var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;
          if (lastEffect !== null) {
            var firstEffect = lastEffect.next;
            var effect = firstEffect;
            do {
              if ((effect.tag & unmountTag) !== NoEffect$1) {
                var destroy = effect.destroy;
                effect.destroy = null;
                if (destroy !== null) {
                  destroy();
                }
              }
              if ((effect.tag & mountTag) !== NoEffect$1) {
                var create = effect.create;
                var _destroy = create();
                if (typeof _destroy !== 'function') {
                  {
                    if (_destroy !== null && _destroy !== undefined) {
                      warningWithoutStack$1(false, 'useEffect function must return a cleanup function or ' + 'nothing.%s%s', typeof _destroy.then === 'function' ? '\n\nIt looks like you wrote useEffect(async () => ...) or returned a Promise. ' + 'Instead, you may write an async function separately ' + 'and then call it from inside the effect:\n\n' + 'async function fetchComment(commentId) {\n' + '  // You can await here\n' + '}\n\n' + 'useEffect(() => {\n' + '  fetchComment(commentId);\n' + '}, [commentId]);\n\n' + 'In the future, React will provide a more idiomatic solution for data fetching ' + "that doesn't involve writing effects manually." : '', getStackByFiberInDevAndProd(finishedWork));
                    }
                  }
                  _destroy = null;
                }
                effect.destroy = _destroy;
              }
              effect = effect.next;
            } while (effect !== firstEffect);
          }
        }
        function commitPassiveHookEffects(finishedWork) {
          commitHookEffectList(UnmountPassive, NoEffect$1, finishedWork);
          commitHookEffectList(NoEffect$1, MountPassive, finishedWork);
        }
        function commitLifeCycles(finishedRoot, current$$1, finishedWork, committedExpirationTime) {
          switch (finishedWork.tag) {
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent:
              {
                commitHookEffectList(UnmountLayout, MountLayout, finishedWork);
                break;
              }
            case ClassComponent:
              {
                var instance = finishedWork.stateNode;
                if (finishedWork.effectTag & Update) {
                  if (current$$1 === null) {
                    startPhaseTimer(finishedWork, 'componentDidMount');
                    {
                      if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                        !(instance.props === finishedWork.memoizedProps) ? warning$1(false, 'Expected %s props to match memoized props before ' + 'componentDidMount. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;
                        !(instance.state === finishedWork.memoizedState) ? warning$1(false, 'Expected %s state to match memoized state before ' + 'componentDidMount. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;
                      }
                    }
                    instance.componentDidMount();
                    stopPhaseTimer();
                  } else {
                    var prevProps = finishedWork.elementType === finishedWork.type ? current$$1.memoizedProps : resolveDefaultProps(finishedWork.type, current$$1.memoizedProps);
                    var prevState = current$$1.memoizedState;
                    startPhaseTimer(finishedWork, 'componentDidUpdate');
                    {
                      if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                        !(instance.props === finishedWork.memoizedProps) ? warning$1(false, 'Expected %s props to match memoized props before ' + 'componentDidUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;
                        !(instance.state === finishedWork.memoizedState) ? warning$1(false, 'Expected %s state to match memoized state before ' + 'componentDidUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;
                      }
                    }
                    instance.componentDidUpdate(prevProps, prevState, instance.__reactInternalSnapshotBeforeUpdate);
                    stopPhaseTimer();
                  }
                }
                var updateQueue = finishedWork.updateQueue;
                if (updateQueue !== null) {
                  {
                    if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                      !(instance.props === finishedWork.memoizedProps) ? warning$1(false, 'Expected %s props to match memoized props before ' + 'processing the update queue. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;
                      !(instance.state === finishedWork.memoizedState) ? warning$1(false, 'Expected %s state to match memoized state before ' + 'processing the update queue. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;
                    }
                  }
                  commitUpdateQueue(finishedWork, updateQueue, instance, committedExpirationTime);
                }
                return;
              }
            case HostRoot:
              {
                var _updateQueue = finishedWork.updateQueue;
                if (_updateQueue !== null) {
                  var _instance = null;
                  if (finishedWork.child !== null) {
                    switch (finishedWork.child.tag) {
                      case HostComponent:
                        _instance = getPublicInstance(finishedWork.child.stateNode);
                        break;
                      case ClassComponent:
                        _instance = finishedWork.child.stateNode;
                        break;
                    }
                  }
                  commitUpdateQueue(finishedWork, _updateQueue, _instance, committedExpirationTime);
                }
                return;
              }
            case HostComponent:
              {
                var _instance2 = finishedWork.stateNode;
                if (current$$1 === null && finishedWork.effectTag & Update) {
                  var type = finishedWork.type;
                  var props = finishedWork.memoizedProps;
                  commitMount(_instance2, type, props, finishedWork);
                }
                return;
              }
            case HostText:
              {
                return;
              }
            case HostPortal:
              {
                return;
              }
            case Profiler:
              {
                if (enableProfilerTimer) {
                  var onRender = finishedWork.memoizedProps.onRender;
                  if (enableSchedulerTracing) {
                    onRender(finishedWork.memoizedProps.id, current$$1 === null ? 'mount' : 'update', finishedWork.actualDuration, finishedWork.treeBaseDuration, finishedWork.actualStartTime, getCommitTime(), finishedRoot.memoizedInteractions);
                  } else {
                    onRender(finishedWork.memoizedProps.id, current$$1 === null ? 'mount' : 'update', finishedWork.actualDuration, finishedWork.treeBaseDuration, finishedWork.actualStartTime, getCommitTime());
                  }
                }
                return;
              }
            case SuspenseComponent:
              break;
            case IncompleteClassComponent:
              break;
            default:
              {
                invariant(false, 'This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.');
              }
          }
        }
        function hideOrUnhideAllChildren(finishedWork, isHidden) {
          if (supportsMutation) {
            var node = finishedWork;
            while (true) {
              if (node.tag === HostComponent) {
                var instance = node.stateNode;
                if (isHidden) {
                  hideInstance(instance);
                } else {
                  unhideInstance(node.stateNode, node.memoizedProps);
                }
              } else if (node.tag === HostText) {
                var _instance3 = node.stateNode;
                if (isHidden) {
                  hideTextInstance(_instance3);
                } else {
                  unhideTextInstance(_instance3, node.memoizedProps);
                }
              } else if (node.tag === SuspenseComponent && node.memoizedState !== null) {
                var fallbackChildFragment = node.child.sibling;
                fallbackChildFragment.return = node;
                node = fallbackChildFragment;
                continue;
              } else if (node.child !== null) {
                node.child.return = node;
                node = node.child;
                continue;
              }
              if (node === finishedWork) {
                return;
              }
              while (node.sibling === null) {
                if (node.return === null || node.return === finishedWork) {
                  return;
                }
                node = node.return;
              }
              node.sibling.return = node.return;
              node = node.sibling;
            }
          }
        }
        function commitAttachRef(finishedWork) {
          var ref = finishedWork.ref;
          if (ref !== null) {
            var instance = finishedWork.stateNode;
            var instanceToUse = void 0;
            switch (finishedWork.tag) {
              case HostComponent:
                instanceToUse = getPublicInstance(instance);
                break;
              default:
                instanceToUse = instance;
            }
            if (typeof ref === 'function') {
              ref(instanceToUse);
            } else {
              {
                if (!ref.hasOwnProperty('current')) {
                  warningWithoutStack$1(false, 'Unexpected ref object provided for %s. ' + 'Use either a ref-setter function or React.createRef().%s', getComponentName(finishedWork.type), getStackByFiberInDevAndProd(finishedWork));
                }
              }
              ref.current = instanceToUse;
            }
          }
        }
        function commitDetachRef(current$$1) {
          var currentRef = current$$1.ref;
          if (currentRef !== null) {
            if (typeof currentRef === 'function') {
              currentRef(null);
            } else {
              currentRef.current = null;
            }
          }
        }
        function commitUnmount(current$$1) {
          onCommitUnmount(current$$1);
          switch (current$$1.tag) {
            case FunctionComponent:
            case ForwardRef:
            case MemoComponent:
            case SimpleMemoComponent:
              {
                var updateQueue = current$$1.updateQueue;
                if (updateQueue !== null) {
                  var lastEffect = updateQueue.lastEffect;
                  if (lastEffect !== null) {
                    var firstEffect = lastEffect.next;
                    var effect = firstEffect;
                    do {
                      var destroy = effect.destroy;
                      if (destroy !== null) {
                        safelyCallDestroy(current$$1, destroy);
                      }
                      effect = effect.next;
                    } while (effect !== firstEffect);
                  }
                }
                break;
              }
            case ClassComponent:
              {
                safelyDetachRef(current$$1);
                var instance = current$$1.stateNode;
                if (typeof instance.componentWillUnmount === 'function') {
                  safelyCallComponentWillUnmount(current$$1, instance);
                }
                return;
              }
            case HostComponent:
              {
                safelyDetachRef(current$$1);
                return;
              }
            case HostPortal:
              {
                if (supportsMutation) {
                  unmountHostComponents(current$$1);
                } else if (supportsPersistence) {
                  emptyPortalContainer(current$$1);
                }
                return;
              }
          }
        }
        function commitNestedUnmounts(root) {
          var node = root;
          while (true) {
            commitUnmount(node);
            if (node.child !== null && (!supportsMutation || node.tag !== HostPortal)) {
              node.child.return = node;
              node = node.child;
              continue;
            }
            if (node === root) {
              return;
            }
            while (node.sibling === null) {
              if (node.return === null || node.return === root) {
                return;
              }
              node = node.return;
            }
            node.sibling.return = node.return;
            node = node.sibling;
          }
        }
        function detachFiber(current$$1) {
          current$$1.return = null;
          current$$1.child = null;
          current$$1.memoizedState = null;
          current$$1.updateQueue = null;
          var alternate = current$$1.alternate;
          if (alternate !== null) {
            alternate.return = null;
            alternate.child = null;
            alternate.memoizedState = null;
            alternate.updateQueue = null;
          }
        }
        function emptyPortalContainer(current$$1) {
          if (!supportsPersistence) {
            return;
          }
          var portal = current$$1.stateNode;
          var containerInfo = portal.containerInfo;
          var emptyChildSet = createContainerChildSet(containerInfo);
          replaceContainerChildren(containerInfo, emptyChildSet);
        }
        function commitContainer(finishedWork) {
          if (!supportsPersistence) {
            return;
          }
          switch (finishedWork.tag) {
            case ClassComponent:
              {
                return;
              }
            case HostComponent:
              {
                return;
              }
            case HostText:
              {
                return;
              }
            case HostRoot:
            case HostPortal:
              {
                var portalOrRoot = finishedWork.stateNode;
                var containerInfo = portalOrRoot.containerInfo,
                    _pendingChildren = portalOrRoot.pendingChildren;
                replaceContainerChildren(containerInfo, _pendingChildren);
                return;
              }
            default:
              {
                invariant(false, 'This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.');
              }
          }
        }
        function getHostParentFiber(fiber) {
          var parent = fiber.return;
          while (parent !== null) {
            if (isHostParent(parent)) {
              return parent;
            }
            parent = parent.return;
          }
          invariant(false, 'Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.');
        }
        function isHostParent(fiber) {
          return fiber.tag === HostComponent || fiber.tag === HostRoot || fiber.tag === HostPortal;
        }
        function getHostSibling(fiber) {
          var node = fiber;
          siblings: while (true) {
            while (node.sibling === null) {
              if (node.return === null || isHostParent(node.return)) {
                return null;
              }
              node = node.return;
            }
            node.sibling.return = node.return;
            node = node.sibling;
            while (node.tag !== HostComponent && node.tag !== HostText) {
              if (node.effectTag & Placement) {
                continue siblings;
              }
              if (node.child === null || node.tag === HostPortal) {
                continue siblings;
              } else {
                node.child.return = node;
                node = node.child;
              }
            }
            if (!(node.effectTag & Placement)) {
              return node.stateNode;
            }
          }
        }
        function commitPlacement(finishedWork) {
          if (!supportsMutation) {
            return;
          }
          var parentFiber = getHostParentFiber(finishedWork);
          var parent = void 0;
          var isContainer = void 0;
          switch (parentFiber.tag) {
            case HostComponent:
              parent = parentFiber.stateNode;
              isContainer = false;
              break;
            case HostRoot:
              parent = parentFiber.stateNode.containerInfo;
              isContainer = true;
              break;
            case HostPortal:
              parent = parentFiber.stateNode.containerInfo;
              isContainer = true;
              break;
            default:
              invariant(false, 'Invalid host parent fiber. This error is likely caused by a bug in React. Please file an issue.');
          }
          if (parentFiber.effectTag & ContentReset) {
            resetTextContent(parent);
            parentFiber.effectTag &= ~ContentReset;
          }
          var before = getHostSibling(finishedWork);
          var node = finishedWork;
          while (true) {
            if (node.tag === HostComponent || node.tag === HostText) {
              if (before) {
                if (isContainer) {
                  insertInContainerBefore(parent, node.stateNode, before);
                } else {
                  insertBefore(parent, node.stateNode, before);
                }
              } else {
                if (isContainer) {
                  appendChildToContainer(parent, node.stateNode);
                } else {
                  appendChild(parent, node.stateNode);
                }
              }
            } else if (node.tag === HostPortal) {} else if (node.child !== null) {
              node.child.return = node;
              node = node.child;
              continue;
            }
            if (node === finishedWork) {
              return;
            }
            while (node.sibling === null) {
              if (node.return === null || node.return === finishedWork) {
                return;
              }
              node = node.return;
            }
            node.sibling.return = node.return;
            node = node.sibling;
          }
        }
        function unmountHostComponents(current$$1) {
          var node = current$$1;
          var currentParentIsValid = false;
          var currentParent = void 0;
          var currentParentIsContainer = void 0;
          while (true) {
            if (!currentParentIsValid) {
              var parent = node.return;
              findParent: while (true) {
                !(parent !== null) ? invariant(false, 'Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.') : void 0;
                switch (parent.tag) {
                  case HostComponent:
                    currentParent = parent.stateNode;
                    currentParentIsContainer = false;
                    break findParent;
                  case HostRoot:
                    currentParent = parent.stateNode.containerInfo;
                    currentParentIsContainer = true;
                    break findParent;
                  case HostPortal:
                    currentParent = parent.stateNode.containerInfo;
                    currentParentIsContainer = true;
                    break findParent;
                }
                parent = parent.return;
              }
              currentParentIsValid = true;
            }
            if (node.tag === HostComponent || node.tag === HostText) {
              commitNestedUnmounts(node);
              if (currentParentIsContainer) {
                removeChildFromContainer(currentParent, node.stateNode);
              } else {
                removeChild(currentParent, node.stateNode);
              }
            } else if (node.tag === HostPortal) {
              currentParent = node.stateNode.containerInfo;
              currentParentIsContainer = true;
              if (node.child !== null) {
                node.child.return = node;
                node = node.child;
                continue;
              }
            } else {
              commitUnmount(node);
              if (node.child !== null) {
                node.child.return = node;
                node = node.child;
                continue;
              }
            }
            if (node === current$$1) {
              return;
            }
            while (node.sibling === null) {
              if (node.return === null || node.return === current$$1) {
                return;
              }
              node = node.return;
              if (node.tag === HostPortal) {
                currentParentIsValid = false;
              }
            }
            node.sibling.return = node.return;
            node = node.sibling;
          }
        }
        function commitDeletion(current$$1) {
          if (supportsMutation) {
            unmountHostComponents(current$$1);
          } else {
            commitNestedUnmounts(current$$1);
          }
          detachFiber(current$$1);
        }
        function commitWork(current$$1, finishedWork) {
          if (!supportsMutation) {
            switch (finishedWork.tag) {
              case FunctionComponent:
              case ForwardRef:
              case MemoComponent:
              case SimpleMemoComponent:
                {
                  commitHookEffectList(UnmountMutation, MountMutation, finishedWork);
                  return;
                }
            }
            commitContainer(finishedWork);
            return;
          }
          switch (finishedWork.tag) {
            case FunctionComponent:
            case ForwardRef:
            case MemoComponent:
            case SimpleMemoComponent:
              {
                commitHookEffectList(UnmountMutation, MountMutation, finishedWork);
                return;
              }
            case ClassComponent:
              {
                return;
              }
            case HostComponent:
              {
                var instance = finishedWork.stateNode;
                if (instance != null) {
                  var newProps = finishedWork.memoizedProps;
                  var oldProps = current$$1 !== null ? current$$1.memoizedProps : newProps;
                  var type = finishedWork.type;
                  var updatePayload = finishedWork.updateQueue;
                  finishedWork.updateQueue = null;
                  if (updatePayload !== null) {
                    commitUpdate(instance, updatePayload, type, oldProps, newProps, finishedWork);
                  }
                }
                return;
              }
            case HostText:
              {
                !(finishedWork.stateNode !== null) ? invariant(false, 'This should have a text node initialized. This error is likely caused by a bug in React. Please file an issue.') : void 0;
                var textInstance = finishedWork.stateNode;
                var newText = finishedWork.memoizedProps;
                var oldText = current$$1 !== null ? current$$1.memoizedProps : newText;
                commitTextUpdate(textInstance, oldText, newText);
                return;
              }
            case HostRoot:
              {
                return;
              }
            case Profiler:
              {
                return;
              }
            case SuspenseComponent:
              {
                var newState = finishedWork.memoizedState;
                var newDidTimeout = void 0;
                var primaryChildParent = finishedWork;
                if (newState === null) {
                  newDidTimeout = false;
                } else {
                  newDidTimeout = true;
                  primaryChildParent = finishedWork.child;
                  if (newState.timedOutAt === NoWork) {
                    newState.timedOutAt = requestCurrentTime();
                  }
                }
                if (primaryChildParent !== null) {
                  hideOrUnhideAllChildren(primaryChildParent, newDidTimeout);
                }
                var thenables = finishedWork.updateQueue;
                if (thenables !== null) {
                  finishedWork.updateQueue = null;
                  var retryCache = finishedWork.stateNode;
                  if (retryCache === null) {
                    retryCache = finishedWork.stateNode = new PossiblyWeakSet();
                  }
                  thenables.forEach(function (thenable) {
                    var retry = retryTimedOutBoundary.bind(null, finishedWork, thenable);
                    if (enableSchedulerTracing) {
                      retry = tracing.unstable_wrap(retry);
                    }
                    if (!retryCache.has(thenable)) {
                      retryCache.add(thenable);
                      thenable.then(retry, retry);
                    }
                  });
                }
                return;
              }
            case IncompleteClassComponent:
              {
                return;
              }
            default:
              {
                invariant(false, 'This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.');
              }
          }
        }
        function commitResetTextContent(current$$1) {
          if (!supportsMutation) {
            return;
          }
          resetTextContent(current$$1.stateNode);
        }
        var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;
        function createRootErrorUpdate(fiber, errorInfo, expirationTime) {
          var update = createUpdate(expirationTime);
          update.tag = CaptureUpdate;
          update.payload = { element: null };
          var error = errorInfo.value;
          update.callback = function () {
            onUncaughtError(error);
            logError(fiber, errorInfo);
          };
          return update;
        }
        function createClassErrorUpdate(fiber, errorInfo, expirationTime) {
          var update = createUpdate(expirationTime);
          update.tag = CaptureUpdate;
          var getDerivedStateFromError = fiber.type.getDerivedStateFromError;
          if (typeof getDerivedStateFromError === 'function') {
            var error = errorInfo.value;
            update.payload = function () {
              return getDerivedStateFromError(error);
            };
          }
          var inst = fiber.stateNode;
          if (inst !== null && typeof inst.componentDidCatch === 'function') {
            update.callback = function callback() {
              if (typeof getDerivedStateFromError !== 'function') {
                markLegacyErrorBoundaryAsFailed(this);
              }
              var error = errorInfo.value;
              var stack = errorInfo.stack;
              logError(fiber, errorInfo);
              this.componentDidCatch(error, { componentStack: stack !== null ? stack : '' });
              {
                if (typeof getDerivedStateFromError !== 'function') {
                  !(fiber.expirationTime === Sync) ? warningWithoutStack$1(false, '%s: Error boundaries should implement getDerivedStateFromError(). ' + 'In that method, return a state update to display an error message or fallback UI.', getComponentName(fiber.type) || 'Unknown') : void 0;
                }
              }
            };
          }
          return update;
        }
        function throwException(root, returnFiber, sourceFiber, value, renderExpirationTime) {
          sourceFiber.effectTag |= Incomplete;
          sourceFiber.firstEffect = sourceFiber.lastEffect = null;
          if (value !== null && typeof value === 'object' && typeof value.then === 'function') {
            var thenable = value;
            var _workInProgress = returnFiber;
            var earliestTimeoutMs = -1;
            var startTimeMs = -1;
            do {
              if (_workInProgress.tag === SuspenseComponent) {
                var current$$1 = _workInProgress.alternate;
                if (current$$1 !== null) {
                  var currentState = current$$1.memoizedState;
                  if (currentState !== null) {
                    var timedOutAt = currentState.timedOutAt;
                    startTimeMs = expirationTimeToMs(timedOutAt);
                    break;
                  }
                }
                var timeoutPropMs = _workInProgress.pendingProps.maxDuration;
                if (typeof timeoutPropMs === 'number') {
                  if (timeoutPropMs <= 0) {
                    earliestTimeoutMs = 0;
                  } else if (earliestTimeoutMs === -1 || timeoutPropMs < earliestTimeoutMs) {
                    earliestTimeoutMs = timeoutPropMs;
                  }
                }
              }
              _workInProgress = _workInProgress.return;
            } while (_workInProgress !== null);
            _workInProgress = returnFiber;
            do {
              if (_workInProgress.tag === SuspenseComponent && shouldCaptureSuspense(_workInProgress)) {
                var thenables = _workInProgress.updateQueue;
                if (thenables === null) {
                  _workInProgress.updateQueue = new Set([thenable]);
                } else {
                  thenables.add(thenable);
                }
                if ((_workInProgress.mode & ConcurrentMode) === NoEffect) {
                  _workInProgress.effectTag |= DidCapture;
                  sourceFiber.effectTag &= ~(LifecycleEffectMask | Incomplete);
                  if (sourceFiber.tag === ClassComponent) {
                    var currentSourceFiber = sourceFiber.alternate;
                    if (currentSourceFiber === null) {
                      sourceFiber.tag = IncompleteClassComponent;
                    } else {
                      var update = createUpdate(Sync);
                      update.tag = ForceUpdate;
                      enqueueUpdate(sourceFiber, update);
                    }
                  }
                  sourceFiber.expirationTime = Sync;
                  return;
                }
                var pingCache = root.pingCache;
                var threadIDs = void 0;
                if (pingCache === null) {
                  pingCache = root.pingCache = new PossiblyWeakMap();
                  threadIDs = new Set();
                  pingCache.set(thenable, threadIDs);
                } else {
                  threadIDs = pingCache.get(thenable);
                  if (threadIDs === undefined) {
                    threadIDs = new Set();
                    pingCache.set(thenable, threadIDs);
                  }
                }
                if (!threadIDs.has(renderExpirationTime)) {
                  threadIDs.add(renderExpirationTime);
                  var ping = pingSuspendedRoot.bind(null, root, thenable, renderExpirationTime);
                  if (enableSchedulerTracing) {
                    ping = tracing.unstable_wrap(ping);
                  }
                  thenable.then(ping, ping);
                }
                var absoluteTimeoutMs = void 0;
                if (earliestTimeoutMs === -1) {
                  absoluteTimeoutMs = maxSigned31BitInt;
                } else {
                  if (startTimeMs === -1) {
                    var earliestExpirationTime = findEarliestOutstandingPriorityLevel(root, renderExpirationTime);
                    var earliestExpirationTimeMs = expirationTimeToMs(earliestExpirationTime);
                    startTimeMs = earliestExpirationTimeMs - LOW_PRIORITY_EXPIRATION;
                  }
                  absoluteTimeoutMs = startTimeMs + earliestTimeoutMs;
                }
                renderDidSuspend(root, absoluteTimeoutMs, renderExpirationTime);
                _workInProgress.effectTag |= ShouldCapture;
                _workInProgress.expirationTime = renderExpirationTime;
                return;
              }
              _workInProgress = _workInProgress.return;
            } while (_workInProgress !== null);
            value = new Error((getComponentName(sourceFiber.type) || 'A React component') + ' suspended while rendering, but no fallback UI was specified.\n' + '\n' + 'Add a <Suspense fallback=...> component higher in the tree to ' + 'provide a loading indicator or placeholder to display.' + getStackByFiberInDevAndProd(sourceFiber));
          }
          renderDidError();
          value = createCapturedValue(value, sourceFiber);
          var workInProgress = returnFiber;
          do {
            switch (workInProgress.tag) {
              case HostRoot:
                {
                  var _errorInfo = value;
                  workInProgress.effectTag |= ShouldCapture;
                  workInProgress.expirationTime = renderExpirationTime;
                  var _update = createRootErrorUpdate(workInProgress, _errorInfo, renderExpirationTime);
                  enqueueCapturedUpdate(workInProgress, _update);
                  return;
                }
              case ClassComponent:
                var errorInfo = value;
                var ctor = workInProgress.type;
                var instance = workInProgress.stateNode;
                if ((workInProgress.effectTag & DidCapture) === NoEffect && (typeof ctor.getDerivedStateFromError === 'function' || instance !== null && typeof instance.componentDidCatch === 'function' && !isAlreadyFailedLegacyErrorBoundary(instance))) {
                  workInProgress.effectTag |= ShouldCapture;
                  workInProgress.expirationTime = renderExpirationTime;
                  var _update2 = createClassErrorUpdate(workInProgress, errorInfo, renderExpirationTime);
                  enqueueCapturedUpdate(workInProgress, _update2);
                  return;
                }
                break;
              default:
                break;
            }
            workInProgress = workInProgress.return;
          } while (workInProgress !== null);
        }
        function unwindWork(workInProgress, renderExpirationTime) {
          switch (workInProgress.tag) {
            case ClassComponent:
              {
                var Component = workInProgress.type;
                if (isContextProvider(Component)) {
                  popContext(workInProgress);
                }
                var effectTag = workInProgress.effectTag;
                if (effectTag & ShouldCapture) {
                  workInProgress.effectTag = effectTag & ~ShouldCapture | DidCapture;
                  return workInProgress;
                }
                return null;
              }
            case HostRoot:
              {
                popHostContainer(workInProgress);
                popTopLevelContextObject(workInProgress);
                var _effectTag = workInProgress.effectTag;
                !((_effectTag & DidCapture) === NoEffect) ? invariant(false, 'The root failed to unmount after an error. This is likely a bug in React. Please file an issue.') : void 0;
                workInProgress.effectTag = _effectTag & ~ShouldCapture | DidCapture;
                return workInProgress;
              }
            case HostComponent:
              {
                popHostContext(workInProgress);
                return null;
              }
            case SuspenseComponent:
              {
                var _effectTag2 = workInProgress.effectTag;
                if (_effectTag2 & ShouldCapture) {
                  workInProgress.effectTag = _effectTag2 & ~ShouldCapture | DidCapture;
                  return workInProgress;
                }
                return null;
              }
            case HostPortal:
              popHostContainer(workInProgress);
              return null;
            case ContextProvider:
              popProvider(workInProgress);
              return null;
            default:
              return null;
          }
        }
        function unwindInterruptedWork(interruptedWork) {
          switch (interruptedWork.tag) {
            case ClassComponent:
              {
                var childContextTypes = interruptedWork.type.childContextTypes;
                if (childContextTypes !== null && childContextTypes !== undefined) {
                  popContext(interruptedWork);
                }
                break;
              }
            case HostRoot:
              {
                popHostContainer(interruptedWork);
                popTopLevelContextObject(interruptedWork);
                break;
              }
            case HostComponent:
              {
                popHostContext(interruptedWork);
                break;
              }
            case HostPortal:
              popHostContainer(interruptedWork);
              break;
            case ContextProvider:
              popProvider(interruptedWork);
              break;
            default:
              break;
          }
        }
        var Dispatcher = {
          readContext: readContext,
          useCallback: useCallback,
          useContext: useContext,
          useEffect: useEffect,
          useImperativeMethods: useImperativeMethods,
          useLayoutEffect: useLayoutEffect,
          useMemo: useMemo,
          useReducer: useReducer,
          useRef: useRef,
          useState: useState
        };
        var DispatcherWithoutHooks = { readContext: readContext };
        var ReactCurrentOwner$2 = ReactSharedInternals.ReactCurrentOwner;
        var didWarnAboutStateTransition = void 0;
        var didWarnSetStateChildContext = void 0;
        var warnAboutUpdateOnUnmounted = void 0;
        var warnAboutInvalidUpdates = void 0;
        if (enableSchedulerTracing) {
          !(tracing.__interactionsRef != null && tracing.__interactionsRef.current != null) ? invariant(false, 'It is not supported to run the profiling version of a renderer (for example, `react-dom/profiling`) without also replacing the `scheduler/tracing` module with `scheduler/tracing-profiling`. Your bundler might have a setting for aliasing both modules. Learn more at http://fb.me/react-profiling') : void 0;
        }
        {
          didWarnAboutStateTransition = false;
          didWarnSetStateChildContext = false;
          var didWarnStateUpdateForUnmountedComponent = {};
          warnAboutUpdateOnUnmounted = function (fiber, isClass) {
            var componentName = getComponentName(fiber.type) || 'ReactComponent';
            if (didWarnStateUpdateForUnmountedComponent[componentName]) {
              return;
            }
            warningWithoutStack$1(false, "Can't perform a React state update on an unmounted component. This " + 'is a no-op, but it indicates a memory leak in your application. To ' + 'fix, cancel all subscriptions and asynchronous tasks in %s.%s', isClass ? 'the componentWillUnmount method' : 'a useEffect cleanup function', getStackByFiberInDevAndProd(fiber));
            didWarnStateUpdateForUnmountedComponent[componentName] = true;
          };
          warnAboutInvalidUpdates = function (instance) {
            switch (phase) {
              case 'getChildContext':
                if (didWarnSetStateChildContext) {
                  return;
                }
                warningWithoutStack$1(false, 'setState(...): Cannot call setState() inside getChildContext()');
                didWarnSetStateChildContext = true;
                break;
              case 'render':
                if (didWarnAboutStateTransition) {
                  return;
                }
                warningWithoutStack$1(false, 'Cannot update during an existing state transition (such as within ' + '`render`). Render methods should be a pure function of props and state.');
                didWarnAboutStateTransition = true;
                break;
            }
          };
        }
        var lastUniqueAsyncExpiration = Sync - 1;
        var expirationContext = NoWork;
        var isWorking = false;
        var nextUnitOfWork = null;
        var nextRoot = null;
        var nextRenderExpirationTime = NoWork;
        var nextLatestAbsoluteTimeoutMs = -1;
        var nextRenderDidError = false;
        var nextEffect = null;
        var isCommitting$1 = false;
        var rootWithPendingPassiveEffects = null;
        var passiveEffectCallbackHandle = null;
        var passiveEffectCallback = null;
        var legacyErrorBoundariesThatAlreadyFailed = null;
        var interruptedBy = null;
        var stashedWorkInProgressProperties = void 0;
        var replayUnitOfWork = void 0;
        var mayReplayFailedUnitOfWork = void 0;
        var isReplayingFailedUnitOfWork = void 0;
        var originalReplayError = void 0;
        var rethrowOriginalError = void 0;
        if (true && replayFailedUnitOfWorkWithInvokeGuardedCallback) {
          stashedWorkInProgressProperties = null;
          mayReplayFailedUnitOfWork = true;
          isReplayingFailedUnitOfWork = false;
          originalReplayError = null;
          replayUnitOfWork = function (failedUnitOfWork, thrownValue, isYieldy) {
            if (thrownValue !== null && typeof thrownValue === 'object' && typeof thrownValue.then === 'function') {
              return;
            }
            if (stashedWorkInProgressProperties === null) {
              warningWithoutStack$1(false, 'Could not replay rendering after an error. This is likely a bug in React. ' + 'Please file an issue.');
              return;
            }
            assignFiberPropertiesInDEV(failedUnitOfWork, stashedWorkInProgressProperties);
            switch (failedUnitOfWork.tag) {
              case HostRoot:
                popHostContainer(failedUnitOfWork);
                popTopLevelContextObject(failedUnitOfWork);
                break;
              case HostComponent:
                popHostContext(failedUnitOfWork);
                break;
              case ClassComponent:
                {
                  var Component = failedUnitOfWork.type;
                  if (isContextProvider(Component)) {
                    popContext(failedUnitOfWork);
                  }
                  break;
                }
              case HostPortal:
                popHostContainer(failedUnitOfWork);
                break;
              case ContextProvider:
                popProvider(failedUnitOfWork);
                break;
            }
            isReplayingFailedUnitOfWork = true;
            originalReplayError = thrownValue;
            invokeGuardedCallback(null, workLoop, null, isYieldy);
            isReplayingFailedUnitOfWork = false;
            originalReplayError = null;
            if (hasCaughtError()) {
              var replayError = clearCaughtError();
              if (replayError != null && thrownValue != null) {
                try {
                  if (replayError._suppressLogging) {
                    thrownValue._suppressLogging = true;
                  }
                } catch (inner) {}
              }
            } else {
              nextUnitOfWork = failedUnitOfWork;
            }
          };
          rethrowOriginalError = function () {
            throw originalReplayError;
          };
        }
        function resetStack() {
          if (nextUnitOfWork !== null) {
            var interruptedWork = nextUnitOfWork.return;
            while (interruptedWork !== null) {
              unwindInterruptedWork(interruptedWork);
              interruptedWork = interruptedWork.return;
            }
          }
          {
            ReactStrictModeWarnings.discardPendingWarnings();
            checkThatStackIsEmpty();
          }
          nextRoot = null;
          nextRenderExpirationTime = NoWork;
          nextLatestAbsoluteTimeoutMs = -1;
          nextRenderDidError = false;
          nextUnitOfWork = null;
        }
        function commitAllHostEffects() {
          while (nextEffect !== null) {
            {
              setCurrentFiber(nextEffect);
            }
            recordEffect();
            var effectTag = nextEffect.effectTag;
            if (effectTag & ContentReset) {
              commitResetTextContent(nextEffect);
            }
            if (effectTag & Ref) {
              var current$$1 = nextEffect.alternate;
              if (current$$1 !== null) {
                commitDetachRef(current$$1);
              }
            }
            var primaryEffectTag = effectTag & (Placement | Update | Deletion);
            switch (primaryEffectTag) {
              case Placement:
                {
                  commitPlacement(nextEffect);
                  nextEffect.effectTag &= ~Placement;
                  break;
                }
              case PlacementAndUpdate:
                {
                  commitPlacement(nextEffect);
                  nextEffect.effectTag &= ~Placement;
                  var _current = nextEffect.alternate;
                  commitWork(_current, nextEffect);
                  break;
                }
              case Update:
                {
                  var _current2 = nextEffect.alternate;
                  commitWork(_current2, nextEffect);
                  break;
                }
              case Deletion:
                {
                  commitDeletion(nextEffect);
                  break;
                }
            }
            nextEffect = nextEffect.nextEffect;
          }
          {
            resetCurrentFiber();
          }
        }
        function commitBeforeMutationLifecycles() {
          while (nextEffect !== null) {
            {
              setCurrentFiber(nextEffect);
            }
            var effectTag = nextEffect.effectTag;
            if (effectTag & Snapshot) {
              recordEffect();
              var current$$1 = nextEffect.alternate;
              commitBeforeMutationLifeCycles(current$$1, nextEffect);
            }
            nextEffect = nextEffect.nextEffect;
          }
          {
            resetCurrentFiber();
          }
        }
        function commitAllLifeCycles(finishedRoot, committedExpirationTime) {
          {
            ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings();
            ReactStrictModeWarnings.flushLegacyContextWarning();
            if (warnAboutDeprecatedLifecycles) {
              ReactStrictModeWarnings.flushPendingDeprecationWarnings();
            }
          }
          while (nextEffect !== null) {
            var effectTag = nextEffect.effectTag;
            if (effectTag & (Update | Callback)) {
              recordEffect();
              var current$$1 = nextEffect.alternate;
              commitLifeCycles(finishedRoot, current$$1, nextEffect, committedExpirationTime);
            }
            if (effectTag & Ref) {
              recordEffect();
              commitAttachRef(nextEffect);
            }
            if (enableHooks && effectTag & Passive) {
              rootWithPendingPassiveEffects = finishedRoot;
            }
            nextEffect = nextEffect.nextEffect;
          }
        }
        function commitPassiveEffects(root, firstEffect) {
          rootWithPendingPassiveEffects = null;
          passiveEffectCallbackHandle = null;
          passiveEffectCallback = null;
          var previousIsRendering = isRendering;
          isRendering = true;
          var effect = firstEffect;
          do {
            if (effect.effectTag & Passive) {
              var didError = false;
              var error = void 0;
              {
                invokeGuardedCallback(null, commitPassiveHookEffects, null, effect);
                if (hasCaughtError()) {
                  didError = true;
                  error = clearCaughtError();
                }
              }
              if (didError) {
                captureCommitPhaseError(effect, error);
              }
            }
            effect = effect.nextEffect;
          } while (effect !== null);
          isRendering = previousIsRendering;
          var rootExpirationTime = root.expirationTime;
          if (rootExpirationTime !== NoWork) {
            requestWork(root, rootExpirationTime);
          }
        }
        function isAlreadyFailedLegacyErrorBoundary(instance) {
          return legacyErrorBoundariesThatAlreadyFailed !== null && legacyErrorBoundariesThatAlreadyFailed.has(instance);
        }
        function markLegacyErrorBoundaryAsFailed(instance) {
          if (legacyErrorBoundariesThatAlreadyFailed === null) {
            legacyErrorBoundariesThatAlreadyFailed = new Set([instance]);
          } else {
            legacyErrorBoundariesThatAlreadyFailed.add(instance);
          }
        }
        function flushPassiveEffects() {
          if (passiveEffectCallback !== null) {
            scheduler.unstable_cancelCallback(passiveEffectCallbackHandle);
            passiveEffectCallback();
          }
        }
        function commitRoot(root, finishedWork) {
          isWorking = true;
          isCommitting$1 = true;
          startCommitTimer();
          !(root.current !== finishedWork) ? invariant(false, 'Cannot commit the same tree as before. This is probably a bug related to the return field. This error is likely caused by a bug in React. Please file an issue.') : void 0;
          var committedExpirationTime = root.pendingCommitExpirationTime;
          !(committedExpirationTime !== NoWork) ? invariant(false, 'Cannot commit an incomplete root. This error is likely caused by a bug in React. Please file an issue.') : void 0;
          root.pendingCommitExpirationTime = NoWork;
          var updateExpirationTimeBeforeCommit = finishedWork.expirationTime;
          var childExpirationTimeBeforeCommit = finishedWork.childExpirationTime;
          var earliestRemainingTimeBeforeCommit = childExpirationTimeBeforeCommit > updateExpirationTimeBeforeCommit ? childExpirationTimeBeforeCommit : updateExpirationTimeBeforeCommit;
          markCommittedPriorityLevels(root, earliestRemainingTimeBeforeCommit);
          var prevInteractions = null;
          if (enableSchedulerTracing) {
            prevInteractions = tracing.__interactionsRef.current;
            tracing.__interactionsRef.current = root.memoizedInteractions;
          }
          ReactCurrentOwner$2.current = null;
          var firstEffect = void 0;
          if (finishedWork.effectTag > PerformedWork) {
            if (finishedWork.lastEffect !== null) {
              finishedWork.lastEffect.nextEffect = finishedWork;
              firstEffect = finishedWork.firstEffect;
            } else {
              firstEffect = finishedWork;
            }
          } else {
            firstEffect = finishedWork.firstEffect;
          }
          prepareForCommit(root.containerInfo);
          nextEffect = firstEffect;
          startCommitSnapshotEffectsTimer();
          while (nextEffect !== null) {
            var didError = false;
            var error = void 0;
            {
              invokeGuardedCallback(null, commitBeforeMutationLifecycles, null);
              if (hasCaughtError()) {
                didError = true;
                error = clearCaughtError();
              }
            }
            if (didError) {
              !(nextEffect !== null) ? invariant(false, 'Should have next effect. This error is likely caused by a bug in React. Please file an issue.') : void 0;
              captureCommitPhaseError(nextEffect, error);
              if (nextEffect !== null) {
                nextEffect = nextEffect.nextEffect;
              }
            }
          }
          stopCommitSnapshotEffectsTimer();
          if (enableProfilerTimer) {
            recordCommitTime();
          }
          nextEffect = firstEffect;
          startCommitHostEffectsTimer();
          while (nextEffect !== null) {
            var _didError = false;
            var _error = void 0;
            {
              invokeGuardedCallback(null, commitAllHostEffects, null);
              if (hasCaughtError()) {
                _didError = true;
                _error = clearCaughtError();
              }
            }
            if (_didError) {
              !(nextEffect !== null) ? invariant(false, 'Should have next effect. This error is likely caused by a bug in React. Please file an issue.') : void 0;
              captureCommitPhaseError(nextEffect, _error);
              if (nextEffect !== null) {
                nextEffect = nextEffect.nextEffect;
              }
            }
          }
          stopCommitHostEffectsTimer();
          resetAfterCommit(root.containerInfo);
          root.current = finishedWork;
          nextEffect = firstEffect;
          startCommitLifeCyclesTimer();
          while (nextEffect !== null) {
            var _didError2 = false;
            var _error2 = void 0;
            {
              invokeGuardedCallback(null, commitAllLifeCycles, null, root, committedExpirationTime);
              if (hasCaughtError()) {
                _didError2 = true;
                _error2 = clearCaughtError();
              }
            }
            if (_didError2) {
              !(nextEffect !== null) ? invariant(false, 'Should have next effect. This error is likely caused by a bug in React. Please file an issue.') : void 0;
              captureCommitPhaseError(nextEffect, _error2);
              if (nextEffect !== null) {
                nextEffect = nextEffect.nextEffect;
              }
            }
          }
          if (enableHooks && firstEffect !== null && rootWithPendingPassiveEffects !== null) {
            var callback = commitPassiveEffects.bind(null, root, firstEffect);
            if (enableSchedulerTracing) {
              callback = tracing.unstable_wrap(callback);
            }
            passiveEffectCallbackHandle = scheduler.unstable_scheduleCallback(callback);
            passiveEffectCallback = callback;
          }
          isCommitting$1 = false;
          isWorking = false;
          stopCommitLifeCyclesTimer();
          stopCommitTimer();
          onCommitRoot(finishedWork.stateNode);
          if (true && ReactFiberInstrumentation_1.debugTool) {
            ReactFiberInstrumentation_1.debugTool.onCommitWork(finishedWork);
          }
          var updateExpirationTimeAfterCommit = finishedWork.expirationTime;
          var childExpirationTimeAfterCommit = finishedWork.childExpirationTime;
          var earliestRemainingTimeAfterCommit = childExpirationTimeAfterCommit > updateExpirationTimeAfterCommit ? childExpirationTimeAfterCommit : updateExpirationTimeAfterCommit;
          if (earliestRemainingTimeAfterCommit === NoWork) {
            legacyErrorBoundariesThatAlreadyFailed = null;
          }
          onCommit(root, earliestRemainingTimeAfterCommit);
          if (enableSchedulerTracing) {
            tracing.__interactionsRef.current = prevInteractions;
            var subscriber = void 0;
            try {
              subscriber = tracing.__subscriberRef.current;
              if (subscriber !== null && root.memoizedInteractions.size > 0) {
                var threadID = computeThreadID(committedExpirationTime, root.interactionThreadID);
                subscriber.onWorkStopped(root.memoizedInteractions, threadID);
              }
            } catch (error) {
              if (!hasUnhandledError) {
                hasUnhandledError = true;
                unhandledError = error;
              }
            } finally {
              var pendingInteractionMap = root.pendingInteractionMap;
              pendingInteractionMap.forEach(function (scheduledInteractions, scheduledExpirationTime) {
                if (scheduledExpirationTime > earliestRemainingTimeAfterCommit) {
                  pendingInteractionMap.delete(scheduledExpirationTime);
                  scheduledInteractions.forEach(function (interaction) {
                    interaction.__count--;
                    if (subscriber !== null && interaction.__count === 0) {
                      try {
                        subscriber.onInteractionScheduledWorkCompleted(interaction);
                      } catch (error) {
                        if (!hasUnhandledError) {
                          hasUnhandledError = true;
                          unhandledError = error;
                        }
                      }
                    }
                  });
                }
              });
            }
          }
        }
        function resetChildExpirationTime(workInProgress, renderTime) {
          if (renderTime !== Never && workInProgress.childExpirationTime === Never) {
            return;
          }
          var newChildExpirationTime = NoWork;
          if (enableProfilerTimer && workInProgress.mode & ProfileMode) {
            var actualDuration = workInProgress.actualDuration;
            var treeBaseDuration = workInProgress.selfBaseDuration;
            var shouldBubbleActualDurations = workInProgress.alternate === null || workInProgress.child !== workInProgress.alternate.child;
            var child = workInProgress.child;
            while (child !== null) {
              var childUpdateExpirationTime = child.expirationTime;
              var childChildExpirationTime = child.childExpirationTime;
              if (childUpdateExpirationTime > newChildExpirationTime) {
                newChildExpirationTime = childUpdateExpirationTime;
              }
              if (childChildExpirationTime > newChildExpirationTime) {
                newChildExpirationTime = childChildExpirationTime;
              }
              if (shouldBubbleActualDurations) {
                actualDuration += child.actualDuration;
              }
              treeBaseDuration += child.treeBaseDuration;
              child = child.sibling;
            }
            workInProgress.actualDuration = actualDuration;
            workInProgress.treeBaseDuration = treeBaseDuration;
          } else {
            var _child = workInProgress.child;
            while (_child !== null) {
              var _childUpdateExpirationTime = _child.expirationTime;
              var _childChildExpirationTime = _child.childExpirationTime;
              if (_childUpdateExpirationTime > newChildExpirationTime) {
                newChildExpirationTime = _childUpdateExpirationTime;
              }
              if (_childChildExpirationTime > newChildExpirationTime) {
                newChildExpirationTime = _childChildExpirationTime;
              }
              _child = _child.sibling;
            }
          }
          workInProgress.childExpirationTime = newChildExpirationTime;
        }
        function completeUnitOfWork(workInProgress) {
          while (true) {
            var current$$1 = workInProgress.alternate;
            {
              setCurrentFiber(workInProgress);
            }
            var returnFiber = workInProgress.return;
            var siblingFiber = workInProgress.sibling;
            if ((workInProgress.effectTag & Incomplete) === NoEffect) {
              if (true && replayFailedUnitOfWorkWithInvokeGuardedCallback) {
                mayReplayFailedUnitOfWork = false;
              }
              nextUnitOfWork = workInProgress;
              if (enableProfilerTimer) {
                if (workInProgress.mode & ProfileMode) {
                  startProfilerTimer(workInProgress);
                }
                nextUnitOfWork = completeWork(current$$1, workInProgress, nextRenderExpirationTime);
                if (workInProgress.mode & ProfileMode) {
                  stopProfilerTimerIfRunningAndRecordDelta(workInProgress, false);
                }
              } else {
                nextUnitOfWork = completeWork(current$$1, workInProgress, nextRenderExpirationTime);
              }
              if (true && replayFailedUnitOfWorkWithInvokeGuardedCallback) {
                mayReplayFailedUnitOfWork = true;
              }
              stopWorkTimer(workInProgress);
              resetChildExpirationTime(workInProgress, nextRenderExpirationTime);
              {
                resetCurrentFiber();
              }
              if (nextUnitOfWork !== null) {
                return nextUnitOfWork;
              }
              if (returnFiber !== null && (returnFiber.effectTag & Incomplete) === NoEffect) {
                if (returnFiber.firstEffect === null) {
                  returnFiber.firstEffect = workInProgress.firstEffect;
                }
                if (workInProgress.lastEffect !== null) {
                  if (returnFiber.lastEffect !== null) {
                    returnFiber.lastEffect.nextEffect = workInProgress.firstEffect;
                  }
                  returnFiber.lastEffect = workInProgress.lastEffect;
                }
                var effectTag = workInProgress.effectTag;
                if (effectTag > PerformedWork) {
                  if (returnFiber.lastEffect !== null) {
                    returnFiber.lastEffect.nextEffect = workInProgress;
                  } else {
                    returnFiber.firstEffect = workInProgress;
                  }
                  returnFiber.lastEffect = workInProgress;
                }
              }
              if (true && ReactFiberInstrumentation_1.debugTool) {
                ReactFiberInstrumentation_1.debugTool.onCompleteWork(workInProgress);
              }
              if (siblingFiber !== null) {
                return siblingFiber;
              } else if (returnFiber !== null) {
                workInProgress = returnFiber;
                continue;
              } else {
                return null;
              }
            } else {
              if (enableProfilerTimer && workInProgress.mode & ProfileMode) {
                stopProfilerTimerIfRunningAndRecordDelta(workInProgress, false);
                var actualDuration = workInProgress.actualDuration;
                var child = workInProgress.child;
                while (child !== null) {
                  actualDuration += child.actualDuration;
                  child = child.sibling;
                }
                workInProgress.actualDuration = actualDuration;
              }
              var next = unwindWork(workInProgress, nextRenderExpirationTime);
              if (workInProgress.effectTag & DidCapture) {
                stopFailedWorkTimer(workInProgress);
              } else {
                stopWorkTimer(workInProgress);
              }
              {
                resetCurrentFiber();
              }
              if (next !== null) {
                stopWorkTimer(workInProgress);
                if (true && ReactFiberInstrumentation_1.debugTool) {
                  ReactFiberInstrumentation_1.debugTool.onCompleteWork(workInProgress);
                }
                next.effectTag &= HostEffectMask;
                return next;
              }
              if (returnFiber !== null) {
                returnFiber.firstEffect = returnFiber.lastEffect = null;
                returnFiber.effectTag |= Incomplete;
              }
              if (true && ReactFiberInstrumentation_1.debugTool) {
                ReactFiberInstrumentation_1.debugTool.onCompleteWork(workInProgress);
              }
              if (siblingFiber !== null) {
                return siblingFiber;
              } else if (returnFiber !== null) {
                workInProgress = returnFiber;
                continue;
              } else {
                return null;
              }
            }
          }
          return null;
        }
        function performUnitOfWork(workInProgress) {
          var current$$1 = workInProgress.alternate;
          startWorkTimer(workInProgress);
          {
            setCurrentFiber(workInProgress);
          }
          if (true && replayFailedUnitOfWorkWithInvokeGuardedCallback) {
            stashedWorkInProgressProperties = assignFiberPropertiesInDEV(stashedWorkInProgressProperties, workInProgress);
          }
          var next = void 0;
          if (enableProfilerTimer) {
            if (workInProgress.mode & ProfileMode) {
              startProfilerTimer(workInProgress);
            }
            next = beginWork(current$$1, workInProgress, nextRenderExpirationTime);
            workInProgress.memoizedProps = workInProgress.pendingProps;
            if (workInProgress.mode & ProfileMode) {
              stopProfilerTimerIfRunningAndRecordDelta(workInProgress, true);
            }
          } else {
            next = beginWork(current$$1, workInProgress, nextRenderExpirationTime);
            workInProgress.memoizedProps = workInProgress.pendingProps;
          }
          {
            resetCurrentFiber();
            if (isReplayingFailedUnitOfWork) {
              rethrowOriginalError();
            }
          }
          if (true && ReactFiberInstrumentation_1.debugTool) {
            ReactFiberInstrumentation_1.debugTool.onBeginWork(workInProgress);
          }
          if (next === null) {
            next = completeUnitOfWork(workInProgress);
          }
          ReactCurrentOwner$2.current = null;
          return next;
        }
        function workLoop(isYieldy) {
          if (!isYieldy) {
            while (nextUnitOfWork !== null) {
              nextUnitOfWork = performUnitOfWork(nextUnitOfWork);
            }
          } else {
            while (nextUnitOfWork !== null && !shouldYieldToRenderer()) {
              nextUnitOfWork = performUnitOfWork(nextUnitOfWork);
            }
          }
        }
        function renderRoot(root, isYieldy) {
          !!isWorking ? invariant(false, 'renderRoot was called recursively. This error is likely caused by a bug in React. Please file an issue.') : void 0;
          flushPassiveEffects();
          isWorking = true;
          if (enableHooks) {
            ReactCurrentOwner$2.currentDispatcher = Dispatcher;
          } else {
            ReactCurrentOwner$2.currentDispatcher = DispatcherWithoutHooks;
          }
          var expirationTime = root.nextExpirationTimeToWorkOn;
          if (expirationTime !== nextRenderExpirationTime || root !== nextRoot || nextUnitOfWork === null) {
            resetStack();
            nextRoot = root;
            nextRenderExpirationTime = expirationTime;
            nextUnitOfWork = createWorkInProgress(nextRoot.current, null, nextRenderExpirationTime);
            root.pendingCommitExpirationTime = NoWork;
            if (enableSchedulerTracing) {
              var interactions = new Set();
              root.pendingInteractionMap.forEach(function (scheduledInteractions, scheduledExpirationTime) {
                if (scheduledExpirationTime >= expirationTime) {
                  scheduledInteractions.forEach(function (interaction) {
                    return interactions.add(interaction);
                  });
                }
              });
              root.memoizedInteractions = interactions;
              if (interactions.size > 0) {
                var subscriber = tracing.__subscriberRef.current;
                if (subscriber !== null) {
                  var threadID = computeThreadID(expirationTime, root.interactionThreadID);
                  try {
                    subscriber.onWorkStarted(interactions, threadID);
                  } catch (error) {
                    if (!hasUnhandledError) {
                      hasUnhandledError = true;
                      unhandledError = error;
                    }
                  }
                }
              }
            }
          }
          var prevInteractions = null;
          if (enableSchedulerTracing) {
            prevInteractions = tracing.__interactionsRef.current;
            tracing.__interactionsRef.current = root.memoizedInteractions;
          }
          var didFatal = false;
          startWorkLoopTimer(nextUnitOfWork);
          do {
            try {
              workLoop(isYieldy);
            } catch (thrownValue) {
              resetContextDependences();
              resetHooks();
              var mayReplay = void 0;
              if (true && replayFailedUnitOfWorkWithInvokeGuardedCallback) {
                mayReplay = mayReplayFailedUnitOfWork;
                mayReplayFailedUnitOfWork = true;
              }
              if (nextUnitOfWork === null) {
                didFatal = true;
                onUncaughtError(thrownValue);
              } else {
                if (enableProfilerTimer && nextUnitOfWork.mode & ProfileMode) {
                  stopProfilerTimerIfRunningAndRecordDelta(nextUnitOfWork, true);
                }
                {
                  resetCurrentlyProcessingQueue();
                }
                if (true && replayFailedUnitOfWorkWithInvokeGuardedCallback) {
                  if (mayReplay) {
                    var failedUnitOfWork = nextUnitOfWork;
                    replayUnitOfWork(failedUnitOfWork, thrownValue, isYieldy);
                  }
                }
                !(nextUnitOfWork !== null) ? invariant(false, 'Failed to replay rendering after an error. This is likely caused by a bug in React. Please file an issue with a reproducing case to help us find it.') : void 0;
                var sourceFiber = nextUnitOfWork;
                var returnFiber = sourceFiber.return;
                if (returnFiber === null) {
                  didFatal = true;
                  onUncaughtError(thrownValue);
                } else {
                  throwException(root, returnFiber, sourceFiber, thrownValue, nextRenderExpirationTime);
                  nextUnitOfWork = completeUnitOfWork(sourceFiber);
                  continue;
                }
              }
            }
            break;
          } while (true);
          if (enableSchedulerTracing) {
            tracing.__interactionsRef.current = prevInteractions;
          }
          isWorking = false;
          ReactCurrentOwner$2.currentDispatcher = null;
          resetContextDependences();
          resetHooks();
          if (didFatal) {
            var _didCompleteRoot = false;
            stopWorkLoopTimer(interruptedBy, _didCompleteRoot);
            interruptedBy = null;
            {
              resetStackAfterFatalErrorInDev();
            }
            nextRoot = null;
            onFatal(root);
            return;
          }
          if (nextUnitOfWork !== null) {
            var _didCompleteRoot2 = false;
            stopWorkLoopTimer(interruptedBy, _didCompleteRoot2);
            interruptedBy = null;
            onYield(root);
            return;
          }
          var didCompleteRoot = true;
          stopWorkLoopTimer(interruptedBy, didCompleteRoot);
          var rootWorkInProgress = root.current.alternate;
          !(rootWorkInProgress !== null) ? invariant(false, 'Finished root should have a work-in-progress. This error is likely caused by a bug in React. Please file an issue.') : void 0;
          nextRoot = null;
          interruptedBy = null;
          if (nextRenderDidError) {
            if (hasLowerPriorityWork(root, expirationTime)) {
              markSuspendedPriorityLevel(root, expirationTime);
              var suspendedExpirationTime = expirationTime;
              var rootExpirationTime = root.expirationTime;
              onSuspend(root, rootWorkInProgress, suspendedExpirationTime, rootExpirationTime, -1);
              return;
            } else if (!root.didError && isYieldy) {
              root.didError = true;
              var _suspendedExpirationTime = root.nextExpirationTimeToWorkOn = expirationTime;
              var _rootExpirationTime = root.expirationTime = Sync;
              onSuspend(root, rootWorkInProgress, _suspendedExpirationTime, _rootExpirationTime, -1);
              return;
            }
          }
          if (isYieldy && nextLatestAbsoluteTimeoutMs !== -1) {
            var _suspendedExpirationTime2 = expirationTime;
            markSuspendedPriorityLevel(root, _suspendedExpirationTime2);
            var earliestExpirationTime = findEarliestOutstandingPriorityLevel(root, expirationTime);
            var earliestExpirationTimeMs = expirationTimeToMs(earliestExpirationTime);
            if (earliestExpirationTimeMs < nextLatestAbsoluteTimeoutMs) {
              nextLatestAbsoluteTimeoutMs = earliestExpirationTimeMs;
            }
            var currentTimeMs = expirationTimeToMs(requestCurrentTime());
            var msUntilTimeout = nextLatestAbsoluteTimeoutMs - currentTimeMs;
            msUntilTimeout = msUntilTimeout < 0 ? 0 : msUntilTimeout;
            var _rootExpirationTime2 = root.expirationTime;
            onSuspend(root, rootWorkInProgress, _suspendedExpirationTime2, _rootExpirationTime2, msUntilTimeout);
            return;
          }
          onComplete(root, rootWorkInProgress, expirationTime);
        }
        function captureCommitPhaseError(sourceFiber, value) {
          var expirationTime = Sync;
          var fiber = sourceFiber.return;
          while (fiber !== null) {
            switch (fiber.tag) {
              case ClassComponent:
                var ctor = fiber.type;
                var instance = fiber.stateNode;
                if (typeof ctor.getDerivedStateFromError === 'function' || typeof instance.componentDidCatch === 'function' && !isAlreadyFailedLegacyErrorBoundary(instance)) {
                  var errorInfo = createCapturedValue(value, sourceFiber);
                  var update = createClassErrorUpdate(fiber, errorInfo, expirationTime);
                  enqueueUpdate(fiber, update);
                  scheduleWork(fiber, expirationTime);
                  return;
                }
                break;
              case HostRoot:
                {
                  var _errorInfo = createCapturedValue(value, sourceFiber);
                  var _update = createRootErrorUpdate(fiber, _errorInfo, expirationTime);
                  enqueueUpdate(fiber, _update);
                  scheduleWork(fiber, expirationTime);
                  return;
                }
            }
            fiber = fiber.return;
          }
          if (sourceFiber.tag === HostRoot) {
            var rootFiber = sourceFiber;
            var _errorInfo2 = createCapturedValue(value, rootFiber);
            var _update2 = createRootErrorUpdate(rootFiber, _errorInfo2, expirationTime);
            enqueueUpdate(rootFiber, _update2);
            scheduleWork(rootFiber, expirationTime);
          }
        }
        function computeThreadID(expirationTime, interactionThreadID) {
          return expirationTime * 1000 + interactionThreadID;
        }
        function computeUniqueAsyncExpiration() {
          var currentTime = requestCurrentTime();
          var result = computeAsyncExpiration(currentTime);
          if (result >= lastUniqueAsyncExpiration) {
            result = lastUniqueAsyncExpiration - 1;
          }
          lastUniqueAsyncExpiration = result;
          return lastUniqueAsyncExpiration;
        }
        function computeExpirationForFiber(currentTime, fiber) {
          var expirationTime = void 0;
          if (expirationContext !== NoWork) {
            expirationTime = expirationContext;
          } else if (isWorking) {
            if (isCommitting$1) {
              expirationTime = Sync;
            } else {
              expirationTime = nextRenderExpirationTime;
            }
          } else {
            if (fiber.mode & ConcurrentMode) {
              if (isBatchingInteractiveUpdates) {
                expirationTime = computeInteractiveExpiration(currentTime);
              } else {
                expirationTime = computeAsyncExpiration(currentTime);
              }
              if (nextRoot !== null && expirationTime === nextRenderExpirationTime) {
                expirationTime -= 1;
              }
            } else {
              expirationTime = Sync;
            }
          }
          if (isBatchingInteractiveUpdates) {
            if (lowestPriorityPendingInteractiveExpirationTime === NoWork || expirationTime < lowestPriorityPendingInteractiveExpirationTime) {
              lowestPriorityPendingInteractiveExpirationTime = expirationTime;
            }
          }
          return expirationTime;
        }
        function renderDidSuspend(root, absoluteTimeoutMs, suspendedTime) {
          if (absoluteTimeoutMs >= 0 && nextLatestAbsoluteTimeoutMs < absoluteTimeoutMs) {
            nextLatestAbsoluteTimeoutMs = absoluteTimeoutMs;
          }
        }
        function renderDidError() {
          nextRenderDidError = true;
        }
        function pingSuspendedRoot(root, thenable, pingTime) {
          var pingCache = root.pingCache;
          if (pingCache !== null) {
            pingCache.delete(thenable);
          }
          if (nextRoot !== null && nextRenderExpirationTime === pingTime) {
            nextRoot = null;
          } else {
            if (isPriorityLevelSuspended(root, pingTime)) {
              markPingedPriorityLevel(root, pingTime);
              var rootExpirationTime = root.expirationTime;
              if (rootExpirationTime !== NoWork) {
                requestWork(root, rootExpirationTime);
              }
            }
          }
        }
        function retryTimedOutBoundary(boundaryFiber, thenable) {
          var retryCache = boundaryFiber.stateNode;
          if (retryCache !== null) {
            retryCache.delete(thenable);
          }
          var currentTime = requestCurrentTime();
          var retryTime = computeExpirationForFiber(currentTime, boundaryFiber);
          var root = scheduleWorkToRoot(boundaryFiber, retryTime);
          if (root !== null) {
            markPendingPriorityLevel(root, retryTime);
            var rootExpirationTime = root.expirationTime;
            if (rootExpirationTime !== NoWork) {
              requestWork(root, rootExpirationTime);
            }
          }
        }
        function scheduleWorkToRoot(fiber, expirationTime) {
          recordScheduleUpdate();
          {
            if (fiber.tag === ClassComponent) {
              var instance = fiber.stateNode;
              warnAboutInvalidUpdates(instance);
            }
          }
          if (fiber.expirationTime < expirationTime) {
            fiber.expirationTime = expirationTime;
          }
          var alternate = fiber.alternate;
          if (alternate !== null && alternate.expirationTime < expirationTime) {
            alternate.expirationTime = expirationTime;
          }
          var node = fiber.return;
          var root = null;
          if (node === null && fiber.tag === HostRoot) {
            root = fiber.stateNode;
          } else {
            while (node !== null) {
              alternate = node.alternate;
              if (node.childExpirationTime < expirationTime) {
                node.childExpirationTime = expirationTime;
                if (alternate !== null && alternate.childExpirationTime < expirationTime) {
                  alternate.childExpirationTime = expirationTime;
                }
              } else if (alternate !== null && alternate.childExpirationTime < expirationTime) {
                alternate.childExpirationTime = expirationTime;
              }
              if (node.return === null && node.tag === HostRoot) {
                root = node.stateNode;
                break;
              }
              node = node.return;
            }
          }
          if (enableSchedulerTracing) {
            if (root !== null) {
              var interactions = tracing.__interactionsRef.current;
              if (interactions.size > 0) {
                var pendingInteractionMap = root.pendingInteractionMap;
                var pendingInteractions = pendingInteractionMap.get(expirationTime);
                if (pendingInteractions != null) {
                  interactions.forEach(function (interaction) {
                    if (!pendingInteractions.has(interaction)) {
                      interaction.__count++;
                    }
                    pendingInteractions.add(interaction);
                  });
                } else {
                  pendingInteractionMap.set(expirationTime, new Set(interactions));
                  interactions.forEach(function (interaction) {
                    interaction.__count++;
                  });
                }
                var subscriber = tracing.__subscriberRef.current;
                if (subscriber !== null) {
                  var threadID = computeThreadID(expirationTime, root.interactionThreadID);
                  subscriber.onWorkScheduled(interactions, threadID);
                }
              }
            }
          }
          return root;
        }
        function scheduleWork(fiber, expirationTime) {
          var root = scheduleWorkToRoot(fiber, expirationTime);
          if (root === null) {
            {
              switch (fiber.tag) {
                case ClassComponent:
                  warnAboutUpdateOnUnmounted(fiber, true);
                  break;
                case FunctionComponent:
                case ForwardRef:
                case MemoComponent:
                case SimpleMemoComponent:
                  warnAboutUpdateOnUnmounted(fiber, false);
                  break;
              }
            }
            return;
          }
          if (!isWorking && nextRenderExpirationTime !== NoWork && expirationTime > nextRenderExpirationTime) {
            interruptedBy = fiber;
            resetStack();
          }
          markPendingPriorityLevel(root, expirationTime);
          if (!isWorking || isCommitting$1 || nextRoot !== root) {
            var rootExpirationTime = root.expirationTime;
            requestWork(root, rootExpirationTime);
          }
          if (nestedUpdateCount > NESTED_UPDATE_LIMIT) {
            nestedUpdateCount = 0;
            invariant(false, 'Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops.');
          }
        }
        function syncUpdates(fn, a, b, c, d) {
          var previousExpirationContext = expirationContext;
          expirationContext = Sync;
          try {
            return fn(a, b, c, d);
          } finally {
            expirationContext = previousExpirationContext;
          }
        }
        var firstScheduledRoot = null;
        var lastScheduledRoot = null;
        var callbackExpirationTime = NoWork;
        var callbackID = void 0;
        var isRendering = false;
        var nextFlushedRoot = null;
        var nextFlushedExpirationTime = NoWork;
        var lowestPriorityPendingInteractiveExpirationTime = NoWork;
        var hasUnhandledError = false;
        var unhandledError = null;
        var isBatchingUpdates = false;
        var isUnbatchingUpdates = false;
        var isBatchingInteractiveUpdates = false;
        var completedBatches = null;
        var originalStartTimeMs = scheduler.unstable_now();
        var currentRendererTime = msToExpirationTime(originalStartTimeMs);
        var currentSchedulerTime = currentRendererTime;
        var NESTED_UPDATE_LIMIT = 50;
        var nestedUpdateCount = 0;
        var lastCommittedRootDuringThisBatch = null;
        function recomputeCurrentRendererTime() {
          var currentTimeMs = scheduler.unstable_now() - originalStartTimeMs;
          currentRendererTime = msToExpirationTime(currentTimeMs);
        }
        function scheduleCallbackWithExpirationTime(root, expirationTime) {
          if (callbackExpirationTime !== NoWork) {
            if (expirationTime < callbackExpirationTime) {
              return;
            } else {
              if (callbackID !== null) {
                scheduler.unstable_cancelCallback(callbackID);
              }
            }
          } else {
            startRequestCallbackTimer();
          }
          callbackExpirationTime = expirationTime;
          var currentMs = scheduler.unstable_now() - originalStartTimeMs;
          var expirationTimeMs = expirationTimeToMs(expirationTime);
          var timeout = expirationTimeMs - currentMs;
          callbackID = scheduler.unstable_scheduleCallback(performAsyncWork, { timeout: timeout });
        }
        function onFatal(root) {
          root.finishedWork = null;
        }
        function onComplete(root, finishedWork, expirationTime) {
          root.pendingCommitExpirationTime = expirationTime;
          root.finishedWork = finishedWork;
        }
        function onSuspend(root, finishedWork, suspendedExpirationTime, rootExpirationTime, msUntilTimeout) {
          root.expirationTime = rootExpirationTime;
          if (msUntilTimeout === 0 && !shouldYieldToRenderer()) {
            root.pendingCommitExpirationTime = suspendedExpirationTime;
            root.finishedWork = finishedWork;
          } else if (msUntilTimeout > 0) {
            root.timeoutHandle = scheduleTimeout(onTimeout.bind(null, root, finishedWork, suspendedExpirationTime), msUntilTimeout);
          }
        }
        function onYield(root) {
          root.finishedWork = null;
        }
        function onTimeout(root, finishedWork, suspendedExpirationTime) {
          root.pendingCommitExpirationTime = suspendedExpirationTime;
          root.finishedWork = finishedWork;
          recomputeCurrentRendererTime();
          currentSchedulerTime = currentRendererTime;
          flushRoot(root, suspendedExpirationTime);
        }
        function onCommit(root, expirationTime) {
          root.expirationTime = expirationTime;
          root.finishedWork = null;
        }
        function requestCurrentTime() {
          if (isRendering) {
            return currentSchedulerTime;
          }
          findHighestPriorityRoot();
          if (nextFlushedExpirationTime === NoWork || nextFlushedExpirationTime === Never) {
            recomputeCurrentRendererTime();
            currentSchedulerTime = currentRendererTime;
            return currentSchedulerTime;
          }
          return currentSchedulerTime;
        }
        function requestWork(root, expirationTime) {
          addRootToSchedule(root, expirationTime);
          if (isRendering) {
            return;
          }
          if (isBatchingUpdates) {
            if (isUnbatchingUpdates) {
              nextFlushedRoot = root;
              nextFlushedExpirationTime = Sync;
              performWorkOnRoot(root, Sync, false);
            }
            return;
          }
          if (expirationTime === Sync) {
            performSyncWork();
          } else {
            scheduleCallbackWithExpirationTime(root, expirationTime);
          }
        }
        function addRootToSchedule(root, expirationTime) {
          if (root.nextScheduledRoot === null) {
            root.expirationTime = expirationTime;
            if (lastScheduledRoot === null) {
              firstScheduledRoot = lastScheduledRoot = root;
              root.nextScheduledRoot = root;
            } else {
              lastScheduledRoot.nextScheduledRoot = root;
              lastScheduledRoot = root;
              lastScheduledRoot.nextScheduledRoot = firstScheduledRoot;
            }
          } else {
            var remainingExpirationTime = root.expirationTime;
            if (expirationTime > remainingExpirationTime) {
              root.expirationTime = expirationTime;
            }
          }
        }
        function findHighestPriorityRoot() {
          var highestPriorityWork = NoWork;
          var highestPriorityRoot = null;
          if (lastScheduledRoot !== null) {
            var previousScheduledRoot = lastScheduledRoot;
            var root = firstScheduledRoot;
            while (root !== null) {
              var remainingExpirationTime = root.expirationTime;
              if (remainingExpirationTime === NoWork) {
                !(previousScheduledRoot !== null && lastScheduledRoot !== null) ? invariant(false, 'Should have a previous and last root. This error is likely caused by a bug in React. Please file an issue.') : void 0;
                if (root === root.nextScheduledRoot) {
                  root.nextScheduledRoot = null;
                  firstScheduledRoot = lastScheduledRoot = null;
                  break;
                } else if (root === firstScheduledRoot) {
                  var next = root.nextScheduledRoot;
                  firstScheduledRoot = next;
                  lastScheduledRoot.nextScheduledRoot = next;
                  root.nextScheduledRoot = null;
                } else if (root === lastScheduledRoot) {
                  lastScheduledRoot = previousScheduledRoot;
                  lastScheduledRoot.nextScheduledRoot = firstScheduledRoot;
                  root.nextScheduledRoot = null;
                  break;
                } else {
                  previousScheduledRoot.nextScheduledRoot = root.nextScheduledRoot;
                  root.nextScheduledRoot = null;
                }
                root = previousScheduledRoot.nextScheduledRoot;
              } else {
                if (remainingExpirationTime > highestPriorityWork) {
                  highestPriorityWork = remainingExpirationTime;
                  highestPriorityRoot = root;
                }
                if (root === lastScheduledRoot) {
                  break;
                }
                if (highestPriorityWork === Sync) {
                  break;
                }
                previousScheduledRoot = root;
                root = root.nextScheduledRoot;
              }
            }
          }
          nextFlushedRoot = highestPriorityRoot;
          nextFlushedExpirationTime = highestPriorityWork;
        }
        var didYield = false;
        function shouldYieldToRenderer() {
          if (didYield) {
            return true;
          }
          if (scheduler.unstable_shouldYield()) {
            didYield = true;
            return true;
          }
          return false;
        }
        function performAsyncWork() {
          try {
            if (!shouldYieldToRenderer()) {
              if (firstScheduledRoot !== null) {
                recomputeCurrentRendererTime();
                var root = firstScheduledRoot;
                do {
                  didExpireAtExpirationTime(root, currentRendererTime);
                  root = root.nextScheduledRoot;
                } while (root !== firstScheduledRoot);
              }
            }
            performWork(NoWork, true);
          } finally {
            didYield = false;
          }
        }
        function performSyncWork() {
          performWork(Sync, false);
        }
        function performWork(minExpirationTime, isYieldy) {
          findHighestPriorityRoot();
          if (isYieldy) {
            recomputeCurrentRendererTime();
            currentSchedulerTime = currentRendererTime;
            if (enableUserTimingAPI) {
              var didExpire = nextFlushedExpirationTime > currentRendererTime;
              var timeout = expirationTimeToMs(nextFlushedExpirationTime);
              stopRequestCallbackTimer(didExpire, timeout);
            }
            while (nextFlushedRoot !== null && nextFlushedExpirationTime !== NoWork && minExpirationTime <= nextFlushedExpirationTime && !(didYield && currentRendererTime > nextFlushedExpirationTime)) {
              performWorkOnRoot(nextFlushedRoot, nextFlushedExpirationTime, currentRendererTime > nextFlushedExpirationTime);
              findHighestPriorityRoot();
              recomputeCurrentRendererTime();
              currentSchedulerTime = currentRendererTime;
            }
          } else {
            while (nextFlushedRoot !== null && nextFlushedExpirationTime !== NoWork && minExpirationTime <= nextFlushedExpirationTime) {
              performWorkOnRoot(nextFlushedRoot, nextFlushedExpirationTime, false);
              findHighestPriorityRoot();
            }
          }
          if (isYieldy) {
            callbackExpirationTime = NoWork;
            callbackID = null;
          }
          if (nextFlushedExpirationTime !== NoWork) {
            scheduleCallbackWithExpirationTime(nextFlushedRoot, nextFlushedExpirationTime);
          }
          finishRendering();
        }
        function flushRoot(root, expirationTime) {
          !!isRendering ? invariant(false, 'work.commit(): Cannot commit while already rendering. This likely means you attempted to commit from inside a lifecycle method.') : void 0;
          nextFlushedRoot = root;
          nextFlushedExpirationTime = expirationTime;
          performWorkOnRoot(root, expirationTime, false);
          performSyncWork();
        }
        function finishRendering() {
          nestedUpdateCount = 0;
          lastCommittedRootDuringThisBatch = null;
          if (completedBatches !== null) {
            var batches = completedBatches;
            completedBatches = null;
            for (var i = 0; i < batches.length; i++) {
              var batch = batches[i];
              try {
                batch._onComplete();
              } catch (error) {
                if (!hasUnhandledError) {
                  hasUnhandledError = true;
                  unhandledError = error;
                }
              }
            }
          }
          if (hasUnhandledError) {
            var error = unhandledError;
            unhandledError = null;
            hasUnhandledError = false;
            throw error;
          }
        }
        function performWorkOnRoot(root, expirationTime, isYieldy) {
          !!isRendering ? invariant(false, 'performWorkOnRoot was called recursively. This error is likely caused by a bug in React. Please file an issue.') : void 0;
          isRendering = true;
          if (!isYieldy) {
            var finishedWork = root.finishedWork;
            if (finishedWork !== null) {
              completeRoot(root, finishedWork, expirationTime);
            } else {
              root.finishedWork = null;
              var timeoutHandle = root.timeoutHandle;
              if (timeoutHandle !== noTimeout) {
                root.timeoutHandle = noTimeout;
                cancelTimeout(timeoutHandle);
              }
              renderRoot(root, isYieldy);
              finishedWork = root.finishedWork;
              if (finishedWork !== null) {
                completeRoot(root, finishedWork, expirationTime);
              }
            }
          } else {
            var _finishedWork = root.finishedWork;
            if (_finishedWork !== null) {
              completeRoot(root, _finishedWork, expirationTime);
            } else {
              root.finishedWork = null;
              var _timeoutHandle = root.timeoutHandle;
              if (_timeoutHandle !== noTimeout) {
                root.timeoutHandle = noTimeout;
                cancelTimeout(_timeoutHandle);
              }
              renderRoot(root, isYieldy);
              _finishedWork = root.finishedWork;
              if (_finishedWork !== null) {
                if (!shouldYieldToRenderer()) {
                  completeRoot(root, _finishedWork, expirationTime);
                } else {
                  root.finishedWork = _finishedWork;
                }
              }
            }
          }
          isRendering = false;
        }
        function completeRoot(root, finishedWork, expirationTime) {
          var firstBatch = root.firstBatch;
          if (firstBatch !== null && firstBatch._expirationTime >= expirationTime) {
            if (completedBatches === null) {
              completedBatches = [firstBatch];
            } else {
              completedBatches.push(firstBatch);
            }
            if (firstBatch._defer) {
              root.finishedWork = finishedWork;
              root.expirationTime = NoWork;
              return;
            }
          }
          root.finishedWork = null;
          if (root === lastCommittedRootDuringThisBatch) {
            nestedUpdateCount++;
          } else {
            lastCommittedRootDuringThisBatch = root;
            nestedUpdateCount = 0;
          }
          commitRoot(root, finishedWork);
        }
        function onUncaughtError(error) {
          !(nextFlushedRoot !== null) ? invariant(false, 'Should be working on a root. This error is likely caused by a bug in React. Please file an issue.') : void 0;
          nextFlushedRoot.expirationTime = NoWork;
          if (!hasUnhandledError) {
            hasUnhandledError = true;
            unhandledError = error;
          }
        }
        function batchedUpdates$1(fn, a) {
          var previousIsBatchingUpdates = isBatchingUpdates;
          isBatchingUpdates = true;
          try {
            return fn(a);
          } finally {
            isBatchingUpdates = previousIsBatchingUpdates;
            if (!isBatchingUpdates && !isRendering) {
              performSyncWork();
            }
          }
        }
        function unbatchedUpdates(fn, a) {
          if (isBatchingUpdates && !isUnbatchingUpdates) {
            isUnbatchingUpdates = true;
            try {
              return fn(a);
            } finally {
              isUnbatchingUpdates = false;
            }
          }
          return fn(a);
        }
        function flushSync(fn, a) {
          !!isRendering ? invariant(false, 'flushSync was called from inside a lifecycle method. It cannot be called when React is already rendering.') : void 0;
          var previousIsBatchingUpdates = isBatchingUpdates;
          isBatchingUpdates = true;
          try {
            return syncUpdates(fn, a);
          } finally {
            isBatchingUpdates = previousIsBatchingUpdates;
            performSyncWork();
          }
        }
        function interactiveUpdates$1(fn, a, b) {
          if (isBatchingInteractiveUpdates) {
            return fn(a, b);
          }
          if (!isBatchingUpdates && !isRendering && lowestPriorityPendingInteractiveExpirationTime !== NoWork) {
            performWork(lowestPriorityPendingInteractiveExpirationTime, false);
            lowestPriorityPendingInteractiveExpirationTime = NoWork;
          }
          var previousIsBatchingInteractiveUpdates = isBatchingInteractiveUpdates;
          var previousIsBatchingUpdates = isBatchingUpdates;
          isBatchingInteractiveUpdates = true;
          isBatchingUpdates = true;
          try {
            return fn(a, b);
          } finally {
            isBatchingInteractiveUpdates = previousIsBatchingInteractiveUpdates;
            isBatchingUpdates = previousIsBatchingUpdates;
            if (!isBatchingUpdates && !isRendering) {
              performSyncWork();
            }
          }
        }
        function flushInteractiveUpdates$1() {
          if (!isRendering && lowestPriorityPendingInteractiveExpirationTime !== NoWork) {
            performWork(lowestPriorityPendingInteractiveExpirationTime, false);
            lowestPriorityPendingInteractiveExpirationTime = NoWork;
          }
        }
        function flushControlled(fn) {
          var previousIsBatchingUpdates = isBatchingUpdates;
          isBatchingUpdates = true;
          try {
            syncUpdates(fn);
          } finally {
            isBatchingUpdates = previousIsBatchingUpdates;
            if (!isBatchingUpdates && !isRendering) {
              performSyncWork();
            }
          }
        }
        var didWarnAboutNestedUpdates = void 0;
        var didWarnAboutFindNodeInStrictMode = void 0;
        {
          didWarnAboutNestedUpdates = false;
          didWarnAboutFindNodeInStrictMode = {};
        }
        function getContextForSubtree(parentComponent) {
          if (!parentComponent) {
            return emptyContextObject;
          }
          var fiber = get(parentComponent);
          var parentContext = findCurrentUnmaskedContext(fiber);
          if (fiber.tag === ClassComponent) {
            var Component = fiber.type;
            if (isContextProvider(Component)) {
              return processChildContext(fiber, Component, parentContext);
            }
          }
          return parentContext;
        }
        function scheduleRootUpdate(current$$1, element, expirationTime, callback) {
          {
            if (phase === 'render' && current !== null && !didWarnAboutNestedUpdates) {
              didWarnAboutNestedUpdates = true;
              warningWithoutStack$1(false, 'Render methods should be a pure function of props and state; ' + 'triggering nested component updates from render is not allowed. ' + 'If necessary, trigger nested updates in componentDidUpdate.\n\n' + 'Check the render method of %s.', getComponentName(current.type) || 'Unknown');
            }
          }
          var update = createUpdate(expirationTime);
          update.payload = { element: element };
          callback = callback === undefined ? null : callback;
          if (callback !== null) {
            !(typeof callback === 'function') ? warningWithoutStack$1(false, 'render(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callback) : void 0;
            update.callback = callback;
          }
          flushPassiveEffects();
          enqueueUpdate(current$$1, update);
          scheduleWork(current$$1, expirationTime);
          return expirationTime;
        }
        function updateContainerAtExpirationTime(element, container, parentComponent, expirationTime, callback) {
          var current$$1 = container.current;
          {
            if (ReactFiberInstrumentation_1.debugTool) {
              if (current$$1.alternate === null) {
                ReactFiberInstrumentation_1.debugTool.onMountContainer(container);
              } else if (element === null) {
                ReactFiberInstrumentation_1.debugTool.onUnmountContainer(container);
              } else {
                ReactFiberInstrumentation_1.debugTool.onUpdateContainer(container);
              }
            }
          }
          var context = getContextForSubtree(parentComponent);
          if (container.context === null) {
            container.context = context;
          } else {
            container.pendingContext = context;
          }
          return scheduleRootUpdate(current$$1, element, expirationTime, callback);
        }
        function findHostInstance(component) {
          var fiber = get(component);
          if (fiber === undefined) {
            if (typeof component.render === 'function') {
              invariant(false, 'Unable to find node on an unmounted component.');
            } else {
              invariant(false, 'Argument appears to not be a ReactComponent. Keys: %s', Object.keys(component));
            }
          }
          var hostFiber = findCurrentHostFiber(fiber);
          if (hostFiber === null) {
            return null;
          }
          return hostFiber.stateNode;
        }
        function findHostInstanceWithWarning(component, methodName) {
          {
            var fiber = get(component);
            if (fiber === undefined) {
              if (typeof component.render === 'function') {
                invariant(false, 'Unable to find node on an unmounted component.');
              } else {
                invariant(false, 'Argument appears to not be a ReactComponent. Keys: %s', Object.keys(component));
              }
            }
            var hostFiber = findCurrentHostFiber(fiber);
            if (hostFiber === null) {
              return null;
            }
            if (hostFiber.mode & StrictMode) {
              var componentName = getComponentName(fiber.type) || 'Component';
              if (!didWarnAboutFindNodeInStrictMode[componentName]) {
                didWarnAboutFindNodeInStrictMode[componentName] = true;
                if (fiber.mode & StrictMode) {
                  warningWithoutStack$1(false, '%s is deprecated in StrictMode. ' + '%s was passed an instance of %s which is inside StrictMode. ' + 'Instead, add a ref directly to the element you want to reference.' + '\n%s' + '\n\nLearn more about using refs safely here:' + '\nhttps://fb.me/react-strict-mode-find-node', methodName, methodName, componentName, getStackByFiberInDevAndProd(hostFiber));
                } else {
                  warningWithoutStack$1(false, '%s is deprecated in StrictMode. ' + '%s was passed an instance of %s which renders StrictMode children. ' + 'Instead, add a ref directly to the element you want to reference.' + '\n%s' + '\n\nLearn more about using refs safely here:' + '\nhttps://fb.me/react-strict-mode-find-node', methodName, methodName, componentName, getStackByFiberInDevAndProd(hostFiber));
                }
              }
            }
            return hostFiber.stateNode;
          }
          return findHostInstance(component);
        }
        function createContainer(containerInfo, isConcurrent, hydrate) {
          return createFiberRoot(containerInfo, isConcurrent, hydrate);
        }
        function updateContainer(element, container, parentComponent, callback) {
          var current$$1 = container.current;
          var currentTime = requestCurrentTime();
          var expirationTime = computeExpirationForFiber(currentTime, current$$1);
          return updateContainerAtExpirationTime(element, container, parentComponent, expirationTime, callback);
        }
        function getPublicRootInstance(container) {
          var containerFiber = container.current;
          if (!containerFiber.child) {
            return null;
          }
          switch (containerFiber.child.tag) {
            case HostComponent:
              return getPublicInstance(containerFiber.child.stateNode);
            default:
              return containerFiber.child.stateNode;
          }
        }
        function findHostInstanceWithNoPortals(fiber) {
          var hostFiber = findCurrentHostFiberWithNoPortals(fiber);
          if (hostFiber === null) {
            return null;
          }
          return hostFiber.stateNode;
        }
        var overrideProps = null;
        {
          var copyWithSetImpl = function (obj, path, idx, value) {
            if (idx >= path.length) {
              return value;
            }
            var key = path[idx];
            var updated = Array.isArray(obj) ? obj.slice() : _assign({}, obj);
            updated[key] = copyWithSetImpl(obj[key], path, idx + 1, value);
            return updated;
          };
          var copyWithSet = function (obj, path, value) {
            return copyWithSetImpl(obj, path, 0, value);
          };
          overrideProps = function (fiber, path, value) {
            flushPassiveEffects();
            fiber.pendingProps = copyWithSet(fiber.memoizedProps, path, value);
            if (fiber.alternate) {
              fiber.alternate.pendingProps = fiber.pendingProps;
            }
            scheduleWork(fiber, Sync);
          };
        }
        function injectIntoDevTools(devToolsConfig) {
          var findFiberByHostInstance = devToolsConfig.findFiberByHostInstance;
          return injectInternals(_assign({}, devToolsConfig, {
            overrideProps: overrideProps,
            findHostInstanceByFiber: function (fiber) {
              var hostFiber = findCurrentHostFiber(fiber);
              if (hostFiber === null) {
                return null;
              }
              return hostFiber.stateNode;
            },
            findFiberByHostInstance: function (instance) {
              if (!findFiberByHostInstance) {
                return null;
              }
              return findFiberByHostInstance(instance);
            }
          }));
        }
        function createPortal$1(children, containerInfo, implementation) {
          var key = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;
          return {
            $$typeof: REACT_PORTAL_TYPE,
            key: key == null ? null : '' + key,
            children: children,
            containerInfo: containerInfo,
            implementation: implementation
          };
        }
        var ReactVersion = '16.7.0';
        var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;
        var topLevelUpdateWarnings = void 0;
        var warnOnInvalidCallback = void 0;
        var didWarnAboutUnstableCreatePortal = false;
        {
          if (typeof Map !== 'function' || Map.prototype == null || typeof Map.prototype.forEach !== 'function' || typeof Set !== 'function' || Set.prototype == null || typeof Set.prototype.clear !== 'function' || typeof Set.prototype.forEach !== 'function') {
            warningWithoutStack$1(false, 'React depends on Map and Set built-in types. Make sure that you load a ' + 'polyfill in older browsers. https://fb.me/react-polyfills');
          }
          topLevelUpdateWarnings = function (container) {
            if (container._reactRootContainer && container.nodeType !== COMMENT_NODE) {
              var hostInstance = findHostInstanceWithNoPortals(container._reactRootContainer._internalRoot.current);
              if (hostInstance) {
                !(hostInstance.parentNode === container) ? warningWithoutStack$1(false, 'render(...): It looks like the React-rendered content of this ' + 'container was removed without using React. This is not ' + 'supported and will cause errors. Instead, call ' + 'ReactDOM.unmountComponentAtNode to empty a container.') : void 0;
              }
            }
            var isRootRenderedBySomeReact = !!container._reactRootContainer;
            var rootEl = getReactRootElementInContainer(container);
            var hasNonRootReactChild = !!(rootEl && getInstanceFromNode$1(rootEl));
            !(!hasNonRootReactChild || isRootRenderedBySomeReact) ? warningWithoutStack$1(false, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : void 0;
            !(container.nodeType !== ELEMENT_NODE || !container.tagName || container.tagName.toUpperCase() !== 'BODY') ? warningWithoutStack$1(false, 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : void 0;
          };
          warnOnInvalidCallback = function (callback, callerName) {
            !(callback === null || typeof callback === 'function') ? warningWithoutStack$1(false, '%s(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callerName, callback) : void 0;
          };
        }
        setRestoreImplementation(restoreControlledState$1);
        function ReactBatch(root) {
          var expirationTime = computeUniqueAsyncExpiration();
          this._expirationTime = expirationTime;
          this._root = root;
          this._next = null;
          this._callbacks = null;
          this._didComplete = false;
          this._hasChildren = false;
          this._children = null;
          this._defer = true;
        }
        ReactBatch.prototype.render = function (children) {
          !this._defer ? invariant(false, 'batch.render: Cannot render a batch that already committed.') : void 0;
          this._hasChildren = true;
          this._children = children;
          var internalRoot = this._root._internalRoot;
          var expirationTime = this._expirationTime;
          var work = new ReactWork();
          updateContainerAtExpirationTime(children, internalRoot, null, expirationTime, work._onCommit);
          return work;
        };
        ReactBatch.prototype.then = function (onComplete) {
          if (this._didComplete) {
            onComplete();
            return;
          }
          var callbacks = this._callbacks;
          if (callbacks === null) {
            callbacks = this._callbacks = [];
          }
          callbacks.push(onComplete);
        };
        ReactBatch.prototype.commit = function () {
          var internalRoot = this._root._internalRoot;
          var firstBatch = internalRoot.firstBatch;
          !(this._defer && firstBatch !== null) ? invariant(false, 'batch.commit: Cannot commit a batch multiple times.') : void 0;
          if (!this._hasChildren) {
            this._next = null;
            this._defer = false;
            return;
          }
          var expirationTime = this._expirationTime;
          if (firstBatch !== this) {
            if (this._hasChildren) {
              expirationTime = this._expirationTime = firstBatch._expirationTime;
              this.render(this._children);
            }
            var previous = null;
            var batch = firstBatch;
            while (batch !== this) {
              previous = batch;
              batch = batch._next;
            }
            !(previous !== null) ? invariant(false, 'batch.commit: Cannot commit a batch multiple times.') : void 0;
            previous._next = batch._next;
            this._next = firstBatch;
            firstBatch = internalRoot.firstBatch = this;
          }
          this._defer = false;
          flushRoot(internalRoot, expirationTime);
          var next = this._next;
          this._next = null;
          firstBatch = internalRoot.firstBatch = next;
          if (firstBatch !== null && firstBatch._hasChildren) {
            firstBatch.render(firstBatch._children);
          }
        };
        ReactBatch.prototype._onComplete = function () {
          if (this._didComplete) {
            return;
          }
          this._didComplete = true;
          var callbacks = this._callbacks;
          if (callbacks === null) {
            return;
          }
          for (var i = 0; i < callbacks.length; i++) {
            var _callback = callbacks[i];
            _callback();
          }
        };
        function ReactWork() {
          this._callbacks = null;
          this._didCommit = false;
          this._onCommit = this._onCommit.bind(this);
        }
        ReactWork.prototype.then = function (onCommit) {
          if (this._didCommit) {
            onCommit();
            return;
          }
          var callbacks = this._callbacks;
          if (callbacks === null) {
            callbacks = this._callbacks = [];
          }
          callbacks.push(onCommit);
        };
        ReactWork.prototype._onCommit = function () {
          if (this._didCommit) {
            return;
          }
          this._didCommit = true;
          var callbacks = this._callbacks;
          if (callbacks === null) {
            return;
          }
          for (var i = 0; i < callbacks.length; i++) {
            var _callback2 = callbacks[i];
            !(typeof _callback2 === 'function') ? invariant(false, 'Invalid argument passed as callback. Expected a function. Instead received: %s', _callback2) : void 0;
            _callback2();
          }
        };
        function ReactRoot(container, isConcurrent, hydrate) {
          var root = createContainer(container, isConcurrent, hydrate);
          this._internalRoot = root;
        }
        ReactRoot.prototype.render = function (children, callback) {
          var root = this._internalRoot;
          var work = new ReactWork();
          callback = callback === undefined ? null : callback;
          {
            warnOnInvalidCallback(callback, 'render');
          }
          if (callback !== null) {
            work.then(callback);
          }
          updateContainer(children, root, null, work._onCommit);
          return work;
        };
        ReactRoot.prototype.unmount = function (callback) {
          var root = this._internalRoot;
          var work = new ReactWork();
          callback = callback === undefined ? null : callback;
          {
            warnOnInvalidCallback(callback, 'render');
          }
          if (callback !== null) {
            work.then(callback);
          }
          updateContainer(null, root, null, work._onCommit);
          return work;
        };
        ReactRoot.prototype.legacy_renderSubtreeIntoContainer = function (parentComponent, children, callback) {
          var root = this._internalRoot;
          var work = new ReactWork();
          callback = callback === undefined ? null : callback;
          {
            warnOnInvalidCallback(callback, 'render');
          }
          if (callback !== null) {
            work.then(callback);
          }
          updateContainer(children, root, parentComponent, work._onCommit);
          return work;
        };
        ReactRoot.prototype.createBatch = function () {
          var batch = new ReactBatch(this);
          var expirationTime = batch._expirationTime;
          var internalRoot = this._internalRoot;
          var firstBatch = internalRoot.firstBatch;
          if (firstBatch === null) {
            internalRoot.firstBatch = batch;
            batch._next = null;
          } else {
            var insertAfter = null;
            var insertBefore = firstBatch;
            while (insertBefore !== null && insertBefore._expirationTime >= expirationTime) {
              insertAfter = insertBefore;
              insertBefore = insertBefore._next;
            }
            batch._next = insertBefore;
            if (insertAfter !== null) {
              insertAfter._next = batch;
            }
          }
          return batch;
        };
        function isValidContainer(node) {
          return !!(node && (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE || node.nodeType === COMMENT_NODE && node.nodeValue === ' react-mount-point-unstable '));
        }
        function getReactRootElementInContainer(container) {
          if (!container) {
            return null;
          }
          if (container.nodeType === DOCUMENT_NODE) {
            return container.documentElement;
          } else {
            return container.firstChild;
          }
        }
        function shouldHydrateDueToLegacyHeuristic(container) {
          var rootElement = getReactRootElementInContainer(container);
          return !!(rootElement && rootElement.nodeType === ELEMENT_NODE && rootElement.hasAttribute(ROOT_ATTRIBUTE_NAME));
        }
        setBatchingImplementation(batchedUpdates$1, interactiveUpdates$1, flushInteractiveUpdates$1);
        var warnedAboutHydrateAPI = false;
        function legacyCreateRootFromDOMContainer(container, forceHydrate) {
          var shouldHydrate = forceHydrate || shouldHydrateDueToLegacyHeuristic(container);
          if (!shouldHydrate) {
            var warned = false;
            var rootSibling = void 0;
            while (rootSibling = container.lastChild) {
              {
                if (!warned && rootSibling.nodeType === ELEMENT_NODE && rootSibling.hasAttribute(ROOT_ATTRIBUTE_NAME)) {
                  warned = true;
                  warningWithoutStack$1(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.');
                }
              }
              container.removeChild(rootSibling);
            }
          }
          {
            if (shouldHydrate && !forceHydrate && !warnedAboutHydrateAPI) {
              warnedAboutHydrateAPI = true;
              lowPriorityWarning$1(false, 'render(): Calling ReactDOM.render() to hydrate server-rendered markup ' + 'will stop working in React v17. Replace the ReactDOM.render() call ' + 'with ReactDOM.hydrate() if you want React to attach to the server HTML.');
            }
          }
          var isConcurrent = false;
          return new ReactRoot(container, isConcurrent, shouldHydrate);
        }
        function legacyRenderSubtreeIntoContainer(parentComponent, children, container, forceHydrate, callback) {
          !isValidContainer(container) ? invariant(false, 'Target container is not a DOM element.') : void 0;
          {
            topLevelUpdateWarnings(container);
          }
          var root = container._reactRootContainer;
          if (!root) {
            root = container._reactRootContainer = legacyCreateRootFromDOMContainer(container, forceHydrate);
            if (typeof callback === 'function') {
              var originalCallback = callback;
              callback = function () {
                var instance = getPublicRootInstance(root._internalRoot);
                originalCallback.call(instance);
              };
            }
            unbatchedUpdates(function () {
              if (parentComponent != null) {
                root.legacy_renderSubtreeIntoContainer(parentComponent, children, callback);
              } else {
                root.render(children, callback);
              }
            });
          } else {
            if (typeof callback === 'function') {
              var _originalCallback = callback;
              callback = function () {
                var instance = getPublicRootInstance(root._internalRoot);
                _originalCallback.call(instance);
              };
            }
            if (parentComponent != null) {
              root.legacy_renderSubtreeIntoContainer(parentComponent, children, callback);
            } else {
              root.render(children, callback);
            }
          }
          return getPublicRootInstance(root._internalRoot);
        }
        function createPortal$$1(children, container) {
          var key = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
          !isValidContainer(container) ? invariant(false, 'Target container is not a DOM element.') : void 0;
          return createPortal$1(children, container, null, key);
        }
        var ReactDOM = {
          createPortal: createPortal$$1,
          findDOMNode: function (componentOrElement) {
            {
              var owner = ReactCurrentOwner.current;
              if (owner !== null && owner.stateNode !== null) {
                var warnedAboutRefsInRender = owner.stateNode._warnedAboutRefsInRender;
                !warnedAboutRefsInRender ? warningWithoutStack$1(false, '%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', getComponentName(owner.type) || 'A component') : void 0;
                owner.stateNode._warnedAboutRefsInRender = true;
              }
            }
            if (componentOrElement == null) {
              return null;
            }
            if (componentOrElement.nodeType === ELEMENT_NODE) {
              return componentOrElement;
            }
            {
              return findHostInstanceWithWarning(componentOrElement, 'findDOMNode');
            }
            return findHostInstance(componentOrElement);
          },
          hydrate: function (element, container, callback) {
            return legacyRenderSubtreeIntoContainer(null, element, container, true, callback);
          },
          render: function (element, container, callback) {
            return legacyRenderSubtreeIntoContainer(null, element, container, false, callback);
          },
          unstable_renderSubtreeIntoContainer: function (parentComponent, element, containerNode, callback) {
            !(parentComponent != null && has(parentComponent)) ? invariant(false, 'parentComponent must be a valid React Component') : void 0;
            return legacyRenderSubtreeIntoContainer(parentComponent, element, containerNode, false, callback);
          },
          unmountComponentAtNode: function (container) {
            !isValidContainer(container) ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : void 0;
            if (container._reactRootContainer) {
              {
                var rootEl = getReactRootElementInContainer(container);
                var renderedByDifferentReact = rootEl && !getInstanceFromNode$1(rootEl);
                !!renderedByDifferentReact ? warningWithoutStack$1(false, "unmountComponentAtNode(): The node you're attempting to unmount " + 'was rendered by another copy of React.') : void 0;
              }
              unbatchedUpdates(function () {
                legacyRenderSubtreeIntoContainer(null, null, container, false, function () {
                  container._reactRootContainer = null;
                });
              });
              return true;
            } else {
              {
                var _rootEl = getReactRootElementInContainer(container);
                var hasNonRootReactChild = !!(_rootEl && getInstanceFromNode$1(_rootEl));
                var isContainerReactRoot = container.nodeType === ELEMENT_NODE && isValidContainer(container.parentNode) && !!container.parentNode._reactRootContainer;
                !!hasNonRootReactChild ? warningWithoutStack$1(false, "unmountComponentAtNode(): The node you're attempting to unmount " + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : void 0;
              }
              return false;
            }
          },
          unstable_createPortal: function () {
            if (!didWarnAboutUnstableCreatePortal) {
              didWarnAboutUnstableCreatePortal = true;
              lowPriorityWarning$1(false, 'The ReactDOM.unstable_createPortal() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactDOM.createPortal() instead. It has the exact same API, ' + 'but without the "unstable_" prefix.');
            }
            return createPortal$$1.apply(undefined, arguments);
          },
          unstable_batchedUpdates: batchedUpdates$1,
          unstable_interactiveUpdates: interactiveUpdates$1,
          flushSync: flushSync,
          unstable_createRoot: createRoot,
          unstable_flushControlled: flushControlled,
          __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: { Events: [getInstanceFromNode$1, getNodeFromInstance$1, getFiberCurrentPropsFromNode$1, injection.injectEventPluginsByName, eventNameDispatchConfigs, accumulateTwoPhaseDispatches, accumulateDirectDispatches, enqueueStateRestore, restoreStateIfNeeded, dispatchEvent, runEventsInBatch] }
        };
        function createRoot(container, options) {
          var functionName = enableStableConcurrentModeAPIs ? 'createRoot' : 'unstable_createRoot';
          !isValidContainer(container) ? invariant(false, '%s(...): Target container is not a DOM element.', functionName) : void 0;
          var hydrate = options != null && options.hydrate === true;
          return new ReactRoot(container, true, hydrate);
        }
        if (enableStableConcurrentModeAPIs) {
          ReactDOM.createRoot = createRoot;
          ReactDOM.unstable_createRoot = undefined;
        }
        var foundDevTools = injectIntoDevTools({
          findFiberByHostInstance: getClosestInstanceFromNode,
          bundleType: 1,
          version: ReactVersion,
          rendererPackageName: 'react-dom'
        });
        {
          if (!foundDevTools && canUseDOM && window.top === window.self) {
            if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
              var protocol = window.location.protocol;
              if (/^(https?|file):$/.test(protocol)) {
                console.info('%cDownload the React DevTools ' + 'for a better development experience: ' + 'https://fb.me/react-devtools' + (protocol === 'file:' ? '\nYou might need to use a local HTTP server (instead of file://): ' + 'https://fb.me/react-devtools-faq' : ''), 'font-weight:bold');
              }
            }
          }
        }
        var ReactDOM$2 = Object.freeze({ default: ReactDOM });
        var ReactDOM$3 = ReactDOM$2 && ReactDOM || ReactDOM$2;
        var reactDom = ReactDOM$3.default || ReactDOM$3;
        module.exports = reactDom;
      })();
    }
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react-dom@16.7.0/index.js', ['npm:react-dom@16.7.0/cjs/react-dom.production.min.js', 'npm:react-dom@16.7.0/cjs/react-dom.development.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    function checkDCE() {
      if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function') {
        return;
      }
      if ('production' !== 'production') {
        throw new Error('^_^');
      }
      try {
        __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);
      } catch (err) {
        console.error(err);
      }
    }
    if ('production' === 'production') {
      checkDCE();
      module.exports = $__require('npm:react-dom@16.7.0/cjs/react-dom.production.min.js');
    } else {
      module.exports = $__require('npm:react-dom@16.7.0/cjs/react-dom.development.js');
    }
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic("npm:react-dom@16.7.0.js", ["npm:react-dom@16.7.0/index.js"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("npm:react-dom@16.7.0/index.js");
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/components/resize-sensor/resizeSensor.js", ["npm:tslib@1.9.3.js", "npm:react@16.7.0.js", "npm:resize-observer-polyfill@1.5.1.js", "npm:react-dom@16.7.0.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/utils.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  var React = tslib_1.__importStar($__require("npm:react@16.7.0.js"));
  var resize_observer_polyfill_1 = tslib_1.__importDefault($__require("npm:resize-observer-polyfill@1.5.1.js"));
  var react_dom_1 = $__require("npm:react-dom@16.7.0.js");
  var props_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js");
  var utils_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/utils.js");
  var ResizeSensor = function (_super) {
    tslib_1.__extends(ResizeSensor, _super);
    function ResizeSensor() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.element = null;
      _this.observer = new resize_observer_polyfill_1.default(function (entries) {
        return utils_1.safeInvoke(_this.props.onResize, entries);
      });
      return _this;
    }
    ResizeSensor.prototype.render = function () {
      return React.Children.only(this.props.children);
    };
    ResizeSensor.prototype.componentDidMount = function () {
      this.observeElement();
    };
    ResizeSensor.prototype.componentDidUpdate = function (prevProps) {
      this.observeElement(this.props.observeParents !== prevProps.observeParents);
    };
    ResizeSensor.prototype.componentWillUnmount = function () {
      this.observer.disconnect();
    };
    ResizeSensor.prototype.observeElement = function (force) {
      if (force === void 0) {
        force = false;
      }
      var element = this.getElement();
      if (!(element instanceof Element)) {
        this.observer.disconnect();
        return;
      }
      if (element === this.element && !force) {
        return;
      } else {
        this.observer.disconnect();
        this.element = element;
      }
      this.observer.observe(element);
      if (this.props.observeParents) {
        var parent_1 = element.parentElement;
        while (parent_1 != null) {
          this.observer.observe(parent_1);
          parent_1 = parent_1.parentElement;
        }
      }
    };
    ResizeSensor.prototype.getElement = function () {
      try {
        return react_dom_1.findDOMNode(this);
      } catch (_a) {
        return null;
      }
    };
    ResizeSensor.displayName = props_1.DISPLAYNAME_PREFIX + ".ResizeSensor";
    return ResizeSensor;
  }(React.PureComponent);
  exports.ResizeSensor = ResizeSensor;
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/components/popover/popoverArrow.js", ["npm:tslib@1.9.3.js", "npm:react@16.7.0.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/popover/popperUtils.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  var React = tslib_1.__importStar($__require("npm:react@16.7.0.js"));
  var Classes = tslib_1.__importStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js"));
  var props_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js");
  var popperUtils_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/popover/popperUtils.js");
  var SVG_SHADOW_PATH = "M8.11 6.302c1.015-.936 1.887-2.922 1.887-4.297v26c0-1.378" + "-.868-3.357-1.888-4.297L.925 17.09c-1.237-1.14-1.233-3.034 0-4.17L8.11 6.302z";
  var SVG_ARROW_PATH = "M8.787 7.036c1.22-1.125 2.21-3.376 2.21-5.03V0v30-2.005" + "c0-1.654-.983-3.9-2.21-5.03l-7.183-6.616c-.81-.746-.802-1.96 0-2.7l7.183-6.614z";
  function getArrowAngle(placement) {
    if (placement == null) {
      return 0;
    }
    switch (popperUtils_1.getPosition(placement)) {
      case "top":
        return -90;
      case "left":
        return 180;
      case "bottom":
        return 90;
      default:
        return 0;
    }
  }
  exports.PopoverArrow = function (_a) {
    var _b = _a.arrowProps,
        ref = _b.ref,
        style = _b.style,
        placement = _a.placement;
    return React.createElement("div", {
      className: Classes.POPOVER_ARROW,
      ref: ref,
      style: isNaN(+style.left) ? {} : style
    }, React.createElement("svg", {
      viewBox: "0 0 30 30",
      style: { transform: "rotate(" + getArrowAngle(placement) + "deg)" }
    }, React.createElement("path", {
      className: Classes.POPOVER_ARROW + "-border",
      d: SVG_SHADOW_PATH
    }), React.createElement("path", {
      className: Classes.POPOVER_ARROW + "-fill",
      d: SVG_ARROW_PATH
    })));
  };
  exports.PopoverArrow.displayName = props_1.DISPLAYNAME_PREFIX + ".PopoverArrow";
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/components/popover/popoverMigrationUtils.js", ["npm:@blueprintjs/core@3.11.0/lib/cjs/common/position.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var position_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/position.js");
  function positionToPlacement(position) {
    switch (position) {
      case position_1.Position.TOP_LEFT:
        return "top-start";
      case position_1.Position.TOP:
        return "top";
      case position_1.Position.TOP_RIGHT:
        return "top-end";
      case position_1.Position.RIGHT_TOP:
        return "right-start";
      case position_1.Position.RIGHT:
        return "right";
      case position_1.Position.RIGHT_BOTTOM:
        return "right-end";
      case position_1.Position.BOTTOM_RIGHT:
        return "bottom-end";
      case position_1.Position.BOTTOM:
        return "bottom";
      case position_1.Position.BOTTOM_LEFT:
        return "bottom-start";
      case position_1.Position.LEFT_BOTTOM:
        return "left-end";
      case position_1.Position.LEFT:
        return "left";
      case position_1.Position.LEFT_TOP:
        return "left-start";
      case "auto":
      case "auto-start":
      case "auto-end":
        return position;
      default:
        return assertNever(position);
    }
  }
  exports.positionToPlacement = positionToPlacement;
  function assertNever(x) {
    throw new Error("Unexpected position: " + x);
  }
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/components/popover/popperUtils.js", [], true, function ($__require, exports, module) {
    /* */
    "use strict";
    /*
     * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
     *
     * Licensed under the terms of the LICENSE file distributed with this project.
     */

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    // Popper placement utils
    // ======================
    /** Converts a full placement to one of the four positions by stripping text after the `-`. */
    function getPosition(placement) {
        return placement.split("-")[0];
    }
    exports.getPosition = getPosition;
    /** Returns true if position is left or right. */
    function isVerticalPosition(side) {
        return ["left", "right"].indexOf(side) !== -1;
    }
    exports.isVerticalPosition = isVerticalPosition;
    /** Returns the opposite position. */
    function getOppositePosition(side) {
        switch (side) {
            case "top":
                return "bottom";
            case "left":
                return "right";
            case "bottom":
                return "top";
            default:
                return "left";
        }
    }
    exports.getOppositePosition = getOppositePosition;
    /** Returns the CSS alignment keyword corresponding to given placement. */
    function getAlignment(placement) {
        var align = placement.split("-")[1];
        switch (align) {
            case "start":
                return "left";
            case "end":
                return "right";
            default:
                return "center";
        }
    }
    exports.getAlignment = getAlignment;
    // Popper modifiers
    // ================
    /** Modifier helper function to compute popper transform-origin based on arrow position */
    function getTransformOrigin(data) {
        var position = getPosition(data.placement);
        if (data.arrowElement == null) {
            return isVerticalPosition(position) ? getOppositePosition(position) + " " + getAlignment(position) : getAlignment(position) + " " + getOppositePosition(position);
        } else {
            var arrowSizeShift = data.arrowElement.clientHeight / 2;
            var arrow = data.offsets.arrow;
            // can use keyword for dimension without the arrow, to ease computation burden.
            // move origin by half arrow's height to keep it centered.
            return isVerticalPosition(position) ? getOppositePosition(position) + " " + (arrow.top + arrowSizeShift) + "px" : arrow.left + arrowSizeShift + "px " + getOppositePosition(position);
        }
    }
    exports.getTransformOrigin = getTransformOrigin;
    // additional space between arrow and edge of target
    var ARROW_SPACING = 4;
    /** Popper modifier that offsets popper and arrow so arrow points out of the correct side */
    exports.arrowOffsetModifier = function (data) {
        if (data.arrowElement == null) {
            return data;
        }
        // our arrows have equal width and height
        var arrowSize = data.arrowElement.clientWidth;
        // this logic borrowed from original Popper arrow modifier itself
        var position = getPosition(data.placement);
        var isVertical = isVerticalPosition(position);
        var len = isVertical ? "width" : "height";
        var offsetSide = isVertical ? "left" : "top";
        var arrowOffsetSize = Math.round(arrowSize / 2 / Math.sqrt(2));
        // offset popover by arrow size, offset arrow in the opposite direction
        if (position === "top" || position === "left") {
            // the "up & back" directions require negative popper offsets
            data.offsets.popper[offsetSide] -= arrowOffsetSize + ARROW_SPACING;
            // can only use left/top on arrow so gotta get clever with 100% + X
            data.offsets.arrow[offsetSide] = data.offsets.popper[len] - arrowSize + arrowOffsetSize;
        } else {
            data.offsets.popper[offsetSide] += arrowOffsetSize + ARROW_SPACING;
            data.offsets.arrow[offsetSide] = -arrowOffsetSize;
        }
        return data;
    };
    
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/components/popover/popover.js", ["npm:tslib@1.9.3.js", "npm:classnames@2.2.6.js", "npm:react@16.7.0.js", "npm:react-popper@1.3.2.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/abstractPureComponent.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/errors.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/utils.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/overlay/overlay.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/resize-sensor/resizeSensor.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/tooltip/tooltip.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/popover/popoverArrow.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/popover/popoverMigrationUtils.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/popover/popperUtils.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  var classnames_1 = tslib_1.__importDefault($__require("npm:classnames@2.2.6.js"));
  var React = tslib_1.__importStar($__require("npm:react@16.7.0.js"));
  var react_popper_1 = $__require("npm:react-popper@1.3.2.js");
  var abstractPureComponent_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/abstractPureComponent.js");
  var Classes = tslib_1.__importStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js"));
  var Errors = tslib_1.__importStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/errors.js"));
  var props_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js");
  var Utils = tslib_1.__importStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/utils.js"));
  var overlay_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/overlay/overlay.js");
  var resizeSensor_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/resize-sensor/resizeSensor.js");
  var tooltip_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/tooltip/tooltip.js");
  var popoverArrow_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/popover/popoverArrow.js");
  var popoverMigrationUtils_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/popover/popoverMigrationUtils.js");
  var popperUtils_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/popover/popperUtils.js");
  exports.PopoverInteractionKind = {
    CLICK: "click",
    CLICK_TARGET_ONLY: "click-target",
    HOVER: "hover",
    HOVER_TARGET_ONLY: "hover-target"
  };
  var Popover = function (_super) {
    tslib_1.__extends(Popover, _super);
    function Popover() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.state = {
        hasDarkParent: false,
        isOpen: _this.getIsOpen(_this.props),
        transformOrigin: ""
      };
      _this.isMouseInTargetOrPopover = false;
      _this.lostFocusOnSamePage = true;
      _this.refHandlers = {
        popover: function (ref) {
          _this.popoverElement = ref;
          Utils.safeInvoke(_this.props.popoverRef, ref);
        },
        target: function (ref) {
          return _this.targetElement = ref;
        }
      };
      _this.reposition = function () {
        return Utils.safeInvoke(_this.popperScheduleUpdate);
      };
      _this.renderPopover = function (popperProps) {
        var _a = _this.props,
            usePortal = _a.usePortal,
            interactionKind = _a.interactionKind;
        var transformOrigin = _this.state.transformOrigin;
        _this.popperScheduleUpdate = popperProps.scheduleUpdate;
        var popoverHandlers = { onClick: _this.handlePopoverClick };
        if (interactionKind === exports.PopoverInteractionKind.HOVER || !usePortal && interactionKind === exports.PopoverInteractionKind.HOVER_TARGET_ONLY) {
          popoverHandlers.onMouseEnter = _this.handleMouseEnter;
          popoverHandlers.onMouseLeave = _this.handleMouseLeave;
        }
        var popoverClasses = classnames_1.default(Classes.POPOVER, (_b = {}, _b[Classes.DARK] = _this.props.inheritDarkTheme && _this.state.hasDarkParent, _b[Classes.MINIMAL] = _this.props.minimal, _b), _this.props.popoverClassName);
        return React.createElement("div", {
          className: Classes.TRANSITION_CONTAINER,
          ref: popperProps.ref,
          style: popperProps.style
        }, React.createElement(resizeSensor_1.ResizeSensor, { onResize: _this.reposition }, React.createElement("div", tslib_1.__assign({
          className: popoverClasses,
          style: { transformOrigin: transformOrigin }
        }, popoverHandlers), _this.isArrowEnabled() && React.createElement(popoverArrow_1.PopoverArrow, {
          arrowProps: popperProps.arrowProps,
          placement: popperProps.placement
        }), React.createElement("div", { className: Classes.POPOVER_CONTENT }, _this.understandChildren().content))));
        var _b;
      };
      _this.renderTarget = function (referenceProps) {
        var _a = _this.props,
            openOnTargetFocus = _a.openOnTargetFocus,
            targetClassName = _a.targetClassName,
            _b = _a.targetProps,
            targetProps = _b === void 0 ? {} : _b,
            TagName = _a.targetTagName;
        var isOpen = _this.state.isOpen;
        var isHoverInteractionKind = _this.isHoverInteractionKind();
        var finalTargetProps = isHoverInteractionKind ? {
          onBlur: _this.handleTargetBlur,
          onFocus: _this.handleTargetFocus,
          onMouseEnter: _this.handleMouseEnter,
          onMouseLeave: _this.handleMouseLeave
        } : { onClick: _this.handleTargetClick };
        finalTargetProps.className = classnames_1.default(Classes.POPOVER_TARGET, (_c = {}, _c[Classes.POPOVER_OPEN] = isOpen, _c), targetProps.className, targetClassName);
        finalTargetProps.ref = referenceProps.ref;
        var rawTarget = Utils.ensureElement(_this.understandChildren().target);
        var rawTabIndex = rawTarget.props.tabIndex;
        var tabIndex = rawTabIndex == null && openOnTargetFocus && isHoverInteractionKind ? 0 : rawTabIndex;
        var clonedTarget = React.cloneElement(rawTarget, {
          className: classnames_1.default(rawTarget.props.className, (_d = {}, _d[Classes.ACTIVE] = isOpen && !isHoverInteractionKind, _d)),
          disabled: isOpen && Utils.isElementOfType(rawTarget, tooltip_1.Tooltip) ? true : rawTarget.props.disabled,
          tabIndex: tabIndex
        });
        return React.createElement(resizeSensor_1.ResizeSensor, { onResize: _this.reposition }, React.createElement(TagName, tslib_1.__assign({}, targetProps, finalTargetProps), clonedTarget));
        var _c, _d;
      };
      _this.handleTargetFocus = function (e) {
        if (_this.props.openOnTargetFocus && _this.isHoverInteractionKind()) {
          if (e.relatedTarget == null && !_this.lostFocusOnSamePage) {
            return;
          }
          _this.handleMouseEnter(e);
        }
        Utils.safeInvokeMember(_this.props.targetProps, "onFocus", e);
      };
      _this.handleTargetBlur = function (e) {
        if (_this.props.openOnTargetFocus && _this.isHoverInteractionKind()) {
          if (!_this.isElementInPopover(e.relatedTarget)) {
            _this.handleMouseLeave(e);
          }
        }
        _this.lostFocusOnSamePage = e.relatedTarget != null;
        Utils.safeInvokeMember(_this.props.targetProps, "onBlur", e);
      };
      _this.handleMouseEnter = function (e) {
        _this.isMouseInTargetOrPopover = true;
        if (!_this.props.usePortal && _this.isElementInPopover(e.target) && _this.props.interactionKind === exports.PopoverInteractionKind.HOVER_TARGET_ONLY && !_this.props.openOnTargetFocus) {
          _this.handleMouseLeave(e);
        } else if (!_this.props.disabled) {
          _this.setOpenState(true, e, _this.props.hoverOpenDelay);
        }
        Utils.safeInvokeMember(_this.props.targetProps, "onMouseEnter", e);
      };
      _this.handleMouseLeave = function (e) {
        _this.isMouseInTargetOrPopover = false;
        _this.setTimeout(function () {
          if (_this.isMouseInTargetOrPopover) {
            return;
          }
          _this.setOpenState(false, e, _this.props.hoverCloseDelay);
        });
        Utils.safeInvokeMember(_this.props.targetProps, "onMouseLeave", e);
      };
      _this.handlePopoverClick = function (e) {
        var eventTarget = e.target;
        var dismissElement = eventTarget.closest("." + Classes.POPOVER_DISMISS + ", ." + Classes.POPOVER_DISMISS_OVERRIDE);
        var shouldDismiss = dismissElement != null && dismissElement.classList.contains(Classes.POPOVER_DISMISS);
        var isDisabled = eventTarget.closest(":disabled, ." + Classes.DISABLED) != null;
        if (shouldDismiss && !isDisabled && !e.isDefaultPrevented()) {
          _this.setOpenState(false, e);
          if (_this.props.captureDismiss) {
            e.preventDefault();
          }
        }
      };
      _this.handleOverlayClose = function (e) {
        var eventTarget = e.target;
        if (!Utils.elementIsOrContains(_this.targetElement, eventTarget) || e.nativeEvent instanceof KeyboardEvent) {
          _this.setOpenState(false, e);
        }
      };
      _this.handleTargetClick = function (e) {
        if (!_this.props.disabled && !_this.isElementInPopover(e.target)) {
          if (_this.props.isOpen == null) {
            _this.setState(function (prevState) {
              return { isOpen: !prevState.isOpen };
            });
          } else {
            _this.setOpenState(!_this.props.isOpen, e);
          }
        }
        Utils.safeInvokeMember(_this.props.targetProps, "onClick", e);
      };
      _this.updatePopoverState = function (data) {
        _this.setState({ transformOrigin: popperUtils_1.getTransformOrigin(data) });
        return data;
      };
      return _this;
    }
    Popover.prototype.render = function () {
      var _a = this.props,
          className = _a.className,
          disabled = _a.disabled,
          WrapperTagName = _a.wrapperTagName;
      var isOpen = this.state.isOpen;
      var isContentEmpty = Utils.ensureElement(this.understandChildren().content) == null;
      if (isContentEmpty && !disabled && isOpen !== false && !Utils.isNodeEnv("production")) {
        console.warn(Errors.POPOVER_WARN_EMPTY_CONTENT);
      }
      return React.createElement(react_popper_1.Manager, null, React.createElement(WrapperTagName, { className: classnames_1.default(Classes.POPOVER_WRAPPER, className) }, React.createElement(react_popper_1.Reference, { innerRef: this.refHandlers.target }, this.renderTarget), React.createElement(overlay_1.Overlay, {
        autoFocus: this.props.autoFocus,
        backdropClassName: Classes.POPOVER_BACKDROP,
        backdropProps: this.props.backdropProps,
        canEscapeKeyClose: this.props.canEscapeKeyClose,
        canOutsideClickClose: this.props.interactionKind === exports.PopoverInteractionKind.CLICK,
        className: this.props.portalClassName,
        enforceFocus: this.props.enforceFocus,
        hasBackdrop: this.props.hasBackdrop,
        isOpen: isOpen && !isContentEmpty,
        onClose: this.handleOverlayClose,
        onClosed: this.props.onClosed,
        onClosing: this.props.onClosing,
        onOpened: this.props.onOpened,
        onOpening: this.props.onOpening,
        transitionDuration: this.props.transitionDuration,
        transitionName: Classes.POPOVER,
        usePortal: this.props.usePortal,
        portalContainer: this.props.portalContainer
      }, React.createElement(react_popper_1.Popper, {
        innerRef: this.refHandlers.popover,
        placement: popoverMigrationUtils_1.positionToPlacement(this.props.position),
        modifiers: this.getPopperModifiers()
      }, this.renderPopover))));
    };
    Popover.prototype.componentDidMount = function () {
      this.updateDarkParent();
    };
    Popover.prototype.componentWillReceiveProps = function (nextProps) {
      _super.prototype.componentWillReceiveProps.call(this, nextProps);
      var nextIsOpen = this.getIsOpen(nextProps);
      if (nextProps.isOpen != null && nextIsOpen !== this.state.isOpen) {
        this.setOpenState(nextIsOpen);
        this.setState({ isOpen: nextIsOpen });
      } else if (this.state.isOpen && nextProps.isOpen == null && nextProps.disabled) {
        this.setOpenState(false);
      }
    };
    Popover.prototype.componentDidUpdate = function () {
      this.updateDarkParent();
    };
    Popover.prototype.validateProps = function (props) {
      if (props.isOpen == null && props.onInteraction != null) {
        console.warn(Errors.POPOVER_WARN_UNCONTROLLED_ONINTERACTION);
      }
      if (props.hasBackdrop && !props.usePortal) {
        console.warn(Errors.POPOVER_WARN_HAS_BACKDROP_INLINE);
      }
      if (props.hasBackdrop && props.interactionKind !== exports.PopoverInteractionKind.CLICK) {
        throw new Error(Errors.POPOVER_HAS_BACKDROP_INTERACTION);
      }
      var childrenCount = React.Children.count(props.children);
      var hasContentProp = props.content !== undefined;
      var hasTargetProp = props.target !== undefined;
      if (childrenCount === 0 && !hasTargetProp) {
        throw new Error(Errors.POPOVER_REQUIRES_TARGET);
      }
      if (childrenCount > 2) {
        console.warn(Errors.POPOVER_WARN_TOO_MANY_CHILDREN);
      }
      if (childrenCount > 0 && hasTargetProp) {
        console.warn(Errors.POPOVER_WARN_DOUBLE_TARGET);
      }
      if (childrenCount === 2 && hasContentProp) {
        console.warn(Errors.POPOVER_WARN_DOUBLE_CONTENT);
      }
    };
    Popover.prototype.updateDarkParent = function () {
      if (this.props.usePortal && this.state.isOpen) {
        var hasDarkParent = this.targetElement != null && this.targetElement.closest("." + Classes.DARK) != null;
        this.setState({ hasDarkParent: hasDarkParent });
      }
    };
    Popover.prototype.understandChildren = function () {
      var _a = this.props,
          children = _a.children,
          contentProp = _a.content,
          targetProp = _a.target;
      var _b = React.Children.toArray(children),
          targetChild = _b[0],
          contentChild = _b[1];
      return {
        content: contentChild == null ? contentProp : contentChild,
        target: targetChild == null ? targetProp : targetChild
      };
    };
    Popover.prototype.getIsOpen = function (props) {
      if (props.disabled) {
        return false;
      } else if (props.isOpen != null) {
        return props.isOpen;
      } else {
        return props.defaultIsOpen;
      }
    };
    Popover.prototype.getPopperModifiers = function () {
      var _a = this.props,
          boundary = _a.boundary,
          modifiers = _a.modifiers;
      var _b = modifiers.flip,
          flip = _b === void 0 ? {} : _b,
          _c = modifiers.preventOverflow,
          preventOverflow = _c === void 0 ? {} : _c;
      return tslib_1.__assign({}, modifiers, {
        arrowOffset: {
          enabled: this.isArrowEnabled(),
          fn: popperUtils_1.arrowOffsetModifier,
          order: 510
        },
        flip: tslib_1.__assign({ boundariesElement: boundary }, flip),
        preventOverflow: tslib_1.__assign({ boundariesElement: boundary }, preventOverflow),
        updatePopoverState: {
          enabled: true,
          fn: this.updatePopoverState,
          order: 900
        }
      });
    };
    Popover.prototype.setOpenState = function (isOpen, e, timeout) {
      var _this = this;
      Utils.safeInvoke(this.cancelOpenTimeout);
      if (timeout > 0) {
        this.cancelOpenTimeout = this.setTimeout(function () {
          return _this.setOpenState(isOpen, e);
        }, timeout);
      } else {
        if (this.props.isOpen == null) {
          this.setState({ isOpen: isOpen });
        } else {
          Utils.safeInvoke(this.props.onInteraction, isOpen, e);
        }
        if (!isOpen) {
          Utils.safeInvoke(this.props.onClose, e);
        }
      }
    };
    Popover.prototype.isArrowEnabled = function () {
      var _a = this.props,
          minimal = _a.minimal,
          arrow = _a.modifiers.arrow;
      return !minimal && (arrow == null || arrow.enabled);
    };
    Popover.prototype.isElementInPopover = function (element) {
      return this.popoverElement != null && this.popoverElement.contains(element);
    };
    Popover.prototype.isHoverInteractionKind = function () {
      return this.props.interactionKind === exports.PopoverInteractionKind.HOVER || this.props.interactionKind === exports.PopoverInteractionKind.HOVER_TARGET_ONLY;
    };
    Popover.displayName = props_1.DISPLAYNAME_PREFIX + ".Popover";
    Popover.defaultProps = {
      boundary: "scrollParent",
      captureDismiss: false,
      defaultIsOpen: false,
      disabled: false,
      hasBackdrop: false,
      hoverCloseDelay: 300,
      hoverOpenDelay: 150,
      inheritDarkTheme: true,
      interactionKind: exports.PopoverInteractionKind.CLICK,
      minimal: false,
      modifiers: {},
      openOnTargetFocus: true,
      position: "auto",
      targetTagName: "span",
      transitionDuration: 300,
      usePortal: true,
      wrapperTagName: "span"
    };
    return Popover;
  }(abstractPureComponent_1.AbstractPureComponent);
  exports.Popover = Popover;
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/components/tooltip/tooltip.js", ["npm:tslib@1.9.3.js", "npm:classnames@2.2.6.js", "npm:react@16.7.0.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/popover/popover.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  var classnames_1 = tslib_1.__importDefault($__require("npm:classnames@2.2.6.js"));
  var React = tslib_1.__importStar($__require("npm:react@16.7.0.js"));
  var Classes = tslib_1.__importStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js"));
  var props_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js");
  var popover_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/popover/popover.js");
  var Tooltip = function (_super) {
    tslib_1.__extends(Tooltip, _super);
    function Tooltip() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.popover = null;
      return _this;
    }
    Tooltip.prototype.render = function () {
      var _this = this;
      var _a = this.props,
          children = _a.children,
          intent = _a.intent,
          popoverClassName = _a.popoverClassName,
          restProps = tslib_1.__rest(_a, ["children", "intent", "popoverClassName"]);
      var classes = classnames_1.default(Classes.TOOLTIP, Classes.intentClass(intent), popoverClassName);
      return React.createElement(popover_1.Popover, tslib_1.__assign({}, restProps, {
        autoFocus: false,
        canEscapeKeyClose: false,
        enforceFocus: false,
        interactionKind: popover_1.PopoverInteractionKind.HOVER_TARGET_ONLY,
        lazy: true,
        popoverClassName: classes,
        portalContainer: this.props.portalContainer,
        ref: function (ref) {
          return _this.popover = ref;
        }
      }), children);
    };
    Tooltip.prototype.reposition = function () {
      if (this.popover != null) {
        this.popover.reposition();
      }
    };
    Tooltip.displayName = props_1.DISPLAYNAME_PREFIX + ".Tooltip";
    Tooltip.defaultProps = {
      hoverCloseDelay: 0,
      hoverOpenDelay: 100,
      transitionDuration: 100
    };
    return Tooltip;
  }(React.PureComponent);
  exports.Tooltip = Tooltip;
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/components/tree/tree.js", ["npm:tslib@1.9.3.js", "npm:classnames@2.2.6.js", "npm:react@16.7.0.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/utils.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/tree/treeNode.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  var classnames_1 = tslib_1.__importDefault($__require("npm:classnames@2.2.6.js"));
  var React = tslib_1.__importStar($__require("npm:react@16.7.0.js"));
  var Classes = tslib_1.__importStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js"));
  var props_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js");
  var utils_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/utils.js");
  var treeNode_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/tree/treeNode.js");
  var Tree = function (_super) {
    tslib_1.__extends(Tree, _super);
    function Tree() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.nodeRefs = {};
      _this.handleNodeCollapse = function (node, e) {
        _this.handlerHelper(_this.props.onNodeCollapse, node, e);
      };
      _this.handleNodeClick = function (node, e) {
        _this.handlerHelper(_this.props.onNodeClick, node, e);
      };
      _this.handleContentRef = function (node, element) {
        if (element != null) {
          _this.nodeRefs[node.props.id] = element;
        } else {
          delete _this.nodeRefs[node.props.id];
        }
      };
      _this.handleNodeContextMenu = function (node, e) {
        _this.handlerHelper(_this.props.onNodeContextMenu, node, e);
      };
      _this.handleNodeDoubleClick = function (node, e) {
        _this.handlerHelper(_this.props.onNodeDoubleClick, node, e);
      };
      _this.handleNodeExpand = function (node, e) {
        _this.handlerHelper(_this.props.onNodeExpand, node, e);
      };
      _this.handleNodeMouseEnter = function (node, e) {
        _this.handlerHelper(_this.props.onNodeMouseEnter, node, e);
      };
      _this.handleNodeMouseLeave = function (node, e) {
        _this.handlerHelper(_this.props.onNodeMouseLeave, node, e);
      };
      return _this;
    }
    Tree.ofType = function () {
      return Tree;
    };
    Tree.nodeFromPath = function (path, treeNodes) {
      if (path.length === 1) {
        return treeNodes[path[0]];
      } else {
        return Tree.nodeFromPath(path.slice(1), treeNodes[path[0]].childNodes);
      }
    };
    Tree.prototype.render = function () {
      return React.createElement("div", { className: classnames_1.default(Classes.TREE, this.props.className) }, this.renderNodes(this.props.contents, [], Classes.TREE_ROOT));
    };
    Tree.prototype.getNodeContentElement = function (nodeId) {
      return this.nodeRefs[nodeId];
    };
    Tree.prototype.renderNodes = function (treeNodes, currentPath, className) {
      var _this = this;
      if (treeNodes == null) {
        return null;
      }
      var nodeItems = treeNodes.map(function (node, i) {
        var elementPath = currentPath.concat(i);
        var TypedTreeNode = treeNode_1.TreeNode.ofType();
        return React.createElement(TypedTreeNode, tslib_1.__assign({}, node, {
          key: node.id,
          contentRef: _this.handleContentRef,
          depth: elementPath.length - 1,
          onClick: _this.handleNodeClick,
          onContextMenu: _this.handleNodeContextMenu,
          onCollapse: _this.handleNodeCollapse,
          onDoubleClick: _this.handleNodeDoubleClick,
          onExpand: _this.handleNodeExpand,
          onMouseEnter: _this.handleNodeMouseEnter,
          onMouseLeave: _this.handleNodeMouseLeave,
          path: elementPath
        }), _this.renderNodes(node.childNodes, elementPath));
      });
      return React.createElement("ul", { className: classnames_1.default(Classes.TREE_NODE_LIST, className) }, nodeItems);
    };
    Tree.prototype.handlerHelper = function (handlerFromProps, node, e) {
      if (utils_1.isFunction(handlerFromProps)) {
        var nodeData = Tree.nodeFromPath(node.props.path, this.props.contents);
        handlerFromProps(nodeData, node.props.path, e);
      }
    };
    Tree.displayName = props_1.DISPLAYNAME_PREFIX + ".Tree";
    return Tree;
  }(React.Component);
  exports.Tree = Tree;
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/components/collapse/collapse.js", ["npm:tslib@1.9.3.js", "npm:classnames@2.2.6.js", "npm:react@16.7.0.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/abstractPureComponent.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  var classnames_1 = tslib_1.__importDefault($__require("npm:classnames@2.2.6.js"));
  var React = tslib_1.__importStar($__require("npm:react@16.7.0.js"));
  var abstractPureComponent_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/abstractPureComponent.js");
  var Classes = tslib_1.__importStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js"));
  var props_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js");
  var AnimationStates;
  (function (AnimationStates) {
    AnimationStates[AnimationStates["OPEN_START"] = 0] = "OPEN_START";
    AnimationStates[AnimationStates["OPENING"] = 1] = "OPENING";
    AnimationStates[AnimationStates["OPEN"] = 2] = "OPEN";
    AnimationStates[AnimationStates["CLOSING_START"] = 3] = "CLOSING_START";
    AnimationStates[AnimationStates["CLOSING"] = 4] = "CLOSING";
    AnimationStates[AnimationStates["CLOSED"] = 5] = "CLOSED";
  })(AnimationStates = exports.AnimationStates || (exports.AnimationStates = {}));
  var Collapse = function (_super) {
    tslib_1.__extends(Collapse, _super);
    function Collapse() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.state = {
        animationState: _this.props.isOpen ? AnimationStates.OPEN : AnimationStates.CLOSED,
        height: "0px"
      };
      _this.height = 0;
      _this.contentsRefHandler = function (el) {
        _this.contents = el;
        if (el != null) {
          _this.height = _this.contents.clientHeight;
          _this.setState({
            animationState: _this.props.isOpen ? AnimationStates.OPEN : AnimationStates.CLOSED,
            height: _this.height + "px"
          });
        }
      };
      return _this;
    }
    Collapse.prototype.componentWillReceiveProps = function (nextProps) {
      if (this.props.isOpen !== nextProps.isOpen) {
        this.clearTimeouts();
        if (this.state.animationState !== AnimationStates.CLOSED && !nextProps.isOpen) {
          this.setState({
            animationState: AnimationStates.CLOSING_START,
            height: this.height + "px"
          });
        } else if (this.state.animationState !== AnimationStates.OPEN && nextProps.isOpen) {
          this.setState({ animationState: AnimationStates.OPEN_START });
        }
      }
    };
    Collapse.prototype.render = function () {
      var isContentVisible = this.state.animationState !== AnimationStates.CLOSED;
      var shouldRenderChildren = isContentVisible || this.props.keepChildrenMounted;
      var displayWithTransform = isContentVisible && this.state.animationState !== AnimationStates.CLOSING;
      var isAutoHeight = this.state.height === "auto";
      var containerStyle = {
        height: isContentVisible ? this.state.height : undefined,
        overflowY: isAutoHeight ? "visible" : undefined,
        transition: isAutoHeight ? "none" : undefined
      };
      var contentsStyle = {
        transform: displayWithTransform ? "translateY(0)" : "translateY(-" + this.height + "px)",
        transition: isAutoHeight ? "none" : undefined
      };
      return React.createElement(this.props.component, {
        className: classnames_1.default(Classes.COLLAPSE, this.props.className),
        style: containerStyle
      }, React.createElement("div", {
        className: Classes.COLLAPSE_BODY,
        ref: this.contentsRefHandler,
        style: contentsStyle,
        "aria-hidden": !isContentVisible && this.props.keepChildrenMounted
      }, shouldRenderChildren ? this.props.children : null));
    };
    Collapse.prototype.componentDidMount = function () {
      this.forceUpdate();
      if (this.props.isOpen) {
        this.setState({
          animationState: AnimationStates.OPEN,
          height: "auto"
        });
      } else {
        this.setState({ animationState: AnimationStates.CLOSED });
      }
    };
    Collapse.prototype.componentDidUpdate = function () {
      var _this = this;
      if (this.contents != null && this.contents.clientHeight !== 0) {
        this.height = this.contents.clientHeight;
      }
      if (this.state.animationState === AnimationStates.CLOSING_START) {
        this.setTimeout(function () {
          return _this.setState({
            animationState: AnimationStates.CLOSING,
            height: "0px"
          });
        });
        this.setTimeout(function () {
          return _this.onDelayedStateChange();
        }, this.props.transitionDuration);
      }
      if (this.state.animationState === AnimationStates.OPEN_START) {
        this.setState({
          animationState: AnimationStates.OPENING,
          height: this.height + "px"
        });
        this.setTimeout(function () {
          return _this.onDelayedStateChange();
        }, this.props.transitionDuration);
      }
    };
    Collapse.prototype.onDelayedStateChange = function () {
      switch (this.state.animationState) {
        case AnimationStates.OPENING:
          this.setState({
            animationState: AnimationStates.OPEN,
            height: "auto"
          });
          break;
        case AnimationStates.CLOSING:
          this.setState({ animationState: AnimationStates.CLOSED });
          break;
        default:
          break;
      }
    };
    Collapse.displayName = props_1.DISPLAYNAME_PREFIX + ".Collapse";
    Collapse.defaultProps = {
      component: "div",
      isOpen: false,
      keepChildrenMounted: false,
      transitionDuration: 200
    };
    return Collapse;
  }(abstractPureComponent_1.AbstractPureComponent);
  exports.Collapse = Collapse;
});
System.registerDynamic('npm:classnames@2.2.6/index.js', [], true, function ($__require, exports, module) {
	/* */
	"format cjs";
	/*!
   Copyright (c) 2017 Jed Watson.
   Licensed under the MIT License (MIT), see
   http://jedwatson.github.io/classnames
 */
	/* global define */

	var global = this || self,
	    GLOBAL = global;
	(function () {
		'use strict';

		var hasOwn = {}.hasOwnProperty;

		function classNames() {
			var classes = [];

			for (var i = 0; i < arguments.length; i++) {
				var arg = arguments[i];
				if (!arg) continue;

				var argType = typeof arg;

				if (argType === 'string' || argType === 'number') {
					classes.push(arg);
				} else if (Array.isArray(arg) && arg.length) {
					var inner = classNames.apply(null, arg);
					if (inner) {
						classes.push(inner);
					}
				} else if (argType === 'object') {
					for (var key in arg) {
						if (hasOwn.call(arg, key) && arg[key]) {
							classes.push(key);
						}
					}
				}
			}

			return classes.join(' ');
		}

		if (typeof module !== 'undefined' && module.exports) {
			classNames.default = classNames;
			module.exports = classNames;
		} else if (typeof undefined === 'function' && typeof define.amd === 'object' && define.amd) {
			// register as 'classnames', consistent with npm package name
			define('classnames', [], function () {
				return classNames;
			});
		} else {
			window.classNames = classNames;
		}
	})();
});
System.registerDynamic("npm:classnames@2.2.6.js", ["npm:classnames@2.2.6/index.js"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("npm:classnames@2.2.6/index.js");
});
System.registerDynamic("npm:@blueprintjs/icons@3.5.0/lib/cjs/generated/iconContents.js", [], true, function ($__require, exports, module) {
  /* */
  "use strict";
  /*
   * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
   */

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.ADD = "\ue63e";
  exports.ADD_COLUMN_LEFT = "\ue6f9";
  exports.ADD_COLUMN_RIGHT = "\ue6fa";
  exports.ADD_ROW_BOTTOM = "\ue6f8";
  exports.ADD_ROW_TOP = "\ue6f7";
  exports.ADD_TO_ARTIFACT = "\ue67c";
  exports.ADD_TO_FOLDER = "\ue6d2";
  exports.AIRPLANE = "\ue74b";
  exports.ALIGN_CENTER = "\ue603";
  exports.ALIGN_JUSTIFY = "\ue605";
  exports.ALIGN_LEFT = "\ue602";
  exports.ALIGN_RIGHT = "\ue604";
  exports.ALIGNMENT_BOTTOM = "\ue727";
  exports.ALIGNMENT_HORIZONTAL_CENTER = "\ue726";
  exports.ALIGNMENT_LEFT = "\ue722";
  exports.ALIGNMENT_RIGHT = "\ue724";
  exports.ALIGNMENT_TOP = "\ue725";
  exports.ALIGNMENT_VERTICAL_CENTER = "\ue723";
  exports.ANNOTATION = "\ue6f0";
  exports.APPLICATION = "\ue735";
  exports.APPLICATIONS = "\ue621";
  exports.ARROW_BOTTOM_LEFT = "\u2199";
  exports.ARROW_BOTTOM_RIGHT = "\u2198";
  exports.ARROW_DOWN = "\u2193 ";
  exports.ARROW_LEFT = "\u2190";
  exports.ARROW_RIGHT = "\u2192";
  exports.ARROW_TOP_LEFT = "\u2196";
  exports.ARROW_TOP_RIGHT = "\u2197";
  exports.ARROW_UP = "\u2191 ";
  exports.ARROWS_HORIZONTAL = "\u2194 ";
  exports.ARROWS_VERTICAL = "\u2195 ";
  exports.ASTERISK = "\u002a";
  exports.AUTOMATIC_UPDATES = "\ue65f";
  exports.BADGE = "\ue6e3";
  exports.BAN_CIRCLE = "\ue69d";
  exports.BANK_ACCOUNT = "\ue76f";
  exports.BARCODE = "\ue676";
  exports.BLANK = "\ue900";
  exports.BLOCKED_PERSON = "\ue768";
  exports.BOLD = "\ue606";
  exports.BOOK = "\ue6b8";
  exports.BOOKMARK = "\ue61a";
  exports.BOX = "\ue6bf";
  exports.BRIEFCASE = "\ue674";
  exports.BUILD = "\ue72d";
  exports.CALCULATOR = "\ue70b";
  exports.CALENDAR = "\ue62b";
  exports.CAMERA = "\ue69e";
  exports.CARET_DOWN = "\u2304";
  exports.CARET_LEFT = "\u2329";
  exports.CARET_RIGHT = "\u232A";
  exports.CARET_UP = "\u2303";
  exports.CELL_TOWER = "\ue770";
  exports.CHANGES = "\ue623";
  exports.CHART = "\ue67e";
  exports.CHAT = "\ue689";
  exports.CHEVRON_BACKWARD = "\ue6df";
  exports.CHEVRON_DOWN = "\ue697";
  exports.CHEVRON_FORWARD = "\ue6e0";
  exports.CHEVRON_LEFT = "\ue694";
  exports.CHEVRON_RIGHT = "\ue695";
  exports.CHEVRON_UP = "\ue696";
  exports.CIRCLE = "\ue66a";
  exports.CIRCLE_ARROW_DOWN = "\ue68e";
  exports.CIRCLE_ARROW_LEFT = "\ue68c";
  exports.CIRCLE_ARROW_RIGHT = "\ue68b";
  exports.CIRCLE_ARROW_UP = "\ue68d";
  exports.CITATION = "\ue61b";
  exports.CLEAN = "\ue7c5";
  exports.CLIPBOARD = "\ue61d";
  exports.CLOUD = "\u2601";
  exports.CLOUD_DOWNLOAD = "\ue690";
  exports.CLOUD_UPLOAD = "\ue691";
  exports.CODE = "\ue661";
  exports.CODE_BLOCK = "\ue6c5";
  exports.COG = "\ue645";
  exports.COLLAPSE_ALL = "\ue763";
  exports.COLUMN_LAYOUT = "\ue6da";
  exports.COMMENT = "\ue68a";
  exports.COMPARISON = "\ue637";
  exports.COMPASS = "\ue79c";
  exports.COMPRESSED = "\ue6c0";
  exports.CONFIRM = "\ue639";
  exports.CONSOLE = "\ue79b";
  exports.CONTRAST = "\ue6cb";
  exports.CONTROL = "\ue67f";
  exports.CREDIT_CARD = "\ue649";
  exports.CROSS = "\u2717";
  exports.CROWN = "\ue7b4";
  exports.CUBE = "\ue7c8";
  exports.CUBE_ADD = "\ue7c9";
  exports.CUBE_REMOVE = "\ue7d0";
  exports.CURVED_RANGE_CHART = "\ue71b";
  exports.CUT = "\ue6ef";
  exports.DASHBOARD = "\ue751";
  exports.DATABASE = "\ue683";
  exports.DELETE = "\ue644";
  exports.DELTA = "\u0394";
  exports.DERIVE_COLUMN = "\ue739";
  exports.DESKTOP = "\ue6af";
  exports.DIAGRAM_TREE = "\ue7b3";
  exports.DIRECTION_LEFT = "\ue681";
  exports.DIRECTION_RIGHT = "\ue682";
  exports.DISABLE = "\ue600";
  exports.DOCUMENT = "\ue630";
  exports.DOCUMENT_OPEN = "\ue71e";
  exports.DOCUMENT_SHARE = "\ue71f";
  exports.DOLLAR = "\u0024";
  exports.DOT = "\u2022";
  exports.DOUBLE_CARET_HORIZONTAL = "\ue6c7";
  exports.DOUBLE_CARET_VERTICAL = "\ue6c6";
  exports.DOUBLE_CHEVRON_DOWN = "\ue703";
  exports.DOUBLE_CHEVRON_LEFT = "\ue6ff";
  exports.DOUBLE_CHEVRON_RIGHT = "\ue701";
  exports.DOUBLE_CHEVRON_UP = "\ue702";
  exports.DOUGHNUT_CHART = "\ue6ce";
  exports.DOWNLOAD = "\ue62f";
  exports.DRAG_HANDLE_HORIZONTAL = "\ue716";
  exports.DRAG_HANDLE_VERTICAL = "\ue715";
  exports.DRAW = "\ue66b";
  exports.DRIVE_TIME = "\ue615";
  exports.DUPLICATE = "\ue69c";
  exports.EDIT = "\u270E";
  exports.EJECT = "\u23cf";
  exports.ENDORSED = "\ue75f";
  exports.ENVELOPE = "\u2709";
  exports.ERASER = "\ue773";
  exports.ERROR = "\ue648";
  exports.EURO = "\u20ac";
  exports.EXCHANGE = "\ue636";
  exports.EXCLUDE_ROW = "\ue6ea";
  exports.EXPAND_ALL = "\ue764";
  exports.EXPORT = "\ue633";
  exports.EYE_OFF = "\ue6cc";
  exports.EYE_ON = "\ue75a";
  exports.EYE_OPEN = "\ue66f";
  exports.FAST_BACKWARD = "\ue6a8";
  exports.FAST_FORWARD = "\ue6ac";
  exports.FEED = "\ue656";
  exports.FEED_SUBSCRIBED = "\ue78f";
  exports.FILM = "\ue6a1";
  exports.FILTER = "\ue638";
  exports.FILTER_KEEP = "\ue78c";
  exports.FILTER_LIST = "\ue6ee";
  exports.FILTER_REMOVE = "\ue78d";
  exports.FLAG = "\u2691";
  exports.FLAME = "\ue7a9";
  exports.FLASH = "\ue6b3";
  exports.FLOPPY_DISK = "\ue6b7";
  exports.FLOW_BRANCH = "\ue7c1";
  exports.FLOW_END = "\ue7c4";
  exports.FLOW_LINEAR = "\ue7c0";
  exports.FLOW_REVIEW = "\ue7c2";
  exports.FLOW_REVIEW_BRANCH = "\ue7c3";
  exports.FLOWS = "\ue659";
  exports.FOLDER_CLOSE = "\ue652";
  exports.FOLDER_NEW = "\ue7b0";
  exports.FOLDER_OPEN = "\ue651";
  exports.FOLDER_SHARED = "\ue653";
  exports.FOLDER_SHARED_OPEN = "\ue670";
  exports.FOLLOWER = "\ue760";
  exports.FOLLOWING = "\ue761";
  exports.FONT = "\ue6b4";
  exports.FORK = "\ue63a";
  exports.FORM = "\ue795";
  exports.FULL_CIRCLE = "\ue685";
  exports.FULL_STACKED_CHART = "\ue75e";
  exports.FULLSCREEN = "\ue699";
  exports.FUNCTION = "\ue6e5";
  exports.GANTT_CHART = "\ue6f4";
  exports.GEOLOCATION = "\ue640";
  exports.GEOSEARCH = "\ue613";
  exports.GIT_BRANCH = "\ue72a";
  exports.GIT_COMMIT = "\ue72b";
  exports.GIT_MERGE = "\ue729";
  exports.GIT_NEW_BRANCH = "\ue749";
  exports.GIT_PULL = "\ue728";
  exports.GIT_PUSH = "\ue72c";
  exports.GIT_REPO = "\ue748";
  exports.GLASS = "\ue6b1";
  exports.GLOBE = "\ue666";
  exports.GLOBE_NETWORK = "\ue7b5";
  exports.GRAPH = "\ue673";
  exports.GRAPH_REMOVE = "\ue609";
  exports.GRID = "\ue6d0";
  exports.GRID_VIEW = "\ue6e4";
  exports.GROUP_OBJECTS = "\ue60a";
  exports.GROUPED_BAR_CHART = "\ue75d";
  exports.HAND = "\ue6de";
  exports.HAND_DOWN = "\ue6bb";
  exports.HAND_LEFT = "\ue6bc";
  exports.HAND_RIGHT = "\ue6b9";
  exports.HAND_UP = "\ue6ba";
  exports.HEADER = "\ue6b5";
  exports.HEADER_ONE = "\ue793";
  exports.HEADER_TWO = "\ue794";
  exports.HEADSET = "\ue6dc";
  exports.HEART = "\u2665";
  exports.HEART_BROKEN = "\ue7a2";
  exports.HEAT_GRID = "\ue6f3";
  exports.HEATMAP = "\ue614";
  exports.HELP = "\u003F";
  exports.HELPER_MANAGEMENT = "\ue66d";
  exports.HIGHLIGHT = "\ue6ed";
  exports.HISTORY = "\ue64a";
  exports.HOME = "\u2302";
  exports.HORIZONTAL_BAR_CHART = "\ue70c";
  exports.HORIZONTAL_BAR_CHART_ASC = "\ue75c";
  exports.HORIZONTAL_BAR_CHART_DESC = "\ue71d";
  exports.HORIZONTAL_DISTRIBUTION = "\ue720";
  exports.ID_NUMBER = "\ue771";
  exports.IMAGE_ROTATE_LEFT = "\ue73a";
  exports.IMAGE_ROTATE_RIGHT = "\ue73b";
  exports.IMPORT = "\ue632";
  exports.INBOX = "\ue629";
  exports.INFO_SIGN = "\u2139";
  exports.INNER_JOIN = "\ue7a3";
  exports.INSERT = "\ue66c";
  exports.INTERSECTION = "\ue765";
  exports.IP_ADDRESS = "\ue772";
  exports.ISSUE = "\ue774";
  exports.ISSUE_CLOSED = "\ue776";
  exports.ISSUE_NEW = "\ue775";
  exports.ITALIC = "\ue607";
  exports.JOIN_TABLE = "\ue738";
  exports.KEY = "\ue78e";
  exports.KEY_BACKSPACE = "\ue707";
  exports.KEY_COMMAND = "\ue705";
  exports.KEY_CONTROL = "\ue704";
  exports.KEY_DELETE = "\ue708";
  exports.KEY_ENTER = "\ue70a";
  exports.KEY_ESCAPE = "\ue709";
  exports.KEY_OPTION = "\ue742";
  exports.KEY_SHIFT = "\ue706";
  exports.KEY_TAB = "\ue757";
  exports.KNOWN_VEHICLE = "\ue73c";
  exports.LABEL = "\ue665";
  exports.LAYER = "\ue6cf";
  exports.LAYERS = "\ue618";
  exports.LAYOUT = "\ue60c";
  exports.LAYOUT_AUTO = "\ue60d";
  exports.LAYOUT_BALLOON = "\ue6d3";
  exports.LAYOUT_CIRCLE = "\ue60e";
  exports.LAYOUT_GRID = "\ue610";
  exports.LAYOUT_GROUP_BY = "\ue611";
  exports.LAYOUT_HIERARCHY = "\ue60f";
  exports.LAYOUT_LINEAR = "\ue6c3";
  exports.LAYOUT_SKEW_GRID = "\ue612";
  exports.LAYOUT_SORTED_CLUSTERS = "\ue6d4";
  exports.LEFT_JOIN = "\ue7a4";
  exports.LIFESAVER = "\ue7c7";
  exports.LIGHTBULB = "\ue6b0";
  exports.LINK = "\ue62d";
  exports.LIST = "\u2630";
  exports.LIST_COLUMNS = "\ue7b9";
  exports.LIST_DETAIL_VIEW = "\ue743";
  exports.LOCATE = "\ue619";
  exports.LOCK = "\ue625";
  exports.LOG_IN = "\ue69a";
  exports.LOG_OUT = "\ue64c";
  exports.MANUAL = "\ue6f6";
  exports.MANUALLY_ENTERED_DATA = "\ue74a";
  exports.MAP = "\ue662";
  exports.MAP_CREATE = "\ue741";
  exports.MAP_MARKER = "\ue67d";
  exports.MAXIMIZE = "\ue635";
  exports.MEDIA = "\ue62c";
  exports.MENU = "\ue762";
  exports.MENU_CLOSED = "\ue655";
  exports.MENU_OPEN = "\ue654";
  exports.MERGE_COLUMNS = "\ue74f";
  exports.MERGE_LINKS = "\ue60b";
  exports.MINIMIZE = "\ue634";
  exports.MINUS = "\u2212";
  exports.MOBILE_PHONE = "\ue717";
  exports.MOBILE_VIDEO = "\ue69f";
  exports.MOON = "\ue754";
  exports.MORE = "\ue62a";
  exports.MOUNTAIN = "\ue7b1";
  exports.MOVE = "\ue693";
  exports.MUGSHOT = "\ue6db";
  exports.MULTI_SELECT = "\ue680";
  exports.MUSIC = "\ue6a6";
  exports.NEW_GRID_ITEM = "\ue747";
  exports.NEW_LINK = "\ue65c";
  exports.NEW_OBJECT = "\ue65d";
  exports.NEW_PERSON = "\ue6e9";
  exports.NEW_PRESCRIPTION = "\ue78b";
  exports.NEW_TEXT_BOX = "\ue65b";
  exports.NINJA = "\ue675";
  exports.NOTIFICATIONS = "\ue624";
  exports.NOTIFICATIONS_UPDATED = "\ue7b8";
  exports.NUMBERED_LIST = "\ue746";
  exports.NUMERICAL = "\ue756";
  exports.OFFICE = "\ue69b";
  exports.OFFLINE = "\ue67a";
  exports.OIL_FIELD = "\ue73f";
  exports.ONE_COLUMN = "\ue658";
  exports.OUTDATED = "\ue7a8";
  exports.PAGE_LAYOUT = "\ue660";
  exports.PANEL_STATS = "\ue777";
  exports.PANEL_TABLE = "\ue778";
  exports.PAPERCLIP = "\ue664";
  exports.PARAGRAPH = "\ue76c";
  exports.PATH = "\ue753";
  exports.PATH_SEARCH = "\ue65e";
  exports.PAUSE = "\ue6a9";
  exports.PEOPLE = "\ue63d";
  exports.PERCENTAGE = "\ue76a";
  exports.PERSON = "\ue63c";
  exports.PHONE = "\u260e";
  exports.PIE_CHART = "\ue684";
  exports.PIN = "\ue646";
  exports.PIVOT = "\ue6f1";
  exports.PIVOT_TABLE = "\ue6eb";
  exports.PLAY = "\ue6ab";
  exports.PLUS = "\u002b";
  exports.POLYGON_FILTER = "\ue6d1";
  exports.POWER = "\ue6d9";
  exports.PREDICTIVE_ANALYSIS = "\ue617";
  exports.PRESCRIPTION = "\ue78a";
  exports.PRESENTATION = "\ue687";
  exports.PRINT = "\u2399";
  exports.PROJECTS = "\ue622";
  exports.PROPERTIES = "\ue631";
  exports.PROPERTY = "\ue65a";
  exports.PUBLISH_FUNCTION = "\ue752";
  exports.PULSE = "\ue6e8";
  exports.RANDOM = "\ue698";
  exports.RECORD = "\ue6ae";
  exports.REDO = "\ue6c4";
  exports.REFRESH = "\ue643";
  exports.REGRESSION_CHART = "\ue758";
  exports.REMOVE = "\ue63f";
  exports.REMOVE_COLUMN = "\ue755";
  exports.REMOVE_COLUMN_LEFT = "\ue6fd";
  exports.REMOVE_COLUMN_RIGHT = "\ue6fe";
  exports.REMOVE_ROW_BOTTOM = "\ue6fc";
  exports.REMOVE_ROW_TOP = "\ue6fb";
  exports.REPEAT = "\ue692";
  exports.RESOLVE = "\ue672";
  exports.RIG = "\ue740";
  exports.RIGHT_JOIN = "\ue7a5";
  exports.RING = "\ue6f2";
  exports.ROTATE_DOCUMENT = "\ue6e1";
  exports.ROTATE_PAGE = "\ue6e2";
  exports.SATELLITE = "\ue76b";
  exports.SAVED = "\ue6b6";
  exports.SCATTER_PLOT = "\ue73e";
  exports.SEARCH = "\ue64b";
  exports.SEARCH_AROUND = "\ue608";
  exports.SEARCH_TEMPLATE = "\ue628";
  exports.SEARCH_TEXT = "\ue663";
  exports.SEGMENTED_CONTROL = "\ue6ec";
  exports.SELECT = "\ue616";
  exports.SELECTION = "\u29bf";
  exports.SEND_TO = "\ue66e";
  exports.SEND_TO_GRAPH = "\ue736";
  exports.SEND_TO_MAP = "\ue737";
  exports.SERIES_ADD = "\ue796";
  exports.SERIES_CONFIGURATION = "\ue79a";
  exports.SERIES_DERIVED = "\ue799";
  exports.SERIES_FILTERED = "\ue798";
  exports.SERIES_SEARCH = "\ue797";
  exports.SETTINGS = "\ue6a2";
  exports.SHARE = "\ue62e";
  exports.SHIELD = "\ue7b2";
  exports.SHOP = "\ue6c2";
  exports.SHOPPING_CART = "\ue6c1";
  exports.SIM_CARD = "\ue718";
  exports.SLASH = "\ue769";
  exports.SMALL_CROSS = "\ue6d7";
  exports.SMALL_MINUS = "\ue70e";
  exports.SMALL_PLUS = "\ue70d";
  exports.SMALL_TICK = "\ue6d8";
  exports.SNOWFLAKE = "\ue7b6";
  exports.SOCIAL_MEDIA = "\ue671";
  exports.SORT = "\ue64f";
  exports.SORT_ALPHABETICAL = "\ue64d";
  exports.SORT_ALPHABETICAL_DESC = "\ue6c8";
  exports.SORT_ASC = "\ue6d5";
  exports.SORT_DESC = "\ue6d6";
  exports.SORT_NUMERICAL = "\ue64e";
  exports.SORT_NUMERICAL_DESC = "\ue6c9";
  exports.SPLIT_COLUMNS = "\ue750";
  exports.SQUARE = "\ue686";
  exports.STACKED_CHART = "\ue6e7";
  exports.STAR = "\u2605";
  exports.STAR_EMPTY = "\u2606";
  exports.STEP_BACKWARD = "\ue6a7";
  exports.STEP_CHART = "\ue70f";
  exports.STEP_FORWARD = "\ue6ad";
  exports.STOP = "\ue6aa";
  exports.STRIKETHROUGH = "\ue7a6";
  exports.STYLE = "\ue601";
  exports.SWAP_HORIZONTAL = "\ue745";
  exports.SWAP_VERTICAL = "\ue744";
  exports.SYMBOL_CIRCLE = "\ue72e";
  exports.SYMBOL_CROSS = "\ue731";
  exports.SYMBOL_DIAMOND = "\ue730";
  exports.SYMBOL_SQUARE = "\ue72f";
  exports.SYMBOL_TRIANGLE_DOWN = "\ue733";
  exports.SYMBOL_TRIANGLE_UP = "\ue732";
  exports.TAG = "\ue61c";
  exports.TAKE_ACTION = "\ue6ca";
  exports.TAXI = "\ue79e";
  exports.TEXT_HIGHLIGHT = "\ue6dd";
  exports.TH = "\ue667";
  exports.TH_DERIVED = "\ue669";
  exports.TH_FILTERED = "\ue7c6";
  exports.TH_LIST = "\ue668";
  exports.THUMBS_DOWN = "\ue6be";
  exports.THUMBS_UP = "\ue6bd";
  exports.TICK = "\u2713";
  exports.TICK_CIRCLE = "\ue779";
  exports.TIME = "\u23F2";
  exports.TIMELINE_AREA_CHART = "\ue6cd";
  exports.TIMELINE_BAR_CHART = "\ue620";
  exports.TIMELINE_EVENTS = "\ue61e";
  exports.TIMELINE_LINE_CHART = "\ue61f";
  exports.TINT = "\ue6b2";
  exports.TORCH = "\ue677";
  exports.TRAIN = "\ue79f";
  exports.TRANSLATE = "\ue759";
  exports.TRASH = "\ue63b";
  exports.TREE = "\ue7b7";
  exports.TRENDING_DOWN = "\ue71a";
  exports.TRENDING_UP = "\ue719";
  exports.TWO_COLUMNS = "\ue657";
  exports.UNDERLINE = "\u2381";
  exports.UNDO = "\u238c";
  exports.UNGROUP_OBJECTS = "\ue688";
  exports.UNKNOWN_VEHICLE = "\ue73d";
  exports.UNLOCK = "\ue626";
  exports.UNPIN = "\ue650";
  exports.UNRESOLVE = "\ue679";
  exports.UPDATED = "\ue7a7";
  exports.UPLOAD = "\ue68f";
  exports.USER = "\ue627";
  exports.VARIABLE = "\ue6f5";
  exports.VERTICAL_BAR_CHART_ASC = "\ue75b";
  exports.VERTICAL_BAR_CHART_DESC = "\ue71c";
  exports.VERTICAL_DISTRIBUTION = "\ue721";
  exports.VIDEO = "\ue6a0";
  exports.VOLUME_DOWN = "\ue6a4";
  exports.VOLUME_OFF = "\ue6a3";
  exports.VOLUME_UP = "\ue6a5";
  exports.WALK = "\ue79d";
  exports.WARNING_SIGN = "\ue647";
  exports.WATERFALL_CHART = "\ue6e6";
  exports.WIDGET = "\ue678";
  exports.WIDGET_BUTTON = "\ue790";
  exports.WIDGET_FOOTER = "\ue792";
  exports.WIDGET_HEADER = "\ue791";
  exports.WRENCH = "\ue734";
  exports.ZOOM_IN = "\ue641";
  exports.ZOOM_OUT = "\ue642";
  exports.ZOOM_TO_FIT = "\ue67b";
  
});
System.registerDynamic("npm:@blueprintjs/icons@3.5.0/lib/cjs/generated/iconNames.js", [], true, function ($__require, exports, module) {
  /* */
  "use strict";
  /*
   * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
   */

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.ADD = "add";
  exports.ADD_COLUMN_LEFT = "add-column-left";
  exports.ADD_COLUMN_RIGHT = "add-column-right";
  exports.ADD_ROW_BOTTOM = "add-row-bottom";
  exports.ADD_ROW_TOP = "add-row-top";
  exports.ADD_TO_ARTIFACT = "add-to-artifact";
  exports.ADD_TO_FOLDER = "add-to-folder";
  exports.AIRPLANE = "airplane";
  exports.ALIGN_CENTER = "align-center";
  exports.ALIGN_JUSTIFY = "align-justify";
  exports.ALIGN_LEFT = "align-left";
  exports.ALIGN_RIGHT = "align-right";
  exports.ALIGNMENT_BOTTOM = "alignment-bottom";
  exports.ALIGNMENT_HORIZONTAL_CENTER = "alignment-horizontal-center";
  exports.ALIGNMENT_LEFT = "alignment-left";
  exports.ALIGNMENT_RIGHT = "alignment-right";
  exports.ALIGNMENT_TOP = "alignment-top";
  exports.ALIGNMENT_VERTICAL_CENTER = "alignment-vertical-center";
  exports.ANNOTATION = "annotation";
  exports.APPLICATION = "application";
  exports.APPLICATIONS = "applications";
  exports.ARROW_BOTTOM_LEFT = "arrow-bottom-left";
  exports.ARROW_BOTTOM_RIGHT = "arrow-bottom-right";
  exports.ARROW_DOWN = "arrow-down";
  exports.ARROW_LEFT = "arrow-left";
  exports.ARROW_RIGHT = "arrow-right";
  exports.ARROW_TOP_LEFT = "arrow-top-left";
  exports.ARROW_TOP_RIGHT = "arrow-top-right";
  exports.ARROW_UP = "arrow-up";
  exports.ARROWS_HORIZONTAL = "arrows-horizontal";
  exports.ARROWS_VERTICAL = "arrows-vertical";
  exports.ASTERISK = "asterisk";
  exports.AUTOMATIC_UPDATES = "automatic-updates";
  exports.BADGE = "badge";
  exports.BAN_CIRCLE = "ban-circle";
  exports.BANK_ACCOUNT = "bank-account";
  exports.BARCODE = "barcode";
  exports.BLANK = "blank";
  exports.BLOCKED_PERSON = "blocked-person";
  exports.BOLD = "bold";
  exports.BOOK = "book";
  exports.BOOKMARK = "bookmark";
  exports.BOX = "box";
  exports.BRIEFCASE = "briefcase";
  exports.BUILD = "build";
  exports.CALCULATOR = "calculator";
  exports.CALENDAR = "calendar";
  exports.CAMERA = "camera";
  exports.CARET_DOWN = "caret-down";
  exports.CARET_LEFT = "caret-left";
  exports.CARET_RIGHT = "caret-right";
  exports.CARET_UP = "caret-up";
  exports.CELL_TOWER = "cell-tower";
  exports.CHANGES = "changes";
  exports.CHART = "chart";
  exports.CHAT = "chat";
  exports.CHEVRON_BACKWARD = "chevron-backward";
  exports.CHEVRON_DOWN = "chevron-down";
  exports.CHEVRON_FORWARD = "chevron-forward";
  exports.CHEVRON_LEFT = "chevron-left";
  exports.CHEVRON_RIGHT = "chevron-right";
  exports.CHEVRON_UP = "chevron-up";
  exports.CIRCLE = "circle";
  exports.CIRCLE_ARROW_DOWN = "circle-arrow-down";
  exports.CIRCLE_ARROW_LEFT = "circle-arrow-left";
  exports.CIRCLE_ARROW_RIGHT = "circle-arrow-right";
  exports.CIRCLE_ARROW_UP = "circle-arrow-up";
  exports.CITATION = "citation";
  exports.CLEAN = "clean";
  exports.CLIPBOARD = "clipboard";
  exports.CLOUD = "cloud";
  exports.CLOUD_DOWNLOAD = "cloud-download";
  exports.CLOUD_UPLOAD = "cloud-upload";
  exports.CODE = "code";
  exports.CODE_BLOCK = "code-block";
  exports.COG = "cog";
  exports.COLLAPSE_ALL = "collapse-all";
  exports.COLUMN_LAYOUT = "column-layout";
  exports.COMMENT = "comment";
  exports.COMPARISON = "comparison";
  exports.COMPASS = "compass";
  exports.COMPRESSED = "compressed";
  exports.CONFIRM = "confirm";
  exports.CONSOLE = "console";
  exports.CONTRAST = "contrast";
  exports.CONTROL = "control";
  exports.CREDIT_CARD = "credit-card";
  exports.CROSS = "cross";
  exports.CROWN = "crown";
  exports.CUBE = "cube";
  exports.CUBE_ADD = "cube-add";
  exports.CUBE_REMOVE = "cube-remove";
  exports.CURVED_RANGE_CHART = "curved-range-chart";
  exports.CUT = "cut";
  exports.DASHBOARD = "dashboard";
  exports.DATABASE = "database";
  exports.DELETE = "delete";
  exports.DELTA = "delta";
  exports.DERIVE_COLUMN = "derive-column";
  exports.DESKTOP = "desktop";
  exports.DIAGRAM_TREE = "diagram-tree";
  exports.DIRECTION_LEFT = "direction-left";
  exports.DIRECTION_RIGHT = "direction-right";
  exports.DISABLE = "disable";
  exports.DOCUMENT = "document";
  exports.DOCUMENT_OPEN = "document-open";
  exports.DOCUMENT_SHARE = "document-share";
  exports.DOLLAR = "dollar";
  exports.DOT = "dot";
  exports.DOUBLE_CARET_HORIZONTAL = "double-caret-horizontal";
  exports.DOUBLE_CARET_VERTICAL = "double-caret-vertical";
  exports.DOUBLE_CHEVRON_DOWN = "double-chevron-down";
  exports.DOUBLE_CHEVRON_LEFT = "double-chevron-left";
  exports.DOUBLE_CHEVRON_RIGHT = "double-chevron-right";
  exports.DOUBLE_CHEVRON_UP = "double-chevron-up";
  exports.DOUGHNUT_CHART = "doughnut-chart";
  exports.DOWNLOAD = "download";
  exports.DRAG_HANDLE_HORIZONTAL = "drag-handle-horizontal";
  exports.DRAG_HANDLE_VERTICAL = "drag-handle-vertical";
  exports.DRAW = "draw";
  exports.DRIVE_TIME = "drive-time";
  exports.DUPLICATE = "duplicate";
  exports.EDIT = "edit";
  exports.EJECT = "eject";
  exports.ENDORSED = "endorsed";
  exports.ENVELOPE = "envelope";
  exports.ERASER = "eraser";
  exports.ERROR = "error";
  exports.EURO = "euro";
  exports.EXCHANGE = "exchange";
  exports.EXCLUDE_ROW = "exclude-row";
  exports.EXPAND_ALL = "expand-all";
  exports.EXPORT = "export";
  exports.EYE_OFF = "eye-off";
  exports.EYE_ON = "eye-on";
  exports.EYE_OPEN = "eye-open";
  exports.FAST_BACKWARD = "fast-backward";
  exports.FAST_FORWARD = "fast-forward";
  exports.FEED = "feed";
  exports.FEED_SUBSCRIBED = "feed-subscribed";
  exports.FILM = "film";
  exports.FILTER = "filter";
  exports.FILTER_KEEP = "filter-keep";
  exports.FILTER_LIST = "filter-list";
  exports.FILTER_REMOVE = "filter-remove";
  exports.FLAG = "flag";
  exports.FLAME = "flame";
  exports.FLASH = "flash";
  exports.FLOPPY_DISK = "floppy-disk";
  exports.FLOW_BRANCH = "flow-branch";
  exports.FLOW_END = "flow-end";
  exports.FLOW_LINEAR = "flow-linear";
  exports.FLOW_REVIEW = "flow-review";
  exports.FLOW_REVIEW_BRANCH = "flow-review-branch";
  exports.FLOWS = "flows";
  exports.FOLDER_CLOSE = "folder-close";
  exports.FOLDER_NEW = "folder-new";
  exports.FOLDER_OPEN = "folder-open";
  exports.FOLDER_SHARED = "folder-shared";
  exports.FOLDER_SHARED_OPEN = "folder-shared-open";
  exports.FOLLOWER = "follower";
  exports.FOLLOWING = "following";
  exports.FONT = "font";
  exports.FORK = "fork";
  exports.FORM = "form";
  exports.FULL_CIRCLE = "full-circle";
  exports.FULL_STACKED_CHART = "full-stacked-chart";
  exports.FULLSCREEN = "fullscreen";
  exports.FUNCTION = "function";
  exports.GANTT_CHART = "gantt-chart";
  exports.GEOLOCATION = "geolocation";
  exports.GEOSEARCH = "geosearch";
  exports.GIT_BRANCH = "git-branch";
  exports.GIT_COMMIT = "git-commit";
  exports.GIT_MERGE = "git-merge";
  exports.GIT_NEW_BRANCH = "git-new-branch";
  exports.GIT_PULL = "git-pull";
  exports.GIT_PUSH = "git-push";
  exports.GIT_REPO = "git-repo";
  exports.GLASS = "glass";
  exports.GLOBE = "globe";
  exports.GLOBE_NETWORK = "globe-network";
  exports.GRAPH = "graph";
  exports.GRAPH_REMOVE = "graph-remove";
  exports.GRID = "grid";
  exports.GRID_VIEW = "grid-view";
  exports.GROUP_OBJECTS = "group-objects";
  exports.GROUPED_BAR_CHART = "grouped-bar-chart";
  exports.HAND = "hand";
  exports.HAND_DOWN = "hand-down";
  exports.HAND_LEFT = "hand-left";
  exports.HAND_RIGHT = "hand-right";
  exports.HAND_UP = "hand-up";
  exports.HEADER = "header";
  exports.HEADER_ONE = "header-one";
  exports.HEADER_TWO = "header-two";
  exports.HEADSET = "headset";
  exports.HEART = "heart";
  exports.HEART_BROKEN = "heart-broken";
  exports.HEAT_GRID = "heat-grid";
  exports.HEATMAP = "heatmap";
  exports.HELP = "help";
  exports.HELPER_MANAGEMENT = "helper-management";
  exports.HIGHLIGHT = "highlight";
  exports.HISTORY = "history";
  exports.HOME = "home";
  exports.HORIZONTAL_BAR_CHART = "horizontal-bar-chart";
  exports.HORIZONTAL_BAR_CHART_ASC = "horizontal-bar-chart-asc";
  exports.HORIZONTAL_BAR_CHART_DESC = "horizontal-bar-chart-desc";
  exports.HORIZONTAL_DISTRIBUTION = "horizontal-distribution";
  exports.ID_NUMBER = "id-number";
  exports.IMAGE_ROTATE_LEFT = "image-rotate-left";
  exports.IMAGE_ROTATE_RIGHT = "image-rotate-right";
  exports.IMPORT = "import";
  exports.INBOX = "inbox";
  exports.INFO_SIGN = "info-sign";
  exports.INNER_JOIN = "inner-join";
  exports.INSERT = "insert";
  exports.INTERSECTION = "intersection";
  exports.IP_ADDRESS = "ip-address";
  exports.ISSUE = "issue";
  exports.ISSUE_CLOSED = "issue-closed";
  exports.ISSUE_NEW = "issue-new";
  exports.ITALIC = "italic";
  exports.JOIN_TABLE = "join-table";
  exports.KEY = "key";
  exports.KEY_BACKSPACE = "key-backspace";
  exports.KEY_COMMAND = "key-command";
  exports.KEY_CONTROL = "key-control";
  exports.KEY_DELETE = "key-delete";
  exports.KEY_ENTER = "key-enter";
  exports.KEY_ESCAPE = "key-escape";
  exports.KEY_OPTION = "key-option";
  exports.KEY_SHIFT = "key-shift";
  exports.KEY_TAB = "key-tab";
  exports.KNOWN_VEHICLE = "known-vehicle";
  exports.LABEL = "label";
  exports.LAYER = "layer";
  exports.LAYERS = "layers";
  exports.LAYOUT = "layout";
  exports.LAYOUT_AUTO = "layout-auto";
  exports.LAYOUT_BALLOON = "layout-balloon";
  exports.LAYOUT_CIRCLE = "layout-circle";
  exports.LAYOUT_GRID = "layout-grid";
  exports.LAYOUT_GROUP_BY = "layout-group-by";
  exports.LAYOUT_HIERARCHY = "layout-hierarchy";
  exports.LAYOUT_LINEAR = "layout-linear";
  exports.LAYOUT_SKEW_GRID = "layout-skew-grid";
  exports.LAYOUT_SORTED_CLUSTERS = "layout-sorted-clusters";
  exports.LEFT_JOIN = "left-join";
  exports.LIFESAVER = "lifesaver";
  exports.LIGHTBULB = "lightbulb";
  exports.LINK = "link";
  exports.LIST = "list";
  exports.LIST_COLUMNS = "list-columns";
  exports.LIST_DETAIL_VIEW = "list-detail-view";
  exports.LOCATE = "locate";
  exports.LOCK = "lock";
  exports.LOG_IN = "log-in";
  exports.LOG_OUT = "log-out";
  exports.MANUAL = "manual";
  exports.MANUALLY_ENTERED_DATA = "manually-entered-data";
  exports.MAP = "map";
  exports.MAP_CREATE = "map-create";
  exports.MAP_MARKER = "map-marker";
  exports.MAXIMIZE = "maximize";
  exports.MEDIA = "media";
  exports.MENU = "menu";
  exports.MENU_CLOSED = "menu-closed";
  exports.MENU_OPEN = "menu-open";
  exports.MERGE_COLUMNS = "merge-columns";
  exports.MERGE_LINKS = "merge-links";
  exports.MINIMIZE = "minimize";
  exports.MINUS = "minus";
  exports.MOBILE_PHONE = "mobile-phone";
  exports.MOBILE_VIDEO = "mobile-video";
  exports.MOON = "moon";
  exports.MORE = "more";
  exports.MOUNTAIN = "mountain";
  exports.MOVE = "move";
  exports.MUGSHOT = "mugshot";
  exports.MULTI_SELECT = "multi-select";
  exports.MUSIC = "music";
  exports.NEW_GRID_ITEM = "new-grid-item";
  exports.NEW_LINK = "new-link";
  exports.NEW_OBJECT = "new-object";
  exports.NEW_PERSON = "new-person";
  exports.NEW_PRESCRIPTION = "new-prescription";
  exports.NEW_TEXT_BOX = "new-text-box";
  exports.NINJA = "ninja";
  exports.NOTIFICATIONS = "notifications";
  exports.NOTIFICATIONS_UPDATED = "notifications-updated";
  exports.NUMBERED_LIST = "numbered-list";
  exports.NUMERICAL = "numerical";
  exports.OFFICE = "office";
  exports.OFFLINE = "offline";
  exports.OIL_FIELD = "oil-field";
  exports.ONE_COLUMN = "one-column";
  exports.OUTDATED = "outdated";
  exports.PAGE_LAYOUT = "page-layout";
  exports.PANEL_STATS = "panel-stats";
  exports.PANEL_TABLE = "panel-table";
  exports.PAPERCLIP = "paperclip";
  exports.PARAGRAPH = "paragraph";
  exports.PATH = "path";
  exports.PATH_SEARCH = "path-search";
  exports.PAUSE = "pause";
  exports.PEOPLE = "people";
  exports.PERCENTAGE = "percentage";
  exports.PERSON = "person";
  exports.PHONE = "phone";
  exports.PIE_CHART = "pie-chart";
  exports.PIN = "pin";
  exports.PIVOT = "pivot";
  exports.PIVOT_TABLE = "pivot-table";
  exports.PLAY = "play";
  exports.PLUS = "plus";
  exports.POLYGON_FILTER = "polygon-filter";
  exports.POWER = "power";
  exports.PREDICTIVE_ANALYSIS = "predictive-analysis";
  exports.PRESCRIPTION = "prescription";
  exports.PRESENTATION = "presentation";
  exports.PRINT = "print";
  exports.PROJECTS = "projects";
  exports.PROPERTIES = "properties";
  exports.PROPERTY = "property";
  exports.PUBLISH_FUNCTION = "publish-function";
  exports.PULSE = "pulse";
  exports.RANDOM = "random";
  exports.RECORD = "record";
  exports.REDO = "redo";
  exports.REFRESH = "refresh";
  exports.REGRESSION_CHART = "regression-chart";
  exports.REMOVE = "remove";
  exports.REMOVE_COLUMN = "remove-column";
  exports.REMOVE_COLUMN_LEFT = "remove-column-left";
  exports.REMOVE_COLUMN_RIGHT = "remove-column-right";
  exports.REMOVE_ROW_BOTTOM = "remove-row-bottom";
  exports.REMOVE_ROW_TOP = "remove-row-top";
  exports.REPEAT = "repeat";
  exports.RESOLVE = "resolve";
  exports.RIG = "rig";
  exports.RIGHT_JOIN = "right-join";
  exports.RING = "ring";
  exports.ROTATE_DOCUMENT = "rotate-document";
  exports.ROTATE_PAGE = "rotate-page";
  exports.SATELLITE = "satellite";
  exports.SAVED = "saved";
  exports.SCATTER_PLOT = "scatter-plot";
  exports.SEARCH = "search";
  exports.SEARCH_AROUND = "search-around";
  exports.SEARCH_TEMPLATE = "search-template";
  exports.SEARCH_TEXT = "search-text";
  exports.SEGMENTED_CONTROL = "segmented-control";
  exports.SELECT = "select";
  exports.SELECTION = "selection";
  exports.SEND_TO = "send-to";
  exports.SEND_TO_GRAPH = "send-to-graph";
  exports.SEND_TO_MAP = "send-to-map";
  exports.SERIES_ADD = "series-add";
  exports.SERIES_CONFIGURATION = "series-configuration";
  exports.SERIES_DERIVED = "series-derived";
  exports.SERIES_FILTERED = "series-filtered";
  exports.SERIES_SEARCH = "series-search";
  exports.SETTINGS = "settings";
  exports.SHARE = "share";
  exports.SHIELD = "shield";
  exports.SHOP = "shop";
  exports.SHOPPING_CART = "shopping-cart";
  exports.SIM_CARD = "sim-card";
  exports.SLASH = "slash";
  exports.SMALL_CROSS = "small-cross";
  exports.SMALL_MINUS = "small-minus";
  exports.SMALL_PLUS = "small-plus";
  exports.SMALL_TICK = "small-tick";
  exports.SNOWFLAKE = "snowflake";
  exports.SOCIAL_MEDIA = "social-media";
  exports.SORT = "sort";
  exports.SORT_ALPHABETICAL = "sort-alphabetical";
  exports.SORT_ALPHABETICAL_DESC = "sort-alphabetical-desc";
  exports.SORT_ASC = "sort-asc";
  exports.SORT_DESC = "sort-desc";
  exports.SORT_NUMERICAL = "sort-numerical";
  exports.SORT_NUMERICAL_DESC = "sort-numerical-desc";
  exports.SPLIT_COLUMNS = "split-columns";
  exports.SQUARE = "square";
  exports.STACKED_CHART = "stacked-chart";
  exports.STAR = "star";
  exports.STAR_EMPTY = "star-empty";
  exports.STEP_BACKWARD = "step-backward";
  exports.STEP_CHART = "step-chart";
  exports.STEP_FORWARD = "step-forward";
  exports.STOP = "stop";
  exports.STRIKETHROUGH = "strikethrough";
  exports.STYLE = "style";
  exports.SWAP_HORIZONTAL = "swap-horizontal";
  exports.SWAP_VERTICAL = "swap-vertical";
  exports.SYMBOL_CIRCLE = "symbol-circle";
  exports.SYMBOL_CROSS = "symbol-cross";
  exports.SYMBOL_DIAMOND = "symbol-diamond";
  exports.SYMBOL_SQUARE = "symbol-square";
  exports.SYMBOL_TRIANGLE_DOWN = "symbol-triangle-down";
  exports.SYMBOL_TRIANGLE_UP = "symbol-triangle-up";
  exports.TAG = "tag";
  exports.TAKE_ACTION = "take-action";
  exports.TAXI = "taxi";
  exports.TEXT_HIGHLIGHT = "text-highlight";
  exports.TH = "th";
  exports.TH_DERIVED = "th-derived";
  exports.TH_FILTERED = "th-filtered";
  exports.TH_LIST = "th-list";
  exports.THUMBS_DOWN = "thumbs-down";
  exports.THUMBS_UP = "thumbs-up";
  exports.TICK = "tick";
  exports.TICK_CIRCLE = "tick-circle";
  exports.TIME = "time";
  exports.TIMELINE_AREA_CHART = "timeline-area-chart";
  exports.TIMELINE_BAR_CHART = "timeline-bar-chart";
  exports.TIMELINE_EVENTS = "timeline-events";
  exports.TIMELINE_LINE_CHART = "timeline-line-chart";
  exports.TINT = "tint";
  exports.TORCH = "torch";
  exports.TRAIN = "train";
  exports.TRANSLATE = "translate";
  exports.TRASH = "trash";
  exports.TREE = "tree";
  exports.TRENDING_DOWN = "trending-down";
  exports.TRENDING_UP = "trending-up";
  exports.TWO_COLUMNS = "two-columns";
  exports.UNDERLINE = "underline";
  exports.UNDO = "undo";
  exports.UNGROUP_OBJECTS = "ungroup-objects";
  exports.UNKNOWN_VEHICLE = "unknown-vehicle";
  exports.UNLOCK = "unlock";
  exports.UNPIN = "unpin";
  exports.UNRESOLVE = "unresolve";
  exports.UPDATED = "updated";
  exports.UPLOAD = "upload";
  exports.USER = "user";
  exports.VARIABLE = "variable";
  exports.VERTICAL_BAR_CHART_ASC = "vertical-bar-chart-asc";
  exports.VERTICAL_BAR_CHART_DESC = "vertical-bar-chart-desc";
  exports.VERTICAL_DISTRIBUTION = "vertical-distribution";
  exports.VIDEO = "video";
  exports.VOLUME_DOWN = "volume-down";
  exports.VOLUME_OFF = "volume-off";
  exports.VOLUME_UP = "volume-up";
  exports.WALK = "walk";
  exports.WARNING_SIGN = "warning-sign";
  exports.WATERFALL_CHART = "waterfall-chart";
  exports.WIDGET = "widget";
  exports.WIDGET_BUTTON = "widget-button";
  exports.WIDGET_FOOTER = "widget-footer";
  exports.WIDGET_HEADER = "widget-header";
  exports.WRENCH = "wrench";
  exports.ZOOM_IN = "zoom-in";
  exports.ZOOM_OUT = "zoom-out";
  exports.ZOOM_TO_FIT = "zoom-to-fit";
  
});
System.registerDynamic("npm:@blueprintjs/icons@3.5.0/lib/cjs/generated/iconSvgPaths.js", [], true, function ($__require, exports, module) {
    /* */
    "use strict";
    /*
     * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
     */

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.IconSvgPaths16 = {
        "add": ["M10.99 6.99h-2v-2c0-.55-.45-1-1-1s-1 .45-1 1v2h-2c-.55 0-1 .45-1 1s.45 1 1 1h2v2c0 .55.45 1 1 1s1-.45 1-1v-2h2c.55 0 1-.45 1-1s-.45-1-1-1zm-3-7c-4.42 0-8 3.58-8 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.68 6-6 6z"],
        "add-column-left": ["M15 0H1C.45 0 0 .45 0 1v14c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-5 14H2V2h8v12zm4 0h-3V2h3v12zM4 9h1v1c0 .55.45 1 1 1s1-.45 1-1V9h1c.55 0 1-.45 1-1s-.45-1-1-1H7V6c0-.55-.45-1-1-1s-1 .45-1 1v1H4c-.55 0-1 .45-1 1s.45 1 1 1z"],
        "add-column-right": ["M8 9h1v1c0 .55.45 1 1 1s1-.45 1-1V9h1c.55 0 1-.45 1-1s-.45-1-1-1h-1V6c0-.55-.45-1-1-1s-1 .45-1 1v1H8c-.55 0-1 .45-1 1s.45 1 1 1zm7-9H1C.45 0 0 .45 0 1v14c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zM5 14H2V2h3v12zm9 0H6V2h8v12z"],
        "add-row-bottom": ["M6 11h1v1c0 .55.45 1 1 1s1-.45 1-1v-1h1c.55 0 1-.45 1-1s-.45-1-1-1H9V8c0-.55-.45-1-1-1s-1 .45-1 1v1H6c-.55 0-1 .45-1 1s.45 1 1 1zm9-11H1C.45 0 0 .45 0 1v14c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 14H2V6h12v8zm0-9H2V2h12v3z"],
        "add-row-top": ["M15 0H1C.45 0 0 .45 0 1v14c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 14H2v-3h12v3zm0-4H2V2h12v8zM6 7h1v1c0 .55.45 1 1 1s1-.45 1-1V7h1c.55 0 1-.45 1-1s-.45-1-1-1H9V4c0-.55-.45-1-1-1s-1 .45-1 1v1H6c-.55 0-1 .45-1 1s.45 1 1 1z"],
        "add-to-artifact": ["M14 4.01h-1v-1c0-.55-.45-1-1-1s-1 .45-1 1v1h-1c-.55 0-1 .45-1 1s.45 1 1 1h1v1c0 .55.45 1 1 1s1-.45 1-1v-1h1c.55 0 1-.45 1-1 0-.56-.45-1-1-1zm-13 2h6c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1zm8 6H1c-.55 0-1 .45-1 1s.45 1 1 1h8c.55 0 1-.45 1-1 0-.56-.45-1-1-1zm0-4H1c-.55 0-1 .45-1 1s.45 1 1 1h8c.55 0 1-.45 1-1 0-.56-.45-1-1-1z"],
        "add-to-folder": ["M.01 7V5H16v7c0 .55-.45 1-1 1H9.005v-2.99C8.974 8.332 7.644 7 5.996 7H.01zM15 2H7.416L5.706.29a.996.996 0 0 0-.71-.29H1C.45 0 0 .45 0 1v3h15.99V3c.01-.55-.44-1-.99-1zM5.997 9H2c-.55 0-1 .45-1 1s.45 1 1 1h1.589L.3 14.29a1.003 1.003 0 0 0 1.42 1.42l3.287-3.29v1.59c0 .55.45 1 1 1 .549 0 .999-.45.999-1v-4A1.02 1.02 0 0 0 5.996 9z"],
        "airplane": ["M16 1.5A1.498 1.498 0 0 0 13.44.44L9.91 3.97 2 1 1 3l5.93 3.95L3.88 10H1l-1 1 3 2 2 3 1-1v-2.88l3.05-3.05L13 15l2-1-2.97-7.91 3.53-3.53c.27-.27.44-.65.44-1.06z"],
        "align-center": ["M4 4c-.55 0-1 .45-1 1s.45 1 1 1h8c.55 0 1-.45 1-1s-.45-1-1-1H4zM1 3h14c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1zm13 10H2c-.55 0-1 .45-1 1s.45 1 1 1h12c.55 0 1-.45 1-1s-.45-1-1-1zm1-6H1c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1zm-5 5c.55 0 1-.45 1-1s-.45-1-1-1H6c-.55 0-1 .45-1 1s.45 1 1 1h4z"],
        "align-justify": ["M15 12.98H1c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1zm-14-10h14c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1 0 .56.45 1 1 1zm14 4H1c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1zm0-3H1c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1zm0 6H1c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1z"],
        "align-left": ["M13 13H1c-.55 0-1 .45-1 1s.45 1 1 1h12c.55 0 1-.45 1-1s-.45-1-1-1zM1 3h14c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1zm0 3h8c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1zm14 1H1c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1zM1 12h4c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1z"],
        "align-right": ["M15 12.98H3c-.55 0-1 .45-1 1s.45 1 1 1h12c.55 0 1-.45 1-1s-.45-1-1-1zm-14-10h14c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1 0 .56.45 1 1 1zm14 1H7c-.55 0-1 .45-1 1s.45 1 1 1h8c.55 0 1-.45 1-1s-.45-1-1-1zm0 6h-4c-.55 0-1 .45-1 1s.45 1 1 1h4c.55 0 1-.45 1-1s-.45-1-1-1zm0-3H1c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1z"],
        "alignment-bottom": ["M10 12h3c.55 0 1-.45 1-1V7c0-.55-.45-1-1-1h-3c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1zm5 2H1c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1zM3 12h3c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1H3c-.55 0-1 .45-1 1v9c0 .55.45 1 1 1z"],
        "alignment-horizontal-center": ["M15 7h-1V6c0-.55-.45-1-1-1h-3c-.55 0-1 .45-1 1v1H7V3c0-.55-.45-1-1-1H3c-.55 0-1 .45-1 1v4H1c-.55 0-1 .45-1 1s.45 1 1 1h1v4c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V9h2v1c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V9h1c.55 0 1-.45 1-1s-.45-1-1-1z"],
        "alignment-left": ["M9 9H5c-.55 0-1 .45-1 1v3c0 .55.45 1 1 1h4c.55 0 1-.45 1-1v-3c0-.55-.45-1-1-1zM1 0C.45 0 0 .45 0 1v14c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1zm13 2H5c-.55 0-1 .45-1 1v3c0 .55.45 1 1 1h9c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1z"],
        "alignment-right": ["M11 9H7c-.55 0-1 .45-1 1v3c0 .55.45 1 1 1h4c.55 0 1-.45 1-1v-3c0-.55-.45-1-1-1zm4-9c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1zm-4 2H2c-.55 0-1 .45-1 1v3c0 .55.45 1 1 1h9c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1z"],
        "alignment-top": ["M15 0H1C.45 0 0 .45 0 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1zM6 4H3c-.55 0-1 .45-1 1v9c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1zm7 0h-3c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1z"],
        "alignment-vertical-center": ["M13 2H9V1c0-.55-.45-1-1-1S7 .45 7 1v1H3c-.55 0-1 .45-1 1v3c0 .55.45 1 1 1h4v2H6c-.55 0-1 .45-1 1v3c0 .55.45 1 1 1h1v1c0 .55.45 1 1 1s1-.45 1-1v-1h1c.55 0 1-.45 1-1v-3c0-.55-.45-1-1-1H9V7h4c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1z"],
        "annotation": ["M15.52 2.77c.3-.29.48-.7.48-1.15C16 .73 15.27 0 14.38 0c-.45 0-.85.18-1.15.48l-1.34 1.34 2.3 2.3 1.33-1.35zM7.4 10.9l6.21-6.21-2.3-2.3L5.1 8.6l2.3 2.3zM14 14H2V2h6.34l2-2H1C.45 0 0 .45 0 1v14c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V5.66l-2 2V14zM3 13l3.58-1.29-2.29-2.27L3 13z"],
        "application": ["M3.5 7h7c.28 0 .5-.22.5-.5s-.22-.5-.5-.5h-7c-.28 0-.5.22-.5.5s.22.5.5.5zM15 1H1c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1zm-1 12H2V5h12v8zM3.5 9h4c.28 0 .5-.22.5-.5S7.78 8 7.5 8h-4c-.28 0-.5.22-.5.5s.22.5.5.5zm0 2h5c.28 0 .5-.22.5-.5s-.22-.5-.5-.5h-5c-.28 0-.5.22-.5.5s.22.5.5.5z"],
        "applications": ["M3.5 11h2c.28 0 .5-.22.5-.5s-.22-.5-.5-.5h-2c-.28 0-.5.22-.5.5s.22.5.5.5zm0-2h5c.28 0 .5-.22.5-.5S8.78 8 8.5 8h-5c-.28 0-.5.22-.5.5s.22.5.5.5zM11 4H1c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h10c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1zm-1 10H2V7h8v7zm5-14H5c-.55 0-1 .45-1 1v2h2V2h8v7h-1v2h2c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zM3.5 13h3c.28 0 .5-.22.5-.5s-.22-.5-.5-.5h-3c-.28 0-.5.22-.5.5s.22.5.5.5z"],
        "arrow-bottom-left": ["M14 3a1.003 1.003 0 0 0-1.71-.71L4 10.59V6c0-.55-.45-1-1-1s-1 .45-1 1v7c0 .55.45 1 1 1h7c.55 0 1-.45 1-1s-.45-1-1-1H5.41l8.29-8.29c.19-.18.3-.43.3-.71z"],
        "arrow-bottom-right": ["M13 5c-.55 0-1 .45-1 1v4.59l-8.29-8.3a1.003 1.003 0 0 0-1.42 1.42l8.3 8.29H6c-.55 0-1 .45-1 1s.45 1 1 1h7c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1z"],
        "arrow-down": ["M13 8c-.3 0-.5.1-.7.3L9 11.6V2c0-.5-.4-1-1-1s-1 .5-1 1v9.6L3.7 8.3C3.5 8.1 3.3 8 3 8c-.5 0-1 .5-1 1 0 .3.1.5.3.7l5 5c.2.2.4.3.7.3s.5-.1.7-.3l5-5c.2-.2.3-.4.3-.7 0-.6-.4-1-1-1z"],
        "arrow-left": ["M13.99 6.99H4.41L7.7 3.7a1.003 1.003 0 0 0-1.42-1.42l-5 5a1.014 1.014 0 0 0 0 1.42l5 5a1.003 1.003 0 0 0 1.42-1.42L4.41 8.99H14c.55 0 1-.45 1-1s-.46-1-1.01-1z"],
        "arrow-right": ["M14.7 7.29l-5-5a.965.965 0 0 0-.71-.3 1.003 1.003 0 0 0-.71 1.71l3.29 3.29H1.99c-.55 0-1 .45-1 1s.45 1 1 1h9.59l-3.29 3.29a1.003 1.003 0 0 0 1.42 1.42l5-5c.18-.18.29-.43.29-.71s-.12-.52-.3-.7z"],
        "arrow-top-left": ["M13.71 12.29L5.41 4H10c.55 0 1-.45 1-1s-.45-1-1-1H3c-.55 0-1 .45-1 1v7c0 .55.45 1 1 1s1-.45 1-1V5.41l8.29 8.29c.18.19.43.3.71.3a1.003 1.003 0 0 0 .71-1.71z"],
        "arrow-top-right": ["M13 2H6c-.55 0-1 .45-1 1s.45 1 1 1h4.59L2.3 12.29c-.19.18-.3.43-.3.71a1.003 1.003 0 0 0 1.71.71L12 5.41V10c0 .55.45 1 1 1s1-.45 1-1V3c0-.55-.45-1-1-1z"],
        "arrow-up": ["M13.7 6.3l-5-5C8.5 1.1 8.3 1 8 1s-.5.1-.7.3l-5 5c-.2.2-.3.4-.3.7 0 .6.5 1 1 1 .3 0 .5-.1.7-.3L7 4.4V14c0 .6.4 1 1 1s1-.4 1-1V4.4l3.3 3.3c.2.2.4.3.7.3.6 0 1-.4 1-1 0-.3-.1-.5-.3-.7z"],
        "arrows-horizontal": ["M15.7 7.3l-4-4c-.2-.2-.4-.3-.7-.3-.6 0-1 .5-1 1 0 .3.1.5.3.7L12.6 7H3.4l2.3-2.3c.2-.2.3-.4.3-.7 0-.5-.4-1-1-1-.3 0-.5.1-.7.3l-4 4c-.2.2-.3.4-.3.7s.1.5.3.7l4 4c.2.2.4.3.7.3.6 0 1-.4 1-1 0-.3-.1-.5-.3-.7L3.4 9h9.2l-2.3 2.3c-.2.2-.3.4-.3.7 0 .6.4 1 1 1 .3 0 .5-.1.7-.3l4-4c.2-.2.3-.4.3-.7s-.1-.5-.3-.7z"],
        "arrows-vertical": ["M12 10c-.3 0-.5.1-.7.3L9 12.6V3.4l2.3 2.3c.2.2.4.3.7.3.6 0 1-.4 1-1 0-.3-.1-.5-.3-.7l-4-4C8.5.1 8.3 0 8 0s-.5.1-.7.3l-4 4c-.2.2-.3.4-.3.7 0 .6.5 1 1 1 .3 0 .5-.1.7-.3L7 3.4v9.2l-2.3-2.3c-.2-.2-.4-.3-.7-.3-.5 0-1 .4-1 1 0 .3.1.5.3.7l4 4c.2.2.4.3.7.3s.5-.1.7-.3l4-4c.2-.2.3-.4.3-.7 0-.6-.4-1-1-1z"],
        "asterisk": ["M14.54 11.18l.01-.02L9.8 8l4.75-3.17-.01-.02c.27-.17.46-.46.46-.81 0-.55-.45-1-1-1-.21 0-.39.08-.54.18l-.01-.02L9 6.13V1c0-.55-.45-1-1-1S7 .45 7 1v5.13L2.55 3.17l-.01.01A.969.969 0 0 0 2 3c-.55 0-1 .45-1 1 0 .35.19.64.46.82l-.01.01L6.2 8l-4.75 3.17.01.02c-.27.17-.46.46-.46.81 0 .55.45 1 1 1 .21 0 .39-.08.54-.18l.01.02L7 9.87V15c0 .55.45 1 1 1s1-.45 1-1V9.87l4.45 2.96.01-.02c.15.11.33.19.54.19.55 0 1-.45 1-1 0-.35-.19-.64-.46-.82z"],
        "automatic-updates": ["M8 14c-3.31 0-6-2.69-6-6 0-1.77.78-3.36 2-4.46V5c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1H1C.45 0 0 .45 0 1s.45 1 1 1h1.74A7.95 7.95 0 0 0 0 8c0 4.42 3.58 8 8 8 .55 0 1-.45 1-1s-.45-1-1-1zM8 2a5.9 5.9 0 0 1 2.95.81l1.47-1.47A7.893 7.893 0 0 0 8 0c-.55 0-1 .45-1 1s.45 1 1 1zm2.71 6.71l5-5a1.003 1.003 0 0 0-1.42-1.42L10 6.59l-1.29-1.3a1.003 1.003 0 0 0-1.42 1.42l2 2c.18.18.43.29.71.29s.53-.11.71-.29zM16 8c0-.55-.06-1.08-.16-1.6l-1.87 1.87A5.966 5.966 0 0 1 12 12.45V11c0-.55-.45-1-1-1s-1 .45-1 1v4c0 .55.45 1 1 1h4c.55 0 1-.45 1-1s-.45-1-1-1h-1.74A7.95 7.95 0 0 0 16 8z"],
        "badge": ["M13.36 4.59c-.15-1.13.5-2.01 1.1-2.87L13.43.53c-1.72.88-4.12.65-5.63-.53-1.51 1.18-3.91 1.41-5.63.52l-1.03 1.2c.61.86 1.25 1.74 1.1 2.87-.3 2.29-2.45 4.17-1.32 6.68.45 1.14 1.44 1.9 2.72 2.2 1.56.36 3.52.72 4.16 2.53.64-1.81 2.6-2.16 4.16-2.54 1.28-.3 2.27-1.06 2.72-2.2 1.12-2.5-1.03-4.38-1.32-6.67z"],
        "ban-circle": ["M8 0C3.58 0 0 3.58 0 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm3 9H5c-.55 0-1-.45-1-1s.45-1 1-1h6c.55 0 1 .45 1 1s-.45 1-1 1z"],
        "bank-account": ["M15.36 6.46l-.62-.14c-.31-1.12-.98-2.15-1.87-2.99l.4-1.77a.438.438 0 0 0-.49-.56c-.85.09-1.6.42-2.14.98-.84-.32-1.87-.51-2.85-.51-2.49 0-4.63 1.17-5.92 2.89-.18-.04-.36-.09-.53-.09-.76 0-1.34.61-1.34 1.4 0 .56.31 1.03.76 1.26-.05.33-.09.7-.09 1.07 0 1.68.71 3.17 1.83 4.34l-.27 1.59c-.09.56.35 1.07.89 1.07h.58c.45 0 .8-.33.89-.79l.04-.37c.94.42 2 .7 3.16.7 1.11 0 2.23-.23 3.16-.7l.05.37c.09.47.45.79.89.79h.58c.53 0 .98-.51.89-1.07l-.27-1.54c.62-.61 1.07-1.35 1.38-2.15l.8-.19c.4-.09.71-.47.71-.93V7.4c.09-.47-.22-.84-.62-.94zM12 8c-.6 0-1-.7-1-1.5S11.4 5 12 5s1 .7 1 1.5S12.6 8 12 8zM6.21 4.92c-.41.2-.91.04-1.12-.36-.21-.4-.04-.88.37-1.07 1.35-.65 2.73-.65 4.08 0 .41.2.58.68.37 1.07-.21.4-.71.56-1.12.36-.87-.43-1.71-.43-2.58 0z"],
        "barcode": ["M0 14h2V2H0v12zm6 0h1V2H6v12zm2 0h1V2H8v12zm-5 0h2V2H3v12zM15 2v12h1V2h-1zm-5 12h1V2h-1v12zm2 0h2V2h-2v12z"],
        "blank": [],
        "blocked-person": ["M9.39 12.69c-1.2-.53-1.04-.85-1.08-1.29-.01-.07-.01-.13-.02-.2.41-.37.75-.87.97-1.44 0 0 .01-.03.01-.04.05-.13.09-.26.13-.39.27-.06.43-.36.5-.63.01-.03.03-.08.05-.12C8.18 7.8 6.94 6.04 6.94 4c0-.32.04-.62.09-.92-.17-.03-.35-.08-.51-.08-.65 0-1.37.2-1.88.59-.5.38-.87.92-1.05 1.51-.04.14-.07.27-.09.41-.09.48-.14 1.23-.14 1.74v.06c-.19.08-.36.27-.4.68-.03.31.1.59.16.7.06.28.23.59.51.64.04.14.08.27.13.39 0 .01.01.02.01.02v.01c.22.59.57 1.1.99 1.46 0 .06-.01.12-.01.17-.04.44.08.76-1.12 1.29-1.2.53-3.01 1.1-3.38 1.95C-.12 15.5.03 16 .03 16h12.96s.15-.5-.22-1.36c-.37-.85-2.18-1.42-3.38-1.95zM11.97 0C9.75 0 7.94 1.79 7.94 4s1.8 4 4.03 4S16 6.21 16 4s-1.8-4-4.03-4zM9.96 4c0-1.1.9-2 2.01-2 .37 0 .72.11 1.02.28l-2.75 2.73c-.17-.3-.28-.64-.28-1.01zm2.01 2c-.37 0-.72-.11-1.02-.28l2.75-2.73c.18.3.28.64.28 1.01.01 1.1-.9 2-2.01 2z"],
        "bold": ["M11.7 7c.2-.4.3-1 .3-1.5v-.4V5c0-.1 0-.2-.1-.3v-.1C11.4 3.1 10.1 2 8.5 2H4c-.5 0-1 .4-1 1v10c0 .5.4 1 1 1h5c2.2 0 4-1.8 4-4 0-1.2-.5-2.3-1.3-3zM6 5h2c.6 0 1 .4 1 1s-.4 1-1 1H6V5zm3 6H6V9h3c.6 0 1 .4 1 1s-.4 1-1 1z"],
        "book": ["M2 1v14c0 .55.45 1 1 1h1V0H3c-.55 0-1 .45-1 1zm11-1h-1v7l-2-2-2 2V0H5v16h8c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1z"],
        "bookmark": ["M11.2.01h-.15C11.03.01 11.02 0 11 0H5c-.02 0-.03.01-.05.01H4.8c-.44 0-.8.37-.8.82v14.75c0 .45.25.56.57.24l2.87-2.94c.31-.32.82-.32 1.13 0l2.87 2.94c.31.32.57.21.57-.24V.83C12 .38 11.64.01 11.2.01z"],
        "box": ["M6 10h4c.55 0 1-.45 1-1s-.45-1-1-1H6c-.55 0-1 .45-1 1s.45 1 1 1zm9.93-4.37v-.02L13.94.63C13.78.26 13.42 0 13 0H3c-.42 0-.78.26-.93.63L.08 5.61l-.01.02C.03 5.74 0 5.87 0 6v9c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V6c0-.13-.03-.26-.07-.37zM9 2h3.32l1.2 3H9V2zM3.68 2H7v3H2.48l1.2-3zM14 14H2V7h12v7z"],
        "briefcase": ["M15 3.98h-3v-2c0-.55-.45-1-1-1H5c-.55 0-1 .45-1 1v2H1c-.55 0-1 .45-1 1v4h3v-1h2v1h6v-1h2v1h3v-4c0-.55-.45-1-1-1zm-5 0H6v-1h4v1zm3 7h-2v-1H5v1H3v-1H0v4c0 .55.45 1 1 1h14c.55 0 1-.45 1-1v-4h-3v1z"],
        "build": ["M15.39 12.41L7.7 6l1.07-1.1c.34-.34-.12-.63.12-1.26.88-2.17 3.41-2.35 3.41-2.35s.36-.37.71-.72C9.74-.81 7.53.53 6.54 1.4L3.12 4.9l-.71.72c-.39.4-.39 1.05 0 1.45l-.7.72c-.39-.4-1.02-.4-1.41 0s-.39 1.05 0 1.45l1.41 1.45c.39.4 1.02.4 1.41 0s.39-1.05 0-1.45l.71-.72c.39.4 1.02.4 1.41 0l.8-.82 6.39 7.67c.82.82 2.14.82 2.96 0 .81-.82.81-2.15 0-2.96z"],
        "calculator": ["M13 0H3c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1h10c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zM6 14H4v-2h2v2zm0-3H4V9h2v2zm0-3H4V6h2v2zm3 6H7v-2h2v2zm0-3H7V9h2v2zm0-3H7V6h2v2zm3 6h-2V9h2v5zm0-6h-2V6h2v2zm0-3H4V2h8v3z"],
        "calendar": ["M11 3c.6 0 1-.5 1-1V1c0-.6-.4-1-1-1s-1 .4-1 1v1c0 .5.4 1 1 1zm3-2h-1v1c0 1.1-.9 2-2 2s-2-.9-2-2V1H6v1c0 1.1-.9 2-2 2s-2-.9-2-2V1H1c-.6 0-1 .5-1 1v12c0 .6.4 1 1 1h13c.6 0 1-.4 1-1V2c0-.6-.5-1-1-1zM5 13H2v-3h3v3zm0-4H2V6h3v3zm4 4H6v-3h3v3zm0-4H6V6h3v3zm4 4h-3v-3h3v3zm0-4h-3V6h3v3zM4 3c.6 0 1-.5 1-1V1c0-.6-.4-1-1-1S3 .4 3 1v1c0 .5.4 1 1 1z"],
        "camera": ["M15 3h-2.59L10.7 1.29A.956.956 0 0 0 10 1H6c-.28 0-.53.11-.71.29L3.59 3H1c-.55 0-1 .45-1 1v7c0 .55.45 1 1 1h2.56c1.1 1.22 2.67 2 4.44 2s3.34-.78 4.44-2H15c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1zM3 6H1V5h2v1zm5 6c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4zm0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"],
        "caret-down": ["M12 6.5c0-.28-.22-.5-.5-.5h-7a.495.495 0 0 0-.37.83l3.5 4c.09.1.22.17.37.17s.28-.07.37-.17l3.5-4c.08-.09.13-.2.13-.33z"],
        "caret-left": ["M9.5 4c-.13 0-.24.05-.33.13l-4 3.5c-.1.09-.17.22-.17.37s.07.28.17.37l4 3.5a.495.495 0 0 0 .83-.37v-7c0-.28-.22-.5-.5-.5z"],
        "caret-right": ["M11 8c0-.15-.07-.28-.17-.37l-4-3.5A.495.495 0 0 0 6 4.5v7a.495.495 0 0 0 .83.37l4-3.5c.1-.09.17-.22.17-.37z"],
        "caret-up": ["M11.87 9.17s.01 0 0 0l-3.5-4C8.28 5.07 8.15 5 8 5s-.28.07-.37.17l-3.5 4a.495.495 0 0 0 .37.83h7a.495.495 0 0 0 .37-.83z"],
        "cell-tower": ["M8.97 6.76c-.01-.05-.04-.08-.06-.13-.02-.05-.03-.1-.05-.15.08-.14.14-.3.14-.48 0-.55-.45-1-1-1s-1 .45-1 1c0 .18.06.34.14.48-.03.05-.03.1-.05.15-.02.05-.05.08-.06.13l-2 8c-.13.54.19 1.08.73 1.21a.995.995 0 0 0 1.21-.73L7.53 13h.94l.56 2.24a1 1 0 0 0 1.94-.48l-2-8zM3.72 1.7C4.1 1.3 4.09.67 3.7.28S2.67-.09 2.28.3c-3.05 3.12-3.05 8.28 0 11.4a.996.996 0 1 0 1.43-1.39c-2.28-2.35-2.28-6.27.01-8.61zM11.6 3.2c-.44-.33-1.07-.24-1.4.2-.33.44-.24 1.07.2 1.4.43.32.53 1.96-.04 2.43-.42.35-.48.98-.13 1.41.35.42.98.48 1.41.13 1.59-1.33 1.39-4.5-.04-5.57z", "M13.72.3c-.39-.4-1.02-.4-1.41-.02s-.41 1.02-.03 1.42c2.29 2.34 2.29 6.26 0 8.6-.39.39-.38 1.03.02 1.41s1.03.38 1.41-.02c3.05-3.11 3.05-8.27.01-11.39zM5.4 7.23c-.57-.47-.47-2.11-.04-2.43.44-.33.53-.96.2-1.4s-.96-.53-1.4-.2c-1.44 1.07-1.63 4.24-.04 5.57.42.35 1.05.3 1.41-.13.35-.42.29-1.06-.13-1.41z"],
        "changes": ["M8.29 7.71l3 3c.18.18.43.29.71.29s.53-.11.71-.29l3-3a1.003 1.003 0 0 0-1.42-1.42L13 7.59V1c0-.55-.45-1-1-1s-1 .45-1 1v6.59l-1.29-1.3a1.003 1.003 0 0 0-1.42 1.42zM14.5 13h-13c-.83 0-1.5.67-1.5 1.5S.67 16 1.5 16h13c.83 0 1.5-.67 1.5-1.5s-.67-1.5-1.5-1.5zM1 5c.28 0 .53-.11.71-.29L3 3.41V10c0 .55.45 1 1 1s1-.45 1-1V3.41L6.29 4.7c.18.19.43.3.71.3a1.003 1.003 0 0 0 .71-1.71l-3-3C4.53.11 4.28 0 4 0s-.53.11-.71.29l-3 3A1.003 1.003 0 0 0 1 5z"],
        "chart": ["M0 15c0 .55.45 1 1 1h2c.55 0 1-.45 1-1V9.4L0 11v4zm6-5.5V15c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-5l-1 1-3-1.5zM13 7l-1 1v7c0 .55.45 1 1 1h2c.55 0 1-.45 1-1V7.88c-.26.07-.58.12-1 .12-1.96 0-2-1-2-1zm2-6h-3c-.55 0-1 .45-1 1s.45 1 1 1h.59L8.8 6.78 5.45 5.11v.01C5.31 5.05 5.16 5 5 5s-.31.05-.44.11V5.1l-4 2v.01C.23 7.28 0 7.61 0 8c0 .55.45 1 1 1 .16 0 .31-.05.44-.11v.01L5 7.12 8.55 8.9v-.01c.14.06.29.11.45.11.28 0 .53-.11.71-.29L14 4.41V5c0 .55.45 1 1 1s1-.45 1-1V2c0-.55-.45-1-1-1z"],
        "chat": ["M6 10c-1.1 0-2-.9-2-2V3H1c-.55 0-1 .45-1 1v8c0 .55.45 1 1 1v2a1.003 1.003 0 0 0 1.71.71L5.41 13H10c.55 0 1-.45 1-1v-1.17l-.83-.83H6zm9-10H6c-.55 0-1 .45-1 1v7c0 .55.45 1 1 1h4.59l2.71 2.71c.17.18.42.29.7.29.55 0 1-.45 1-1V9c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1z"],
        "chevron-backward": ["M7.41 8l3.29-3.29c.19-.18.3-.43.3-.71a1.003 1.003 0 0 0-1.71-.71L6 6.59V4c0-.55-.45-1-1-1s-1 .45-1 1v8c0 .55.45 1 1 1s1-.45 1-1V9.41l3.29 3.29c.18.19.43.3.71.3a1.003 1.003 0 0 0 .71-1.71L7.41 8z"],
        "chevron-down": ["M12 5c-.28 0-.53.11-.71.29L8 8.59l-3.29-3.3a1.003 1.003 0 0 0-1.42 1.42l4 4c.18.18.43.29.71.29s.53-.11.71-.29l4-4A1.003 1.003 0 0 0 12 5z"],
        "chevron-forward": ["M10 3c-.55 0-1 .45-1 1v2.59l-3.29-3.3a1.003 1.003 0 0 0-1.42 1.42L7.59 8 4.3 11.29c-.19.18-.3.43-.3.71a1.003 1.003 0 0 0 1.71.71L9 9.41V12c0 .55.45 1 1 1s1-.45 1-1V4c0-.55-.45-1-1-1z"],
        "chevron-left": ["M7.41 8l3.29-3.29c.19-.18.3-.43.3-.71a1.003 1.003 0 0 0-1.71-.71l-4 4C5.11 7.47 5 7.72 5 8c0 .28.11.53.29.71l4 4a1.003 1.003 0 0 0 1.42-1.42L7.41 8z"],
        "chevron-right": ["M10.71 7.29l-4-4a1.003 1.003 0 0 0-1.42 1.42L8.59 8 5.3 11.29c-.19.18-.3.43-.3.71a1.003 1.003 0 0 0 1.71.71l4-4c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71z"],
        "chevron-up": ["M12.71 9.29l-4-4C8.53 5.11 8.28 5 8 5s-.53.11-.71.29l-4 4a1.003 1.003 0 0 0 1.42 1.42L8 7.41l3.29 3.29c.18.19.43.3.71.3a1.003 1.003 0 0 0 .71-1.71z"],
        "circle": ["M8 0C3.6 0 0 3.6 0 8s3.6 8 8 8 8-3.6 8-8-3.6-8-8-8zm0 14c-3.3 0-6-2.7-6-6s2.7-6 6-6 6 2.7 6 6-2.7 6-6 6z"],
        "circle-arrow-down": ["M11 7c-.28 0-.53.11-.71.29L9 8.59V5c0-.55-.45-1-1-1s-1 .45-1 1v3.59l-1.29-1.3a1.003 1.003 0 0 0-1.42 1.42l3 3c.18.18.43.29.71.29s.53-.11.71-.29l3-3A1.003 1.003 0 0 0 11 7zM8 0C3.58 0 0 3.58 0 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.69 6-6 6z"],
        "circle-arrow-left": ["M11 7H7.41L8.7 5.71c.19-.18.3-.43.3-.71a1.003 1.003 0 0 0-1.71-.71l-3 3C4.11 7.47 4 7.72 4 8c0 .28.11.53.29.71l3 3a1.003 1.003 0 0 0 1.42-1.42L7.41 9H11c.55 0 1-.45 1-1s-.45-1-1-1zM8 0C3.58 0 0 3.58 0 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.69 6-6 6z"],
        "circle-arrow-right": ["M8.71 4.29a1.003 1.003 0 0 0-1.42 1.42L8.59 7H5c-.55 0-1 .45-1 1s.45 1 1 1h3.59L7.3 10.29c-.19.18-.3.43-.3.71a1.003 1.003 0 0 0 1.71.71l3-3c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71l-3-3zM8 0C3.58 0 0 3.58 0 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.69 6-6 6z"],
        "circle-arrow-up": ["M8.71 4.29C8.53 4.11 8.28 4 8 4s-.53.11-.71.29l-3 3a1.003 1.003 0 0 0 1.42 1.42L7 7.41V11c0 .55.45 1 1 1s1-.45 1-1V7.41l1.29 1.29c.18.19.43.3.71.3a1.003 1.003 0 0 0 .71-1.71l-3-3zM8 0C3.58 0 0 3.58 0 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.69 6-6 6z"],
        "citation": ["M15.02 5c0-1.66-1.34-3-3-3s-3 1.34-3 3a2.996 2.996 0 0 0 3.6 2.94C12.1 9.76 11.14 11 10.02 11c-.55 0-1 .45-1 1s.45 1 1 1c2.76 0 5-3.13 5-7 0-.2-.02-.39-.04-.58.01-.14.04-.28.04-.42zm-11-3c-1.66 0-3 1.34-3 3a2.996 2.996 0 0 0 3.6 2.94C4.1 9.76 3.14 11 2.02 11c-.55 0-1 .45-1 1s.45 1 1 1c2.76 0 5-3.13 5-7 0-.2-.02-.39-.04-.58.01-.14.04-.28.04-.42 0-1.66-1.35-3-3-3z"],
        "clean": ["M12 8l-1.2 2.796-2.8 1.2 2.8 1.197L12 16l1.2-2.807L16 12l-2.8-1.204zM5 0L3.5 3.5 0 4.995 3.5 6.5 5 10l1.5-3.5L10 5 6.5 3.5z"],
        "clipboard": ["M11 2c0-.55-.45-1-1-1h.22C9.88.4 9.24 0 8.5 0S7.12.4 6.78 1H7c-.55 0-1 .45-1 1v1h5V2zm2 0h-1v2H5V2H4c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h9c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1z"],
        "cloud": ["M12 6c-.03 0-.07 0-.1.01A5 5 0 0 0 2 7c0 .11.01.22.02.33A3.51 3.51 0 0 0 0 10.5C0 12.43 1.57 14 3.5 14H12c2.21 0 4-1.79 4-4s-1.79-4-4-4z"],
        "cloud-download": ["M11 11c-.28 0-.53.11-.71.29L9 12.59V8c0-.55-.45-1-1-1s-1 .45-1 1v4.59L5.71 11.3A.965.965 0 0 0 5 11a1.003 1.003 0 0 0-.71 1.71l3 3c.18.18.43.29.71.29s.53-.11.71-.29l3-3A1.003 1.003 0 0 0 11 11zm1-7c-.03 0-.07 0-.1.01A5 5 0 0 0 2 5c0 .11.01.22.02.33A3.51 3.51 0 0 0 0 8.5c0 1.41.84 2.61 2.03 3.17C2.2 10.17 3.46 9 5 9c.06 0 .13.02.19.02C5.07 8.7 5 8.36 5 8c0-1.66 1.34-3 3-3s3 1.34 3 3c0 .36-.07.7-.19 1.02.06 0 .13-.02.19-.02 1.48 0 2.7 1.07 2.95 2.47A3.964 3.964 0 0 0 16 8c0-2.21-1.79-4-4-4z"],
        "cloud-upload": ["M8.71 7.29C8.53 7.11 8.28 7 8 7s-.53.11-.71.29l-3 3a1.003 1.003 0 0 0 1.42 1.42L7 10.41V15c0 .55.45 1 1 1s1-.45 1-1v-4.59l1.29 1.29c.18.19.43.3.71.3a1.003 1.003 0 0 0 .71-1.71l-3-3zM12 4c-.03 0-.07 0-.1.01A5 5 0 0 0 2 5c0 .11.01.22.02.33a3.495 3.495 0 0 0 .07 6.37c-.05-.23-.09-.46-.09-.7 0-.83.34-1.58.88-2.12l3-3a2.993 2.993 0 0 1 4.24 0l3 3c.54.54.88 1.29.88 2.12 0 .16-.02.32-.05.47C15.17 10.78 16 9.5 16 8c0-2.21-1.79-4-4-4z"],
        "code": ["M15.71 7.29l-3-3a1.003 1.003 0 0 0-1.42 1.42L13.59 8l-2.29 2.29c-.19.18-.3.43-.3.71a1.003 1.003 0 0 0 1.71.71l3-3c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71zM5 5a1.003 1.003 0 0 0-1.71-.71l-3 3C.11 7.47 0 7.72 0 8c0 .28.11.53.29.71l3 3a1.003 1.003 0 0 0 1.42-1.42L2.41 8 4.7 5.71c.19-.18.3-.43.3-.71zm4-3c-.48 0-.87.35-.96.81l-2 10c-.01.06-.04.12-.04.19 0 .55.45 1 1 1 .48 0 .87-.35.96-.81l2-10c.01-.06.04-.12.04-.19 0-.55-.45-1-1-1z"],
        "code-block": ["M15 3h-2V2c0-.55-.45-1-1-1h-2c-.55 0-1 .45-1 1v1H7V2c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1v1H1c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1zm-8.29 8.29a1.003 1.003 0 0 1-1.42 1.42l-3-3C2.11 9.53 2 9.28 2 9s.11-.53.29-.71l3-3a1.003 1.003 0 0 1 1.42 1.42L4.41 9l2.3 2.29zm7-1.58l-3 3a1.003 1.003 0 0 1-1.42-1.42L11.59 9l-2.3-2.29a1.003 1.003 0 0 1 1.42-1.42l3 3c.18.18.29.43.29.71s-.11.53-.29.71z"],
        "cog": ["M15.19 6.39h-1.85c-.11-.37-.27-.71-.45-1.04l1.36-1.36c.31-.31.31-.82 0-1.13l-1.13-1.13a.803.803 0 0 0-1.13 0l-1.36 1.36c-.33-.17-.67-.33-1.04-.44V.79c0-.44-.36-.8-.8-.8h-1.6c-.44 0-.8.36-.8.8v1.86c-.39.12-.75.28-1.1.47l-1.3-1.3c-.3-.3-.79-.3-1.09 0L1.82 2.91c-.3.3-.3.79 0 1.09l1.3 1.3c-.2.34-.36.7-.48 1.09H.79c-.44 0-.8.36-.8.8v1.6c0 .44.36.8.8.8h1.85c.11.37.27.71.45 1.04l-1.36 1.36c-.31.31-.31.82 0 1.13l1.13 1.13c.31.31.82.31 1.13 0l1.36-1.36c.33.18.67.33 1.04.44v1.86c0 .44.36.8.8.8h1.6c.44 0 .8-.36.8-.8v-1.86c.39-.12.75-.28 1.1-.47l1.3 1.3c.3.3.79.3 1.09 0l1.09-1.09c.3-.3.3-.79 0-1.09l-1.3-1.3c.19-.35.36-.71.48-1.1h1.85c.44 0 .8-.36.8-.8v-1.6a.816.816 0 0 0-.81-.79zm-7.2 4.6c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3z"],
        "collapse-all": ["M7.29 6.71c.18.18.43.29.71.29s.53-.11.71-.29l4-4a1.003 1.003 0 0 0-1.42-1.42L8 4.59l-3.29-3.3a1.003 1.003 0 0 0-1.42 1.42l4 4zm1.42 2.58C8.53 9.11 8.28 9 8 9s-.53.11-.71.29l-4 4a1.003 1.003 0 0 0 1.42 1.42L8 11.41l3.29 3.29c.18.19.43.3.71.3a1.003 1.003 0 0 0 .71-1.71l-4-4z"],
        "column-layout": ["M15 1H1c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1zM4 13H2V3h2v10zm3 0H5V3h2v10zm7 0H8V3h6v10z"],
        "comment": ["M14 1H1c-.55 0-1 .45-1 1v9c0 .55.45 1 1 1h2v3a1.003 1.003 0 0 0 1.71.71L8.41 12H14c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1zM3.5 8C2.67 8 2 7.33 2 6.5S2.67 5 3.5 5 5 5.67 5 6.5 4.33 8 3.5 8zm4 0C6.67 8 6 7.33 6 6.5S6.67 5 7.5 5 9 5.67 9 6.5 8.33 8 7.5 8zm4 0c-.83 0-1.5-.67-1.5-1.5S10.67 5 11.5 5s1.5.67 1.5 1.5S12.33 8 11.5 8z"],
        "comparison": ["M7.99-.01c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1s1-.45 1-1v-14c0-.55-.45-1-1-1zm-3 3h-4c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h4c.55 0 1-.45 1-1v-2c0-.55-.45-1-1-1zm10 0h-4c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h4c.55 0 1-.45 1-1v-2c0-.55-.45-1-1-1zm0 3h-4v-2h4v2zm0 3h-4c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h4c.55 0 1-.45 1-1v-2c0-.55-.45-1-1-1zm0 3h-4v-2h4v2zm-10-3h-4c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h4c.55 0 1-.45 1-1v-2c0-.55-.45-1-1-1z"],
        "compass": ["M12 8c0 .14-.03.27-.08.39l-3 6.99c-.15.37-.51.62-.92.62s-.77-.25-.92-.61l-3-6.99a1.006 1.006 0 0 1 0-.79l3-6.99C7.23.25 7.59 0 8 0s.77.25.92.61l3 6.99c.05.13.08.26.08.4zM8 3.54L6.09 8h3.82L8 3.54z"],
        "compressed": ["M15.93 5.63v-.02L13.94.63C13.78.26 13.42 0 13 0H3c-.42 0-.78.26-.93.63L.08 5.61l-.01.02C.03 5.74 0 5.87 0 6v9c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V6c0-.13-.03-.26-.07-.37zM9 2h3.32l1.2 3H9V2zM3.68 2H7v3H2.48l1.2-3zM14 14H2V7h5v2.59l-1.29-1.3a1.003 1.003 0 0 0-1.42 1.42l3 3c.18.18.43.29.71.29s.53-.11.71-.29l3-3a1.003 1.003 0 0 0-1.42-1.42L9 9.59V7h5v7z"],
        "confirm": ["M8.7 4.29a.965.965 0 0 0-.71-.3 1.003 1.003 0 0 0-.71 1.71l2 2c.18.18.43.29.71.29s.53-.11.71-.29l5-5a1.003 1.003 0 0 0-1.42-1.42l-4.29 4.3L8.7 4.29zm5.22 3.01c.03.23.07.45.07.69 0 3.31-2.69 6-6 6s-6-2.69-6-6 2.69-6 6-6c.81 0 1.59.17 2.3.46l1.5-1.5A7.998 7.998 0 0 0-.01 7.99c0 4.42 3.58 8 8 8s8-3.58 8-8c0-.83-.13-1.64-.36-2.39l-1.71 1.7z"],
        "console": ["M15 15H1c-.55 0-1-.45-1-1V2c0-.55.45-1 1-1h14c.55 0 1 .45 1 1v12c0 .55-.45 1-1 1zM14 5H2v8h12V5zM4 6c.28 0 .53.11.71.29l2 2c.18.18.29.43.29.71s-.11.53-.29.71l-2 2a1.003 1.003 0 0 1-1.42-1.42L4.59 9l-1.3-1.29A1.003 1.003 0 0 1 4 6zm5 4h3c.55 0 1 .45 1 1s-.45 1-1 1H9c-.55 0-1-.45-1-1s.45-1 1-1z"],
        "contrast": ["M15.2 6.4h-1.44c-.13-.47-.32-.92-.56-1.34L14.26 4c.31-.31.31-.82 0-1.13l-1.13-1.13a.803.803 0 0 0-1.13 0L10.94 2.8c-.42-.24-.86-.42-1.34-.56V.8c0-.44-.36-.8-.8-.8H7.2c-.44 0-.8.36-.8.8v1.44c-.5.14-.96.34-1.4.59l-1-1c-.3-.3-.79-.3-1.09 0L1.83 2.91c-.3.3-.3.79 0 1.09l1 1c-.25.44-.45.9-.59 1.4H.8c-.44 0-.8.36-.8.8v1.6c0 .44.36.8.8.8h1.44c.13.47.32.92.56 1.34L1.74 12c-.31.31-.31.82 0 1.13l1.13 1.13c.31.31.82.31 1.13 0l1.06-1.06c.42.24.86.42 1.34.56v1.44c0 .44.36.8.8.8h1.6c.44 0 .8-.36.8-.8v-1.44c.5-.14.96-.33 1.4-.59l1 1c.3.3.79.3 1.09 0l1.09-1.09c.3-.3.3-.79 0-1.09l-1-1c.25-.43.45-.9.59-1.4h1.44c.44 0 .8-.36.8-.8V7.2a.818.818 0 0 0-.81-.8zM8 12c-2.21 0-4-1.79-4-4s1.79-4 4-4v8z"],
        "control": ["M13 8H8v5h5V8zm0-5H8v4h5V3zm2-3H1C.45 0 0 .45 0 1v14c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 14H2V2h12v12zM7 3H3v10h4V3z"],
        "credit-card": ["M14.99 2.95h-14c-.55 0-1 .45-1 1v1h16v-1c0-.55-.45-1-1-1zm-15 10c0 .55.45 1 1 1h14c.55 0 1-.45 1-1v-6h-16v6zm5.5-2h5c.28 0 .5.22.5.5s-.22.5-.5.5h-5c-.28 0-.5-.22-.5-.5s.23-.5.5-.5zm-3 0h1c.28 0 .5.22.5.5s-.22.5-.5.5h-1c-.28 0-.5-.22-.5-.5s.23-.5.5-.5z"],
        "cross": ["M9.41 8l3.29-3.29c.19-.18.3-.43.3-.71a1.003 1.003 0 0 0-1.71-.71L8 6.59l-3.29-3.3a1.003 1.003 0 0 0-1.42 1.42L6.59 8 3.3 11.29c-.19.18-.3.43-.3.71a1.003 1.003 0 0 0 1.71.71L8 9.41l3.29 3.29c.18.19.43.3.71.3a1.003 1.003 0 0 0 .71-1.71L9.41 8z"],
        "crown": ["M2 6l3 2 3-4 3 4 3-2-1 6H3L2 6zm6-5a1 1 0 1 1 0 2 1 1 0 0 1 0-2zM1 3a1 1 0 1 1 0 2 1 1 0 0 1 0-2zm14 0a1 1 0 1 1 0 2 1 1 0 0 1 0-2zM3 13h10v2H3v-2z"],
        "cube": ["M14.194 3.54L8 7.41 1.806 3.54 7.504.283a1 1 0 0 1 .992 0l5.698 3.255zm.75.71a1 1 0 0 1 .056.33v6.84a1 1 0 0 1-.504.868L8.5 15.714V8.277l6.444-4.027zm-13.888 0L7.5 8.277v7.437l-5.996-3.426A1 1 0 0 1 1 11.42V4.58a1 1 0 0 1 .056-.33z"],
        "cube-add": ["M14 2h1a1 1 0 0 1 0 2h-1v1a1 1 0 0 1-2 0V4h-1a1 1 0 0 1 0-2h1V1a1 1 0 0 1 2 0v1zM9.136.65a3.001 3.001 0 0 0 .992 5.222c.018.058.038.115.059.172L8 7.41 1.806 3.54 7.504.283a1 1 0 0 1 .992 0l.64.365zM15 7.235v4.184a1 1 0 0 1-.504.868L8.5 15.714V8.277l2.187-1.367A2.994 2.994 0 0 0 13 8c.768 0 1.47-.289 2-.764zM1.056 4.25L7.5 8.277v7.437l-5.996-3.426A1 1 0 0 1 1 11.42V4.58a1 1 0 0 1 .056-.33z"],
        "cube-remove": ["M10.365 5.933L8 7.41 1.806 3.54 7.504.283a1 1 0 0 1 .992 0l.64.365a3.001 3.001 0 0 0 1.228 5.283zM15 6v5.42a1 1 0 0 1-.504.868L8.5 15.714V8.277L12.143 6H15zM1.056 4.25L7.5 8.277v7.437l-5.996-3.426A1 1 0 0 1 1 11.42V4.58a1 1 0 0 1 .056-.33zM11 2h4a1 1 0 0 1 0 2h-4a1 1 0 0 1 0-2z"],
        "curved-range-chart": ["M15 12H3.12l1.81-1.39c1.73 1.01 5.53-.03 9.08-2.61l-1.22-1.5C10.3 8.3 7.86 9.37 6.65 9.29L14.3 3.4l-.6-.8-7.83 6.03c-.01-1.07 1.8-3.19 4.47-5.13L9.12 2C5.38 4.7 3.34 8.1 4.25 9.87L2 11.6V3c0-.55-.45-1-1-1s-1 .45-1 1v10c0 .55.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1z"],
        "cut": ["M13 2s.71-1.29 0-2L8.66 5.07l1.05 1.32L13 2zm.07 8c-.42 0-.82.09-1.18.26L3.31 0c-.69.71 0 2 0 2l3.68 5.02-2.77 3.24A2.996 2.996 0 0 0 0 13c0 1.66 1.34 3 3 3s3-1.34 3-3c0-.46-.11-.89-.29-1.27L8.1 8.54l2.33 3.19c-.18.39-.29.82-.29 1.27 0 1.66 1.31 3 2.93 3S16 14.66 16 13s-1.31-3-2.93-3zM3 14c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm10.07 0c-.54 0-.98-.45-.98-1s.44-1 .98-1 .98.45.98 1-.44 1-.98 1z"],
        "dashboard": ["M5 4c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zM4 7c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm4-2c.55 0 1-.45 1-1s-.45-1-1-1-1 .45-1 1 .45 1 1 1zm-2 6c0 1.1.9 2 2 2s2-.9 2-2c0-.53-2-5-2-5s-2 4.47-2 5zM8 0C3.58 0 0 3.58 0 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.69 6-6 6zm4-9c0-.55-.45-1-1-1s-1 .45-1 1 .45 1 1 1 1-.45 1-1zm0 2c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1z"],
        "database": ["M8 4c3.31 0 6-.9 6-2s-2.69-2-6-2C4.68 0 2 .9 2 2s2.68 2 6 2zm-6-.48V8c0 1.1 2.69 2 6 2s6-.9 6-2V3.52C12.78 4.4 10.56 5 8 5s-4.78-.6-6-1.48zm0 6V14c0 1.1 2.69 2 6 2s6-.9 6-2V9.52C12.78 10.4 10.56 11 8 11s-4.78-.6-6-1.48z"],
        "delete": ["M11.99 4.99a1.003 1.003 0 0 0-1.71-.71l-2.29 2.3L5.7 4.29a.965.965 0 0 0-.71-.3 1.003 1.003 0 0 0-.71 1.71l2.29 2.29-2.29 2.29A1.003 1.003 0 0 0 5.7 11.7l2.29-2.29 2.29 2.29a1.003 1.003 0 0 0 1.42-1.42L9.41 7.99 11.7 5.7c.18-.18.29-.43.29-.71zm-4-5c-4.42 0-8 3.58-8 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.68 6-6 6z"],
        "delta": ["M8 0L0 16h16L8 0zM7 5l5 10H2L7 5z"],
        "derive-column": ["M6.08 6.67h-.84c.24-.92.56-1.6.96-2.03.24-.27.48-.4.71-.4.05 0 .08.01.11.04s.04.06.04.1c0 .04-.03.11-.1.21-.06.1-.1.2-.1.29 0 .13.05.24.15.33.1.09.23.14.39.14.17 0 .31-.06.42-.17A.58.58 0 0 0 8 4.73c0-.22-.09-.39-.26-.53-.17-.13-.44-.2-.81-.2-.59 0-1.12.16-1.59.48-.48.32-.93.85-1.36 1.59-.15.26-.29.42-.42.49s-.35.11-.64.1l-.19.65h.81l-1.19 4.37c-.2.72-.33 1.16-.4 1.33-.1.24-.26.45-.46.62-.08.07-.18.1-.3.1-.03 0-.06-.01-.08-.03l-.03-.04c0-.02.03-.06.09-.11.06-.06.09-.14.09-.26 0-.13-.05-.23-.14-.32a.6.6 0 0 0-.4-.13c-.21 0-.38.05-.51.16s-.21.25-.21.4c0 .16.08.3.23.42.16.12.4.18.74.18.53 0 .99-.13 1.4-.39.41-.26.76-.65 1.07-1.19.3-.54.62-1.4.94-2.59l.68-2.53h.82l.2-.63zM15 0H8c-.55 0-1 .45-1 1v2h2V2h5v12H9v-1H7v2c0 .55.45 1 1 1h7c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zM8.3 9.94c.18.52.33.89.46 1.13.13.24.28.4.44.51.17.1.37.16.62.16.24 0 .49-.08.74-.25.33-.21.66-.58 1.01-1.09l-.21-.11c-.23.31-.41.5-.52.57a.44.44 0 0 1-.26.07c-.12 0-.24-.07-.36-.21-.2-.24-.46-.91-.8-2 .3-.49.55-.81.75-.96.15-.11.3-.16.47-.16.06 0 .17.02.34.06.16.04.31.06.43.06.17 0 .31-.06.43-.17.1-.11.16-.25.16-.43 0-.19-.06-.33-.17-.44-.12-.11-.28-.16-.49-.16-.19 0-.37.04-.54.13-.17.09-.39.27-.65.56-.2.21-.48.58-.87 1.11-.15-.66-.41-1.26-.78-1.81l-2.05.33-.04.21c.15-.03.28-.04.39-.04.2 0 .37.08.5.25.21.26.5 1.03.88 2.33-.29.37-.49.61-.6.72-.18.18-.33.3-.44.36-.09.04-.19.07-.3.07-.09 0-.23-.04-.42-.13a.866.866 0 0 0-.36-.09c-.2 0-.36.06-.49.18a.59.59 0 0 0-.19.46c0 .17.06.32.18.43.12.11.28.16.48.16.2 0 .38-.04.55-.11.17-.08.39-.24.65-.49.24-.27.6-.66 1.06-1.21z"],
        "desktop": ["M15 0H1C.45 0 0 .45 0 1v10c0 .55.45 1 1 1h4.75l-.5 2H4c-.55 0-1 .45-1 1s.45 1 1 1h8c.55 0 1-.45 1-1s-.45-1-1-1h-1.25l-.5-2H15c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 10H2V2h12v8z"],
        "diagram-tree": ["M15 8v3h-2V9H9v2H7V9H3v2H1V8a1 1 0 0 1 1-1h5V5h2v2h5a1 1 0 0 1 1 1zM1 12h2a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1H1a1 1 0 0 1-1-1v-2a1 1 0 0 1 1-1zm12 0h2a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1v-2a1 1 0 0 1 1-1zm-6 0h2a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1v-2a1 1 0 0 1 1-1zM7 0h2a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1V1a1 1 0 0 1 1-1z"],
        "direction-left": ["M16 1.99l-16 6 16 6-4-6z"],
        "direction-right": ["M16 7.99l-16-6 4 6-4 6z"],
        "disable": ["M7.99-.01c-4.42 0-8 3.58-8 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm-6 8c0-3.31 2.69-6 6-6 1.3 0 2.49.42 3.47 1.12l-8.35 8.35c-.7-.98-1.12-2.17-1.12-3.47zm6 6c-1.3 0-2.49-.42-3.47-1.12l8.35-8.35c.7.98 1.12 2.17 1.12 3.47 0 3.32-2.68 6-6 6z"],
        "document": ["M9 0H3c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1h10c.55 0 1-.45 1-1V5L9 0zm3 14H4V2h4v4h4v8z"],
        "document-open": ["M6 12c0 .55.45 1 1 1s1-.45 1-1V8c0-.55-.45-1-1-1H3c-.55 0-1 .45-1 1s.45 1 1 1h1.59L1.3 12.29c-.19.18-.3.43-.3.71a1.003 1.003 0 0 0 1.71.71L6 10.41V12zm4-12H4c-.55 0-1 .45-1 1v4h2V2h4v4h4v8H5.24l-1.8 1.8c.16.12.35.2.56.2h10c.55 0 1-.45 1-1V5l-5-5z"],
        "document-share": ["M10 14H2V2h4v4h1c0-.83.36-1.55.91-2.09l-.03-.03.9-.9C8.3 2.45 8 1.77 8 1L7 0H1C.45 0 0 .45 0 1v14c0 .55.45 1 1 1h10c.55 0 1-.45 1-1V8.22c-.53.48-1.23.78-2 .78v5zm5-14h-4c-.55 0-1 .45-1 1s.45 1 1 1h1.59l-3.3 3.29a1.003 1.003 0 0 0 1.42 1.42L14 3.41V5c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1z"],
        "dollar": ["M12.83 9.51c-.1-.3-.25-.58-.45-.84s-.45-.49-.75-.7c-.3-.2-.65-.36-1.05-.48-.16-.04-.43-.11-.8-.2-.35-.09-.73-.18-1.12-.28-.39-.1-.74-.19-1.06-.27-.31-.08-.49-.12-.54-.13-.43-.12-.78-.29-1.05-.52-.27-.23-.4-.55-.4-.95 0-.29.07-.53.21-.72.14-.19.32-.34.54-.46.22-.11.46-.19.72-.24.26-.05.52-.08.77-.08.74 0 1.35.15 1.83.46.48.3.75.83.81 1.56h2.14c0-.6-.13-1.13-.38-1.58-.25-.45-.59-.84-1.02-1.15-.43-.31-.93-.54-1.49-.7-.24-.06-.49-.1-.75-.14V1c0-.55-.45-1-1-1s-1 .45-1 1v1.08c-.23.03-.46.07-.68.13-.54.13-1.02.34-1.44.61-.42.28-.76.63-1.02 1.05-.26.43-.39.93-.39 1.5 0 .3.04.59.13.88.09.29.23.56.44.82.21.26.48.49.83.7.35.21.79.38 1.31.51.85.21 1.56.38 2.14.52.58.13 1.08.28 1.52.42.25.09.48.23.69.44.21.21.32.53.32.97 0 .21-.05.42-.14.63-.09.21-.24.39-.45.55-.21.16-.47.29-.81.39-.33.1-.73.15-1.2.15-.43 0-.84-.05-1.21-.14-.37-.09-.7-.24-.99-.43-.29-.2-.51-.45-.67-.76-.16-.31-.24-.68-.24-1.12H3c.01.71.15 1.32.43 1.84.27.52.64.94 1.1 1.27.46.33.99.58 1.61.74.27.07.56.12.85.16V15c0 .55.45 1 1 1s1-.45 1-1v-1.05c.3-.03.61-.08.9-.15.58-.13 1.1-.34 1.56-.63.46-.29.83-.66 1.11-1.11.28-.45.42-1 .42-1.64 0-.31-.05-.61-.15-.91z"],
        "dot": ["M8 5a3 3 0 1 0 0 6 3 3 0 1 0 0-6z"],
        "double-caret-horizontal": ["M13.71 7.29l-3-3A1.003 1.003 0 0 0 9 5v6a1.003 1.003 0 0 0 1.71.71l3-3c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71zM6 4c-.28 0-.53.11-.71.29l-3 3C2.11 7.47 2 7.72 2 8c0 .28.11.53.29.71l3 3A1.003 1.003 0 0 0 7 11V5c0-.55-.45-1-1-1z"],
        "double-caret-vertical": ["M5 7h6a1.003 1.003 0 0 0 .71-1.71l-3-3C8.53 2.11 8.28 2 8 2s-.53.11-.71.29l-3 3A1.003 1.003 0 0 0 5 7zm6 2H5a1.003 1.003 0 0 0-.71 1.71l3 3c.18.18.43.29.71.29s.53-.11.71-.29l3-3A1.003 1.003 0 0 0 11 9z"],
        "double-chevron-down": ["M7.29 8.71c.18.18.43.29.71.29s.53-.11.71-.29l4-4a1.003 1.003 0 0 0-1.42-1.42L8 6.59l-3.29-3.3a1.003 1.003 0 0 0-1.42 1.42l4 4zM12 8c-.28 0-.53.11-.71.29L8 11.59l-3.29-3.3a1.003 1.003 0 0 0-1.42 1.42l4 4c.18.18.43.29.71.29s.53-.11.71-.29l4-4A1.003 1.003 0 0 0 12 8z"],
        "double-chevron-left": ["M4.41 8L7.7 4.71c.19-.18.3-.43.3-.71a1.003 1.003 0 0 0-1.71-.71l-4 4C2.11 7.47 2 7.72 2 8c0 .28.11.53.29.71l4 4a1.003 1.003 0 0 0 1.42-1.42L4.41 8zm5 0l3.29-3.29c.19-.18.3-.43.3-.71a1.003 1.003 0 0 0-1.71-.71l-4 4C7.11 7.47 7 7.72 7 8c0 .28.11.53.29.71l4 4a1.003 1.003 0 0 0 1.42-1.42L9.41 8z"],
        "double-chevron-right": ["M9 8c0-.28-.11-.53-.29-.71l-4-4a1.003 1.003 0 0 0-1.42 1.42L6.59 8 3.3 11.29c-.19.18-.3.43-.3.71a1.003 1.003 0 0 0 1.71.71l4-4C8.89 8.53 9 8.28 9 8zm4.71-.71l-4-4a1.003 1.003 0 0 0-1.42 1.42L11.59 8 8.3 11.29c-.19.18-.3.43-.3.71a1.003 1.003 0 0 0 1.71.71l4-4c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71z"],
        "double-chevron-up": ["M4 8c.28 0 .53-.11.71-.29L8 4.41l3.29 3.29c.18.19.43.3.71.3a1.003 1.003 0 0 0 .71-1.71l-4-4C8.53 2.11 8.28 2 8 2s-.53.11-.71.29l-4 4A1.003 1.003 0 0 0 4 8zm4.71-.71C8.53 7.11 8.28 7 8 7s-.53.11-.71.29l-4 4a1.003 1.003 0 0 0 1.42 1.42L8 9.41l3.29 3.29c.18.19.43.3.71.3a1.003 1.003 0 0 0 .71-1.71l-4-4z"],
        "doughnut-chart": ["M11.86 7h4.05C15.45 3.39 12.61.52 9 .07v4.07A4 4 0 0 1 11.86 7zM12 8c0 2.21-1.79 4-4 4s-4-1.79-4-4 1.79-4 4-4V0C3.58 0 0 3.58 0 8s3.58 8 8 8 8-3.58 8-8h-4z"],
        "download": ["M7.99-.01c-4.42 0-8 3.58-8 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zM11.7 9.7l-3 3c-.18.18-.43.29-.71.29s-.53-.11-.71-.29l-3-3A1.003 1.003 0 0 1 5.7 8.28l1.29 1.29V3.99c0-.55.45-1 1-1s1 .45 1 1v5.59l1.29-1.29a1.003 1.003 0 0 1 1.71.71c0 .27-.11.52-.29.7z"],
        "drag-handle-horizontal": ["M2 9c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm0-4c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm4 4c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm8-2c.55 0 1-.45 1-1s-.45-1-1-1-1 .45-1 1 .45 1 1 1zm0 2c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm-4-4c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm0 4c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zM6 5c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1z"],
        "drag-handle-vertical": ["M6 9c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm4-6c.55 0 1-.45 1-1s-.45-1-1-1-1 .45-1 1 .45 1 1 1zM6 13c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm0-8c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm0-4c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm4 8c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm0-4c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm0 8c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1z"],
        "draw": ["M14.9 11c-.3 0-.5.1-.7.3l-3 3c-.2.2-.3.4-.3.7 0 .6.5 1 1 1 .3 0 .5-.1.7-.3l3-3c.2-.2.3-.4.3-.7 0-.5-.4-1-1-1zm-1-1v-.2l-1-5c-.1-.3-.3-.6-.6-.7l-11-4-.3.3 5.8 5.8c.2-.1.4-.2.6-.2.8 0 1.5.7 1.5 1.5S8.3 9 7.4 9s-1.5-.7-1.5-1.5c0-.2.1-.4.2-.6L.3 1.1l-.3.3 4 11c.1.3.4.6.7.6l5 1h.2c.3 0 .5-.1.7-.3l3-3c.2-.2.3-.4.3-.7z"],
        "drive-time": ["M15.12 4.76h-1.05l-.76-2.12c-.19-.53-.76-1.08-1.27-1.24 0 0-1.32-.4-4.04-.4-2.72 0-4.04.4-4.04.4-.5.16-1.07.71-1.26 1.24l-.77 2.12H.88c-.48 0-.88.42-.88.94s.4.94.88.94h.38L1 7c-.03.69 0 1.44 0 2v5c0 .66.38 1 1 1s1-.34 1-1v-1h10v1c0 .66.38 1 1 1s1-.34 1-1V9c0-.56-.01-1.37 0-2l-.26-.37h.38c.48 0 .88-.42.88-.93 0-.52-.4-.94-.88-.94zM5 10H3V8h2v2zm8 0h-2V8h2v2zm0-4H3c-.18 0-.06-.82 0-1l.73-1.63C3.79 3.19 3.82 3 4 3h8c.18 0 .21.19.27.37L13 5c.06.18.18 1 0 1z"],
        "duplicate": ["M15 0H5c-.55 0-1 .45-1 1v2h2V2h8v7h-1v2h2c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-4 4H1c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h10c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1zm-1 10H2V6h8v8z"],
        "edit": ["M3.25 10.26l2.47 2.47 6.69-6.69-2.46-2.48-6.7 6.7zM.99 14.99l3.86-1.39-2.46-2.44-1.4 3.83zm12.25-14c-.48 0-.92.2-1.24.51l-1.44 1.44 2.47 2.47 1.44-1.44c.32-.32.51-.75.51-1.24.01-.95-.77-1.74-1.74-1.74z"],
        "eject": ["M4 9h8a1.003 1.003 0 0 0 .71-1.71l-4-4C8.53 3.11 8.28 3 8 3s-.53.11-.71.29l-4 4A1.003 1.003 0 0 0 4 9zm8 1H4c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h8c.55 0 1-.45 1-1v-1c0-.55-.45-1-1-1z"],
        "endorsed": ["M15.86 7.5l-.81-1.42V4.5c0-.36-.19-.68-.49-.87l-1.37-.8-.81-1.41c-.19-.31-.51-.49-.86-.49H9.89L8.5.14a.948.948 0 0 0-1 0l-1.39.8H4.52a1 1 0 0 0-.86.49l-.8 1.37-1.44.83c-.3.19-.49.51-.49.87v1.65l-.8 1.37c-.08.15-.13.32-.13.49s.05.34.14.49l.8 1.37v1.65c0 .36.19.68.49.87l1.42.81.8 1.37c.19.31.51.49.86.49H6.1l1.39.8c.15.09.32.14.48.14s.34-.05.49-.14l1.39-.8h1.63a1 1 0 0 0 .86-.49l.81-1.41 1.37-.8c.3-.19.49-.51.49-.87V9.93l.81-1.42a.89.89 0 0 0 .04-1.01zm-4.12-.82l-4.01 4.01c-.18.18-.43.29-.71.29s-.53-.11-.71-.29l-2-2c-.18-.19-.3-.44-.3-.71a1.003 1.003 0 0 1 1.71-.71l1.3 1.3 3.3-3.3a1.003 1.003 0 0 1 1.71.71.95.95 0 0 1-.29.7z"],
        "envelope": ["M0 3.06v9.88L4.94 8 0 3.06zM14.94 2H1.06L8 8.94 14.94 2zm-6.41 8.53c-.14.14-.32.22-.53.22s-.39-.08-.53-.22L6 9.06 1.06 14h13.88L10 9.06l-1.47 1.47zM11.06 8L16 12.94V3.06L11.06 8z"],
        "eraser": ["M8.06 13.91l7.63-7.44c.41-.4.41-1.05 0-1.45L10.86.3c-.41-.4-1.08-.4-1.49 0L.31 9.13c-.41.4-.41 1.05 0 1.45l5.58 5.44h8.12v-.01c.55 0 1-.45 1-1s-.45-1-1-1H7.96l.1-.1zm-2.17.06L1.67 9.85l4.22-4.11 4.22 4.11-4.22 4.12z"],
        "error": ["M7.99-.01c-4.42 0-8 3.58-8 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm1 13h-2v-2h2v2zm0-3h-2v-7h2v7z"],
        "euro": ["M6.52 3.18c.51-.27 1.12-.4 1.83-.4.48 0 .91.06 1.27.18.37.12.68.29.96.51.18.14.3.33.44.51l1.53-1.53c-.12-.11-.23-.22-.36-.32a5.61 5.61 0 0 0-1.74-.83c-.66-.2-1.36-.3-2.1-.3-.99 0-1.88.18-2.66.53-.79.35-1.45.82-2 1.41-.55.58-.96 1.27-1.26 2.06H2c-.55 0-1 .45-1 1s.45 1 1 1h.04c-.01.17-.04.33-.04.5 0 .17.03.33.04.5H2c-.55 0-1 .45-1 1s.45 1 1 1h.43c0 .01 0 .02.01.02a6.2 6.2 0 0 0 1.25 2.07 5.77 5.77 0 0 0 2 1.4c.78.34 1.67.51 2.66.51.81 0 1.54-.12 2.21-.36.67-.24 1.25-.59 1.75-1.03l.03-.03-1.55-1.33c-.01.01-.02.03-.03.04-.29.3-.63.53-1.02.69-.4.17-.85.25-1.37.25-.71 0-1.32-.13-1.83-.4s-.93-.62-1.25-1.07c-.19-.24-.34-.49-.46-.76H9c.55 0 1-.45 1-1s-.45-1-1-1H4.35c-.01-.17-.03-.33-.03-.5 0-.17.02-.34.03-.5H10c.55 0 1-.45 1-1s-.45-1-1-1H4.83c.13-.27.27-.52.44-.76.32-.44.74-.8 1.25-1.06zM14 8.98v0z"],
        "exchange": ["M1.99 5.99c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.89-2-2-2zm4.15 1.86a.495.495 0 1 0 .7-.7L5.7 5.99h5.79c.28 0 .5-.22.5-.5s-.22-.5-.5-.5H5.7l1.15-1.15a.495.495 0 1 0-.7-.7l-2 2c-.1.09-.16.21-.16.35s.06.26.15.35l2 2.01zm7.85-1.86c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.89-2-2-2zM9.85 8.14a.533.533 0 0 0-.36-.15.495.495 0 0 0-.35.85l1.15 1.15h-5.8c-.28 0-.5.22-.5.5s.22.5.5.5h5.79l-1.15 1.15a.495.495 0 1 0 .7.7l2-2c.09-.09.15-.22.15-.35s-.06-.26-.15-.35l-1.98-2z"],
        "exclude-row": ["M0 10a1.003 1.003 0 0 0 1.71.71L3 9.41l1.29 1.29c.18.19.43.3.71.3a1.003 1.003 0 0 0 .71-1.71L4.41 8 5.7 6.71c.19-.18.3-.43.3-.71a1.003 1.003 0 0 0-1.71-.71L3 6.59l-1.29-1.3A1.003 1.003 0 0 0 .29 6.71L1.59 8 .29 9.29C.11 9.47 0 9.72 0 10zm1-7h14c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1zm14 10H1c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1zm-1-7H9c-1.1 0-2 .9-2 2s.9 2 2 2h5c1.1 0 2-.9 2-2s-.9-2-2-2z"],
        "expand-all": ["M4 7c.28 0 .53-.11.71-.29L8 3.41l3.29 3.29c.18.19.43.3.71.3a1.003 1.003 0 0 0 .71-1.71l-4-4C8.53 1.11 8.28 1 8 1s-.53.11-.71.29l-4 4A1.003 1.003 0 0 0 4 7zm8 2c-.28 0-.53.11-.71.29L8 12.59l-3.29-3.3a1.003 1.003 0 0 0-1.42 1.42l4 4c.18.18.43.29.71.29s.53-.11.71-.29l4-4A1.003 1.003 0 0 0 12 9z"],
        "export": ["M4 6c.28 0 .53-.11.71-.29L7 3.41V11c0 .55.45 1 1 1s1-.45 1-1V3.41l2.29 2.29c.18.19.43.3.71.3a1.003 1.003 0 0 0 .71-1.71l-4-4C8.53.11 8.28 0 8 0s-.53.11-.71.29l-4 4A1.003 1.003 0 0 0 4 6zm11 5c-.55 0-1 .45-1 1v2H2v-2c0-.55-.45-1-1-1s-1 .45-1 1v3c0 .55.45 1 1 1h14c.55 0 1-.45 1-1v-3c0-.55-.45-1-1-1z"],
        "eye-off": ["M16 7.97v-.02-.01-.02-.02a.672.672 0 0 0-.17-.36c-.49-.63-1.07-1.2-1.65-1.72l-3.16 2.26a2.978 2.978 0 0 1-2.98 2.9c-.31 0-.6-.06-.88-.15L5.09 12.3c.44.19.9.36 1.37.47.97.23 1.94.24 2.92.05.88-.17 1.74-.54 2.53-.98 1.25-.7 2.39-1.67 3.38-2.75.18-.2.37-.41.53-.62.09-.1.15-.22.17-.36v-.02-.02-.01-.02-.03c.01-.02.01-.03.01-.04zm-.43-4.17c.25-.18.43-.46.43-.8 0-.55-.45-1-1-1-.22 0-.41.08-.57.2l-.01-.01-2.67 1.91c-.69-.38-1.41-.69-2.17-.87a6.8 6.8 0 0 0-2.91-.05c-.88.18-1.74.54-2.53.99-1.25.7-2.39 1.67-3.38 2.75-.18.2-.37.41-.53.62-.23.29-.23.63-.01.92.51.66 1.11 1.25 1.73 1.79.18.16.38.29.56.44l-2.09 1.5.01.01c-.25.18-.43.46-.43.8 0 .55.45 1 1 1 .22 0 .41-.08.57-.2l.01.01 14-10-.01-.01zm-10.41 5a3.03 3.03 0 0 1-.11-.8 2.99 2.99 0 0 1 2.99-2.98c.62 0 1.19.21 1.66.53L5.16 8.8z"],
        "eye-on": ["M10.29 6.7c.18.18.43.29.71.29s.53-.11.71-.29l4-4c.17-.18.29-.43.29-.7a1.003 1.003 0 0 0-1.71-.71L11 4.58 9.71 3.29A.997.997 0 0 0 9 3c-.55 0-1 .44-1 1a1 1 0 0 0 .3.7l1.99 2zM16 7.96v-.02-.01-.02-.02a.64.64 0 0 0-.17-.36c-.3-.4-.65-.76-1-1.12l-1.7 1.7c-.55.55-1.3.88-2.13.88-.06 0-.11-.01-.17-.02C10.42 10.15 9.32 11 8.01 11A3.005 3.005 0 0 1 6.4 5.46c-.24-.43-.39-.93-.39-1.46 0-.26.04-.5.1-.74-.7.2-1.37.5-2.01.86-1.26.7-2.4 1.68-3.4 2.77-.18.21-.36.41-.53.63-.22.29-.22.64 0 .93.51.67 1.12 1.27 1.73 1.81 1.33 1.17 2.85 2.15 4.53 2.55.97.23 1.95.24 2.92.05.89-.18 1.74-.54 2.54-.99 1.25-.71 2.4-1.69 3.39-2.78.18-.2.37-.41.54-.63.09-.1.15-.23.17-.37v-.02-.02-.01-.02-.03c.01-.01.01-.02.01-.03zM8.01 9c.48 0 .87-.35.96-.81a.55.55 0 0 1-.07-.09l-.02.01L7.8 7.03c-.45.1-.79.48-.79.96 0 .56.45 1.01 1 1.01z"],
        "eye-open": ["M8.002 7.003a1.003 1.003 0 0 0 0 2.005 1.003 1.003 0 0 0 0-2.005zm7.988.972v-.02-.01-.02-.02a.675.675 0 0 0-.17-.36c-.509-.673-1.118-1.264-1.737-1.806-1.328-1.173-2.846-2.155-4.523-2.546a6.702 6.702 0 0 0-2.925-.06c-.889.18-1.738.541-2.546.992C2.84 4.837 1.692 5.81.694 6.902c-.18.211-.36.411-.53.632a.742.742 0 0 0 0 .932c.51.672 1.119 1.264 1.738 1.805 1.328 1.173 2.846 2.156 4.523 2.547.968.23 1.947.24 2.925.04.889-.18 1.738-.542 2.546-.993 1.248-.712 2.397-1.684 3.395-2.777.18-.2.37-.411.54-.632.09-.1.149-.23.169-.36v-.02-.02-.01-.02-.03c0-.01-.01-.01-.01-.02zm-7.988 3.038a2.998 2.998 0 0 1-2.995-3.008 2.998 2.998 0 0 1 2.995-3.008 2.998 2.998 0 0 1 2.996 3.008 2.998 2.998 0 0 1-2.996 3.008z"],
        "fast-backward": ["M14 3c-.24 0-.44.09-.62.23l-.01-.01L9 6.72V4c0-.55-.45-1-1-1-.24 0-.44.09-.62.23v-.01l-5 4 .01.01C2.16 7.41 2 7.68 2 8s.16.59.38.77v.01l5 4 .01-.01c.17.14.37.23.61.23.55 0 1-.45 1-1V9.28l4.38 3.5.01-.01c.17.14.37.23.61.23.55 0 1-.45 1-1V4c0-.55-.45-1-1-1z"],
        "fast-forward": ["M15 8c0-.32-.16-.59-.38-.77l.01-.01-5-4-.01.01A.987.987 0 0 0 9 3c-.55 0-1 .45-1 1v2.72l-4.38-3.5v.01A.987.987 0 0 0 3 3c-.55 0-1 .45-1 1v8c0 .55.45 1 1 1 .24 0 .44-.09.62-.23l.01.01L8 9.28V12c0 .55.45 1 1 1 .24 0 .44-.09.62-.23l.01.01 5-4-.01-.01c.22-.18.38-.45.38-.77z"],
        "feed": ["M1.99 11.99c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.89-2-2-2zm1-4c-.55 0-1 .45-1 1s.45 1 1 1c1.66 0 3 1.34 3 3 0 .55.45 1 1 1s1-.45 1-1c0-2.76-2.24-5-5-5zm0-4c-.55 0-1 .45-1 1s.45 1 1 1c3.87 0 7 3.13 7 7 0 .55.45 1 1 1s1-.45 1-1a9 9 0 0 0-9-9zm0-4c-.55 0-1 .45-1 1s.45 1 1 1c6.08 0 11 4.92 11 11 0 .55.45 1 1 1s1-.45 1-1c0-7.18-5.82-13-13-13z"],
        "feed-subscribed": ["M3 2c1.06 0 2.08.16 3.06.45.13-.71.52-1.32 1.05-1.76C5.82.25 4.44 0 3 0c-.55 0-1 .45-1 1s.45 1 1 1zM2 12c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm8.32-6.33a.99.99 0 0 0 1.4 0l3.98-3.98c.19-.18.3-.42.3-.7 0-.55-.45-.99-1-.99-.28 0-.52.11-.7.29l-3.28 3.28-1.29-1.29a.99.99 0 0 0-.7-.29 1 1 0 0 0-1 .99c0 .27.11.52.29.7l2 1.99zm3.73.53l-.93.93-.02-.02c-.17.17-.35.33-.56.45C13.47 9.16 14 11.02 14 13c0 .55.45 1 1 1s1-.45 1-1c0-2.5-.73-4.82-1.95-6.8zM3 8c-.55 0-1 .45-1 1s.45 1 1 1c1.66 0 3 1.34 3 3 0 .55.45 1 1 1s1-.45 1-1c0-2.76-2.24-5-5-5zm5.91-.91l-.03.03-2-2 .03-.03c-.11-.11-.23-.2-.33-.33A8.9 8.9 0 0 0 3 4c-.55 0-1 .45-1 1s.45 1 1 1c3.87 0 7 3.13 7 7 0 .55.45 1 1 1s1-.45 1-1c0-1.87-.57-3.61-1.55-5.06-.61-.11-1.13-.42-1.54-.85z"],
        "film": ["M15 1h-5v2H6V1H1c-.55 0-1 .45-1 1v11c0 .55.45 1 1 1h5v-2h4v2h5c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1zM4 13H2v-2h2v2zm0-3H2V8h2v2zm0-3H2V5h2v2zm0-3H2V2h2v2zm6 6H6V5h4v5zm4 3h-2v-2h2v2zm0-3h-2V8h2v2zm0-3h-2V5h2v2zm0-3h-2V2h2v2z"],
        "filter": ["M13.99.99h-12a1.003 1.003 0 0 0-.71 1.71l4.71 4.71V14a1.003 1.003 0 0 0 1.71.71l2-2c.18-.18.29-.43.29-.71V7.41L14.7 2.7a1.003 1.003 0 0 0-.71-1.71z"],
        "filter-keep": ["M15 10c-.28 0-.53.11-.71.29L12 12.59l-1.29-1.29A.965.965 0 0 0 10 11a1.003 1.003 0 0 0-.71 1.71l2 2c.18.18.43.29.71.29s.53-.11.71-.29l3-3A1.003 1.003 0 0 0 15 10zm-3-8c0-.55-.45-1-1-1H1a1.003 1.003 0 0 0-.71 1.71L4 6.41V12a1.003 1.003 0 0 0 1.71.71l2-2c.18-.18.29-.43.29-.71V6.41l3.71-3.71c.18-.17.29-.42.29-.7z"],
        "filter-list": ["M9 8c0 .55.45 1 1 1h5c.55 0 1-.45 1-1s-.45-1-1-1h-5c-.55 0-1 .45-1 1zm3-6c0-.55-.45-1-1-1H1a1.003 1.003 0 0 0-.71 1.71L4 6.41V12a1.003 1.003 0 0 0 1.71.71l2-2c.18-.18.29-.43.29-.71V6.41l3.71-3.71c.18-.17.29-.42.29-.7zm3 8h-5c-.55 0-1 .45-1 1s.45 1 1 1h5c.55 0 1-.45 1-1s-.45-1-1-1zm0 3h-5c-.55 0-1 .45-1 1s.45 1 1 1h5c.55 0 1-.45 1-1s-.45-1-1-1z"],
        "filter-remove": ["M12 2c0-.55-.45-1-1-1H1a1.003 1.003 0 0 0-.71 1.71L4 6.41V12a1.003 1.003 0 0 0 1.71.71l2-2c.18-.18.29-.43.29-.71V6.41l3.71-3.71c.18-.17.29-.42.29-.7zm2.41 10l1.29-1.29c.19-.18.3-.43.3-.71a1.003 1.003 0 0 0-1.71-.71L13 10.59 11.71 9.3A.965.965 0 0 0 11 9a1.003 1.003 0 0 0-.71 1.71l1.3 1.29-1.29 1.29c-.19.18-.3.43-.3.71a1.003 1.003 0 0 0 1.71.71l1.29-1.3 1.29 1.29c.18.19.43.3.71.3a1.003 1.003 0 0 0 .71-1.71L14.41 12z"],
        "flag": ["M2.99 2.99c-.55 0-1 .45-1 1v11c0 .55.45 1 1 1s1-.45 1-1v-11c0-.55-.45-1-1-1zm0-3c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm2 3.03v7.23c2.07-2.11 5.92 1.75 9 0V3.02c-3 2.07-6.94-2.03-9 0z"],
        "flame": ["M9.217 0c0 1.368.368 2.462 1.104 3.282C12.774 5.197 14 7.385 14 9.846c0 2.735-1.472 4.786-4.415 6.154 2.165-2.4 1.84-3.385-.368-6.4-2.342 1.2-1.967 2-1.592 3.6-.786 0-1.5 0-1.875-.4 0 .547.898 2 1.464 3.2-2.943-.82-6.092-5.744-4.988-6.154.736-.273 1.594-.137 2.575.41C3.575 5.333 5.047 1.915 9.217 0z"],
        "flash": ["M4 8c0-.55-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1h2c.55 0 1-.45 1-1zm4-4c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1S7 .45 7 1v2c0 .55.45 1 1 1zM3.79 5.21a1.003 1.003 0 0 0 1.42-1.42l-1.5-1.5a1.003 1.003 0 0 0-1.42 1.42l1.5 1.5zm.71 5.29c-.28 0-.53.11-.71.29l-1.5 1.5a1.003 1.003 0 0 0 1.42 1.42l1.5-1.5a1.003 1.003 0 0 0-.71-1.71zm7-5c.28 0 .53-.11.71-.29l1.5-1.5a1.003 1.003 0 0 0-1.42-1.42l-1.5 1.5a1.003 1.003 0 0 0 .71 1.71zm.71 5.29a1.003 1.003 0 0 0-1.42 1.42l1.5 1.5a1.003 1.003 0 0 0 1.42-1.42l-1.5-1.5zM15 7h-2c-.55 0-1 .45-1 1s.45 1 1 1h2c.55 0 1-.45 1-1s-.45-1-1-1zM8 5C6.34 5 5 6.34 5 8s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3zm0 4c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm0 3c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1s1-.45 1-1v-2c0-.55-.45-1-1-1z"],
        "floppy-disk": ["M15.71 2.29l-2-2A.997.997 0 0 0 13 0h-1v6H4V0H1C.45 0 0 .45 0 1v14c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V3c0-.28-.11-.53-.29-.71zM14 15H2V9c0-.55.45-1 1-1h10c.55 0 1 .45 1 1v6zM11 1H9v4h2V1z"],
        "flow-branch": ["M10.643 6.595c.22.418.344.894.344 1.399 0 .439-.094.855-.263 1.231l3.265 3.462-.002-1.75a.973.973 0 0 1 .314-.68.99.99 0 0 1 1.388.048c.186.2.316.46.3.715l-.009 4.03a.959.959 0 0 1-.3.68.972.972 0 0 1-.698.266l-4.053.002a.97.97 0 0 1-.679-.314 1.031 1.031 0 0 1 .05-1.42.972.972 0 0 1 .698-.266l1.7-.001-3.305-3.35a2.998 2.998 0 0 1-4.228-1.653H.999a1 1 0 0 1 0-2h4.166a2.998 2.998 0 0 1 4.06-1.735l3.449-3.268-1.745.002a.979.979 0 0 1-.631-1.692c.199-.186.459-.316.713-.3l4.025.009c.247.008.493.1.679.3.186.2.274.451.265.7l.002 4.046a.972.972 0 0 1-.313.68 1.03 1.03 0 0 1-1.42-.05.973.973 0 0 1-.266-.7V3.295l-3.34 3.301z"],
        "flow-end": ["M9.702 7.31c.176.176.293.41.293.684a.976.976 0 0 1-.283.695c-1.888 1.91-2.892 2.918-3.011 3.027-.179.164-.42.284-.693.284a.995.995 0 0 1-.997-.985c0-.274.112-.541.292-.72.12-.12.624-.551 1.514-1.293H.98c-.536 0-.975-.47-.975-1.008 0-.537.439-.996.975-.996h5.837c-.895-.752-1.4-1.187-1.514-1.304a1.03 1.03 0 0 1-.292-.705C5.01 4.45 5.464 4 6 4c.272 0 .52.108.695.294A535.7 535.7 0 0 0 9.702 7.31zM13 11.002c-1.657 0-3-1.347-3-3.008a3.004 3.004 0 0 1 3-3.007c1.657 0 3 1.346 3 3.007a3.004 3.004 0 0 1-3 3.008z"],
        "flow-linear": ["M4.16 9.002H.977C.44 9.002 0 8.532 0 7.994c0-.537.44-.99.978-.99h3.18A3.01 3.01 0 0 1 6.995 5a3.01 3.01 0 0 1 2.839 2.004h2.98c-.898-.756-1.404-1.193-1.518-1.31a1.03 1.03 0 0 1-.293-.705c0-.538.454-.989.992-.989.274 0 .521.108.697.294.118.124 1.122 1.13 3.014 3.016a.96.96 0 0 1 .293.684.975.975 0 0 1-.284.695l-3.018 3.027a.974.974 0 0 1-.694.284c-.553 0-1-.447-1-.985 0-.274.117-.545.293-.72l1.518-1.293H9.833A3.01 3.01 0 0 1 6.996 11 3.01 3.01 0 0 1 4.16 9.002z"],
        "flow-review": ["M5.175 7.004a3.003 3.003 0 0 1 2.83-2.001c1.305 0 2.416.835 2.83 2.001h1.985c-.896-.756-1.401-1.193-1.515-1.31a1.03 1.03 0 0 1-.292-.705c0-.538.453-.989.99-.989a.95.95 0 0 1 .696.294c.117.124 1.12 1.13 3.008 3.016.176.176.293.41.293.684a.976.976 0 0 1-.283.695l-3.013 3.027a.995.995 0 0 1-1.691-.702c0-.273.116-.544.292-.72l1.515-1.292h-1.98a3.003 3.003 0 0 1-2.835 2.016A3.003 3.003 0 0 1 5.17 9.002H3.18l1.515 1.292c.176.176.292.447.292.72a.995.995 0 0 1-1.69.702L.282 8.69A.976.976 0 0 1 0 7.994c0-.273.117-.508.293-.684A535.858 535.858 0 0 0 3.3 4.294.95.95 0 0 1 3.997 4c.537 0 .99.45.99.989 0 .273-.12.528-.292.705-.114.117-.62.554-1.515 1.31h1.995z"],
        "flow-review-branch": ["M10.392 10.647A3.002 3.002 0 0 1 6.16 8.995H3.37l1.338 1.318c.172.178.287.41.282.683-.01.536-.524.995-.99.995-.465 0-.63-.187-.747-.294L.281 8.682A.956.956 0 0 1 0 7.994a.971.971 0 0 1 .294-.687l3.01-3.028a.973.973 0 0 1 .697-.27c.536.01.998.485.989 1.021a.971.971 0 0 1-.295.687L3.37 6.997h2.79a3.002 3.002 0 0 1 4.106-1.716l2.416-2.277-1.732.004a.99.99 0 0 1-.679-.329.978.978 0 0 1 .05-1.378c.199-.186.459-.315.714-.3l4.012.005c.248.009.493.1.68.3.185.2.273.45.264.699L15.99 6.05a.973.973 0 0 1-.314.679 1.03 1.03 0 0 1-1.421-.048.971.971 0 0 1-.265-.699V4.29L11.65 6.602c.219.416.343.89.343 1.394 0 .451-.1.88-.279 1.263L14 11.68l-.004-1.73a.982.982 0 0 1 .323-.68.978.978 0 0 1 1.378.049c.187.2.316.46.3.714l-.004 4.011a.983.983 0 0 1-.3.691.972.972 0 0 1-.7.265l-4.046-.001a.987.987 0 0 1-.679-.326 1.017 1.017 0 0 1 .048-1.41.972.972 0 0 1 .699-.265h1.693l-2.315-2.35z"],
        "flows": ["M13.5 6a2.5 2.5 0 0 0-2.45 2h-1.3L5.74 4l-.75.75L8.25 8h-3.3a2.5 2.5 0 1 0 0 1h3.3l-3.26 3.25.75.75 4.01-4h1.3a2.5 2.5 0 1 0 2.45-3z"],
        "folder-close": ["M-.01 14c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V7h-16v7zm15-10H7.41L5.7 2.3a.965.965 0 0 0-.71-.3h-4c-.55 0-1 .45-1 1v3h16V5c0-.55-.45-1-1-1z"],
        "folder-new": ["M10.165 7a3.003 3.003 0 0 0 2.827 2 3.003 3.003 0 0 0 2.827-2H16v7c0 .55-.45 1-1 1H1.01c-.55 0-1-.45-1-1V7h10.155zM8.76 6H0V3c0-.55.45-1 1-1h1.998c.28 0 .53.11.71.29L5.417 4h2.578c0 .768.29 1.469.765 2zm6.23-3c.55 0 1 .45 1 1s-.45 1-1 1h-.999v1c0 .55-.45 1-1 1-.549 0-.998-.45-.998-1V5h-1c-.55 0-1-.45-1-1s.45-1 1-1h1V2c0-.55.45-1 .999-1 .55 0 1 .45 1 1v1h.999z"],
        "folder-open": ["M2.06 6.69c.14-.4.5-.69.94-.69h11V5c0-.55-.45-1-1-1H6.41l-1.7-1.71A.997.997 0 0 0 4 2H1c-.55 0-1 .45-1 1v9.84l2.05-6.15h.01zM16 8c0-.55-.45-1-1-1H4a.99.99 0 0 0-.94.69l-2 6c-.04.09-.06.2-.06.31 0 .55.45 1 1 1h11c.44 0 .81-.29.94-.69l2-6c.04-.09.06-.2.06-.31z"],
        "folder-shared": ["M8.76 5.98c-.47-.53-.77-1.22-.77-1.99h-.58L5.7 2.29a.965.965 0 0 0-.71-.3h-4c-.55 0-1 .45-1 1v3h8.76l.01-.01zm6.23-2.99h-4c-.55 0-1 .45-1 1s.45 1 1 1h1.59l-3.3 3.3a.99.99 0 0 0-.29.7 1.003 1.003 0 0 0 1.71.71l3.29-3.29V8c0 .55.45 1 1 1s1-.45 1-1V4c0-.56-.45-1.01-1-1.01zm-1.98 7.23l-.9.9-.01-.01c-.54.55-1.28.89-2.11.89-1.66 0-3-1.34-3-3 0-.77.3-1.47.78-2H-.01v7c0 .55.45 1 1 1h14c.55 0 1-.45 1-1v-3.18c-.31.11-.65.18-1 .18-.76-.01-1.45-.31-1.98-.78z"],
        "folder-shared-open": ["M13.02 10.22l-.9.9-.01-.01c-.54.55-1.28.89-2.11.89-1.66 0-3-1.34-3-3 0-.77.3-1.47.78-2H4a.99.99 0 0 0-.94.69l-2 6c-.04.09-.06.2-.06.31 0 .55.45 1 1 1h11c.44 0 .81-.29.94-.69l1.11-3.32c-.01 0-.03.01-.05.01-.77 0-1.45-.3-1.98-.78zM2.06 6.69c.14-.4.5-.69.94-.69h5.76l.01-.01C8.3 5.46 8 4.77 8 4H6.41l-1.7-1.71A.997.997 0 0 0 4 2H1c-.55 0-1 .45-1 1v9.84l2.05-6.15h.01zM15 3h-4c-.55 0-1 .45-1 1s.45 1 1 1h1.59l-3.3 3.29a1.003 1.003 0 0 0 1.42 1.42L14 6.41V8c0 .55.45 1 1 1s1-.45 1-1V4c0-.55-.45-1-1-1z"],
        "follower": ["M9.37 12.69c-1.2-.53-1.04-.85-1.08-1.29-.01-.06-.01-.12-.01-.19.41-.37.75-.87.97-1.44 0 0 .01-.03.01-.04.05-.13.09-.26.12-.39.28-.06.44-.36.5-.63.06-.11.19-.39.16-.7-.04-.4-.2-.59-.38-.67v-.07c0-.52-.05-1.26-.14-1.74a2.72 2.72 0 0 0-.09-.43 3.02 3.02 0 0 0-1.04-1.51C7.87 3.2 7.15 3 6.5 3c-.64 0-1.36.2-1.87.59-.5.38-.87.92-1.05 1.51-.04.13-.07.27-.09.4-.09.49-.14 1.24-.14 1.75v.06c-.19.07-.36.26-.4.68-.03.31.1.59.16.7.06.28.23.59.51.64.04.14.08.27.13.39 0 .01.01.02.01.02v.01c.22.59.57 1.1.99 1.46 0 .06-.01.12-.01.17-.04.44.08.76-1.12 1.29-1.2.53-3.01 1.1-3.38 1.95C-.13 15.5.02 16 .02 16h12.96s.15-.5-.22-1.36c-.38-.85-2.19-1.42-3.39-1.95zm6.33-10.4l-2-2a1.003 1.003 0 0 0-1.42 1.42l.3.29H9.99c-.55 0-1 .45-1 1s.45 1 1 1h2.58l-.29.29a1.003 1.003 0 0 0 1.42 1.42l2-2c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71z"],
        "following": ["M9.37 12.69c-1.2-.53-1.04-.85-1.08-1.29-.01-.06-.01-.12-.01-.19.41-.37.75-.87.97-1.44 0 0 .01-.03.01-.04.05-.13.09-.26.12-.39.28-.06.44-.36.5-.63.06-.11.19-.39.16-.7-.04-.4-.2-.59-.38-.67v-.07c0-.52-.05-1.26-.14-1.74a2.72 2.72 0 0 0-.09-.43 3.02 3.02 0 0 0-1.04-1.51C7.87 3.2 7.15 3 6.5 3c-.64 0-1.36.2-1.87.59-.5.38-.87.92-1.05 1.51-.04.13-.07.27-.09.4-.09.49-.14 1.24-.14 1.75v.06c-.19.07-.36.26-.4.68-.03.31.1.59.16.7.06.28.23.59.51.64.04.14.08.27.13.39 0 .01.01.02.01.02v.01c.22.59.57 1.1.99 1.46 0 .06-.01.12-.01.17-.04.44.08.76-1.12 1.29-1.2.53-3.01 1.1-3.38 1.95C-.13 15.5.02 16 .02 16h12.96s.15-.5-.22-1.36c-.38-.85-2.19-1.42-3.39-1.95zM14.99 2h-2.58l.29-.29A1.003 1.003 0 0 0 11.28.29l-2 2c-.17.18-.29.43-.29.71 0 .28.11.53.29.71l2 2a1.003 1.003 0 0 0 1.42-1.42L12.41 4h2.58c.55 0 1-.45 1-1s-.45-1-1-1z"],
        "font": ["M13.93 14.67L8.94.67h-.01C8.79.28 8.43 0 8 0s-.79.28-.93.67h-.01l-5 14h.01c-.04.1-.07.21-.07.33 0 .55.45 1 1 1 .43 0 .79-.28.93-.67h.01L5.49 11h5.02l1.55 4.34h.01c.14.38.5.66.93.66.55 0 1-.45 1-1 0-.12-.03-.23-.07-.33zM6.2 9L8 3.97 9.8 9H6.2z"],
        "fork": ["M13.7 9.29a1.003 1.003 0 0 0-1.42 1.42l.29.29H11.4l-5-5h6.17l-.29.29a1.003 1.003 0 0 0 1.42 1.42l2-2c.18-.18.29-.43.29-.71s-.11-.53-.29-.71l-2-2a1.003 1.003 0 0 0-1.42 1.42l.29.29H.99c-.55 0-1 .45-1 1s.45 1 1 1h2.59l6.71 6.71c.18.18.43.29.71.29h1.59l-.29.29a1.003 1.003 0 0 0 1.42 1.42l2-2c.18-.18.29-.43.29-.71s-.11-.53-.29-.71l-2.02-2z"],
        "form": ["M2 11v2h2v-2H2zM1 9h4c.55 0 1 .45 1 1v4c0 .55-.45 1-1 1H1c-.55 0-1-.45-1-1v-4c0-.55.45-1 1-1zm9-6h5c.55 0 1 .45 1 1s-.45 1-1 1h-5c-.55 0-1-.45-1-1s.45-1 1-1zM6 1a1.003 1.003 0 0 1 .71 1.71l-3 4C3.53 6.89 3.28 7 3 7s-.53-.11-.71-.29l-2-2a1.003 1.003 0 0 1 1.42-1.42L3 4.59l2.29-3.3C5.47 1.11 5.72 1 6 1zm4 10h5c.55 0 1 .45 1 1s-.45 1-1 1h-5c-.55 0-1-.45-1-1s.45-1 1-1z"],
        "full-circle": ["M8 0a8 8 0 1 0 0 16A8 8 0 1 0 8 0z"],
        "full-stacked-chart": ["M13 12h1c.55 0 1-.45 1-1V8h-3v3c0 .55.45 1 1 1zM10 2c0-.55-.45-1-1-1H8c-.55 0-1 .45-1 1v3h3V2zm0 4H7v3h3V6zm5-4c0-.55-.45-1-1-1h-1c-.55 0-1 .45-1 1v2h3V2zm0 3h-3v2h3V5zM5 5H2v3h3V5zm-2 7h1c.55 0 1-.45 1-1V9H2v2c0 .55.45 1 1 1zm12 1H2c-.55 0-1 .45-1 1s.45 1 1 1h13c.55 0 1-.45 1-1s-.45-1-1-1zM5 2c0-.55-.45-1-1-1H3c-.55 0-1 .45-1 1v2h3V2zm3 10h1c.55 0 1-.45 1-1v-1H7v1c0 .55.45 1 1 1z"],
        "fullscreen": ["M3.41 2H5c.55 0 1-.45 1-1s-.45-1-1-1H1C.45 0 0 .45 0 1v4c0 .55.45 1 1 1s1-.45 1-1V3.41L5.29 6.7c.18.19.43.3.71.3a1.003 1.003 0 0 0 .71-1.71L3.41 2zM6 9c-.28 0-.53.11-.71.29L2 12.59V11c0-.55-.45-1-1-1s-1 .45-1 1v4c0 .55.45 1 1 1h4c.55 0 1-.45 1-1s-.45-1-1-1H3.41l3.29-3.29c.19-.18.3-.43.3-.71 0-.55-.45-1-1-1zm9 1c-.55 0-1 .45-1 1v1.59L10.71 9.3A.965.965 0 0 0 10 9a1.003 1.003 0 0 0-.71 1.71l3.3 3.29H11c-.55 0-1 .45-1 1s.45 1 1 1h4c.55 0 1-.45 1-1v-4c0-.55-.45-1-1-1zm0-10h-4c-.55 0-1 .45-1 1s.45 1 1 1h1.59l-3.3 3.29a1.003 1.003 0 0 0 1.42 1.42L14 3.41V5c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1z"],
        "function": ["M8.12 4.74H6.98c.33-1.29.75-2.24 1.28-2.84.33-.37.64-.56.95-.56.06 0 .11.02.15.05.04.04.06.09.06.15 0 .05-.04.15-.13.29-.09.14-.13.28-.13.4 0 .18.07.33.2.46.14.13.31.19.52.19.22 0 .41-.08.56-.23.15-.16.23-.37.23-.63 0-.3-.11-.55-.34-.74C10.1 1.09 9.74 1 9.24 1c-.78 0-1.49.22-2.12.67-.64.45-1.24 1.2-1.81 2.23-.2.36-.38.59-.56.69-.18.1-.46.15-.85.15l-.26.9h1.08l-1.59 6.12c-.27 1.01-.44 1.63-.54 1.86-.14.34-.34.63-.62.87-.11.1-.24.15-.4.15a.15.15 0 0 1-.11-.04l-.04-.05c0-.03.04-.08.12-.16.08-.08.12-.2.12-.36 0-.18-.06-.33-.19-.44-.12-.12-.3-.18-.54-.18-.28 0-.51.08-.68.23-.16.14-.25.32-.25.53 0 .22.1.42.31.59.21.17.53.25.97.25.7 0 1.32-.18 1.87-.54.54-.36 1.02-.92 1.42-1.67.41-.75.82-1.96 1.25-3.63l.91-3.54h1.1l.29-.89zm5.43 1.52c.2-.15.41-.23.62-.23.08 0 .23.03.45.09s.41.09.57.09c.23 0 .42-.08.57-.23.16-.16.24-.36.24-.61 0-.26-.08-.47-.23-.62-.15-.15-.37-.23-.66-.23-.25 0-.5.06-.72.18-.23.12-.51.38-.86.78-.26.3-.64.81-1.15 1.55-.2-.91-.55-1.75-1.05-2.51l-2.72.46-.06.29c.2-.04.37-.06.51-.06.27 0 .49.11.67.34.28.36.67 1.45 1.17 3.26-.39.52-.66.85-.8 1.01-.24.26-.44.42-.59.5-.12.06-.25.09-.41.09-.11 0-.3-.06-.56-.18-.18-.08-.34-.12-.48-.12-.27 0-.48.08-.66.25-.17.17-.26.38-.26.64 0 .25.08.44.24.6.16.15.37.23.64.23.26 0 .5-.05.73-.16.23-.11.52-.34.86-.69.35-.35.82-.9 1.43-1.67.23.73.44 1.25.61 1.58s.37.57.59.71c.22.15.5.22.83.22.32 0 .65-.11.98-.34.44-.3.88-.81 1.34-1.53l-.26-.15c-.31.43-.54.7-.69.8-.1.07-.22.1-.35.1-.16 0-.32-.1-.48-.3-.27-.34-.62-1.27-1.06-2.8.4-.68.73-1.13 1-1.34z"],
        "gantt-chart": ["M10 10c0 .55.45 1 1 1h4c.55 0 1-.45 1-1s-.45-1-1-1h-4c-.55 0-1 .45-1 1zM6 7c0 .55.45 1 1 1h4c.55 0 1-.45 1-1s-.45-1-1-1H7c-.55 0-1 .45-1 1zm9 5H2V3c0-.55-.45-1-1-1s-1 .45-1 1v10c0 .55.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1zM4 5h3c.55 0 1-.45 1-1s-.45-1-1-1H4c-.55 0-1 .45-1 1s.45 1 1 1z"],
        "geolocation": ["M-.01 6.66l7.34 2 2 7.33 6.66-16z"],
        "geosearch": ["M8.82 12.4h.66c.23 0 .36-.17.36-.4v-1.48l.19-.18c-.27.03-.55.06-.83.06-.28 0-.56-.03-.84-.07.02.04.05.08.07.13V12c0 .23.15.4.39.4zM6.4 15.1A5.51 5.51 0 0 1 .9 9.6c0-.49.06-.98.18-1.43.03 0 .05-.01.08-.01h.08v.44c0 .19.17.34.36.34.03 0 .07-.01.1-.01l.71.7c.07.07.19.07.26 0s.07-.19 0-.26l-.7-.72c0-.02.03-.03.03-.05v-.11c0-.15.08-.2.23-.33h.42c.08 0 .15-.01.22-.04h.02c.02-.02.03-.02.04-.04.01-.01.01-.01.02-.01l.02-.01.9-.9c-.13-.26-.24-.52-.34-.8h-.5v-.43c0-.01.05.05.04-.08h.31c-.03-.13-.06-.26-.08-.39h-.57c.16-.12.34-.24.51-.36-.02-.23-.04-.46-.04-.7 0-.12.01-.23.02-.34A6.385 6.385 0 0 0 0 9.6C0 13.13 2.87 16 6.4 16c3.1 0 5.67-2.22 6.26-5.15l-.78-.88c-.21 2.85-2.58 5.13-5.48 5.13zm-1.7-2.93v-.28h.12c.23 0 .39-.19.39-.42v-.54s.01-.01 0-.01L3.77 9.45h-.62c-.23 0-.38.19-.38.42v1.6c0 .23.14.42.38.42h.26v1.61c0 .23.22.41.45.41s.45-.18.45-.41v-.97H4.3c.24 0 .4-.13.4-.36zm11.07-2.34l-2.94-2.94c.11-.17.21-.34.3-.52.01-.03.03-.06.04-.09.08-.18.16-.36.22-.55v-.01c.06-.19.1-.38.14-.58.01-.05.01-.09.02-.14.03-.2.05-.4.05-.61a4.4 4.4 0 0 0-4.4-4.4C6.77 0 4.8 1.97 4.8 4.4s1.97 4.4 4.4 4.4c.21 0 .41-.02.61-.05.04 0 .09-.01.14-.02.2-.03.39-.08.58-.14h.01c.19-.06.37-.14.55-.22.03-.01.06-.03.09-.04.18-.09.35-.19.52-.3l2.94 2.94a.8.8 0 0 0 .57.23c.44 0 .8-.36.8-.8a.895.895 0 0 0-.24-.57zM9.2 7.6C7.43 7.6 6 6.17 6 4.4c0-1.77 1.43-3.2 3.2-3.2s3.2 1.43 3.2 3.2c0 1.77-1.43 3.2-3.2 3.2zm1.54 4.26v-.52c0-.09-.1-.17-.19-.17s-.19.07-.19.17v.52c0 .09.1.17.19.17s.19-.07.19-.17z"],
        "git-branch": ["M12 1c-1.66 0-3 1.34-3 3 0 1.25.76 2.32 1.85 2.77A2.02 2.02 0 0 1 9 8H7c-.73 0-1.41.2-2 .55V5.82C6.16 5.4 7 4.3 7 3c0-1.66-1.34-3-3-3S1 1.34 1 3c0 1.3.84 2.4 2 2.82v4.37c-1.16.4-2 1.51-2 2.81 0 1.66 1.34 3 3 3s3-1.34 3-3c0-1.04-.53-1.95-1.32-2.49.35-.31.81-.51 1.32-.51h2c1.92 0 3.52-1.35 3.91-3.15A2.996 2.996 0 0 0 12 1zM4 2c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm0 12c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm8-9c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1z"],
        "git-commit": ["M15 7h-3.14c-.45-1.72-2-3-3.86-3S4.59 5.28 4.14 7H1c-.55 0-1 .45-1 1s.45 1 1 1h3.14c.45 1.72 2 3 3.86 3s3.41-1.28 3.86-3H15c.55 0 1-.45 1-1s-.45-1-1-1zm-7 3c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z"],
        "git-merge": ["M12 6c-1.3 0-2.4.84-2.82 2H9c-1.62 0-3-.96-3.63-2.34C6.33 5.16 7 4.16 7 3c0-1.66-1.34-3-3-3S1 1.34 1 3c0 1.3.84 2.4 2 2.81v4.37C1.84 10.6 1 11.7 1 13c0 1.66 1.34 3 3 3s3-1.34 3-3c0-1.3-.84-2.4-2-2.82V8.43A5.89 5.89 0 0 0 9 10h.18A2.996 2.996 0 0 0 15 9c0-1.66-1.34-3-3-3zm-8 8c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zM4 4c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm8 6c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1z"],
        "git-new-branch": ["M14 2h-1V1c0-.55-.45-1-1-1s-1 .45-1 1v1h-1c-.55 0-1 .45-1 1s.45 1 1 1h1v1c0 .55.45 1 1 1s1-.45 1-1V4h1c.55 0 1-.45 1-1s-.45-1-1-1zm-3.18 4.8C10.51 7.51 9.82 8 9 8H7c-.73 0-1.41.2-2 .55V5.82C6.16 5.4 7 4.3 7 3c0-1.66-1.34-3-3-3S1 1.34 1 3c0 1.3.84 2.4 2 2.82v4.37c-1.16.4-2 1.51-2 2.81 0 1.66 1.34 3 3 3s3-1.34 3-3c0-1.04-.53-1.95-1.32-2.49.35-.31.81-.51 1.32-.51h2c1.9 0 3.49-1.33 3.89-3.11-.29.07-.58.11-.89.11-.41 0-.8-.08-1.18-.2zM4 2c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm0 12c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1z"],
        "git-pull": ["M3 1C1.34 1 0 2.34 0 4c0 1.3.84 2.4 2 2.82v3.37C.84 10.6 0 11.7 0 13c0 1.66 1.34 3 3 3s3-1.34 3-3c0-1.3-.84-2.4-2-2.82V6.82C5.16 6.4 6 5.3 6 4c0-1.66-1.34-3-3-3zm0 13c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm0-9c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm11 5.18V6c0-1.66-1.34-3-3-3H9.41l1.29-1.29c.19-.18.3-.43.3-.71A1.003 1.003 0 0 0 9.29.29l-3 3C6.11 3.47 6 3.72 6 4c0 .28.11.53.29.71l3 3a1.003 1.003 0 0 0 1.42-1.42L9.41 5H11c.55 0 1 .45 1 1v4.18A2.996 2.996 0 0 0 13 16c1.66 0 3-1.34 3-3 0-1.3-.84-2.4-2-2.82zM13 14c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1z"],
        "git-push": ["M4 6h1V5H4v1zm9 3c0-.28-.11-.53-.29-.71l-3-3C9.53 5.11 9.28 5 9 5s-.53.11-.71.29l-3 3a1.003 1.003 0 0 0 1.42 1.42L8 8.41V15c0 .55.45 1 1 1s1-.45 1-1V8.41l1.29 1.29c.18.19.43.3.71.3.55 0 1-.45 1-1zM5 3H4v1h1V3zm10-3H1C.45 0 0 .45 0 1v13c0 .55.45 1 1 1h5v-2H2v-1h4v-1H3V2h11v9h-2v1h2v1h-2v2h3c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1z"],
        "git-repo": ["M5 9H4v1h1V9zm10-9H1C.45 0 0 .45 0 1v13c0 .55.45 1 1 1h3v1l2-1 2 1v-1h7c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zM4 13H2v-1h2v1zm10 0H8v-1h6v1zm0-2H3V2h11v9zM5 3H4v1h1V3zm0 4H4v1h1V7zm0-2H4v1h1V5z"],
        "glass": ["M2 0v4c0 2.97 2.16 5.43 5 5.91V14H5c-.55 0-1 .45-1 1s.45 1 1 1h6c.55 0 1-.45 1-1s-.45-1-1-1H9V9.91c2.84-.48 5-2.94 5-5.91V0H2z"],
        "globe": ["M4.45 7.83c-.26 0-.41.21-.41.46v1.75c0 .26.16.46.41.46h.29v1.77c0 .25.24.45.49.45s.49-.2.49-.45V11.2h-.01c.26 0 .44-.14.44-.4v-.3h.14c.26 0 .43-.2.43-.46v-.59s.01-.01 0-.01l-1.58-1.6h-.69zM8.51 3.9h.22c.06 0 .12-.01.12-.07 0-.06-.05-.07-.12-.07h-.22c-.06 0-.12.01-.12.07.01.06.06.07.12.07zm-2.33-.05c.07-.07.07-.19 0-.26l-.5-.5a.187.187 0 0 0-.26 0c-.07.07-.07.19 0 .26l.5.5c.07.07.19.07.26 0zm3.06.89c.07 0 .14-.06.14-.12v-.31c0-.07-.07-.12-.14-.12s-.14.06-.14.12v.31c0 .07.07.12.14.12zM8 0C3.58 0 0 3.58 0 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6 0-.55.1-1.07.23-1.57h.11v.47c0 .2.18.37.39.37.03 0 .08-.01.11-.02l.78.77c.08.08.2.08.28 0 .08-.08.08-.2 0-.28l-.75-.78c0-.02.04-.04.04-.06v-.12c0-.16.09-.22.25-.36h.46c.09 0 .17-.01.24-.05h.02c.02-.01.03-.02.05-.03.01-.01.01-.01.02-.01l.02-.02 1.59-1.58c.18-.18.18-.46 0-.64s-.47-.15-.65.03l-.3.34h-.57v-.48c0-.01.05.05.05-.09h.64c.12 0 .22-.09.22-.21s-.1-.21-.22-.21H4.1c.18-.15.34-.31.54-.44l.01-.01c.21-.14.45-.25.68-.37.15-.07.29-.15.44-.21.17-.07.35-.11.53-.17.18-.05.35-.12.53-.16a6.05 6.05 0 0 1 3.47.35c.05.02.1.05.16.08.25.11.48.24.71.39.25.16.49.34.71.55H10.6s0-.03-.01-.03c-.04 0-.09 0-.13.03l-.51.51a.17.17 0 0 0 0 .23c.06.06.17.06.23 0l.42-.44.01-.02h.25c0 .14-.07.09-.07.12v.07c0 .22-.15.37-.36.37h-.38c-.19 0-.38.21-.38.4v.17h-.1c-.12 0-.2.06-.2.18v.25h-.23c-.17 0-.3.11-.3.28 0 .17.13.26.3.26.07 0 .14.03.19-.11l.04.01.49-.46h.17l.39.37c.03.03.08.02.12-.01.03-.03.03-.12 0-.15l-.32-.35h.23l.09.12c.18.18.48.17.66-.01l.09-.1h.4c.02 0 .08.05.08.05v.24l-.05-.01h-.36c-.11 0-.21.1-.21.21 0 .11.09.21.21.21h.41v.15c-.14.21-.24.42-.45.42h-.94v-.01l-.44-.44a.47.47 0 0 0-.66 0l-.42.43v.01H8.6c-.26 0-.49.21-.49.46v.92c0 .26.23.45.49.45h.9c.34.14.57.35.72.69v1.68c0 .26.17.44.42.44h.72c.26 0 .4-.18.4-.44V9l.89-.86.03-.02.02-.01h.03c.07-.08.15-.19.15-.31v-.91c0-.18-.16-.32-.31-.46H13c.01.28.21.42.46.42h.42c.08.37.12.76.12 1.15 0 3.31-2.69 6-6 6zm4.54-4.27c-.1 0-.21.08-.21.18v.57c0 .1.11.18.21.18.1 0 .21-.08.21-.18v-.57c0-.1-.11-.18-.21-.18zM8.37 3.19c0-.25-.2-.42-.46-.42h-.54c-.25 0-.42.18-.42.43 0 .03-.1.04.05.08v.47c0 .15.06.27.21.27s.21-.12.21-.27v-.14h.5c.24 0 .45-.16.45-.42z"],
        "globe-network": ["M8 0C3.58 0 0 3.58 0 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm5.17 5h-2.44c-.21-1.11-.51-2.03-.91-2.69 1.43.46 2.61 1.43 3.35 2.69zM10 8c0 .73-.05 1.39-.12 2H6.12C6.05 9.39 6 8.73 6 8s.05-1.39.12-2h3.76c.07.61.12 1.27.12 2zM8 2c.67 0 1.36 1.1 1.73 3H6.27C6.64 3.1 7.33 2 8 2zm-1.82.31c-.4.66-.71 1.58-.91 2.69H2.83a6.025 6.025 0 0 1 3.35-2.69zM2 8c0-.7.13-1.37.35-2h2.76C5.04 6.62 5 7.28 5 8s.04 1.38.11 2H2.35C2.13 9.37 2 8.7 2 8zm.83 3h2.44c.21 1.11.51 2.03.91 2.69A6.025 6.025 0 0 1 2.83 11zM8 14c-.67 0-1.36-1.1-1.73-3h3.46c-.37 1.9-1.06 3-1.73 3zm1.82-.31c.4-.66.7-1.58.91-2.69h2.44a6.025 6.025 0 0 1-3.35 2.69zM13.65 10h-2.76c.07-.62.11-1.28.11-2s-.04-1.38-.11-2h2.76c.22.63.35 1.3.35 2s-.13 1.37-.35 2z"],
        "graph": ["M14 3c-1.06 0-1.92.83-1.99 1.88l-1.93.97A2.95 2.95 0 0 0 8 5c-.56 0-1.08.16-1.52.43L3.97 3.34C3.98 3.23 4 3.12 4 3c0-1.1-.9-2-2-2s-2 .9-2 2 .9 2 2 2c.24 0 .47-.05.68-.13l2.51 2.09C5.08 7.29 5 7.63 5 8c0 .96.46 1.81 1.16 2.35l-.56 1.69c-.91.19-1.6.99-1.6 1.96 0 1.1.9 2 2 2s2-.9 2-2c0-.51-.2-.97-.51-1.32l.56-1.69A2.99 2.99 0 0 0 11 8c0-.12-.02-.24-.04-.36l1.94-.97c.32.21.69.33 1.1.33 1.1 0 2-.9 2-2s-.9-2-2-2z"],
        "graph-remove": ["M12.89 8.11l-.01.01-.38-.38-.38.38-.02-.02c-.54.55-1.27.9-2.1.9-1.66 0-3-1.34-3-3 0-.83.35-1.56.9-2.1l-.02-.02.38-.38-.38-.38.01-.01C7.35 2.57 7 1.83 7 1c0-.34.07-.65.17-.96A8.004 8.004 0 0 0 0 8c0 4.42 3.58 8 8 8 4.14 0 7.54-3.14 7.96-7.17-.31.1-.62.17-.96.17-.83 0-1.57-.35-2.11-.89zm1.02-4.61l1.79-1.79c.19-.18.3-.43.3-.71a1.003 1.003 0 0 0-1.71-.71l-1.79 1.8L10.71.3A.965.965 0 0 0 10 0a1.003 1.003 0 0 0-.71 1.71l1.79 1.79-1.79 1.79a1.003 1.003 0 0 0 1.42 1.42l1.79-1.79 1.79 1.79a1.003 1.003 0 0 0 1.42-1.42l-1.8-1.79z"],
        "grid": ["M15 9c.55 0 1-.45 1-1s-.45-1-1-1h-1V4h1c.55 0 1-.45 1-1s-.45-1-1-1h-1V1c0-.55-.45-1-1-1s-1 .45-1 1v1H9V1c0-.55-.45-1-1-1S7 .45 7 1v1H4V1c0-.55-.45-1-1-1S2 .45 2 1v1H1c-.55 0-1 .45-1 1s.45 1 1 1h1v3H1c-.55 0-1 .45-1 1s.45 1 1 1h1v3H1c-.55 0-1 .45-1 1s.45 1 1 1h1v1c0 .55.45 1 1 1s1-.45 1-1v-1h3v1c0 .55.45 1 1 1s1-.45 1-1v-1h3v1c0 .55.45 1 1 1s1-.45 1-1v-1h1c.55 0 1-.45 1-1s-.45-1-1-1h-1V9h1zm-8 3H4V9h3v3zm0-5H4V4h3v3zm5 5H9V9h3v3zm0-5H9V4h3v3z"],
        "grid-view": ["M0 1v6h7V0H1C.45 0 0 .45 0 1zm0 14c0 .55.45 1 1 1h6V9H0v6zM15 0H9v7h7V1c0-.55-.45-1-1-1zM9 16h6c.55 0 1-.45 1-1V9H9v7z"],
        "group-objects": ["M5 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6-3H5C2.24 3 0 5.24 0 8s2.24 5 5 5h6c2.76 0 5-2.24 5-5s-2.24-5-5-5zm0 9H5c-2.21 0-4-1.79-4-4s1.79-4 4-4h6c2.21 0 4 1.79 4 4s-1.79 4-4 4zm0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"],
        "grouped-bar-chart": ["M10 12c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1s-1 .45-1 1v8c0 .55.45 1 1 1zm3 0c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1s-1 .45-1 1v5c0 .55.45 1 1 1zm2 1H1c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1zm-9-1c.55 0 1-.45 1-1V8c0-.55-.45-1-1-1s-1 .45-1 1v3c0 .55.45 1 1 1zm-3 0c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1s-1 .45-1 1v9c0 .55.45 1 1 1z"],
        "hand": ["M15 5c0-.55-.45-1-1-1-.41 0-.76.24-.91.59v.01s0 .01-.01.01L11.57 8h-.36l.78-4.84C12 3.11 12 3.05 12 3a1 1 0 1 0-1.99-.16v.01L9.18 8H9V1c0-.55-.45-1-1-1S7 .45 7 1v7h-.09l-.93-5.18A1 1 0 0 0 5 2c-.55 0-1 .45-1 1 0 .05 0 .11.01.16L5.26 11h-.04L2.83 7.44C2.65 7.18 2.35 7 2 7c-.55 0-1 .45-1 1 0 .17.04.33.12.47l3 5.69h.01v.01A5.002 5.002 0 0 0 13 11v-.59l1.93-5.05c.05-.11.07-.23.07-.36z"],
        "hand-down": ["M14.72 7.87c-1.54-.67-2.99-2.68-3.7-3.95C10.11 1.95 9.93 0 6.14 0 4.05 0 2.71.61 1.92 2.12 1.27 3.36 1 5.21 1 7.83v.79c0 .65.6 1.18 1.35 1.18.34 0 .64-.11.88-.29.17.48.68.84 1.29.84.41 0 .78-.16 1.03-.42.23.37.67.63 1.19.63.57 0 1.05-.31 1.25-.74l.01.63v4.05c0 .83.67 1.5 1.5 1.5s1.5-.67 1.5-1.5V7.9c.58.41 1.55 1.21 2.47 1.29 1.57.14 1.82-1.07 1.25-1.32z"],
        "hand-left": ["M12.08 4.97c-1.26-.71-3.27-2.15-3.95-3.7C7.88.7 6.67.96 6.81 2.52c.09.93.89 1.9 1.3 2.48H1.5C.67 5 0 5.67 0 6.5S.67 8 1.5 8h4.05l.63.01c-.44.2-.75.69-.75 1.25 0 .52.26.96.63 1.19-.26.25-.42.61-.42 1.03 0 .61.35 1.12.84 1.29-.18.24-.29.54-.29.88 0 .75.54 1.35 1.19 1.35h.79c2.62 0 4.47-.28 5.71-.92 1.51-.79 2.12-2.14 2.12-4.22 0-3.79-1.95-3.97-3.92-4.89z"],
        "hand-right": ["M14.5 5H7.89c.41-.58 1.21-1.55 1.3-2.47C9.34.97 8.12.71 7.87 1.28c-.67 1.54-2.68 2.99-3.95 3.7C1.95 5.89 0 6.07 0 9.86c0 2.09.61 3.43 2.12 4.22 1.24.65 3.09.92 5.71.92h.79c.65 0 1.18-.6 1.18-1.35 0-.34-.11-.64-.29-.88.48-.17.84-.68.84-1.29 0-.41-.16-.78-.42-1.03.37-.23.63-.67.63-1.19 0-.57-.31-1.05-.74-1.25l.63-.01h4.05c.83 0 1.5-.67 1.5-1.5S15.33 5 14.5 5z"],
        "hand-up": ["M13.65 6.19c-.34 0-.64.11-.88.29-.17-.48-.68-.84-1.29-.84-.41 0-.78.16-1.03.42-.23-.37-.67-.63-1.19-.63-.57 0-1.05.31-1.25.74L8 5.55V1.5C8 .67 7.33 0 6.5 0S5 .67 5 1.5v6.61c-.58-.41-1.55-1.21-2.48-1.3C.96 6.67.7 7.88 1.28 8.13c1.54.67 2.99 2.68 3.7 3.95C5.89 14.05 6.07 16 9.86 16c2.09 0 3.43-.61 4.22-2.12.64-1.24.92-3.09.92-5.71v-.79c0-.65-.6-1.19-1.35-1.19z"],
        "header": ["M13 1c-.55 0-1 .45-1 1v5H4V2c0-.55-.45-1-1-1s-1 .45-1 1v12c0 .55.45 1 1 1s1-.45 1-1V9h8v5c0 .55.45 1 1 1s1-.45 1-1V2c0-.55-.45-1-1-1z"],
        "header-one": ["M14.06 8c-.04.23-.12.44-.25.61-.13.17-.29.3-.48.41-.18.11-.39.18-.62.23-.23.04-.46.07-.71.07v1.03h1.74V16H15V8h-.94zM7 0c-.56 0-1 .45-1 1v4H2V1c0-.55-.45-1-1-1-.56 0-1 .45-1 1v10c0 .55.45 1 1 1 .56 0 1-.45 1-1V7h4v4c0 .55.45 1 1 1 .56 0 1-.45 1-1V1c0-.54-.45-1-1-1z"],
        "header-two": ["M13.17 13.93c-.17.15-.33.29-.46.44-.13.16-.22.32-.27.49h3.55V16H11c.01-.65.16-1.22.44-1.71s.67-.91 1.17-1.27c.24-.18.49-.36.75-.54.25-.18.49-.36.71-.57.21-.2.39-.42.53-.65.14-.24.21-.51.22-.82 0-.14-.02-.29-.05-.45-.03-.16-.09-.31-.18-.45a1.13 1.13 0 0 0-.37-.35c-.16-.09-.37-.14-.63-.14-.24 0-.43.05-.59.15-.16.1-.29.24-.38.42-.1.17-.17.38-.21.62-.05.24-.07.5-.08.77h-1.19c0-.43.05-.83.16-1.2s.27-.69.49-.96c.21-.25.48-.46.79-.62.31-.15.67-.23 1.07-.23.45 0 .82.08 1.11.23.3.16.55.36.73.6.19.24.32.5.39.79.08.28.12.54.12.79 0 .31-.04.6-.13.85s-.22.49-.37.7c-.15.21-.32.41-.52.59s-.4.35-.61.51l-.63.45c-.21.14-.39.28-.57.42zM0 1c0-.55.44-1 1-1 .55 0 1 .46 1 1v10c0 .55-.44 1-1 1-.55 0-1-.46-1-1V1zm6 0c0-.55.44-1 1-1 .55 0 1 .46 1 1v10c0 .55-.44 1-1 1-.55 0-1-.46-1-1V1zM2 5h4v2H2V5z"],
        "headset": ["M14.85 6.34C14.18 2.72 11.37 0 8 0S1.82 2.72 1.15 6.34C.47 6.9 0 8.1 0 9.5 0 11.43.9 13 2 13c0 1.1.9 2 2 2h2c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-1c0-.55-.45-1-1-1H7c-.55 0-1 .45-1 1H4c-.55 0-1-.45-1-1 .55 0 1-.45 1-1V7c0-.45-.3-.81-.71-.94C3.97 3.7 5.81 2 8 2s4.03 1.7 4.71 4.06c-.41.13-.71.49-.71.94v5c0 .55.45 1 1 1h1c1.1 0 2-1.57 2-3.5 0-1.4-.47-2.6-1.15-3.16z"],
        "heart": ["M16 5.095c0-2.255-1.88-4.083-4.2-4.083-1.682 0-3.13.964-3.8 2.352a4.206 4.206 0 0 0-3.8-2.352C1.88 1.012 0 2.84 0 5.095c0 .066.007.13.01.194H.004c.001.047.01.096.014.143l.013.142c.07.8.321 1.663.824 2.573C2.073 10.354 4.232 12.018 8 15c3.767-2.982 5.926-4.647 7.144-6.854.501-.905.752-1.766.823-2.562.007-.055.012-.11.016-.164.003-.043.012-.088.013-.13h-.006c.003-.066.01-.13.01-.195z"],
        "heart-broken": ["M7.71 8.87L6.17 6.55l.02-.01A.906.906 0 0 1 6 6c0-.07.03-.13.04-.19h-.02l.78-3.92C6.09 1.34 5.19 1 4.2 1 1.88 1 0 2.83 0 5.09c0 .07.01.13.01.19H0c0 .05.01.1.01.14 0 .05.01.1.01.14.07.8.32 1.66.82 2.57 1.07 1.94 2.88 3.47 5.86 5.84l-.68-2.74h.02C6.03 11.16 6 11.08 6 11c0-.28.11-.53.29-.71l1.42-1.42zM16 5.09C16 2.83 14.12 1 11.8 1c-1.2 0-2.27.5-3.04 1.28l-.7 3.51 1.77 2.66-.01.01c.1.15.18.33.18.54 0 .28-.11.53-.29.71l-1.6 1.6.75 3.01c3.23-2.56 5.16-4.15 6.28-6.18.5-.91.75-1.77.82-2.56.01-.05.01-.11.02-.16 0-.04.01-.09.01-.13h-.01c.01-.07.02-.14.02-.2z"],
        "heat-grid": ["M0 10h5V7H0v3zm1-2h3v1H1V8zm14-5h-4v3h5V4c0-.55-.45-1-1-1zm0 2h-3V4h3v1zM0 4v2h5V3H1c-.55 0-1 .45-1 1zm0 9c0 .55.45 1 1 1h4v-3H0v2zm6-7h4V3H6v3zm0 8h4v-3H6v3zm1-2h2v1H7v-1zm4 2h4c.55 0 1-.45 1-1v-2h-5v3zm0-4h5V7h-5v3zm-5 0h4V7H6v3z"],
        "heatmap": ["M2 11c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm11-7c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm3 4.5A2.5 2.5 0 0 0 13.5 6c-.98 0-1.82.57-2.23 1.39-.6-.78-1.51-1.3-2.56-1.36.18-.49.29-.99.29-1.53C9 2.01 6.99 0 4.5 0S0 2.01 0 4.5 2.01 9 4.5 9c.19 0 .37-.03.56-.06-.03.19-.06.37-.06.56C5 11.43 6.57 13 8.5 13c1.63 0 2.98-1.11 3.37-2.62.44.38 1 .62 1.63.62A2.5 2.5 0 0 0 16 8.5zM14.5 13c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z"],
        "help": ["M8 0C3.58 0 0 3.58 0 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm1 13H7v-2h2v2zm1.93-6.52c-.14.32-.35.64-.62.97L9.25 8.83c-.12.15-.24.29-.28.42-.04.13-.09.3-.09.52V10H7.12V8.88s.05-.51.21-.71L8.4 6.73c.22-.26.35-.49.44-.68.09-.19.12-.38.12-.58 0-.3-.1-.55-.28-.75-.18-.19-.44-.28-.76-.28-.33 0-.59.1-.78.29-.19.19-.33.46-.4.81-.03.11-.1.15-.2.14l-1.7-.25c-.12-.01-.16-.08-.14-.19.12-.82.46-1.47 1.03-1.94.57-.48 1.32-.72 2.25-.72.47 0 .9.07 1.29.22s.72.34 1 .59c.28.25.49.55.65.89.15.35.22.72.22 1.12s-.07.75-.21 1.08z"],
        "helper-management": ["M13 5h-2v2h2V5zm0 6h-2v2h2v-2zm0-3h-2v2h2V8zm2-8H1C.4 0 0 .4 0 1v14c0 .6.4 1 1 1h14c.6 0 1-.4 1-1V1c0-.6-.4-1-1-1zm-1 14H2V2h12v12zm-7-3H5v2h2v-2zm3 0H8v2h2v-2z"],
        "highlight": ["M9.12 11.07l2-2.02.71.71 4-4.04L10.17 0l-4 4.04.71.71-2 2.02 4.24 4.3zM2 12.97h4c.28 0 .53-.11.71-.3l1-1.01-3.42-3.45-3 3.03c-.18.18-.29.44-.29.72 0 .55.45 1.01 1 1.01zm13 1.01H1c-.55 0-1 .45-1 1.01S.45 16 1 16h14c.55 0 1-.45 1-1.01s-.45-1.01-1-1.01z"],
        "history": ["M8 3c-.55 0-1 .45-1 1v4c0 .28.11.53.29.71l2 2a1.003 1.003 0 0 0 1.42-1.42L9 7.59V4c0-.55-.45-1-1-1zm0-3a7.95 7.95 0 0 0-6 2.74V1c0-.55-.45-1-1-1S0 .45 0 1v4c0 .55.45 1 1 1h4c.55 0 1-.45 1-1s-.45-1-1-1H3.54C4.64 2.78 6.23 2 8 2c3.31 0 6 2.69 6 6 0 2.61-1.67 4.81-4 5.63v-.01c-.63.23-1.29.38-2 .38-3.31 0-6-2.69-6-6 0-.55-.45-1-1-1s-1 .45-1 1c0 4.42 3.58 8 8 8 .34 0 .67-.03 1-.07.02 0 .04-.01.06-.01C12.98 15.4 16 12.06 16 8c0-4.42-3.58-8-8-8z"],
        "home": ["M2 10v5c0 .55.45 1 1 1h3v-5h4v5h3c.55 0 1-.45 1-1v-5L8 4l-6 6zm13.71-2.71L14 5.59V2c0-.55-.45-1-1-1s-1 .45-1 1v1.59L8.71.29C8.53.11 8.28 0 8 0s-.53.11-.71.29l-7 7a1.003 1.003 0 0 0 1.42 1.42L8 2.41l6.29 6.29c.18.19.43.3.71.3a1.003 1.003 0 0 0 .71-1.71z"],
        "horizontal-bar-chart": ["M4 5h7c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1zM1 1c-.55 0-1 .45-1 1v13c0 .55.45 1 1 1s1-.45 1-1V2c0-.55-.45-1-1-1zm14 6H4c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h11c.55 0 1-.45 1-1V8c0-.55-.45-1-1-1zm-6 5H4c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h5c.55 0 1-.45 1-1v-1c0-.55-.45-1-1-1z"],
        "horizontal-bar-chart-asc": ["M1 3h5c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1zm0 4h7c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1zm14 6H1c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1zM1 11h10c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1z"],
        "horizontal-bar-chart-desc": ["M15 1H1c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1zM8 9H1c-.55 0-1 .45-1 1s.45 1 1 1h7c.55 0 1-.45 1-1s-.45-1-1-1zm-2 4H1c-.55 0-1 .45-1 1s.45 1 1 1h5c.55 0 1-.45 1-1s-.45-1-1-1zm5-8H1c-.55 0-1 .45-1 1s.45 1 1 1h10c.55 0 1-.45 1-1s-.45-1-1-1z"],
        "horizontal-distribution": ["M2 0c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1zm13 0c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1zm-5 2H7c-.55 0-1 .45-1 1v9c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1z"],
        "id-number": ["M2 5v7h12V5H2zm0-2h12c1.1 0 2 .9 2 2v7c0 1.1-.9 2-2 2H2c-1.1 0-2-.9-2-2V5c0-1.1.9-2 2-2z", "M7.9 10.48c-.14-.33-.84-.55-1.3-.75-.46-.2-.4-.33-.42-.5v-.07c.16-.14.29-.33.37-.56 0 0 0-.01.01-.02.02-.05.03-.1.05-.15.1-.01.16-.13.19-.23.03-.04.07-.15.06-.27-.02-.16-.08-.24-.15-.26v-.03c0-.2-.02-.48-.05-.67-.01-.05-.02-.1-.03-.16-.07-.23-.21-.44-.4-.58-.2-.15-.48-.23-.73-.23s-.53.08-.72.23c-.19.14-.33.35-.4.58-.02.05-.03.1-.03.16-.05.18-.06.47-.06.67v.03c-.07.03-.14.1-.15.26-.02.12.03.22.06.27.02.1.09.22.2.24.01.05.03.1.05.15v.01c.08.23.22.42.38.56v.07c-.02.17.03.29-.43.5-.46.2-1.16.42-1.3.75s-.09.52-.09.52H8c-.01 0 .05-.19-.1-.52zM10 6h2c.55 0 1 .45 1 1s-.45 1-1 1h-2c-.55 0-1-.45-1-1s.45-1 1-1zM10 9h2c.55 0 1 .45 1 1s-.45 1-1 1h-2c-.55 0-1-.45-1-1s.45-1 1-1z"],
        "image-rotate-left": ["M13 2h-1.59l.29-.29c.19-.18.3-.43.3-.71a1.003 1.003 0 0 0-1.71-.71l-2 2C8.11 2.47 8 2.72 8 3c0 .28.11.53.29.71l2 2a1.003 1.003 0 0 0 1.42-1.42l-.3-.29H13c.55 0 1 .45 1 1v3c0 .55.45 1 1 1s1-.45 1-1V5c0-1.66-1.34-3-3-3zm-5.5 9c.28 0 .5-.22.5-.5s-.22-.5-.5-.5-.5.22-.5.5.22.5.5.5zM10 7H1c-.55 0-1 .45-1 1v7c0 .55.45 1 1 1h9c.55 0 1-.45 1-1V8c0-.55-.45-1-1-1zm-1 6.33L7 12l-1 1-2-3-2 2.67V9h7v4.33z"],
        "image-rotate-right": ["M5.71 5.71l2-2C7.89 3.53 8 3.28 8 3c0-.28-.11-.53-.29-.71l-2-2a1.003 1.003 0 0 0-1.42 1.42l.3.29H3C1.34 2 0 3.34 0 5v3c0 .55.45 1 1 1s1-.45 1-1V5c0-.55.45-1 1-1h1.59l-.3.29a1.003 1.003 0 0 0 1.42 1.42zM12.5 11c.28 0 .5-.22.5-.5s-.22-.5-.5-.5-.5.22-.5.5.22.5.5.5zM15 7H6c-.55 0-1 .45-1 1v7c0 .55.45 1 1 1h9c.55 0 1-.45 1-1V8c0-.55-.45-1-1-1zm-1 6.33L12 12l-1 1-2-3-2 2.67V9h7v4.33z"],
        "import": ["M7.29 11.71c.18.18.43.29.71.29s.53-.11.71-.29l4-4a1.003 1.003 0 0 0-1.42-1.42L9 8.59V1c0-.55-.45-1-1-1S7 .45 7 1v7.59l-2.29-2.3a1.003 1.003 0 0 0-1.42 1.42l4 4zM15 11c-.55 0-1 .45-1 1v2H2v-2c0-.55-.45-1-1-1s-1 .45-1 1v3c0 .55.45 1 1 1h14c.55 0 1-.45 1-1v-3c0-.55-.45-1-1-1z"],
        "inbox": ["M13.91 2.6c-.16-.36-.51-.61-.92-.61h-10c-.41 0-.77.25-.92.61L-.01 7.45v5.54c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V7.45L13.91 2.6zm-1.92 5.39c-.55 0-1 .45-1 1v1h-6v-1c0-.55-.45-1-1-1H1.94l1.71-4h8.68l1.71 4h-2.05z"],
        "info-sign": ["M8 0C3.58 0 0 3.58 0 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zM7 3h2v2H7V3zm3 10H6v-1h1V7H6V6h3v6h1v1z"],
        "inner-join": ["M6.6 3.3C5.3 4.4 4.5 6.1 4.5 8s.8 3.6 2.1 4.7c-.5.2-1 .3-1.6.3-2.8 0-5-2.2-5-5s2.2-5 5-5c.6 0 1.1.1 1.6.3zm-1.96 8.68C3.92 10.83 3.5 9.46 3.5 8s.42-2.83 1.14-3.98C2.6 4.2 1 5.91 1 8s1.6 3.8 3.64 3.98zM8 4c-1.2.9-2 2.4-2 4s.8 3.1 2 4c1.2-.9 2-2.3 2-4s-.8-3.1-2-4zm3-1c2.8 0 5 2.2 5 5s-2.2 5-5 5c-.6 0-1.1-.1-1.6-.3 1.3-1.1 2.1-2.9 2.1-4.7s-.8-3.5-2.1-4.7c.5-.2 1-.3 1.6-.3zm.35 1.02c.73 1.15 1.14 2.52 1.14 3.98s-.42 2.83-1.14 3.98c2.04-.18 3.64-1.9 3.64-3.98s-1.6-3.8-3.64-3.98z"],
        "insert": ["M5 9h2v2c0 .6.4 1 1 1s1-.4 1-1V9h2c.6 0 1-.4 1-1s-.4-1-1-1H9V5c0-.6-.4-1-1-1s-1 .4-1 1v2H5c-.6 0-1 .4-1 1s.4 1 1 1zm10-9H1C.4 0 0 .4 0 1v14c0 .6.4 1 1 1h14c.6 0 1-.4 1-1V1c0-.6-.4-1-1-1zm-1 14H2V2h12v12z"],
        "intersection": ["M10 3c-.92 0-1.76.26-2.5.69C6.76 3.26 5.92 3 5 3 2.24 3 0 5.24 0 8s2.24 5 5 5c.92 0 1.76-.26 2.5-.69.74.43 1.58.69 2.5.69 2.76 0 5-2.24 5-5s-2.24-5-5-5zm-4.1 7.85c-.29.09-.59.15-.9.15-1.66 0-3-1.34-3-3s1.34-3 3-3c.31 0 .61.06.9.15C5.33 5.96 5 6.94 5 8s.33 2.04.9 2.85zM10 11c-.31 0-.61-.06-.9-.15.57-.81.9-1.79.9-2.85s-.33-2.04-.9-2.85c.29-.09.59-.15.9-.15 1.66 0 3 1.34 3 3s-1.34 3-3 3z"],
        "ip-address": ["M5 2.66C5 4.14 8 8 8 8s3-3.86 3-5.34C10.99 1.2 9.66 0 8 0S5 1.2 5 2.66zM7 3c0-.55.45-1 1-1s1 .45 1 1-.45 1-1 1-1-.45-1-1zM10.5 10H8v5h1v-4h1v1H9v1h2v-3h-.5zM2 9h12c.55 0 1 .45 1 1v5c0 .55-.45 1-1 1H2c-.55 0-1-.45-1-1v-5c0-.55.45-1 1-1zm4 1v5h1v-5H6z"],
        "issue": ["M8 16A8 8 0 1 1 8 0a8 8 0 0 1 0 16zm0-2A6 6 0 1 0 8 2a6 6 0 0 0 0 12zm1-2H7v-2h2v2zm0-3H7V4h2v5z"],
        "issue-closed": ["M9.296.104a2.99 2.99 0 0 0-1.003.664 2.987 2.987 0 0 0-.75 1.25 6 6 0 1 0 6.28 4.527c.043-.039.085-.079.127-.12l1.456-1.456A8 8 0 1 1 9.296.105zm2.532 5.2a.997.997 0 0 1-.707-.294L9.707 3.596a1 1 0 0 1 1.414-1.414l.707.707 1.768-1.768a1 1 0 1 1 1.414 1.415L12.536 5.01a.997.997 0 0 1-.708.293zM9 12H7v-2h2v2zm0-3H7V4h2v5z"],
        "issue-new": ["M10.568.421c-.01.04-.018.08-.026.121-.837.156-1.53.73-1.85 1.497a6 6 0 1 0 5.27 5.273 2.51 2.51 0 0 0 1.496-1.854c.04-.008.081-.016.121-.026A8 8 0 1 1 10.568.421zM9 12H7v-2h2v2zm0-3H7V4h2v5zm1-6c0-.55.45-1 1-1h1V1c0-.55.45-1 1-1s1 .45 1 1v1h1c.55 0 1 .45 1 1s-.45 1-1 1h-1v1.005c0 .55-.45 1-1 1s-1-.45-1-1V4h-1c-.55 0-1-.45-1-1z"],
        "italic": ["M9.8 4H11c.5 0 1-.4 1-1s-.4-1-1-1H7c-.5 0-1 .4-1 1s.4 1 1 1h.8l-1.6 8H5c-.5 0-1 .4-1 1s.4 1 1 1h4c.5 0 1-.4 1-1s-.4-1-1-1h-.8l1.6-8z"],
        "join-table": ["M15 5h-3V2c0-.55-.45-1-1-1H1c-.55 0-1 .45-1 1v8c0 .55.45 1 1 1h3v3c0 .55.45 1 1 1h10c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm-5-1v2H6V4h4zm0 6H6V7h4v3zM2 4h3v2H2V4zm0 5V7h3v2H2zm4 4v-2h4v2H6zm8 0h-3v-2h3v2zm0-3h-3V8h3v2z"],
        "key": ["M11 0C8.24 0 6 2.24 6 5c0 1.02.31 1.96.83 2.75L.29 14.29a1.003 1.003 0 0 0 1.42 1.42L3 14.41l1.29 1.29c.18.19.43.3.71.3s.53-.11.71-.29l2-2c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71L6.41 11l1.83-1.83c.8.52 1.74.83 2.76.83 2.76 0 5-2.24 5-5s-2.24-5-5-5zm0 8c-.23 0-.45-.03-.66-.08-.01 0-.02-.01-.03-.01-.21-.05-.41-.12-.6-.21a3.014 3.014 0 0 1-1.62-2c0-.01-.01-.02-.01-.03C8.03 5.45 8 5.23 8 5c0-1.66 1.34-3 3-3s3 1.34 3 3-1.34 3-3 3z"],
        "key-backspace": ["M15 2H6c-.28 0-.53.11-.71.29l-5 5C.11 7.47 0 7.72 0 8c0 .28.11.53.29.71l5 5c.18.18.43.29.71.29h9c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm-2.29 7.29a1.003 1.003 0 0 1-1.42 1.42L10 9.41 8.71 10.7c-.18.19-.43.3-.71.3a1.003 1.003 0 0 1-.71-1.71L8.59 8l-1.3-1.29a1.003 1.003 0 0 1 1.42-1.42L10 6.59l1.29-1.29c.18-.19.43-.3.71-.3a1.003 1.003 0 0 1 .71 1.71L11.41 8l1.3 1.29z"],
        "key-command": ["M12 9h-1V7h1c1.66 0 3-1.34 3-3s-1.34-3-3-3-3 1.34-3 3v1H7V4c0-1.66-1.34-3-3-3S1 2.34 1 4s1.34 3 3 3h1v2H4c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3v-1h2v1c0 1.66 1.34 3 3 3s3-1.34 3-3-1.34-3-3-3zm0-6c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zM4 13c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm0-8c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm5 4H7V7h2v2zm3 4c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1z"],
        "key-control": ["M12.71 5.29l-4-4C8.53 1.11 8.28 1 8 1s-.53.11-.71.29l-4 4a1.003 1.003 0 0 0 1.42 1.42L8 3.41l3.29 3.29c.18.19.43.3.71.3a1.003 1.003 0 0 0 .71-1.71z"],
        "key-delete": ["M15.71 7.29l-5-5A.997.997 0 0 0 10 2H1c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h9c.28 0 .53-.11.71-.29l5-5c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71zm-7 2a1.003 1.003 0 0 1-1.42 1.42L6 9.41 4.71 10.7c-.18.19-.43.3-.71.3a1.003 1.003 0 0 1-.71-1.71L4.59 8l-1.3-1.29a1.003 1.003 0 0 1 1.42-1.42L6 6.59 7.29 5.3c.18-.19.43-.3.71-.3a1.003 1.003 0 0 1 .71 1.71L7.41 8l1.3 1.29z"],
        "key-enter": ["M14 2c-.55 0-1 .45-1 1v3c0 1.66-1.34 3-3 3H4.41L5.7 7.71c.19-.18.3-.43.3-.71a1.003 1.003 0 0 0-1.71-.71l-3 3c-.18.18-.29.43-.29.71 0 .28.11.53.29.71l3 3a1.003 1.003 0 0 0 1.42-1.42L4.41 11H10c2.76 0 5-2.24 5-5V3c0-.55-.45-1-1-1z"],
        "key-escape": ["M2 7c.55 0 1-.45 1-1V4.41L7.29 8.7c.18.19.43.3.71.3a1.003 1.003 0 0 0 .71-1.71L4.41 3H6c.55 0 1-.45 1-1s-.45-1-1-1H2c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1zm7-5.9v2A5 5 0 1 1 3.1 9h-2c.49 3.39 3.38 6 6.9 6 3.87 0 7-3.13 7-7 0-3.52-2.61-6.41-6-6.9z"],
        "key-option": ["M11 4h4c.55 0 1-.45 1-1s-.45-1-1-1h-4c-.55 0-1 .45-1 1s.45 1 1 1zm4 8h-3.43L5.86 2.49h-.02A.975.975 0 0 0 5 2H1c-.55 0-1 .45-1 1s.45 1 1 1h3.43l5.71 9.51.01-.01c.18.3.49.5.85.5h4c.55 0 1-.45 1-1s-.45-1-1-1z"],
        "key-shift": ["M13.71 7.29l-5-5C8.53 2.11 8.28 2 8 2s-.53.11-.71.29l-5 5A1.003 1.003 0 0 0 3 9h2v4c0 .55.45 1 1 1h4c.55 0 1-.45 1-1V9h2a1.003 1.003 0 0 0 .71-1.71z"],
        "key-tab": ["M15 10H4.41L5.7 8.71c.19-.18.3-.43.3-.71a1.003 1.003 0 0 0-1.71-.71L2 9.59V8c0-.55-.45-1-1-1s-1 .45-1 1v6c0 .55.45 1 1 1s1-.45 1-1v-1.59l2.29 2.29c.18.19.43.3.71.3a1.003 1.003 0 0 0 .71-1.71L4.41 12H15c.55 0 1-.45 1-1s-.45-1-1-1zm0-9c-.55 0-1 .45-1 1v1.59L11.71 1.3A.965.965 0 0 0 11 1a1.003 1.003 0 0 0-.71 1.71L11.59 4H1c-.55 0-1 .45-1 1s.45 1 1 1h10.59L10.3 7.29c-.19.18-.3.43-.3.71a1.003 1.003 0 0 0 1.71.71L14 6.41V8c0 .55.45 1 1 1s1-.45 1-1V2c0-.55-.45-1-1-1z"],
        "known-vehicle": ["M15 3a.997.997 0 0 0-.707.293L12 5.586l-1.293-1.293a1 1 0 1 0-1.414 1.414l2 2a.997.997 0 0 0 1.414 0l3-3A1 1 0 0 0 15 3zm-.879 6.121l-.007-.007c-.313.309-.69.552-1.114.702V10h-.998H12h-1v-.184c-.424-.15-.8-.395-1.112-.704l-.01.01-2-2 .012-.012A2.978 2.978 0 0 1 7.184 6H3c-.176 0-.06-.824 0-1l.73-1.63C3.79 3.192 3.823 3 4 3H7.78C8.328 2.39 9.115 2 10 2c.768 0 1.461.293 1.987.77l.844-.844c-.238-.244-.524-.442-.794-.524C12.037 1.402 10.72 1 8 1c-2.72 0-4.037.402-4.037.402-.508.155-1.078.711-1.268 1.237l-.763 2.117H.88c-.484 0-.88.423-.88.939s.396.939.88.939h.375L1 7c-.034.685 0 1.436 0 2v5c0 .657.384 1 1 1s1-.343 1-1v-1h10v1c0 .657.384 1 1 1s1-.343 1-1V9l-.003-.754-.876.875zM5.001 10H3V8h2v2z"],
        "label": ["M11 2H1c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V7l-5-5zm3 10H2V4h8v2H3v1h7v1h4v4zm-3-5V4l3 3h-3zm-8 3h10V9H3v1z"],
        "layer": ["M16 8c0-.37-.21-.68-.51-.85l.01-.01-7-4-.01.01C8.34 3.06 8.18 3 8 3s-.34.06-.49.15l-.01-.02-7 4 .01.01C.21 7.32 0 7.63 0 8s.21.68.51.85l-.01.01 7 4 .01-.01c.15.09.31.15.49.15s.34-.06.49-.15l.01.01 7-4-.01-.01c.3-.17.51-.48.51-.85z"],
        "layers": ["M.55 4.89l7 3.5c.14.07.29.11.45.11s.31-.04.45-.11l7-3.5a.998.998 0 0 0-.06-1.81L8.4.08a1.006 1.006 0 0 0-.79 0l-6.99 3a.992.992 0 0 0-.07 1.81zM15 10c-.16 0-.31.04-.45.11L8 13.38 1.45 10.1c-.14-.06-.29-.1-.45-.1-.55 0-1 .45-1 1 0 .39.23.73.55.89l7 3.5c.14.07.29.11.45.11s.31-.04.45-.11l7-3.5c.32-.16.55-.5.55-.89 0-.55-.45-1-1-1zm0-3.5c-.16 0-.31.04-.45.11L8 9.88 1.45 6.61A.997.997 0 0 0 1 6.5c-.55 0-1 .45-1 1 0 .39.23.73.55.89l7 3.5c.14.07.29.11.45.11s.31-.04.45-.11l7-3.5c.32-.16.55-.5.55-.89 0-.55-.45-1-1-1z"],
        "layout": ["M14 4c-1.1 0-2 .9-2 2 0 .47.17.9.44 1.24l-.68.91A1.996 1.996 0 0 0 9.07 9.5H7.93C7.71 8.64 6.93 8 6 8c-.47 0-.9.17-1.24.44l-.91-.68c.1-.23.15-.49.15-.76 0-.37-.11-.71-.28-1.01l2.27-2.27c.3.17.64.28 1.01.28 1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2c0 .37.11.71.28 1.01L3.01 5.28C2.71 5.11 2.37 5 2 5 .9 5 0 5.9 0 7s.9 2 2 2c.47 0 .9-.17 1.24-.44l.91.68c-.1.23-.15.49-.15.76 0 .37.11.71.28 1.01l-1.27 1.27C2.71 12.11 2.37 12 2 12c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2c0-.37-.11-.71-.28-1.01l1.27-1.27c.3.17.64.28 1.01.28.93 0 1.71-.64 1.93-1.5h1.14c.22.86 1 1.5 1.93 1.5 1.1 0 2-.9 2-2 0-.47-.17-.9-.44-1.24l.68-.91c.23.1.49.15.76.15 1.1 0 2-.9 2-2s-.9-2-2-2z"],
        "layout-auto": ["M14 9.5c-.56 0-1.06.23-1.42.59L8.99 8l3.59-2.09A2.002 2.002 0 0 0 16 4.5c0-1.1-.9-2-2-2s-2 .9-2 2c0 .19.03.37.08.54L8.5 7.13v-3.2c.86-.22 1.5-1 1.5-1.93 0-1.1-.9-2-2-2S6 .9 6 2c0 .93.64 1.71 1.5 1.93v3.2L3.92 5.04c.05-.17.08-.35.08-.54 0-1.1-.9-2-2-2s-2 .9-2 2 .9 2 2 2c.56 0 1.06-.23 1.42-.59L7.01 8l-3.59 2.09A2.002 2.002 0 0 0 0 11.5c0 1.1.9 2 2 2s2-.9 2-2c0-.19-.03-.37-.08-.54L7.5 8.87v3.2c-.86.22-1.5 1-1.5 1.93 0 1.1.9 2 2 2s2-.9 2-2c0-.93-.64-1.71-1.5-1.93v-3.2l3.58 2.09c-.05.17-.08.35-.08.54 0 1.1.9 2 2 2s2-.9 2-2-.9-2-2-2z"],
        "layout-balloon": ["M14 11c-.2 0-.38.04-.56.09L12.42 9.4c.36-.36.58-.85.58-1.4 0-.55-.22-1.04-.58-1.4l1.01-1.69c.19.05.37.09.57.09 1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2c0 .55.22 1.04.58 1.4l-1.01 1.69C11.38 6.04 11.2 6 11 6c-.93 0-1.71.64-1.93 1.5H6.93C6.71 6.64 5.93 6 5 6c-.2 0-.38.04-.56.09L3.42 4.4C3.78 4.04 4 3.55 4 3c0-1.1-.9-2-2-2s-2 .9-2 2 .9 2 2 2c.2 0 .38-.04.56-.09L3.58 6.6C3.22 6.96 3 7.45 3 8c0 .55.22 1.04.58 1.4l-1.01 1.69C2.38 11.04 2.2 11 2 11c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2c0-.55-.22-1.04-.58-1.4l1.01-1.69c.19.05.37.09.57.09.93 0 1.71-.64 1.93-1.5h2.14c.22.86 1 1.5 1.93 1.5.2 0 .38-.04.56-.09l1.01 1.69c-.35.36-.57.85-.57 1.4 0 1.1.9 2 2 2s2-.9 2-2-.9-2-2-2z"],
        "layout-circle": ["M14.16 6.02c-.12-.36-.26-.7-.43-1.03.17-.29.27-.63.27-.99 0-1.1-.9-2-2-2-.36 0-.7.1-.99.27-.33-.17-.67-.31-1.03-.43A1.987 1.987 0 0 0 8 0C6.95 0 6.1.81 6.02 1.84c-.36.12-.7.26-1.03.43C4.7 2.1 4.36 2 4 2c-1.1 0-2 .9-2 2 0 .36.1.7.27.99-.17.33-.31.67-.43 1.03C.81 6.1 0 6.95 0 8c0 1.05.81 1.9 1.84 1.98.12.36.26.7.43 1.03-.17.29-.27.63-.27.99 0 1.1.9 2 2 2 .36 0 .7-.1.99-.27.33.17.67.32 1.03.43C6.1 15.19 6.95 16 8 16c1.05 0 1.9-.81 1.98-1.84.36-.12.7-.26 1.03-.43.29.17.63.27.99.27 1.1 0 2-.9 2-2 0-.36-.1-.7-.27-.99.17-.33.31-.67.43-1.03C15.19 9.9 16 9.05 16 8c0-1.05-.81-1.9-1.84-1.98zm-.99 3.79c-.05.16-.11.31-.17.46-.3-.17-.64-.27-1-.27-1.1 0-2 .9-2 2 0 .36.1.7.27 1-.15.07-.3.12-.46.17C9.5 12.48 8.81 12 8 12s-1.5.48-1.81 1.17c-.16-.06-.32-.11-.46-.17.17-.3.27-.64.27-1 0-1.1-.9-2-2-2-.36 0-.7.1-1 .27-.07-.15-.12-.3-.17-.46C3.52 9.5 4 8.81 4 8s-.48-1.5-1.17-1.81c.06-.16.11-.32.17-.46.3.17.64.27 1 .27 1.1 0 2-.9 2-2 0-.36-.1-.7-.27-1 .15-.07.3-.12.46-.17C6.5 3.52 7.19 4 8 4s1.5-.48 1.81-1.17c.16.06.32.11.46.17-.17.3-.27.64-.27 1 0 1.1.9 2 2 2 .36 0 .7-.1 1-.27.07.15.12.3.17.46C12.48 6.5 12 7.19 12 8s.48 1.5 1.17 1.81z"],
        "layout-grid": ["M2 12c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-6C.9 6 0 6.9 0 8s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-6C.9 0 0 .9 0 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 4c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zM8 0C6.9 0 6 .9 6 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6 12c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zM8 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"],
        "layout-group-by": ["M2 6C.9 6 0 6.9 0 8s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 5c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12-7c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zM2 1C.9 1 0 1.9 0 3s.9 2 2 2 2-.9 2-2-.9-2-2-2zm7 8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm5 3c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"],
        "layout-hierarchy": ["M14.5 12.07V9.93c.86-.22 1.5-1 1.5-1.93 0-1.1-.9-2-2-2-.93 0-1.71.64-1.93 1.5H9.93c-.18-.7-.73-1.25-1.43-1.43V3.93c.86-.22 1.5-1 1.5-1.93 0-1.1-.9-2-2-2S6 .9 6 2c0 .93.64 1.71 1.5 1.93v2.14c-.7.18-1.25.73-1.43 1.43H3.93C3.71 6.64 2.93 6 2 6 .9 6 0 6.9 0 8c0 .93.64 1.71 1.5 1.93v2.14c-.86.22-1.5 1-1.5 1.93 0 1.1.9 2 2 2s2-.9 2-2c0-.93-.64-1.71-1.5-1.93V9.93c.7-.18 1.25-.73 1.43-1.43h2.14c.18.7.73 1.25 1.43 1.43v2.14c-.86.22-1.5 1-1.5 1.93 0 1.1.9 2 2 2s2-.9 2-2c0-.93-.64-1.71-1.5-1.93V9.93c.7-.18 1.25-.73 1.43-1.43h2.14c.18.7.73 1.25 1.43 1.43v2.14c-.86.22-1.5 1-1.5 1.93 0 1.1.9 2 2 2s2-.9 2-2c0-.93-.64-1.71-1.5-1.93z"],
        "layout-linear": ["M14 6c-.93 0-1.71.64-1.93 1.5H9.93C9.71 6.64 8.93 6 8 6s-1.71.64-1.93 1.5H3.93C3.71 6.64 2.93 6 2 6 .9 6 0 6.9 0 8s.9 2 2 2c.93 0 1.71-.64 1.93-1.5h2.13C6.29 9.36 7.07 10 8 10s1.71-.64 1.93-1.5h2.13c.22.86 1 1.5 1.93 1.5 1.1 0 2-.9 2-2C16 6.9 15.1 6 14 6z"],
        "layout-skew-grid": ["M2 6C.9 6 0 6.9 0 8s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12-2c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zM2 12c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zM2 0C.9 0 0 .9 0 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6 9c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6-3c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zM8 3c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6 9c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"],
        "layout-sorted-clusters": ["M2 6C.9 6 0 6.9 0 8s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zM2 0C.9 0 0 .9 0 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zM8 9c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"],
        "left-join": ["M6.6 3.3C6.1 3.1 5.6 3 5 3 2.2 3 0 5.2 0 8s2.2 5 5 5c.6 0 1.1-.1 1.6-.3C5.3 11.6 4.5 9.9 4.5 8s.8-3.6 2.1-4.7zM8 4c-1.2.9-2 2.4-2 4s.8 3.1 2 4c1.2-.9 2-2.3 2-4s-.8-3.1-2-4zm3-1c2.8 0 5 2.2 5 5s-2.2 5-5 5c-.6 0-1.1-.1-1.6-.3 1.3-1.1 2.1-2.9 2.1-4.7s-.8-3.5-2.1-4.7c.5-.2 1-.3 1.6-.3zm.35 1.02c.73 1.15 1.14 2.52 1.14 3.98s-.42 2.83-1.14 3.98c2.04-.18 3.64-1.9 3.64-3.98s-1.6-3.8-3.64-3.98z"],
        "lifesaver": ["M9.405 11.746C8.968 11.91 8.495 12 8 12c-.494 0-.968-.09-1.405-.254l-.702 1.873C6.548 13.865 7.258 14 8 14c.742 0 1.452-.135 2.107-.38l-.702-1.874zm2.341-2.341l1.873.702C13.865 9.452 14 8.742 14 8c0-.742-.135-1.452-.38-2.107l-1.874.702c.164.437.254.91.254 1.405 0 .494-.09.968-.254 1.405zM9.405 4.254l.702-1.873A5.987 5.987 0 0 0 8 2c-.742 0-1.452.135-2.107.38l.702 1.874C7.032 4.09 7.505 4 8 4c.494 0 .968.09 1.405.254zM4.254 6.595L2.38 5.893A5.987 5.987 0 0 0 2 8c0 .742.135 1.452.38 2.107l1.874-.702A3.991 3.991 0 0 1 4 8c0-.494.09-.968.254-1.405zM8 16A8 8 0 1 1 8 0a8 8 0 0 1 0 16zm0-6a2 2 0 1 0 0-4 2 2 0 0 0 0 4z"],
        "lightbulb": ["M9.01 14h-2c-.55 0-1 .45-1 1s.45 1 1 1h2c.55 0 1-.45 1-1s-.44-1-1-1zm1-3h-4c-.55 0-1 .45-1 1s.45 1 1 1h4c.55 0 1-.45 1-1s-.44-1-1-1zm-2-11C5.26 0 3.03 1.95 3.03 4.35c0 2.37 1.63 2.64 1.94 5.22 0 .24.22.44.5.44h5.09c.28 0 .5-.19.5-.44C11.37 6.99 13 6.72 13 4.35 13 1.95 10.77 0 8.01 0z"],
        "link": ["M4.99 11.99c.28 0 .53-.11.71-.29l6-6a1.003 1.003 0 0 0-1.42-1.42l-6 6a1.003 1.003 0 0 0 .71 1.71zm3.85-2.02L6.4 12.41l-1 1-.01-.01c-.36.36-.85.6-1.4.6-1.1 0-2-.9-2-2 0-.55.24-1.04.6-1.4l-.01-.01 1-1 2.44-2.44c-.33-.1-.67-.16-1.03-.16-1.1 0-2.09.46-2.81 1.19l-.02-.02-1 1 .02.02c-.73.72-1.19 1.71-1.19 2.81 0 2.21 1.79 4 4 4 1.1 0 2.09-.46 2.81-1.19l.02.02 1-1-.02-.02c.73-.72 1.19-1.71 1.19-2.81 0-.35-.06-.69-.15-1.02zm7.15-5.98c0-2.21-1.79-4-4-4-1.1 0-2.09.46-2.81 1.19l-.02-.02-1 1 .02.02c-.72.72-1.19 1.71-1.19 2.81 0 .36.06.69.15 1.02l2.44-2.44 1-1 .01.01c.36-.36.85-.6 1.4-.6 1.1 0 2 .9 2 2 0 .55-.24 1.04-.6 1.4l.01.01-1 1-2.43 2.45c.33.09.67.15 1.02.15 1.1 0 2.09-.46 2.81-1.19l.02.02 1-1-.02-.02a3.92 3.92 0 0 0 1.19-2.81z"],
        "list": ["M1 3h14c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1zm14 10H1c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1zm0-4H1c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1zm0-4H1c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1z"],
        "list-columns": ["M6 1c.55 0 1 .45 1 1s-.45 1-1 1H1c-.55 0-1-.45-1-1s.45-1 1-1h5zm0 4c.55 0 1 .45 1 1s-.45 1-1 1H1c-.55 0-1-.45-1-1s.45-1 1-1h5zm0 4c.55 0 1 .45 1 1s-.45 1-1 1H1c-.55 0-1-.45-1-1s.45-1 1-1h5zm0 4c.55 0 1 .45 1 1s-.45 1-1 1H1c-.55 0-1-.45-1-1s.45-1 1-1h5zm9-12c.55 0 1 .45 1 1s-.45 1-1 1h-5c-.55 0-1-.45-1-1s.45-1 1-1h5zm0 4c.55 0 1 .45 1 1s-.45 1-1 1h-5c-.55 0-1-.45-1-1s.45-1 1-1h5zm0 4c.55 0 1 .45 1 1s-.45 1-1 1h-5c-.55 0-1-.45-1-1s.45-1 1-1h5zm0 4c.55 0 1 .45 1 1s-.45 1-1 1h-5c-.55 0-1-.45-1-1s.45-1 1-1h5z"],
        "list-detail-view": ["M6 9H1c-.55 0-1 .45-1 1s.45 1 1 1h5c.55 0 1-.45 1-1s-.45-1-1-1zm0 4H1c-.55 0-1 .45-1 1s.45 1 1 1h5c.55 0 1-.45 1-1s-.45-1-1-1zm9-12h-5c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h5c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1zM6 5H1c-.55 0-1 .45-1 1s.45 1 1 1h5c.55 0 1-.45 1-1s-.45-1-1-1zm0-4H1c-.55 0-1 .45-1 1s.45 1 1 1h5c.55 0 1-.45 1-1s-.45-1-1-1z"],
        "locate": ["M15 7h-.09A6.98 6.98 0 0 0 9 1.1V1c0-.55-.45-1-1-1S7 .45 7 1v.09A6.98 6.98 0 0 0 1.1 7H1c-.55 0-1 .45-1 1s.45 1 1 1h.1A6.969 6.969 0 0 0 7 14.91V15c0 .55.45 1 1 1s1-.45 1-1v-.09A6.98 6.98 0 0 0 14.9 9h.1c.55 0 1-.45 1-1s-.45-1-1-1zm-6.02 5.9c-.05-.5-.46-.9-.98-.9s-.93.4-.98.9A5.017 5.017 0 0 1 3.1 8.98c.5-.05.9-.46.9-.98s-.4-.93-.9-.98A5.017 5.017 0 0 1 7.02 3.1c.05.5.46.9.98.9s.93-.4.98-.9c1.97.39 3.52 1.95 3.92 3.92-.5.05-.9.46-.9.98s.4.93.9.98a5.017 5.017 0 0 1-3.92 3.92zM8 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"],
        "lock": ["M13.96 7H12V3.95C12 1.77 10.21 0 8 0S4 1.77 4 3.95V7H1.96c-.55 0-.96.35-.96.9v6.91c0 .54.41 1.19.96 1.19h12c.55 0 1.04-.65 1.04-1.19V7.9c0-.55-.49-.9-1.04-.9zM6 7V3.95c0-1.09.9-1.97 2-1.97s2 .88 2 1.97V7H6z"],
        "log-in": ["M11 8c0-.28-.11-.53-.29-.71l-3-3a1.003 1.003 0 0 0-1.42 1.42L7.59 7H1c-.55 0-1 .45-1 1s.45 1 1 1h6.59L6.3 10.29c-.19.18-.3.43-.3.71a1.003 1.003 0 0 0 1.71.71l3-3c.18-.18.29-.43.29-.71zm4-8H9c-.55 0-1 .45-1 1s.45 1 1 1h5v12H9c-.55 0-1 .45-1 1s.45 1 1 1h6c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1z"],
        "log-out": ["M7 14H2V2h5c.55 0 1-.45 1-1s-.45-1-1-1H1C.45 0 0 .45 0 1v14c0 .55.45 1 1 1h6c.55 0 1-.45 1-1s-.45-1-1-1zm8.71-6.71l-3-3a1.003 1.003 0 0 0-1.42 1.42L12.59 7H6c-.55 0-1 .45-1 1s.45 1 1 1h6.59l-1.29 1.29c-.19.18-.3.43-.3.71a1.003 1.003 0 0 0 1.71.71l3-3c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71z"],
        "manual": ["M15.99 1.13c-.02-.41-.33-.77-.78-.87C12.26-.36 9.84.13 8 1.7 6.16.13 3.74-.36.78.26.33.35.03.72.01 1.13H0v12c0 .08 0 .17.02.26.12.51.65.82 1.19.71 2.63-.55 4.59-.04 6.01 1.57.02.03.06.04.08.06.02.02.03.04.05.06.04.03.09.04.13.07.05.03.09.05.14.07.11.04.23.07.35.07h.04c.12 0 .24-.03.35-.07.05-.02.09-.05.14-.07.04-.02.09-.04.13-.07.02-.02.03-.04.05-.06.03-.02.06-.03.08-.06 1.42-1.6 3.39-2.12 6.01-1.57.54.11 1.07-.21 1.19-.71.04-.09.04-.18.04-.26l-.01-12zM7 12.99c-1.4-.83-3.07-1.14-5-.93V1.96c2.11-.28 3.75.2 5 1.46v9.57zm7-.92c-1.93-.21-3.6.1-5 .93V3.42c1.25-1.26 2.89-1.74 5-1.46v10.11z"],
        "manually-entered-data": ["M1 8h3.76l2-2H1c-.55 0-1 .45-1 1s.45 1 1 1zm14.49-4.01c.31-.32.51-.76.51-1.24C16 1.78 15.22 1 14.25 1c-.48 0-.92.2-1.24.51l-1.44 1.44 2.47 2.47 1.45-1.43zM1 4h7.76l2-2H1c-.55 0-1 .45-1 1s.45 1 1 1zm0 6c-.55 0-1 .45-1 1 0 .48.35.86.8.96L2.76 10H1zm9.95-6.43l-6.69 6.69 2.47 2.47 6.69-6.69-2.47-2.47zm4.25 2.47L13.24 8H15c.55 0 1-.45 1-1 0-.48-.35-.86-.8-.96zM2 15l3.86-1.39-2.46-2.44L2 15zm13-5h-3.76l-2 2H15c.55 0 1-.45 1-1s-.45-1-1-1z"],
        "map": ["M15.55 3.17l-4.49-3A.975.975 0 0 0 9.99.15L5.53 2.82 1.56.17A1.003 1.003 0 0 0 0 1v11c0 .35.18.65.45.83l4.49 3a.975.975 0 0 0 1.07.02l4.46-2.67 3.97 2.65A1.003 1.003 0 0 0 16 15V4c0-.35-.18-.65-.45-.83zM5 13.46l-3-2v-8.6l2.94 1.96c.02.02.04.03.06.04v8.6zm5-2.32s-.01 0-.01.01L6 13.53V4.86s.01 0 .01-.01L10 2.47v8.67zm4 1.99l-2.94-1.96c-.02-.01-.04-.02-.05-.03v-8.6l3 2v8.59z"],
        "map-create": ["M14 6.82v6.32l-2.94-1.96c-.02-.01-.04-.02-.05-.03V6.22c-.08-.07-.15-.16-.22-.24-.28-.02-.54-.08-.79-.16v5.32s-.01 0-.01.01L6 13.53V4.86s.01 0 .01-.01l2.05-1.23C8.02 3.42 8 3.21 8 3c0-.98.47-1.84 1.2-2.39l-3.67 2.2L1.56.17A1.003 1.003 0 0 0 0 1v11c0 .35.18.65.45.83l4.49 3a.975.975 0 0 0 1.07.02l4.46-2.67 3.97 2.65A1.003 1.003 0 0 0 16 15V5.82c-.25.09-.52.14-.8.16-.33.36-.73.67-1.2.84zm-9 6.64l-3-2v-8.6l2.94 1.96c.02.02.04.03.06.04v8.6zM11 4h1v1c0 .55.45 1 1 1s1-.45 1-1V4h1c.55 0 1-.45 1-1s-.45-1-1-1h-1V1c0-.55-.45-1-1-1s-1 .45-1 1v1h-1c-.55 0-1 .45-1 1s.45 1 1 1z"],
        "map-marker": ["M8.46 0C5.42 0 2.95 2.39 2.95 5.33 2.95 8.28 8.46 16 8.46 16s5.51-7.72 5.51-10.67C13.96 2.39 11.5 0 8.46 0zm0 8a2.5 2.5 0 0 1 0-5 2.5 2.5 0 0 1 0 5z"],
        "maximize": ["M5.99 8.99c-.28 0-.53.11-.71.29l-3.29 3.29v-1.59c0-.55-.45-1-1-1s-1 .45-1 1v4c0 .55.45 1 1 1h4c.55 0 1-.45 1-1s-.45-1-1-1H3.41L6.7 10.7a1.003 1.003 0 0 0-.71-1.71zm9-9h-4c-.55 0-1 .45-1 1s.45 1 1 1h1.59l-3.3 3.3a.99.99 0 0 0-.29.7 1.003 1.003 0 0 0 1.71.71l3.29-3.29V5c0 .55.45 1 1 1s1-.45 1-1V1c0-.56-.45-1.01-1-1.01z"],
        "media": ["M11.99 6.99c.55 0 1-.45 1-1s-.45-1-1-1-1 .45-1 1 .45 1 1 1zm3-5h-14c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h14c.55 0 1-.45 1-1v-10c0-.55-.45-1-1-1zm-1 9l-5-3-1 2-3-4-3 5v-7h12v7z"],
        "menu": ["M1 4h14c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1zm14 8H1c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1zm0-5H1c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1z"],
        "menu-closed": ["M14.99 6.99h-9c-.55 0-1 .45-1 1s.45 1 1 1h9c.55 0 1-.45 1-1s-.45-1-1-1zm-12-2c-.28 0-.53.11-.71.29l-2 2a1.014 1.014 0 0 0 0 1.42l2 2a1.003 1.003 0 0 0 1.71-.71v-4c0-.55-.45-1-1-1zm3-1h9c.55 0 1-.45 1-1s-.45-1-1-1h-9c-.55 0-1 .45-1 1s.45 1 1 1zm9 8h-9c-.55 0-1 .45-1 1s.45 1 1 1h9c.55 0 1-.45 1-1s-.45-1-1-1z"],
        "menu-open": ["M9.99 11.99h-9c-.55 0-1 .45-1 1s.45 1 1 1h9c.55 0 1-.45 1-1s-.45-1-1-1zm0-5h-9c-.55 0-1 .45-1 1s.45 1 1 1h9c.55 0 1-.45 1-1s-.45-1-1-1zm0-5h-9c-.55 0-1 .45-1 1s.45 1 1 1h9c.55 0 1-.45 1-1s-.45-1-1-1zm5.71 5.3l-2-2a1.003 1.003 0 0 0-1.71.71v4a1.003 1.003 0 0 0 1.71.71l2-2c.18-.18.29-.43.29-.71s-.11-.53-.29-.71z"],
        "merge-columns": ["M5.71 5.29a1.003 1.003 0 0 0-1.42 1.42l.3.29H2V2h3v1.51c.52.06.99.29 1.34.65l.66.66V1c0-.55-.45-1-1-1H1C.45 0 0 .45 0 1v14c0 .55.45 1 1 1h5c.55 0 1-.45 1-1v-3.82l-.66.66c-.35.35-.82.59-1.34.65V14H2V9h2.59l-.3.29a1.003 1.003 0 0 0 1.42 1.42l2-2C7.89 8.53 8 8.28 8 8c0-.28-.11-.53-.29-.71l-2-2zM15 0h-5c-.55 0-1 .45-1 1v3.82l.66-.66c.35-.35.82-.59 1.34-.65V2h3v5h-2.59l.29-.29c.19-.18.3-.43.3-.71a1.003 1.003 0 0 0-1.71-.71l-2 2C8.11 7.47 8 7.72 8 8c0 .28.11.53.29.71l2 2a1.003 1.003 0 0 0 1.42-1.42l-.3-.29H14v5h-3v-1.51c-.52-.06-.99-.29-1.34-.65L9 11.18V15c0 .55.45 1 1 1h5c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1z"],
        "merge-links": ["M8 7c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm0 4c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm0-8c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm6 3c-.93 0-1.71.64-1.93 1.5H11V3c0-1.66-1.34-3-3-3S5 1.34 5 3v4.5H3.93C3.71 6.64 2.93 6 2 6 .9 6 0 6.9 0 8s.9 2 2 2c.93 0 1.71-.64 1.93-1.5H5V13c0 1.66 1.34 3 3 3s3-1.34 3-3V8.5h1.07c.22.86 1 1.5 1.93 1.5 1.1 0 2-.9 2-2s-.9-2-2-2zm-4 7c0 1.1-.9 2-2 2s-2-.9-2-2V3c0-1.1.9-2 2-2s2 .9 2 2v10z"],
        "minimize": ["M15.99.99a1.003 1.003 0 0 0-1.71-.71l-3.29 3.29V1.99c0-.55-.45-1-1-1s-1 .45-1 1v4c0 .55.45 1 1 1h4c.55 0 1-.45 1-1s-.45-1-1-1H12.4l3.3-3.29c.18-.18.29-.43.29-.71zm-10 8h-4c-.55 0-1 .45-1 1s.45 1 1 1h1.59L.29 14.28a1.003 1.003 0 0 0 1.42 1.42L5 12.41V14c0 .55.45 1 1 1s1-.45 1-1v-4a1.02 1.02 0 0 0-1.01-1.01z"],
        "minus": ["M13 7H3c-.55 0-1 .45-1 1s.45 1 1 1h10c.55 0 1-.45 1-1s-.45-1-1-1z"],
        "mobile-phone": ["M12 0H4c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1h8c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zM8 15c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm3-3H5V3h6v9z"],
        "mobile-video": ["M15 4c-.28 0-.53.11-.71.29L12 6.59V4c0-.55-.45-1-1-1H1c-.55 0-1 .45-1 1v8c0 .55.45 1 1 1h10c.55 0 1-.45 1-1V9.41l2.29 2.29c.18.19.43.3.71.3.55 0 1-.45 1-1V5c0-.55-.45-1-1-1z"],
        "moon": ["M15 11.38A7.835 7.835 0 0 1 7.85 16C3.51 16 0 12.49 0 8.15 0 4.97 1.89 2.23 4.62 1c-.45.99-.7 2.08-.7 3.23a7.85 7.85 0 0 0 7.85 7.85c1.15 0 2.24-.25 3.23-.7z"],
        "more": ["M2 6.03a2 2 0 1 0 0 4 2 2 0 1 0 0-4zM14 6.03a2 2 0 1 0 0 4 2 2 0 1 0 0-4zM8 6.03a2 2 0 1 0 0 4 2 2 0 1 0 0-4z"],
        "mountain": ["M16 13H3l6-9h1l2 2h1l3 7zm-2.5-3.5l-1-2.5h-1l-2-2-3 4.5L9 8l1 1 1-1 2.5 1.5zM5.94 7l-4.122 6H0l5-6h.94z"],
        "move": ["M15.71 7.29l-2-2a1.003 1.003 0 0 0-1.42 1.42l.3.29H9V3.41l.29.29c.18.19.43.3.71.3a1.003 1.003 0 0 0 .71-1.71l-2-2C8.53.11 8.28 0 8 0s-.53.11-.71.29l-2 2a1.003 1.003 0 0 0 1.42 1.42l.29-.3V7H3.41l.29-.29c.19-.18.3-.43.3-.71a1.003 1.003 0 0 0-1.71-.71l-2 2C.11 7.47 0 7.72 0 8c0 .28.11.53.29.71l2 2a1.003 1.003 0 0 0 1.42-1.42L3.41 9H7v3.59l-.29-.29A.965.965 0 0 0 6 12a1.003 1.003 0 0 0-.71 1.71l2 2c.18.18.43.29.71.29s.53-.11.71-.29l2-2a1.003 1.003 0 0 0-1.42-1.42l-.29.3V9h3.59l-.29.29c-.19.18-.3.43-.3.71a1.003 1.003 0 0 0 1.71.71l2-2c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71z"],
        "mugshot": ["M15 0H1C.45 0 0 .45 0 1v14c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 14h-.15c-.03-.09-.04-.16-.08-.25-.34-.79-2.01-1.31-3.12-1.8-1.11-.49-.96-.79-1-1.2-.01-.06-.01-.12-.01-.18.38-.34.69-.8.89-1.33 0 0 .01-.03.01-.04.04-.12.08-.24.11-.36.25-.05.4-.33.46-.59.06-.1.18-.36.15-.65-.04-.37-.19-.55-.35-.62v-.06c0-.48-.04-1.16-.13-1.61-.02-.12-.05-.25-.08-.37-.16-.55-.51-1.05-.96-1.39C9.26 3.19 8.6 3 8 3c-.59 0-1.26.19-1.73.55-.45.35-.8.84-.96 1.39-.04.13-.06.25-.08.38-.09.45-.13 1.13-.13 1.61v.06c-.18.06-.33.24-.37.62-.03.29.09.54.15.65.06.26.21.54.47.59.03.12.07.25.11.36 0 .01.01.02.01.02v.01c.21.54.53 1.01.92 1.35 0 .05-.01.11-.01.16-.04.41.08.7-1.03 1.2-1.11.49-2.77 1.01-3.12 1.8-.04.09-.05.16-.08.25H2V2h12v12z"],
        "multi-select": ["M12 3.98H4c-.55 0-1 .45-1 1v1h8v5h1c.55 0 1-.45 1-1v-5c0-.55-.45-1-1-1zm3-3H7c-.55 0-1 .45-1 1v1h8v5h1c.55 0 1-.45 1-1v-5c0-.55-.45-1-1-1zm-6 6H1c-.55 0-1 .45-1 1v5c0 .55.45 1 1 1h8c.55 0 1-.45 1-1v-5c0-.55-.45-1-1-1zm-1 5H2v-3h6v3z"],
        "music": ["M15 0c-.07 0-.13.03-.19.04V.02l-10 2v.02C4.35 2.13 4 2.52 4 3v9.12c-.31-.07-.65-.12-1-.12-1.66 0-3 .9-3 2s1.34 2 3 2 3-.9 3-2V6.32l8-1.6v5.4c-.31-.07-.65-.12-1-.12-1.66 0-3 .9-3 2s1.34 2 3 2 3-.9 3-2V1c0-.55-.45-1-1-1z"],
        "new-grid-item": ["M6 0H1C.45 0 0 .45 0 1v5c0 .55.45 1 1 1h5c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm5 14c0-.55-.45-1-1-1s-1 .45-1 1v1c0 .55.45 1 1 1h1c.55 0 1-.45 1-1s-.45-1-1-1zM6 9H1c-.55 0-1 .45-1 1v5c0 .55.45 1 1 1h5c.55 0 1-.45 1-1v-5c0-.55-.45-1-1-1zm9 4c-.55 0-1 .45-1 1-.55 0-1 .45-1 1s.45 1 1 1h1c.55 0 1-.45 1-1v-1c0-.55-.45-1-1-1zm-4-4h-1c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1s1-.45 1-1c.55 0 1-.45 1-1s-.45-1-1-1zm4-9h-5c-.55 0-1 .45-1 1v5c0 .55.45 1 1 1h5c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm0 9h-1c-.55 0-1 .45-1 1s.45 1 1 1c0 .55.45 1 1 1s1-.45 1-1v-1c0-.55-.45-1-1-1z"],
        "new-link": ["M15 3h-1V2c0-.55-.45-1-1-1s-1 .45-1 1v1h-1c-.55 0-1 .45-1 1s.45 1 1 1h1v1c0 .55.45 1 1 1s1-.45 1-1V5h1c.55 0 1-.45 1-1s-.45-1-1-1zm-3.5 6a2.5 2.5 0 0 0-2.45 2h-4.1a2.5 2.5 0 1 0 0 1h4.1a2.5 2.5 0 1 0 2.45-3z"],
        "new-object": ["M8 4c0 .6.4 1 1 1h2v2c0 .6.4 1 1 1s1-.4 1-1V5h2c.6 0 1-.4 1-1s-.4-1-1-1h-2V1c0-.6-.4-1-1-1s-1 .4-1 1v2H9c-.6 0-1 .5-1 1zm6.5 2.5V7c0 1.4-1.1 2.5-2.5 2.5S9.5 8.4 9.5 7v-.5H9C7.6 6.5 6.5 5.4 6.5 4S7.6 1.5 9 1.5h.5V1c0-.3.1-.6.1-.8C9.1.1 8.6 0 8 0 3.6 0 0 3.6 0 8s3.6 8 8 8 8-3.6 8-8c0-.6-.1-1.3-.2-1.9-.4.3-.8.4-1.3.4z"],
        "new-person": ["M9.12 12.69c-1.17-.53-1.01-.85-1.05-1.29-.01-.06-.01-.12-.01-.19.4-.37.73-.87.94-1.44 0 0 .01-.03.01-.04.05-.14.09-.27.12-.4.27-.06.43-.36.49-.63.06-.11.19-.39.16-.7-.04-.41-.2-.6-.38-.68v-.07c0-.51-.05-1.25-.14-1.74-.02-.13-.05-.27-.09-.4-.17-.6-.53-1.14-1.01-1.52C7.66 3.2 6.96 3 6.33 3c-.62 0-1.33.2-1.82.59-.49.38-.85.92-1.02 1.52-.04.13-.07.26-.09.4-.09.49-.13 1.23-.13 1.74v.06c-.19.08-.35.27-.39.68-.03.31.1.59.16.7.06.28.22.59.5.64.03.14.07.27.11.4 0 .01.01.02.01.02v.01c.22.59.55 1.1.96 1.46 0 .06-.01.12-.01.17-.04.44.08.76-1.09 1.29-1.17.53-2.93 1.1-3.29 1.95-.35.87-.2 1.37-.2 1.37h12.6s.15-.5-.22-1.36c-.36-.85-2.12-1.42-3.29-1.95zM14.89 2h-1V1c0-.55-.45-1-1-1s-1 .45-1 1v1h-1c-.55 0-1 .45-1 1s.45 1 1 1h1v1c0 .55.45 1 1 1s1-.45 1-1V4h1c.55 0 1-.45 1-1s-.45-1-1-1z"],
        "new-prescription": ["M9.82 11.66l2.48-2.87c.12-.2.13-.37.04-.53-.11-.19-.3-.26-.52-.26h-1.29c-.27 0-.49.13-.63.34L8.44 9.9 6.95 8a.482.482 0 0 0-.08-.1L5.82 6.55c.57-.24 1.04-.57 1.42-1.01.49-.57.74-1.27.74-2.08 0-.51-.1-.99-.32-1.42-.21-.43-.51-.8-.89-1.11A4.1 4.1 0 0 0 5.42.24C4.91.08 4.34 0 3.72 0H.61C.26 0 0 .23 0 .56v9.89c0 .33.26.55.61.55h.8c.36 0 .61-.23.61-.56V6.99H3.3l3.73 4.74-2.71 3.48c-.12.2-.13.37-.04.53.11.19.3.26.52.26h1.27c.27 0 .51-.12.64-.34l1.69-2.15 1.66 2.14c.12.21.34.35.62.35h1.43c.2 0 .39-.08.5-.25.12-.18.09-.38-.02-.55l-2.77-3.54zM4.18 5H1.99V2.02h2.19c.62 0 1.08.13 1.38.37.29.22.44.62.44 1.08 0 .45-.15.94-.44 1.17-.31.23-.76.36-1.38.36zM15 2h-1V1c0-.55-.45-1-1-1s-1 .45-1 1v1h-1c-.55 0-1 .45-1 1s.45 1 1 1h1v1c0 .55.45 1 1 1s1-.45 1-1V4h1c.55 0 1-.45 1-1s-.45-1-1-1zM9.99 3.01c0 .02.01.04.01.06V2.95c0 .02-.01.04-.01.06z"],
        "new-text-box": ["M5 6.5c0 .28.22.5.5.5H7v3.5c0 .28.22.5.5.5s.5-.22.5-.5V7h1.5c.28 0 .5-.22.5-.5S9.78 6 9.5 6h-4c-.28 0-.5.22-.5.5zM15 2h-1V1c0-.55-.45-1-1-1s-1 .45-1 1v1h-1c-.55 0-1 .45-1 1s.45 1 1 1h1v1c0 .55.45 1 1 1s1-.45 1-1V4h1c.55 0 1-.45 1-1s-.45-1-1-1zm-2 5c-.55 0-1 .45-1 1v5H3V4h5c.55 0 1-.45 1-1s-.45-1-1-1H2c-.55 0-1 .45-1 1v11c0 .55.45 1 1 1h11c.55 0 1-.45 1-1V8c0-.55-.45-1-1-1z"],
        "ninja": ["M16 5s-2.52 2.11-4.96 1.99C11.03 4.89 10.39.23 5 0c0 0 2.11 2.54 1.96 4.99C4.86 5.01.23 5.65 0 11c0 0 2.56-2.12 5.02-1.95.02 2.11.67 6.72 5.98 6.95 0 0-2.09-2.54-1.94-4.99 2.11-.02 6.71-.68 6.94-6.01zM8 9.5c-.83 0-1.5-.67-1.5-1.5S7.17 6.5 8 6.5s1.5.67 1.5 1.5S8.83 9.5 8 9.5z"],
        "notifications": ["M8 16c1.1 0 2-.9 2-2H6c0 1.1.9 2 2 2zm6-5c-.55 0-1-.45-1-1V6c0-2.43-1.73-4.45-4.02-4.9 0-.04.02-.06.02-.1 0-.55-.45-1-1-1S7 .45 7 1c0 .04.02.06.02.1A4.992 4.992 0 0 0 3 6v4c0 .55-.45 1-1 1s-1 .45-1 1 .45 1 1 1h12c.55 0 1-.45 1-1s-.45-1-1-1z"],
        "notifications-updated": ["M8 16c1.1 0 2-.9 2-2H6c0 1.1.9 2 2 2zm3.399-13.667l-.413.412A2.99 2.99 0 0 0 9 1.99a3 3 0 0 0-3 2.99c0 .8.32 1.558.876 2.114l2.002 1.992A2.99 2.99 0 0 0 13 9.184V10c0 .55.45 1 1 1s1 .45 1 1-.45 1-1 1H2c-.55 0-1-.45-1-1s.45-1 1-1 1-.45 1-1V6c0-2.43 1.73-4.45 4.02-4.9 0-.04-.02-.06-.02-.1 0-.55.45-1 1-1s1 .45 1 1c0 .04-.02.06-.02.1a4.97 4.97 0 0 1 2.419 1.233zM10.29 7.67l-2-1.99a.99.99 0 0 1-.29-.7 1 1 0 0 1 1-.99c.27 0 .52.11.7.29l1.29 1.29 3.28-3.28c.18-.18.42-.29.7-.29.55 0 1 .44 1 .99 0 .28-.11.52-.3.7l-3.98 3.98a.99.99 0 0 1-1.4 0z"],
        "numbered-list": ["M2.76 7h1.26V0h-.94c-.04.21-.12.39-.25.54-.13.15-.29.27-.48.36-.18.09-.39.16-.62.2-.23.04-.46.06-.71.06v.9h1.74V7zm-.59 7.17c.18-.12.37-.25.58-.37a10.763 10.763 0 0 0 1.24-.83c.2-.16.37-.33.52-.51.15-.19.28-.39.37-.61.09-.22.14-.47.14-.74 0-.22-.04-.45-.12-.7-.08-.26-.21-.49-.4-.69-.18-.21-.43-.39-.72-.52-.3-.14-.68-.21-1.12-.21-.41 0-.77.07-1.08.2-.32.14-.58.32-.8.56-.22.23-.38.51-.49.84-.11.32-.16.67-.16 1.05h1.19c.01-.24.03-.47.08-.67.05-.21.11-.39.21-.54.09-.15.22-.27.38-.36.16-.09.35-.13.59-.13.26 0 .47.04.63.12.16.08.29.18.38.3.09.12.15.25.18.39s.05.27.05.4c-.01.27-.08.5-.22.71-.14.21-.32.4-.53.57-.22.18-.45.34-.71.49-.26.15-.51.31-.74.47-.5.31-.89.68-1.17 1.11-.3.41-.44.91-.45 1.48h5v-1H1.43c.05-.15.14-.29.27-.43.14-.13.29-.26.47-.38zM15.01 1.99h-7c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h7c.55 0 1-.45 1-1v-1c0-.55-.44-1-1-1zm0 9h-7c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h7c.55 0 1-.45 1-1v-1c0-.55-.44-1-1-1z"],
        "numerical": ["M2.79 4.61c-.13.17-.29.3-.48.41-.18.11-.39.18-.62.23-.23.04-.46.07-.71.07v1.03h1.74V12h1.26V4h-.94c-.04.23-.12.44-.25.61zm4.37 5.31c.18-.14.37-.28.58-.42l.63-.45c.21-.16.41-.33.61-.51s.37-.38.52-.59c.15-.21.28-.45.37-.7.09-.25.13-.54.13-.85 0-.25-.04-.52-.12-.8-.07-.29-.2-.55-.39-.79a2.18 2.18 0 0 0-.73-.6c-.29-.15-.66-.23-1.11-.23-.41 0-.77.08-1.08.23-.31.16-.58.37-.79.64-.22.27-.38.59-.49.96-.11.37-.16.77-.16 1.2h1.19c.01-.27.03-.53.08-.77.04-.24.11-.45.21-.62.09-.18.22-.32.38-.42.16-.1.35-.15.59-.15.26 0 .47.05.63.14.15.09.28.21.37.35.09.14.15.29.18.45.03.16.05.31.05.45-.01.31-.08.58-.22.82-.14.23-.32.45-.53.65-.22.21-.46.39-.71.57-.26.18-.51.36-.75.54-.5.36-.89.78-1.17 1.27-.28.49-.43 1.06-.44 1.71h5v-1.15H6.43c.05-.17.14-.33.27-.49.13-.15.29-.29.46-.44zm8.5-1.56c-.23-.35-.54-.57-.95-.65v-.02c.34-.13.6-.34.76-.63.16-.29.24-.63.24-1.02 0-.34-.06-.64-.19-.9s-.3-.47-.51-.64c-.21-.17-.45-.3-.72-.38-.27-.09-.54-.13-.82-.13-.36 0-.68.07-.96.2-.28.13-.53.32-.72.55-.2.23-.36.51-.47.83-.11.32-.18.66-.19 1.04h1.15c-.01-.2.01-.39.06-.58.05-.19.12-.36.22-.51.1-.15.22-.27.37-.36.15-.09.32-.13.53-.13.32 0 .59.1.79.3.21.2.31.46.31.79 0 .23-.05.43-.14.59-.09.16-.21.29-.35.38-.15.09-.32.16-.51.19-.19.04-.38.05-.57.04v.93c.23-.01.45 0 .67.02.22.02.42.08.59.17.18.09.32.23.43.4.11.18.16.41.16.71 0 .44-.13.78-.39 1.02s-.58.36-.97.36c-.45 0-.79-.16-1.02-.47-.23-.31-.33-.7-.32-1.17H11c.01.4.06.77.17 1.1.11.33.26.61.47.85.21.23.46.42.77.54.31.13.67.19 1.08.19.34 0 .66-.05.96-.16.3-.11.57-.27.8-.47.23-.2.41-.45.55-.74.13-.27.2-.6.2-.97 0-.5-.11-.92-.34-1.27z"],
        "office": ["M15 5h-3V1c0-.55-.45-1-1-1H1C.45 0 0 .45 0 1v14c0 .55.45 1 1 1h3v-4h4v4h7c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zM5 10H2V7h3v3zm0-5H2V2h3v3zm5 5H7V7h3v3zm0-5H7V2h3v3zm4 9h-2v-2h2v2zm0-4h-2V7h2v3z"],
        "offline": ["M8 0C3.58 0 0 3.58 0 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zM6 14l1-5H4l6-7-1 5h3l-6 7z"],
        "oil-field": ["M15 14h-1.35l-3.34-7.51 2.46-.95 1.45 3.21c.09.2.36.3.6.23.1-.03.18-.08.24-.15.05-.08 1.23-1.56.87-4.2-.11-.79-.52-4.62-3.26-4.62-.93 0-1.68.62-1.67 1.37 0 .14.03.28.09.42l.87 1.92L.64 8.07v.01A.98.98 0 0 0 0 9c0 .55.45 1 1 1 .13 0 .25-.03.36-.07v.01l1.04-.4L3.67 14H2c-.55 0-1 .45-1 1s.45 1 1 1h13c.55 0 1-.45 1-1s-.45-1-1-1zM4.27 8.81L7.14 7.7 5.2 12.08l-.93-3.27zM6.54 14L9 8.46 11.46 14H6.54z"],
        "one-column": ["M11.99-.01h-3c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1h3c.55 0 1-.45 1-1v-14c0-.55-.45-1-1-1zm-6 5c-.28 0-.53.11-.71.29l-2 2a1.014 1.014 0 0 0 0 1.42l2 2a1.003 1.003 0 0 0 1.71-.71v-4c0-.55-.45-1-1-1z"],
        "outdated": ["M8 0c4.42 0 8 3.58 8 8 0 4.06-3.02 7.4-6.94 7.92-.02 0-.04.01-.06.01-.33.04-.66.07-1 .07-4.42 0-8-3.58-8-8 0-.55.45-1 1-1s1 .45 1 1c0 3.31 2.69 6 6 6 .71 0 1.37-.15 2-.38v.01c2.33-.82 4-3.02 4-5.63 0-3.31-2.69-6-6-6-1.78 0-3.36.78-4.46 2H5c.55 0 1 .45 1 1s-.45 1-1 1H1c-.55 0-1-.45-1-1V1c0-.55.45-1 1-1s1 .45 1 1v1.74A7.95 7.95 0 0 1 8 0zm1 12H7v-2h2v2zm0-3H7V4h2v5z"],
        "page-layout": ["M15 .95H1c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h14c.55 0 1-.45 1-1v-12c0-.55-.45-1-1-1zm-9 12H2v-6h4v6zm8 0H7v-6h7v6zm0-7H2v-3h12v3z"],
        "panel-stats": ["M10 4h3v1h-3zM10 6h3v1h-3zM10 8h3v1h-3zM10 10h3v1h-3z", "M15 1H1c-.6 0-1 .4-1 1v11c0 .6.4 1 1 1h14c.6 0 1-.4 1-1V2c0-.6-.4-1-1-1zM8 12H2V3h6v9zm6 0H9V3h5v9z"],
        "panel-table": ["M15 1H1c-.6 0-1 .4-1 1v11c0 .6.4 1 1 1h14c.6 0 1-.4 1-1V2c0-.6-.4-1-1-1zM8 9H6V7h2v2zm0-3H6V4h2v2zm-6 6V3h3v9H2zm4 0v-2h2v2H6zm8 0H9v-2h5v2zm0-3H9V7h5v2zm0-3H9V4h5v2z"],
        "paperclip": ["M14.68 2.31A4.54 4.54 0 0 0 11.46.99c-1.15 0-2.31.44-3.19 1.32L.95 9.63c-.63.63-.95 1.46-.95 2.28a3.21 3.21 0 0 0 3.23 3.22c.83 0 1.66-.31 2.3-.95l7.31-7.32c.76-.77.76-1.98.01-2.73s-1.99-.76-2.75 0l-6.07 6.08c-.24.25-.24.65.01.9s.65.25.91.01l6.07-6.08c.25-.25.67-.25.91-.01.25.25.25.67 0 .92l-7.31 7.32c-.75.75-2.04.74-2.76.01-.75-.75-.73-2.02.01-2.76L9.2 3.21c1.24-1.24 3.35-1.26 4.58-.03 1.24 1.24 1.24 3.36 0 4.6l-7.12 7.13c-.24.25-.24.64.01.88.24.24.63.24.88.01v.01l7.13-7.13A4.41 4.41 0 0 0 16 5.51c0-1.16-.44-2.32-1.32-3.2z"],
        "paragraph": ["M13 1H6C3.8 1 2 2.8 2 5s1.8 4 4 4v5c0 .6.4 1 1 1s1-.5 1-1V3h2v11c0 .6.4 1 1 1s1-.5 1-1V3h1c.5 0 1-.4 1-1s-.4-1-1-1z"],
        "path": ["M14.5 0h-13C.67 0 0 .67 0 1.5S.67 3 1.5 3H7v3H3.5C2.67 6 2 6.67 2 7.5S2.67 9 3.5 9H7v3H5.5c-.83 0-1.5.67-1.5 1.5S4.67 15 5.5 15h5c.83 0 1.5-.67 1.5-1.5s-.67-1.5-1.5-1.5H9V9h3.5c.83 0 1.5-.67 1.5-1.5S13.33 6 12.5 6H9V3h5.5c.83 0 1.5-.67 1.5-1.5S15.33 0 14.5 0z"],
        "path-search": ["M15 14.62l-4-2.4V9.77c-.32.09-.66.15-1 .18v2.27l-4 2.4V8.71c-.38-.31-.72-.66-1-1.06v6.97l-4-2.4V8c.55 0 1-.45 1-1s-.45-1-1-1V1.38l3.15 1.89c.08-.34.18-.66.32-.97L.76.07v.01A.496.496 0 0 0 .5 0C.22 0 0 .22 0 .5v12c0 .18.1.33.25.42v.01l5 3v-.01c.07.05.16.08.25.08s.18-.03.25-.08v.01l4.74-2.85 4.74 2.85v-.01c.09.05.18.08.27.08.28 0 .5-.22.5-.5v-3.78c-.3.17-.63.28-1 .28v2.62zM2 5c0 .55.45 1 1 1s1-.45 1-1-.45-1-1-1-1 .45-1 1zm6-1c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm7.75-.92l-1.19-.72c.18.43.29.9.36 1.38l.08.04v3.39l1 1V3.5c0-.18-.1-.33-.25-.42zM10 2c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm3.3 4.89c.44-.7.7-1.51.7-2.39C14 2.01 11.99 0 9.5 0S5 2.01 5 4.5 7.01 9 9.5 9c.88 0 1.69-.26 2.39-.7l2.41 2.41c.17.18.42.29.7.29a1.003 1.003 0 0 0 .71-1.71l-2.41-2.4zM9.5 8C7.57 8 6 6.43 6 4.5S7.57 1 9.5 1 13 2.57 13 4.5 11.43 8 9.5 8z"],
        "pause": ["M6 3H4c-.55 0-1 .45-1 1v8c0 .55.45 1 1 1h2c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1zm6 0h-2c-.55 0-1 .45-1 1v8c0 .55.45 1 1 1h2c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1z"],
        "people": ["M13.69 13.98c-.05-.24-.14-.5-.25-.76-.36-.86-1.12-1.33-2.69-2-.14-.06-.59-.25-.6-.25-.21-.09-.36-.15-.5-.22.02-.1.02-.2.03-.31 0-.04.01-.08.01-.13-.07-.06-.13-.12-.19-.19.22-.32.4-.67.54-1.05.02-.06.02-.06.03-.1.29-.23.48-.57.59-.96.16-.33.25-.73.21-1.16-.03-.4-.16-.76-.37-1.03-.02-.53-.07-1.13-.15-1.54-.01-.06-.02-.12-.03-.19.23-.06.48-.09.72-.09.49 0 1.05.16 1.44.46.38.29.67.7.8 1.17.03.1.05.21.07.31.07.37.11.94.11 1.33v.05c.14.06.27.21.29.51.02.25-.07.45-.13.54-.05.21-.16.44-.38.48-.02.1-.05.2-.09.3 0 .01-.01.03-.01.03-.17.44-.43.83-.75 1.11v.14c.03.35-.09.59.83 1 .93.41 2.32.84 2.6 1.5.29.66.17 1.04.17 1.04h-2.3zm-1.17-.38c.37.86.22 1.36.22 1.36H.06s-.14-.5.22-1.36 2.13-1.43 3.31-1.96c1.17-.54 1.05-.86 1.09-1.3 0-.05.01-.11.01-.17-.41-.35-.75-.86-.97-1.45v-.01s-.01-.01-.01-.02c-.04-.12-.09-.26-.12-.39-.28-.05-.44-.36-.5-.64-.06-.12-.19-.39-.16-.71.04-.41.21-.6.39-.68v-.06c0-.51.05-1.26.14-1.74.02-.13.05-.27.09-.4.17-.6.54-1.13 1.02-1.51.5-.39 1.21-.6 1.84-.6s1.34.21 1.84.6c.48.38.85.91 1.02 1.52.04.13.07.27.09.4.09.48.14 1.22.14 1.73v.07c.18.08.34.27.37.67.03.32-.09.59-.16.71-.06.28-.21.58-.48.63-.03.13-.07.26-.12.39 0 .01-.01.04-.01.04-.22.58-.55 1.08-.95 1.45v.18c.04.45-.12.77 1.06 1.3 1.18.53 2.95 1.09 3.31 1.95z"],
        "percentage": ["M6 6V4c0-1.1-.9-2-2-2H3c-1.1 0-2 .9-2 2v2c0 1.1.9 2 2 2h1c1.1 0 2-.9 2-2zM3.5 6c-.28 0-.5-.22-.5-.5v-1c0-.28.22-.5.5-.5s.5.22.5.5v1c0 .28-.22.5-.5.5zM13 8h-1c-1.1 0-2 .9-2 2v2c0 1.1.9 2 2 2h1c1.1 0 2-.9 2-2v-2c0-1.1-.9-2-2-2zm0 3.5c0 .28-.22.5-.5.5s-.5-.22-.5-.5v-1c0-.28.22-.5.5-.5s.5.22.5.5v1zM12 3a1.003 1.003 0 0 0-1.87-.5l-5.99 9.98c-.09.15-.14.33-.14.52a1.003 1.003 0 0 0 1.87.5l5.99-9.98c.09-.15.14-.33.14-.52z"],
        "person": ["M15.68 14.32c-.46-1.05-2.68-1.75-4.16-2.4-1.48-.65-1.28-1.05-1.33-1.59-.01-.07-.01-.15-.01-.23.51-.45.92-1.07 1.19-1.78 0 0 .01-.04.02-.05.06-.15.11-.32.15-.48.34-.07.54-.44.61-.78.08-.14.23-.48.2-.87-.05-.5-.25-.73-.47-.82v-.09c0-.63-.06-1.55-.17-2.15A3.671 3.671 0 0 0 10.32.72C9.68.25 8.79-.01 8-.01c-.79 0-1.68.25-2.31.73-.61.47-1.06 1.13-1.28 1.86-.05.17-.09.33-.11.5-.12.6-.17 1.51-.17 2.15v.08c-.24.09-.45.32-.5.83-.03.38.13.72.2.86.08.35.28.72.63.78.04.17.09.33.15.49 0 .01.01.02.01.03l.01.01c.27.72.7 1.35 1.22 1.8 0 .07-.01.14-.01.21-.05.54.1.94-1.37 1.59-1.48.65-3.7 1.35-4.16 2.4-.46 1.05-.27 1.67-.27 1.67h15.92c-.01.01.18-.61-.28-1.66z"],
        "phone": ["M15.9 12.41c-.06-.06-3.37-2-3.48-2.05a.794.794 0 0 0-.32-.08c-.15 0-.34.11-.57.32-.23.22-.94 1.19-1.15 1.4-.21.22-.38.32-.52.32-.07 0-.15-.02-.25-.06-.1-.04-1.16-.58-3.36-2.52-2.2-1.93-2.49-3.2-2.5-3.55 0-.14.11-.31.32-.52.22-.21.45-.41.7-.6.25-.19.49-.4.7-.62.22-.23.32-.42.32-.57 0-.11-.03-.21-.08-.32C5.66 3.46 3.66.15 3.59.08 3.44-.07 2.85 0 2.55.16.16 1.46-.03 3.2 0 3.89c.04.71.49 4.46 4.16 7.95C8.72 16.17 11.89 16 12.1 16c.69 0 2.82-.38 3.72-2.55.13-.32.25-.87.08-1.04z"],
        "pie-chart": ["M7 1.08c-3.37.5-5.97 3.4-5.97 6.92 0 3.87 3.13 7 6.98 7 3.52 0 6.42-2.61 6.91-6H7V1.08z", "M8 0v8h8c0-4.42-3.58-8-8-8z"],
        "pin": ["M9.41.92c-.51.51-.41 1.5.15 2.56L4.34 7.54C2.8 6.48 1.45 6.05.92 6.58l3.54 3.54-3.54 4.95 4.95-3.54 3.54 3.54c.53-.53.1-1.88-.96-3.42l4.06-5.22c1.06.56 2.04.66 2.55.15L9.41.92z"],
        "pivot": ["M4.57 7.02L.3 11.29c-.19.18-.3.43-.3.71a1.003 1.003 0 0 0 1.71.71l4.27-4.27c-.58-.35-1.07-.84-1.41-1.42zM15 8c-.55 0-1 .45-1 1v.59l-2.57-2.57c-.34.58-.83 1.07-1.41 1.41L12.59 11H12c-.55 0-1 .45-1 1s.45 1 1 1h3c.55 0 1-.45 1-1V9c0-.55-.45-1-1-1zm-4-3c0-1.66-1.34-3-3-3S5 3.34 5 5s1.34 3 3 3 3-1.34 3-3zM8 6c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1z"],
        "pivot-table": ["M2 4H1c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h1c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1zm0-4H1C.45 0 0 .45 0 1v1c0 .55.45 1 1 1h1c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm11.71 4.29C13.53 4.11 13.28 4 13 4s-.53.11-.71.29l-2 2a1.003 1.003 0 0 0 1.42 1.42l.29-.3V9c0 1.66-1.34 3-3 3H7.41l.29-.29c.19-.18.3-.43.3-.71a1.003 1.003 0 0 0-1.71-.71l-2 2c-.18.18-.29.43-.29.71 0 .28.11.53.29.71l2 2a1.003 1.003 0 0 0 1.42-1.42l-.3-.29H9c2.76 0 5-2.24 5-5V7.41l.29.29c.18.19.43.3.71.3a1.003 1.003 0 0 0 .71-1.71l-2-2zM15 0H5c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h10c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1z"],
        "play": ["M12 8c0-.35-.19-.64-.46-.82l.01-.02-6-4-.01.02A.969.969 0 0 0 5 3c-.55 0-1 .45-1 1v8c0 .55.45 1 1 1 .21 0 .39-.08.54-.18l.01.02 6-4-.01-.02c.27-.18.46-.47.46-.82z"],
        "plus": ["M13 7H9V3c0-.55-.45-1-1-1s-1 .45-1 1v4H3c-.55 0-1 .45-1 1s.45 1 1 1h4v4c0 .55.45 1 1 1s1-.45 1-1V9h4c.55 0 1-.45 1-1s-.45-1-1-1z"],
        "polygon-filter": ["M14 5c-.24 0-.47.05-.68.13L9.97 2.34c.01-.11.03-.22.03-.34 0-1.1-.9-2-2-2S6 .9 6 2c0 .04.01.08.01.12L2.88 4.21C2.61 4.08 2.32 4 2 4 .9 4 0 4.9 0 6c0 .74.4 1.38 1 1.72v4.55c-.6.35-1 .99-1 1.73 0 1.1.9 2 2 2 .74 0 1.38-.4 1.72-1h4.55c.35.6.98 1 1.72 1 1.1 0 2-.9 2-2 0-.37-.11-.7-.28-1L14 9c1.11-.01 2-.9 2-2s-.9-2-2-2zm-4.01 7c-.73 0-1.37.41-1.71 1H3.73c-.18-.3-.43-.55-.73-.72V7.72c.6-.34 1-.98 1-1.72 0-.04-.01-.08-.01-.12l3.13-2.09c.27.13.56.21.88.21.24 0 .47-.05.68-.13l3.35 2.79c-.01.11-.03.22-.03.34 0 .37.11.7.28 1l-2.29 4z"],
        "power": ["M8 8c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1S7 .45 7 1v6c0 .55.45 1 1 1zm3-5.32v2.34c1.21.91 2 2.35 2 3.98 0 2.76-2.24 5-5 5s-5-2.24-5-5c0-1.63.79-3.06 2-3.98V2.68C2.64 3.81 1 6.21 1 9c0 3.87 3.13 7 7 7s7-3.13 7-7c0-2.79-1.64-5.19-4-6.32z"],
        "predictive-analysis": ["M16 6.41c0-1.01-.49-1.94-1.29-2.49-.43-1.92-2.07-3.28-4-3.28-.46 0-.92.08-1.35.24C8.83.31 8.11 0 7.34 0c-.9 0-1.74.44-2.28 1.16-.12-.01-.24-.02-.36-.02-1.31 0-2.42.89-2.77 2.17C.78 3.72 0 4.84 0 6.13c0 .38.07.76.21 1.12C.07 7.6 0 7.98 0 8.36c0 1.11.58 2.11 1.51 2.63.54.56 1.27.87 2.03.87.49 0 .95-.12 1.37-.36a2.85 2.85 0 0 0 2.18 1.04c.52 0 1.03-.14 1.47-.42.49.39 1.07.65 1.69.73 1.04 1.15 1.84 2.63 1.84 2.64 0 0 .28.49.26.49.77 0 1.41-.16 1.32-1.04 0 .02-.73-2.31-.73-2.31.41-.21.75-.55.97-.98.9-.52 1.47-1.53 1.47-2.61 0-.24-.03-.48-.08-.71.45-.52.7-1.21.7-1.92zm-1.23 1.02l-.15-.16-.61-.67c-.27-.29-.54-.94-.58-1.39l-.1-1.01c-.05-.59-.94-.58-.91.11 0 .02.1 1.01.1 1.01.03.29.12.62.24.93-.06-.01-.12-.02-.18-.02 0 0-2.06-.1-2.05-.11-.58-.02-.71.97-.04 1l2.05.11c.42.02 1.04.3 1.29.58l.49.54.02.05c.08.21.12.44.12.66 0 .74-.41 1.41-1.07 1.75l-.16.08-.07.18c-.15.38-.48.66-.88.74l-.54.11.7 2.2c-.38-.61-.95-1.43-1.62-2.14l-.12-.13-.17-.01c-.41-.03-.8-.17-1.14-.38l1.36-1.18c.35-.31.83-.44.99-.39 0 0 .63.17.62.18.63.16.83-.74.23-.97l-.62-.18c-.55-.16-1.33.18-1.79.58l-1.53 1.33-.31.26c-.35.29-.75.44-1.2.44-.64 0-1.23-.33-1.58-.86V9.15c0-.4.17-.79.27-.85 0 0 .52-.34.51-.35.71-.53.18-1.23-.49-.89 0-.01-.52.35-.52.35-.26.15-.45.44-.58.77-.11-.11-.22-.2-.34-.28 0 0-1.53-1.01-1.53-1.02-.65-.45-1.2.51-.49.89 0-.01 1.51 1.02 1.51 1.02.37.24.62.78.62 1.09v.67c-.34.19-.63.29-.99.29-.54 0-1.05-.23-1.41-.63l-.05-.06-.07-.04c-.65-.34-1.05-1-1.05-1.73 0-.3.07-.6.2-.87l.12-.25L1.15 7c-.13-.27-.2-.56-.2-.87 0-.9.61-1.68 1.48-1.89l.31-.08.05-.34a1.926 1.926 0 0 1 2.38-1.58l.32.08.18-.31c.35-.6.99-.97 1.67-.97.44 0 .86.15 1.2.42l-.36.36v-.01l-.25.26c-.33.27-.74.42-.89.4 0 0-.67-.1-.67-.11-.67-.13-.87.86-.14 1.02.01 0 .67.11.67.11.02 0 .05 0 .07.01-.11.37-.15.77-.1 1.12 0 0 .17.99.15.99.11.52 1.06.36.93-.18 0-.01-.15-.99-.15-.99-.05-.37.12-.94.36-1.19l.39-.4c.05-.05.1-.09.15-.14l.74-.76c.4-.18.83-.27 1.27-.27 1.55 0 2.86 1.12 3.11 2.67l.04.25.21.12c.61.35.98 1 .98 1.7 0 .36-.1.7-.28 1.01z"],
        "prescription": ["M10.91 8.34c.14-.21.36-.34.63-.34h1.29c.22 0 .41.07.52.26.09.16.08.33-.04.53l-2.49 2.87 2.77 3.54c.12.17.14.37.02.55-.11.17-.3.25-.5.25h-1.44a.69.69 0 0 1-.61-.35L9.4 13.51l-1.69 2.15c-.13.21-.36.34-.63.34H5.8c-.22 0-.41-.07-.52-.26-.09-.16-.08-.33.04-.53l2.71-3.48L4.3 6.99H3.03v3.47c0 .33-.26.56-.62.56h-.8c-.35-.01-.61-.23-.61-.56V.56c0-.33.26-.56.62-.56h3.11c.62 0 1.19.08 1.7.24.51.16.96.39 1.34.69a3.194 3.194 0 0 1 1.21 2.53c0 .81-.25 1.5-.74 2.08-.37.44-.84.77-1.42 1.01L7.88 7.9c.04.04.07.08.08.1l1.49 1.9 1.46-1.56zM5.18 5c.62 0 1.08-.13 1.39-.37.29-.23.44-.71.44-1.16s-.15-.87-.44-1.1C6.26 2.12 5.8 2 5.18 2H2.99v3h2.19z"],
        "presentation": ["M15 1H9c0-.55-.45-1-1-1S7 .45 7 1H1c-.55 0-1 .45-1 1s.45 1 1 1v8c0 .55.45 1 1 1h3.59L3.3 14.29c-.19.18-.3.43-.3.71a1.003 1.003 0 0 0 1.71.71L7 13.41V15c0 .55.45 1 1 1s1-.45 1-1v-1.59l2.29 2.29c.18.19.43.3.71.3a1.003 1.003 0 0 0 .71-1.71L10.41 12H14c.55 0 1-.45 1-1V3c.55 0 1-.45 1-1s-.45-1-1-1zm-2 9H3V3h10v7z"],
        "print": ["M12 2.02c0-.55-.45-1-1-1H5c-.55 0-1 .45-1 1v1h8v-1zm3 2H1c-.55 0-1 .45-1 1v6c0 .55.45 1 1 1h1v-3h12v3h1c.55 0 1-.45 1-1v-6c0-.56-.45-1-1-1zm-1 3h-2v-1h2v1zm-3 6H5v-3H3v4c0 .55.45 1 1 1h8c.55 0 1-.45 1-1v-4h-2v3z"],
        "projects": ["M14 3c0-.55-.45-1-1-1H3c-.55 0-1 .45-1 1v1h12V3zm-2-3H4c-.55 0-1 .45-1 1h10c0-.55-.45-1-1-1zm3 5H1c-.55 0-1 .45-1 1v9c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm-3 6c0 .55-.45 1-1 1H5c-.55 0-1-.45-1-1V9h1v2h6V9h1v2z"],
        "properties": ["M2 6C.9 6 0 6.9 0 8s.9 2 2 2 2-.9 2-2-.9-2-2-2zm4-3h9c.55 0 1-.45 1-1s-.45-1-1-1H6c-.55 0-1 .45-1 1s.45 1 1 1zm-4 9c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm13-5H6c-.55 0-1 .45-1 1s.45 1 1 1h9c.55 0 1-.45 1-1s-.45-1-1-1zm0 6H6c-.55 0-1 .45-1 1s.45 1 1 1h9c.55 0 1-.45 1-1s-.45-1-1-1zM2 0C.9 0 0 .9 0 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"],
        "property": ["M3 12c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-.5-6.5a2.5 2.5 0 0 0 0 5 2.5 2.5 0 0 0 0-5zM7 3h8c.55 0 1-.45 1-1s-.45-1-1-1H7c-.55 0-1 .45-1 1s.45 1 1 1zm8 10H7c-.55 0-1 .45-1 1s.45 1 1 1h8c.55 0 1-.45 1-1s-.45-1-1-1zM3 0C1.9 0 1 .9 1 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 6H7c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h8c.55 0 1-.45 1-1V7c0-.55-.45-1-1-1z"],
        "publish-function": ["M12.16 3.76c.15-.11.3-.16.47-.16.06 0 .17.02.34.06.16.04.31.06.43.06a.58.58 0 0 0 .6-.6c0-.19-.06-.33-.17-.44-.11-.11-.28-.16-.49-.16-.19 0-.37.04-.54.13-.17.09-.39.27-.65.55-.2.21-.48.58-.87 1.11a5.22 5.22 0 0 0-.78-1.79l-2.05.32-.04.21c.15-.03.28-.04.39-.04.2 0 .37.08.5.25.21.26.5 1.03.88 2.33-.29.36-.49.6-.6.71-.18.19-.33.31-.45.36-.09.04-.19.07-.3.07-.09 0-.23-.04-.42-.13a.904.904 0 0 0-.36-.09c-.2 0-.36.06-.49.18a.59.59 0 0 0-.19.46c0 .18.06.32.18.43.12.11.28.16.48.16.2 0 .38-.04.55-.12.17-.08.39-.24.65-.49s.62-.65 1.07-1.19c.18.52.33.89.46 1.13.13.24.28.4.44.51.17.1.37.16.62.16.24 0 .49-.08.74-.25.33-.21.66-.58 1.01-1.09l-.21-.11c-.23.31-.41.5-.52.57a.44.44 0 0 1-.26.07c-.12 0-.24-.07-.36-.21-.2-.24-.46-.91-.8-2 .29-.49.54-.81.74-.96zM6.37 5.83l.68-2.53h.83l.2-.64h-.84c.24-.91.56-1.59.96-2.01.24-.27.48-.4.71-.4.05 0 .08.01.11.04s.04.06.04.1c0 .04-.03.11-.1.21-.06.1-.1.2-.1.29 0 .13.05.24.15.33.1.09.23.14.39.14.17 0 .31-.06.42-.17.12-.12.18-.27.18-.46 0-.21-.08-.39-.25-.52C9.57.07 9.3 0 8.93 0c-.59 0-1.12.16-1.59.48-.48.32-.93.85-1.36 1.59-.15.26-.29.42-.42.49s-.35.11-.64.1l-.19.65h.81L4.35 7.68c-.2.72-.33 1.16-.4 1.33-.1.24-.26.45-.46.62a.48.48 0 0 1-.31.1c-.03 0-.06-.01-.08-.03l-.03-.03c0-.02.03-.06.09-.11.06-.06.09-.15.09-.26 0-.13-.05-.23-.14-.32-.1-.09-.23-.13-.41-.13-.21 0-.38.05-.51.16A.52.52 0 0 0 2 9.4c0 .16.08.3.23.42.16.12.4.18.74.18.53 0 .99-.13 1.4-.39.41-.26.76-.65 1.07-1.19.3-.53.61-1.39.93-2.59zm2.34 3.46A.997.997 0 0 0 8 9c-.28 0-.53.11-.71.29l-2 2a1.003 1.003 0 0 0 1.42 1.42l.29-.3V15c0 .55.45 1 1 1s1-.45 1-1v-2.59l.29.29c.18.19.43.3.71.3a1.003 1.003 0 0 0 .71-1.71l-2-2z"],
        "pulse": ["M15 8h-1.46l-1.7-2.55-.02.01A.984.984 0 0 0 11 5c-.43 0-.79.27-.93.65h-.01l-1.69 4.51-1.38-8.32h-.02A.989.989 0 0 0 6 1c-.41 0-.77.25-.92.61L2.34 8H1c-.55 0-1 .45-1 1s.45 1 1 1h2c.41 0 .77-.25.92-.61l1.65-3.86 1.44 8.63h.02c.08.47.47.84.97.84.43 0 .79-.27.93-.65h.01l2.31-6.17.92 1.38.02-.01c.17.26.46.45.81.45h2c.55 0 1-.45 1-1s-.45-1-1-1z"],
        "random": ["M11.48 4h1.11l-.29.29c-.19.18-.3.43-.3.71a1.003 1.003 0 0 0 1.71.71l2-2c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71l-2-2a1.003 1.003 0 0 0-1.42 1.42l.3.29H11c-.32 0-.59.16-.77.38l-.01-.01L8.28 4.8l1.28 1.6L11.48 4zm2.23 6.29a1.003 1.003 0 0 0-1.42 1.42l.3.29h-1.11l-7.7-9.62h-.01A.996.996 0 0 0 3 2H1c-.55 0-1 .45-1 1s.45 1 1 1h1.52l7.7 9.62.01-.01c.18.23.45.39.77.39h1.59l-.29.29c-.19.18-.3.43-.3.71a1.003 1.003 0 0 0 1.71.71l2-2c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71l-2-2zM2.52 12H1c-.55 0-1 .45-1 1s.45 1 1 1h2c.32 0 .59-.16.77-.38l.01.01 1.94-2.42L4.44 9.6 2.52 12z"],
        "record": ["M8 3a5 5 0 1 0 0 10A5 5 0 1 0 8 3z"],
        "redo": ["M12 11c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm3.71-6.71l-3-3a1.003 1.003 0 0 0-1.42 1.42L12.59 4H5C2.24 4 0 6.24 0 9s2.24 5 5 5h4v-2H5c-1.66 0-3-1.34-3-3s1.34-3 3-3h7.59L11.3 7.29c-.19.18-.3.43-.3.71a1.003 1.003 0 0 0 1.71.71l3-3c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71z"],
        "refresh": ["M14.99 6.99c-.55 0-1 .45-1 1 0 3.31-2.69 6-6 6-1.77 0-3.36-.78-4.46-2h1.46c.55 0 1-.45 1-1s-.45-1-1-1h-4c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1s1-.45 1-1v-1.74a7.95 7.95 0 0 0 6 2.74c4.42 0 8-3.58 8-8 0-.55-.45-1-1-1zm0-7c-.55 0-1 .45-1 1v1.74a7.95 7.95 0 0 0-6-2.74c-4.42 0-8 3.58-8 8 0 .55.45 1 1 1s1-.45 1-1c0-3.31 2.69-6 6-6 1.77 0 3.36.78 4.46 2h-1.46c-.55 0-1 .45-1 1s.45 1 1 1h4c.55 0 1-.45 1-1v-4c0-.55-.45-1-1-1z"],
        "regression-chart": ["M13 6.5c0 .83.67 1.5 1.5 1.5S16 7.33 16 6.5 15.33 5 14.5 5 13 5.67 13 6.5zM8.5 5c.83 0 1.5-.67 1.5-1.5S9.33 2 8.5 2 7 2.67 7 3.5 7.67 5 8.5 5zM9 9.5c0 .83.67 1.5 1.5 1.5s1.5-.67 1.5-1.5S11.33 8 10.5 8 9 8.67 9 9.5zM4.5 8C5.33 8 6 7.33 6 6.5S5.33 5 4.5 5 3 5.67 3 6.5 3.67 8 4.5 8zM15 12H3.26l12.03-8.59-.58-.81L2 11.67V3c0-.55-.45-1-1-1s-1 .45-1 1v10c0 .55.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1z"],
        "remove": ["M10.99 6.99h-6c-.55 0-1 .45-1 1s.45 1 1 1h6c.55 0 1-.45 1-1s-.45-1-1-1zm-3-7c-4.42 0-8 3.58-8 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.68 6-6 6z"],
        "remove-column": ["M14 0H4c-.55 0-1 .45-1 1v3h2V2h3v12H5v-2H3v3c0 .55.45 1 1 1h10c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 14h-3V2h3v12zm-8.71-3.29a1.003 1.003 0 0 0 1.42-1.42L4.41 8 5.7 6.71c.19-.18.3-.43.3-.71a1.003 1.003 0 0 0-1.71-.71L3 6.59l-1.29-1.3A1.003 1.003 0 0 0 .29 6.71L1.59 8 .29 9.29a1.003 1.003 0 0 0 1.42 1.42L3 9.41l1.29 1.3z"],
        "remove-column-left": ["M4 9h4c.55 0 1-.45 1-1s-.45-1-1-1H4c-.55 0-1 .45-1 1s.45 1 1 1zm11-9H1C.45 0 0 .45 0 1v14c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-5 14H2V2h8v12zm4 0h-3V2h3v12z"],
        "remove-column-right": ["M15 0H1C.45 0 0 .45 0 1v14c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zM5 14H2V2h3v12zm9 0H6V2h8v12zM8 9h4c.55 0 1-.45 1-1s-.45-1-1-1H8c-.55 0-1 .45-1 1s.45 1 1 1z"],
        "remove-row-bottom": ["M15 0H1C.45 0 0 .45 0 1v14c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 14H2V6h12v8zm0-9H2V2h12v3zm-8 6h4c.55 0 1-.45 1-1s-.45-1-1-1H6c-.55 0-1 .45-1 1s.45 1 1 1z"],
        "remove-row-top": ["M15 0H1C.45 0 0 .45 0 1v14c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 14H2v-3h12v3zm0-4H2V2h12v8zM6 7h4c.55 0 1-.45 1-1s-.45-1-1-1H6c-.55 0-1 .45-1 1s.45 1 1 1z"],
        "repeat": ["M10 5c0 .55.45 1 1 1h4c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1s-1 .45-1 1v1.74A7.95 7.95 0 0 0 8 0C3.58 0 0 3.58 0 8c0 4.06 3.02 7.4 6.94 7.92.02 0 .04.01.06.01.33.04.66.07 1 .07 4.42 0 8-3.58 8-8 0-.55-.45-1-1-1s-1 .45-1 1c0 3.31-2.69 6-6 6-.71 0-1.37-.15-2-.38v.01C3.67 12.81 2 10.61 2 8c0-3.31 2.69-6 6-6 1.77 0 3.36.78 4.46 2H11c-.55 0-1 .45-1 1z"],
        "resolve": ["M6.6 3.3C6.1 3.1 5.6 3 5 3 2.2 3 0 5.2 0 8s2.2 5 5 5c.6 0 1.1-.1 1.6-.3C5.3 11.6 4.5 9.9 4.5 8s.8-3.6 2.1-4.7zM8 4c-1.2.9-2 2.4-2 4s.8 3.1 2 4c1.2-.9 2-2.3 2-4s-.8-3.1-2-4zm3-1c-.6 0-1.1.1-1.6.3 1.3 1.2 2.1 2.9 2.1 4.7s-.8 3.6-2.1 4.7c.5.2 1 .3 1.6.3 2.8 0 5-2.2 5-5s-2.2-5-5-5z"],
        "rig": ["M5.71 3c0 1.1.96 2 2.14 2C9.04 5 10 3.96 10 3c0-1.96-1.47-3-2.14-3H5c0 1.96 2.68 1.4.71 3zm2.5 3l.01.01s0-.01-.01-.01zm6.5 8.29L10 9.59V7c0-.55-.45-1-1-1H7c-.55 0-1 .45-1 1v2.58l-4.71 4.7c-.18.19-.29.44-.29.72a1.003 1.003 0 0 0 1.71.71L6 12.42V15c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-2.58l3.29 3.29a1.003 1.003 0 0 0 1.42-1.42z"],
        "right-join": ["M6.6 3.3C5.3 4.4 4.5 6.1 4.5 8s.8 3.6 2.1 4.7c-.5.2-1 .3-1.6.3-2.8 0-5-2.2-5-5s2.2-5 5-5c.6 0 1.1.1 1.6.3zm-1.96 8.68C3.92 10.83 3.5 9.46 3.5 8s.42-2.83 1.14-3.98C2.6 4.2 1 5.91 1 8s1.6 3.8 3.64 3.98zM8 4c-1.2.9-2 2.4-2 4s.8 3.1 2 4c1.2-.9 2-2.3 2-4s-.8-3.1-2-4zm3-1c2.8 0 5 2.2 5 5s-2.2 5-5 5c-.6 0-1.1-.1-1.6-.3 1.3-1.1 2.1-2.9 2.1-4.7s-.8-3.5-2.1-4.7c.5-.2 1-.3 1.6-.3z"],
        "ring": ["M8 0C3.58 0 0 3.58 0 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm0 12c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4z"],
        "rotate-document": ["M12 2h-1.59l.29-.29c.19-.18.3-.43.3-.71A1.003 1.003 0 0 0 9.29.29l-2 2C7.11 2.47 7 2.72 7 3c0 .28.11.53.29.71l2 2a1.003 1.003 0 0 0 1.42-1.42l-.3-.29H12c.55 0 1 .45 1 1v3c0 .55.45 1 1 1s1-.45 1-1V5c0-1.66-1.34-3-3-3zM5.71 5.29A.997.997 0 0 0 5 5H1c-.55 0-1 .45-1 1v9c0 .55.45 1 1 1h7c.55 0 1-.45 1-1V9c0-.28-.11-.53-.29-.71l-3-3zM7 14H2V7h2v2c0 .55.45 1 1 1h2v4z"],
        "rotate-page": ["M8 6H2c-.55 0-1 .45-1 1v8c0 .55.45 1 1 1h6c.55 0 1-.45 1-1V7c0-.55-.45-1-1-1zm-1 8H3V8h4v6zm5-12h-1.59l.29-.29c.19-.18.3-.43.3-.71A1.003 1.003 0 0 0 9.29.29l-2 2C7.11 2.47 7 2.72 7 3c0 .28.11.53.29.71l2 2a1.003 1.003 0 0 0 1.42-1.42l-.3-.29H12c.55 0 1 .45 1 1v3c0 .55.45 1 1 1s1-.45 1-1V5c0-1.66-1.34-3-3-3z"],
        "satellite": ["M3 9c0-.6.4-1 1-1s1 .4 1 1c0 1.1.9 2 2 2 .6 0 1 .4 1 1s-.4 1-1 1c-2.2 0-4-1.8-4-4zM0 9c0-.6.4-1 1-1s1 .4 1 1c0 2.8 2.2 5 5 5 .6 0 1 .4 1 1s-.4 1-1 1c-3.9 0-7-3.1-7-7zm7 1c-.6 0-1-.4-1-1s.4-1 1-1 1 .4 1 1-.4 1-1 1zm1.3-2.8c-.4-.4-.4-1 0-1.4l4.5-4.5c.4-.4 1-.4 1.4 0l.5.5c.4.4.4 1 0 1.4l-4.5 4.5c-.4.4-1 .4-1.4 0l-.5-.5zM5.2.3c.4-.4 1-.4 1.4 0l2.1 2.1c.4.4.4 1 0 1.4l-.9.9c-.4.4-1 .4-1.4 0L4.3 2.6c-.4-.4-.4-1 0-1.4l.9-.9zm7 7c.4-.4 1-.4 1.4 0l2.1 2.1c.4.4.4 1 0 1.4l-.9.9c-.4.4-1 .4-1.4 0l-2.1-2.1c-.4-.4-.4-1 0-1.4l.9-.9z"],
        "saved": ["M6.71 9.29a1.003 1.003 0 0 0-1.42 1.42l2 2a.997.997 0 0 0 1.6-.27h.01l2-4h-.01c.06-.13.11-.28.11-.44 0-.55-.45-1-1-1-.39 0-.72.23-.89.56H9.1l-1.38 2.76-1.01-1.03zM9 0H3c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1h10c.55 0 1-.45 1-1V5L9 0zm3 14H4V2h4v4h4v8z"],
        "scatter-plot": ["M15 12H2V3c0-.55-.45-1-1-1s-1 .45-1 1v10c0 .55.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1zm-.5-7c.83 0 1.5-.67 1.5-1.5S15.33 2 14.5 2 13 2.67 13 3.5 13.67 5 14.5 5zm-3 4c.83 0 1.5-.67 1.5-1.5S12.33 6 11.5 6 10 6.67 10 7.5 10.67 9 11.5 9zm-4-2C8.33 7 9 6.33 9 5.5S8.33 4 7.5 4 6 4.67 6 5.5 6.67 7 7.5 7zm-3 4c.83 0 1.5-.67 1.5-1.5S5.33 8 4.5 8 3 8.67 3 9.5 3.67 11 4.5 11z"],
        "search": ["M15.55 13.43l-2.67-2.68a6.94 6.94 0 0 0 1.11-3.76c0-3.87-3.13-7-7-7s-7 3.13-7 7 3.13 7 7 7c1.39 0 2.68-.42 3.76-1.11l2.68 2.67a1.498 1.498 0 1 0 2.12-2.12zm-8.56-1.44c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z"],
        "search-around": ["M13.5 11c-.51 0-.98.15-1.38.42l-2.4-2.41c.17-.3.28-.64.28-1.01s-.11-.71-.28-1.01l2.41-2.41c.39.27.86.42 1.37.42a2.5 2.5 0 0 0 0-5A2.5 2.5 0 0 0 11 2.5c0 .51.15.98.42 1.38l-2.41 2.4C8.71 6.11 8.37 6 8 6s-.71.11-1.01.28l-2.41-2.4c.27-.4.42-.87.42-1.38a2.5 2.5 0 0 0-5 0A2.5 2.5 0 0 0 2.5 5c.51 0 .98-.15 1.38-.42l2.41 2.41C6.11 7.29 6 7.63 6 8s.11.71.28 1.01l-2.41 2.41c-.39-.27-.86-.42-1.37-.42a2.5 2.5 0 0 0 0 5A2.5 2.5 0 0 0 5 13.5c0-.51-.15-.98-.42-1.38l2.41-2.41c.3.18.64.29 1.01.29s.71-.11 1.01-.28l2.41 2.41c-.27.39-.42.86-.42 1.37a2.5 2.5 0 0 0 5 0 2.5 2.5 0 0 0-2.5-2.5zm0-10c.83 0 1.5.67 1.5 1.5S14.33 4 13.5 4 12 3.33 12 2.5 12.67 1 13.5 1zm-11 3C1.67 4 1 3.33 1 2.5S1.67 1 2.5 1 4 1.67 4 2.5 3.33 4 2.5 4zm0 11c-.83 0-1.5-.67-1.5-1.5S1.67 12 2.5 12s1.5.67 1.5 1.5S3.33 15 2.5 15zm11 0c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5z"],
        "search-template": ["M15.55 13.43l-2.67-2.67c.7-1.09 1.11-2.38 1.11-3.77 0-3.87-3.13-7-7-7s-7 3.13-7 7 3.13 7 7 7c1.39 0 2.68-.41 3.77-1.11l2.67 2.67a1.498 1.498 0 1 0 2.12-2.12zm-8.56-1.44c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm2.5-6h-5c-.28 0-.5.22-.5.5s.22.5.5.5h5c.28 0 .5-.22.5-.5s-.22-.5-.5-.5zm0-2h-5c-.28 0-.5.22-.5.5s.22.5.5.5h5c.28 0 .5-.22.5-.5s-.22-.5-.5-.5zm0 4h-5c-.28 0-.5.22-.5.5s.22.5.5.5h5c.28 0 .5-.22.5-.5s-.22-.5-.5-.5z"],
        "search-text": ["M9 4H5c-.55 0-1 .45-1 1s.45 1 1 1h1v3c0 .55.45 1 1 1s1-.45 1-1V6h1c.55 0 1-.45 1-1s-.45-1-1-1zm6.56 9.44l-2.67-2.67C13.59 9.68 14 8.39 14 7c0-3.87-3.13-7-7-7S0 3.13 0 7s3.13 7 7 7c1.39 0 2.68-.41 3.77-1.11l2.67 2.67a1.498 1.498 0 1 0 2.12-2.12zM7 12c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z"],
        "segmented-control": ["M15 4H1c-.55 0-1 .45-1 1v6c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1zm-1 6H8V6h6v4z"],
        "select": ["M16 15c0-.28-.12-.52-.31-.69l.02-.02-3.12-3.12 3.41-.84-8.05-2.86c.03-.09.05-.17.05-.27V2c0-.55-.45-1-1-1H3c0-.55-.45-1-1-1S1 .45 1 1c-.55 0-1 .45-1 1s.45 1 1 1v4c0 .55.45 1 1 1h5.2c.1 0 .18-.02.27-.05L10.33 16l.85-3.41 3.12 3.12.02-.02c.16.19.4.31.68.31.04 0 .07-.02.1-.02s.06.02.1.02c.44 0 .8-.36.8-.8 0-.04-.02-.07-.02-.1s.02-.06.02-.1zM6 6H3V3h3v3z"],
        "selection": ["M8 0C3.58 0 0 3.58 0 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.69 6-6 6zm0-9C6.34 5 5 6.34 5 8s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z"],
        "send-to": ["M15 7.5c-.8 0-1.5-.4-2-1l-1.2 1.2c-.4.5-1.1.7-1.8.7-1.4.1-2.5-1-2.5-2.4 0-.7.3-1.3.7-1.8L9.5 3c-.6-.5-1-1.2-1-2 0-.3.1-.7.2-1H8C3.6 0 0 3.6 0 8s3.6 8 8 8 8-3.6 8-8v-.7c-.3.1-.6.2-1 .2zM15 0h-4c-.6 0-1 .5-1 1s.4 1 1 1h1.6L9.3 5.3c-.2.2-.3.4-.3.7 0 .5.4 1 1 1 .3 0 .5-.1.7-.3L14 3.4V5c0 .6.4 1 1 1 .5 0 1-.4 1-1V1c0-.5-.4-1-1-1z"],
        "send-to-graph": ["M6 9H2c-.55 0-1 .45-1 1s.45 1 1 1h1.59L.3 14.29c-.19.18-.3.43-.3.71a1.003 1.003 0 0 0 1.71.71L5 12.41V14c0 .55.45 1 1 1s1-.45 1-1v-4c0-.55-.45-1-1-1zm8 .5c-.56 0-1.06.23-1.42.59l-2.13-1.24L8.99 8l3.59-2.09A2.002 2.002 0 0 0 16 4.5c0-1.1-.9-2-2-2s-2 .9-2 2c0 .19.03.37.08.54L8.5 7.13v-3.2c.86-.22 1.5-1 1.5-1.93 0-1.1-.9-2-2-2S6 .9 6 2c0 .93.64 1.71 1.5 1.93v3.2l-.88-.52-2.7-1.57c.05-.17.08-.35.08-.54 0-1.1-.9-2-2-2s-2 .9-2 2 .9 2 2 2c.56 0 1.06-.23 1.42-.59l2.13 1.24 3.84 2.24 2.7 1.57c-.06.17-.09.35-.09.54 0 1.1.9 2 2 2s2-.9 2-2-.9-2-2-2z"],
        "send-to-map": ["M6 9H2c-.55 0-1 .45-1 1s.45 1 1 1h1.59L.3 14.29c-.19.18-.3.43-.3.71a1.003 1.003 0 0 0 1.71.71L5 12.41V14c0 .55.45 1 1 1s1-.45 1-1v-4c0-.55-.45-1-1-1zm9.55-5.83l-4.49-3A.975.975 0 0 0 9.99.15L5.53 2.82 1.56.17A1.003 1.003 0 0 0 0 1v6h2V2.87l2.94 1.96.06.03V7h1V4.86s.01 0 .01-.01L10 2.47v8.67s-.01 0-.01.01l-.99.58v2.33l1.47-.88 3.97 2.65A1.003 1.003 0 0 0 16 15V4c0-.35-.18-.65-.45-.83zM14 13.13l-2.94-1.96c-.02-.01-.04-.02-.05-.03v-8.6l3 2v8.59z"],
        "series-add": ["M10.68 7.9c.44.54 1.07.92 1.79 1.05l-2.76 2.76c-.18.18-.43.29-.71.29s-.53-.11-.71-.3L5 8.41l-3 3V13h13c.55 0 1 .45 1 1s-.45 1-1 1H1c-.55 0-1-.45-1-1V4c0-.55.45-1 1-1s1 .45 1 1v4.59l2.29-2.3C4.47 6.11 4.72 6 5 6s.53.11.71.29L9 9.59l1.68-1.69zM15 3c.55 0 1 .45 1 1s-.45 1-1 1h-1v1c0 .55-.45 1-1 1s-1-.45-1-1V5h-1c-.55 0-1-.45-1-1s.45-1 1-1h1V2c0-.55.45-1 1-1s1 .45 1 1v1h1z"],
        "series-configuration": ["M9.94 9.64c.65.23 1.34.36 2.06.36.14 0 .29-.01.43-.01L9.7 12.71c-.18.18-.43.29-.71.29-.28 0-.53-.11-.71-.3L5 9.41l-3 3V14h12.99c.55 0 1 .45 1 1s-.45 1-1 1H1c-.55 0-1-.45-1-1V5c0-.55.45-1 1-1s1 .45 1 1v4.59l2.29-2.3C4.47 7.11 4.72 7 5 7c.28 0 .53.11.71.29L9 10.59l.94-.95zm4.73-6.44h.92c.22 0 .4.18.4.4v.8c0 .22-.18.4-.4.4h-.93c-.06.2-.14.38-.24.55l.66.65c.15.15.15.4 0 .55l-.54.55c-.15.15-.4.15-.55 0l-.65-.65c-.17.1-.36.18-.55.24v.91c0 .22-.18.4-.4.4h-.8c-.22 0-.4-.18-.4-.4v-.93c-.18-.06-.36-.13-.52-.22l-.68.68c-.15.16-.41.16-.57 0l-.56-.56a.417.417 0 0 1 0-.57l.68-.68c-.08-.16-.16-.33-.22-.52h-.93c-.22 0-.4-.18-.4-.4v-.8c0-.22.18-.4.4-.4h.93c.06-.2.14-.38.24-.55l-.65-.64a.392.392 0 0 1 0-.55l.54-.55a.38.38 0 0 1 .54 0l.65.65c.18-.1.36-.18.55-.24V.4c0-.22.18-.4.4-.4h.8c.22 0 .4.18.4.4v.93c.18.06.35.14.52.22l.68-.68c.15-.16.41-.16.57 0l.57.57c.15.16.15.41 0 .57l-.68.68c.09.16.16.33.22.51zm-4.18.8c0 .83.67 1.5 1.5 1.5s1.5-.67 1.5-1.5-.67-1.5-1.5-1.5c-.82 0-1.5.67-1.5 1.5z"],
        "series-derived": ["M10.66 7.92c.44.54 1.07.91 1.8 1.03L9.71 11.7c-.18.19-.43.3-.71.3s-.53-.11-.71-.3L5 8.41l-3 3V13h13c.55 0 1 .45 1 1s-.45 1-1 1H1c-.55 0-1-.45-1-1V4c0-.55.45-1 1-1s1 .45 1 1v4.59l2.29-2.3C4.47 6.11 4.72 6 5 6s.53.11.71.29L9 9.59l1.66-1.67zM12.3 5.3l.3-.3H8c-.6 0-1-.4-1-1s.4-1 1-1h4.6l-.3-.3c-.2-.2-.3-.4-.3-.7 0-.6.5-1 1-1 .3 0 .5.1.7.3l2 2c.2.2.3.4.3.7s-.1.5-.3.7l-2 2c-.2.2-.4.3-.7.3-.6 0-1-.4-1-1 0-.3.1-.5.3-.7z"],
        "series-filtered": ["M9.29 9.3c.3.62.8 1.12 1.42 1.41l-1 1c-.18.18-.43.29-.71.29s-.53-.11-.71-.3L5 8.41l-3 3V13h13c.55 0 1 .45 1 1s-.45 1-1 1H1c-.55 0-1-.45-1-1V4c0-.55.45-1 1-1s1 .45 1 1v4.59l2.29-2.3C4.47 6.11 4.72 6 5 6s.53.11.71.29L9 9.59l.29-.29zM15.48 1c.31 0 .52.26.52.57 0 .16-.06.3-.17.41l-2.86 2.73v2.63c0 .16-.06.3-.17.41l-.82 1.1c-.1.1-.25.17-.41.17-.31 0-.57-.26-.57-.57V4.71L8.17 1.98A.566.566 0 0 1 8 1.57c0-.31.26-.57.57-.57h6.91z"],
        "series-search": ["M9.6 8.94a4.937 4.937 0 0 0 1.82.01c.1-.01.22-.04.39-.08l.23-.07c.04-.01.08-.02.11-.04l.22.22-2.7 2.72c-.18.19-.43.3-.71.3s-.53-.11-.71-.3L4.98 8.41l-2.99 3V13h12.94c.55 0 1 .45 1 1s-.45 1-1 1H1c-.55 0-1-.45-1-1V3.99c0-.55.45-1 1-1s1 .45 1 1v4.59l2.28-2.3c.17-.18.42-.29.7-.29s.53.11.7.29l3.28 3.3.64-.64zm6.22-.41c.1.12.17.27.18.44 0 .34-.27.61-.61.61a.57.57 0 0 1-.43-.18l-2.24-2.25c-.13.08-.26.16-.4.23-.02.01-.05.02-.07.03-.14.06-.27.12-.42.17h-.01c-.14.05-.29.08-.44.11-.04.01-.08.02-.11.02-.15.02-.3.04-.46.04-1.85 0-3.35-1.51-3.35-3.37S8.96 1.01 10.81 1c1.85 0 3.35 1.51 3.35 3.37 0 .16-.02.31-.04.47-.01.04-.01.07-.02.11-.02.15-.05.29-.1.44v.01c-.05.15-.11.28-.17.42-.01.02-.02.05-.03.07-.07.14-.14.27-.23.4l2.25 2.24zm-5.01-1.94c1.22 0 2.21-.99 2.21-2.22 0-1.23-.99-2.22-2.21-2.22S8.6 3.14 8.6 4.37c0 1.22.99 2.22 2.21 2.22z"],
        "settings": ["M3 1c0-.55-.45-1-1-1S1 .45 1 1v3h2V1zm0 4H1c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h2c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm12-4c0-.55-.45-1-1-1s-1 .45-1 1v2h2V1zM9 1c0-.55-.45-1-1-1S7 .45 7 1v6h2V1zM1 15c0 .55.45 1 1 1s1-.45 1-1v-5H1v5zM15 4h-2c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h2c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1zm-2 11c0 .55.45 1 1 1s1-.45 1-1V9h-2v6zM9 8H7c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h2c.55 0 1-.45 1-1V9c0-.55-.45-1-1-1zm-2 7c0 .55.45 1 1 1s1-.45 1-1v-2H7v2z"],
        "share": ["M10.99 13.99h-9v-9h4.76l2-2H.99c-.55 0-1 .45-1 1v11c0 .55.45 1 1 1h11c.55 0 1-.45 1-1V7.24l-2 2v4.75zm4-14h-5c-.55 0-1 .45-1 1s.45 1 1 1h2.59L7.29 7.28a1 1 0 0 0-.3.71 1.003 1.003 0 0 0 1.71.71l5.29-5.29V6c0 .55.45 1 1 1s1-.45 1-1V1c0-.56-.45-1.01-1-1.01z"],
        "shield": ["M8 16c4.667-3.048 7-7.238 7-12.571-1.556 0-3.889-1.143-7-3.429-3.111 2.286-5.444 3.429-7 3.429C1 8.762 3.333 12.952 8 16zM8 2.121c2.005 1.388 3.715 2.304 5.186 2.735-.342 3.702-2.05 6.683-5.186 9.038V2.121z"],
        "shop": ["M3 2h10c.55 0 1-.45 1-1s-.45-1-1-1H3c-.55 0-1 .45-1 1s.45 1 1 1zm9 11H4v-3H2v5c0 .55.45 1 1 1h10c.55 0 1-.45 1-1v-5h-2v3zm4-6l-1.01-3.17C14.9 3.36 14.49 3 14 3H2c-.49 0-.9.36-.98.83L.01 7H0c0 1.1.9 2 2 2s2-.9 2-2c0 1.1.9 2 2 2s2-.9 2-2c0 1.1.9 2 2 2s2-.9 2-2c0 1.1.9 2 2 2s2-.9 2-2z"],
        "shopping-cart": ["M14 10H7.72l-.33-1H13c.39 0 .72-.23.89-.56h.01l2-4h-.01c.06-.13.11-.28.11-.44 0-.55-.45-1-1-1H5.39l-.44-1.32h-.01C4.8 1.29 4.44 1 4 1H1c-.55 0-1 .45-1 1s.45 1 1 1h2.28l2.33 7H4c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2h6c0 1.1.9 2 2 2s2-.9 2-2-.9-2-2-2zM6.05 5h7.33l-1 2H6.72l-.67-2z"],
        "sim-card": ["M13.71 4.29l-4-4A.997.997 0 0 0 9 0H3c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1h10c.55 0 1-.45 1-1V5c0-.28-.11-.53-.29-.71zM7 6h2v2H7V6zM4 6h2v2H4V6zm2 8H4v-2h2v2zm3 0H7v-2h2v2zm3 0h-2v-2h2v2zm0-3H4V9h8v2zm0-3h-2V6h2v2z"],
        "slash": ["M10 2a.99.99 0 0 0-.96.73l-2.99 9.96A1.003 1.003 0 0 0 7 14c.46 0 .85-.31.96-.73l2.99-9.96A1.003 1.003 0 0 0 10 2z"],
        "small-cross": ["M9.41 8l2.29-2.29c.19-.18.3-.43.3-.71a1.003 1.003 0 0 0-1.71-.71L8 6.59l-2.29-2.3a1.003 1.003 0 0 0-1.42 1.42L6.59 8 4.3 10.29c-.19.18-.3.43-.3.71a1.003 1.003 0 0 0 1.71.71L8 9.41l2.29 2.29c.18.19.43.3.71.3a1.003 1.003 0 0 0 .71-1.71L9.41 8z"],
        "small-minus": ["M11 7H5c-.55 0-1 .45-1 1s.45 1 1 1h6c.55 0 1-.45 1-1s-.45-1-1-1z"],
        "small-plus": ["M11 7H9V5c0-.55-.45-1-1-1s-1 .45-1 1v2H5c-.55 0-1 .45-1 1s.45 1 1 1h2v2c0 .55.45 1 1 1s1-.45 1-1V9h2c.55 0 1-.45 1-1s-.45-1-1-1z"],
        "small-tick": ["M12 5c-.28 0-.53.11-.71.29L7 9.59l-2.29-2.3a1.003 1.003 0 0 0-1.42 1.42l3 3c.18.18.43.29.71.29s.53-.11.71-.29l5-5A1.003 1.003 0 0 0 12 5z"],
        "snowflake": ["M13.364 9l.879.879a1 1 0 1 1-1.415 1.414l-2.12-2.121A1.003 1.003 0 0 1 10.568 9H9v1.604c.042.03.083.065.121.103l2.122 2.121a1 1 0 0 1-1.415 1.415L9 13.414V15a1 1 0 0 1-2 0v-1.636l-.879.879a1 1 0 1 1-1.414-1.415l2.121-2.12c.054-.054.111-.1.172-.139V9H5.38c-.038.06-.084.118-.137.172l-2.122 2.12A1 1 0 1 1 1.707 9.88L2.586 9H1a1 1 0 1 1 0-2h1.536l-.829-.828a1 1 0 0 1 1.414-1.415L5.243 6.88c.038.038.072.079.103.121H7V5.38a1.003 1.003 0 0 1-.172-.137L4.708 3.12A1 1 0 0 1 6.12 1.707L7 2.586V1a1 1 0 1 1 2 0v1.536l.828-.829a1 1 0 0 1 1.415 1.414L9.12 5.243A1.007 1.007 0 0 1 9 5.346V7h1.604c.03-.042.065-.083.103-.121l2.121-2.122a1 1 0 0 1 1.415 1.415L13.414 7H15a1 1 0 0 1 0 2h-1.636z"],
        "social-media": ["M9.5 4c.4 0 .8-.1 1.1-.3C12 4.5 12.9 6 13 7.6c0 .5.5.9 1 .9.6 0 1-.4 1-1v-.2c-.2-2.4-1.5-4.4-3.5-5.5-.1-1-.9-1.8-2-1.8s-2 .9-2 2 .9 2 2 2zM4 8.5c0-.7-.4-1.3-.9-1.7.3-1.4 1.2-2.6 2.5-3.3.3-.1.6-.4.6-.9s-.4-1-1-1c-.2 0-.3 0-.5.1-1.9 1-3.2 2.8-3.6 5C.4 7.1 0 7.8 0 8.5c0 1.1.9 2 2 2s2-.9 2-2zm8.8 1.2c-1.1 0-2 .9-2 2v.3c-.8.6-1.8.9-2.8.9-1.2 0-2.3-.4-3.2-1.1-.2-.2-.4-.3-.7-.3-.6 0-1 .4-1 1 0 .3.1.6.3.8C4.6 14.4 6.2 15 8 15c1.5 0 3-.5 4.1-1.3.2.1.5.1.7.1 1.1 0 2-.9 2-2s-.9-2.1-2-2.1z"],
        "sort": ["M5 12c-.28 0-.53.11-.71.29l-.29.3V9c0-.55-.45-1-1-1s-1 .45-1 1v3.59l-.29-.29A.965.965 0 0 0 1 12a1.003 1.003 0 0 0-.71 1.71l2 2c.18.18.43.29.71.29s.53-.11.71-.29l2-2A1.003 1.003 0 0 0 5 12zm3-9h7c.55 0 1-.45 1-1s-.45-1-1-1H8c-.55 0-1 .45-1 1s.45 1 1 1zm7 2H8c-.55 0-1 .45-1 1s.45 1 1 1h7c.55 0 1-.45 1-1s-.45-1-1-1zm0 8H8c-.55 0-1 .45-1 1s.45 1 1 1h7c.55 0 1-.45 1-1s-.45-1-1-1zm0-4H8c-.55 0-1 .45-1 1s.45 1 1 1h7c.55 0 1-.45 1-1s-.45-1-1-1z"],
        "sort-alphabetical": ["M6 12c-.28 0-.53.11-.71.29l-.29.3V9c0-.55-.45-1-1-1s-1 .45-1 1v3.59l-.29-.29A.965.965 0 0 0 2 12a1.003 1.003 0 0 0-.71 1.71l2 2c.19.18.44.29.71.29.28 0 .53-.11.71-.29l2-2c.18-.18.29-.43.29-.71a.99.99 0 0 0-1-1zm7.93-.95v-1.04H9.25v1.11h2.94L9 14.96V16h5.02v-1.11h-3.27l3.18-3.84zm-1.42-4.84l.62 1.78H15L11.94.01H10.1L7 7.99h1.81l.64-1.78h3.06zm-1.52-4.24h.02l1.03 2.93H9.92l1.07-2.93z"],
        "sort-alphabetical-desc": ["M5.99 11.99c-.28 0-.53.11-.71.29l-.29.29V8.99c0-.55-.45-1-1-1s-1 .45-1 1v3.59l-.29-.29a1.003 1.003 0 0 0-1.42 1.42l2 2c.18.18.43.29.71.29.28 0 .53-.11.71-.29l2-2c.18-.18.29-.43.29-.71 0-.56-.45-1.01-1-1.01zM12.7 10h-1.38L9 15.99h1.36l.48-1.33h2.3l.46 1.33H15L12.7 10zm-1.51 3.67l.8-2.2h.02l.77 2.2h-1.59zm3.8-7.17h-4.57l4.45-5.12V0H8.34v1.48h4.1L7.99 6.59v1.39h7V6.5z"],
        "sort-asc": ["M8 7h3c.55 0 1-.45 1-1s-.45-1-1-1H8c-.55 0-1 .45-1 1s.45 1 1 1zm0-4h1c.55 0 1-.45 1-1s-.45-1-1-1H8c-.55 0-1 .45-1 1s.45 1 1 1zm0 8h5c.55 0 1-.45 1-1s-.45-1-1-1H8c-.55 0-1 .45-1 1s.45 1 1 1zm-3 1c-.28 0-.53.11-.71.29l-.29.3V9c0-.55-.45-1-1-1s-1 .45-1 1v3.59l-.29-.29A.965.965 0 0 0 1 12a1.003 1.003 0 0 0-.71 1.71l2 2c.18.18.43.29.71.29s.53-.11.71-.29l2-2A1.003 1.003 0 0 0 5 12zm10 1H8c-.55 0-1 .45-1 1s.45 1 1 1h7c.55 0 1-.45 1-1s-.45-1-1-1z"],
        "sort-desc": ["M5 12c-.28 0-.53.11-.71.29l-.29.3V9c0-.55-.45-1-1-1s-1 .45-1 1v3.59l-.29-.29A.965.965 0 0 0 1 12a1.003 1.003 0 0 0-.71 1.71l2 2c.18.18.43.29.71.29s.53-.11.71-.29l2-2A1.003 1.003 0 0 0 5 12zm4 1H8c-.55 0-1 .45-1 1s.45 1 1 1h1c.55 0 1-.45 1-1s-.45-1-1-1zm4-8H8c-.55 0-1 .45-1 1s.45 1 1 1h5c.55 0 1-.45 1-1s-.45-1-1-1zm-2 4H8c-.55 0-1 .45-1 1s.45 1 1 1h3c.55 0 1-.45 1-1s-.45-1-1-1zm4-8H8c-.55 0-1 .45-1 1s.45 1 1 1h7c.55 0 1-.45 1-1s-.45-1-1-1z"],
        "sort-numerical": ["M6 11.99c-.28 0-.53.11-.71.29l-.29.3V8.99c0-.55-.45-1-1-1s-1 .45-1 1v3.59l-.29-.29c-.18-.18-.43-.3-.71-.3a1.003 1.003 0 0 0-.71 1.71l2 2c.18.18.43.29.71.29.28 0 .53-.11.71-.29l2-2A1.003 1.003 0 0 0 6 11.99zm7.91-.08c-.06-.36-.17-.68-.33-.96-.16-.28-.37-.51-.64-.69-.27-.17-.61-.26-1.03-.26-.28 0-.54.06-.78.17-.23.11-.43.26-.6.45-.17.19-.3.41-.39.67a2.492 2.492 0 0 0-.04 1.52 1.623 1.623 0 0 0 .89 1.03c.22.11.45.16.68.16.26 0 .5-.05.7-.15s.38-.26.53-.5l.02.02c-.01.16-.03.34-.07.54-.03.2-.09.4-.17.57-.08.18-.18.33-.31.45s-.29.19-.5.19a.63.63 0 0 1-.48-.21c-.13-.14-.21-.31-.25-.5H10.1c.03.25.1.48.19.68.1.2.22.37.38.5.16.14.33.24.54.31s.42.1.65.1c.39 0 .72-.09.99-.27.27-.18.49-.41.66-.7.17-.29.29-.61.37-.97.08-.36.12-.72.12-1.07 0-.36-.03-.72-.09-1.08zm-1.14.54c-.04.13-.09.24-.16.34a.78.78 0 0 1-.27.24c-.11.06-.24.09-.39.09a.75.75 0 0 1-.37-.09.777.777 0 0 1-.26-.25c-.07-.1-.12-.22-.15-.35-.03-.13-.05-.26-.05-.4 0-.13.02-.26.05-.39.04-.13.09-.24.16-.34.07-.1.16-.18.26-.24s.22-.09.35-.09c.14 0 .26.03.37.09.11.06.2.14.28.24a1.32 1.32 0 0 1 .23.74c0 .15-.02.28-.05.41zm-1.56-4.47H13V0h-1.42c-.05.3-.16.56-.31.76-.16.21-.35.37-.58.5-.23.13-.49.21-.78.26-.3.05-.6.07-.91.06V2.8h2.21v5.18z"],
        "sort-numerical-desc": ["M6 11.99c-.28 0-.53.11-.71.29l-.29.3V8.99c0-.55-.45-1-1-1s-1 .45-1 1v3.59l-.29-.29a.982.982 0 0 0-.71-.3 1.003 1.003 0 0 0-.71 1.71l2 2c.18.18.43.29.71.29s.53-.11.71-.29l2-2A1.003 1.003 0 0 0 6 11.99zm7.86-9.45c-.09-.48-.26-.9-.5-1.28S12.8.58 12.4.35C12 .12 11.49 0 10.86 0c-.43 0-.82.07-1.17.22s-.65.35-.9.6-.44.55-.58.89c-.14.34-.2.71-.2 1.11 0 .31.05.61.15.91.1.3.26.57.48.8.23.24.52.43.85.58.33.14.68.21 1.03.21.4 0 .75-.07 1.05-.2.3-.13.57-.35.79-.66l.02.02c-.02.21-.05.45-.1.73-.05.27-.13.53-.25.76-.12.24-.27.44-.47.6-.19.16-.44.25-.75.25a.98.98 0 0 1-.72-.29c-.19-.18-.31-.4-.37-.66H8.15c.05.34.14.64.29.9.15.26.34.49.57.67.23.18.5.32.8.41.31.1.63.15.98.15.58 0 1.08-.12 1.48-.36.4-.24.73-.55.99-.93.26-.39.44-.82.56-1.29.12-.48.18-.96.18-1.44s-.05-.96-.14-1.44zm-1.71.72c-.05.17-.14.32-.24.46-.11.13-.24.24-.41.31-.16.08-.36.12-.58.12-.21 0-.39-.04-.55-.13-.16-.08-.29-.19-.39-.33-.12-.14-.19-.29-.24-.46-.05-.17-.08-.35-.08-.54 0-.18.03-.35.08-.52.06-.16.14-.31.25-.44.11-.13.24-.24.4-.32.16-.08.33-.12.52-.12.21 0 .4.04.56.12.16.08.3.19.41.32.11.14.2.29.26.46.06.17.09.35.09.52 0 .2-.03.38-.08.55zm-.46 7.31c-.12.15-.26.28-.44.37-.17.09-.37.16-.58.2-.22.04-.44.05-.67.05v.92h1.65v3.88h1.33V10h-1.06c-.03.23-.11.42-.23.57z"],
        "split-columns": ["M12 10a1.003 1.003 0 0 0 1.71.71l2-2c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71l-2-2a1.003 1.003 0 0 0-1.42 1.42l.3.29H9V2h3v1.71c.31-.13.64-.21 1-.21s.69.08 1 .21V1c0-.55-.45-1-1-1H3c-.55 0-1 .45-1 1v2.71c.31-.13.64-.21 1-.21s.69.08 1 .21V2h3v5H3.41l.29-.29c.19-.18.3-.43.3-.71a1.003 1.003 0 0 0-1.71-.71l-2 2C.11 7.47 0 7.72 0 8c0 .28.11.53.29.71l2 2a1.003 1.003 0 0 0 1.42-1.42L3.41 9H7v5H4v-1.71c-.31.13-.64.21-1 .21s-.69-.08-1-.21V15c0 .55.45 1 1 1h10c.55 0 1-.45 1-1v-2.71c-.31.13-.64.21-1 .21s-.69-.08-1-.21V14H9V9h3.59l-.29.29c-.19.18-.3.43-.3.71z"],
        "square": ["M15 0H1C.45 0 0 .45 0 1v14c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 14H2V2h12v12z"],
        "stacked-chart": ["M10 2c0-.55-.45-1-1-1H8c-.55 0-1 .45-1 1v3h3V2zm3 10h1c.55 0 1-.45 1-1V8h-3v3c0 .55.45 1 1 1zm2-7c0-.55-.45-1-1-1h-1c-.55 0-1 .45-1 1v2h3V5zm-5 1H7v3h3V6zM5 7c0-.55-.45-1-1-1H3c-.55 0-1 .45-1 1v1h3V7zm3 5h1c.55 0 1-.45 1-1v-1H7v1c0 .55.45 1 1 1zm7 1H2c-.55 0-1 .45-1 1s.45 1 1 1h13c.55 0 1-.45 1-1s-.45-1-1-1zM3 12h1c.55 0 1-.45 1-1V9H2v2c0 .55.45 1 1 1z"],
        "star": ["M8 0l2.5 5.3 5.5.8-4 4.1.9 5.8L8 13.3 3.1 16l.9-5.8-4-4.1 5.5-.8z"],
        "star-empty": ["M16 6.11l-5.53-.84L8 0 5.53 5.27 0 6.11l4 4.1L3.06 16 8 13.27 12.94 16 12 10.21l4-4.1zM4.91 13.2l.59-3.62L3 7.02l3.45-.53L8 3.2l1.55 3.29 3.45.53-2.5 2.56.59 3.62L8 11.49 4.91 13.2z"],
        "step-backward": ["M12 3c-.24 0-.44.09-.62.23l-.01-.01L7 6.72V4c0-.55-.45-1-1-1H5c-.55 0-1 .45-1 1v8c0 .55.45 1 1 1h1c.55 0 1-.45 1-1V9.28l4.38 3.5.01-.01c.17.14.37.23.61.23.55 0 1-.45 1-1V4c0-.55-.45-1-1-1z"],
        "step-chart": ["M15 12H2v-2h3c.55 0 1-.45 1-1V7h2v1c0 .55.45 1 1 1h4c.55 0 1-.45 1-1V5h1c.55 0 1-.45 1-1s-.45-1-1-1h-2c-.55 0-1 .45-1 1v3h-2V6c0-.55-.45-1-1-1H5c-.55 0-1 .45-1 1v2H2V3c0-.55-.45-1-1-1s-1 .45-1 1v10c0 .55.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1z"],
        "step-forward": ["M12 3h-1c-.55 0-1 .45-1 1v2.72l-4.38-3.5v.01A.987.987 0 0 0 5 3c-.55 0-1 .45-1 1v8c0 .55.45 1 1 1 .24 0 .44-.09.62-.23l.01.01L10 9.28V12c0 .55.45 1 1 1h1c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1z"],
        "stop": ["M12 3H4c-.55 0-1 .45-1 1v8c0 .55.45 1 1 1h8c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1z"],
        "strikethrough": ["M14 7H8.65c-.38-.09-.73-.18-1.04-.26-.31-.08-.49-.13-.54-.14-.43-.11-.79-.29-1.05-.52-.27-.23-.4-.55-.4-.95 0-.29.07-.53.21-.72s.32-.34.54-.46c.22-.11.46-.19.72-.24.26-.05.52-.07.77-.07.74 0 1.36.15 1.84.46.32.2.55.5.68.9h2.22c-.06-.33-.17-.64-.32-.92-.25-.45-.59-.84-1.02-1.15-.43-.31-.93-.54-1.49-.7S8.59 2 7.95 2c-.55 0-1.1.07-1.63.2-.54.13-1.02.34-1.45.62-.42.28-.76.63-1.02 1.05-.26.42-.39.92-.39 1.5 0 .3.04.59.13.88.08.26.21.51.39.75H2c-.55 0-1 .45-1 1s.45 1 1 1h7.13c.25.07.49.14.71.22.25.09.48.23.7.44.21.21.32.53.32.97 0 .21-.05.43-.14.63-.09.21-.24.39-.45.55-.21.16-.48.29-.81.39-.33.1-.73.15-1.2.15-.44 0-.84-.05-1.21-.14-.37-.09-.7-.24-.99-.43-.29-.2-.51-.45-.67-.76-.01 0-.01-.01-.02-.02H3.14a3.68 3.68 0 0 0 1.39 2.03c.46.34 1 .58 1.62.74.61.15 1.27.23 1.97.23.61 0 1.2-.07 1.79-.2.58-.13 1.11-.34 1.56-.63.46-.29.83-.66 1.11-1.11.28-.45.42-1 .42-1.64 0-.3-.05-.6-.15-.9-.05-.19-.13-.36-.22-.52H14c.55 0 1-.45 1-1s-.45-1-1-1z"],
        "style": ["M14 14H2V2h8.76l2-2H1C.45 0 0 .45 0 1v14c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V6.24l-2 2V14zm1.4-14L9.7 5.7l2.1 2.1L16 3.6V0h-.6zM4 11.92c2.33.15 4.42.15 6.15-1.5.82-.83.82-2.25 0-3.08-.45-.38-.98-.6-1.5-.6-.53 0-1.05.22-1.43.6-.82.91-1.27 3.38-3.22 4.58z"],
        "swap-horizontal": ["M0 7.02L.05 7H0v.02zm2-2.03h9.57l-1.29 1.29A1.003 1.003 0 0 0 11.7 7.7l2.99-3c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71l-2.99-3a1.07 1.07 0 0 0-.71-.28 1.003 1.003 0 0 0-.71 1.71L11.57 3H2c-.55 0-1 .45-1 1a1 1 0 0 0 1 .99zM15.96 9H16v-.02l-.04.02zM14 11.01H4.43l1.29-1.29A1.003 1.003 0 0 0 4.3 8.3l-2.99 3a.99.99 0 0 0-.29.7c0 .28.11.53.29.71l2.99 3a1.003 1.003 0 0 0 1.42-1.42L4.43 13H14c.55 0 1-.45 1-1s-.45-.99-1-.99z"],
        "swap-vertical": ["M9 0h-.02L9 .04V0zM7 16h.02L7 15.95V16zM4.7 1.31c-.18-.18-.43-.29-.7-.29s-.53.11-.71.29l-3 2.99a1.003 1.003 0 0 0 1.42 1.42L3 4.43V14c0 .55.45 1 1 1s1-.45 1-1V4.43l1.29 1.29c.18.18.43.29.7.29A1.003 1.003 0 0 0 7.7 4.3l-3-2.99zM15 9.99c-.28 0-.53.11-.71.29L13 11.57V2c0-.55-.45-1-1-1s-1 .45-1 1v9.57l-1.29-1.29a.99.99 0 0 0-.7-.29 1.003 1.003 0 0 0-.71 1.71l3 2.99c.18.18.43.29.71.29.28 0 .53-.11.71-.29l3-2.99c.18-.18.29-.43.29-.71-.01-.55-.46-1-1.01-1z"],
        "symbol-circle": ["M8 3.01a5 5 0 1 0 0 10 5 5 0 1 0 0-10z"],
        "symbol-cross": ["M12 6.01h-2v-2c0-.55-.45-1-1-1H7c-.55 0-1 .45-1 1v2H4c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h2v2c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-2h2c.55 0 1-.45 1-1v-2c0-.56-.45-1-1-1z"],
        "symbol-diamond": ["M12 8.01c0-.19-.07-.36-.16-.51l.01-.01-3-5-.01.01c-.17-.29-.48-.49-.84-.49s-.67.2-.84.49l-.02-.01-3 5 .02.01c-.09.15-.16.32-.16.51s.07.36.16.51h-.02l3 5 .01-.01c.18.29.49.5.85.5s.67-.2.84-.49l.01.01 3-5-.01-.01c.09-.16.16-.32.16-.51z"],
        "symbol-square": ["M12 3.01H4c-.55 0-1 .45-1 1v8c0 .55.45 1 1 1h8c.55 0 1-.45 1-1v-8c0-.56-.45-1-1-1z"],
        "symbol-triangle-down": ["M13 4.01c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1 0 .16.05.31.11.44H3.1l4 8h.01c.16.33.49.56.89.56s.72-.23.89-.56h.01l4-8h-.01c.06-.14.11-.28.11-.44z"],
        "symbol-triangle-up": ["M12.89 11.56l-3.99-8h-.01c-.17-.32-.5-.55-.89-.55s-.72.23-.89.55H7.1l-4 8h.01c-.06.14-.11.29-.11.45 0 .55.45 1 1 1h8c.55 0 1-.45 1-1 0-.16-.05-.31-.11-.45z"],
        "tag": ["M1 3a2 2 0 0 1 2-2h4.584a2 2 0 0 1 1.414.586l5.413 5.412a2 2 0 0 1 0 2.829L9.827 14.41a2 2 0 0 1-2.829 0L1.586 8.998A2 2 0 0 1 1 7.584V3zm3.487-.007a1.494 1.494 0 1 0 0 2.988 1.494 1.494 0 0 0 0-2.988z"],
        "take-action": ["M9 11a1.003 1.003 0 0 0 1.71.71l4-4a1.003 1.003 0 0 0-1.42-1.42l-4 4c-.18.18-.29.43-.29.71zM4 6c.28 0 .53-.11.71-.29l4-4A1.003 1.003 0 0 0 7.29.29l-4 4A1.003 1.003 0 0 0 4 6zm4 4l5-5-.79-.79.5-.5a1.003 1.003 0 0 0-1.42-1.42l-.5.5L10 2 5 7l.79.79-5.5 5.5a1.003 1.003 0 0 0 1.42 1.42l5.5-5.5L8 10zm7 4H7c-.55 0-1 .45-1 1s.45 1 1 1h8c.55 0 1-.45 1-1s-.45-1-1-1z"],
        "taxi": ["M15.12 6.63h-.38L15 7c-.01.3-.01.64 0 .98V8c0 .07-.03.13-.04.19h.02L14 13.1v.9c0 .55-.45 1-1 1s-1-.45-1-1v-1H4v1c0 .55-.45 1-1 1s-1-.45-1-1v-.9l-.98-4.9h.02C1.03 8.13 1 8.07 1 8H.99c0-.33 0-.67.01-1l.26-.37H.88C.4 6.63 0 6.21 0 5.69s.4-.94.88-.94h1.05l.77-2.11c.19-.53.76-1.08 1.26-1.24 0 0 .68-.2 2.05-.32C6.01 1.05 6 1.03 6 1c0-.55.45-1 1-1h2c.55 0 1 .45 1 1 0 .03-.01.05-.02.08 1.37.12 2.05.32 2.05.32.51.15 1.08.71 1.27 1.24l.76 2.12h1.05c.49 0 .89.42.89.93 0 .52-.4.94-.88.94zM11 10h2V8h-2v2zm-8 0h2V8H3v2zm10-5l-.73-1.63C12.21 3.19 12.18 3 12 3H4c-.18 0-.21.19-.27.37L3 5c-.06.18-.18 1 0 1h10c.18 0 .06-.82 0-1z"],
        "text-highlight": ["M9 10H2V6h7V4H1c-.55 0-1 .45-1 1v6c0 .55.45 1 1 1h8v-2zm4 3h-1V3h1c.55 0 1-.45 1-1s-.45-1-1-1h-1c-.37 0-.7.11-1 .28-.3-.17-.63-.28-1-.28H9c-.55 0-1 .45-1 1s.45 1 1 1h1v10H9c-.55 0-1 .45-1 1s.45 1 1 1h1c.37 0 .7-.11 1-.28.3.17.63.28 1 .28h1c.55 0 1-.45 1-1s-.45-1-1-1zm2-9h-2v2h1v4h-1v2h2c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1z"],
        "th": ["M15 1H1c-.6 0-1 .5-1 1v12c0 .6.4 1 1 1h14c.6 0 1-.4 1-1V2c0-.5-.4-1-1-1zM6 13H2v-2h4v2zm0-3H2V8h4v2zm0-3H2V5h4v2zm8 6H7v-2h7v2zm0-3H7V8h7v2zm0-3H7V5h7v2z"],
        "th-derived": ["M5.6 10l-.3.3c-.2.2-.3.4-.3.7 0 .6.4 1 1 1 .3 0 .5-.1.7-.3l2-2c.2-.2.3-.4.3-.7s-.1-.5-.3-.7l-2-2C6.5 6.1 6.3 6 6 6c-.5 0-1 .4-1 1 0 .3.1.5.3.7l.3.3H1c-.6 0-1 .4-1 1s.4 1 1 1h4.6zM15 1H2c-.5 0-1 .5-1 1v5h2V5h11v2H8.8l.6.6c.1.1.2.3.3.4H14v2H9.7c-.1.1-.2.3-.3.4l-.6.6H14v2H3v-2H1v3c0 .5.5 1 1 1h13c.6 0 1-.5 1-1V2c0-.5-.4-1-1-1z"],
        "th-filtered": ["M10 10h3l1.78-2.226a1 1 0 0 0 .22-.625V4.3l1-.9V14c0 .6-.4 1-1 1H1c-.6 0-1-.4-1-1V2c0-.5.4-1 1-1h4.333L9 4.3V5H7v2h2v1H7v2h3zm-4 3v-2H2v2h4zm0-3V8H2v2h4zm0-3V5H2v2h4zm8 6v-2H7v2h7z", "M15.48 0c.31 0 .52.26.52.57 0 .16-.06.3-.17.41l-2.86 2.73v2.63c0 .16-.06.3-.17.41l-.82 1.1c-.1.1-.25.17-.41.17-.31 0-.57-.26-.57-.57V3.71L8.17.98A.566.566 0 0 1 8 .57c0-.31.26-.57.57-.57h6.91z"],
        "th-list": ["M15 1H1c-.6 0-1 .5-1 1v12c0 .6.4 1 1 1h14c.6 0 1-.4 1-1V2c0-.5-.4-1-1-1zm-1 12H2v-2h12v2zm0-3H2V8h12v2zm0-3H2V5h12v2z"],
        "thumbs-down": ["M2 2H0v7h2c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm13.99 4.38c.08-.58-.44-1.02-1.15-1.05-.25-.01-.52-.03-.81-.05.02 0 .05-.01.07-.01.7-.1 1.34-.49 1.41-1.07.06-.58-.46-.97-1.17-1.04-.25-.02-.52-.04-.79-.06.47-.15.84-.42.87-.93.04-.58-.79-1.03-1.5-1.09-.27-.02-.51-.04-.73-.05h-.09c-.23-.02-.43-.02-.62-.03C8.35.95 5.66 1.47 4 2.51v6c2.14 1.29 4.76 3.59 4.21 5.51-.18.59.31 1.05.98.98.81-.09 1.37-.91 1.4-1.78.04-1-.15-2.01-.5-2.91-.04-.25.01-.5.37-.53.49-.03 1.11-.06 1.59-.08.26 0 .51-.01.75-.02h.01c.41-.02.8-.05 1.13-.09.7-.09 1.35-.47 1.43-1.05.08-.58-.44-.97-1.15-1.05-.05-.01-.11-.01-.16-.02.17-.01.33-.03.49-.05.72-.08 1.37-.46 1.44-1.04z"],
        "thumbs-up": ["M15.99 9.62c-.08-.58-.73-.96-1.43-1.05-.15-.02-.32-.04-.49-.05.06-.01.11-.01.16-.02.71-.08 1.23-.47 1.15-1.05-.08-.58-.73-.96-1.43-1.05-.34-.04-.72-.07-1.13-.09h-.01c-.24-.01-.49-.02-.75-.02-.48-.02-1.11-.04-1.59-.08-.36-.03-.41-.28-.37-.53.35-.9.54-1.91.5-2.91-.04-.85-.6-1.68-1.41-1.77-.67-.07-1.16.39-.99.98C8.76 3.91 6.13 6.2 4 7.49v6c1.66 1.03 4.35 1.56 7.48 1.5.19 0 .39-.01.62-.02h.09c.22-.01.46-.03.73-.05.71-.06 1.54-.51 1.5-1.09-.03-.51-.4-.79-.87-.93.27-.02.54-.04.79-.06.71-.06 1.24-.45 1.17-1.04-.06-.58-.7-.97-1.41-1.07-.02 0-.05-.01-.07-.01.29-.02.57-.03.81-.05.71-.03 1.23-.47 1.15-1.05zM2 7H0v7h2c.55 0 1-.45 1-1V8c0-.56-.45-1-1-1z"],
        "tick": ["M14 3c-.28 0-.53.11-.71.29L6 10.59l-3.29-3.3a1.003 1.003 0 0 0-1.42 1.42l4 4c.18.18.43.29.71.29s.53-.11.71-.29l8-8A1.003 1.003 0 0 0 14 3z"],
        "tick-circle": ["M8 16c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm4-11c-.28 0-.53.11-.71.29L7 9.59l-2.29-2.3a1.003 1.003 0 0 0-1.42 1.42l3 3c.18.18.43.29.71.29s.53-.11.71-.29l5-5A1.003 1.003 0 0 0 12 5z"],
        "time": ["M8 0C3.58 0 0 3.58 0 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.69 6-6 6zm1-6.41V4c0-.55-.45-1-1-1s-1 .45-1 1v4c0 .28.11.53.29.71l2 2a1.003 1.003 0 0 0 1.42-1.42L9 7.59z"],
        "timeline-area-chart": ["M15 2.59L9.91 7.68 6.6 5.2l-.01.01C6.42 5.09 6.23 5 6 5c-.24 0-.44.09-.62.23v-.01L3 7.12V11h12V2.59zM15 12H2V3c0-.55-.45-1-1-1s-1 .45-1 1v10c0 .55.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1z"],
        "timeline-bar-chart": ["M8 12h1c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1H8c-.55 0-1 .45-1 1v9c0 .55.45 1 1 1zm5 0h1c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1h-1c-.55 0-1 .45-1 1v6c0 .55.45 1 1 1zm2 1H2c-.55 0-1 .45-1 1s.45 1 1 1h13c.55 0 1-.45 1-1s-.45-1-1-1zM3 12h1c.55 0 1-.45 1-1V7c0-.55-.45-1-1-1H3c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1z"],
        "timeline-events": ["M8 11H7v1h1v-1zm-4 0H3v1h1v-1zm7-8c.6 0 1-.5 1-1V1c0-.5-.4-1-1-1s-1 .5-1 1v1c0 .5.5 1 1 1zM4 3c.5 0 1-.5 1-1V1c0-.5-.5-1-1-1S3 .5 3 1v1c0 .5.5 1 1 1zm10-2h-1v1c0 1.1-.9 2-2 2s-2-.9-2-2V1H6v1c0 1.1-.9 2-2 2s-2-.9-2-2V1H1c-.5 0-1 .5-1 1v12c0 .5.5 1 1 1h13c.6 0 1-.5 1-1V2c0-.5-.4-1-1-1zM5 13H2v-3h3v3zm0-4H2V6h3v3zm4 4H6v-3h3v3zm0-4H6V6h3v3zm4 4h-3v-3h3v3zm0-4h-3V6h3v3zm-1-2h-1v1h1V7z"],
        "timeline-line-chart": ["M15 12H2V9.41l3-3L8.29 9.7c.18.19.43.3.71.3s.53-.11.71-.29l6-6a1.003 1.003 0 0 0-1.42-1.42L9 7.59l-3.29-3.3C5.53 4.11 5.28 4 5 4s-.53.11-.71.29L2 6.59V3c0-.55-.45-1-1-1s-1 .45-1 1v10c0 .55.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1z"],
        "tint": ["M7.88 1s-4.9 6.28-4.9 8.9c.01 2.82 2.34 5.1 4.99 5.1 2.65-.01 5.03-2.3 5.03-5.13C12.99 7.17 7.88 1 7.88 1z"],
        "torch": ["M5 15c0 .55.45 1 1 1h4c.55 0 1-.45 1-1v-1H5v1zm7-15H4c-.55 0-1 .45-1 1v1h10V1c0-.55-.45-1-1-1zM5 7v6h6V7l2-4H3l2 4zm2 0c0-.55.45-1 1-1s1 .45 1 1v2c0 .55-.45 1-1 1s-1-.45-1-1V7z"],
        "train": ["M13 14h-1l1 2H3l1-2H3c-1.1 0-2-.9-2-2V2C1 .9 4.13 0 8 0s7 .9 7 2v10c0 1.1-.9 2-2 2zm-2-2h2v-2h-2v2zM9 7h4V3H9v4zm-6 5h2v-2H3v2zm0-5h4V3H3v4z"],
        "translate": ["M15.89 14.56l-3.99-8h-.01c-.17-.33-.5-.56-.89-.56s-.72.23-.89.56h-.01L9 8.76 7.17 7.38l.23-.18C8.37 6.47 9 5.31 9 4V3h1c.55 0 1-.45 1-1s-.45-1-1-1H7c0-.55-.45-1-1-1H5c-.55 0-1 .45-1 1H1c-.55 0-1 .45-1 1s.45 1 1 1h6v1c0 .66-.32 1.25-.82 1.61l-.68.51-.68-.5C4.32 5.25 4 4.66 4 4H2c0 1.31.63 2.47 1.6 3.2l.23.17L1.4 9.2l.01.01C1.17 9.4 1 9.67 1 10c0 .55.45 1 1 1 .23 0 .42-.09.59-.21l.01.01 2.9-2.17 2.6 1.95-1.99 3.98h.01c-.07.13-.12.28-.12.44 0 .55.45 1 1 1 .39 0 .72-.23.89-.56h.01L8.62 14h4.76l.72 1.45h.01c.17.32.5.55.89.55.55 0 1-.45 1-1 0-.16-.05-.31-.11-.44zM9.62 12L11 9.24 12.38 12H9.62z"],
        "trash": ["M14.49 3.99h-13c-.28 0-.5.22-.5.5s.22.5.5.5h.5v10c0 .55.45 1 1 1h10c.55 0 1-.45 1-1v-10h.5c.28 0 .5-.22.5-.5s-.22-.5-.5-.5zm-8.5 9c0 .55-.45 1-1 1s-1-.45-1-1v-6c0-.55.45-1 1-1s1 .45 1 1v6zm3 0c0 .55-.45 1-1 1s-1-.45-1-1v-6c0-.55.45-1 1-1s1 .45 1 1v6zm3 0c0 .55-.45 1-1 1s-1-.45-1-1v-6c0-.55.45-1 1-1s1 .45 1 1v6zm2-12h-4c0-.55-.45-1-1-1h-2c-.55 0-1 .45-1 1h-4c-.55 0-1 .45-1 1v1h14v-1c0-.55-.45-1-1-1z"],
        "tree": ["M9 11.857V16H7v-4.143L1 13l3.885-4.44L3 9l3.07-4.297L5 5l3-5 3 5-1.07-.297L13 9l-1.885-.44L15 13l-6-1.143z"],
        "trending-down": ["M15 7c-.55 0-1 .45-1 1v.59l-4.29-4.3A.997.997 0 0 0 9 4c-.16 0-.31.05-.44.11V4.1L5 5.88 1.45 4.11v.01C1.31 4.05 1.16 4 1 4c-.55 0-1 .45-1 1 0 .39.23.72.56.89v.01l4 2v-.01c.13.06.28.11.44.11s.31-.05.44-.11v.01L8.8 6.22 12.59 10H12c-.55 0-1 .45-1 1s.45 1 1 1h3c.55 0 1-.45 1-1V8c0-.55-.45-1-1-1z"],
        "trending-up": ["M15 4h-3c-.55 0-1 .45-1 1s.45 1 1 1h.59L8.8 9.78 5.45 8.11v.01C5.31 8.05 5.16 8 5 8s-.31.05-.44.11V8.1l-4 2v.01c-.33.17-.56.5-.56.89 0 .55.45 1 1 1 .16 0 .31-.05.44-.11v.01L5 10.12l3.55 1.78v-.01c.14.06.29.11.45.11.28 0 .53-.11.71-.29L14 7.41V8c0 .55.45 1 1 1s1-.45 1-1V5c0-.55-.45-1-1-1z"],
        "two-columns": ["M3.99-.01h-3c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1h3c.55 0 1-.45 1-1v-14c0-.55-.45-1-1-1zm11.71 7.3l-2-2a1.003 1.003 0 0 0-1.71.71v4a1.003 1.003 0 0 0 1.71.71l2-2c.18-.18.29-.43.29-.71s-.11-.53-.29-.71zM9.99-.01h-3c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1h3c.55 0 1-.45 1-1v-14c0-.55-.45-1-1-1z"],
        "underline": ["M8 14c2.8 0 5-2.2 5-5V3c0-.6-.4-1-1-1s-1 .4-1 1v6c0 1.7-1.3 3-3 3s-3-1.3-3-3V3c0-.6-.4-1-1-1s-1 .4-1 1v6c0 2.8 2.2 5 5 5zM13.5 15h-11c-.3 0-.5.2-.5.5s.2.5.5.5h11c.3 0 .5-.2.5-.5s-.2-.5-.5-.5z"],
        "undo": ["M4 11c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm7-7H3.41L4.7 2.71c.19-.18.3-.43.3-.71a1.003 1.003 0 0 0-1.71-.71l-3 3C.11 4.47 0 4.72 0 5c0 .28.11.53.29.71l3 3a1.003 1.003 0 0 0 1.42-1.42L3.41 6H11c1.66 0 3 1.34 3 3s-1.34 3-3 3H7v2h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z"],
        "ungroup-objects": ["M3.5 5C1.57 5 0 6.57 0 8.5S1.57 12 3.5 12 7 10.43 7 8.5 5.43 5 3.5 5zm9 0C10.57 5 9 6.57 9 8.5s1.57 3.5 3.5 3.5S16 10.43 16 8.5 14.43 5 12.5 5z"],
        "unknown-vehicle": ["M10.507 9.75v-3.5c0-.089.023-.171.051-.25h-7.55c-.176 0-.061-.824 0-1l.729-1.63c.06-.177.095-.37.27-.37h4.5V1.01c-.166-.003-.32-.01-.5-.01-2.72 0-4.036.402-4.036.402-.508.155-1.079.711-1.268 1.237L1.94 4.756H.887c-.483 0-.88.423-.88.939s.397.939.88.939h.376L1.008 7c-.034.685 0 1.436 0 2v5c0 .657.384 1 1 1s1-.343 1-1v-1h10v1c0 .657.383 1 1 1s1-.343 1-1v-3.5h-3.75a.75.75 0 0 1-.75-.75zm-5.5.25h-2V8h2v2zm11-4.305zM15.34.826a2.807 2.807 0 0 0-.932-.598c-.386-.16-.868-.241-1.445-.241-.447 0-.851.076-1.213.228-.362.153-.67.364-.926.636s-.456.592-.598.963a3.535 3.535 0 0 0-.218 1.144V3h1.789c.003-.208.023-.405.069-.588.049-.193.124-.362.225-.506.102-.144.232-.259.39-.345.159-.087.348-.13.567-.13.325 0 .58.09.762.272.183.18.275.46.275.839.008.222-.031.407-.116.555a1.654 1.654 0 0 1-.335.408 7.4 7.4 0 0 1-.452.37c-.162.123-.316.27-.463.438a2.556 2.556 0 0 0-.384.611c-.11.239-.177.535-.2.889V6h1.645v-.1c.032-.248.111-.453.237-.618.126-.164.27-.31.433-.438.163-.128.335-.255.518-.383a2.413 2.413 0 0 0 .878-1.117c.102-.255.152-.58.152-.975A2.241 2.241 0 0 0 15.34.826zM12.007 7v2h2V7h-2z"],
        "unlock": ["M11.99-.01c-2.21 0-4 1.79-4 4v3h-7c-.55 0-1 .45-1 1v7c0 .55.45 1 1 1h12c.55 0 1-.45 1-1v-7c0-.55-.45-1-1-1h-3v-3c0-1.1.9-2 2-2s2 .9 2 2v1c0 .55.45 1 1 1s1-.45 1-1v-1c0-2.21-1.79-4-4-4z"],
        "unpin": ["M9.39 1c-.5.5-.4 1.48.15 2.53L4.38 7.54C2.85 6.5 1.52 6.07 1 6.59l3.5 3.5c-.02.02-1.4 2.8-1.4 2.8l2.8-1.4 3.5 3.5c.53-.53.1-1.86-.95-3.38l4.02-5.16c1.04.55 2.01.65 2.51.14L9.39 1z"],
        "unresolve": ["M11 3c-.55 0-1.07.09-1.57.26a6.46 6.46 0 0 1 0 9.48c.5.17 1.02.26 1.57.26 2.76 0 5-2.24 5-5s-2.24-5-5-5zM9.78 9.38l.09-.27c.08-.36.13-.73.13-1.11s-.05-.75-.13-1.11l-.09-.27a5.32 5.32 0 0 0-.29-.79l-.12-.21c-.14-.27-.31-.52-.51-.76a.7.7 0 0 0-.08-.1c-.24-.27-.49-.52-.78-.74-.43-.32-.92-.58-1.45-.75l.01-.01c-.1-.03-.2-.05-.3-.08-.12-.03-.23-.07-.36-.09A5.28 5.28 0 0 0 5 3C2.24 3 0 5.24 0 8s2.24 5 5 5c.31 0 .61-.04.9-.09.12-.02.24-.06.36-.09.1-.03.21-.04.3-.08l-.01-.01c.88-.29 1.64-.8 2.22-1.49.03-.03.06-.07.09-.1.19-.24.36-.49.51-.76.04-.07.08-.14.11-.21.13-.25.23-.52.3-.79z"],
        "updated": ["M8 0a7.95 7.95 0 0 0-6 2.74V1c0-.55-.45-1-1-1S0 .45 0 1v4c0 .55.45 1 1 1h4c.55 0 1-.45 1-1s-.45-1-1-1H3.54C4.64 2.78 6.22 2 8 2c3.31 0 6 2.69 6 6 0 2.61-1.67 4.81-4 5.63-.63.22-1.29.37-2 .37-3.31 0-6-2.69-6-6 0-.55-.45-1-1-1s-1 .45-1 1c0 4.42 3.58 8 8 8 .34 0 .67-.03 1-.07.02 0 .04-.01.06-.01C12.98 15.4 16 12.06 16 8c0-4.42-3.58-8-8-8zm3 5c-.28 0-.53.11-.71.29L7 8.58 5.71 7.29a1.003 1.003 0 0 0-1.42 1.42l2 2c.18.18.43.29.71.29.28 0 .53-.11.71-.29l4-4A1.003 1.003 0 0 0 11 5z"],
        "upload": ["M8 0C3.58 0 0 3.58 0 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm3 8c-.28 0-.53-.11-.71-.29L9 6.41V12c0 .55-.45 1-1 1s-1-.45-1-1V6.41l-1.29 1.3a1.003 1.003 0 0 1-1.42-1.42l3-3C7.47 3.11 7.72 3 8 3s.53.11.71.29l3 3A1.003 1.003 0 0 1 11 8z"],
        "user": ["M7.99-.01A7.998 7.998 0 0 0 .03 8.77c.01.09.03.18.04.28.02.15.04.31.07.47.02.11.05.22.08.34.03.13.06.26.1.38.04.12.08.25.12.37.04.11.08.21.12.32a6.583 6.583 0 0 0 .3.65c.07.14.14.27.22.4.04.07.08.13.12.2l.27.42.1.13a7.973 7.973 0 0 0 3.83 2.82c.03.01.05.02.07.03.37.12.75.22 1.14.29l.2.03c.39.06.79.1 1.2.1s.81-.04 1.2-.1l.2-.03c.39-.07.77-.16 1.14-.29.03-.01.05-.02.07-.03a8.037 8.037 0 0 0 3.83-2.82c.03-.04.06-.08.09-.13.1-.14.19-.28.28-.42.04-.07.08-.13.12-.2.08-.13.15-.27.22-.41.04-.08.08-.17.12-.26.06-.13.11-.26.17-.39.04-.1.08-.21.12-.32.04-.12.08-.24.12-.37.04-.13.07-.25.1-.38.03-.11.06-.22.08-.34.03-.16.05-.31.07-.47.01-.09.03-.18.04-.28.02-.26.04-.51.04-.78-.03-4.41-3.61-7.99-8.03-7.99zm0 14.4c-1.98 0-3.75-.9-4.92-2.31.67-.36 1.49-.66 2.14-.95 1.16-.52 1.04-.84 1.08-1.27.01-.06.01-.11.01-.17-.41-.36-.74-.86-.96-1.44v-.01c0-.01-.01-.02-.01-.02-.05-.13-.09-.26-.12-.39-.28-.05-.44-.35-.5-.63-.06-.11-.18-.38-.15-.69.04-.41.2-.59.38-.67v-.06c0-.51.05-1.24.14-1.72.02-.13.05-.26.09-.39.17-.59.53-1.12 1.01-1.49.49-.38 1.19-.59 1.82-.59.62 0 1.32.2 1.82.59.48.37.84.9 1.01 1.49.04.13.07.26.09.4.09.48.14 1.21.14 1.72v.07c.18.08.33.26.37.66.03.31-.1.58-.16.69-.06.27-.21.57-.48.62-.03.13-.07.26-.12.38 0 .01-.01.04-.01.04-.21.57-.54 1.06-.94 1.42 0 .06.01.13.01.19.04.43-.12.75 1.05 1.27.65.29 1.47.6 2.14.95a6.415 6.415 0 0 1-4.93 2.31z"],
        "variable": ["M3.94 3.15c.47-.66 1.05-1.24 1.76-1.73l.13-.4c-1.11.45-2.05 1.01-2.84 1.7-1.02.88-1.8 1.9-2.32 3.05C.22 6.76 0 7.75 0 8.75c0 1.75.66 3.5 1.99 5.25l.13-.42c-.39-.94-.59-1.82-.59-2.63 0-1.28.22-2.64.67-4.1.45-1.45 1.03-2.69 1.74-3.7zm7.51 6.41l-.27-.15c-.3.41-.52.66-.66.77-.09.06-.21.1-.33.1-.15 0-.3-.1-.45-.28-.25-.33-.59-1.22-1.01-2.69.38-.65.69-1.08.95-1.28.19-.15.39-.22.59-.22.08 0 .22.03.43.08.2.06.39.08.54.08.22 0 .4-.07.54-.22.15-.15.22-.34.22-.57 0-.25-.07-.45-.22-.59-.15-.15-.35-.22-.63-.22-.24 0-.47.06-.69.17-.21.11-.49.36-.82.74-.25.28-.61.78-1.1 1.48a6.72 6.72 0 0 0-.97-2.38l-2.59.44-.05.27c.19-.04.36-.06.49-.06.26 0 .47.11.64.33.26.34.63 1.38 1.11 3.12-.37.49-.63.81-.77.96-.23.24-.41.4-.56.47-.11.06-.24.09-.39.09-.11 0-.29-.06-.53-.18-.17-.07-.32-.11-.45-.11-.25 0-.46.08-.62.24-.16.16-.24.37-.24.61 0 .23.08.42.23.57.15.15.35.22.61.22.25 0 .48-.05.7-.15.22-.1.49-.32.82-.65.33-.33.78-.86 1.36-1.59.22.69.42 1.19.58 1.51.16.31.35.54.56.68.21.14.47.21.79.21.31 0 .62-.11.93-.33.4-.29.82-.77 1.26-1.47zm2.56-8.54l-.12.42c.39.95.59 1.82.59 2.64 0 1.09-.17 2.26-.5 3.51-.26.96-.6 1.87-1.02 2.71-.42.85-.82 1.51-1.21 1.98-.39.48-.87.92-1.44 1.32l-.14.4c1.11-.45 2.05-1.02 2.84-1.7 1.03-.89 1.81-1.91 2.33-3.05.44-.99.66-1.99.66-3 0-1.73-.66-3.48-1.99-5.23z"],
        "vertical-bar-chart-asc": ["M6 7c-.55 0-1 .45-1 1v7c0 .55.45 1 1 1s1-.45 1-1V8c0-.55-.45-1-1-1zM2 9c-.55 0-1 .45-1 1v5c0 .55.45 1 1 1s1-.45 1-1v-5c0-.55-.45-1-1-1zm8-5c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1s1-.45 1-1V5c0-.55-.45-1-1-1zm4-4c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1z"],
        "vertical-bar-chart-desc": ["M6 4c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1s1-.45 1-1V5c0-.55-.45-1-1-1zM2 0c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1zm8 7c-.55 0-1 .45-1 1v7c0 .55.45 1 1 1s1-.45 1-1V8c0-.55-.45-1-1-1zm4 2c-.55 0-1 .45-1 1v5c0 .55.45 1 1 1s1-.45 1-1v-5c0-.55-.45-1-1-1z"],
        "vertical-distribution": ["M1 2h14c.55 0 1-.45 1-1s-.45-1-1-1H1C.45 0 0 .45 0 1s.45 1 1 1zm14 11H1c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1zM3 5c-.55 0-1 .45-1 1v3c0 .55.45 1 1 1h9c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1H3z"],
        "video": ["M15 2H1c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zM5 11V5l6 3-6 3z"],
        "volume-down": ["M9 2c-.28 0-.53.11-.71.29L5.59 5H3c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1h2.59l2.71 2.71c.17.18.42.29.7.29.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm3.57 1.44l-1.59 1.22C11.62 5.61 12 6.76 12 8s-.38 2.39-1.02 3.34l1.59 1.22C13.47 11.27 14 9.7 14 8c0-1.7-.53-3.27-1.43-4.56z"],
        "volume-off": ["M11 2c-.28 0-.53.11-.71.29L7.59 5H5c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1h2.59l2.71 2.71c.17.18.42.29.7.29.55 0 1-.45 1-1V3c0-.55-.45-1-1-1z"],
        "volume-up": ["M7 1.86c-.28 0-.53.11-.71.29l-2.7 2.71H1c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1h2.59l2.71 2.71a1.003 1.003 0 0 0 1.71-.71v-10c-.01-.55-.46-1-1.01-1zm6.74-.99l-1.58 1.22A9.985 9.985 0 0 1 14 7.86c0 2.16-.69 4.15-1.85 5.78l1.58 1.22c1.42-1.97 2.26-4.38 2.26-7 .01-2.61-.84-5.02-2.25-6.99zM8.98 4.52C9.62 5.48 10 6.63 10 7.86s-.38 2.39-1.02 3.34l1.59 1.22c.9-1.29 1.43-2.86 1.43-4.56 0-1.7-.53-3.27-1.43-4.56L8.98 4.52z"],
        "walk": ["M13 8h-2c-.16 0-.31-.05-.44-.11v.01l-1.02-.51-.37 1.86 1.38.92-.01.02c.27.17.46.46.46.81v4c0 .55-.45 1-1 1s-1-.45-1-1v-3.46l-1.27-.85-1.8 4.67h-.01A.98.98 0 0 1 5 16c-.55 0-1-.45-1-1 0-.13.03-.25.07-.36h-.01L7.39 6H5.62l-.73 1.45h-.01C4.72 7.77 4.39 8 4 8c-.55 0-1-.45-1-1 0-.16.05-.31.11-.44H3.1l1-2h.01c.17-.33.5-.56.89-.56h3.16l.29-.75C8.17 2.9 8 2.47 8 2c0-1.1.9-2 2-2s2 .9 2 2c0 1-.73 1.82-1.69 1.97l-.5 1.32 1.43.71H13c.55 0 1 .45 1 1s-.45 1-1 1z"],
        "warning-sign": ["M15.84 13.5l.01-.01-7-12-.01.01c-.17-.3-.48-.5-.85-.5s-.67.2-.85.5l-.01-.01-7 12 .01.01c-.09.15-.15.31-.15.5 0 .55.45 1 1 1h14c.55 0 1-.45 1-1 0-.19-.06-.35-.15-.5zm-6.85-.51h-2v-2h2v2zm0-3h-2v-5h2v5z"],
        "waterfall-chart": ["M8 7c.55 0 1-.45 1-1s-.45-1-1-1-1 .45-1 1 .45 1 1 1zm-4 4h1c.55 0 1-.45 1-1V8c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1zm7-6c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1s-1 .45-1 1v1c0 .55.45 1 1 1zm4-3h-1c-.55 0-1 .45-1 1v7c0 .55.45 1 1 1h1c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm0 10H2V3c0-.55-.45-1-1-1s-1 .45-1 1v10c0 .55.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1z"],
        "widget": ["M13 11h2V5h-2v6zM3 5H1v6h2V5zm11-1c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zM2 12c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zM5 3h6V1H5v2zM2 0C.9 0 0 .9 0 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm3 15h6v-2H5v2z"],
        "widget-button": ["M1 3h14c.55 0 1 .45 1 1v8c0 .55-.45 1-1 1H1c-.55 0-1-.45-1-1V4c0-.55.45-1 1-1zm1 2v6h12V5H2zm3 4c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm3 0c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm3 0c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1z"],
        "widget-footer": ["M14 0H2c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1h12c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 14H3v-3h10v3zm0-4H3V2h10v8z"],
        "widget-header": ["M14 0H2c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1h12c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 14H3V6h10v8zm0-9H3V2h10v3z"],
        "wrench": ["M15.83 3.7l-3.06 3.05-2.84-.7-.7-2.83L12.29.17a5.004 5.004 0 0 0-4.83 1.29 4.967 4.967 0 0 0-1.12 5.36L.58 12.58c-.36.36-.58.86-.58 1.41 0 1.1.9 2 2 2 .55 0 1.05-.22 1.41-.59l5.77-5.77c1.79.69 3.91.33 5.35-1.12 1.32-1.3 1.74-3.15 1.3-4.81z"],
        "zoom-in": ["M7.99 5.99v-2c0-.55-.45-1-1-1s-1 .45-1 1v2h-2c-.55 0-1 .45-1 1s.45 1 1 1h2v2c0 .55.45 1 1 1s1-.45 1-1v-2h2c.55 0 1-.45 1-1s-.45-1-1-1h-2zm7.56 7.44l-2.67-2.68a6.94 6.94 0 0 0 1.11-3.76c0-3.87-3.13-7-7-7s-7 3.13-7 7 3.13 7 7 7c1.39 0 2.68-.42 3.76-1.11l2.68 2.67a1.498 1.498 0 1 0 2.12-2.12zm-8.56-1.44c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z"],
        "zoom-out": ["M3.99 5.99c-.55 0-1 .45-1 1s.45 1 1 1h6c.55 0 1-.45 1-1s-.45-1-1-1h-6zm11.56 7.44l-2.67-2.68a6.94 6.94 0 0 0 1.11-3.76c0-3.87-3.13-7-7-7s-7 3.13-7 7 3.13 7 7 7c1.39 0 2.68-.42 3.76-1.11l2.68 2.67a1.498 1.498 0 1 0 2.12-2.12zm-8.56-1.44c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z"],
        "zoom-to-fit": ["M11 10a1.003 1.003 0 0 0 1.71.71l2-2c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71l-2-2a1.003 1.003 0 0 0-1.42 1.42L12.59 8 11.3 9.29c-.19.18-.3.43-.3.71zM1 5c.55 0 1-.45 1-1V2h2c.55 0 1-.45 1-1s-.45-1-1-1H1C.45 0 0 .45 0 1v3c0 .55.45 1 1 1zm4 1a1.003 1.003 0 0 0-1.71-.71l-2 2C1.11 7.47 1 7.72 1 8c0 .28.11.53.29.71l2 2a1.003 1.003 0 0 0 1.42-1.42L3.41 8 4.7 6.71c.19-.18.3-.43.3-.71zm1-1c.28 0 .53-.11.71-.29L8 3.41 9.29 4.7c.18.19.43.3.71.3a1.003 1.003 0 0 0 .71-1.71l-2-2C8.53 1.11 8.28 1 8 1s-.53.11-.71.29l-2 2A1.003 1.003 0 0 0 6 5zm9 6c-.55 0-1 .45-1 1v2h-2c-.55 0-1 .45-1 1s.45 1 1 1h3c.55 0 1-.45 1-1v-3c0-.55-.45-1-1-1zm0-11h-3c-.55 0-1 .45-1 1s.45 1 1 1h2v2c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1zM4 14H2v-2c0-.55-.45-1-1-1s-1 .45-1 1v3c0 .55.45 1 1 1h3c.55 0 1-.45 1-1s-.45-1-1-1zm6-3c-.28 0-.53.11-.71.29L8 12.59 6.71 11.3A.965.965 0 0 0 6 11a1.003 1.003 0 0 0-.71 1.71l2 2c.18.18.43.29.71.29s.53-.11.71-.29l2-2A1.003 1.003 0 0 0 10 11z"]
    };
    exports.IconSvgPaths20 = {
        "add": ["M10 0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm5-9h-4V5c0-.55-.45-1-1-1s-1 .45-1 1v4H5c-.55 0-1 .45-1 1s.45 1 1 1h4v4c0 .55.45 1 1 1s1-.45 1-1v-4h4c.55 0 1-.45 1-1s-.45-1-1-1z"],
        "add-column-left": ["M4 11h2v2c0 .55.45 1 1 1s1-.45 1-1v-2h2c.55 0 1-.45 1-1s-.45-1-1-1H8V7c0-.55-.45-1-1-1s-1 .45-1 1v2H4c-.55 0-1 .45-1 1s.45 1 1 1zM19 0H1C.45 0 0 .45 0 1v18c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-7 18H2V2h10v16zm6 0h-5V2h5v16z"],
        "add-column-right": ["M10 11h2v2c0 .55.45 1 1 1s1-.45 1-1v-2h2c.55 0 1-.45 1-1s-.45-1-1-1h-2V7c0-.55-.45-1-1-1s-1 .45-1 1v2h-2c-.55 0-1 .45-1 1s.45 1 1 1zm9-11H1C.45 0 0 .45 0 1v18c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zM7 18H2V2h5v16zm11 0H8V2h10v16z"],
        "add-row-bottom": ["M19 0H1C.45 0 0 .45 0 1v18c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 18H2V8h16v10zm0-11H2V2h16v5zM7 14h2v2c0 .55.45 1 1 1s1-.45 1-1v-2h2c.55 0 1-.45 1-1s-.45-1-1-1h-2v-2c0-.55-.45-1-1-1s-1 .45-1 1v2H7c-.55 0-1 .45-1 1s.45 1 1 1z"],
        "add-row-top": ["M7 8h2v2c0 .55.45 1 1 1s1-.45 1-1V8h2c.55 0 1-.45 1-1s-.45-1-1-1h-2V4c0-.55-.45-1-1-1s-1 .45-1 1v2H7c-.55 0-1 .45-1 1s.45 1 1 1zm12-8H1C.45 0 0 .45 0 1v18c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 18H2v-5h16v5zm0-6H2V2h16v10z"],
        "add-to-artifact": ["M13 12H1c-.55 0-1 .45-1 1s.45 1 1 1h12c.55 0 1-.45 1-1s-.45-1-1-1zm0 4H1c-.55 0-1 .45-1 1s.45 1 1 1h12c.55 0 1-.45 1-1s-.45-1-1-1zM1 6h9c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1zm12 2H1c-.55 0-1 .45-1 1s.45 1 1 1h12c.55 0 1-.45 1-1s-.45-1-1-1zm6-4h-2V2c0-.55-.45-1-1-1s-1 .45-1 1v2h-2c-.55 0-1 .45-1 1s.45 1 1 1h2v2c0 .55.45 1 1 1s1-.45 1-1V6h2c.55 0 1-.45 1-1s-.45-1-1-1z"],
        "add-to-folder": ["M.01 10V6H20v10c0 .55-.45 1-1 1H9.995v-3.99C9.965 11.332 8.635 10 6.987 10H.01zM19 3c.55 0 1 .45.99 1v1H0V2c0-.55.45-1 1-1h5.997c.28 0 .53.11.71.29L9.414 3H19zM6.987 12c.55 0 .999.45 1.009 1.01v5c0 .55-.45 1-1 1s-.999-.45-.999-1v-2.59l-4.288 4.29a1.003 1.003 0 0 1-1.42-1.42L4.579 14H1.989c-.55 0-1-.45-1-1s.45-1 1-1h4.998z"],
        "airplane": ["M20 2c0-1.1-.9-2-2-2-.55 0-1.05.22-1.41.59l-4.84 4.84L2 1 1 3l7.53 5.64L4.17 13H1l-1 1 4 2 2 4 1-1v-3.17l4.36-4.36L17 19l2-1-4.43-9.74 4.84-4.84c.37-.37.59-.87.59-1.42z"],
        "align-center": ["M5 5c-.55 0-1 .45-1 1s.45 1 1 1h10c.55 0 1-.45 1-1s-.45-1-1-1H5zM1 3h18c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1zm12 12c.55 0 1-.45 1-1s-.45-1-1-1H7c-.55 0-1 .45-1 1s.45 1 1 1h6zm4 2H3c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1zm2-8H1c-.55 0-1 .45-1 1s.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1z"],
        "align-justify": ["M1 3h18c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1zm18 14H1c-.55 0-1 .45-1 1s.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1zm0-12H1c-.55 0-1 .45-1 1s.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1zm0 4H1c-.55 0-1 .45-1 1s.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1zm0 4H1c-.55 0-1 .45-1 1s.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1z"],
        "align-left": ["M1 7h10c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1zm0-4h18c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1zm14 14H1c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1zm4-8H1c-.55 0-1 .45-1 1s.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1zM1 15h6c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1z"],
        "align-right": ["M19 17H5c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1zM1 3h18c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1zm18 10h-6c-.55 0-1 .45-1 1s.45 1 1 1h6c.55 0 1-.45 1-1s-.45-1-1-1zm0-4H1c-.55 0-1 .45-1 1s.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1zm0-4H9c-.55 0-1 .45-1 1s.45 1 1 1h10c.55 0 1-.45 1-1s-.45-1-1-1z"],
        "alignment-bottom": ["M12 16h4c.55 0 1-.45 1-1V8c0-.55-.45-1-1-1h-4c-.55 0-1 .45-1 1v7c0 .55.45 1 1 1zm7 2H1c-.55 0-1 .45-1 1s.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1zM4 16h4c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1z"],
        "alignment-horizontal-center": ["M19 9h-2V7c0-.55-.45-1-1-1h-4c-.55 0-1 .45-1 1v2H9V3c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1v6H1c-.55 0-1 .45-1 1s.45 1 1 1h2v6c0 .55.45 1 1 1h4c.55 0 1-.45 1-1v-6h2v2c0 .55.45 1 1 1h4c.55 0 1-.45 1-1v-2h2c.55 0 1-.45 1-1s-.45-1-1-1z"],
        "alignment-left": ["M1 0C.45 0 0 .45 0 1v18c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1zm11 11H5c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1h7c.55 0 1-.45 1-1v-4c0-.55-.45-1-1-1zm7-8H5c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1z"],
        "alignment-right": ["M19 0c-.55 0-1 .45-1 1v18c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1zm-4 11H8c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1h7c.55 0 1-.45 1-1v-4c0-.55-.45-1-1-1zm0-8H1c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1z"],
        "alignment-top": ["M8 4H4c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1h4c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1zm11-4H1C.45 0 0 .45 0 1s.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1zm-3 4h-4c-.55 0-1 .45-1 1v7c0 .55.45 1 1 1h4c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1z"],
        "alignment-vertical-center": ["M17 3h-6V1c0-.55-.45-1-1-1S9 .45 9 1v2H3c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1h6v2H7c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1h2v2c0 .55.45 1 1 1s1-.45 1-1v-2h2c.55 0 1-.45 1-1v-4c0-.55-.45-1-1-1h-2V9h6c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1z"],
        "annotation": ["M9.41 13.41l7.65-7.65-2.83-2.83-7.65 7.65 2.83 2.83zm10-10c.37-.36.59-.86.59-1.41 0-1.1-.9-2-2-2-.55 0-1.05.22-1.41.59l-1.65 1.65 2.83 2.83 1.64-1.66zM18 18H2V2h8.93l2-2H1C.45 0 0 .45 0 1v18c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V7.07l-2 2V18zM4 16l4.41-1.59-2.81-2.79L4 16z"],
        "application": ["M3.5 9h9c.28 0 .5-.22.5-.5s-.22-.5-.5-.5h-9c-.28 0-.5.22-.5.5s.22.5.5.5zm0 2h5c.28 0 .5-.22.5-.5s-.22-.5-.5-.5h-5c-.28 0-.5.22-.5.5s.22.5.5.5zM19 1H1c-.55 0-1 .45-1 1v16c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1zm-1 16H2V6h16v11zM3.5 13h7c.28 0 .5-.22.5-.5s-.22-.5-.5-.5h-7c-.28 0-.5.22-.5.5s.22.5.5.5z"],
        "applications": ["M15 5H1c-.55 0-1 .45-1 1v13c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm-1 13H2V8h12v10zM3.5 10h7c.28 0 .5-.22.5-.5s-.22-.5-.5-.5h-7c-.28 0-.5.22-.5.5s.22.5.5.5zm0 2h3c.28 0 .5-.22.5-.5s-.22-.5-.5-.5h-3c-.28 0-.5.22-.5.5s.22.5.5.5zm0 2h5c.28 0 .5-.22.5-.5s-.22-.5-.5-.5h-5c-.28 0-.5.22-.5.5s.22.5.5.5zM19 0H5c-.55 0-1 .45-1 1v3h2V3h12v10h-1v2h2c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1z"],
        "arrow-bottom-left": ["M18 3a1.003 1.003 0 0 0-1.71-.71L4 14.59V7c0-.55-.45-1-1-1s-1 .45-1 1v10c0 .55.45 1 1 1h10c.55 0 1-.45 1-1s-.45-1-1-1H5.41l12.3-12.29c.18-.18.29-.43.29-.71z"],
        "arrow-bottom-right": ["M17 6c-.55 0-1 .45-1 1v7.59L3.71 2.29a1.003 1.003 0 0 0-1.42 1.42L14.59 16H7c-.55 0-1 .45-1 1s.45 1 1 1h10c.55 0 1-.45 1-1V7c0-.55-.45-1-1-1z"],
        "arrow-down": ["M16 11c-.3 0-.5.1-.7.3L11 15.6V2c0-.5-.4-1-1-1s-1 .5-1 1v13.6l-4.3-4.3c-.2-.2-.4-.3-.7-.3-.5 0-1 .4-1 1 0 .3.1.5.3.7l6 6c.2.2.4.3.7.3s.5-.1.7-.3l6-6c.2-.2.3-.4.3-.7 0-.6-.5-1-1-1z"],
        "arrow-left": ["M18 9H4.41L8.7 4.71c.19-.18.3-.43.3-.71a1.003 1.003 0 0 0-1.71-.71l-6 6c-.18.18-.29.43-.29.71 0 .28.11.53.29.71l6 6a1.003 1.003 0 0 0 1.42-1.42L4.41 11H18c.55 0 1-.45 1-1s-.45-1-1-1z"],
        "arrow-right": ["M18.71 9.29l-6-6a1.003 1.003 0 0 0-1.42 1.42L15.59 9H2c-.55 0-1 .45-1 1s.45 1 1 1h13.59l-4.29 4.29c-.19.18-.3.43-.3.71a1.003 1.003 0 0 0 1.71.71l6-6c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71z"],
        "arrow-top-left": ["M17.71 16.29L5.41 4H13c.55 0 1-.45 1-1s-.45-1-1-1H3c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1s1-.45 1-1V5.41L16.29 17.7c.18.19.43.3.71.3a1.003 1.003 0 0 0 .71-1.71z"],
        "arrow-top-right": ["M17 2H7c-.55 0-1 .45-1 1s.45 1 1 1h7.59L2.29 16.29a1.003 1.003 0 0 0 1.42 1.42L16 5.41V13c0 .55.45 1 1 1s1-.45 1-1V3c0-.55-.45-1-1-1z"],
        "arrow-up": ["M16.7 7.3l-6-6c-.2-.2-.4-.3-.7-.3s-.5.1-.7.3l-6 6c-.2.2-.3.4-.3.7 0 .6.5 1 1 1 .3 0 .5-.1.7-.3L9 4.4V18c0 .5.4 1 1 1s1-.5 1-1V4.4l4.3 4.3c.2.2.4.3.7.3.5 0 1-.4 1-1 0-.3-.1-.5-.3-.7z"],
        "arrows-horizontal": ["M19.7 9.3l-5-5c-.2-.2-.4-.3-.7-.3-.6 0-1 .4-1 1 0 .3.1.5.3.7L16.6 9H3.4l3.3-3.3c.2-.2.3-.4.3-.7 0-.6-.4-1-1-1-.3 0-.5.1-.7.3l-5 5c-.2.2-.3.4-.3.7s.1.5.3.7l5 5c.2.2.4.3.7.3.6 0 1-.4 1-1 0-.3-.1-.5-.3-.7L3.4 11h13.2l-3.3 3.3c-.2.2-.3.4-.3.7 0 .6.4 1 1 1 .3 0 .5-.1.7-.3l5-5c.2-.2.3-.4.3-.7s-.1-.5-.3-.7z"],
        "arrows-vertical": ["M15 13c-.3 0-.5.1-.7.3L11 16.6V3.4l3.3 3.3c.2.2.4.3.7.3.6 0 1-.4 1-1 0-.3-.1-.5-.3-.7l-5-5c-.2-.2-.4-.3-.7-.3s-.5.1-.7.3l-5 5c-.2.2-.3.4-.3.7 0 .6.4 1 1 1 .3 0 .5-.1.7-.3L9 3.4v13.2l-3.3-3.3c-.2-.2-.4-.3-.7-.3-.6 0-1 .4-1 1 0 .3.1.5.3.7l5 5c.2.2.4.3.7.3s.5-.1.7-.3l5-5c.2-.2.3-.4.3-.7 0-.5-.4-1-1-1z"],
        "asterisk": ["M18.52 14.17l.01-.02L11.89 10l6.64-4.15-.01-.02A.97.97 0 0 0 19 5c0-.55-.45-1-1-1-.2 0-.37.07-.52.17l-.01-.02L11 8.2V1c0-.55-.45-1-1-1S9 .45 9 1v7.2L2.53 4.15l-.01.02A.922.922 0 0 0 2 4c-.55 0-1 .45-1 1 0 .36.2.66.48.83l-.01.02L8.11 10l-6.64 4.15.01.02A.97.97 0 0 0 1 15c0 .55.45 1 1 1 .2 0 .37-.07.52-.17l.01.02L9 11.8V19c0 .55.45 1 1 1s1-.45 1-1v-7.2l6.47 4.04.01-.02c.15.11.32.18.52.18.55 0 1-.45 1-1 0-.36-.2-.66-.48-.83z"],
        "automatic-updates": ["M10 18c-4.42 0-8-3.58-8-8 0-2.52 1.18-4.76 3-6.22V5c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1H2c-.55 0-1 .45-1 1s.45 1 1 1h2.06C1.61 3.82 0 6.71 0 10c0 5.52 4.48 10 10 10 .55 0 1-.45 1-1s-.45-1-1-1zm0-16c1.64 0 3.15.49 4.42 1.34l1.43-1.43A9.869 9.869 0 0 0 10 0c-.55 0-1 .45-1 1s.45 1 1 1zm10 8c0-1.13-.2-2.21-.54-3.22L17.84 8.4A7.962 7.962 0 0 1 15 16.22V15c0-.55-.45-1-1-1s-1 .45-1 1v4c0 .55.45 1 1 1h4c.55 0 1-.45 1-1s-.45-1-1-1h-2.06c2.45-1.82 4.06-4.71 4.06-8zm0-7a1.003 1.003 0 0 0-1.71-.71L12 8.59l-2.29-2.3a1.003 1.003 0 0 0-1.42 1.42l3 3c.18.18.43.29.71.29s.53-.11.71-.29l7-7c.18-.18.29-.43.29-.71z"],
        "badge": ["M16.94 5.73c-.19-1.41.62-2.52 1.38-3.59L17.03.65C14.89 1.76 11.88 1.48 10 0 8.12 1.48 5.11 1.76 2.97.65L1.68 2.14c.76 1.07 1.57 2.18 1.38 3.59C2.68 8.59 0 10.94 1.4 14.08c.56 1.43 1.81 2.37 3.4 2.75 1.95.46 4.4.91 5.2 3.17.8-2.26 3.25-2.71 5.2-3.17 1.6-.38 2.84-1.32 3.4-2.75 1.4-3.14-1.28-5.49-1.66-8.35z"],
        "ban-circle": ["M10 0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zm5 11H5c-.55 0-1-.45-1-1s.45-1 1-1h10c.55 0 1 .45 1 1s-.45 1-1 1z"],
        "bank-account": ["M19.2 8.02l-.78-.18C18.03 6.4 17.2 5.08 16.08 4l.5-2.28c.11-.42-.22-.78-.61-.72-1.06.12-2 .54-2.67 1.26-1.06-.42-2.34-.66-3.56-.66-3.12 0-5.79 1.5-7.4 3.72-.23-.05-.45-.11-.67-.11C.72 5.21 0 5.98 0 7c0 .72.39 1.32.95 1.62-.06.42-.12.9-.12 1.38 0 2.16.89 4.08 2.28 5.58l-.33 2.04c-.11.72.45 1.38 1.12 1.38h.72c.56 0 1-.42 1.11-1.02l.06-.48c1.17.54 2.5.9 3.95.9 1.39 0 2.78-.3 3.95-.9l.06.48c.11.6.56 1.02 1.11 1.02h.72c.67 0 1.22-.66 1.11-1.38l-.33-1.98c.78-.78 1.34-1.74 1.73-2.76l1-.24c.5-.12.89-.6.89-1.2V9.22c.11-.6-.28-1.08-.78-1.2zM15 10c-.6 0-1-.7-1-1.5S14.4 7 15 7s1 .7 1 1.5-.4 1.5-1 1.5zM7.55 5.83a.99.99 0 0 1-1.38-.28.99.99 0 0 1 .28-1.38c2.34-1.56 4.77-1.56 7.11 0 .46.31.58.93.28 1.39-.31.46-.93.58-1.39.28-1.67-1.12-3.23-1.12-4.9-.01z"],
        "barcode": ["M6 16.98h2v-14H6v14zm3 0h1v-14H9v14zm-6 0h2v-14H3v14zm-3 0h2v-14H0v14zm16 0h2v-14h-2v14zm-4 0h1v-14h-1v14zm7-14v14h1v-14h-1zm-5 14h1v-14h-1v14z"],
        "blank": [],
        "blocked-person": ["M11.55 15.92c-1.48-.65-1.28-1.05-1.33-1.59-.01-.07-.01-.15-.01-.23.51-.45.92-1.07 1.19-1.78 0 0 .01-.04.02-.05.06-.15.11-.32.15-.48.34-.07.54-.44.61-.78.06-.11.14-.35.17-.62C10.33 9.42 8.92 7.38 8.92 5c0-.3.05-.58.09-.87-.33-.08-.67-.13-.99-.13-.79 0-1.68.25-2.31.73-.61.47-1.07 1.13-1.29 1.86-.05.16-.09.33-.11.5-.12.6-.17 1.51-.17 2.14v.08c-.24.09-.45.32-.49.83-.04.39.12.73.2.87.08.35.28.72.63.78.04.17.09.33.15.48 0 .01.01.02.01.03l.01.01c.27.72.7 1.35 1.22 1.8 0 .07-.01.14-.01.21-.05.54.1.94-1.38 1.59C3 16.56.77 17.26.32 18.31-.15 19.38.04 20 .04 20h15.95s.18-.62-.27-1.67c-.46-1.06-2.69-1.75-4.17-2.41zM14.97 0c-2.78 0-5.03 2.24-5.03 5s2.25 5 5.03 5S20 7.76 20 5s-2.25-5-5.03-5zm-3.03 5c0-1.66 1.35-3 3.02-3 .47 0 .9.11 1.29.3l-4.01 3.99c-.18-.4-.3-.83-.3-1.29zm3.03 3c-.47 0-.9-.11-1.29-.3l4.01-3.99c.19.39.3.82.3 1.29 0 1.66-1.36 3-3.02 3z"],
        "bold": ["M14.3 9c.4-.8.7-1.6.7-2.5C15 4 13 2 10.5 2H5c-.6 0-1 .4-1 1v13c0 .6.4 1 1 1h6.5c2.5 0 4.5-2 4.5-4.5 0-1.4-.7-2.7-1.7-3.5zM7 5h3.5c.8 0 1.5.7 1.5 1.5S11.3 8 10.5 8H7V5zm4.5 9H7v-3h4.5c.8 0 1.5.7 1.5 1.5s-.7 1.5-1.5 1.5z"],
        "book": ["M3 1v18c0 .55.45 1 1 1h2V0H4c-.55 0-1 .45-1 1zm14-1h-2v8l-2-2-2 2V0H7v20h10c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1z"],
        "bookmark": ["M6 0c-.55 0-1 .45-1 1v18c0 .55.32.68.71.29L9.3 15.7a.996.996 0 0 1 1.41 0l3.59 3.59c.38.39.7.26.7-.29v-8-4.5V1c0-.55-.45-1-1-1H6z"],
        "box": ["M19.89 6.56l-2.99-6h-.01C16.72.23 16.39 0 16 0H4c-.39 0-.72.23-.89.56H3.1l-3 6h.01C.05 6.69 0 6.84 0 7v12c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V7c0-.16-.05-.31-.11-.44zM11 2h4.38l2 4H11V2zM4.62 2H9v4H2.62l2-4zM18 18H2V8h16v10zM8 12h4c.55 0 1-.45 1-1s-.45-1-1-1H8c-.55 0-1 .45-1 1s.45 1 1 1z"],
        "briefcase": ["M19 5h-4V2c0-.55-.45-1-1-1H6c-.55 0-1 .45-1 1v3H1c-.55 0-1 .45-1 1v5h4v-1h2v1h8v-1h2v1h4V6c0-.55-.45-1-1-1zm-6 0H7V3h6v2zm3 8h-2v-1H6v1H4v-1H0v6c0 .55.45 1 1 1h18c.55 0 1-.45 1-1v-6h-4v1z"],
        "build": ["M19.43 16.67L9.31 7.81l1.47-1.56c.41-.44-.15-.8.15-1.6 1.08-2.76 4.19-2.99 4.19-2.99s.45-.47.87-.92C11.98-1 9.26.7 8.04 1.8L3.83 6.25l-.86.92c-.48.51-.48 1.33 0 1.84l-.87.92c-.48-.51-1.26-.51-1.74 0s-.48 1.33 0 1.84l1.74 1.84c.48.51 1.26.51 1.74 0s.48-1.33 0-1.84l.87-.92c.48.51 1.26.51 1.74 0l1.41-1.49 8.81 10.07c.76.76 2 .76 2.76 0 .76-.76.76-2 0-2.76z"],
        "calculator": ["M16 0H4c-.55 0-1 .45-1 1v18c0 .55.45 1 1 1h12c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zM7 18H5v-2h2v2zm0-4H5v-2h2v2zm0-4H5V8h2v2zm4 8H9v-2h2v2zm0-4H9v-2h2v2zm0-4H9V8h2v2zm4 8h-2v-6h2v6zm0-8h-2V8h2v2zm0-4H5V2h10v4z"],
        "calendar": ["M15 5c.6 0 1-.4 1-1V2c0-.5-.4-1-1-1s-1 .5-1 1v2c0 .6.4 1 1 1zM5 5c.6 0 1-.4 1-1V2c0-.5-.4-1-1-1s-1 .5-1 1v2c0 .6.4 1 1 1zm13-2h-1v1c0 1.1-.9 2-2 2s-2-.9-2-2V3H7v1c0 1.1-.9 2-2 2s-2-.9-2-2V3H2c-.5 0-1 .5-1 1v14c0 .5.5 1 1 1h16c.5 0 1-.5 1-1V4c0-.5-.5-1-1-1zM7 17H3v-4h4v4zm0-5H3V8h4v4zm5 5H8v-4h4v4zm0-5H8V8h4v4zm5 5h-4v-4h4v4zm0-5h-4V8h4v4z"],
        "camera": ["M10 8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3zm9-4h-3.59L13.7 2.29A.956.956 0 0 0 13 2H7c-.28 0-.53.11-.71.29L4.59 4H1c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h4.11c1.26 1.24 2.99 2 4.89 2s3.63-.76 4.89-2H19c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1zM4 8H2V6h2v2zm6 8c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z"],
        "caret-down": ["M16 7c0-.55-.45-1-1-1H5c-.55 0-1 .45-1 1 0 .24.1.46.24.63l-.01.01 5 6 .01-.01c.19.22.45.37.76.37s.57-.15.76-.37l.01.01 5-6-.01-.01c.14-.17.24-.39.24-.63z"],
        "caret-left": ["M13 4c-.24 0-.46.1-.63.24l-.01-.01-6 5 .01.01c-.22.19-.37.45-.37.76s.15.57.37.76l-.01.01 6 5 .01-.01c.17.14.39.24.63.24.55 0 1-.45 1-1V5c0-.55-.45-1-1-1z"],
        "caret-right": ["M14 10c0-.31-.15-.57-.37-.76l.01-.01-6-5-.01.01C7.46 4.1 7.24 4 7 4c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1 .24 0 .46-.1.63-.24l.01.01 6-5-.01-.01c.22-.19.37-.45.37-.76z"],
        "caret-up": ["M15.76 12.37l.01-.01-5-6-.01.01C10.57 6.15 10.31 6 10 6s-.57.15-.76.37l-.01-.01-5 6 .01.01c-.14.17-.24.39-.24.63 0 .55.45 1 1 1h10c.55 0 1-.45 1-1 0-.24-.1-.46-.24-.63z"],
        "cell-tower": ["M11.5 8.32c.31-.35.51-.81.51-1.32 0-1.1-.9-2-2-2s-2 .9-2 2c0 .51.2.97.51 1.32L5.06 18.69c-.17.52.11 1.09.63 1.26s1.09-.11 1.26-.63L8.39 15h3.23l1.44 4.32c.17.52.74.81 1.26.63s.81-.74.63-1.26L11.5 8.32zM10.95 13H9.06l.95-2.84.94 2.84zM5.31 10.73a.996.996 0 1 0 1.37-1.45c-1.4-1.33-1.28-3.35-.01-4.54.4-.38.43-1.01.05-1.41-.36-.41-1-.43-1.4-.06-2.09 1.95-2.28 5.3-.01 7.46z", "M4.6 12.2C3 11.1 2 9 2 7c0-2.1.9-3.9 2.6-5.2.5-.3.5-1 .2-1.4-.3-.5-1-.5-1.4-.2C1.2 1.9-.1 4.2 0 7c.1 2.7 1.4 5.3 3.4 6.8.2.1.4.2.6.2.3 0 .6-.1.8-.4.4-.5.3-1.1-.2-1.4zM13.27 10.69c.38.4 1.01.42 1.41.04 2.27-2.16 2.08-5.51-.01-7.46a.996.996 0 1 0-1.36 1.46c1.28 1.19 1.39 3.21-.01 4.54-.39.39-.41 1.02-.03 1.42z", "M16.6.2c-.4-.3-1.1-.3-1.4.2-.3.4-.3 1.1.2 1.4C17.1 3.1 18 4.9 18 7c0 2-1 4.1-2.6 5.2-.5.3-.6.9-.2 1.4.2.3.5.4.8.4.2 0 .4-.1.6-.2C18.7 12.3 20 9.7 20 7c.09-2.8-1.2-5.1-3.4-6.8z"],
        "changes": ["M18 16H2c-1.1 0-2 .9-2 2s.9 2 2 2h16c1.1 0 2-.9 2-2s-.9-2-2-2zM3 5c.28 0 .53-.11.71-.29L5 3.41V13c0 .55.45 1 1 1s1-.45 1-1V3.41L8.29 4.7c.18.19.43.3.71.3a1.003 1.003 0 0 0 .71-1.71l-3-3C6.53.11 6.28 0 6 0s-.53.11-.71.29l-3 3A1.003 1.003 0 0 0 3 5zm7.29 5.71l3 3c.18.18.43.29.71.29s.53-.11.71-.29l3-3a1.003 1.003 0 0 0-1.42-1.42L15 10.59V1c0-.55-.45-1-1-1s-1 .45-1 1v9.59L11.71 9.3A.965.965 0 0 0 11 9a1.003 1.003 0 0 0-.71 1.71z"],
        "chart": ["M7 11v8c0 .55.45 1 1 1h4c.55 0 1-.45 1-1v-8l-2 2-4-2zm-7 8c0 .55.45 1 1 1h4c.55 0 1-.45 1-1v-8l-6 3v5zM17 7l-3 3v9c0 .55.45 1 1 1h4c.55 0 1-.45 1-1V8.74c-.26.15-.58.26-1 .26-1.92 0-2-2-2-2zm2-6h-4c-.55 0-1 .45-1 1s.45 1 1 1h1.59L10.8 8.78 7.45 7.11v.01C7.31 7.05 7.16 7 7 7s-.31.05-.44.11V7.1l-6 3v.01c-.33.17-.56.5-.56.89 0 .55.45 1 1 1 .16 0 .31-.05.44-.11v.01L7 9.12l3.55 1.78v-.01c.14.06.29.11.45.11.28 0 .53-.11.71-.29L18 4.41V6c0 .55.45 1 1 1s1-.45 1-1V2c0-.55-.45-1-1-1z"],
        "chat": ["M19 0H7c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h5.59l3.71 3.71c.17.18.42.29.7.29.55 0 1-.45 1-1v-3h1c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zM7 13c-1.1 0-2-.9-2-2V4H1c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h1v3a1.003 1.003 0 0 0 1.71.71L7.41 16H13c.55 0 1-.45 1-1v-.17L12.17 13H7z"],
        "chevron-backward": ["M8.41 10l5.29-5.29c.19-.18.3-.43.3-.71a1.003 1.003 0 0 0-1.71-.71L7 8.59V4c0-.55-.45-1-1-1s-1 .45-1 1v12c0 .55.45 1 1 1s1-.45 1-1v-4.59l5.29 5.29c.18.19.43.3.71.3a1.003 1.003 0 0 0 .71-1.71L8.41 10z"],
        "chevron-down": ["M16 6c-.28 0-.53.11-.71.29L10 11.59l-5.29-5.3a1.003 1.003 0 0 0-1.42 1.42l6 6c.18.18.43.29.71.29s.53-.11.71-.29l6-6A1.003 1.003 0 0 0 16 6z"],
        "chevron-forward": ["M13 3c-.55 0-1 .45-1 1v4.59l-5.29-5.3a1.003 1.003 0 0 0-1.42 1.42l5.3 5.29-5.29 5.29c-.19.18-.3.43-.3.71a1.003 1.003 0 0 0 1.71.71l5.29-5.3V16c0 .55.45 1 1 1s1-.45 1-1V4c0-.55-.45-1-1-1z"],
        "chevron-left": ["M8.41 10l5.29-5.29c.19-.18.3-.43.3-.71a1.003 1.003 0 0 0-1.71-.71l-6 6c-.18.18-.29.43-.29.71 0 .28.11.53.29.71l6 6a1.003 1.003 0 0 0 1.42-1.42L8.41 10z"],
        "chevron-right": ["M13.71 9.29l-6-6a1.003 1.003 0 0 0-1.42 1.42l5.3 5.29-5.29 5.29c-.19.18-.3.43-.3.71a1.003 1.003 0 0 0 1.71.71l6-6c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71z"],
        "chevron-up": ["M16.71 12.29l-6-6C10.53 6.11 10.28 6 10 6s-.53.11-.71.29l-6 6a1.003 1.003 0 0 0 1.42 1.42L10 8.41l5.29 5.29c.18.19.43.3.71.3a1.003 1.003 0 0 0 .71-1.71z"],
        "circle": ["M10 0C4.5 0 0 4.5 0 10s4.5 10 10 10 10-4.5 10-10S15.5 0 10 0zm0 18c-4.4 0-8-3.6-8-8s3.6-8 8-8 8 3.6 8 8-3.6 8-8 8z"],
        "circle-arrow-down": ["M14 10c-.28 0-.53.11-.71.29L11 12.59V5c0-.55-.45-1-1-1s-1 .45-1 1v7.59L6.71 10.3A.965.965 0 0 0 6 10a1.003 1.003 0 0 0-.71 1.71l4 4c.18.18.43.29.71.29s.53-.11.71-.29l4-4A1.003 1.003 0 0 0 14 10zM10 0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"],
        "circle-arrow-left": ["M15 9H7.41L9.7 6.71c.19-.18.3-.43.3-.71a1.003 1.003 0 0 0-1.71-.71l-4 4c-.18.18-.29.43-.29.71 0 .28.11.53.29.71l4 4a1.003 1.003 0 0 0 1.42-1.42L7.41 11H15c.55 0 1-.45 1-1s-.45-1-1-1zm-5-9C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"],
        "circle-arrow-right": ["M15.71 9.29l-4-4a1.003 1.003 0 0 0-1.42 1.42L12.59 9H5c-.55 0-1 .45-1 1s.45 1 1 1h7.59l-2.29 2.29c-.19.18-.3.43-.3.71a1.003 1.003 0 0 0 1.71.71l4-4c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71zM10 0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"],
        "circle-arrow-up": ["M10 0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm.71-13.71C10.53 4.11 10.28 4 10 4s-.53.11-.71.29l-4 4a1.003 1.003 0 0 0 1.42 1.42L9 7.41V15c0 .55.45 1 1 1s1-.45 1-1V7.41l2.29 2.29c.18.19.43.3.71.3a1.003 1.003 0 0 0 .71-1.71l-4-4z"],
        "citation": ["M4 1C1.79 1 0 2.79 0 5s1.79 4 4 4c.1 0 .2-.01.3-.02C3.82 11.32 2.53 13 1 13c-.55 0-1 .45-1 1s.45 1 1 1c3.87 0 7-4.48 7-10 0-2.21-1.79-4-4-4zM16 1c-2.21 0-4 1.79-4 4s1.79 4 4 4c.1 0 .2-.01.3-.02C15.82 11.32 14.53 13 13 13c-.55 0-1 .45-1 1s.45 1 1 1c3.87 0 7-4.48 7-10 0-2.21-1.79-4-4-4z"],
        "clean": ["M7 0L5 5 0 6.998 5 9l2 5 2-5 5-1.995L9 5zM15 10l-1.5 3.496-3.5 1.499 3.5 1.498L15 20l1.5-3.507L20 15l-3.5-1.504z"],
        "clipboard": ["M13 2c0-.55-.45-1-1-1h-.78a1.98 1.98 0 0 0-3.44 0H7c-.55 0-1 .45-1 1v2h7V2z", "M16 2h-2v3H5V2H3c-.55 0-1 .45-1 1v16c0 .55.45 1 1 1h13c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1z"],
        "cloud": ["M15 7c-.12 0-.24.03-.36.04C13.83 4.69 11.62 3 9 3 5.69 3 3 5.69 3 9c0 .05.01.09.01.14A3.98 3.98 0 0 0 0 13c0 2.21 1.79 4 4 4h11c2.76 0 5-2.24 5-5s-2.24-5-5-5z"],
        "cloud-download": ["M15 4c-.12 0-.24.03-.36.04C13.83 1.69 11.62 0 9 0 5.69 0 3 2.69 3 6c0 .05.01.09.01.14A3.98 3.98 0 0 0 0 10c0 2.21 1.79 4 4 4h.78c.55-.61 1.34-1 2.22-1v-2c0-1.66 1.34-3 3-3s3 1.34 3 3v2c.88 0 1.66.38 2.2.98C17.87 13.87 20 11.69 20 9c0-2.76-2.24-5-5-5zm-2 11c-.28 0-.53.11-.71.29L11 16.59V11c0-.55-.45-1-1-1s-1 .45-1 1v5.59L7.71 15.3A.965.965 0 0 0 7 15a1.003 1.003 0 0 0-.71 1.71l3 3c.18.18.43.29.71.29s.53-.11.71-.29l3-3A1.003 1.003 0 0 0 13 15z"],
        "cloud-upload": ["M10.71 10.29c-.18-.18-.43-.29-.71-.29s-.53.11-.71.29l-3 3a1.003 1.003 0 0 0 1.42 1.42L9 13.41V19c0 .55.45 1 1 1s1-.45 1-1v-5.59l1.29 1.29c.18.19.43.3.71.3a1.003 1.003 0 0 0 .71-1.71l-3-3zM15 4c-.12 0-.24.03-.36.04C13.83 1.69 11.62 0 9 0 5.69 0 3 2.69 3 6c0 .05.01.09.01.14A3.98 3.98 0 0 0 0 10c0 2.21 1.79 4 4 4 0-.83.34-1.58.88-2.12l3-3a2.993 2.993 0 0 1 4.24 0l3 3-.01.01c.52.52.85 1.23.87 2.02C18.28 13.44 20 11.42 20 9c0-2.76-2.24-5-5-5z"],
        "code": ["M6 6a1.003 1.003 0 0 0-1.71-.71l-4 4C.11 9.47 0 9.72 0 10c0 .28.11.53.29.71l4 4a1.003 1.003 0 0 0 1.42-1.42L2.41 10 5.7 6.71c.19-.18.3-.43.3-.71zm6-4c-.46 0-.83.31-.95.73l-4 14c-.02.09-.05.17-.05.27 0 .55.45 1 1 1 .46 0 .83-.31.95-.73l4-14c.02-.09.05-.17.05-.27 0-.55-.45-1-1-1zm7.71 7.29l-4-4a1.003 1.003 0 0 0-1.42 1.42l3.3 3.29-3.29 3.29c-.19.18-.3.43-.3.71a1.003 1.003 0 0 0 1.71.71l4-4c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71z"],
        "code-block": ["M19 5h-2V3c0-.55-.45-1-1-1h-4c-.55 0-1 .45-1 1v2H9V3c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1v2H1c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zM8.71 15.29a1.003 1.003 0 0 1-1.42 1.42l-4-4C3.11 12.53 3 12.28 3 12s.11-.53.29-.71l4-4a1.003 1.003 0 0 1 1.42 1.42L5.41 12l3.3 3.29zm8-2.58l-4 4a1.003 1.003 0 0 1-1.42-1.42l3.3-3.29-3.29-3.29A.965.965 0 0 1 11 8a1.003 1.003 0 0 1 1.71-.71l4 4c.18.18.29.43.29.71s-.11.53-.29.71z"],
        "cog": ["M19 8h-2.31c-.14-.46-.33-.89-.56-1.3l1.7-1.7a.996.996 0 0 0 0-1.41l-1.41-1.41a.996.996 0 0 0-1.41 0l-1.7 1.7c-.41-.22-.84-.41-1.3-.55V1c0-.55-.45-1-1-1H9c-.55 0-1 .45-1 1v2.33c-.48.14-.94.34-1.37.58L5 2.28a.972.972 0 0 0-1.36 0L2.28 3.64c-.37.38-.37.99 0 1.36L3.9 6.62c-.24.44-.44.89-.59 1.38H1c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h2.31c.14.46.33.89.56 1.3L2.17 15a.996.996 0 0 0 0 1.41l1.41 1.41c.39.39 1.02.39 1.41 0l1.7-1.7c.41.22.84.41 1.3.55V19c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-2.33c.48-.14.94-.35 1.37-.59L15 17.72c.37.37.98.37 1.36 0l1.36-1.36c.37-.37.37-.98 0-1.36l-1.62-1.62c.24-.43.45-.89.6-1.38H19c.55 0 1-.45 1-1V9c0-.55-.45-1-1-1zm-9 6c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4z"],
        "collapse-all": ["M9.29 8.71c.18.18.43.29.71.29s.53-.11.71-.29l6-6a1.003 1.003 0 0 0-1.42-1.42L10 6.59l-5.29-5.3a1.003 1.003 0 0 0-1.42 1.42l6 6zm1.42 2.58c-.18-.18-.43-.29-.71-.29s-.53.11-.71.29l-6 6a1.003 1.003 0 0 0 1.42 1.42l5.29-5.3 5.29 5.29c.18.19.43.3.71.3a1.003 1.003 0 0 0 .71-1.71l-6-6z"],
        "column-layout": ["M19 1H1c-.55 0-1 .45-1 1v16c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1zM5 17H2V3h3v14zm4 0H6V3h3v14zm9 0h-8V3h8v14z"],
        "comment": ["M19 1H1c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3v4a1.003 1.003 0 0 0 1.71.71l4.7-4.71H19c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1zM4 10c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zm6 0c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zm6 0c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z"],
        "comparison": ["M6 8H1c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h5c.55 0 1-.45 1-1V9c0-.55-.45-1-1-1zm13-6h-5c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h5c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm0 3h-5V3h5v2zM6 14H1c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h5c.55 0 1-.45 1-1v-2c0-.55-.45-1-1-1zM6 2H1c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h5c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm4-2c-.55 0-1 .45-1 1v18c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1zm9 14h-5c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h5c.55 0 1-.45 1-1v-2c0-.55-.45-1-1-1zm0 3h-5v-2h5v2zm0-9h-5c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h5c.55 0 1-.45 1-1V9c0-.55-.45-1-1-1zm0 3h-5V9h5v2z"],
        "compass": ["M15 10c0 .14-.03.28-.09.4l-3.99 8.98-.01.02a.991.991 0 0 1-1.82 0l-.01-.02-3.99-8.98c-.06-.12-.09-.26-.09-.4s.03-.28.09-.4L9.08.62 9.09.6a.991.991 0 0 1 1.82 0l.01.02 3.99 8.98c.06.12.09.26.09.4zm-5-6.54L7.09 10h5.81L10 3.46z"],
        "compressed": ["M19.89 6.56l-2.99-6h-.01C16.72.23 16.39 0 16 0H4c-.39 0-.72.23-.89.56H3.1l-3 6h.01C.05 6.69 0 6.84 0 7v12c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V7c0-.16-.05-.31-.11-.44zM11 2h4.38l2 4H11V2zM4.62 2H9v4H2.62l2-4zM18 18H2V8h7v4.59L6.71 10.3A.965.965 0 0 0 6 10a1.003 1.003 0 0 0-.71 1.71l4 4c.18.18.43.29.71.29s.53-.11.71-.29l4-4a1.003 1.003 0 0 0-1.42-1.42L11 12.59V8h7v10z"],
        "confirm": ["M9.71 5.29a1.003 1.003 0 0 0-1.42 1.42l3 3c.18.18.43.29.71.29s.53-.11.71-.29l7-7a1.003 1.003 0 0 0-1.42-1.42L12 7.59l-2.29-2.3zm7.93 2.32c.23.75.36 1.56.36 2.39 0 4.42-3.58 8-8 8s-8-3.58-8-8a7.998 7.998 0 0 1 11.8-7.04l1.46-1.46C13.73.56 11.93 0 10 0 4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10c0-1.4-.29-2.73-.81-3.95l-1.55 1.56z"],
        "console": ["M19 19H1c-.55 0-1-.45-1-1V2c0-.55.45-1 1-1h18c.55 0 1 .45 1 1v16c0 .55-.45 1-1 1zM18 6H2v11h16V6zM4 8c.28 0 .53.11.71.29l2 2c.18.18.29.43.29.71s-.11.53-.29.71l-2 2a1.003 1.003 0 0 1-1.42-1.42L4.59 11l-1.3-1.29A1.003 1.003 0 0 1 4 8zm5 4h3c.55 0 1 .45 1 1s-.45 1-1 1H9c-.55 0-1-.45-1-1s.45-1 1-1z"],
        "contrast": ["M19 8h-1.26c-.19-.73-.48-1.42-.85-2.06l.94-.94a.996.996 0 0 0 0-1.41l-1.41-1.41a.996.996 0 0 0-1.41 0l-.94.94c-.65-.38-1.34-.67-2.07-.86V1c0-.55-.45-1-1-1H9c-.55 0-1 .45-1 1v1.26c-.76.2-1.47.5-2.13.89L5 2.28a.972.972 0 0 0-1.36 0L2.28 3.64c-.37.38-.37.98 0 1.36l.87.87c-.39.66-.69 1.37-.89 2.13H1c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h1.26c.19.73.48 1.42.85 2.06l-.94.94a.996.996 0 0 0 0 1.41l1.41 1.41c.39.39 1.02.39 1.41 0l.94-.94c.64.38 1.33.66 2.06.85V19c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-1.26c.76-.2 1.47-.5 2.13-.89l.88.87c.37.37.98.37 1.36 0l1.36-1.36c.37-.38.37-.98 0-1.36l-.87-.87c.4-.65.7-1.37.89-2.13H19c.55 0 1-.45 1-1V9c0-.55-.45-1-1-1zm-9 7c-2.76 0-5-2.24-5-5s2.24-5 5-5v10z"],
        "control": ["M17 10h-7v7h7v-7zm0-7h-7v6h7V3zM9 3H3v14h6V3zm10-3H1C.45 0 0 .45 0 1v18c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 18H2V2h16v16z"],
        "credit-card": ["M19 3H1c-.55 0-1 .45-1 1v2h20V4c0-.55-.45-1-1-1zM0 16c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V8H0v8zm6.5-2h7c.28 0 .5.22.5.5s-.22.5-.5.5h-7c-.28 0-.5-.22-.5-.5s.22-.5.5-.5zm-4 0h2c.28 0 .5.22.5.5s-.22.5-.5.5h-2c-.28 0-.5-.22-.5-.5s.22-.5.5-.5z"],
        "cross": ["M11.41 10l4.29-4.29c.19-.18.3-.43.3-.71a1.003 1.003 0 0 0-1.71-.71L10 8.59l-4.29-4.3a1.003 1.003 0 0 0-1.42 1.42L8.59 10 4.3 14.29c-.19.18-.3.43-.3.71a1.003 1.003 0 0 0 1.71.71l4.29-4.3 4.29 4.29c.18.19.43.3.71.3a1.003 1.003 0 0 0 .71-1.71L11.41 10z"],
        "crown": ["M2 8l4 2 4-5 4 5 4-2-1 7H3L2 8zm8-6a1 1 0 1 1 0 2 1 1 0 0 1 0-2zM1 5a1 1 0 1 1 0 2 1 1 0 0 1 0-2zm18 0a1 1 0 1 1 0 2 1 1 0 0 1 0-2zM3 16h14v2H3v-2z"],
        "cube": ["M1.953 4.481l7.41-4.02c.394-.215.88-.215 1.275 0l7.409 4.02L10 9.22 1.953 4.48zm-.817.68L9.5 10.085v9.281a1.316 1.316 0 0 1-.138-.064l-7.714-4.186A1.211 1.211 0 0 1 1 14.057v-8.35c0-.193.048-.38.136-.547zm17.728 0c.088.166.136.353.136.546v8.35c0 .438-.247.842-.648 1.06l-7.714 4.186c-.045.024-.091.046-.138.064v-9.281l8.364-4.926z"],
        "cube-add": ["M17 3h2a1 1 0 0 1 0 2h-2v2a1 1 0 0 1-2 0V5h-2a1 1 0 0 1 0-2h2V1a1 1 0 0 1 2 0v2zm-3.969 4.435L10 9.22 1.953 4.48l7.41-4.02c.394-.215.88-.215 1.275 0l1.33.721A3.001 3.001 0 0 0 13 7c0 .148.01.293.031.435zm.319.972A3 3 0 0 0 19 7v7.057c0 .438-.247.842-.648 1.06l-7.714 4.186c-.045.024-.091.046-.138.064v-9.281l2.85-1.679zM1.136 5.16L9.5 10.086v9.281a1.316 1.316 0 0 1-.138-.064l-7.714-4.186A1.211 1.211 0 0 1 1 14.057v-8.35c0-.193.048-.38.136-.547z"],
        "cube-remove": ["M11.968 1.182A3.001 3.001 0 0 0 13 7h.77L10 9.22 1.953 4.48l7.41-4.02c.394-.215.88-.215 1.275 0l1.33.721zM19 7v7.057c0 .438-.247.842-.648 1.06l-7.714 4.186c-.045.024-.091.046-.138.064v-9.281L15.74 7H19zM1.136 5.16L9.5 10.086v9.281a1.316 1.316 0 0 1-.138-.064l-7.714-4.186A1.211 1.211 0 0 1 1 14.057v-8.35c0-.193.048-.38.136-.547zM13 3h6a1 1 0 0 1 0 2h-6a1 1 0 0 1 0-2z"],
        "curved-range-chart": ["M19 16H3.02l2.14-1.74c2.25 1.7 7.33.46 11.83-2.99l-1.29-1.5c-3.56 2.74-7.31 4.03-8.93 3.19l10.55-8.57-.63-.78-10.59 8.6c-.64-1.64 1.46-4.91 5.09-7.7L9.9 3.01c-4.6 3.54-6.91 8.12-5.41 10.51L2 15.54V3c0-.55-.45-1-1-1s-1 .45-1 1v14a.998.998 0 0 0 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1z"],
        "cut": ["M16 2s.72-1.28 0-2l-5.29 6.25 1.28 1.54L16 2zm.08 10c-.55 0-1.07.12-1.54.32L4.31 0c-.7.72 0 2 0 2l4.45 6.56-3.19 3.77C5.09 12.12 4.56 12 4 12c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4c0-.65-.17-1.26-.45-1.8l2.54-3.67 2.49 3.67c-.27.54-.44 1.15-.44 1.8 0 2.21 1.76 4 3.92 4 2.17 0 3.92-1.79 3.92-4 .02-2.21-1.74-4-3.9-4zM4 18c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zm12.08 0c-1.08 0-1.96-.9-1.96-2s.88-2 1.96-2 1.96.9 1.96 2-.88 2-1.96 2z"],
        "dashboard": ["M6 5c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zM4 9c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm6-4c.55 0 1-.45 1-1s-.45-1-1-1-1 .45-1 1 .45 1 1 1zm0-5C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm6-9c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm-8 5c0 1.1.9 2 2 2s2-.9 2-2c0-.33-2-8-2-8s-2 7.67-2 8zm6-9c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1z"],
        "database": ["M2.01 5.1v5.4c0 1.38 3.58 2.5 8 2.5s8-1.12 8-2.5V5.1c-1.49 1.13-4.51 1.9-8 1.9-3.48 0-6.5-.77-8-1.9zm8 .9c4.42 0 8-1.12 8-2.5s-3.58-2.5-8-2.5-8 1.12-8 2.5S5.6 6 10.01 6zm-8 6.1v5.4c0 1.38 3.58 2.5 8 2.5s8-1.12 8-2.5v-5.4c-1.49 1.13-4.51 1.9-8 1.9-3.48 0-6.5-.77-8-1.9z"],
        "delete": ["M15 6a1.003 1.003 0 0 0-1.71-.71L10 8.59l-3.29-3.3a1.003 1.003 0 0 0-1.42 1.42L8.59 10 5.3 13.29c-.19.18-.3.43-.3.71a1.003 1.003 0 0 0 1.71.71l3.29-3.3 3.29 3.29c.18.19.43.3.71.3a1.003 1.003 0 0 0 .71-1.71L11.41 10l3.29-3.29c.19-.18.3-.43.3-.71zm-5-6C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"],
        "delta": ["M10 0L0 20h20L10 0zM9 6l6 12H3L9 6z"],
        "derive-column": ["M7.1 8.2h-.99c.28-1.11.66-1.92 1.12-2.43.28-.32.56-.48.83-.48.05 0 .1.02.13.05.03.03.05.07.05.12 0 .04-.04.13-.11.25a.64.64 0 0 0-.12.35c0 .15.06.28.18.39.12.11.27.16.45.16.2 0 .36-.07.49-.2s.2-.31.2-.54c0-.26-.1-.47-.3-.63-.19-.16-.51-.24-.95-.24-.68 0-1.3.19-1.85.58-.56.38-1.09 1.02-1.59 1.91-.17.3-.34.5-.49.59-.15.08-.4.13-.74.12l-.23.77h.95l-1.39 5.24c-.23.86-.39 1.39-.47 1.59-.12.29-.3.54-.54.75-.1.08-.21.12-.35.12-.04 0-.07-.01-.1-.03l-.03-.04c0-.02.03-.07.1-.13.07-.07.1-.17.1-.31 0-.15-.05-.28-.16-.38-.11-.1-.27-.15-.47-.15-.25 0-.44.07-.59.2-.15.12-.23.28-.23.46 0 .19.09.36.27.5.19.14.47.21.86.21.61 0 1.16-.15 1.63-.46.48-.31.89-.78 1.25-1.43.35-.64.72-1.68 1.09-3.11l.8-3.03h.96l.24-.77zM19 0h-9c-.55 0-1 .45-1 1v3h2V2h7v16h-7v-2H9v3c0 .55.45 1 1 1h9c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-8.79 13.49c.15.28.32.49.52.61.19.12.44.19.73.19.28 0 .57-.1.86-.3.38-.25.77-.69 1.17-1.31l-.25-.14c-.27.37-.48.6-.61.69-.09.06-.19.09-.31.09-.14 0-.28-.09-.42-.26-.23-.29-.54-1.09-.93-2.4.35-.59.64-.97.87-1.15.17-.13.35-.2.55-.2.07 0 .2.03.39.08s.36.08.5.08c.2 0 .37-.07.5-.2.15-.14.22-.31.22-.52 0-.22-.07-.4-.2-.53s-.33-.2-.58-.2c-.22 0-.43.05-.63.15-.2.1-.45.32-.75.67-.23.25-.56.7-1.01 1.33a6.52 6.52 0 0 0-.91-2.15l-2.39.39-.05.25c.18-.03.33-.05.45-.05.24 0 .43.1.59.3.25.31.59 1.24 1.02 2.8-.34.44-.58.73-.7.87-.21.22-.38.36-.52.43-.1.05-.22.08-.35.08-.1 0-.26-.05-.49-.16a1.01 1.01 0 0 0-.42-.11c-.23 0-.42.07-.57.22-.15.14-.23.33-.23.55 0 .21.07.38.21.51.14.13.33.2.56.2.23 0 .44-.05.64-.14.2-.09.45-.29.75-.59s.72-.78 1.25-1.43c.21.61.39 1.06.54 1.35z"],
        "desktop": ["M19 0H1C.45 0 0 .45 0 1v13c0 .55.45 1 1 1h5.67l-.5 3H5c-.55 0-1 .45-1 1s.45 1 1 1h10c.55 0 1-.45 1-1s-.45-1-1-1h-1.17l-.5-3H19c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 13H2V2h16v11z"],
        "diagram-tree": ["M19 10v5h-2v-4h-6v4H9v-4H3v4H1v-5a1 1 0 0 1 1-1h7V5h2v4h7a1 1 0 0 1 1 1zM1 16h2a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1H1a1 1 0 0 1-1-1v-2a1 1 0 0 1 1-1zm16 0h2a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1v-2a1 1 0 0 1 1-1zm-8 0h2a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1H9a1 1 0 0 1-1-1v-2a1 1 0 0 1 1-1zM9 0h2a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1H9a1 1 0 0 1-1-1V1a1 1 0 0 1 1-1z"],
        "direction-left": ["M20 3.02l-20 7 20 7-5-7z"],
        "direction-right": ["M20 10.02l-20-7 5 7-5 7z"],
        "disable": ["M10 0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zM2 10c0-4.42 3.58-8 8-8 1.85 0 3.55.63 4.9 1.69L3.69 14.9A7.902 7.902 0 0 1 2 10zm8 8c-1.85 0-3.55-.63-4.9-1.69L16.31 5.1A7.902 7.902 0 0 1 18 10c0 4.42-3.58 8-8 8z"],
        "document": ["M11.98 0h-8c-.55 0-1 .45-1 1v18c0 .55.45 1 1 1h13c.55 0 1-.45 1-1V6l-6-6zm4 18h-11V2h6v5h5v11z"],
        "document-open": ["M8 15c0 .55.45 1 1 1s1-.45 1-1v-5c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1s.45 1 1 1h2.59L1.3 16.29c-.19.18-.3.43-.3.71a1.003 1.003 0 0 0 1.71.71L8 12.41V15zm5-15H5c-.55 0-1 .45-1 1v6h2V2h6v5h5v11H6v-.76L4.04 19.2c.1.45.48.8.96.8h13c.55 0 1-.45 1-1V6l-6-6z"],
        "document-share": ["M14.09 10.09c-.31.31-.67.57-1.09.72V18H2V2h6v5h1.18c.15-.42.39-.8.7-1.11v-.01l2.45-2.45c-.42-.29-.78-.65-1.01-1.11L9 0H1C.45 0 0 .45 0 1v18c0 .55.45 1 1 1h13c.55 0 1-.45 1-1V9.24l-.88.88-.03-.03zM19 0h-5c-.55 0-1 .45-1 1s.45 1 1 1h2.59L11.3 7.29c-.19.18-.3.43-.3.71a1.003 1.003 0 0 0 1.71.71L18 3.41V6c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1z"],
        "dollar": ["M15.57 11.19c-.27-.51-.63-.93-1.07-1.26-.44-.33-.95-.6-1.51-.79-.56-.2-1.14-.36-1.72-.5-.6-.14-1.19-.26-1.75-.38-.57-.13-1.07-.27-1.51-.44-.44-.17-.8-.38-1.07-.63s-.41-.59-.41-1c0-.33.09-.6.28-.81.19-.21.42-.36.69-.47.27-.11.57-.18.88-.22.31-.04.58-.06.8-.06.71 0 1.35.14 1.9.41.55.27.91.81 1.06 1.62h3.36c-.09-.84-.32-1.56-.69-2.16-.37-.6-.83-1.08-1.38-1.45-.56-.37-1.18-.64-1.86-.81-.19-.05-.38-.07-.57-.1V1c0-.55-.45-1-1-1H9c-.55 0-1 .45-1 1v1.1c-.22.03-.43.05-.66.1-.73.13-1.39.37-1.98.71-.6.34-1.09.8-1.47 1.35-.39.56-.58 1.25-.58 2.08 0 .76.13 1.41.4 1.93.26.52.62.95 1.06 1.28.44.33.94.6 1.5.79.55.2 1.13.36 1.74.5.58.14 1.16.26 1.72.38s1.07.26 1.51.43c.44.17.8.39 1.09.66.28.27.43.63.45 1.06.02.43-.08.78-.3 1.04-.22.26-.49.47-.83.6-.34.14-.7.23-1.09.28-.39.05-.73.07-1.03.07-.87 0-1.61-.2-2.23-.59-.62-.39-.98-1.08-1.07-2.06H3c.02.9.19 1.68.52 2.34.33.66.78 1.21 1.35 1.65.57.44 1.25.77 2.03.98.35.1.71.16 1.08.21V19c0 .55.45 1 1 1h1c.55 0 1-.45 1-1v-1.13c.25-.04.5-.07.76-.13.77-.18 1.47-.46 2.1-.85.63-.39 1.14-.9 1.54-1.53.4-.63.59-1.39.59-2.29.01-.75-.13-1.37-.4-1.88z"],
        "dot": ["M10 6a4 4 0 1 0 0 8 4 4 0 1 0 0-8z"],
        "double-caret-horizontal": ["M8 4c-.24 0-.46.1-.63.24l-.01-.01-6 5 .01.01c-.22.19-.37.45-.37.76s.15.57.37.76l-.01.01 6 5 .01-.01c.17.14.39.24.63.24.55 0 1-.45 1-1V5c0-.55-.45-1-1-1zm11 6c0-.31-.15-.57-.37-.76l.01-.01-6-5-.01.01C12.46 4.1 12.24 4 12 4c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1 .24 0 .46-.1.63-.24l.01.01 6-5-.01-.01c.22-.19.37-.45.37-.76z"],
        "double-caret-vertical": ["M5 9h10c.55 0 1-.45 1-1 0-.24-.1-.46-.24-.63l.01-.01-5-6-.01.01C10.57 1.15 10.31 1 10 1s-.57.15-.76.37l-.01-.01-5 6 .01.01C4.1 7.54 4 7.76 4 8c0 .55.45 1 1 1zm10 2H5c-.55 0-1 .45-1 1 0 .24.1.46.24.63l-.01.01 5 6 .01-.01c.19.22.45.37.76.37s.57-.15.76-.37l.01.01 5-6-.01-.01c.14-.17.24-.39.24-.63 0-.55-.45-1-1-1z"],
        "double-chevron-down": ["M9.29 10.71c.18.18.43.29.71.29s.53-.11.71-.29l6-6a1.003 1.003 0 0 0-1.42-1.42L10 8.59l-5.29-5.3a1.003 1.003 0 0 0-1.42 1.42l6 6zM16 9c-.28 0-.53.11-.71.29L10 14.59l-5.29-5.3a1.003 1.003 0 0 0-1.42 1.42l6 6c.18.18.43.29.71.29s.53-.11.71-.29l6-6A1.003 1.003 0 0 0 16 9z"],
        "double-chevron-left": ["M5.41 10l5.29-5.29c.19-.18.3-.43.3-.71a1.003 1.003 0 0 0-1.71-.71l-6 6c-.18.18-.29.43-.29.71 0 .28.11.53.29.71l6 6a1.003 1.003 0 0 0 1.42-1.42L5.41 10zm6 0l5.29-5.29c.19-.18.3-.43.3-.71a1.003 1.003 0 0 0-1.71-.71l-6 6c-.18.18-.29.43-.29.71 0 .28.11.53.29.71l6 6a1.003 1.003 0 0 0 1.42-1.42L11.41 10z"],
        "double-chevron-right": ["M11 10c0-.28-.11-.53-.29-.71l-6-6a1.003 1.003 0 0 0-1.42 1.42L8.59 10 3.3 15.29c-.19.18-.3.43-.3.71a1.003 1.003 0 0 0 1.71.71l6-6c.18-.18.29-.43.29-.71zm5.71-.71l-6-6a1.003 1.003 0 0 0-1.42 1.42l5.3 5.29-5.29 5.29c-.19.18-.3.43-.3.71a1.003 1.003 0 0 0 1.71.71l6-6c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71z"],
        "double-chevron-up": ["M4 11c.28 0 .53-.11.71-.29L10 5.41l5.29 5.29c.18.19.43.3.71.3a1.003 1.003 0 0 0 .71-1.71l-6-6A.997.997 0 0 0 10 3c-.28 0-.53.11-.71.29l-6 6A1.003 1.003 0 0 0 4 11zm6.71-1.71A.997.997 0 0 0 10 9c-.28 0-.53.11-.71.29l-6 6a1.003 1.003 0 0 0 1.42 1.42l5.29-5.3 5.29 5.29c.18.19.43.3.71.3a1.003 1.003 0 0 0 .71-1.71l-6-6z"],
        "doughnut-chart": ["M16 10c0 3.31-2.69 6-6 6s-6-2.69-6-6 2.69-6 6-6V0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10h-4zm-.09-1h4.04C19.48 4.28 15.72.52 11 .05V4.1A5.98 5.98 0 0 1 15.91 9z"],
        "download": ["M10 0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zm4.71 11.71l-4 4c-.18.18-.43.29-.71.29s-.53-.11-.71-.29l-4-4a1.003 1.003 0 0 1 1.42-1.42L9 12.59V5c0-.55.45-1 1-1s1 .45 1 1v7.59l2.29-2.29c.18-.19.43-.3.71-.3a1.003 1.003 0 0 1 .71 1.71z"],
        "drag-handle-horizontal": ["M7.5 11c-.83 0-1.5.67-1.5 1.5S6.67 14 7.5 14 9 13.33 9 12.5 8.33 11 7.5 11zm-5-5C1.67 6 1 6.67 1 7.5S1.67 9 2.5 9 4 8.33 4 7.5 3.33 6 2.5 6zm0 5c-.83 0-1.5.67-1.5 1.5S1.67 14 2.5 14 4 13.33 4 12.5 3.33 11 2.5 11zm15-2c.83 0 1.5-.67 1.5-1.5S18.33 6 17.5 6 16 6.67 16 7.5 16.67 9 17.5 9zm-5 2c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm5 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm-10-5C6.67 6 6 6.67 6 7.5S6.67 9 7.5 9 9 8.33 9 7.5 8.33 6 7.5 6zm5 0c-.83 0-1.5.67-1.5 1.5S11.67 9 12.5 9 14 8.33 14 7.5 13.33 6 12.5 6z"],
        "drag-handle-vertical": ["M7.5 6C6.67 6 6 6.67 6 7.5S6.67 9 7.5 9 9 8.33 9 7.5 8.33 6 7.5 6zm0 5c-.83 0-1.5.67-1.5 1.5S6.67 14 7.5 14 9 13.33 9 12.5 8.33 11 7.5 11zm0 5c-.83 0-1.5.67-1.5 1.5S6.67 19 7.5 19 9 18.33 9 17.5 8.33 16 7.5 16zm5-12c.83 0 1.5-.67 1.5-1.5S13.33 1 12.5 1 11 1.67 11 2.5 11.67 4 12.5 4zm-5-3C6.67 1 6 1.67 6 2.5S6.67 4 7.5 4 9 3.33 9 2.5 8.33 1 7.5 1zm5 10c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm0 5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm0-10c-.83 0-1.5.67-1.5 1.5S11.67 9 12.5 9 14 8.33 14 7.5 13.33 6 12.5 6z"],
        "draw": ["M17.7 12.7c0-.1 0-.2-.1-.3l-2-7c-.1-.3-.3-.6-.6-.7L1.8 0l-.6.5L7.7 7c.3-.2.6-.3 1-.3 1.1 0 2 .9 2 2s-.9 2-2 2-2-.9-2-2c0-.4.1-.7.3-1L.5 1.2l-.5.6L4.7 15c.1.3.4.5.7.6l7 2c.1 0 .2.1.3.1.3 0 .5-.1.7-.3l4-4c.2-.2.3-.5.3-.7zm1 1c-.3 0-.5.1-.7.3l-4 4c-.2.2-.3.4-.3.7 0 .5.4 1 1 1 .3 0 .5-.1.7-.3l4-4c.2-.2.3-.4.3-.7 0-.6-.5-1-1-1z"],
        "drive-time": ["M20.01 7.7c0-.63-.5-1.14-1.1-1.14h-1.32l-.95-2.57c-.24-.64-.95-1.31-1.59-1.5 0 0-1.65-.49-5.05-.49s-5.04.49-5.04.49c-.63.19-1.35.86-1.59 1.5l-.95 2.57H1.1C.5 6.56 0 7.07 0 7.7c0 .63.5 1.14 1.1 1.14h.47l-.34.91c-.24.64-.43 1.72-.43 2.4v5.39c0 .8.63 1.45 1.4 1.45.77 0 1.4-.65 1.4-1.45v-.83h12.8v.83c0 .8.63 1.45 1.4 1.45s1.4-.65 1.4-1.45v-5.39c0-.68-.19-1.77-.43-2.4l-.34-.91h.47c.61 0 1.11-.51 1.11-1.14zm-16.47.34l1.12-3.16c.08-.22.32-.39.54-.39h9.6c.22 0 .46.17.54.39l1.12 3.16c.08.21-.04.39-.26.39H3.8c-.22-.01-.34-.18-.26-.39zm.96 4.94c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.68 1.5 1.5c0 .83-.67 1.5-1.5 1.5zm11 0c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5z"],
        "duplicate": ["M15 4H1c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1zm-1 14H2V6h12v12zm5-18H5c-.55 0-1 .45-1 1v2h2V2h12v12h-1v2h2c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1z"],
        "edit": ["M4.59 12.59l2.83 2.83 7.65-7.65-2.83-2.83-7.65 7.65zM2 18l4.41-1.59-2.81-2.79L2 18zM16 2c-.55 0-1.05.22-1.41.59l-1.65 1.65 2.83 2.83 1.65-1.65A2.006 2.006 0 0 0 16 2z"],
        "eject": ["M4 12h12c.55 0 1-.45 1-1 0-.25-.1-.47-.25-.64l.01-.01-6-7-.01.01C10.57 3.14 10.3 3 10 3s-.57.14-.75.36l-.01-.01-6 7 .01.01c-.15.17-.25.39-.25.64 0 .55.45 1 1 1zm12 1H4c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h12c.55 0 1-.45 1-1v-2c0-.55-.45-1-1-1z"],
        "endorsed": ["M19.83 9.38L18.81 7.6V5.62c0-.45-.23-.85-.61-1.08l-1.71-1-1.02-1.76a1.25 1.25 0 0 0-1.08-.61h-2.03l-1.74-1c-.38-.23-.87-.23-1.25 0l-1.74 1H5.65c-.44 0-.85.23-1.08.61L3.58 3.5l-1.8 1.04c-.38.24-.62.64-.62 1.08v2.06L.17 9.4c-.11.19-.17.4-.17.61s.06.42.17.61l.99 1.72v2.06c0 .45.23.85.61 1.08l1.78 1.02.99 1.72c.23.38.63.61 1.08.61h1.99l1.74 1c.19.11.41.17.62.17.21 0 .42-.06.61-.17l1.74-1h2.03c.44 0 .85-.23 1.08-.61l1.02-1.76 1.71-1c.38-.23.61-.64.61-1.08v-1.97l1.02-1.78c.27-.38.27-.85.04-1.25zm-5.08-.71l-5.01 5.01c-.18.18-.43.29-.71.29-.28 0-.53-.11-.71-.29l-3.01-3.01a1.003 1.003 0 0 1 1.42-1.42l2.3 2.3 4.31-4.3a1.003 1.003 0 0 1 1.71.71c0 .28-.12.53-.3.71z"],
        "envelope": ["M0 4.01v11.91l6.27-6.27L0 4.01zm18.91-1.03H1.09L10 10.97l8.91-7.99zm-5.18 6.66L20 15.92V4.01l-6.27 5.63zm-3.23 2.9c-.13.12-.31.19-.5.19s-.37-.07-.5-.19l-2.11-1.89-6.33 6.33h17.88l-6.33-6.33-2.11 1.89z"],
        "eraser": ["M18.71 8.43c.39-.4.39-1.05 0-1.45l-5.53-5.72a.967.967 0 0 0-1.4 0L1.29 12.1c-.39.4-.39 1.05 0 1.45l4.25 4.39 2.13 2.05h9.27c.02 0 .03.01.05.01.55 0 1-.45 1-1s-.45-1-1-1H9.46l.05-.05h.01l.81-.84 8.38-8.68zM7.52 17.94l-4.95-5.12 4.46-4.61 4.95 5.12-4.46 4.61z"],
        "error": ["M10 0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zm1 16H9v-2h2v2zm0-3H9V4h2v9z"],
        "euro": ["M8.89 4.47c.56-.31 1.23-.47 2.03-.47.44 0 .85.07 1.25.22.4.14.76.35 1.07.6.17.14.33.3.47.47l2.32-2.32c-.16-.15-.3-.32-.47-.46-.62-.49-1.33-.87-2.12-1.13-.8-.25-1.64-.38-2.52-.38-1.24 0-2.35.22-3.33.66-.99.44-1.82 1.05-2.49 1.82-.68.78-1.2 1.68-1.56 2.72-.09.26-.13.54-.2.8H2c-.55 0-1 .45-1 1s.45 1 1 1h1.04c-.01.2-.04.38-.04.58 0 .15.03.28.03.42H2c-.55 0-1 .45-1 1s.45 1 1 1h1.31c.07.3.13.6.23.89.36 1.02.88 1.92 1.56 2.67.68.76 1.51 1.35 2.49 1.79.98.43 2.09.65 3.33.65.99 0 1.9-.15 2.73-.46.83-.3 1.55-.74 2.17-1.32.03-.03.05-.06.08-.09l-2.41-2.15c-.01.01-.02.02-.02.03-.61.67-1.46 1-2.54 1-.8 0-1.47-.16-2.03-.47-.56-.31-1.01-.72-1.35-1.24-.28-.38-.47-.83-.63-1.3H12c.55 0 1-.45 1-1s-.45-1-1-1H6.56c0-.14-.02-.28-.02-.42 0-.2.02-.39.03-.58H13c.55 0 1-.45 1-1s-.45-1-1-1H6.94c.15-.46.34-.9.59-1.28.35-.52.8-.94 1.36-1.25zM18 11.38v0z"],
        "exchange": ["M2.5 8a2.5 2.5 0 0 0 0 5 2.5 2.5 0 0 0 0-5zm10.35 3.15a.495.495 0 1 0-.7.7L13.3 13H5.5c-.28 0-.5.22-.5.5s.22.5.5.5h7.79l-1.15 1.15c-.08.09-.14.21-.14.35a.495.495 0 0 0 .85.35l2-2c.09-.09.15-.21.15-.35s-.06-.26-.15-.35l-2-2zM17.5 8a2.5 2.5 0 0 0 0 5 2.5 2.5 0 0 0 0-5zM7.15 9.85a.495.495 0 1 0 .7-.7L6.71 8h7.79c.28 0 .5-.22.5-.5s-.22-.5-.5-.5H6.71l1.15-1.15c.08-.09.14-.21.14-.35a.495.495 0 0 0-.85-.35l-2 2c-.09.09-.15.21-.15.35s.06.26.15.35l2 2z"],
        "exclude-row": ["M1 3h18c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1zM0 13a1.003 1.003 0 0 0 1.71.71L4 11.41l2.29 2.29c.18.19.43.3.71.3a1.003 1.003 0 0 0 .71-1.71L5.41 10 7.7 7.71c.19-.18.3-.43.3-.71a1.003 1.003 0 0 0-1.71-.71L4 8.59l-2.29-2.3A1.003 1.003 0 0 0 .29 7.71L2.59 10 .3 12.29c-.19.18-.3.43-.3.71zm18-5h-7c-1.1 0-2 .9-2 2s.9 2 2 2h7c1.1 0 2-.9 2-2s-.9-2-2-2zm1 9H1c-.55 0-1 .45-1 1s.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1z"],
        "expand-all": ["M4 9c.28 0 .53-.11.71-.29L10 3.41l5.29 5.29c.18.19.43.3.71.3a1.003 1.003 0 0 0 .71-1.71l-6-6C10.53 1.11 10.28 1 10 1s-.53.11-.71.29l-6 6A1.003 1.003 0 0 0 4 9zm12 2c-.28 0-.53.11-.71.29L10 16.59 4.71 11.3A.965.965 0 0 0 4 11a1.003 1.003 0 0 0-.71 1.71l6 6c.18.18.43.29.71.29s.53-.11.71-.29l6-6A1.003 1.003 0 0 0 16 11z"],
        "export": ["M5 7c.28 0 .53-.11.71-.29L9 3.41V15c0 .55.45 1 1 1s1-.45 1-1V3.41l3.29 3.29c.18.19.43.3.71.3a1.003 1.003 0 0 0 .71-1.71l-5-5C10.53.11 10.28 0 10 0s-.53.11-.71.29l-5 5A1.003 1.003 0 0 0 5 7zm14 7c-.55 0-1 .45-1 1v3H2v-3c0-.55-.45-1-1-1s-1 .45-1 1v4c0 .55.45 1 1 1h18c.55 0 1-.45 1-1v-4c0-.55-.45-1-1-1z"],
        "eye-off": ["M20 9.96v-.03-.01-.02-.02a.794.794 0 0 0-.21-.43c-.55-.69-1.19-1.3-1.85-1.87l-3.93 2.62a3.966 3.966 0 0 1-3.96 3.77c-.47 0-.91-.1-1.33-.24l-2.24 1.49c.52.21 1.05.39 1.6.51 1.21.27 2.43.28 3.64.05 1.11-.21 2.17-.64 3.17-1.18 1.56-.84 2.99-2 4.23-3.3.23-.24.46-.49.67-.75a.87.87 0 0 0 .21-.43v-.02-.02-.01-.03V10v-.04zm-.46-5.14c.27-.18.46-.47.46-.82 0-.55-.45-1-1-1-.21 0-.39.08-.54.18l-.01-.02L15 5.46c-.95-.53-1.95-.96-3.01-1.2a9.158 9.158 0 0 0-3.65-.04c-1.11.21-2.17.64-3.17 1.18-1.56.84-2.99 2-4.23 3.3-.23.24-.46.48-.67.75-.27.34-.27.76 0 1.1.64.79 1.39 1.5 2.16 2.15.26.21.52.41.79.61L.44 15.16l.01.02A1 1 0 0 0 0 16c0 .55.45 1 1 1 .21 0 .39-.08.54-.18l.01.02 18-12-.01-.02zm-8.67 3.4c-.25-.12-.53-.2-.83-.2-1.1 0-1.99.89-1.99 1.99 0 .03.02.06.02.09l-1.78 1.19c-.14-.4-.22-.83-.22-1.28 0-2.19 1.78-3.97 3.98-3.97 1.01 0 1.91.38 2.61 1l-1.79 1.18z"],
        "eye-on": ["M13.3 8.71c.18.18.43.29.71.29s.53-.11.71-.29l4.99-5a1.003 1.003 0 0 0-1.42-1.42L14 6.58l-2.29-2.29a.956.956 0 0 0-.7-.29 1.003 1.003 0 0 0-.71 1.71l3 3zM20 9.96v-.03-.01-.02-.02a.823.823 0 0 0-.21-.44c-.44-.55-.94-1.05-1.46-1.52l-2.2 2.2c-.55.54-1.3.88-2.12.88-.05 0-.09-.01-.14-.01a3.978 3.978 0 0 1-3.86 3.02 4.007 4.007 0 0 1-1.66-7.65A2.97 2.97 0 0 1 8.02 5c0-.28.05-.54.12-.8-1.05.22-2.07.64-3.02 1.15-1.57.85-3 2.02-4.24 3.33-.23.25-.46.5-.67.76-.28.35-.28.77 0 1.12.64.8 1.4 1.52 2.17 2.17 1.66 1.41 3.56 2.58 5.66 3.06 1.21.27 2.43.29 3.65.05 1.11-.21 2.18-.65 3.18-1.19 1.57-.85 3-2.02 4.24-3.33.23-.24.46-.49.67-.76.11-.12.18-.27.21-.44v-.02-.02-.01-.03V10c.01-.01.01-.03.01-.04zm-9.99 2.05c1.03 0 1.87-.79 1.98-1.8l-.09-.09-.01.01-2.1-2.11c-1 .11-1.77.95-1.77 1.98-.01 1.11.89 2.01 1.99 2.01z"],
        "eye-open": ["M10.01 7.984A2.008 2.008 0 0 0 8.012 9.99c0 1.103.9 2.006 1.998 2.006a2.008 2.008 0 0 0 1.998-2.006c0-1.103-.9-2.006-1.998-2.006zM20 9.96v-.03-.01-.02-.02a.827.827 0 0 0-.21-.442c-.64-.802-1.398-1.514-2.168-2.166-1.658-1.404-3.566-2.587-5.664-3.058a8.982 8.982 0 0 0-3.656-.05c-1.11.2-2.178.641-3.177 1.183-1.569.852-2.997 2.016-4.246 3.33-.23.25-.46.49-.67.761-.279.351-.279.773 0 1.124.64.802 1.4 1.514 2.169 2.166 1.658 1.404 3.566 2.577 5.664 3.058 1.209.271 2.438.281 3.656.05 1.11-.21 2.178-.651 3.177-1.193 1.569-.852 2.997-2.016 4.246-3.33.23-.24.46-.49.67-.751.11-.12.179-.271.209-.442v-.02-.02-.01-.03V10v-.04zM10.01 14A4.003 4.003 0 0 1 6.014 9.99a4.003 4.003 0 0 1 3.996-4.011 4.003 4.003 0 0 1 3.996 4.011 4.003 4.003 0 0 1-3.996 4.011z"],
        "fast-backward": ["M18 3c-.23 0-.42.09-.59.21l-.01-.01L11 8V4c0-.55-.45-1-1-1-.23 0-.42.09-.59.21L9.4 3.2l-8 6 .01.01C1.17 9.4 1 9.67 1 10s.17.6.41.79l-.01.01 8 6 .01-.01c.17.12.36.21.59.21.55 0 1-.45 1-1v-4l6.4 4.8.01-.01c.17.12.36.21.59.21.55 0 1-.45 1-1V4c0-.55-.45-1-1-1z"],
        "fast-forward": ["M19 10c0-.33-.17-.6-.41-.79l.01-.01-8-6-.01.01C10.42 3.09 10.23 3 10 3c-.55 0-1 .45-1 1v4L2.6 3.2l-.01.01C2.42 3.09 2.23 3 2 3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1 .23 0 .42-.09.59-.21l.01.01L9 12v4c0 .55.45 1 1 1 .23 0 .42-.09.59-.21l.01.01 8-6-.01-.01c.24-.19.41-.46.41-.79z"],
        "feed": ["M2.5 15a2.5 2.5 0 0 0 0 5 2.5 2.5 0 0 0 0-5zm.5-5c-.55 0-1 .45-1 1s.45 1 1 1c2.76 0 5 2.24 5 5 0 .55.45 1 1 1s1-.45 1-1c0-3.87-3.13-7-7-7zM3 0c-.55 0-1 .45-1 1s.45 1 1 1c8.28 0 15 6.72 15 15 0 .55.45 1 1 1s1-.45 1-1C20 7.61 12.39 0 3 0zm0 5c-.55 0-1 .45-1 1s.45 1 1 1c5.52 0 10 4.48 10 10 0 .55.45 1 1 1s1-.45 1-1C15 10.37 9.63 5 3 5z"],
        "feed-subscribed": ["M2.5 15a2.5 2.5 0 0 0 0 5 2.5 2.5 0 0 0 0-5zM3 2c1.76 0 3.44.31 5.01.87.03-.71.31-1.35.75-1.85C6.96.37 5.03 0 3 0c-.55 0-1 .45-1 1s.45 1 1 1zm10.32 4.67a.99.99 0 0 0 1.4 0l4.98-4.98c.19-.17.3-.42.3-.7 0-.55-.45-1-1-1a.99.99 0 0 0-.7.29l-4.27 4.27-2.28-2.28a.99.99 0 0 0-.7-.29c-.55 0-.99.45-.99 1 0 .28.11.52.29.7l2.97 2.99zM3 10c-.55 0-1 .45-1 1s.45 1 1 1c2.76 0 5 2.24 5 5 0 .55.45 1 1 1s1-.45 1-1c0-3.87-3.13-7-7-7zm13.94-2.69l-.82.82-.02-.02c-.2.2-.42.37-.67.51A14.8 14.8 0 0 1 18 17c0 .55.45 1 1 1s1-.45 1-1c0-3.61-1.14-6.94-3.06-9.69zM3 5c-.55 0-1 .45-1 1s.45 1 1 1c5.52 0 10 4.48 10 10 0 .55.45 1 1 1s1-.45 1-1C15 10.37 9.63 5 3 5z"],
        "film": ["M19 2h-5v3H6V2H1c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1h5v-3h8v3h5c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zM4 17H2v-2h2v2zm0-3H2v-2h2v2zm0-3H2V9h2v2zm0-3H2V6h2v2zm0-3H2V3h2v2zm10 8H6V7h8v6zm4 4h-2v-2h2v2zm0-3h-2v-2h2v2zm0-3h-2V9h2v2zm0-3h-2V6h2v2zm0-3h-2V3h2v2z"],
        "filter": ["M18 1H2a1.003 1.003 0 0 0-.71 1.71L7 8.41V18a1.003 1.003 0 0 0 1.71.71l4-4c.18-.18.29-.43.29-.71V8.41l5.71-5.71c.18-.17.29-.42.29-.7 0-.55-.45-1-1-1z"],
        "filter-keep": ["M15 2c0-.55-.45-1-1-1H1a1.003 1.003 0 0 0-.71 1.71L5 7.41V16a1.003 1.003 0 0 0 1.71.71l3-3c.18-.18.29-.43.29-.71V7.41l4.71-4.71c.18-.17.29-.42.29-.7zm4 11c-.28 0-.53.11-.71.29L15 16.59l-1.29-1.29A.965.965 0 0 0 13 15a1.003 1.003 0 0 0-.71 1.71l2 2c.18.18.43.29.71.29s.53-.11.71-.29l4-4A1.003 1.003 0 0 0 19 13z"],
        "filter-list": ["M15 2c0-.55-.45-1-1-1H1a1.003 1.003 0 0 0-.71 1.71L5 7.41V16a1.003 1.003 0 0 0 1.71.71l3-3c.18-.18.29-.43.29-.71V7.41l4.71-4.71c.18-.17.29-.42.29-.7zm-4 8c0 .55.45 1 1 1h7c.55 0 1-.45 1-1s-.45-1-1-1h-7c-.55 0-1 .45-1 1zm8 7h-7c-.55 0-1 .45-1 1s.45 1 1 1h7c.55 0 1-.45 1-1s-.45-1-1-1zm0-4h-7c-.55 0-1 .45-1 1s.45 1 1 1h7c.55 0 1-.45 1-1s-.45-1-1-1z"],
        "filter-remove": ["M15 2c0-.55-.45-1-1-1H1a1.003 1.003 0 0 0-.71 1.71L5 7.41V16a1.003 1.003 0 0 0 1.71.71l3-3c.18-.18.29-.43.29-.71V7.41l4.71-4.71c.18-.17.29-.42.29-.7zm2.91 13.5l1.79-1.79c.19-.18.3-.43.3-.71a1.003 1.003 0 0 0-1.71-.71l-1.79 1.79-1.79-1.79a1.003 1.003 0 0 0-1.42 1.42l1.79 1.79-1.79 1.79a1.003 1.003 0 0 0 1.42 1.42l1.79-1.79 1.79 1.79a1.003 1.003 0 0 0 1.42-1.42l-1.8-1.79z"],
        "flag": ["M3 3c-.55 0-1 .45-1 1v15c0 .55.45 1 1 1s1-.45 1-1V4c0-.55-.45-1-1-1zm0-3c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm2 4.08v8.28c3.01-2.41 8.67 2.64 13 0V4.08C13.61 7.14 8.01 1 5 4.08z"],
        "flame": ["M11.622 0c0 1.71.49 3.077 1.472 4.103C16.364 6.496 18 9.23 18 12.308c0 3.418-1.962 5.983-5.887 7.692 2.887-3 2.453-4.23-.49-8C8.5 13.5 9 14.5 9.5 16.5c-1.048 0-2 0-2.5-.5 0 .684 1.197 2.5 1.952 4-3.924-1.026-8.123-7.18-6.651-7.692.981-.342 2.126-.171 3.434.513C4.1 6.667 6.062 2.393 11.622 0z"],
        "flash": ["M4.96 6.37a1.003 1.003 0 0 0 1.42-1.42l-2-2a1.07 1.07 0 0 0-.71-.28 1.003 1.003 0 0 0-.71 1.71l2 1.99zm9.37.3c.28 0 .53-.11.71-.29l2-2a1.003 1.003 0 0 0-1.42-1.42l-2 2a1.003 1.003 0 0 0 .71 1.71zM10 5c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1S9 .45 9 1v3c0 .55.45 1 1 1zm-5 5c0-.55-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1h3c.55 0 1-.45 1-1zm14-1h-3c-.55 0-1 .45-1 1s.45 1 1 1h3c.55 0 1-.45 1-1s-.45-1-1-1zm-9-3c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4zm0 6c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zm5.04 1.63a1.003 1.003 0 0 0-1.42 1.42l2 2a1.003 1.003 0 0 0 1.42-1.42l-2-2zM10 15c-.55 0-1 .45-1 1v3c0 .55.45 1 1 1s1-.45 1-1v-3c0-.55-.45-1-1-1zm-4.33-1.67c-.28 0-.53.11-.71.29l-2 2a1.003 1.003 0 0 0 1.42 1.42l2-2a1.003 1.003 0 0 0-.71-1.71z"],
        "floppy-disk": ["M14 1h-3v5h3V1zm5.71 2.29l-3-3A.997.997 0 0 0 16 0h-1v7H5V0H1C.45 0 0 .45 0 1v18c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V4c0-.28-.11-.53-.29-.71zM17 19H3v-8c0-.55.45-1 1-1h12c.55 0 1 .45 1 1v8z"],
        "flow-branch": ["M14.425 7.953a3.98 3.98 0 0 1 .562 2.045 3.98 3.98 0 0 1-.583 2.08L18 15.671V12.98c0-.248.097-.496.29-.689.379-.379 1.047-.38 1.426 0a.94.94 0 0 1 .283.696l-.001 5.049a.957.957 0 0 1-.276.69.955.955 0 0 1-.69.273h-5.059a.971.971 0 0 1-.689-.289 1.026 1.026 0 0 1 0-1.417.972.972 0 0 1 .69-.29h2.702l-3.634-3.573a3.998 3.998 0 0 1-5.924-2.431H1a1 1 0 0 1 0-2h6.12a3.998 3.998 0 0 1 5.96-2.409L16.665 3l-2.694-.001a.972.972 0 0 1-.689-.29 1.035 1.035 0 0 1 0-1.425.94.94 0 0 1 .696-.283l5.05.001c.248 0 .497.083.69.276a.954.954 0 0 1 .272.69l.001 5.052a.971.971 0 0 1-.29.689 1.028 1.028 0 0 1-1.419 0 .972.972 0 0 1-.29-.69V4.323l-3.567 3.63z"],
        "flow-end": ["M12 9.919a3.998 3.998 0 0 1 4-3.92c2.21 0 4 1.79 4 3.997a3.998 3.998 0 0 1-4 3.996 3.998 3.998 0 0 1-4-3.916.967.967 0 0 1-.28.612L7.685 14.71a.958.958 0 0 1-.686.285c-.536 0-.994-.461-.994-.997 0-.273.107-.528.283-.704l2.379-2.302H.98c-.537 0-.976-.46-.976-.996s.44-.992.976-.992h7.676L6.287 6.687a.957.957 0 0 1-.283-.686c0-.536.458-.996.994-.996.274 0 .51.1.686.285l4.027 4.024c.159.158.27.365.29.605z"],
        "flow-linear": ["M5.125 10.997H.976C.439 10.997 0 10.537 0 10c0-.536.44-.993.976-.993h4.148a4.002 4.002 0 0 1 7.752 0h3.776L14.293 6.69a.962.962 0 0 1-.285-.687c0-.537.46-1.001.996-1.001a.96.96 0 0 1 .698.3l4.005 4.015c.176.176.293.41.293.683a.972.972 0 0 1-.283.693L15.702 14.7a.997.997 0 0 1-.698.297c-.537 0-.996-.453-.996-.99 0-.273.107-.517.283-.692l2.371-2.318h-3.787a4.002 4.002 0 0 1-7.75 0z"],
        "flow-review": ["M6.13 9.004A4.005 4.005 0 0 1 10.012 6c1.87 0 3.44 1.278 3.881 3.005h2.768l-2.354-2.317a.97.97 0 0 1-.283-.691c0-.536.462-.995 1-.995.273 0 .517.107.693.283l4 4.041a.97.97 0 0 1 .284.692.956.956 0 0 1-.293.682l-3.991 3.997a.944.944 0 0 1-.694.292c-.537 0-1-.46-1-.997a.97.97 0 0 1 .284-.692l2.345-2.29h-2.765a4.005 4.005 0 0 1-3.875 2.981 4.005 4.005 0 0 1-3.874-2.981H3.349l2.376 2.308a.97.97 0 0 1 .283.691 1 1 0 0 1-.994.983.989.989 0 0 1-.713-.291L.293 10.699A.956.956 0 0 1 0 10.017a.97.97 0 0 1 .283-.692l4.03-4.037a.996.996 0 0 1 .701-.283c.537 0 .994.464.994 1a.97.97 0 0 1-.283.691L3.34 9.004h2.79z"],
        "flow-review-branch": ["M13.04 13.424c-.6.36-1.302.568-2.052.568a4 4 0 0 1-3.868-2.999H3.342l2.372 2.31c.176.176.283.42.283.694 0 .537-.452.998-.988.998a.935.935 0 0 1-.691-.289L.292 10.683A.96.96 0 0 1 0 9.999c0-.274.107-.518.283-.694l4.035-4.04a.973.973 0 0 1 .691-.288c.536 0 .988.47.988 1.007a.975.975 0 0 1-.283.694L3.332 8.984h3.786a4 4 0 0 1 3.87-3.006c.771 0 1.492.22 2.102.599l3.565-3.57-2.538-.003a.974.974 0 0 1-.69-.29c-.38-.38-.38-1.052-.002-1.431A.94.94 0 0 1 14.122 1l4.896.005a.96.96 0 0 1 .69.277c.193.193.27.442.27.69l.005 4.9a.971.971 0 0 1-.289.69 1.023 1.023 0 0 1-1.416 0 .975.975 0 0 1-.29-.691l-.003-2.54-3.554 3.62c.351.596.553 1.291.553 2.034 0 .763-.213 1.477-.583 2.084l3.595 3.595.003-2.54c0-.249.097-.497.29-.69.38-.38 1.05-.381 1.429-.002a.94.94 0 0 1 .282.697l-.005 4.9a.927.927 0 0 1-.277.675.974.974 0 0 1-.69.291L13.974 19a.97.97 0 0 1-.69-.29 1.03 1.03 0 0 1 .002-1.42.974.974 0 0 1 .69-.29l2.696-.003-3.632-3.573z"],
        "flows": ["M17.5 7.93a2.5 2.5 0 0 0-2.45 2h-2.3l-4.01-4-.75.75 3.26 3.25h-6.3a2.5 2.5 0 1 0 0 1h6.3l-3.26 3.25.75.75 4.01-4h2.3a2.5 2.5 0 1 0 2.45-3z"],
        "folder-close": ["M0 17c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V7H0v10zM19 4H9.41l-1.7-1.71A.997.997 0 0 0 7 2H1c-.55 0-1 .45-1 1v3h20V5c0-.55-.45-1-1-1z"],
        "folder-new": ["M12.994 7c0 1.655 1.344 3 2.998 3a3.002 3.002 0 0 0 2.999-3H20v10c0 .55-.45 1-1 1H1.01c-.55 0-1-.45-1-1V7h12.984zM10.76 6H0V3c0-.55.45-1 1-1h3.998c.28 0 .53.11.71.29L7.415 4h2.579c0 .768.29 1.469.765 2zm8.23-3c.55 0 1 .45 1 1s-.45 1-1 1h-1.998v2c0 .55-.45 1-1 1s-1-.45-1-1V5h-1.998c-.55 0-1-.45-1-1s.45-1 1-1h1.999V1c0-.55.45-1 .999-1 .55 0 1 .45 1 1v2h1.999z"],
        "folder-open": ["M20 9c0-.55-.45-1-1-1H5c-.43 0-.79.27-.93.65h-.01l-3 8h.01c-.04.11-.07.23-.07.35 0 .55.45 1 1 1h14c.43 0 .79-.27.93-.65h.01l3-8h-.01c.04-.11.07-.23.07-.35zM3.07 7.63C3.22 7.26 3.58 7 4 7h14V5c0-.55-.45-1-1-1H8.41l-1.7-1.71A.997.997 0 0 0 6 2H1c-.55 0-1 .45-1 1v12.31l3.07-7.68z"],
        "folder-shared": ["M11 4H9.41l-1.7-1.71A.997.997 0 0 0 7 2H1c-.55 0-1 .45-1 1v3h11.78C11.3 5.47 11 4.77 11 4zm8-1h-5c-.55 0-1 .45-1 1s.45 1 1 1h2.59L12.3 9.29c-.19.18-.3.43-.3.71a1.003 1.003 0 0 0 1.71.71L18 6.41V9c0 .55.45 1 1 1s1-.45 1-1V4c0-.55-.45-1-1-1zm-2.46 7.7l-1.42 1.42a2.996 2.996 0 1 1-4.24-4.24l.88-.88H0v10c0 .55.45 1 1 1h18c.55 0 1-.45 1-1v-5.18c-.31.11-.65.18-1 .18-1.02 0-1.92-.52-2.46-1.3z"],
        "folder-shared-open": ["M3.07 7.63C3.22 7.26 3.58 7 4 7h7.76l.54-.54A2.97 2.97 0 0 1 11 4H8.41l-1.7-1.71A.997.997 0 0 0 6 2H1c-.55 0-1 .45-1 1v12.31l3.07-7.68zm13.47 3.07l-1.42 1.42A2.996 2.996 0 0 1 10 10c0-.77.3-1.47.78-2H5c-.43 0-.79.27-.93.65h-.01l-3 8h.01c-.04.11-.07.23-.07.35 0 .55.45 1 1 1h14c.43 0 .79-.27.93-.65h.01l2.01-5.36c-1-.01-1.88-.52-2.41-1.29zM19 3h-5c-.55 0-1 .45-1 1s.45 1 1 1h2.59L12.3 9.29c-.19.18-.3.43-.3.71a1.003 1.003 0 0 0 1.71.71L18 6.41V9c0 .55.45 1 1 1s1-.45 1-1V4c0-.55-.45-1-1-1z"],
        "follower": ["M11.54 15.92c-1.48-.65-1.28-1.05-1.33-1.59-.01-.07-.01-.15-.01-.23.51-.45.92-1.07 1.19-1.78 0 0 .01-.04.02-.05.06-.15.11-.32.15-.48.34-.07.54-.44.61-.78.08-.14.23-.48.2-.87-.05-.5-.25-.73-.47-.82v-.09c0-.63-.06-1.55-.17-2.15-.02-.17-.06-.33-.11-.5a3.69 3.69 0 0 0-1.29-1.86C9.69 4.25 8.8 4 8.01 4c-.8 0-1.69.25-2.32.73-.61.47-1.06 1.13-1.28 1.86-.05.17-.09.33-.11.5-.12.6-.18 1.51-.18 2.14v.08c-.23.09-.44.32-.49.83-.04.39.12.73.2.87.08.35.28.72.63.78.04.17.09.33.15.48 0 .01.01.02.01.03l.01.01c.27.72.7 1.35 1.22 1.8 0 .07-.01.14-.01.21-.05.54.1.94-1.38 1.59-1.48.65-3.71 1.35-4.16 2.4C-.16 19.38.02 20 .02 20h15.95s.18-.62-.27-1.67c-.46-1.06-2.68-1.75-4.16-2.41zm8.15-12.63l-3-3a.956.956 0 0 0-.7-.29 1.003 1.003 0 0 0-.71 1.71L16.58 3H13c-.55 0-1 .45-1 1s.45 1 1 1h3.58l-1.29 1.29c-.19.18-.3.43-.3.71a1.003 1.003 0 0 0 1.71.71l3-3c.18-.18.29-.43.29-.71 0-.28-.11-.53-.3-.71z"],
        "following": ["M11.55 15.92c-1.48-.65-1.28-1.05-1.33-1.59-.01-.07-.01-.15-.01-.23.51-.45.92-1.07 1.19-1.78 0 0 .01-.04.02-.05.06-.15.11-.32.15-.48.34-.07.54-.44.61-.78.08-.14.23-.48.2-.87-.05-.5-.25-.73-.47-.82v-.09c0-.63-.06-1.55-.17-2.15-.02-.17-.06-.33-.11-.5a3.69 3.69 0 0 0-1.29-1.86C9.7 4.25 8.81 4 8.02 4c-.79 0-1.68.25-2.31.73-.61.47-1.07 1.13-1.29 1.86-.05.16-.09.33-.11.5-.12.6-.18 1.51-.18 2.14v.08c-.23.09-.44.32-.48.83-.04.39.12.73.2.87.08.35.28.72.63.78.04.17.09.33.15.48 0 .01.01.02.01.03l.01.01c.27.72.7 1.35 1.22 1.8 0 .07-.01.14-.01.21-.05.54.1.94-1.38 1.59C3 16.56.77 17.26.32 18.31-.15 19.38.04 20 .04 20h15.95s.18-.62-.27-1.67c-.46-1.06-2.69-1.75-4.17-2.41zM19 3h-3.58l1.29-1.29A1.003 1.003 0 0 0 15.29.29l-3 3c-.17.18-.28.43-.28.71 0 .28.11.53.29.71l3 3c.18.18.43.29.7.29a1.003 1.003 0 0 0 .71-1.71L15.42 5H19c.55 0 1-.45 1-1s-.45-1-1-1z"],
        "font": ["M17.93 18.64l-7-18C10.78.27 10.42 0 10 0s-.78.27-.93.64l-7 18c-.04.11-.07.23-.07.36 0 .55.45 1 1 1 .42 0 .78-.27.93-.64L6.41 13h7.19l2.47 6.36c.15.37.51.64.93.64.55 0 1-.45 1-1 0-.13-.03-.25-.07-.36zM7.18 11L10 3.76 12.82 11H7.18z"],
        "fork": ["M16.71 11.29a1.003 1.003 0 0 0-1.42 1.42l1.3 1.29h-2.17l-8-8h10.17L15.3 7.29c-.19.18-.3.43-.3.71a1.003 1.003 0 0 0 1.71.71l3-3c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71l-3-3a1.003 1.003 0 0 0-1.42 1.42L16.59 4H1c-.55 0-1 .45-1 1s.45 1 1 1h2.59l9.71 9.71c.17.18.42.29.7.29h2.59l-1.29 1.29c-.19.18-.3.43-.3.71a1.003 1.003 0 0 0 1.71.71l3-3c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71l-3-3z"],
        "form": ["M2 13v4h4v-4H2zm-1-2h6c.55 0 1 .45 1 1v6c0 .55-.45 1-1 1H1c-.55 0-1-.45-1-1v-6c0-.55.45-1 1-1zm11-7h7c.55 0 1 .45 1 1s-.45 1-1 1h-7c-.55 0-1-.45-1-1s.45-1 1-1zM8 1a1.003 1.003 0 0 1 .71 1.71l-5 6C3.53 8.89 3.28 9 3 9s-.53-.11-.71-.29l-2-2a1.003 1.003 0 0 1 1.42-1.42L3 6.59l4.29-5.3C7.47 1.11 7.72 1 8 1zm4 13h7c.55 0 1 .45 1 1s-.45 1-1 1h-7c-.55 0-1-.45-1-1s.45-1 1-1z"],
        "full-circle": ["M9.96 0a10 10 0 1 0 0 20 10 10 0 1 0 0-20z"],
        "full-stacked-chart": ["M15 16h2c.55 0 1-.45 1-1v-5h-4v5c0 .55.45 1 1 1zM12 2c0-.55-.45-1-1-1H9c-.55 0-1 .45-1 1v4h4V2zm6 4h-4v3h4V6zm0-4c0-.55-.45-1-1-1h-2c-.55 0-1 .45-1 1v3h4V2zm-6 5H8v5h4V7zm-9 9h2c.55 0 1-.45 1-1v-3H2v3c0 .55.45 1 1 1zm6 0h2c.55 0 1-.45 1-1v-2H8v2c0 .55.45 1 1 1zm10 1H1c-.55 0-1 .45-1 1s.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1zM6 2c0-.55-.45-1-1-1H3c-.55 0-1 .45-1 1v3h4V2zm0 4H2v5h4V6z"],
        "fullscreen": ["M3.41 2H6c.55 0 1-.45 1-1s-.45-1-1-1H1C.45 0 0 .45 0 1v5c0 .55.45 1 1 1s1-.45 1-1V3.41L7.29 8.7c.18.19.43.3.71.3a1.003 1.003 0 0 0 .71-1.71L3.41 2zM8 11c-.28 0-.53.11-.71.29L2 16.59V14c0-.55-.45-1-1-1s-1 .45-1 1v5c0 .55.45 1 1 1h5c.55 0 1-.45 1-1s-.45-1-1-1H3.41l5.29-5.29c.19-.18.3-.43.3-.71 0-.55-.45-1-1-1zM19 0h-5c-.55 0-1 .45-1 1s.45 1 1 1h2.59L11.3 7.29c-.19.18-.3.43-.3.71a1.003 1.003 0 0 0 1.71.71L18 3.41V6c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1zm0 13c-.55 0-1 .45-1 1v2.59l-5.29-5.29A.965.965 0 0 0 12 11a1.003 1.003 0 0 0-.71 1.71l5.3 5.29H14c-.55 0-1 .45-1 1s.45 1 1 1h5c.55 0 1-.45 1-1v-5c0-.55-.45-1-1-1z"],
        "function": ["M10.14 5.82H8.73c.4-1.66.94-2.87 1.6-3.64.4-.48.8-.72 1.18-.72.08 0 .14.02.19.07.05.05.07.1.07.18 0 .07-.05.19-.16.37s-.16.36-.16.52c0 .23.08.43.25.59a.9.9 0 0 0 .64.25c.28 0 .51-.1.7-.3.19-.2.28-.47.28-.81 0-.39-.14-.7-.42-.94-.28-.24-.74-.36-1.36-.36-.97 0-1.86.29-2.65.87-.79.56-1.54 1.52-2.26 2.85-.24.46-.48.75-.7.88-.22.13-.57.19-1.06.19l-.32 1.15H5.9l-1.99 7.85c-.33 1.29-.56 2.09-.67 2.39-.17.44-.43.81-.77 1.12a.74.74 0 0 1-.5.19c-.05 0-.1-.02-.14-.05l-.04-.07c0-.03.05-.1.15-.2.1-.1.15-.26.15-.47 0-.23-.08-.42-.23-.57-.16-.15-.38-.23-.67-.23-.35 0-.63.1-.85.29-.21.2-.32.43-.32.7 0 .29.13.54.39.75.25.22.65.33 1.2.33.88 0 1.66-.23 2.33-.69.68-.46 1.27-1.17 1.78-2.14.51-.96 1.03-2.52 1.56-4.66l1.14-4.54H9.8l.34-1.15zm6.8 1.95c.25-.2.51-.29.78-.29.1 0 .29.04.56.11.27.08.51.11.72.11.29 0 .52-.1.72-.3.18-.19.28-.45.28-.77 0-.33-.1-.6-.29-.8-.19-.2-.47-.29-.82-.29-.32 0-.62.08-.9.23-.28.15-.64.49-1.08 1-.33.38-.81 1.05-1.44 2a9.712 9.712 0 0 0-1.31-3.22l-3.4.59-.07.37c.25-.05.47-.08.64-.08.34 0 .62.15.84.44.35.46.84 1.85 1.46 4.19-.49.66-.82 1.09-1 1.3-.3.33-.55.54-.74.64-.15.08-.32.12-.51.12-.14 0-.38-.08-.7-.24-.22-.1-.42-.16-.59-.16-.33 0-.6.11-.82.32-.21.22-.32.49-.32.83 0 .31.1.57.3.77.2.2.47.29.8.29.32 0 .63-.07.92-.21.29-.14.64-.43 1.08-.88.43-.45 1.03-1.16 1.79-2.14.29.93.55 1.61.76 2.03.21.42.46.73.74.91.28.19.62.28 1.04.28.4 0 .81-.15 1.23-.44.55-.38 1.1-1.04 1.68-1.97l-.35-.21c-.39.55-.68.89-.87 1.03-.12.09-.27.13-.44.13-.2 0-.4-.13-.59-.38-.33-.43-.77-1.63-1.33-3.6.47-.86.89-1.44 1.23-1.71z"],
        "gantt-chart": ["M4 7h5c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1zm3 2v1c0 .55.45 1 1 1h6c.55 0 1-.45 1-1V9c0-.55-.45-1-1-1H8c-.55 0-1 .45-1 1zm12 3h-6c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h6c.55 0 1-.45 1-1v-1c0-.55-.45-1-1-1zm0 4H2V3c0-.55-.45-1-1-1s-1 .45-1 1v14c0 .55.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1z"],
        "geolocation": ["M0 8.33l9.17 2.5 2.5 9.17L20 0z"],
        "geosearch": ["M8 18.88c-3.79 0-6.88-3.09-6.88-6.88 0-.61.08-1.22.23-1.79.03.01.06-.01.1-.01h.09v.55c0 .23.21.42.44.42.04 0 .09-.01.12-.02l.9.88c.09.09.23.09.32 0s.09-.23 0-.32l-.86-.9c0-.02.05-.04.05-.07v-.13c0-.18.1-.25.29-.41h.53c.1 0 .19-.01.27-.05.01-.01.02 0 .03-.01.02-.01.03-.02.05-.04.01-.01.02-.01.02-.02l.02-.02 1.13-1.13c-.16-.32-.3-.65-.42-.99h-.64v-.53c0-.01.06.06.06-.1h.38c-.04-.16-.08-.32-.1-.48h-.71c.2-.16.42-.31.64-.45C4.02 6.09 4 5.8 4 5.5c0-.14.01-.28.02-.43C1.62 6.46 0 9.04 0 12c0 4.41 3.59 8 8 8 3.87 0 7.09-2.77 7.82-6.44l-.97-1.1c-.26 3.57-3.23 6.42-6.85 6.42zm-2.12-3.67v-.35h.15c.29 0 .49-.23.49-.53v-.68c0-.01.01-.01 0-.02L4.71 11.8h-.77c-.29 0-.47.24-.47.53v2c0 .29.18.53.47.53h.33v2.02c0 .28.28.51.56.51s.56-.23.56-.51v-1.22h-.01c.29 0 .5-.16.5-.45zm13.83-2.92l-3.68-3.68c.14-.21.27-.42.38-.65.02-.04.04-.07.05-.11.11-.22.2-.45.28-.69v-.01c.07-.24.13-.48.17-.73l.03-.17c.04-.24.06-.49.06-.75C17 2.46 14.54 0 11.5 0S6 2.46 6 5.5 8.46 11 11.5 11c.26 0 .51-.02.76-.06l.17-.03c.25-.04.49-.1.73-.17h.01c.24-.08.47-.17.69-.28.04-.02.07-.04.11-.05.23-.11.44-.24.65-.38l3.68 3.68c.17.18.42.29.7.29a1.003 1.003 0 0 0 .71-1.71zM11.5 9.5c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4zm1.93 5.33v-.65c0-.11-.13-.21-.24-.21-.11 0-.24.09-.24.21v.65c0 .11.13.21.24.21.11 0 .24-.1.24-.21zm-2.41.67h.83c.29 0 .46-.21.46-.5v-1.86l.23-.22c-.34.05-.69.08-1.04.08-.36 0-.7-.03-1.05-.08.03.05.06.1.08.16V15c.01.29.2.5.49.5z"],
        "git-branch": ["M15 2c-1.66 0-3 1.34-3 3 0 1.3.84 2.4 2 2.82V9c0 1.1-.9 2-2 2H8c-.73 0-1.41.21-2 .55V5.82C7.16 5.4 8 4.3 8 3c0-1.66-1.34-3-3-3S2 1.34 2 3c0 1.3.84 2.4 2 2.82v8.37C2.84 14.6 2 15.7 2 17c0 1.66 1.34 3 3 3s3-1.34 3-3c0-1.25-.77-2.3-1.85-2.75C6.45 13.52 7.16 13 8 13h4c2.21 0 4-1.79 4-4V7.82C17.16 7.4 18 6.3 18 5c0-1.66-1.34-3-3-3zM5 2c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm0 16c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zM15 6c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1z"],
        "git-commit": ["M19 9h-4.1a5 5 0 0 0-9.8 0H1c-.55 0-1 .45-1 1s.45 1 1 1h4.1a5 5 0 0 0 9.8 0H19c.55 0 1-.45 1-1s-.45-1-1-1zm-9 4c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3z"],
        "git-merge": ["M15 8c-1.3 0-2.4.84-2.82 2H11c-2.49 0-4.54-1.83-4.92-4.21A2.995 2.995 0 0 0 5 0C3.34 0 2 1.34 2 3c0 1.3.84 2.4 2 2.81v8.37C2.84 14.6 2 15.7 2 17c0 1.66 1.34 3 3 3s3-1.34 3-3c0-1.3-.84-2.4-2-2.82V9.86C7.27 11.17 9.03 12 11 12h1.18A2.996 2.996 0 0 0 18 11c0-1.66-1.34-3-3-3zM5 18c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zM5 4c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm10 8c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1z"],
        "git-new-branch": ["M17 3h-1V2c0-.55-.45-1-1-1s-1 .45-1 1v1h-1c-.55 0-1 .45-1 1s.45 1 1 1h1v1c0 .55.45 1 1 1s1-.45 1-1V5h1c.55 0 1-.45 1-1s-.45-1-1-1zm-3 4.86V9c0 1.1-.9 2-2 2H8c-.73 0-1.41.21-2 .55V5.82C7.16 5.4 8 4.3 8 3c0-1.66-1.34-3-3-3S2 1.34 2 3c0 1.3.84 2.4 2 2.82v8.37C2.84 14.6 2 15.7 2 17c0 1.66 1.34 3 3 3s3-1.34 3-3c0-1.25-.77-2.3-1.85-2.75C6.45 13.52 7.16 13 8 13h4c2.21 0 4-1.79 4-4V7.86c-.32.08-.65.14-1 .14s-.68-.06-1-.14zM5 2c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm0 16c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1z"],
        "git-pull": ["M17 14.18V7c0-2.21-1.79-4-4-4h-2.59l1.29-1.29c.19-.18.3-.43.3-.71a1.003 1.003 0 0 0-1.71-.71l-3 3C7.11 3.47 7 3.72 7 4c0 .28.11.53.29.71l3 3a1.003 1.003 0 0 0 1.42-1.42L10.41 5H13c1.1 0 2 .9 2 2v7.18A2.996 2.996 0 0 0 16 20c1.66 0 3-1.34 3-3 0-1.3-.84-2.4-2-2.82zM16 18c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zM4 1C2.34 1 1 2.34 1 4c0 1.3.84 2.4 2 2.82v7.37C1.84 14.6 1 15.7 1 17c0 1.66 1.34 3 3 3s3-1.34 3-3c0-1.3-.84-2.4-2-2.82V6.82C6.16 6.4 7 5.3 7 4c0-1.66-1.34-3-3-3zm0 17c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zM4 5c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1z"],
        "git-push": ["M15 11c0-.28-.11-.53-.29-.71l-3-3C11.53 7.11 11.28 7 11 7s-.53.11-.71.29l-3 3a1.003 1.003 0 0 0 1.42 1.42l1.29-1.3V19c0 .55.45 1 1 1s1-.45 1-1v-8.59l1.29 1.29c.18.19.43.3.71.3.55 0 1-.45 1-1zm4-11H1C.45 0 0 .45 0 1v16c0 .55.45 1 1 1h7v-2H2v-2h6v-1H4V2h14v11h-4v1h4v2h-4v2h5c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zM5 8h2V6H5v2zm2-5H5v2h2V3z"],
        "git-repo": ["M7 3H5v2h2V3zm0 6H5v2h2V9zm0-3H5v2h2V6zm12-6H1C.45 0 0 .45 0 1v16c0 .55.45 1 1 1h4v2l2-1 2 1v-2h10c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 16H9v-1H5v1H2v-2h16v2zm0-3H4V2h14v11z"],
        "glass": ["M17 6V0H3v6c0 3.53 2.61 6.43 6 6.92V18H6c-.55 0-1 .45-1 1s.45 1 1 1h8c.55 0 1-.45 1-1s-.45-1-1-1h-3v-5.08c3.39-.49 6-3.39 6-6.92z"],
        "globe": ["M7.53 4.37c.1-.1.1-.26 0-.35l-.68-.68c-.1-.1-.25-.1-.35 0-.1.1-.1.26 0 .35l.68.68c.1.1.25.1.35 0zm3.17.06h.3c.09 0 .16-.01.16-.1 0-.09-.07-.1-.16-.1h-.3c-.09 0-.16.01-.16.1s.07.1.16.1zm.98 1.15c.09 0 .19-.08.19-.17v-.42c0-.09-.1-.17-.19-.17s-.19.08-.19.17v.42c0 .09.1.17.19.17zm-6.5 4.19c-.35 0-.56.28-.56.63v2.37c0 .35.21.62.56.62h.39v2.4c0 .34.33.61.67.61s.67-.27.67-.61v-1.44h-.02c.35 0 .6-.19.6-.54v-.41h.18c.35 0 .58-.28.58-.62v-.81c0-.01.01-.01 0-.02L6.1 9.77h-.92zM10 0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zm0 18c-4.42 0-8-3.58-8-8 0-.74.11-1.46.3-2.14h.03v.65c0 .28.25.5.53.5.05 0 .1-.01.15-.02l1.05 1.05c.1.11.28.11.38 0 .1-.1.11-.27 0-.38L3.42 8.59c0-.03.05-.05.05-.08v-.16c0-.22.12-.3.34-.49h.63c.12 0 .23-.01.32-.07.01-.01.02 0 .03-.01.02-.02.04-.03.06-.04.01-.01.02-.01.03-.02l.02-.02 2.15-2.15c.24-.24.24-.63 0-.86-.23-.24-.62-.19-.86.04l-.41.46H5v-.64c0-.01.07.07.07-.12h.87c.17 0 .3-.12.3-.29 0-.17-.13-.29-.3-.29H4.88C6.27 2.7 8.05 2 10 2s3.73.7 5.12 1.86h-1.58l-.01-.04c-.06 0-.12 0-.17.04l-.71.7c-.09.09-.09.23 0 .31.09.09.23.09.32 0l.56-.6.01-.03h.34c0 .19-.1.13-.1.16v.1c0 .29-.2.5-.49.5h-.51c-.25 0-.52.28-.52.54v.23h-.12c-.16 0-.27.08-.27.24v.33h-.32c-.23 0-.41.15-.41.38 0 .22.18.35.41.35.1 0 .19.04.26-.16l.06.01.66-.59h.23l.53.5c.04.04.11.03.16-.01.04-.04.04-.16 0-.2L13 6.15h.32l.12.16c.25.25.65.23.89-.02l.12-.14H15c.02 0 .11.07.11.07v.33s-.06-.01-.07-.01h-.49c-.16 0-.28.13-.28.29 0 .16.13.29.28.29h.49c.01 0 .07-.01.07-.01v.2c-.19.28-.33.57-.62.57h-1.28s0-.01-.01-.01l-.58-.58a.622.622 0 0 0-.89 0l-.58.58s0 .01-.01.01h-.34c-.35 0-.67.28-.67.63v1.25c0 .35.32.61.67.61h1.22c.46.19.78.48.97.94v2.28c0 .35.23.6.58.6h.98c.35 0 .54-.25.54-.6v-2.2l1.21-1.17.04-.02.02-.01h.04c.1-.11.2-.26.2-.42V8.49c0-.25-.22-.44-.42-.63h.58c.02.38.29.57.63.57h.43c.13.51.18 1.03.18 1.57 0 4.42-3.58 8-8 8zm6.16-5.65c-.14 0-.29.11-.29.25v.77c0 .14.15.25.29.25.14 0 .29-.11.29-.25v-.77c0-.14-.15-.25-.29-.25zM10.5 3.48c0-.34-.28-.57-.62-.57h-.74c-.34 0-.57.25-.57.59 0 .05-.13.06.06.1v.64c0 .2.09.36.29.36.2 0 .29-.16.29-.36v-.19h.68c.33 0 .61-.23.61-.57z"],
        "globe-network": ["M10 0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zm7.39 7h-3.63c-.31-1.99-.92-3.66-1.72-4.73 2.45.65 4.41 2.42 5.35 4.73zM13 10c0 .69-.04 1.36-.11 2H7.11a18.419 18.419 0 0 1 0-4h5.77c.08.64.12 1.31.12 2zm-3-8c1.07 0 2.25 2.05 2.75 5h-5.5c.5-2.95 1.68-5 2.75-5zm-2.04.27C7.16 3.34 6.55 5.01 6.24 7H2.61c.94-2.31 2.9-4.08 5.35-4.73zM2 10c0-.69.11-1.36.28-2h3.83a18.419 18.419 0 0 0 0 4H2.28c-.17-.64-.28-1.31-.28-2zm.61 3h3.63c.31 1.99.92 3.66 1.72 4.73A7.996 7.996 0 0 1 2.61 13zM10 18c-1.07 0-2.25-2.05-2.75-5h5.5c-.5 2.95-1.68 5-2.75 5zm2.04-.27c.79-1.07 1.4-2.74 1.72-4.73h3.63a7.996 7.996 0 0 1-5.35 4.73zM13.89 12a18.419 18.419 0 0 0 0-4h3.83c.17.64.28 1.31.28 2s-.11 1.36-.28 2h-3.83z"],
        "graph": ["M17.5 4A2.5 2.5 0 0 0 15 6.5c0 .06.01.12.02.18l-1.9.84C12.38 6.6 11.27 6 10 6c-.83 0-1.59.25-2.23.68L4.91 4.14c.05-.21.09-.42.09-.64a2.5 2.5 0 0 0-5 0A2.5 2.5 0 0 0 2.5 6c.42 0 .81-.11 1.16-.3l2.79 2.48C6.17 8.73 6 9.34 6 10c0 1.41.73 2.64 1.83 3.35l-.56 1.67A2.498 2.498 0 0 0 5 17.5a2.5 2.5 0 0 0 5 0c0-.74-.32-1.39-.83-1.85l.56-1.68c.09.01.18.03.27.03 2.21 0 4-1.79 4-4 0-.22-.03-.44-.07-.65l2.02-.9c.43.34.96.55 1.55.55a2.5 2.5 0 0 0 0-5z"],
        "graph-remove": ["M17.41 4l2.29-2.29c.19-.18.3-.43.3-.71a1.003 1.003 0 0 0-1.71-.71L16 2.59 13.71.3A.965.965 0 0 0 13 0a1.003 1.003 0 0 0-.71 1.71L14.59 4 12.3 6.29c-.19.18-.3.43-.3.71a1.003 1.003 0 0 0 1.71.71L16 5.41l2.29 2.29c.18.19.43.3.71.3a1.003 1.003 0 0 0 .71-1.71L17.41 4zM19 10c-.83 0-1.55-.36-2.09-.91l-.03.03-.88-.88-.88.88a2.996 2.996 0 1 1-4.24-4.24l.88-.88-.88-.88.03-.03C10.36 2.55 10 1.83 10 1c0-.35.07-.68.18-.99-.06 0-.12-.01-.18-.01C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10c0-.06-.01-.12-.01-.18-.31.11-.64.18-.99.18z"],
        "grid": ["M19 11c.55 0 1-.45 1-1s-.45-1-1-1h-2V5h2c.55 0 1-.45 1-1s-.45-1-1-1h-2V1c0-.55-.45-1-1-1s-1 .45-1 1v2h-4V1c0-.55-.45-1-1-1S9 .45 9 1v2H5V1c0-.55-.45-1-1-1S3 .45 3 1v2H1c-.55 0-1 .45-1 1s.45 1 1 1h2v4H1c-.55 0-1 .45-1 1s.45 1 1 1h2v4H1c-.55 0-1 .45-1 1s.45 1 1 1h2v2c0 .55.45 1 1 1s1-.45 1-1v-2h4v2c0 .55.45 1 1 1s1-.45 1-1v-2h4v2c0 .55.45 1 1 1s1-.45 1-1v-2h2c.55 0 1-.45 1-1s-.45-1-1-1h-2v-4h2zM9 15H5v-4h4v4zm0-6H5V5h4v4zm6 6h-4v-4h4v4zm0-6h-4V5h4v4z"],
        "grid-view": ["M0 19c0 .55.45 1 1 1h8v-9H0v8zM0 1v8h9V0H1C.45 0 0 .45 0 1zm19-1h-8v9h9V1c0-.55-.45-1-1-1zm-8 20h8c.55 0 1-.45 1-1v-8h-9v9z"],
        "group-objects": ["M6 7c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3zm8-3H6c-3.31 0-6 2.69-6 6s2.69 6 6 6h8c3.31 0 6-2.69 6-6s-2.69-6-6-6zm0 11H6c-2.76 0-5-2.24-5-5s2.24-5 5-5h8c2.76 0 5 2.24 5 5s-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z"],
        "grouped-bar-chart": ["M12 16h1c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1h-1c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1zm7 1H1c-.55 0-1 .45-1 1s.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1zm-3-1h1c.55 0 1-.45 1-1V8c0-.55-.45-1-1-1h-1c-.55 0-1 .45-1 1v7c0 .55.45 1 1 1zm-9 0h1c.55 0 1-.45 1-1v-5c0-.55-.45-1-1-1H7c-.55 0-1 .45-1 1v5c0 .55.45 1 1 1zm-4 0h1c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1H3c-.55 0-1 .45-1 1v13c0 .55.45 1 1 1z"],
        "hand": ["M17 5c-.42 0-.79.27-.93.64L14.38 10h-.77l1.34-6.67c.03-.1.05-.21.05-.33a.998.998 0 1 0-1.98-.19h-.01L11.57 10H11V1c0-.55-.45-1-1-1S9 .45 9 1v9h-.2L6.97 2.76a.997.997 0 0 0-1.73-.41l-.03.03c-.01.02-.02.03-.03.04-.01.02-.01.03-.02.04v.01c-.01.01-.02.02-.02.03v.01c-.02.01-.02.02-.03.03 0 0 0 .01-.01.01 0 .01 0 .02-.01.03 0 0 0 .01-.01.01 0 .01-.01.02-.01.03 0 0 0 .01-.01.01 0 .01-.01.02-.01.03 0 .01 0 .01-.01.02 0 .01-.01.02-.01.03 0 .01 0 .01-.01.02 0 .01-.01.02-.01.03v.02c0 .01 0 .02-.01.03V3c0 .05 0 .09.01.14l1.45 10.25L6 12.7v.01L3.84 9.45h-.01A.98.98 0 0 0 3 9c-.55 0-1 .45-1 1 0 .2.06.39.17.55L6 18.44C7.06 19.4 8.46 20 10 20c3.31 0 6-2.69 6-6v-1.84l.01-.03v-.06l1.94-5.75A1.003 1.003 0 0 0 17 5z"],
        "hand-down": ["M17.68 9.84C15.91 9 14.27 6.49 13.45 4.9 12.41 2.43 12.21 0 7.87 0 5.49 0 3.95.76 3.05 2.65 2.31 4.2 2 5.48 2 9.79v.99c0 .82.69 1.48 1.54 1.48.38 0 .73-.14 1-.36.19.6.78 1.05 1.47 1.05.47 0 .89-.2 1.17-.52.26.47.77.79 1.36.79.65 0 1.2-.39 1.43-.93l.03.77v5.44c0 .48.23.91.59 1.18.21.19.5.32.85.32h.06c.83 0 1.5-.67 1.5-1.5v-8.24l.01-.67c.85.98 1.92 1.76 3.24 1.89 1.79.19 2.09-1.33 1.43-1.64z"],
        "hand-left": ["M15.1 6.54c-1.58-.81-4.09-2.46-4.94-4.23-.31-.65-1.82-.35-1.64 1.43.13 1.33.91 2.4 1.89 3.24L9.74 7H1.5C.67 7 0 7.67 0 8.5v.06c0 .36.13.64.32.85.27.36.7.59 1.18.59h5.44l.78.01c-.54.23-.93.78-.93 1.43 0 .59.32 1.1.79 1.36-.32.28-.52.7-.52 1.17 0 .69.44 1.28 1.05 1.47-.22.27-.36.62-.36 1 0 .85.66 1.54 1.48 1.54h.99c4.31 0 5.59-.31 7.14-1.05 1.89-.9 2.65-2.44 2.65-4.82-.01-4.32-2.44-4.52-4.91-5.57z"],
        "hand-right": ["M20 8.5c0-.83-.67-1.5-1.5-1.5h-8.24l-.67-.01c.98-.85 1.76-1.92 1.89-3.24.18-1.79-1.33-2.08-1.65-1.43-.84 1.76-3.35 3.41-4.93 4.23C2.43 7.59 0 7.79 0 12.13c0 2.38.76 3.92 2.65 4.82C4.2 17.69 5.48 18 9.79 18h.99c.82 0 1.48-.69 1.48-1.54 0-.38-.14-.73-.36-1 .6-.19 1.05-.78 1.05-1.47 0-.47-.2-.89-.52-1.17.47-.26.79-.77.79-1.36 0-.65-.39-1.2-.93-1.43l.77-.03h5.44c.48 0 .91-.23 1.18-.59.19-.21.32-.49.32-.85v-.03-.03z"],
        "hand-up": ["M16.46 7.74c-.38 0-.73.14-1 .36-.19-.6-.78-1.05-1.47-1.05-.47 0-.89.2-1.17.52-.26-.47-.77-.79-1.36-.79-.65 0-1.2.39-1.43.93L10 6.94V1.5c0-.48-.23-.91-.59-1.18C9.2.13 8.92 0 8.56 0H8.5C7.67 0 7 .67 7 1.5v8.24l-.01.67c-.84-.98-1.92-1.76-3.24-1.89-1.79-.18-2.08 1.33-1.43 1.65 1.77.84 3.41 3.35 4.23 4.94 1.05 2.47 1.25 4.9 5.58 4.9 2.38 0 3.92-.76 4.82-2.65.74-1.56 1.05-2.84 1.05-7.15v-.99c0-.81-.69-1.48-1.54-1.48z"],
        "header": ["M16 1c-.55 0-1 .45-1 1v7H5V2c0-.55-.45-1-1-1s-1 .45-1 1v16c0 .55.45 1 1 1s1-.45 1-1v-7h10v7c0 .55.45 1 1 1s1-.45 1-1V2c0-.55-.45-1-1-1z"],
        "header-one": ["M10 0c.55 0 1 .45 1 1v14c0 .55-.45 1-1 1s-1-.45-1-1V9H2v6c0 .55-.45 1-1 1s-1-.45-1-1V1c0-.55.45-1 1-1s1 .45 1 1v6h7V1c0-.55.45-1 1-1zm7.4 10.77c.17-.2.29-.46.34-.77H19v10h-1.5v-7.11H15v-1.24c.32 0 .63-.03.93-.08.31-.06.58-.16.83-.29.26-.12.47-.3.64-.51z"],
        "header-two": ["M16.6 17.41c-.22.17-.4.36-.56.55-.16.19-.27.4-.33.61h4.28V20H14c.01-.81.18-1.52.53-2.13.35-.6.81-1.13 1.41-1.58.28-.23.58-.46.89-.68.31-.22.59-.46.85-.71.26-.26.48-.53.63-.83.16-.3.25-.64.26-1.02 0-.18-.02-.37-.06-.57-.04-.2-.11-.39-.22-.56s-.26-.31-.45-.43-.44-.18-.75-.18c-.28 0-.52.06-.71.19s-.34.3-.45.52c-.11.22-.2.48-.25.78-.05.3-.08.62-.09.97h-1.43c0-.54.07-1.04.2-1.5.13-.47.32-.87.58-1.2.26-.34.58-.6.95-.78.37-.19.81-.29 1.3-.29.54 0 .99.09 1.35.29.36.19.65.44.87.74.22.29.38.62.47.97.09.35.14.68.14 1 0 .4-.05.75-.16 1.07-.11.32-.26.61-.44.88-.19.27-.4.52-.63.74-.24.22-.48.43-.73.63s-.5.38-.75.56c-.26.17-.5.35-.71.53zM10 0c.55 0 1 .45 1 1v14c0 .55-.45 1-1 1s-1-.45-1-1V9H2v6c0 .55-.45 1-1 1s-1-.45-1-1V1c0-.55.45-1 1-1s1 .45 1 1v6h7V1c0-.55.45-1 1-1z"],
        "headset": ["M18.97 9H19A9 9 0 0 0 1 9h.03C.41 9.73 0 10.8 0 12c0 1.74.84 3.2 2 3.76V16c0 1.66 1.34 3 3 3h3c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-2c0-.55-.45-1-1-1H9c-.55 0-1 .45-1 1H5c-.55 0-1-.45-1-1 .55 0 1-.45 1-1V9c0-.55-.45-1-1-1h-.92C3.57 4.61 6.47 2 10 2s6.43 2.61 6.92 6H16c-.55 0-1 .45-1 1v6c0 .55.45 1 1 1h1c1.66 0 3-1.79 3-4 0-1.2-.41-2.27-1.03-3z"],
        "heart": ["M20 6.25C20 3.35 17.65 1 14.75 1c-1.02 0-1.95.31-2.75.82v-.04c-.09.06-.17.12-.26.19-.04.03-.09.06-.14.1-.68.51-1.24 1.18-1.6 1.96-.4-.86-1.04-1.57-1.8-2.1-.04-.02-.07-.05-.1-.08a7 7 0 0 0-.6-.33c-.13-.04-.23-.1-.35-.15-.05-.02-.1-.05-.15-.07v.02C6.45 1.13 5.87 1 5.25 1A5.25 5.25 0 0 0 0 6.25c0 .09.01.17.01.25H0c0 .06.01.12.02.18s.01.12.02.18C.13 7.89.44 9 1.07 10.17 2.23 12.33 4.1 14.11 7 16.53v.01c.9.75 1.89 1.55 3 2.46.71-.58 1.38-1.12 2-1.63 3.48-2.86 5.64-4.78 6.93-7.18.63-1.17.94-2.27 1.03-3.3.01-.07.01-.14.02-.21 0-.06.01-.11.02-.17h-.01c0-.09.01-.17.01-.26z"],
        "heart-broken": ["M8.11 7.45C8.05 7.31 8 7.16 8 7c0-.07.03-.13.04-.19h-.02l.86-4.32A5.159 5.159 0 0 0 5.25 1 5.25 5.25 0 0 0 0 6.25c0 .09.01.17.01.25H0c0 .06.01.12.02.18s.01.12.02.18C.13 7.89.44 9 1.07 10.17c1.38 2.58 3.76 4.6 7.71 7.83l-.76-3.8h.02c-.01-.07-.04-.13-.04-.2 0-.21.08-.39.18-.54l-.02-.01 1.68-2.52-1.73-3.48zM20 6.25C20 3.35 17.65 1 14.75 1c-1.54 0-2.92.67-3.88 1.73l-.83 4.13 1.85 3.69h-.01c.07.14.12.29.12.45 0 .21-.08.39-.18.54l.02.01-1.77 2.66.81 4.07c4.16-3.39 6.63-5.45 8.05-8.1.63-1.17.94-2.27 1.03-3.3.01-.07.01-.14.02-.21 0-.06.01-.11.02-.17h-.01c0-.08.01-.16.01-.25z"],
        "heat-grid": ["M14 12h6V8h-6v4zM0 12h6V8H0v4zm1-3h4v2H1V9zm-1 7c0 .55.45 1 1 1h5v-4H0v3zM19 3h-5v4h6V4c0-.55-.45-1-1-1zm0 3h-4V4h4v2zM0 4v3h6V3H1c-.55 0-1 .45-1 1zm7 3h6V3H7v4zm7 10h5c.55 0 1-.45 1-1v-3h-6v4zm-7 0h6v-4H7v4zm1-3h4v2H8v-2zm-1-2h6V8H7v4z"],
        "heatmap": ["M6 0a6 6 0 1 0 0 12A6 6 0 1 0 6 0z", "M10.5 8a4.5 4.5 0 1 0 0 9 4.5 4.5 0 1 0 0-9z", "M16.5 7a3.5 3.5 0 1 0 0 7 3.5 3.5 0 1 0 0-7zM18 16a2 2 0 1 0 0 4 2 2 0 1 0 0-4zM2.5 14a2.5 2.5 0 1 0 0 5 2.5 2.5 0 1 0 0-5zM16.5 0a2.5 2.5 0 1 0 0 5 2.5 2.5 0 1 0 0-5z"],
        "help": ["M10 0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zM7.41 4.62c.65-.54 1.51-.82 2.56-.82.54 0 1.03.08 1.48.25.44.17.83.39 1.14.68.32.29.56.63.74 1.02.17.39.26.82.26 1.27s-.08.87-.24 1.23c-.16.37-.4.73-.71 1.11l-1.21 1.58c-.14.17-.28.33-.32.48-.05.15-.11.35-.11.6v.97H9v-2s.06-.58.24-.81l1.21-1.64c.25-.3.41-.56.51-.77s.14-.44.14-.67c0-.35-.11-.63-.32-.85s-.5-.33-.88-.33c-.37 0-.67.11-.89.33-.22.23-.37.54-.46.94-.03.12-.11.17-.23.16l-1.95-.29c-.12-.01-.16-.08-.14-.22.13-.93.52-1.67 1.18-2.22zM9 14h2.02L11 16H9v-2z"],
        "helper-management": ["M17 10h-3v3h3v-3zm0 4h-3v3h3v-3zm0-8h-3v3h3V6zm2-6H1C.4 0 0 .4 0 1v18c0 .5.4 1 1 1h18c.5 0 1-.5 1-1V1c0-.6-.5-1-1-1zm-1 18H2V2h16v16zm-9-4H6v3h3v-3zm4 0h-3v3h3v-3z"],
        "highlight": ["M11.22 14.09l3.03-3.03.71.71L20 6.73l-5.71-5.71-5.04 5.04.71.71-3.02 3.04 4.28 4.28zm6.8 3.91h-16c-.55 0-1 .45-1 1s.45 1 1 1h16c.55 0 1-.45 1-1s-.45-1-1-1zm-15-1h4.04c.28 0 .53-.11.71-.3l2.02-2.02-3.44-3.45-4.04 4.04c-.18.18-.3.44-.3.71.01.57.46 1.02 1.01 1.02z"],
        "history": ["M10 0C6.71 0 3.82 1.6 2 4.05V2c0-.55-.45-1-1-1s-1 .45-1 1v4c0 .55.45 1 1 1h4c.55 0 1-.45 1-1s-.45-1-1-1H3.76C5.23 3.17 7.47 2 10 2c4.42 0 8 3.58 8 8s-3.58 8-8 8-8-3.58-8-8c0-.55-.45-1-1-1s-1 .45-1 1c0 5.52 4.48 10 10 10s10-4.48 10-10S15.52 0 10 0zm0 3c-.55 0-1 .45-1 1v6c0 .28.11.53.29.71l3 3a1.003 1.003 0 0 0 1.42-1.42L11 9.59V4c0-.55-.45-1-1-1z"],
        "home": ["M2 12v7c0 .55.45 1 1 1h5v-7h4v7h5c.55 0 1-.45 1-1v-7l-8-8-8 8zm17.71-2.71L17 6.59V3c0-.55-.45-1-1-1s-1 .45-1 1v1.59L10.71.3C10.53.11 10.28 0 10 0s-.53.11-.71.29l-9 9a1.003 1.003 0 0 0 1.42 1.42L10 2.41l8.29 8.29c.18.19.43.3.71.3a1.003 1.003 0 0 0 .71-1.71z"],
        "horizontal-bar-chart": ["M1 1c-.55 0-1 .45-1 1v16c0 .55.45 1 1 1s1-.45 1-1V2c0-.55-.45-1-1-1zm3 5h11c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1zm8 8H4c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h8c.55 0 1-.45 1-1v-2c0-.55-.45-1-1-1zm7-6H4c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h15c.55 0 1-.45 1-1V9c0-.55-.45-1-1-1z"],
        "horizontal-bar-chart-asc": ["M1 9h11c.55 0 1-.45 1-1V7c0-.55-.45-1-1-1H1c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1zm0-5h9c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1H1c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1zm18 12H1c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h18c.55 0 1-.45 1-1v-1c0-.55-.45-1-1-1zM1 14h14c.55 0 1-.45 1-1v-1c0-.55-.45-1-1-1H1c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1z"],
        "horizontal-bar-chart-desc": ["M10 16H1c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h9c.55 0 1-.45 1-1v-1c0-.55-.45-1-1-1zm2-5H1c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h11c.55 0 1-.45 1-1v-1c0-.55-.45-1-1-1zm3-5H1c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V7c0-.55-.45-1-1-1zm4-5H1c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1z"],
        "horizontal-distribution": ["M12 2H8c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1h4c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zM1 0C.45 0 0 .45 0 1v18c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1zm18 0c-.55 0-1 .45-1 1v18c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1z"],
        "id-number": ["M2 5v10h16V5H2zm0-2h16c1.1 0 2 .9 2 2v10c0 1.1-.9 2-2 2H2c-1.1 0-2-.9-2-2V5c0-1.1.9-2 2-2z", "M8.88 12.38c-.17-.39-1.01-.66-1.56-.9-.56-.24-.48-.39-.5-.6v-.09c.19-.17.35-.4.45-.67 0 0 0-.02.01-.02l.06-.18c.13-.03.2-.17.23-.29.03-.05.09-.18.08-.33-.04-.18-.11-.27-.2-.3v-.03c0-.24-.02-.58-.06-.81-.01-.06-.02-.12-.04-.19-.08-.27-.25-.52-.48-.7C6.63 7.09 6.3 7 6 7s-.63.09-.87.27c-.23.17-.4.42-.48.7-.02.06-.03.13-.04.19-.04.22-.06.57-.06.81V9c-.09.03-.17.12-.19.31-.01.14.05.27.08.32.03.14.1.27.23.3.02.06.03.12.06.18v.01c.11.27.27.51.47.68v.08c-.02.2.04.35-.51.6-.56.24-1.39.51-1.56.9-.19.39-.12.62-.12.62h5.98c-.01 0 .06-.23-.11-.62zM12 7h4c.55 0 1 .45 1 1s-.45 1-1 1h-4c-.55 0-1-.45-1-1s.45-1 1-1zM12 11h4c.55 0 1 .45 1 1s-.45 1-1 1h-4c-.55 0-1-.45-1-1s.45-1 1-1z"],
        "image-rotate-left": ["M10.5 13c.83 0 1.5-.67 1.5-1.5s-.67-1.5-1.5-1.5-1.5.67-1.5 1.5.67 1.5 1.5 1.5zM14 7H1c-.55 0-1 .45-1 1v11c0 .55.45 1 1 1h13c.55 0 1-.45 1-1V8c0-.55-.45-1-1-1zm-1 10l-5-3-1 2-2-4-3 4.5V9h11v8zm3-15h-1.59l.29-.29c.19-.18.3-.43.3-.71a1.003 1.003 0 0 0-1.71-.71l-2 2c-.18.18-.29.43-.29.71 0 .28.11.53.29.71l2 2a1.003 1.003 0 0 0 1.42-1.42l-.3-.29H16c1.1 0 2 .9 2 2v3c0 .55.45 1 1 1s1-.45 1-1V6c0-2.21-1.79-4-4-4z"],
        "image-rotate-right": ["M5.29 4.29a1.003 1.003 0 0 0 1.42 1.42l2-2C8.89 3.53 9 3.28 9 3c0-.28-.11-.53-.29-.71l-2-2a1.003 1.003 0 0 0-1.42 1.42l.3.29H4C1.79 2 0 3.79 0 6v3c0 .55.45 1 1 1s1-.45 1-1V6c0-1.1.9-2 2-2h1.59l-.3.29zM15.5 13c.83 0 1.5-.67 1.5-1.5s-.67-1.5-1.5-1.5-1.5.67-1.5 1.5.67 1.5 1.5 1.5zM19 7H6c-.55 0-1 .45-1 1v11c0 .55.45 1 1 1h13c.55 0 1-.45 1-1V8c0-.55-.45-1-1-1zm-1 10l-5-3-1 2-2-4-3 4.5V9h11v8z"],
        "import": ["M9.29 15.71c.18.18.43.29.71.29s.53-.11.71-.29l5-5a1.003 1.003 0 0 0-1.42-1.42L11 12.59V1c0-.55-.45-1-1-1S9 .45 9 1v11.59l-3.29-3.3a1.003 1.003 0 0 0-1.42 1.42l5 5zM19 14c-.55 0-1 .45-1 1v3H2v-3c0-.55-.45-1-1-1s-1 .45-1 1v4c0 .55.45 1 1 1h18c.55 0 1-.45 1-1v-4c0-.55-.45-1-1-1z"],
        "inbox": ["M16.92 3.56l-.01-.02c-.16-.35-.5-.6-.91-.6H4c-.41 0-.76.25-.91.6l-.01.02L0 10.49v6.46c0 .55.45 1 1 1h18c.55 0 1-.45 1-1v-6.46l-3.08-6.93zM15 10.95c-.55 0-1 .45-1 1v1H6v-1c0-.55-.45-1-1-1H1.98l2.67-6h10.7l2.67 6H15z"],
        "info-sign": ["M10 0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zM9 4h2v2H9V4zm4 12H7v-1h2V8H8V7h3v8h2v1z"],
        "inner-join": ["M8.7 4.7C7.4 6 6.5 7.9 6.5 10s.8 4 2.2 5.3c-.8.5-1.7.7-2.7.7-3.3 0-6-2.7-6-6s2.7-6 6-6c1 0 1.9.2 2.7.7zm-3.34 9.25c-.55-1.2-.86-2.54-.86-3.95s.31-2.75.86-3.95a4.001 4.001 0 0 0 0 7.9zM14 4c3.3 0 6 2.7 6 6s-2.7 6-6 6c-1 0-1.9-.2-2.7-.7 1.3-1.3 2.2-3.2 2.2-5.3s-.8-3.9-2.2-5.3C12.1 4.2 13 4 14 4zm.6 2.05c.55 1.2.86 2.54.86 3.95s-.31 2.75-.86 3.95c1.9-.31 3.36-1.96 3.36-3.95S16.5 6.36 14.6 6.05zM10 5.5C8.8 6.7 8 8.2 8 10s.8 3.3 2 4.4c1.2-1.1 2-2.7 2-4.5s-.8-3.3-2-4.4z"],
        "insert": ["M19 0H1C.4 0 0 .4 0 1v18c0 .5.4 1 1 1h18c.5 0 1-.5 1-1V1c0-.6-.5-1-1-1zm-1 18H2V2h16v16zM5 11h4v4c0 .6.4 1 1 1s1-.4 1-1v-4h4c.6 0 1-.4 1-1s-.4-1-1-1h-4V5c0-.6-.4-1-1-1s-1 .4-1 1v4H5c-.6 0-1 .4-1 1s.4 1 1 1z"],
        "intersection": ["M13 4c-1.31 0-2.51.43-3.5 1.14A5.977 5.977 0 0 0 6 4c-3.31 0-6 2.69-6 6s2.69 6 6 6c1.31 0 2.51-.43 3.5-1.14.99.71 2.19 1.14 3.5 1.14 3.31 0 6-2.69 6-6s-2.69-6-6-6zm-4.93 9.41c-.61.37-1.31.59-2.07.59-2.21 0-4-1.79-4-4s1.79-4 4-4c.76 0 1.46.22 2.07.59C7.4 7.56 7 8.73 7 10s.4 2.44 1.07 3.41zM13 14c-.76 0-1.46-.22-2.07-.59C11.6 12.44 12 11.27 12 10s-.4-2.44-1.07-3.41C11.54 6.22 12.24 6 13 6c2.21 0 4 1.79 4 4s-1.79 4-4 4z"],
        "ip-address": ["M6 3.66C6 5.69 10 11 10 11s4-5.31 4-7.34C13.99 1.64 12.21 0 10 0S6 1.64 6 3.66zM8 4c0-1.1.9-2 2-2s2 .9 2 2-.9 2-2 2-2-.9-2-2zM14 13.5V13h-4v1h3v2h-2v1h3v-3.5zM3 12h14c.55 0 1 .45 1 1v6c0 .55-.45 1-1 1H3c-.55 0-1-.45-1-1v-6c0-.55.45-1 1-1zm4 1v6h1v-6H7zm3 1v5h1v-5h-1z"],
        "issue": ["M10 20C4.477 20 0 15.523 0 10S4.477 0 10 0s10 4.477 10 10-4.477 10-10 10zm0-2a8 8 0 1 0 0-16 8 8 0 0 0 0 16zm1-2H9v-2h2v2zm0-3H9V4h2v9z"],
        "issue-closed": ["M15.364 5.9a.997.997 0 0 1-.707-.293l-2.121-2.122a1 1 0 1 1 1.414-1.414l1.414 1.414L18.192.657a1 1 0 0 1 1.414 1.414l-3.535 3.536a.997.997 0 0 1-.707.292zM11.78.157a3.002 3.002 0 0 0-1.437 1.85 8 8 0 1 0 7.1 5.055l.042-.042 1.472-1.472A9.959 9.959 0 0 1 20 10c0 5.523-4.477 10-10 10S0 15.523 0 10 4.477 0 10 0c.608 0 1.202.054 1.78.158zM11 16H9v-2h2v2zm0-3H9V4h2v9z"],
        "issue-new": ["M13.167.512a2.98 2.98 0 0 0-.131.524c-.74.115-1.39.5-1.848 1.052a8 8 0 1 0 6.724 6.724 2.997 2.997 0 0 0 1.052-1.848 2.98 2.98 0 0 0 .524-.13A9.99 9.99 0 0 1 20 10c0 5.523-4.477 10-10 10S0 15.523 0 10 4.477 0 10 0a9.99 9.99 0 0 1 3.167.512zM11 16H9v-2h2v2zm0-3H9V4h2v9zm6-10h1.5a1 1 0 0 1 0 2H17v1.5a1 1 0 0 1-2 0V5h-1.5a1 1 0 0 1 0-2H15V1.5a1 1 0 0 1 2 0V3z"],
        "italic": ["M11.7 4H14c.6 0 1-.4 1-1s-.4-1-1-1H7c-.6 0-1 .4-1 1s.4 1 1 1h2.2L7.3 15H5c-.6 0-1 .4-1 1s.4 1 1 1h7c.6 0 1-.4 1-1s-.4-1-1-1H9.8l1.9-11z"],
        "join-table": ["M19 6h-4V2c0-.55-.45-1-1-1H1c-.55 0-1 .45-1 1v11c0 .55.45 1 1 1h4v4c0 .55.45 1 1 1h13c.55 0 1-.45 1-1V7c0-.55-.45-1-1-1zM6 12H2V9h4v3zm0-4H2V5h4v3zm7 9H7v-3h6v3zm0-4H7V9h6v4zm0-5H7V5h6v3zm5 9h-4v-3h4v3zm0-4h-4v-3h4v3z"],
        "key": ["M14 0c-3.31 0-6 2.69-6 6 0 1.11.32 2.14.85 3.03L.44 17.44a1.498 1.498 0 1 0 2.12 2.12l.79-.79.94.94c.18.18.43.29.71.29s.53-.11.71-.29l3-3c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71l-.94-.94 3.2-3.2A5.9 5.9 0 0 0 14 12c3.31 0 6-2.69 6-6s-2.69-6-6-6zm0 9c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3z"],
        "key-backspace": ["M19 3H7c-.28 0-.53.11-.71.29l-6 6C.11 9.47 0 9.72 0 10c0 .28.11.53.29.71l6 6c.18.18.43.29.71.29h12c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1zm-2.29 9.29a1.003 1.003 0 0 1-1.42 1.42L13 11.41l-2.29 2.29c-.18.19-.43.3-.71.3a1.003 1.003 0 0 1-.71-1.71l2.3-2.29-2.3-2.29a1.003 1.003 0 0 1 1.42-1.42L13 8.59l2.29-2.29c.18-.19.43-.3.71-.3a1.003 1.003 0 0 1 .71 1.71L14.41 10l2.3 2.29z"],
        "key-command": ["M15.5 12H14V8h1.5C17.43 8 19 6.43 19 4.5S17.43 1 15.5 1 12 2.57 12 4.5V6H8V4.5C8 2.57 6.43 1 4.5 1S1 2.57 1 4.5 2.57 8 4.5 8H6v4H4.5C2.57 12 1 13.57 1 15.5S2.57 19 4.5 19 8 17.43 8 15.5V14h4v1.5c0 1.93 1.57 3.5 3.5 3.5s3.5-1.57 3.5-3.5-1.57-3.5-3.5-3.5zm0-9c.83 0 1.5.67 1.5 1.5S16.33 6 15.5 6 14 5.33 14 4.5 14.67 3 15.5 3zm-11 14c-.83 0-1.5-.67-1.5-1.5S3.67 14 4.5 14s1.5.67 1.5 1.5S5.33 17 4.5 17zm0-11C3.67 6 3 5.33 3 4.5S3.67 3 4.5 3 6 3.67 6 4.5 5.33 6 4.5 6zm7.5 6H8V8h4v4zm3.5 5c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5z"],
        "key-control": ["M16.71 7.29l-6-6C10.53 1.11 10.28 1 10 1s-.53.11-.71.29l-6 6a1.003 1.003 0 0 0 1.42 1.42L10 3.41l5.29 5.29c.18.19.43.3.71.3a1.003 1.003 0 0 0 .71-1.71z"],
        "key-delete": ["M19.71 9.29l-6-6A.997.997 0 0 0 13 3H1c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h12c.28 0 .53-.11.71-.29l6-6c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71zm-9 3a1.003 1.003 0 0 1-1.42 1.42L7 11.41 4.71 13.7c-.18.19-.43.3-.71.3a1.003 1.003 0 0 1-.71-1.71L5.59 10l-2.3-2.29a1.003 1.003 0 0 1 1.42-1.42L7 8.59 9.29 6.3c.18-.19.43-.3.71-.3a1.003 1.003 0 0 1 .71 1.71L8.41 10l2.3 2.29z"],
        "key-enter": ["M18 2c-.55 0-1 .45-1 1v5c0 2.21-1.79 4-4 4H4.41L6.7 9.71c.19-.18.3-.43.3-.71a1.003 1.003 0 0 0-1.71-.71l-4 4c-.18.18-.29.43-.29.71 0 .28.11.53.29.71l4 4a1.003 1.003 0 0 0 1.42-1.42L4.41 14H13c3.31 0 6-2.69 6-6V3c0-.55-.45-1-1-1z"],
        "key-escape": ["M2 8c.55 0 1-.45 1-1V4.41l6.29 6.29c.18.19.43.3.71.3a1.003 1.003 0 0 0 .71-1.71L4.41 3H7c.55 0 1-.45 1-1s-.45-1-1-1H2c-.55 0-1 .45-1 1v5c0 .55.45 1 1 1zm9-6.94V3.1c3.39.49 6 3.38 6 6.9 0 3.87-3.13 7-7 7-3.52 0-6.41-2.61-6.9-6H1.06c.5 4.5 4.31 8 8.94 8a9 9 0 0 0 9-9c0-4.63-3.5-8.44-8-8.94z"],
        "key-option": ["M13 4h6c.55 0 1-.45 1-1s-.45-1-1-1h-6c-.55 0-1 .45-1 1s.45 1 1 1zm6 12h-4.42L6.87 2.5l-.02.01A.977.977 0 0 0 6 2H1c-.55 0-1 .45-1 1s.45 1 1 1h4.42l7.71 13.5.01-.01c.18.3.49.51.86.51h5c.55 0 1-.45 1-1s-.45-1-1-1z"],
        "key-shift": ["M17.74 10.35l-6.99-8.01-.01.01C10.56 2.14 10.3 2 10 2s-.56.14-.74.35l-.01-.01-7 8 .01.01A.95.95 0 0 0 2 11c0 .55.45 1 1 1h3v5c0 .55.45 1 1 1h6c.55 0 1-.45 1-1v-5h3c.55 0 1-.45 1-1 0-.25-.1-.48-.26-.65z"],
        "key-tab": ["M19 13H4.41l2.29-2.29c.19-.18.3-.43.3-.71a1.003 1.003 0 0 0-1.71-.71L2 12.59V10c0-.55-.45-1-1-1s-1 .45-1 1v8c0 .55.45 1 1 1s1-.45 1-1v-2.59l3.29 3.29c.18.19.43.3.71.3a1.003 1.003 0 0 0 .71-1.71L4.41 15H19c.55 0 1-.45 1-1s-.45-1-1-1zm0-12c-.55 0-1 .45-1 1v2.59L14.71 1.3A.965.965 0 0 0 14 1a1.003 1.003 0 0 0-.71 1.71L15.59 5H1c-.55 0-1 .45-1 1s.45 1 1 1h14.59L13.3 9.29c-.19.18-.3.43-.3.71a1.003 1.003 0 0 0 1.71.71L18 7.41V10c0 .55.45 1 1 1s1-.45 1-1V2c0-.55-.45-1-1-1z"],
        "known-vehicle": ["M19 4a.997.997 0 0 0-.707.293L14 8.586l-2.293-2.293a1 1 0 0 0-1.414 1.414l3 3a.997.997 0 0 0 1.414 0l5-5A1 1 0 0 0 19 4zm-2.048 7.291c.011.072.048.134.048.209a1.5 1.5 0 0 1-1.5 1.5c-.225 0-.433-.057-.624-.145-.279.085-.57.145-.876.145a2.99 2.99 0 0 1-2.121-.879l-3-3 .007-.007A3.027 3.027 0 0 1 8.184 8H4V7l1-3h10l.19.568 1.307-1.308c-.336-.356-.758-.658-1.165-.772 0 0-1.74-.488-5.332-.488s-5.332.488-5.332.488c-.67.188-1.424.864-1.674 1.502L2.99 4H3L2 7H1a1 1 0 0 0 0 2h.333l-.28.84L1 10v7.5a1.5 1.5 0 1 0 3 0V17h12v.5a1.5 1.5 0 0 0 3 0V10l-.19-.568-1.858 1.86zM4.5 13a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3z"],
        "label": ["M3 12h14v-1H3v1zm11-9H1c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V9l-6-6zm4 12H2V5h11v3H3v1h10v1h5v5zm-4-6V5l4 4h-4z"],
        "layer": ["M19.5 9.1l-9-5c-.2-.1-.3-.1-.5-.1s-.3 0-.5.1l-9 5c-.3.2-.5.5-.5.9s.2.7.5.9l9 5c.2.1.3.1.5.1s.3 0 .5-.1l9-5c.3-.2.5-.5.5-.9s-.2-.7-.5-.9z"],
        "layers": ["M.5 6.9l9 5c.2.1.3.1.5.1s.3 0 .5-.1l9-5c.3-.2.5-.5.5-.9s-.2-.7-.5-.9l-9-5c-.2-.1-.3-.1-.5-.1s-.3 0-.5.1l-9 5c-.3.2-.5.5-.5.9s.2.7.5.9z", "M19 9c-.2 0-.3 0-.5.1L10 13.9 1.5 9.1C1.3 9 1.2 9 1 9c-.6 0-1 .4-1 1 0 .4.2.7.5.9l9 5c.2.1.3.1.5.1s.3 0 .5-.1l9-5c.3-.2.5-.5.5-.9 0-.6-.4-1-1-1z", "M19 13c-.2 0-.3 0-.5.1L10 17.9l-8.5-4.7c-.2-.2-.3-.2-.5-.2-.6 0-1 .4-1 1 0 .4.2.7.5.9l9 5c.2.1.3.1.5.1s.3 0 .5-.1l9-5c.3-.2.5-.5.5-.9 0-.6-.4-1-1-1z"],
        "layout": ["M18 6c-1.1 0-2 .9-2 2 0 .37.11.71.28 1.01l-2.27 2.27c-.3-.17-.64-.28-1.01-.28-.93 0-1.71.64-1.93 1.5H8.93c-.22-.86-1-1.5-1.93-1.5-.37 0-.71.11-1.01.28L3.72 9.01C3.89 8.71 4 8.37 4 8c0-.34-.09-.66-.24-.94l3.66-3.38c.31.2.68.32 1.08.32 1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2c0 .34.09.66.24.94L3.08 6.32C2.77 6.12 2.4 6 2 6 .9 6 0 6.9 0 8s.9 2 2 2c.37 0 .71-.11 1.01-.28l2.27 2.27c-.17.3-.28.64-.28 1.01s.11.71.28 1.01l-2.27 2.27C2.71 16.11 2.37 16 2 16c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2c0-.37-.11-.71-.28-1.01l2.27-2.27c.3.17.64.28 1.01.28.93 0 1.71-.64 1.93-1.5h2.14c.22.86 1 1.5 1.93 1.5 1.1 0 2-.9 2-2 0-.37-.11-.71-.28-1.01l2.27-2.27c.3.17.64.28 1.01.28 1.1 0 2-.9 2-2s-.9-2-2-2z"],
        "layout-auto": ["M18 13c-.53 0-1.01.21-1.37.55L11.9 10.6c.06-.19.1-.39.1-.6s-.04-.41-.1-.6l4.72-2.95c.37.34.85.55 1.38.55 1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2c0 .21.04.41.1.6l-4.73 2.96c-.24-.23-.54-.4-.87-.48V3.93c.86-.22 1.5-1 1.5-1.93 0-1.1-.9-2-2-2S8 .9 8 2c0 .93.64 1.71 1.5 1.93v4.14c-.33.09-.63.26-.87.48L3.9 5.6c.06-.19.1-.39.1-.6 0-1.1-.9-2-2-2s-2 .9-2 2 .9 2 2 2c.53 0 1.01-.21 1.37-.55L8.1 9.4c-.06.19-.1.39-.1.6s.04.41.1.6l-4.72 2.95C3.01 13.21 2.53 13 2 13c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2c0-.21-.04-.41-.1-.6l4.73-2.96c.24.23.54.4.87.48v4.14C8.64 16.29 8 17.07 8 18c0 1.1.9 2 2 2s2-.9 2-2c0-.93-.64-1.71-1.5-1.93v-4.14c.33-.09.63-.26.87-.48l4.73 2.96c-.06.18-.1.38-.1.59 0 1.1.9 2 2 2s2-.9 2-2-.9-2-2-2z"],
        "layout-balloon": ["M18 16c-.14 0-.28.02-.42.05l-1.73-3.45c.69-.45 1.14-1.22 1.14-2.1s-.46-1.65-1.14-2.1l1.73-3.45c.14.03.28.05.42.05 1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2c0 .6.27 1.13.69 1.5l-1.77 3.54c-.14-.02-.28-.04-.42-.04a2.5 2.5 0 0 0-2.45 2h-4.1A2.5 2.5 0 0 0 5.5 8c-.14 0-.28.02-.42.04L3.31 4.5C3.73 4.13 4 3.6 4 3c0-1.1-.9-2-2-2s-2 .9-2 2 .9 2 2 2c.14 0 .28-.02.42-.05L4.14 8.4C3.46 8.85 3 9.62 3 10.5s.46 1.65 1.14 2.1l-1.73 3.45A1.84 1.84 0 0 0 2 16c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2c0-.6-.27-1.13-.69-1.5l1.77-3.54c.14.02.28.04.42.04a2.5 2.5 0 0 0 2.45-2h4.1a2.5 2.5 0 0 0 2.45 2c.14 0 .28-.02.42-.04l1.77 3.54c-.42.37-.69.9-.69 1.5 0 1.1.9 2 2 2s2-.9 2-2-.9-2-2-2z"],
        "layout-circle": ["M18.3 8c-.2-.9-.6-1.7-1.1-2.5.2-.3.3-.7.3-1 0-1.1-.9-2-2-2-.4 0-.7.1-1 .3-.8-.5-1.6-.8-2.5-1.1-.1-1-1-1.7-2-1.7S8.2.8 8 1.7c-.9.3-1.7.6-2.5 1.1-.3-.2-.7-.3-1-.3-1.1 0-2 .9-2 2 0 .4.1.7.3 1-.5.8-.8 1.6-1.1 2.5C.8 8.2 0 9 0 10s.8 1.8 1.7 2c.2.9.6 1.7 1.1 2.5-.2.3-.3.7-.3 1 0 1.1.9 2 2 2 .4 0 .7-.1 1-.3.8.5 1.6.8 2.5 1.1.1 1 1 1.7 2 1.7s1.8-.8 2-1.7c.9-.2 1.7-.6 2.5-1.1.3.2.7.3 1 .3 1.1 0 2-.9 2-2 0-.4-.1-.7-.3-1 .5-.8.8-1.6 1.1-2.5 1-.1 1.7-1 1.7-2s-.8-1.8-1.7-2zm-1.8 5.8c-.3-.2-.6-.3-1-.3-1.1 0-2 .9-2 2 0 .4.1.7.3 1-.6.3-1.2.6-1.9.8-.3-.7-1-1.3-1.9-1.3-.8 0-1.6.5-1.9 1.3-.7-.2-1.3-.4-1.9-.8.2-.3.3-.6.3-1 0-1.1-.9-2-2-2-.4 0-.7.1-1 .3-.3-.6-.6-1.2-.8-1.9.8-.3 1.3-1.1 1.3-1.9s-.5-1.6-1.2-1.8c.2-.7.4-1.3.8-1.9.3.2.6.3 1 .3 1.1 0 2-.9 2-2 0-.4-.1-.7-.3-1 .6-.3 1.2-.6 1.9-.8.2.7 1 1.2 1.8 1.2s1.6-.5 1.9-1.3c.7.2 1.3.4 1.9.8-.2.3-.3.6-.3 1 0 1.1.9 2 2 2 .4 0 .7-.1 1-.3.3.6.6 1.2.8 1.9-.8.3-1.3 1.1-1.3 1.9s.5 1.6 1.2 1.8c-.1.7-.4 1.4-.7 2z"],
        "layout-grid": ["M2 0a2 2 0 1 0 0 4 2 2 0 1 0 0-4zM10 0a2 2 0 1 0 0 4 2 2 0 1 0 0-4zM18 0a2 2 0 1 0 0 4 2 2 0 1 0 0-4zM18 8a2 2 0 1 0 0 4 2 2 0 1 0 0-4zM18 16a2 2 0 1 0 0 4 2 2 0 1 0 0-4zM10 16a2 2 0 1 0 0 4 2 2 0 1 0 0-4zM2 16a2 2 0 1 0 0 4 2 2 0 1 0 0-4zM2 8a2 2 0 1 0 0 4 2 2 0 1 0 0-4zM10 8a2 2 0 1 0 0 4 2 2 0 1 0 0-4z"],
        "layout-group-by": ["M2 2a2 2 0 1 0 0 4 2 2 0 1 0 0-4zM18 0a2 2 0 1 0 0 4 2 2 0 1 0 0-4zM18 8a2 2 0 1 0 0 4 2 2 0 1 0 0-4zM18 16a2 2 0 1 0 0 4 2 2 0 1 0 0-4zM2 14a2 2 0 1 0 0 4 2 2 0 1 0 0-4zM2 8a2 2 0 1 0 0 4 2 2 0 1 0 0-4zM13 12a2 2 0 1 0 0 4 2 2 0 1 0 0-4zM13 4a2 2 0 1 0 0 4 2 2 0 1 0 0-4z"],
        "layout-hierarchy": ["M18.5 16.07v-4.14c.86-.22 1.5-1 1.5-1.93 0-1.1-.9-2-2-2-.93 0-1.71.64-1.93 1.5h-4.14c-.18-.7-.73-1.25-1.43-1.43V3.93c.86-.22 1.5-1 1.5-1.93 0-1.1-.9-2-2-2S8 .9 8 2c0 .93.64 1.71 1.5 1.93v4.14c-.7.18-1.25.73-1.43 1.43H3.93C3.71 8.64 2.93 8 2 8c-1.1 0-2 .9-2 2 0 .93.64 1.71 1.5 1.93v4.14c-.86.22-1.5 1-1.5 1.93 0 1.1.9 2 2 2s2-.9 2-2c0-.93-.64-1.71-1.5-1.93v-4.14c.7-.18 1.25-.73 1.43-1.43h4.14c.18.7.73 1.25 1.43 1.43v4.14c-.86.22-1.5 1-1.5 1.93 0 1.1.9 2 2 2s2-.9 2-2c0-.93-.64-1.71-1.5-1.93v-4.14c.7-.18 1.25-.73 1.43-1.43h4.14c.18.7.73 1.25 1.43 1.43v4.14c-.86.22-1.5 1-1.5 1.93 0 1.1.9 2 2 2s2-.9 2-2c0-.93-.64-1.71-1.5-1.93z"],
        "layout-linear": ["M16.5 7a2.5 2.5 0 0 0-2.45 2h-2.1a2.5 2.5 0 0 0-4.9 0h-2.1a2.5 2.5 0 1 0 0 1h2.1a2.5 2.5 0 0 0 4.9 0h2.1a2.5 2.5 0 1 0 2.45-3z"],
        "layout-skew-grid": ["M2 0a2 2 0 1 0 0 4 2 2 0 1 0 0-4zM18 0a2 2 0 1 0 0 4 2 2 0 1 0 0-4zM18 8a2 2 0 1 0 0 4 2 2 0 1 0 0-4zM18 16a2 2 0 1 0 0 4 2 2 0 1 0 0-4zM2 16a2 2 0 1 0 0 4 2 2 0 1 0 0-4zM2 8a2 2 0 1 0 0 4 2 2 0 1 0 0-4zM10 12a2 2 0 1 0 0 4 2 2 0 1 0 0-4zM10 4a2 2 0 1 0 0 4 2 2 0 1 0 0-4z"],
        "layout-sorted-clusters": ["M2 8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zM2 0C.9 0 0 .9 0 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm16 8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-8 4c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"],
        "left-join": ["M8.7 4.7C7.4 6 6.5 7.9 6.5 10s.8 4 2.2 5.3c-.8.5-1.7.7-2.7.7-3.3 0-6-2.7-6-6s2.7-6 6-6c1 0 1.9.2 2.7.7zM14 4c3.3 0 6 2.7 6 6s-2.7 6-6 6c-1 0-1.9-.2-2.7-.7 1.3-1.3 2.2-3.2 2.2-5.3s-.8-3.9-2.2-5.3C12.1 4.2 13 4 14 4zm.6 2.05c.55 1.2.86 2.54.86 3.95s-.31 2.75-.86 3.95c1.9-.31 3.36-1.96 3.36-3.95S16.5 6.36 14.6 6.05zM10 5.5C8.8 6.7 8 8.2 8 10s.8 3.3 2 4.4c1.2-1.1 2-2.7 2-4.5s-.8-3.3-2-4.4z"],
        "lifesaver": ["M8.143 14.644L7.028 17.43c.919.368 1.922.57 2.972.57s2.053-.202 2.972-.57l-1.115-2.786A4.986 4.986 0 0 1 10 15a4.986 4.986 0 0 1-1.857-.356zm-2.787-2.787A4.986 4.986 0 0 1 5 10c0-.656.126-1.283.356-1.857L2.57 7.028A7.978 7.978 0 0 0 2 10c0 1.05.202 2.053.57 2.972l2.786-1.115zm2.787-6.5A4.986 4.986 0 0 1 10 5c.656 0 1.283.126 1.857.356l1.115-2.786A7.978 7.978 0 0 0 10 2c-1.05 0-2.053.202-2.972.57l1.115 2.786zm6.5 2.786c.23.574.357 1.2.357 1.857 0 .656-.126 1.283-.356 1.857l2.786 1.115c.368-.919.57-1.922.57-2.972s-.202-2.053-.57-2.972l-2.786 1.115zM10 13a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm0 7C4.477 20 0 15.523 0 10S4.477 0 10 0s10 4.477 10 10-4.477 10-10 10z"],
        "lightbulb": ["M6.33 13.39c0 .34.27.61.6.61h6.13c.33 0 .6-.27.6-.61C14.03 9.78 16 9.4 16 6.09 16 2.72 13.31 0 10 0S4 2.72 4 6.09c0 3.31 1.97 3.69 2.33 7.3zM13 15H7c-.55 0-1 .45-1 1s.45 1 1 1h6c.55 0 1-.45 1-1s-.45-1-1-1zm-1 3H8c-.55 0-1 .45-1 1s.45 1 1 1h4c.55 0 1-.45 1-1s-.45-1-1-1z"],
        "link": ["M10.85 11.98l-4.44 4.44-1 1c-.36.36-.86.58-1.41.58-1.1 0-2-.9-2-2 0-.55.22-1.05.59-1.41l5.44-5.44C7.69 9.06 7.36 9 7 9c-1.11 0-2.09.46-2.82 1.18l-.01-.01-3 3 .01.01C.46 13.91 0 14.89 0 16c0 2.21 1.79 4 4 4 1.11 0 2.09-.46 2.82-1.18l.01.01 3-3-.01-.01C10.54 15.09 11 14.11 11 13c0-.36-.06-.69-.15-1.02zM20 4c0-2.21-1.79-4-4-4-1.11 0-2.09.46-2.82 1.18l-.01-.01-3 3 .01.01C9.46 4.91 9 5.89 9 7c0 .36.06.69.15 1.02l4.44-4.44 1-1c.36-.36.86-.58 1.41-.58 1.1 0 2 .9 2 2 0 .55-.22 1.05-.59 1.41l-5.44 5.44c.34.09.67.15 1.03.15 1.11 0 2.09-.46 2.82-1.18l.01.01 3-3-.01-.01C19.54 6.09 20 5.11 20 4zM5 14a1.003 1.003 0 0 0 1.71.71l8-8a1.003 1.003 0 0 0-1.42-1.42l-2 2-2 2-2 2-2 2c-.18.18-.29.43-.29.71z"],
        "list": ["M1.03 1C.46 1 0 1.46 0 2.03v.95C0 3.54.46 4 1.03 4h17.95C19.54 4 20 3.54 20 2.97v-.94C20 1.46 19.54 1 18.97 1H1.03zM0 17.97C0 18.54.46 19 1.03 19h17.95c.56 0 1.03-.46 1.03-1.03v-.95c0-.56-.46-1.03-1.03-1.03H1.03C.46 16 0 16.46 0 17.03v.94zM0 12.97C0 13.54.46 14 1.03 14h17.95c.56 0 1.03-.46 1.03-1.03v-.95c0-.56-.46-1.03-1.03-1.03H1.03C.46 11 0 11.46 0 12.03v.94zM0 7.97C0 8.54.46 9 1.03 9h17.95C19.54 9 20 8.54 20 7.97v-.94C20 6.46 19.54 6 18.97 6H1.03C.46 6 0 6.46 0 7.03v.94z"],
        "list-columns": ["M0 2.973v-.936C0 1.468.46 1.01 1.029 1H7.97C8.541 1 9 1.468 9 2.027v.946C9 3.542 8.53 4 7.971 4H1.03C.459 4 0 3.542 0 2.973zm0 5v-.936C0 6.468.46 6.01 1.029 6H7.97C8.541 6 9 6.468 9 7.027v.946C9 8.542 8.53 9 7.971 9H1.03C.459 9 0 8.542 0 7.973zm0 5v-.936C0 11.468.46 11.01 1.029 11H7.97C8.541 11 9 11.468 9 12.027v.946C9 13.542 8.53 14 7.971 14H1.03C.459 14 0 13.542 0 12.973zm0 5v-.936C0 16.468.46 16.01 1.029 16H7.97C8.541 16 9 16.468 9 17.027v.946C9 18.542 8.53 19 7.971 19H1.03C.459 19 0 18.542 0 17.973zm11-15v-.936c0-.569.46-1.027 1.029-1.037h6.942C19.541 1 20 1.468 20 2.027v.946C20 3.542 19.53 4 18.971 4H12.03C11.459 4 11 3.542 11 2.973zm0 5v-.936c0-.569.46-1.027 1.029-1.037h6.942C19.541 6 20 6.468 20 7.027v.946C20 8.542 19.53 9 18.971 9H12.03C11.459 9 11 8.542 11 7.973zm0 5v-.936c0-.569.46-1.027 1.029-1.037h6.942c.57 0 1.029.468 1.029 1.027v.946c0 .569-.47 1.027-1.029 1.027H12.03c-.57 0-1.029-.458-1.029-1.027zm0 5v-.936c0-.569.46-1.027 1.029-1.037h6.942c.57 0 1.029.468 1.029 1.027v.946c0 .569-.47 1.027-1.029 1.027H12.03c-.57 0-1.029-.458-1.029-1.027z"],
        "list-detail-view": ["M8 6H1c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h7c.55 0 1-.45 1-1V7c0-.55-.45-1-1-1zm0 5H1c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h7c.55 0 1-.45 1-1v-1c0-.55-.45-1-1-1zm0 5H1c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h7c.55 0 1-.45 1-1v-1c0-.55-.45-1-1-1zM8 1H1c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h7c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1zm11 0h-7c-.55 0-1 .45-1 1v16c0 .55.45 1 1 1h7c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1z"],
        "locate": ["M10 8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm9 1h-1.07c-.45-3.61-3.32-6.45-6.93-6.91V1c0-.55-.45-1-1-1S9 .45 9 1v1.09C5.39 2.55 2.52 5.39 2.07 9H1c-.55 0-1 .45-1 1s.45 1 1 1h1.07c.45 3.61 3.32 6.45 6.93 6.91V19c0 .55.45 1 1 1s1-.45 1-1v-1.09c3.61-.46 6.48-3.29 6.93-6.91H19c.55 0 1-.45 1-1s-.45-1-1-1zm-4 2h.9a5.98 5.98 0 0 1-4.9 4.91V15c0-.55-.45-1-1-1s-1 .45-1 1v.91A5.98 5.98 0 0 1 4.1 11H5c.55 0 1-.45 1-1s-.45-1-1-1h-.9A5.98 5.98 0 0 1 9 4.09V5c0 .55.45 1 1 1s1-.45 1-1v-.91A5.98 5.98 0 0 1 15.9 9H15c-.55 0-1 .45-1 1s.45 1 1 1z"],
        "lock": ["M15.93 9H14V4.99c0-2.21-1.79-4-4-4s-4 1.79-4 4V9H3.93c-.55 0-.93.44-.93.99v8c0 .55.38 1.01.93 1.01h12c.55 0 1.07-.46 1.07-1.01v-8c0-.55-.52-.99-1.07-.99zM8 9V4.99c0-1.1.9-2 2-2s2 .9 2 2V9H8z"],
        "log-in": ["M19 0h-8c-.55 0-1 .45-1 1s.45 1 1 1h7v16h-7c-.55 0-1 .45-1 1s.45 1 1 1h8c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-4 10c0-.28-.11-.53-.29-.71l-5-5a1.003 1.003 0 0 0-1.42 1.42L11.59 9H1c-.55 0-1 .45-1 1s.45 1 1 1h10.59L8.3 14.29c-.19.18-.3.43-.3.71a1.003 1.003 0 0 0 1.71.71l5-5c.18-.18.29-.43.29-.71z"],
        "log-out": ["M19.71 9.29l-5-5a1.003 1.003 0 0 0-1.42 1.42L16.59 9H6c-.55 0-1 .45-1 1s.45 1 1 1h10.59l-3.29 3.29c-.19.18-.3.43-.3.71a1.003 1.003 0 0 0 1.71.71l5-5c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71zM9 18H2V2h7c.55 0 1-.45 1-1s-.45-1-1-1H1C.45 0 0 .45 0 1v18c0 .55.45 1 1 1h8c.55 0 1-.45 1-1s-.45-1-1-1z"],
        "manual": ["M20 1.1a.976.976 0 0 0-.83-.88C15.15-.43 12.07.34 10 2.5 7.93.34 4.85-.43.84.22.37.3.03.67 0 1.1v15.01c0 .07 0 .14.01.21.09.52.61.88 1.15.79 3.85-.62 6.4.16 8 2.46.02.02.03.04.05.07.02.02.04.04.06.07l.01.01a1.07 1.07 0 0 0 .28.19c.01 0 .01.01.02.01.03.01.07.03.1.04.01 0 .02.01.04.01.03.01.07.02.1.02.01 0 .02 0 .04.01H10c.04 0 .09 0 .13-.01.01 0 .03 0 .04-.01.03-.01.06-.01.1-.02.01 0 .03-.01.04-.01.03-.01.07-.02.1-.04.01 0 .02-.01.03-.01.07-.03.13-.07.19-.11.01 0 .01-.01.02-.01.02-.02.04-.03.06-.05.01-.01.02-.02.03-.02l.05-.05c.01-.01.02-.02.02-.03.01-.02.02-.03.04-.05 1.61-2.3 4.15-3.09 8-2.46.54.09 1.06-.26 1.15-.79-.01-.05 0-.09 0-.13V1.1zM9 16.63c-1.78-1.31-4.12-1.83-7-1.55V2c3.26-.37 5.51.39 7 2.35v12.28zm9-1.56c-2.88-.28-5.22.24-7 1.55V4.34c1.49-1.96 3.74-2.71 7-2.35v13.08z"],
        "manually-entered-data": ["M1 12h4.34l2-2H1c-.55 0-1 .45-1 1s.45 1 1 1zm16.77-3.94l1.65-1.65c.36-.36.58-.86.58-1.41 0-1.1-.9-2-2-2-.55 0-1.05.22-1.41.59l-1.65 1.65 2.83 2.82zM1 4h12.34l2-2H1c-.55 0-1 .45-1 1s.45 1 1 1zM0 15c0 .55.45 1 1 1h.34l2-2H1c-.55 0-1 .45-1 1zm1-7h8.34l2-2H1c-.55 0-1 .45-1 1s.45 1 1 1zm18 2h-.34l-2 2H19c.55 0 1-.45 1-1s-.45-1-1-1zm0 4h-4.34l-2 2H19c.55 0 1-.45 1-1s-.45-1-1-1zM4 19l4.41-1.59-2.81-2.79L4 19zM14.23 5.94l-7.65 7.65 2.83 2.83 7.65-7.65-2.83-2.83z"],
        "map": ["M19.54 4.18l.01-.02-6-4-.01.02C13.39.08 13.21 0 13 0s-.39.08-.54.18l-.01-.02L7 3.8 1.55.17l-.01.01A.969.969 0 0 0 1 0C.45 0 0 .45 0 1v14c0 .35.19.64.46.82l-.01.02 6 4 .01-.02c.15.1.33.18.54.18s.39-.08.54-.18l.01.02L13 16.2l5.45 3.63.01-.02c.15.11.33.19.54.19.55 0 1-.45 1-1V5c0-.35-.19-.64-.46-.82zM6 17.13l-4-2.67V2.87l4 2.67v11.59zm6-2.67l-4 2.67V5.54l4-2.67v11.59zm6 2.67l-4-2.67V2.87l4 2.67v11.59z"],
        "map-create": ["M18 9.22v7.91l-4-2.67V9.22c-.61-.55-1-1.33-1-2.22-.35 0-.69-.07-1-.18v7.65l-4 2.67V5.54l2.02-1.35c0-.06-.02-.13-.02-.19 0-1.66 1.34-3 3-3 0-.34.07-.66.17-.97C13.12.02 13.06 0 13 0c-.21 0-.39.08-.54.18l-.01-.02L7 3.8 1.55.17l-.01.01A.969.969 0 0 0 1 0C.45 0 0 .45 0 1v14c0 .35.19.64.46.82l-.01.02 6 4 .01-.02c.15.1.33.18.54.18s.39-.08.54-.18l.01.02L13 16.2l5.45 3.63.01-.02c.15.11.33.19.54.19.55 0 1-.45 1-1V6.82c-.31.11-.65.18-1 .18 0 .89-.39 1.67-1 2.22zM6 17.13l-4-2.67V2.87l4 2.67v11.59zM12 4c0 .55.45 1 1 1h2v2c0 .55.45 1 1 1s1-.45 1-1V5h2c.55 0 1-.45 1-1s-.45-1-1-1h-2V1c0-.55-.45-1-1-1s-1 .45-1 1v2h-2c-.55 0-1 .45-1 1z"],
        "map-marker": ["M9.98 0c-3.87 0-7 2.98-7 6.67 0 3.68 7 13.33 7 13.33s7-9.65 7-13.33c0-3.68-3.14-6.67-7-6.67zm0 10c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3z"],
        "maximize": ["M19 0h-5c-.55 0-1 .45-1 1s.45 1 1 1h2.59L11.3 7.29c-.19.18-.3.43-.3.71a1.003 1.003 0 0 0 1.71.71L18 3.41V6c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1zM8 11c-.28 0-.53.11-.71.29L2 16.59V14c0-.55-.45-1-1-1s-1 .45-1 1v5c0 .55.45 1 1 1h5c.55 0 1-.45 1-1s-.45-1-1-1H3.41l5.29-5.29c.19-.18.3-.43.3-.71 0-.55-.45-1-1-1z"],
        "media": ["M15 9c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm4-7H1c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm-1 13l-6-5-2 2-4-5-4 8V4h16v11z"],
        "menu": ["M1 6h18c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1zm18 3H1c-.55 0-1 .45-1 1s.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1zm0 5H1c-.55 0-1 .45-1 1s.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1z"],
        "menu-closed": ["M8 6h11c.55 0 1-.45 1-1s-.45-1-1-1H8c-.55 0-1 .45-1 1s.45 1 1 1zM4 6c-.28 0-.53.11-.71.29l-3 3C.11 9.47 0 9.72 0 10c0 .28.11.53.29.71l3 3A1.003 1.003 0 0 0 5 13V7c0-.55-.45-1-1-1zm15 8H8c-.55 0-1 .45-1 1s.45 1 1 1h11c.55 0 1-.45 1-1s-.45-1-1-1zm0-5H8c-.55 0-1 .45-1 1s.45 1 1 1h11c.55 0 1-.45 1-1s-.45-1-1-1z"],
        "menu-open": ["M12 9H1c-.55 0-1 .45-1 1s.45 1 1 1h11c.55 0 1-.45 1-1s-.45-1-1-1zm0 5H1c-.55 0-1 .45-1 1s.45 1 1 1h11c.55 0 1-.45 1-1s-.45-1-1-1zm0-10H1c-.55 0-1 .45-1 1s.45 1 1 1h11c.55 0 1-.45 1-1s-.45-1-1-1zm7.71 5.29l-3-3A1.003 1.003 0 0 0 15 7v6a1.003 1.003 0 0 0 1.71.71l3-3c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71z"],
        "merge-columns": ["M6.71 6.29a1.003 1.003 0 0 0-1.42 1.42L6.59 9H2V2h5v2.18c.42.15.8.39 1.11.7l.01-.01.88.89V1c0-.55-.45-1-1-1H1C.45 0 0 .45 0 1v18c0 .55.45 1 1 1h7c.55 0 1-.45 1-1v-4.76l-.88.88-.01-.01c-.31.31-.69.56-1.11.71V18H2v-7h4.59L5.3 12.29c-.19.18-.3.43-.3.71a1.003 1.003 0 0 0 1.71.71l3-3c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71l-3-3zM19 0h-7c-.55 0-1 .45-1 1v4.76l.88-.88.01.01c.31-.31.69-.55 1.11-.7V2h5v7h-4.59l1.29-1.29c.19-.18.3-.43.3-.71a1.003 1.003 0 0 0-1.71-.71l-3 3c-.18.18-.29.43-.29.71 0 .28.11.53.29.71l3 3a1.003 1.003 0 0 0 1.42-1.42L13.41 11H18v7h-5v-2.18c-.42-.15-.8-.39-1.11-.7l-.01.01-.88-.89V19c0 .55.45 1 1 1h7c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1z"],
        "merge-links": ["M10 13c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm8-5c-.93 0-1.71.64-1.93 1.5H14V4c0-2.21-1.79-4-4-4S6 1.79 6 4v5.5H3.93C3.71 8.64 2.93 8 2 8c-1.1 0-2 .9-2 2s.9 2 2 2c.93 0 1.71-.64 1.93-1.5H6V16c0 2.21 1.79 4 4 4s4-1.79 4-4v-5.5h2.07c.22.86 1 1.5 1.93 1.5 1.1 0 2-.9 2-2s-.9-2-2-2zm-5 8c0 1.66-1.34 3-3 3s-3-1.34-3-3V4c0-1.66 1.34-3 3-3s3 1.34 3 3v12zM10 3c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"],
        "minimize": ["M8 11H3c-.55 0-1 .45-1 1s.45 1 1 1h2.59L.3 18.29c-.19.18-.3.43-.3.71a1.003 1.003 0 0 0 1.71.71L7 14.41V17c0 .55.45 1 1 1s1-.45 1-1v-5c0-.55-.45-1-1-1zM20 1a1.003 1.003 0 0 0-1.71-.71L13 5.59V3c0-.55-.45-1-1-1s-1 .45-1 1v5c0 .55.45 1 1 1h5c.55 0 1-.45 1-1s-.45-1-1-1h-2.59l5.29-5.29c.19-.18.3-.43.3-.71z"],
        "minus": ["M16 9H4c-.55 0-1 .45-1 1s.45 1 1 1h12c.55 0 1-.45 1-1s-.45-1-1-1z"],
        "mobile-phone": ["M15 0H5c-.55 0-1 .45-1 1v18c0 .55.45 1 1 1h10c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-5 19c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm4-3H6V3h8v13z"],
        "mobile-video": ["M19 5c-.28 0-.53.11-.71.29L15 8.59V5c0-.55-.45-1-1-1H1c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h13c.55 0 1-.45 1-1v-3.59l3.29 3.29c.18.19.43.3.71.3.55 0 1-.45 1-1V6c0-.55-.45-1-1-1z"],
        "moon": ["M19 14.15A9.94 9.94 0 0 1 9.94 20C4.45 20 0 15.55 0 10.06 0 6.03 2.4 2.56 5.85 1a9.811 9.811 0 0 0-.88 4.09c0 5.49 4.45 9.94 9.94 9.94 1.46 0 2.84-.31 4.09-.88z"],
        "more": ["M3.5 8a2.5 2.5 0 1 0 0 5 2.5 2.5 0 1 0 0-5zM17.5 8a2.5 2.5 0 1 0 0 5 2.5 2.5 0 1 0 0-5zM10.5 8a2.5 2.5 0 1 0 0 5 2.5 2.5 0 1 0 0-5z"],
        "mountain": ["M20 16H4l7-11h1l2 2h1l5 9zm-4-5l-1.5-3h-1l-1-1-1-1L8 11.5l3-1.5 1 1 1-1 3 1zM8.055 8L2.79 16H0l7-8h1.055z"],
        "move": ["M19.71 9.29l-3-3a1.003 1.003 0 0 0-1.42 1.42L16.59 9H11V3.41l1.29 1.29c.18.19.43.3.71.3a1.003 1.003 0 0 0 .71-1.71l-3-3C10.53.11 10.28 0 10 0s-.53.11-.71.29l-3 3a1.003 1.003 0 0 0 1.42 1.42L9 3.41V9H3.41L4.7 7.71c.19-.18.3-.43.3-.71a1.003 1.003 0 0 0-1.71-.71l-3 3C.11 9.47 0 9.72 0 10c0 .28.11.53.29.71l3 3a1.003 1.003 0 0 0 1.42-1.42L3.41 11H9v5.59L7.71 15.3A.965.965 0 0 0 7 15a1.003 1.003 0 0 0-.71 1.71l3 3c.18.18.43.29.71.29s.53-.11.71-.29l3-3a1.003 1.003 0 0 0-1.42-1.42L11 16.59V11h5.59l-1.29 1.29c-.19.18-.3.43-.3.71a1.003 1.003 0 0 0 1.71.71l3-3c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71z"],
        "mugshot": ["M19 0H1C.45 0 0 .45 0 1v18c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 18h-.07c-.05-.2-.12-.42-.22-.67-.46-1.05-2.68-1.75-4.16-2.4-1.48-.65-1.28-1.05-1.33-1.59-.01-.07-.01-.15-.01-.23.51-.45.92-1.07 1.19-1.78 0 0 .01-.04.02-.05.06-.15.11-.32.15-.48.34-.07.54-.44.61-.78.08-.14.23-.48.2-.87-.05-.5-.25-.73-.47-.82v-.09c0-.63-.06-1.55-.17-2.15-.02-.17-.06-.33-.11-.5a3.67 3.67 0 0 0-1.29-1.86C11.7 3.25 10.81 3 10.02 3s-1.68.25-2.31.73c-.61.47-1.07 1.13-1.29 1.86-.05.16-.09.33-.11.5-.12.6-.17 1.51-.17 2.14v.08c-.24.09-.44.32-.49.83-.04.39.12.73.2.87.08.35.28.72.63.78.04.17.09.33.15.48 0 .01.01.02.01.03l.01.01c.27.72.7 1.35 1.22 1.8 0 .07-.01.14-.01.21-.05.54.1.94-1.38 1.59-1.48.65-3.7 1.35-4.16 2.4-.12.27-.18.49-.23.69H2V2h16v16z"],
        "multi-select": ["M19 3H7c-.55 0-1 .45-1 1v1h12v6h1c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1zm-6 6H1c-.55 0-1 .45-1 1v6c0 .55.45 1 1 1h12c.55 0 1-.45 1-1v-6c0-.55-.45-1-1-1zm-1 6H2v-4h10v4zm4-9H4c-.55 0-1 .45-1 1v1h12v6h1c.55 0 1-.45 1-1V7c0-.55-.45-1-1-1z"],
        "music": ["M19 0c-.08 0-.16.03-.24.05V.03l-12 3v.02C6.33 3.16 6 3.53 6 4v11.35c-.59-.22-1.27-.35-2-.35-2.21 0-4 1.12-4 2.5S1.79 20 4 20c1.94 0 3.55-.86 3.92-2H8V7.78l10-2.5v7.07c-.59-.22-1.27-.35-2-.35-2.21 0-4 1.12-4 2.5s1.79 2.5 4 2.5c1.94 0 3.55-.86 3.92-2H20V1c0-.55-.45-1-1-1z"],
        "new-grid-item": ["M8 0H1C.45 0 0 .45 0 1v7c0 .55.45 1 1 1h7c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm0 11H1c-.55 0-1 .45-1 1v7c0 .55.45 1 1 1h7c.55 0 1-.45 1-1v-7c0-.55-.45-1-1-1zm6 7h-1v-1c0-.55-.45-1-1-1s-1 .45-1 1v2c0 .55.45 1 1 1h2c.55 0 1-.45 1-1s-.45-1-1-1zm5-7h-2c-.55 0-1 .45-1 1s.45 1 1 1h1v1c0 .55.45 1 1 1s1-.45 1-1v-2c0-.55-.45-1-1-1zm0-11h-7c-.55 0-1 .45-1 1v7c0 .55.45 1 1 1h7c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-5 11h-2c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1s1-.45 1-1v-1h1c.55 0 1-.45 1-1s-.45-1-1-1zm5 5c-.55 0-1 .45-1 1v1h-1c-.55 0-1 .45-1 1s.45 1 1 1h2c.55 0 1-.45 1-1v-2c0-.55-.45-1-1-1z"],
        "new-link": ["M14.5 12a2.5 2.5 0 0 0-2.45 2h-7.1a2.5 2.5 0 1 0 0 1h7.1a2.5 2.5 0 1 0 2.45-3zM19 5h-2V3c0-.55-.45-1-1-1s-1 .45-1 1v2h-2c-.55 0-1 .45-1 1s.45 1 1 1h2v2c0 .55.45 1 1 1s1-.45 1-1V7h2c.55 0 1-.45 1-1s-.45-1-1-1z"],
        "new-object": ["M12 4c0 .6.4 1 1 1h2v2c0 .6.4 1 1 1 .5 0 1-.4 1-1V5h2c.5 0 1-.4 1-1s-.5-1-1-1h-2V1c0-.6-.5-1-1-1-.6 0-1 .4-1 1v2h-2c-.6 0-1 .5-1 1zm7 3c0 1.7-1.3 3-3 3s-3-1.3-3-3c-1.7 0-3-1.3-3-3s1.3-3 3-3c0-.2 0-.4.1-.5-1-.3-2-.5-3.1-.5C4.5 0 0 4.5 0 10s4.5 10 10 10 10-4.5 10-10c0-1.1-.2-2.1-.5-3H19z"],
        "new-person": ["M11.41 15.92c-1.46-.65-1.26-1.05-1.31-1.59-.01-.07-.01-.15-.01-.23.5-.45.91-1.07 1.18-1.78 0 0 .01-.04.02-.05.06-.15.11-.32.15-.48.33-.07.53-.44.6-.78.08-.14.23-.48.2-.87-.05-.5-.24-.73-.47-.82v-.09c0-.63-.06-1.55-.17-2.15-.02-.17-.06-.33-.11-.5-.22-.73-.67-1.4-1.27-1.86C9.58 4.25 8.7 4 7.92 4c-.78 0-1.66.25-2.28.73-.61.47-1.06 1.13-1.27 1.86-.05.16-.08.33-.11.5-.12.6-.18 1.51-.18 2.14v.08c-.23.09-.43.32-.48.83-.04.39.12.73.2.87.08.35.28.72.62.78.04.17.09.33.15.48 0 .01.01.02.01.03l.01.01c.27.72.69 1.35 1.21 1.8 0 .07-.01.14-.01.21-.05.54.1.94-1.36 1.59-1.46.65-3.66 1.35-4.11 2.4C-.14 19.38.04 20 .04 20h15.75s.18-.62-.27-1.67c-.45-1.06-2.65-1.75-4.11-2.41zM18.87 3h-2V1c0-.55-.45-1-1-1s-1 .45-1 1v2h-2c-.55 0-1 .45-1 1s.45 1 1 1h2v2c0 .55.45 1 1 1s1-.45 1-1V5h2c.55 0 1-.45 1-1s-.45-1-1-1z"],
        "new-prescription": ["M11.95 10.23c.16-.18.22-.22.46-.22h1.48c.25 0 .47.08.59.33.1.2.09.41-.05.66l-2.71 3.58L14.88 19c.13.21.16.46.03.69-.12.21-.34.31-.57.31H12.7c-.31 0-.56-.17-.7-.44l-1.9-2.67-1.93 2.68c-.15.27-.42.43-.73.43H5.98c-.25 0-.47-.08-.59-.33-.1-.2-.09-.41.05-.66l3.09-4.35L4.26 9H3v4.32c0 .41-.3.69-.7.69H.7c-.41 0-.7-.28-.7-.69V.69C0 .28.3 0 .7 0h4.42c.71 0 1.36.1 1.94.3.59.2 1.11.49 1.54.87.44.38.78.84 1.02 1.39.25.54.37 1.13.37 1.77 0 1.01-.28 1.88-.84 2.6-.43.54-1.35 1.29-2 1.59l3.09 3.94 1.71-2.23zM4.71 6.04c.71 0 1.45-.16 1.81-.46.33-.28.5-.69.5-1.25s-.17-.97-.5-1.25c-.35-.3-1.1-.46-1.81-.46h-1.7v3.42h1.7zM19 3c.55 0 1 .45 1 1s-.45 1-1 1h-2v2c0 .55-.45 1-1 1s-1-.45-1-1V5h-2c-.55 0-1-.45-1-1s.45-1 1-1h2V1c0-.55.45-1 1-1s1 .45 1 1v2h2z"],
        "new-text-box": ["M19 3h-2V1c0-.55-.45-1-1-1s-1 .45-1 1v2h-2c-.55 0-1 .45-1 1s.45 1 1 1h2v2c0 .55.45 1 1 1s1-.45 1-1V5h2c.55 0 1-.45 1-1s-.45-1-1-1zM5 7.5v1c0 .28.22.5.5.5s.5-.22.5-.5V8h2v7h-.5c-.28 0-.5.22-.5.5s.22.5.5.5h2c.28 0 .5-.22.5-.5s-.22-.5-.5-.5H9V8h2v.5c0 .28.22.5.5.5s.5-.22.5-.5v-1c0-.28-.22-.5-.5-.5h-6c-.28 0-.5.22-.5.5zM16 9c-.55 0-1 .45-1 1v8H2V5h8c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1v15c0 .55.45 1 1 1h15c.55 0 1-.45 1-1v-9c0-.55-.45-1-1-1z"],
        "ninja": ["M20 6s-2.98 2.43-6.12 2.19C13.52 5.31 12.05 0 6 0c0 0 2.41 2.99 2.16 6.12C5.27 6.49 0 7.97 0 14c0 0 2.98-2.43 6.11-2.19C6.47 14.69 7.94 20 14 20c0 0-2.42-2.99-2.16-6.13C14.73 13.51 20 12.02 20 6zm-10 6c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z"],
        "notifications": ["M10 20c1.1 0 2-.9 2-2H8c0 1.1.9 2 2 2zm7-5c-.55 0-1-.45-1-1V8c0-2.61-1.67-4.81-4-5.63V2c0-1.1-.9-2-2-2S8 .9 8 2v.37C5.67 3.19 4 5.39 4 8v6c0 .55-.45 1-1 1s-1 .45-1 1 .45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1z"],
        "notifications-updated": ["M10 20c1.1 0 2-.9 2-2H8c0 1.1.9 2 2 2zm2-17.834A2.994 2.994 0 0 0 8 4.99c0 .808.319 1.557.876 2.114l2.97 2.99a2.99 2.99 0 0 0 4.154.072V14c0 .55.45 1 1 1s1 .45 1 1-.45 1-1 1H3c-.55 0-1-.45-1-1s.45-1 1-1 1-.45 1-1V8c0-2.61 1.67-4.81 4-5.63V2c0-1.1.9-2 2-2s2 .9 2 2v.166zm1.26 6.514l-2.97-2.99a.973.973 0 0 1-.29-.7c0-.55.44-1 .99-1 .27 0 .52.11.7.29l2.28 2.28 4.27-4.27a.99.99 0 0 1 .7-.29c.55 0 1 .45 1 1 0 .28-.11.53-.3.7l-4.98 4.98a.99.99 0 0 1-1.4 0z"],
        "numbered-list": ["M1.74 9.01h1.27V1h-.95c-.04.24-.12.45-.26.62-.13.17-.29.3-.47.41-.19.11-.4.18-.63.23-.23.04-.46.07-.71.07v1.03h1.75v5.65zm.43 7.93c.18-.14.37-.28.58-.43.21-.14.42-.29.63-.45.21-.16.41-.33.61-.5.2-.18.37-.38.52-.59.15-.21.28-.45.37-.7.09-.25.14-.54.14-.85 0-.25-.04-.52-.12-.8-.08-.28-.21-.54-.39-.78-.19-.24-.43-.44-.73-.59-.3-.17-.68-.25-1.12-.25-.41 0-.77.08-1.08.23-.32.16-.58.37-.8.64-.22.27-.38.59-.49.96-.11.37-.16.77-.16 1.21h1.19c.01-.28.03-.53.08-.77s.12-.45.21-.62c.09-.18.22-.31.38-.42.16-.1.35-.15.59-.15.26 0 .47.05.63.14.16.09.29.21.38.35.09.14.15.29.18.45.03.16.05.31.05.45-.01.31-.08.58-.22.81-.14.24-.32.45-.53.66-.22.2-.45.39-.71.57-.26.18-.51.36-.74.54-.5.36-.89.78-1.17 1.27-.3.47-.45 1.04-.46 1.69H5v-1.14H1.43c.05-.17.14-.33.27-.49.13-.15.29-.3.47-.44zM18 4.02H8c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h10c.55 0 1-.45 1-1v-1c0-.56-.45-1-1-1zm0 9H8c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h10c.55 0 1-.45 1-1v-1c0-.56-.45-1-1-1z"],
        "numerical": ["M2.39 5.75c-.17.21-.38.39-.63.52s-.52.23-.83.29c-.3.05-.61.08-.93.08v1.24h2.49V15h1.49V4.98H2.73c-.05.31-.17.57-.34.77zm17.2 4.71c-.27-.44-.65-.71-1.14-.82v-.02c.42-.16.72-.43.92-.79.2-.36.29-.79.29-1.27 0-.42-.08-.8-.23-1.12-.15-.33-.36-.59-.62-.8-.26-.21-.55-.37-.87-.48-.32-.11-.65-.16-.98-.16-.43 0-.82.08-1.16.25-.34.16-.63.39-.87.69-.24.29-.43.64-.57 1.04-.14.4-.22.83-.23 1.3h1.39c-.01-.25.02-.49.07-.72.06-.23.14-.44.26-.63s.27-.34.45-.45c.18-.11.39-.17.63-.17.39 0 .71.12.96.37s.37.58.37.99c0 .29-.05.54-.16.74-.11.2-.25.36-.43.47-.18.11-.38.19-.61.24-.23.05-.46.06-.68.05v1.17c.28-.01.55 0 .81.03s.5.1.71.21c.21.11.38.28.51.5.13.22.2.52.2.89 0 .55-.16.97-.47 1.27-.31.3-.7.45-1.17.45-.55 0-.95-.19-1.23-.58-.27-.39-.4-.88-.38-1.46h-1.39c.01.5.08.96.21 1.38.13.41.32.77.57 1.06.25.29.56.52.93.68.37.16.8.24 1.3.24.41 0 .79-.07 1.16-.21.37-.14.69-.33.96-.58.28-.25.5-.56.66-.92a3 3 0 0 0 .24-1.23c0-.64-.14-1.17-.41-1.61zM8.58 12.41c.21-.18.45-.36.7-.53.25-.18.5-.36.75-.56.25-.2.49-.41.73-.63.23-.22.44-.47.63-.74.18-.27.33-.56.44-.88.11-.32.16-.67.16-1.07 0-.32-.05-.65-.14-1-.09-.35-.25-.68-.47-.97-.22-.3-.51-.55-.87-.74-.36-.2-.81-.29-1.35-.29-.49 0-.93.1-1.3.29-.37.18-.69.44-.95.78-.26.33-.45.73-.58 1.2-.13.46-.2.96-.2 1.5h1.43c.01-.35.04-.67.09-.97.05-.3.14-.56.25-.78.11-.22.26-.39.45-.52s.43-.19.71-.19c.31 0 .56.06.75.18.19.12.34.26.45.43.11.17.18.36.22.56.04.2.06.39.06.57-.01.38-.1.72-.26 1.02-.15.3-.37.57-.63.83-.26.25-.54.49-.85.71-.31.22-.61.45-.89.68-.6.45-1.06.98-1.41 1.58-.35.61-.52 1.32-.53 2.13h6.01v-1.43H7.69c.06-.21.17-.42.33-.61s.34-.38.56-.55z"],
        "office": ["M19 6h-5V1c0-.55-.45-1-1-1H1C.45 0 0 .45 0 1v18c0 .55.45 1 1 1h4v-6h4v6h10c.55 0 1-.45 1-1V7c0-.55-.45-1-1-1zM6 12H2V8h4v4zm0-6H2V2h4v4zm6 6H8V8h4v4zm0-6H8V2h4v4zm6 11h-4v-3h4v3zm0-5h-4V8h4v4z"],
        "offline": ["M10 0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zM7 18l2-7H5l8-9-2 7h4l-8 9z"],
        "oil-field": ["M19 17.99h-1.36l-4.35-9.57 2.91-.86 1.66 4.1c.11.27.43.4.72.31.12-.04.22-.11.28-.2.06-.11 1.47-2.08 1.05-5.6C19.79 5.12 19.3 0 16.01 0 14.89.01 13.99.83 14 1.84c0 .19.04.38.1.56l1.34 3.31L.72 10.03v.02c-.41.12-.72.49-.72.94 0 .55.45 1 1 1 .1 0 .19-.03.28-.06v.02l2-.59 1.47 6.63H3c-.55 0-1 .45-1 1s.45 1 1 1h16c.55 0 1-.45 1-1s-.45-1-1-1zM5.2 10.8l3.95-1.16-2.83 6.22L5.2 10.8zm2.35 7.19l3.95-8.68 3.95 8.68h-7.9z"],
        "one-column": ["M14.94 0h-4c-.55 0-1 .45-1 1v18c0 .55.45 1 1 1h4c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-8 6c-.28 0-.53.11-.71.29l-3 3c-.18.18-.29.43-.29.71s.11.53.29.71l3 3A1.003 1.003 0 0 0 7.94 13V7c0-.55-.45-1-1-1z"],
        "outdated": ["M10 0c5.52 0 10 4.48 10 10s-4.48 10-10 10S0 15.52 0 10c0-.55.45-1 1-1s1 .45 1 1c0 4.42 3.58 8 8 8s8-3.58 8-8-3.58-8-8-8C7.47 2 5.22 3.17 3.76 5H5c.55 0 1 .45 1 1s-.45 1-1 1H1c-.55 0-1-.45-1-1V2c0-.55.45-1 1-1s1 .45 1 1v2.05C3.82 1.6 6.71 0 10 0zm1 16H9v-2h2v2zm0-3H9V4h2v9z"],
        "page-layout": ["M19 1H1c-.55 0-1 .45-1 1v16c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1zM7 17H2V8h5v9zm11 0H8V8h10v9zm0-10H2V3h16v4z"],
        "panel-stats": ["M1 1h18a1 1 0 0 1 1 1v15a1 1 0 0 1-1 1H1a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1zm1 2v13h16V3H2zm9 0h1v13h-1V3zm2 7h3.952v1H13v-1zm0 2h3.952v1H13v-1zm0 2h3.952v1H13v-1zm0-6h3.952v1H13V8zm0-2h3.952v1H13V6zm0-2h3.952v1H13V4z"],
        "panel-table": ["M19 1H1c-.6 0-1 .4-1 1v15c0 .6.4 1 1 1h18c.6 0 1-.4 1-1V2c0-.6-.4-1-1-1zm-9 11H7V9h3v3zm0-4H7V5h3v3zm-8 8V3h4v13H2zm5 0v-3h3v3H7zm11 0h-7v-3h7v3zm0-4h-7V9h7v3zm0-4h-7V5h7v3z"],
        "paperclip": ["M18.35 2.67A5.664 5.664 0 0 0 14.33 1c-1.44 0-2.89.56-3.99 1.67l-9.16 9.27C.4 12.73 0 13.78 0 14.83s.39 2.1 1.18 2.9c.78.79 1.82 1.18 2.85 1.18 1.04 0 2.07-.39 2.87-1.2l9.14-9.27c.96-.96.96-2.5.02-3.45-.94-.95-2.49-.96-3.44 0l-7.59 7.69c-.31.32-.3.83.01 1.14.31.31.81.31 1.13.02l7.59-7.69c.31-.31.84-.31 1.13-.02.31.31.31.85 0 1.16l-9.14 9.27c-.93.95-2.54.93-3.45.02-.94-.95-.92-2.55.02-3.49l9.16-9.25c1.55-1.56 4.18-1.59 5.72-.03 1.56 1.57 1.55 4.26 0 5.82l-8.89 9.02c-.3.31-.3.81.01 1.11.3.3.79.31 1.1.01v.01l8.91-9.02A5.645 5.645 0 0 0 20 6.73c0-1.48-.55-2.94-1.65-4.06z"],
        "paragraph": ["M16.5 1H7C4.2 1 2 3.2 2 6s2.2 5 5 5v6.5c0 .8.7 1.5 1.5 1.5s1.5-.7 1.5-1.5V4h2v13.5c0 .8.7 1.5 1.5 1.5s1.5-.7 1.5-1.5V4h1.5c.8 0 1.5-.7 1.5-1.5S17.3 1 16.5 1z"],
        "path": ["M18 0H2C.9 0 0 .9 0 2s.9 2 2 2h7v4H4c-1.1 0-2 .9-2 2s.9 2 2 2h5v4H6c-1.1 0-2 .9-2 2s.9 2 2 2h8c1.1 0 2-.9 2-2s-.9-2-2-2h-3v-4h5c1.1 0 2-.9 2-2s-.9-2-2-2h-5V4h7c1.1 0 2-.9 2-2s-.9-2-2-2z"],
        "path-search": ["M4 7c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm15 11.69l-5-2.5v-3.63c-.32.11-.66.22-1 .29v3.32l-6 2.57v-7.25c-.36-.27-.69-.57-1-.9v8.1l-5-2.5V10c.55 0 1-.45 1-1s-.45-1-1-1V1.31l3.43 1.71c.11-.31.24-.62.39-.92L.72.05A.545.545 0 0 0 .5 0C.22 0 0 .22 0 .5v16c0 .2.12.36.28.44l6 3c.07.04.14.06.22.06.07 0 .14-.01.2-.04l6.79-2.91 5.79 2.9c.07.03.14.05.22.05.28 0 .5-.22.5-.5v-4.21c-.31.13-.64.21-1 .21v3.19zM10 5c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm3-1c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm6.72-.94l-1.43-.72c.2.43.36.89.48 1.36l.23.11V5.5c-.55 0-1 .45-1 1s.45 1 1 1v1.96l1 1V3.5c0-.2-.12-.36-.28-.44zm-3.69 5.56c.14-.21.27-.42.38-.65.02-.04.04-.07.05-.11.11-.22.2-.45.28-.69v-.01c.07-.24.13-.48.17-.73l.03-.17c.04-.25.06-.5.06-.76C17 2.46 14.54 0 11.5 0S6 2.46 6 5.5 8.46 11 11.5 11c.26 0 .51-.02.76-.06l.17-.03c.25-.04.49-.1.73-.17h.01c.24-.08.47-.17.69-.28.04-.02.07-.03.11-.05.23-.11.44-.24.65-.38l.18.18 3.5 3.5c.17.18.42.29.7.29a1.003 1.003 0 0 0 .71-1.71l-3.68-3.67zm-4.53.88c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4z"],
        "pause": ["M7 3H4c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1zm9 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1z"],
        "people": ["M16.94 17a4.92 4.92 0 0 0-.33-1.06c-.45-.97-1.37-1.52-3.24-2.3-.17-.07-.76-.31-.77-.32-.1-.04-.2-.08-.28-.12.05-.14.04-.29.06-.45 0-.05.01-.11.01-.16-.25-.21-.47-.48-.65-.79.22-.34.41-.71.56-1.12l.04-.11c-.01.02-.01.02-.02.08l.06-.15c.36-.26.6-.67.72-1.13.18-.37.29-.82.25-1.3-.05-.5-.21-.92-.47-1.22-.02-.53-.06-1.11-.12-1.59.38-.17.83-.26 1.24-.26.59 0 1.26.19 1.73.55.46.35.8.85.97 1.4.04.13.07.25.08.38.08.45.13 1.14.13 1.61v.07c.16.07.31.24.35.62.02.29-.09.55-.15.65-.05.26-.2.53-.46.59-.03.12-.07.25-.11.36-.01.01-.01.04-.01.04-.2.53-.51 1-.89 1.34 0 .06 0 .12.01.17.04.41-.11.71 1 1.19 1.1.5 2.77 1.01 3.13 1.79.34.79.2 1.25.2 1.25h-3.04zm-5.42-3.06c1.47.66 3.7 1.35 4.18 2.39.45 1.05.27 1.67.27 1.67H.04s-.19-.62.27-1.67c.46-1.05 2.68-1.75 4.16-2.4 1.48-.65 1.33-1.05 1.38-1.59 0-.07.01-.14.01-.21-.52-.45-.95-1.08-1.22-1.8l-.01-.01c0-.01-.01-.02-.01-.03-.07-.15-.12-.32-.16-.49-.34-.06-.54-.43-.62-.78-.08-.14-.24-.48-.2-.87.05-.51.26-.74.49-.83v-.08c0-.64.05-1.55.17-2.15a3.648 3.648 0 0 1 1.4-2.36C6.32 2.25 7.21 2 8 2s1.68.25 2.31.73a3.63 3.63 0 0 1 1.4 2.36c.11.6.17 1.52.17 2.15v.09c.22.09.42.32.47.82.03.39-.12.73-.2.87-.07.34-.27.71-.61.78-.04.16-.09.33-.15.48-.01.01-.02.05-.02.05-.27.71-.68 1.33-1.19 1.78 0 .08 0 .16.01.23.05.55-.15.95 1.33 1.6z"],
        "percentage": ["M15 10c-1.66 0-3 1.34-3 3v2c0 1.66 1.34 3 3 3s3-1.34 3-3v-2c0-1.66-1.34-3-3-3zm1 5c0 .55-.45 1-1 1s-1-.45-1-1v-2c0-.55.45-1 1-1s1 .45 1 1v2zM8 7V5c0-1.66-1.34-3-3-3S2 3.34 2 5v2c0 1.66 1.34 3 3 3s3-1.34 3-3zM4 7V5c0-.55.45-1 1-1s1 .45 1 1v2c0 .55-.45 1-1 1s-1-.45-1-1zm11-4a1.003 1.003 0 0 0-1.88-.48L5.14 16.49a1.003 1.003 0 0 0 1.74.99l7.99-13.97c.08-.15.13-.32.13-.51z"],
        "person": ["M19.61 17.91c-.57-1.32-3.35-2.19-5.19-3.01-1.85-.82-1.59-1.31-1.66-1.99-.01-.09-.01-.19-.02-.29.63-.56 1.15-1.33 1.49-2.22 0 0 .02-.05.02-.06.07-.19.13-.39.19-.6.42-.09.67-.55.76-.98.1-.17.29-.6.25-1.08-.06-.62-.31-.91-.59-1.03v-.11c0-.79-.07-1.93-.22-2.68A4.55 4.55 0 0 0 12.9.92C12.11.32 11 0 10.01 0s-2.1.32-2.89.92a4.55 4.55 0 0 0-1.74 2.94c-.14.75-.22 1.89-.22 2.68v.1c-.29.11-.55.4-.61 1.04-.04.48.15.91.25 1.08.1.44.35.91.79.98.05.21.12.41.19.6 0 .01.01.03.01.04l.01.02c.34.91.87 1.69 1.52 2.25 0 .09-.01.18-.02.26-.07.68.13 1.17-1.72 1.99S.96 16.59.39 17.91C-.18 19.23.05 20 .05 20h19.9s.23-.77-.34-2.09z"],
        "phone": ["M19.91 15.51c-.08-.08-4.21-2.5-4.35-2.57a.876.876 0 0 0-.4-.1c-.19 0-.42.13-.71.4-.28.27-1.17 1.49-1.43 1.76s-.48.4-.65.4c-.08 0-.19-.02-.32-.07s-1.45-.73-4.2-3.15-3.11-4-3.13-4.44c0-.17.13-.39.4-.65.28-.25.57-.51.89-.74.32-.24.61-.5.88-.78s.4-.52.4-.71c0-.13-.03-.27-.1-.4C7.12 4.32 4.62.19 4.53.1c-.19-.18-.92-.1-1.29.1C.25 1.82 0 4 .05 4.86c.05.89.61 5.58 5.2 9.93 5.7 5.41 9.66 5.2 9.92 5.2.87 0 3.52-.48 4.65-3.19.16-.38.31-1.07.09-1.29z"],
        "pie-chart": ["M9 .98c-4.5.5-8 4.31-8 8.94 0 4.97 4.03 9.04 9 9.04 4.63 0 8.44-3.96 8.94-7.96H9V.98z", "M10-.08V10h10C20 4 15.52-.08 10-.08z"],
        "pin": ["M11.77 1.16c-.81.81-.74 2.28.02 3.76L6.1 8.71c-2.17-1.46-4.12-2-4.94-1.18l4.95 4.95-4.95 6.36 6.36-4.95 4.95 4.95c.82-.82.27-2.77-1.19-4.94l3.8-5.69c1.47.76 2.94.84 3.76.02l-7.07-7.07z"],
        "pivot": ["M5.83 9.75L.29 15.29a1.003 1.003 0 0 0 1.42 1.42l5.54-5.54c-.57-.37-1.05-.85-1.42-1.42zM19 11c-.55 0-1 .45-1 1v1.59l-3.83-3.83c-.37.56-.85 1.04-1.41 1.41L16.59 15H15c-.55 0-1 .45-1 1s.45 1 1 1h4c.55 0 1-.45 1-1v-4c0-.55-.45-1-1-1zm-5-4c0-2.21-1.79-4-4-4S6 4.79 6 7s1.79 4 4 4 4-1.79 4-4zm-4 2c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z"],
        "pivot-table": ["M3 5H1c-.55 0-1 .45-1 1v13c0 .55.45 1 1 1h2c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm0-5H1C.45 0 0 .45 0 1v2c0 .55.45 1 1 1h2c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm13.71 5.29C16.53 5.11 16.28 5 16 5s-.53.11-.71.29l-3 3a1.003 1.003 0 0 0 1.42 1.42L15 8.41V11c0 2.21-1.79 4-4 4H8.41l1.29-1.29c.19-.18.3-.43.3-.71a1.003 1.003 0 0 0-1.71-.71l-3 3c-.18.18-.29.43-.29.71 0 .28.11.53.29.71l3 3a1.003 1.003 0 0 0 1.42-1.42L8.41 17H11c3.31 0 6-2.69 6-6V8.41l1.29 1.29c.18.19.43.3.71.3a1.003 1.003 0 0 0 .71-1.71l-3-3zM19 0H6c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h13c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1z"],
        "play": ["M16 10c0-.36-.2-.67-.49-.84l.01-.01-10-6-.01.01A.991.991 0 0 0 5 3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1 .19 0 .36-.07.51-.16l.01.01 10-6-.01-.01c.29-.17.49-.48.49-.84z"],
        "plus": ["M16 9h-5V4c0-.55-.45-1-1-1s-1 .45-1 1v5H4c-.55 0-1 .45-1 1s.45 1 1 1h5v5c0 .55.45 1 1 1s1-.45 1-1v-5h5c.55 0 1-.45 1-1s-.45-1-1-1z"],
        "polygon-filter": ["M18 7c-.27 0-.52.05-.75.15l-6.28-4.88c.01-.09.03-.18.03-.27 0-1.1-.9-2-2-2S7 .9 7 2c0 .06.01.12.02.19l-4.19 3C2.57 5.07 2.29 5 2 5 .9 5 0 5.9 0 7c0 .74.4 1.38 1 1.72v7.55c-.6.35-1 .99-1 1.73 0 1.1.9 2 2 2 .74 0 1.38-.4 1.72-1h7.55c.35.6.98 1 1.72 1 1.1 0 2-.9 2-2 0-.37-.11-.72-.29-1.02L18.03 11A2 2 0 0 0 18 7zm-5.03 9c-.72.01-1.35.41-1.69 1H3.72c-.17-.3-.42-.55-.72-.72V8.72c.6-.34 1-.98 1-1.72 0-.06-.01-.12-.02-.19l4.19-3c.26.12.54.19.83.19.27 0 .52-.05.75-.15l6.28 4.88c-.01.09-.03.18-.03.27 0 .37.11.72.29 1.02L12.97 16z"],
        "power": ["M10 10c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1S9 .45 9 1v8c0 .55.45 1 1 1zm3-7.45v2.16c2.36 1.12 4 3.5 4 6.29 0 3.87-3.13 7-7 7s-7-3.13-7-7c0-2.79 1.64-5.17 4-6.29V2.55C3.51 3.79 1 7.09 1 11a9 9 0 0 0 18 0c0-3.91-2.51-7.21-6-8.45z"],
        "predictive-analysis": ["M20 8.01c0-1.26-.61-2.43-1.61-3.12C17.86 2.5 15.8.79 13.4.79c-.58 0-1.14.1-1.69.29A3.533 3.533 0 0 0 9.17 0C8.05 0 7 .55 6.32 1.45c-.15-.02-.3-.03-.45-.03-1.63 0-3.03 1.12-3.46 2.71C.97 4.65 0 6.05 0 7.66c0 .48.09.95.26 1.4-.17.44-.26.91-.26 1.39 0 1.38.72 2.64 1.89 3.29.67.7 1.59 1.09 2.54 1.09.61 0 1.19-.15 1.71-.45.68.82 1.68 1.3 2.73 1.3.66 0 1.28-.18 1.83-.52.61.49 1.34.81 2.11.91 1.3 1.43 2.3 3.28 2.31 3.3 0 0 .35.61.33.61.96-.01 1.77-.2 1.64-1.3.01.02-.92-2.89-.92-2.89.52-.26.94-.69 1.21-1.23 1.12-.66 1.84-1.91 1.84-3.26 0-.3-.03-.6-.1-.89.57-.64.88-1.51.88-2.4zm-1.54 1.28l-.18-.2-.77-.84c-.33-.37-.67-1.17-.73-1.73 0 0-.13-1.25-.13-1.26-.06-.74-1.17-.73-1.13.14 0 .02.13 1.26.13 1.26.04.36.15.77.3 1.17-.08-.01-.15-.02-.22-.02 0 0-2.57-.12-2.57-.13-.73-.03-.89 1.22-.05 1.25l2.57.13c.53.03 1.29.37 1.61.72l.61.67.02.06c.1.27.14.55.14.83 0 .93-.51 1.77-1.34 2.18l-.2.1-.09.23c-.19.48-.6.82-1.1.93l-.67.14.87 2.75c-.48-.76-1.19-1.79-2.02-2.67l-.15-.16-.21-.02c-.51-.04-.99-.21-1.42-.48l1.7-1.48c.44-.39 1.04-.55 1.24-.49 0 0 .78.22.78.23.78.2 1.03-.92.29-1.21l-.78-.23c-.69-.2-1.67.22-2.24.72l-1.91 1.66-.39.32c-.44.36-.93.55-1.5.55-.8 0-1.54-.41-1.97-1.07v-1.88c0-.5.21-.98.34-1.07 0 0 .65-.43.64-.43.87-.69.21-1.57-.64-1.14 0-.01-.65.43-.65.43-.31.2-.54.56-.7.97-.13-.13-.28-.25-.43-.35 0 0-1.91-1.26-1.91-1.28-.81-.56-1.5.63-.61 1.11 0-.02 1.89 1.28 1.89 1.28.46.31.77.97.77 1.36v.84c-.43.24-.78.36-1.24.36-.67 0-1.31-.29-1.77-.79l-.07-.08-.09-.05a2.425 2.425 0 0 1-1.31-2.16c0-.38.09-.74.25-1.08l.15-.31-.14-.33c-.17-.34-.25-.7-.25-1.08 0-1.13.76-2.1 1.85-2.37l.39-.09.07-.43a2.41 2.41 0 0 1 2.39-2.05c.19 0 .39.02.58.07l.4.1.22-.38A2.41 2.41 0 0 1 9.17 1.3c.55 0 1.08.19 1.5.53l-.44.45-.01-.01-.31.31c-.41.35-.92.53-1.11.5 0 0-.84-.13-.84-.14-.83-.15-1.09 1.08-.18 1.29.01 0 .84.14.84.14.03 0 .06 0 .09.01-.14.46-.18.96-.12 1.4 0 0 .21 1.24.19 1.23.13.65 1.32.44 1.16-.22 0-.01-.19-1.23-.19-1.23-.07-.48.15-1.19.45-1.5l.48-.5c.07-.06.13-.12.19-.18l.93-.95c.5-.23 1.04-.34 1.59-.34 1.93 0 3.57 1.4 3.89 3.34l.05.31.26.15a2.445 2.445 0 0 1 .87 3.4z"],
        "prescription": ["M13.95 10.23c.16-.18.22-.22.46-.22h1.48c.25 0 .47.08.59.33.1.2.09.41-.05.66l-2.71 3.58L16.88 19c.13.21.16.46.03.69-.12.21-.34.31-.57.31H14.7c-.31 0-.56-.17-.7-.44l-1.9-2.67-1.93 2.68c-.15.27-.42.43-.73.43H7.98c-.25 0-.47-.08-.59-.33-.1-.2-.09-.41.05-.66l3.09-4.35L6.26 9H5v4.32c0 .41-.3.69-.7.69H2.7c-.41 0-.7-.28-.7-.69V.69c0-.41.3-.69.7-.69h4.42c.71 0 1.36.1 1.94.3.59.2 1.11.49 1.54.87.44.38.78.84 1.02 1.39.24.54.36 1.14.36 1.78 0 1.01-.28 1.88-.84 2.6-.43.54-1.35 1.29-2 1.59l3.09 3.94 1.72-2.24zM6.71 6.04c.71 0 1.45-.16 1.81-.46.33-.28.5-.69.5-1.25s-.17-.97-.5-1.25c-.35-.3-1.1-.46-1.81-.46h-1.7v3.42h1.7z"],
        "presentation": ["M19 1h-8c0-.55-.45-1-1-1S9 .45 9 1H1c-.55 0-1 .45-1 1s.45 1 1 1h1v11c0 .55.45 1 1 1h4.59L4.3 18.29c-.19.18-.3.43-.3.71a1.003 1.003 0 0 0 1.71.71L9 16.41V19c0 .55.45 1 1 1s1-.45 1-1v-2.59l3.29 3.29c.18.19.43.3.71.3a1.003 1.003 0 0 0 .71-1.71L12.41 15H17c.55 0 1-.45 1-1V3h1c.55 0 1-.45 1-1s-.45-1-1-1zm-3 12H4V3h12v10z"],
        "print": ["M14 16H6v-4H4v5c0 .55.45 1 1 1h10c.55 0 1-.45 1-1v-5h-2v4zm2-13c0-.55-.45-1-1-1H5c-.55 0-1 .45-1 1v1h12V3zm3 2H1c-.55 0-1 .45-1 1v7c0 .55.45 1 1 1h2v-3h14v3h2c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm-1 4h-2V7h2v2z"],
        "projects": ["M18 4c0-.55-.45-1-1-1H3c-.55 0-1 .45-1 1v2h16V4zm-2-3c0-.55-.45-1-1-1H5c-.55 0-1 .45-1 1v1h12V1zm3 6H1c-.55 0-1 .45-1 1v11c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V8c0-.55-.45-1-1-1zm-5 7c0 .55-.45 1-1 1H7c-.55 0-1-.45-1-1v-2h1v2h6v-2h1v2z"],
        "properties": ["M2 15c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-7c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm5-4h12c.55 0 1-.45 1-1s-.45-1-1-1H7c-.55 0-1 .45-1 1s.45 1 1 1zM2 1C.9 1 0 1.9 0 3s.9 2 2 2 2-.9 2-2-.9-2-2-2zm17 8H7c-.55 0-1 .45-1 1s.45 1 1 1h12c.55 0 1-.45 1-1s-.45-1-1-1zm0 7H7c-.55 0-1 .45-1 1s.45 1 1 1h12c.55 0 1-.45 1-1s-.45-1-1-1z"],
        "property": ["M3 5c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm5-1h11c.55 0 1-.45 1-1s-.45-1-1-1H8c-.55 0-1 .45-1 1s.45 1 1 1zM3 15c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm16 1H8c-.55 0-1 .45-1 1s.45 1 1 1h11c.55 0 1-.45 1-1s-.45-1-1-1zm-1-8H9c-1.1 0-2 .9-2 2s.9 2 2 2h9c1.1 0 2-.9 2-2s-.9-2-2-2zM3 7c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z"],
        "publish-function": ["M7.01 10.11c.35-.64.72-1.68 1.09-3.11l.8-3.03h.96l.24-.77h-.99c.28-1.11.66-1.92 1.12-2.43.28-.32.56-.48.83-.48.05 0 .1.02.13.05.03.03.05.07.05.12 0 .04-.04.13-.11.25-.08.12-.11.24-.11.35 0 .15.06.28.18.39.12.11.27.16.45.16.2 0 .36-.07.49-.2s.2-.31.2-.54c0-.26-.1-.47-.3-.63-.2-.16-.52-.24-.96-.24-.68 0-1.3.19-1.86.58-.55.38-1.08 1.02-1.58 1.91-.17.3-.34.5-.49.59-.15.08-.4.13-.74.12l-.23.77h.95L5.74 9.21c-.23.86-.39 1.39-.47 1.59-.12.29-.3.54-.54.75-.1.08-.21.12-.35.12-.04 0-.07-.01-.1-.03l-.03-.04c0-.02.03-.07.1-.13.07-.07.1-.17.1-.31 0-.15-.05-.28-.16-.38-.11-.1-.27-.15-.47-.15-.25 0-.44.07-.59.2-.15.12-.23.28-.23.46 0 .19.09.36.27.5.19.14.47.21.86.21.61 0 1.16-.15 1.63-.46.48-.31.89-.79 1.25-1.43zm3.7 1.18c-.18-.18-.43-.29-.71-.29s-.53.11-.71.29l-3 3a1.003 1.003 0 0 0 1.42 1.42L9 14.41V19c0 .55.45 1 1 1s1-.45 1-1v-4.59l1.29 1.29c.18.19.43.3.71.3a1.003 1.003 0 0 0 .71-1.71l-3-3zm4.15-6.78c.17-.13.36-.2.55-.2.07 0 .2.03.39.08s.36.08.5.08c.2 0 .37-.07.5-.2.13-.14.2-.31.2-.52 0-.22-.07-.4-.2-.53s-.33-.2-.58-.2c-.22 0-.43.05-.63.15-.2.1-.45.32-.75.67-.23.25-.56.7-1.01 1.33a6.52 6.52 0 0 0-.91-2.15l-2.38.39-.05.25c.18-.03.33-.05.45-.05.24 0 .43.1.59.3.25.31.59 1.24 1.02 2.79-.34.44-.58.73-.7.87-.21.22-.38.36-.52.43-.1.05-.22.08-.35.08-.1 0-.26-.05-.49-.16a1.01 1.01 0 0 0-.42-.11c-.23 0-.42.07-.57.22-.17.14-.24.32-.24.55 0 .21.07.38.21.51.14.13.33.2.56.2.23 0 .44-.05.64-.14.2-.09.45-.29.75-.59s.72-.78 1.25-1.43c.2.62.38 1.07.53 1.35.15.28.32.49.52.61.19.12.44.19.73.19.28 0 .57-.1.86-.3.38-.25.77-.69 1.17-1.31l-.25-.14c-.27.37-.48.6-.61.69-.09.06-.19.09-.31.09-.14 0-.28-.09-.42-.26-.23-.29-.54-1.09-.93-2.4.37-.58.66-.96.9-1.14z"],
        "pulse": ["M19 10h-2.38L14.9 6.55h-.01c-.17-.32-.5-.55-.89-.55-.43 0-.79.28-.93.66h-.01l-2.75 7.57L7.98 1.82h-.02A.978.978 0 0 0 7 1c-.44 0-.8.29-.94.69h-.01L3.28 10H1c-.55 0-1 .45-1 1s.45 1 1 1h3c.44 0 .8-.29.94-.69h.01l1.78-5.34 2.29 12.21h.02c.08.46.47.82.96.82.43 0 .79-.28.93-.66h.01l3.21-8.82.96 1.92h.01c.16.33.49.56.88.56h3c.55 0 1-.45 1-1s-.45-1-1-1z"],
        "random": ["M14.47 5h2.12L15.3 6.29c-.19.18-.3.43-.3.71a1.003 1.003 0 0 0 1.71.71l3-3c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71l-3-3a1.003 1.003 0 0 0-1.42 1.42L16.59 3H14c-.31 0-.57.15-.76.37l-.01-.01-2.93 3.52 1.3 1.56L14.47 5zm2.24 7.29a1.003 1.003 0 0 0-1.42 1.42l1.3 1.29h-2.12L4.77 3.36l-.01.01A.998.998 0 0 0 4 3H1c-.55 0-1 .45-1 1s.45 1 1 1h2.53l9.7 11.64.01-.01c.19.22.45.37.76.37h2.59l-1.29 1.29c-.19.18-.3.43-.3.71a1.003 1.003 0 0 0 1.71.71l3-3c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71l-3-3zM3.53 15H1c-.55 0-1 .45-1 1s.45 1 1 1h3c.31 0 .57-.15.76-.37l.01.01 2.93-3.52-1.3-1.56L3.53 15z"],
        "record": ["M10 3a7 7 0 1 0 0 14 7 7 0 1 0 0-14z"],
        "redo": ["M19.71 5.29l-4-4a1.003 1.003 0 0 0-1.42 1.42L16.59 5H6c-3.31 0-6 2.69-6 6s2.69 6 6 6h5v-2H6c-2.21 0-4-1.79-4-4s1.79-4 4-4h10.59L14.3 9.29c-.19.18-.3.43-.3.71a1.003 1.003 0 0 0 1.71.71l4-4c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71zM15 14c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"],
        "refresh": ["M19 1c-.55 0-1 .45-1 1v2.06C16.18 1.61 13.29 0 10 0 4.48 0 0 4.48 0 10c0 .55.45 1 1 1s1-.45 1-1c0-4.42 3.58-8 8-8 2.52 0 4.76 1.18 6.22 3H15c-.55 0-1 .45-1 1s.45 1 1 1h4c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1zm0 8c-.55 0-1 .45-1 1 0 4.42-3.58 8-8 8-2.52 0-4.76-1.18-6.22-3H5c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1s1-.45 1-1v-2.06C3.82 18.39 6.71 20 10 20c5.52 0 10-4.48 10-10 0-.55-.45-1-1-1z"],
        "regression-chart": ["M19 16H3.1L19.31 3.39l-.61-.79L2 15.59V3c0-.55-.45-1-1-1s-1 .45-1 1v14c0 .55.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1zm-9-9c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm-5 4c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm10-2c0 1.1.9 2 2 2s2-.9 2-2-.9-2-2-2-2 .9-2 2zm-5 4c0 1.1.9 2 2 2s2-.9 2-2-.9-2-2-2-2 .9-2 2z"],
        "remove": ["M10 0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm5-9H5c-.55 0-1 .45-1 1s.45 1 1 1h10c.55 0 1-.45 1-1s-.45-1-1-1z"],
        "remove-column": ["M19 0H5c-.55 0-1 .45-1 1v4h2V2h5v16H6v-3H4v4c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 18h-5V2h5v16zM6.29 13.71a1.003 1.003 0 0 0 1.42-1.42L5.41 10 7.7 7.71c.19-.18.3-.43.3-.71a1.003 1.003 0 0 0-1.71-.71L4 8.59l-2.29-2.3A1.003 1.003 0 0 0 .29 7.71L2.59 10 .3 12.29c-.19.18-.3.43-.3.71a1.003 1.003 0 0 0 1.71.71L4 11.41l2.29 2.3z"],
        "remove-column-left": ["M4 11h6c.55 0 1-.45 1-1s-.45-1-1-1H4c-.55 0-1 .45-1 1s.45 1 1 1zM19 0H1C.45 0 0 .45 0 1v18c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-7 18H2V2h10v16zm6 0h-5V2h5v16z"],
        "remove-column-right": ["M19 0H1C.45 0 0 .45 0 1v18c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zM7 18H2V2h5v16zm11 0H8V2h10v16zm-8-7h6c.55 0 1-.45 1-1s-.45-1-1-1h-6c-.55 0-1 .45-1 1s.45 1 1 1z"],
        "remove-row-bottom": ["M7 14h6c.55 0 1-.45 1-1s-.45-1-1-1H7c-.55 0-1 .45-1 1s.45 1 1 1zM19 0H1C.45 0 0 .45 0 1v18c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 18H2V8h16v10zm0-11H2V2h16v5z"],
        "remove-row-top": ["M7 8h6c.55 0 1-.45 1-1s-.45-1-1-1H7c-.55 0-1 .45-1 1s.45 1 1 1zm12-8H1C.45 0 0 .45 0 1v18c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 18H2v-5h16v5zm0-6H2V2h16v10z"],
        "repeat": ["M14 6c0 .55.45 1 1 1h4c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1s-1 .45-1 1v2.05C16.18 1.6 13.29 0 10 0 4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10c0-.55-.45-1-1-1s-1 .45-1 1c0 4.42-3.58 8-8 8s-8-3.58-8-8 3.58-8 8-8c2.53 0 4.77 1.17 6.24 3H15c-.55 0-1 .45-1 1z"],
        "resolve": ["M8.7 4.7C7.9 4.2 7 4 6 4c-3.3 0-6 2.7-6 6s2.7 6 6 6c1 0 1.9-.2 2.7-.7C7.3 14 6.5 12.1 6.5 10s.9-4 2.2-5.3zM14 4c-1 0-1.9.2-2.7.7 1.4 1.4 2.2 3.2 2.2 5.3s-.9 4-2.2 5.3c.8.5 1.7.7 2.7.7 3.3 0 6-2.7 6-6s-2.7-6-6-6zm-4 1.5C8.8 6.7 8 8.2 8 10s.8 3.3 2 4.4c1.2-1.1 2-2.7 2-4.5s-.8-3.3-2-4.4z"],
        "rig": ["M7 4.2C7 5.75 8.34 7 10 7s3-1.46 3-2.8C13 1.45 10.94 0 10 0H6c0 2.74 3.76 1.96 1 4.2zm11.71 14.09L13 12.59V9.01c0-.55-.45-1-1-1H8c-.55 0-1 .45-1 1v3.58l-5.71 5.7a1.003 1.003 0 0 0 1.42 1.42L7 15.42V19c0 .55.45 1 1 1h4c.55 0 1-.45 1-1v-3.58l4.29 4.29a1.003 1.003 0 0 0 1.42-1.42zM10.21 8c.01 0 .01.01 0 0 .01.01.01 0 0 0z"],
        "right-join": ["M8.7 4.7C7.4 6 6.5 7.9 6.5 10s.8 4 2.2 5.3c-.8.5-1.7.7-2.7.7-3.3 0-6-2.7-6-6s2.7-6 6-6c1 0 1.9.2 2.7.7zm-3.34 9.25c-.55-1.2-.86-2.54-.86-3.95s.31-2.75.86-3.95a4.001 4.001 0 0 0 0 7.9zM14 4c3.3 0 6 2.7 6 6s-2.7 6-6 6c-1 0-1.9-.2-2.7-.7 1.3-1.3 2.2-3.2 2.2-5.3s-.8-3.9-2.2-5.3C12.1 4.2 13 4 14 4zm-4 1.5C8.8 6.7 8 8.2 8 10s.8 3.3 2 4.4c1.2-1.1 2-2.7 2-4.5s-.8-3.3-2-4.4z"],
        "ring": ["M10 0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zm0 15c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z"],
        "rotate-document": ["M8.71 6.29A.997.997 0 0 0 8 6H3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h9c.55 0 1-.45 1-1v-8c0-.28-.11-.53-.29-.71l-4-4zM11 18H4V8h3v3c0 .55.45 1 1 1h3v6zm3-16h-1.59l.29-.29c.19-.18.3-.43.3-.71a1.003 1.003 0 0 0-1.71-.71l-2 2C9.11 2.47 9 2.72 9 3c0 .28.11.53.29.71l2 2a1.003 1.003 0 0 0 1.42-1.42l-.3-.29H14c1.1 0 2 .9 2 2v3c0 .55.45 1 1 1s1-.45 1-1V6c0-2.21-1.79-4-4-4z"],
        "rotate-page": ["M14 2h-1.59l.29-.29c.19-.18.3-.43.3-.71a1.003 1.003 0 0 0-1.71-.71l-2 2C9.11 2.47 9 2.72 9 3c0 .28.11.53.29.71l2 2a1.003 1.003 0 0 0 1.42-1.42l-.3-.29H14c1.1 0 2 .9 2 2v3c0 .55.45 1 1 1s1-.45 1-1V6c0-2.21-1.79-4-4-4zm-2 5H3c-.55 0-1 .45-1 1v11c0 .55.45 1 1 1h9c.55 0 1-.45 1-1V8c0-.55-.45-1-1-1zm-1 11H4V9h7v9z"],
        "satellite": ["M9 18c.6 0 1 .4 1 1s-.4 1-1 1c-5 0-9-4-9-9 0-.6.4-1 1-1s1 .4 1 1c0 3.9 3.1 7 7 7zm0-4c.6 0 1 .4 1 1s-.4 1-1 1c-2.8 0-5-2.2-5-5 0-.6.4-1 1-1s1 .4 1 1c0 1.7 1.3 3 3 3zm5.7-3.7c.4-.4 1-.4 1.4 0l3.6 3.6c.4.4.4 1 0 1.4l-1.4 1.4c-.4.4-1 .4-1.4 0l-3.6-3.6c-.4-.4-.4-1 0-1.4l1.4-1.4zM4.7.3c.4-.4 1-.4 1.4 0l3.6 3.6c.4.4.4 1 0 1.4L8.3 6.7c-.4.4-1 .4-1.4 0L3.3 3.1c-.4-.4-.4-1 0-1.4L4.7.3zm11.1 1c.4-.4 1-.4 1.4 0l1.6 1.6c.4.4.4 1 0 1.4l-6.5 6.5c-.4.4-1 .4-1.4 0L9.3 9.2c-.4-.4-.4-1 0-1.4l6.5-6.5zM9 12c-.6 0-1-.4-1-1s.4-1 1-1 1 .4 1 1-.4 1-1 1z"],
        "saved": ["M12 0H4c-.55 0-1 .45-1 1v18c0 .55.45 1 1 1h13c.55 0 1-.45 1-1V6l-6-6zm4 18H5V2h6v5h5v11zm-8.29-6.71a1.003 1.003 0 0 0-1.42 1.42l3 3c.18.18.43.29.71.29.32 0 .59-.16.77-.38l.01.01 4-5-.01-.01c.14-.18.23-.38.23-.62 0-.55-.45-1-1-1-.32 0-.59.16-.77.38l-.01-.01-3.3 4.13-2.21-2.21z"],
        "scatter-plot": ["M9 9c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm5 2c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm4-5c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm1 10H2V3c0-.55-.45-1-1-1s-1 .45-1 1v14c0 .55.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1zM5 15c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2z"],
        "search": ["M19.56 17.44l-4.94-4.94A8.004 8.004 0 0 0 16 8c0-4.42-3.58-8-8-8S0 3.58 0 8s3.58 8 8 8c1.67 0 3.21-.51 4.5-1.38l4.94 4.94a1.498 1.498 0 1 0 2.12-2.12zM8 14c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.69 6-6 6z"],
        "search-around": ["M9.9 6.9a3 3 0 1 0 0 6 3 3 0 1 0 0-6zM3 14c-1.7 0-3 1.3-3 3s1.3 3 3 3 3-1.3 3-3-1.3-3-3-3zm0 5c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zM3 0C1.3 0 0 1.3 0 3s1.3 3 3 3 3-1.3 3-3-1.3-3-3-3zm0 5c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zM17 14c-1.7 0-3 1.3-3 3s1.3 3 3 3 3-1.3 3-3-1.3-3-3-3zm0 5c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zM17 0c-1.7 0-3 1.3-3 3s1.3 3 3 3 3-1.3 3-3-1.3-3-3-3zm0 5c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zM10 10L5 5", "M5.379 4.671l5.02 5.02-.707.708-5.02-5.02zM10 10l5-5", "M14.621 4.671l.707.708-5.02 5.02-.707-.707z", "M10 10l5 5M10.379 9.671l5.02 5.02-.707.708-5.02-5.02z", "M10 10l-5 5M9.621 9.671l.707.708-5.02 5.02-.707-.707z"],
        "search-template": ["M13 8H5c-.55 0-1 .45-1 1s.45 1 1 1h8c.55 0 1-.45 1-1s-.45-1-1-1zm0 3H5c-.55 0-1 .45-1 1s.45 1 1 1h8c.55 0 1-.45 1-1s-.45-1-1-1zm0-6H5c-.55 0-1 .45-1 1s.45 1 1 1h8c.55 0 1-.45 1-1s-.45-1-1-1zm6.56 12.44l-3.23-3.23A8.939 8.939 0 0 0 18 9a9 9 0 1 0-9 9c1.94 0 3.74-.62 5.21-1.67l3.23 3.23a1.498 1.498 0 1 0 2.12-2.12zM9 16c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7z"],
        "search-text": ["M19.56 17.44l-3.23-3.23A8.939 8.939 0 0 0 18 9a9 9 0 1 0-9 9c1.94 0 3.74-.62 5.21-1.67l3.23 3.23a1.498 1.498 0 1 0 2.12-2.12zM9 16c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7zm3.5-11h-7c-.28 0-.5.22-.5.5v2c0 .28.22.5.5.5s.5-.22.5-.5V7h2v6h-.5c-.28 0-.5.22-.5.5s.22.5.5.5h3c.28 0 .5-.22.5-.5s-.22-.5-.5-.5H10V7h2v.5c0 .28.22.5.5.5s.5-.22.5-.5v-2c0-.28-.22-.5-.5-.5z"],
        "segmented-control": ["M19 5H1c-.55 0-1 .45-1 1v8c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm-1 8h-8V7h8v6z"],
        "select": ["M19.71 18.29l-4.25-4.25L20 12.91 9.93 9.33c.04-.1.07-.21.07-.33V3c0-.55-.45-1-1-1H4V1c0-.55-.45-1-1-1S2 .45 2 1v1H1c-.55 0-1 .45-1 1s.45 1 1 1h1v5c0 .55.45 1 1 1h6c.12 0 .23-.03.34-.07L12.91 20l1.14-4.54 4.25 4.25c.17.18.42.29.7.29a1.003 1.003 0 0 0 .71-1.71zM8 8H4V4h4v4z"],
        "selection": ["M10 0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z", "M10 6a4 4 0 1 0 0 8 4 4 0 1 0 0-8z"],
        "send-to": ["M19 0h-5c-.6 0-1 .4-1 1s.4 1 1 1h2.6l-4.3 4.3c-.2.2-.3.4-.3.7 0 .6.4 1 1 1 .3 0 .5-.1.7-.3L18 3.4V6c0 .5.5 1 1 1s1-.5 1-1V1c0-.6-.5-1-1-1zm0 9c-1 0-1.9-.5-2.5-1.3l-1.4 1.4c-.5.6-1.3.9-2.1.9-1.7 0-3-1.3-3-3 0-.8.3-1.6.9-2.1l1.4-1.4C11.5 2.9 11 2 11 1c0-.3.1-.6.2-.9-.4-.1-.8-.1-1.2-.1C4.5 0 0 4.5 0 10s4.5 10 10 10 10-4.5 10-10c0-.4 0-.8-.1-1.2-.3.1-.6.2-.9.2z"],
        "send-to-graph": ["M8 11H3c-.55 0-1 .45-1 1s.45 1 1 1h2.59L.3 18.29c-.19.18-.3.43-.3.71a1.003 1.003 0 0 0 1.71.71L7 14.41V17c0 .55.45 1 1 1s1-.45 1-1v-5c0-.55-.45-1-1-1zm10 2c-.53 0-1.01.21-1.37.55L11.9 10.6c.06-.19.1-.39.1-.6 0-.21-.04-.41-.1-.6l4.72-2.95c.37.34.85.55 1.38.55 1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2c0 .21.04.41.1.6l-4.73 2.96c-.24-.23-.54-.4-.87-.48V3.93c.86-.22 1.5-1 1.5-1.93 0-1.1-.9-2-2-2S8 .9 8 2c0 .93.64 1.71 1.5 1.93v4.14c-.33.09-.63.26-.87.48L7.6 7.91 5.42 6.55 3.9 5.6c.06-.19.1-.39.1-.6 0-1.1-.9-2-2-2s-2 .9-2 2 .9 2 2 2c.53 0 1.01-.21 1.37-.55L9 9.96V10h.06L12 11.84l.4.25 1.51.94 2.19 1.37c-.06.19-.1.39-.1.6 0 1.1.9 2 2 2s2-.9 2-2-.9-2-2-2zm-7-2.96l-.06-.04H11v.04z"],
        "send-to-map": ["M8 11H3c-.55 0-1 .45-1 1s.45 1 1 1h2.59L.3 18.29c-.19.18-.3.43-.3.71a1.003 1.003 0 0 0 1.71.71L7 14.41V17c0 .55.45 1 1 1s1-.45 1-1v-5c0-.55-.45-1-1-1zm11.54-6.82l.01-.02-6-4-.01.02C13.39.08 13.21 0 13 0s-.39.08-.54.18l-.01-.02L7 3.8 1.55.17l-.01.01A.969.969 0 0 0 1 0C.45 0 0 .45 0 1v9c0-.55.45-1 1-1h1V2.87l4 2.67V9h2V5.54l4-2.67v11.6l-1 .67v2.4l2-1.33 5.45 3.63.01-.02c.15.1.33.18.54.18.55 0 1-.45 1-1V5c0-.35-.19-.64-.46-.82zM18 17.13l-4-2.67V2.87l4 2.67v11.59z"],
        "series-add": ["M13.29 9.29c.3.62.8 1.12 1.42 1.42l-3 3c-.18.18-.43.29-.71.29s-.53-.11-.71-.3L7 10.41l-5 5V17h17c.55 0 1 .45 1 1s-.45 1-1 1H1a.998.998 0 0 1-1-1V4c0-.55.45-1 1-1s1 .45 1 1v8.59l4.29-4.3C6.47 8.11 6.72 8 7 8s.53.11.71.29l3.29 3.3 2.29-2.3zM12 5c0-.5.4-1 1-1h2V2c0-.6.4-1 1-1 .5 0 1 .4 1 1v2h2c.5 0 1 .4 1 1s-.5 1-1 1h-2v2c0 .6-.5 1-1 1-.6 0-1-.4-1-1V6h-2c-.6 0-1-.4-1-1z"],
        "series-configuration": ["M11.91 10.67c.52.45 1.13.8 1.8 1.03l-2.01 2.01c-.18.18-.43.29-.71.29-.28 0-.53-.11-.71-.3L7 10.41l-5 5V17h16.99c.55 0 1 .45 1 1s-.45 1-1 1H1a.998.998 0 0 1-1-1V4c0-.55.45-1 1-1s1 .45 1 1v8.59l4.29-4.3C6.47 8.11 6.72 8 7 8c.28 0 .53.11.71.29l3.29 3.3.91-.92zM18.5 4.6h1.04c.25 0 .45.2.46.44v.9c0 .25-.2.45-.45.45h-1.04c-.07.22-.16.42-.27.62l.73.73c.17.17.17.44 0 .61l-.61.61c-.17.17-.44.17-.61 0l-.73-.73c-.2.11-.4.2-.62.26v1.05c0 .25-.2.45-.45.45h-.9c-.25 0-.45-.2-.45-.45V8.51c-.21-.06-.4-.15-.58-.25l-.76.77c-.17.17-.46.17-.64 0l-.64-.64a.465.465 0 0 1 0-.64l.76-.77c-.1-.19-.19-.38-.25-.59h-1.04c-.25 0-.45-.2-.45-.45v-.9c0-.25.2-.45.45-.45h1.04c.07-.22.16-.42.27-.61l-.73-.73a.429.429 0 0 1 0-.61l.61-.61c.17-.17.44-.17.61 0l.73.73c.2-.11.4-.2.62-.26V1.45a.44.44 0 0 1 .44-.45h.9c.25 0 .45.2.45.45V2.5c.21.06.4.15.58.25l.76-.77c.17-.17.46-.17.64 0l.64.64c.17.17.17.46 0 .64l-.76.77c.1.17.19.36.25.57zm-4.69.9c0 .93.75 1.69 1.69 1.69.93 0 1.69-.75 1.69-1.69s-.75-1.69-1.69-1.69-1.69.76-1.69 1.69z"],
        "series-derived": ["M18.82 6.58c-.03.05-.07.09-.11.13 0 0 0-.01-.01-.01l-2 2c-.2.2-.4.3-.7.3-.6 0-1-.4-1-1 0-.3.1-.5.3-.7L16.6 6H11c-.6 0-1-.4-1-1s.4-1 1-1h5.6l-1.3-1.3c-.2-.2-.3-.4-.3-.7 0-.6.4-1 1-1 .3 0 .5.1.7.3l3 3c.2.2.3.4.3.7s-.1.5-.3.7l-.88.88zm-5.53 2.71c.3.62.8 1.12 1.42 1.42l-3 3c-.18.18-.43.29-.71.29s-.53-.11-.71-.3L7 10.41l-5 5V17h17c.55 0 1 .45 1 1s-.45 1-1 1H1a.998.998 0 0 1-1-1V4c0-.55.45-1 1-1s1 .45 1 1v8.59l4.29-4.3C6.47 8.11 6.72 8 7 8s.53.11.71.29l3.29 3.3 2.29-2.3z"],
        "series-filtered": ["M12.14 10.45c.21.67.65 1.23 1.22 1.61l-1.65 1.65c-.18.18-.43.29-.71.29s-.53-.11-.71-.3L7 10.41l-5 5V17h17c.55 0 1 .45 1 1s-.45 1-1 1H1a.998.998 0 0 1-1-1V4c0-.55.45-1 1-1s1 .45 1 1v8.59l4.29-4.3C6.47 8.11 6.72 8 7 8s.53.11.71.29l3.29 3.3 1.14-1.14zM19.35 1a.642.642 0 1 1 .46 1.1l-3.03 3.03v2.95c0 .18-.07.34-.19.46l-1.28 1.29c-.11.1-.27.17-.45.17-.35 0-.64-.29-.64-.64V5.13L11.19 2.1a.642.642 0 0 1 .45-1.1h7.71z"],
        "series-search": ["M11.28 11.31l-.28.28-3.29-3.3C7.53 8.11 7.28 8 7 8s-.53.11-.71.29L2 12.59V4c0-.55-.45-1-1-1s-1 .45-1 1v14a.998.998 0 0 0 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1H2v-1.59l5-5 3.29 3.29c.18.19.43.3.71.3s.53-.11.71-.29l2.09-2.09c-.17.02-.34.02-.51.02-.7 0-1.38-.12-2.01-.33zm-.93-6c0-1.62 1.31-2.93 2.93-2.93s2.93 1.31 2.93 2.93-1.31 2.93-2.93 2.93-2.93-1.31-2.93-2.93zm6.47 2.43c.11-.17.21-.33.29-.51.01-.03.03-.06.04-.09.08-.18.16-.35.21-.54.06-.2.1-.38.14-.58.01-.05.01-.09.02-.14.03-.2.05-.39.05-.6 0-2.37-1.93-4.3-4.3-4.3-2.37.01-4.3 1.93-4.3 4.31s1.93 4.3 4.3 4.3c.21 0 .4-.02.6-.05.04 0 .09-.01.14-.02.2-.03.38-.08.57-.14.2-.06.37-.14.55-.21.03-.01.06-.03.09-.04.18-.09.34-.19.51-.29l2.87 2.87c.14.14.33.22.56.22.43 0 .78-.35.78-.78a.938.938 0 0 0-.23-.56l-2.89-2.85z"],
        "settings": ["M4 1c0-.55-.45-1-1-1S2 .45 2 1v5h2V1zM2 19c0 .55.45 1 1 1s1-.45 1-1v-6H2v6zm9-18c0-.55-.45-1-1-1S9 .45 9 1v8h2V1zm7 0c0-.55-.45-1-1-1s-1 .45-1 1v3h2V1zM9 19c0 .55.45 1 1 1s1-.45 1-1v-3H9v3zm9-14h-2c-.55 0-1 .45-1 1v3c0 .55.45 1 1 1h2c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm-2 14c0 .55.45 1 1 1s1-.45 1-1v-8h-2v8zM4 7H2c-.55 0-1 .45-1 1v3c0 .55.45 1 1 1h2c.55 0 1-.45 1-1V8c0-.55-.45-1-1-1zm7 3H9c-.55 0-1 .45-1 1v3c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-3c0-.55-.45-1-1-1z"],
        "share": ["M15 18H2V5h8.76l2-2H1c-.55 0-1 .45-1 1v15c0 .55.45 1 1 1h15c.55 0 1-.45 1-1V7.24l-2 2V18zm4-18h-7c-.55 0-1 .45-1 1s.45 1 1 1h4.59l-7.3 7.29a1.003 1.003 0 0 0 1.42 1.42L18 3.41V8c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1z"],
        "shield": ["M10 20c6-3.81 9-9.048 9-15.714-2 0-5-1.429-9-4.286-4 2.857-7 4.286-9 4.286C1 10.952 4 16.19 10 20zm0-17.348c2.577 1.734 4.776 2.88 6.667 3.419-.44 4.627-2.636 8.353-6.667 11.297V2.652z"],
        "shop": ["M17.94 3.63c-.01-.02-.01-.03-.02-.04l-.03-.09h-.01c-.18-.3-.49-.5-.86-.5h-14c-.42 0-.77.25-.92.61L0 8.5h.02a2.5 2.5 0 0 0 5 0 2.5 2.5 0 0 0 5 0 2.5 2.5 0 0 0 5 0 2.5 2.5 0 0 0 5 0l-2.08-4.87zM3.02 2h14c.55 0 1-.45 1-1s-.45-1-1-1h-14c-.55 0-1 .45-1 1s.44 1 1 1zm13 14h-12v-4h-2v7c0 .55.45 1 1 1h14c.55 0 1-.45 1-1v-7h-2v4z"],
        "shopping-cart": ["M18 14H8.72l-.67-2H17c.44 0 .8-.29.94-.69h.01l2-6h-.01c.03-.1.06-.2.06-.31 0-.55-.45-1-1-1H5.39l-.44-1.32h-.01C4.8 2.29 4.44 2 4 2H1c-.55 0-1 .45-1 1s.45 1 1 1h2.28l3.33 10H5c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2h9c0 1.1.9 2 2 2s2-.9 2-2-.9-2-2-2zM6.05 6h11.56l-1.33 4H7.39L6.05 6z"],
        "sim-card": ["M16.71 5.29l-5-5A.997.997 0 0 0 11 0H4c-.55 0-1 .45-1 1v18c0 .55.45 1 1 1h12c.55 0 1-.45 1-1V6c0-.28-.11-.53-.29-.71zM9 7h2v3H9V7zM6 7h2v3H6V7zm2 11H6v-3h2v3zm3 0H9v-3h2v3zm3 0h-2v-3h2v3zm0-4H6v-3h8v3zm0-4h-2V7h2v3z"],
        "slash": ["M12 2c-.46 0-.85.32-.97.74L7.04 16.7c-.02.1-.04.2-.04.3 0 .55.45 1 1 1 .46 0 .85-.32.97-.74L12.96 3.3c.02-.1.04-.2.04-.3 0-.55-.45-1-1-1z"],
        "small-cross": ["M11.41 10l3.29-3.29c.19-.18.3-.43.3-.71a1.003 1.003 0 0 0-1.71-.71L10 8.59l-3.29-3.3a1.003 1.003 0 0 0-1.42 1.42L8.59 10 5.3 13.29c-.19.18-.3.43-.3.71a1.003 1.003 0 0 0 1.71.71l3.29-3.3 3.29 3.29c.18.19.43.3.71.3a1.003 1.003 0 0 0 .71-1.71L11.41 10z"],
        "small-minus": ["M14 9H6c-.55 0-1 .45-1 1s.45 1 1 1h8c.55 0 1-.45 1-1s-.45-1-1-1z"],
        "small-plus": ["M14 9h-3V6c0-.55-.45-1-1-1s-1 .45-1 1v3H6c-.55 0-1 .45-1 1s.45 1 1 1h3v3c0 .55.45 1 1 1s1-.45 1-1v-3h3c.55 0 1-.45 1-1s-.45-1-1-1z"],
        "small-tick": ["M15 5c-.28 0-.53.11-.71.29L8 11.59l-2.29-2.3a1.003 1.003 0 0 0-1.42 1.42l3 3c.18.18.43.29.71.29s.53-.11.71-.29l7-7A1.003 1.003 0 0 0 15 5z"],
        "snowflake": ["M11 11.776v2.81l2.31 2.242a.987.987 0 0 1 0 1.415c-.399.39-1.044.39-1.442 0L11 17.414V19a.99.99 0 0 1-.996 1A.996.996 0 0 1 9 19v-1.636l-.912.879c-.398.39-1.043.39-1.441 0a.987.987 0 0 1 0-1.415L9 14.536v-2.79l-2.548 1.435-.837 3.063c-.146.534-.705.85-1.248.707a.998.998 0 0 1-.721-1.224l.309-1.132-1.4.793a1.03 1.03 0 0 1-1.393-.366.99.99 0 0 1 .373-1.366l1.445-.818-1.224-.322a.998.998 0 0 1-.72-1.225c.145-.533.704-.85 1.248-.707l3.193.84 2.462-1.395-2.532-1.434-3.123.82a1.022 1.022 0 0 1-1.249-.706.998.998 0 0 1 .721-1.225L2.91 7.18l-1.4-.793a.99.99 0 0 1-.373-1.366 1.03 1.03 0 0 1 1.392-.366l1.445.818-.328-1.2a.998.998 0 0 1 .72-1.225 1.022 1.022 0 0 1 1.25.707l.855 3.132L9 8.311V5.414L6.647 3.121a.987.987 0 0 1 0-1.414 1.033 1.033 0 0 1 1.441 0L9 2.586V1c0-.552.44-1 1.004-1A.99.99 0 0 1 11 1l-.007 1.536.875-.829a1.033 1.033 0 0 1 1.441 0 .987.987 0 0 1 0 1.414L11 5.364v2.918l2.53-1.42.855-3.131c.146-.534.705-.85 1.249-.707a.998.998 0 0 1 .72 1.224l-.327 1.2 1.4-.792a1.03 1.03 0 0 1 1.392.366.99.99 0 0 1-.373 1.366l-1.355.768 1.153.303a.998.998 0 0 1 .721 1.225c-.146.533-.705.85-1.249.707l-3.123-.821-2.576 1.459 2.506 1.42 3.193-.84a1.022 1.022 0 0 1 1.249.707.998.998 0 0 1-.72 1.225l-1.224.322 1.4.793a.99.99 0 0 1 .373 1.366 1.03 1.03 0 0 1-1.393.366l-1.356-.768.31 1.132a.998.998 0 0 1-.721 1.224 1.022 1.022 0 0 1-1.249-.707l-.837-3.063L11 11.776z"],
        "social-media": ["M11.5 5c.8 0 1.6-.4 2-1 2 1.2 3.3 3.3 3.5 5.7 0 .5.5.9 1 .9.6 0 1-.5 1-1v-.1c-.2-3.3-2.2-6.2-5.1-7.6C13.7.8 12.7 0 11.5 0 10.1 0 9 1.1 9 2.5S10.1 5 11.5 5zm5 7c-1.4 0-2.5 1.1-2.5 2.5 0 .4.1.7.2 1.1-1.1.9-2.6 1.4-4.2 1.4-1.9 0-3.6-.8-4.9-2-.2-.2-.5-.4-.8-.4-.5 0-1 .5-1 1 0 .3.1.5.3.7C5.3 18 7.5 19 10 19c2.2 0 4.2-.8 5.8-2.1.2.1.5.1.7.1 1.4 0 2.5-1.1 2.5-2.5S17.9 12 16.5 12zM5 10.5c0-1.1-.7-2.1-1.7-2.4.5-1.9 1.9-3.5 3.6-4.4.3-.2.6-.5.6-.9 0-.5-.4-1-1-1-.2 0-.4.1-.6.2-2.4 1.2-4.2 3.6-4.7 6.4C.5 8.9 0 9.6 0 10.5 0 11.9 1.1 13 2.5 13S5 11.9 5 10.5z"],
        "sort": ["M19 16h-9c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h9c.55 0 1-.45 1-1v-1c0-.55-.45-1-1-1zm0-5h-9c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h9c.55 0 1-.45 1-1v-1c0-.55-.45-1-1-1zM7 15c-.28 0-.53.11-.71.29L5 16.59V11c0-.55-.45-1-1-1s-1 .45-1 1v5.59L1.71 15.3A.965.965 0 0 0 1 15a1.003 1.003 0 0 0-.71 1.71l3 3c.18.18.43.29.71.29s.53-.11.71-.29l3-3A1.003 1.003 0 0 0 7 15zM19 1h-9c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h9c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1zm0 5h-9c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h9c.55 0 1-.45 1-1V7c0-.55-.45-1-1-1z"],
        "sort-alphabetical": ["M8 15c-.28 0-.53.11-.71.29L6 16.59v-5.58c0-.55-.45-1-1-1s-1 .45-1 1v5.58L2.71 15.3c-.18-.18-.43-.3-.71-.3a1.003 1.003 0 0 0-.71 1.71l3 3c.18.18.43.29.71.29s.53-.11.71-.29l3-3A1.003 1.003 0 0 0 8 15zm8.89-.79v-1.22H11.3v1.3h3.51L11 18.78V20h5.99v-1.3h-3.91l3.81-4.49zM14.97 0h-1.95L9.01 11.01h1.89l.98-2.92h4.17l.98 2.92h1.96L14.97 0zm-2.59 6.63l1.58-4.74H14l1.57 4.74h-3.19z"],
        "sort-alphabetical-desc": ["M8.01 15c-.28 0-.53.11-.71.29L6 16.59v-5.58c0-.55-.45-1-1-1s-1 .45-1 1v5.58L2.71 15.3c-.18-.18-.43-.3-.71-.3a1.003 1.003 0 0 0-.71 1.71l3 3a1.014 1.014 0 0 0 1.42 0l3-3c.18-.18.29-.43.29-.71.01-.55-.44-1-.99-1zm4.44-5.65l6.4-7.88V0H10.5v1.67h5.91L10 9.44v1.57h9V9.35h-6.55zm1.27 3.64L11 20h1.59l.56-1.56h2.68l.55 1.56h1.64l-2.68-7.01h-1.62zm-.16 4.3l.93-2.57h.02l.9 2.57h-1.85z"],
        "sort-asc": ["M10 8h5c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1h-5c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1zm0 5h7c.55 0 1-.45 1-1v-1c0-.55-.45-1-1-1h-7c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1zm0-10h3c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1h-3c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1zm9 12h-9c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h9c.55 0 1-.45 1-1v-1c0-.55-.45-1-1-1zM7 14c-.28 0-.53.11-.71.29L5 15.59V10c0-.55-.45-1-1-1s-1 .45-1 1v5.59L1.71 14.3A.965.965 0 0 0 1 14a1.003 1.003 0 0 0-.71 1.71l3 3c.18.18.43.29.71.29s.53-.11.71-.29l3-3A1.003 1.003 0 0 0 7 14z"],
        "sort-desc": ["M13 15h-3c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h3c.55 0 1-.45 1-1v-1c0-.55-.45-1-1-1zm-6-1c-.28 0-.53.11-.71.29L5 15.59V10c0-.55-.45-1-1-1s-1 .45-1 1v5.59L1.71 14.3A.965.965 0 0 0 1 14a1.003 1.003 0 0 0-.71 1.71l3 3c.18.18.43.29.71.29s.53-.11.71-.29l3-3A1.003 1.003 0 0 0 7 14zM19 0h-9c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h9c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-4 10h-5c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h5c.55 0 1-.45 1-1v-1c0-.55-.45-1-1-1zm2-5h-7c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h7c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1z"],
        "sort-numerical": ["M9 14.99c-.28 0-.53.11-.71.29L7 16.58v-5.59c0-.55-.45-1-1-1s-1 .45-1 1v5.59l-1.29-1.29a.965.965 0 0 0-.71-.3 1.003 1.003 0 0 0-.71 1.71l3 3c.18.18.43.29.71.29.28 0 .53-.11.71-.29l3-3c.18-.18.29-.43.29-.71a.99.99 0 0 0-1-1zm8.88.23c-.08-.42-.22-.79-.42-1.12-.2-.33-.47-.6-.8-.8-.33-.2-.76-.3-1.28-.3a2.333 2.333 0 0 0-1.72.71c-.21.22-.37.48-.49.78-.11.3-.17.62-.17.97 0 .27.04.54.13.8.08.26.22.5.4.7.19.21.43.38.71.5a2.142 2.142 0 0 0 1.72.02c.25-.12.47-.31.66-.58l.02.02c-.01.19-.04.4-.08.63-.04.24-.11.46-.21.67-.1.21-.23.38-.39.53a.92.92 0 0 1-.62.22c-.24 0-.44-.08-.6-.25-.16-.17-.27-.36-.31-.59h-1.31c.04.29.12.56.24.79.12.23.28.43.48.59.19.16.42.28.67.36.25.08.52.12.82.12.49 0 .9-.1 1.23-.31.34-.21.61-.48.82-.82.21-.34.37-.71.47-1.13.1-.42.15-.83.15-1.25 0-.43-.04-.85-.12-1.26zm-1.42.63c-.05.15-.11.28-.2.4-.09.12-.2.21-.34.27s-.3.1-.49.1c-.17 0-.33-.04-.46-.11s-.24-.17-.33-.29c-.08-.12-.15-.25-.19-.4-.04-.15-.06-.31-.06-.47 0-.15.02-.3.07-.45.05-.15.11-.28.2-.39.09-.12.2-.21.33-.28.13-.07.27-.11.44-.11.17 0 .33.04.47.11.14.07.25.17.34.28a1.387 1.387 0 0 1 .28.86c.01.17-.02.33-.06.48zM15.32 11H17V0h-1.25c-.05.34-.17.62-.34.85-.17.23-.39.42-.63.57-.25.15-.52.25-.83.31-.3.06-.62.09-.94.09v1.41h2.31V11z"],
        "sort-numerical-desc": ["M9 15c-.28 0-.53.11-.71.29L7 16.59v-5.58c0-.55-.45-1-1-1s-1 .45-1 1v5.58L3.71 15.3c-.18-.18-.43-.3-.71-.3a1.003 1.003 0 0 0-.71 1.71l3 3c.18.18.43.29.71.29.28 0 .53-.11.71-.29l3-3A1.003 1.003 0 0 0 9 15zm6.7-1.33a1.5 1.5 0 0 1-.44.43c-.17.11-.37.19-.58.23-.22.04-.44.06-.67.05v1.07h1.66V20H17v-6.99h-1.06c-.04.26-.12.48-.24.66zm3.15-10.3c-.11-.68-.29-1.26-.55-1.76-.26-.5-.62-.89-1.08-1.18C16.75.14 16.17 0 15.46 0c-.54 0-1.03.09-1.46.27-.43.18-.79.44-1.09.76-.3.33-.52.71-.67 1.15-.16.44-.24.92-.24 1.43 0 .54.08 1.04.23 1.47.15.44.37.81.65 1.12.28.31.61.55 1 .72.39.17.82.26 1.3.26.46 0 .88-.11 1.26-.33.38-.22.68-.53.9-.94l.03.03c-.03.35-.07.74-.12 1.16-.05.42-.15.81-.29 1.18-.14.37-.35.68-.61.92-.26.25-.62.37-1.06.37-.43 0-.77-.13-1.03-.4-.25-.27-.4-.62-.44-1.05h-1.64c.02.43.11.83.29 1.18.17.35.39.66.67.91a3.027 3.027 0 0 0 2.07.8c.71 0 1.3-.17 1.79-.5.48-.33.87-.76 1.17-1.29.3-.53.51-1.12.64-1.76.13-.64.19-1.28.19-1.92.01-.77-.05-1.49-.15-2.17zM17.1 4.44c-.08.27-.19.5-.34.71-.15.21-.34.37-.57.49-.23.12-.5.18-.8.18-.3 0-.56-.06-.78-.19-.22-.13-.4-.29-.55-.49-.14-.2-.25-.44-.32-.7-.07-.27-.11-.55-.11-.84 0-.28.04-.55.11-.82.07-.26.18-.49.32-.7.14-.2.33-.36.55-.48.22-.12.48-.17.78-.17.31 0 .57.06.8.18.23.12.42.28.57.48.15.2.26.43.34.69.08.26.11.53.11.82 0 .29-.04.57-.11.84z"],
        "split-columns": ["M15 13a1.003 1.003 0 0 0 1.71.71l3-3c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71l-3-3a1.003 1.003 0 0 0-1.42 1.42L16.59 9H11V2h5v2c.77 0 1.47.3 2 .78V1c0-.55-.45-1-1-1H3c-.55 0-1 .45-1 1v3.78C2.53 4.3 3.23 4 4 4V2h5v7H3.41L4.7 7.71c.19-.18.3-.43.3-.71a1.003 1.003 0 0 0-1.71-.71l-3 3C.11 9.47 0 9.72 0 10c0 .28.11.53.29.71l3 3a1.003 1.003 0 0 0 1.42-1.42L3.41 11H9v7H4v-2c-.77 0-1.47-.3-2-.78V19c0 .55.45 1 1 1h14c.55 0 1-.45 1-1v-3.78c-.53.48-1.23.78-2 .78v2h-5v-7h5.59l-1.29 1.29c-.19.18-.3.43-.3.71z"],
        "square": ["M19 0H1C.45 0 0 .45 0 1v18c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 18H2V2h16v16z"],
        "stacked-chart": ["M12 2c0-.55-.45-1-1-1H9c-.55 0-1 .45-1 1v4h4V2zm3 14h2c.55 0 1-.45 1-1v-5h-4v5c0 .55.45 1 1 1zm3-10c0-.55-.45-1-1-1h-2c-.55 0-1 .45-1 1v3h4V6zm-6 1H8v5h4V7zm-9 9h2c.55 0 1-.45 1-1v-3H2v3c0 .55.45 1 1 1zm16 1H1c-.55 0-1 .45-1 1s.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1zM6 9c0-.55-.45-1-1-1H3c-.55 0-1 .45-1 1v2h4V9zm3 7h2c.55 0 1-.45 1-1v-2H8v2c0 .55.45 1 1 1z"],
        "star": ["M10 0l3.1 6.6 6.9 1-5 5.1 1.2 7.3-6.2-3.4L3.8 20 5 12.7 0 7.6l6.9-1z"],
        "star-empty": ["M20 7.6l-6.9-1.1L10 0 6.9 6.6 0 7.6l5 5.1L3.8 20l6.2-3.4 6.2 3.4-1.2-7.2 5-5.2zM10 15l-4.5 2.4.9-5.2-3.6-3.6 5-.8L10 3.1l2.2 4.7 5 .8-3.6 3.7.9 5.2L10 15z"],
        "step-backward": ["M15 3c-.23 0-.42.09-.59.21l-.01-.01L8 8V4c0-.55-.45-1-1-1H5c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-4l6.4 4.8.01-.01c.17.12.36.21.59.21.55 0 1-.45 1-1V4c0-.55-.45-1-1-1z"],
        "step-chart": ["M19 16H2v-3h4c.55 0 1-.45 1-1V8h3v2c0 .55.45 1 1 1h5c.55 0 1-.45 1-1V6h2c.55 0 1-.45 1-1s-.45-1-1-1h-3c-.55 0-1 .45-1 1v4h-3V7c0-.55-.45-1-1-1H6c-.55 0-1 .45-1 1v4H2V3c0-.55-.45-1-1-1s-1 .45-1 1v14c0 .55.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1z"],
        "step-forward": ["M15 3h-2c-.55 0-1 .45-1 1v4L5.6 3.2l-.01.01C5.42 3.09 5.23 3 5 3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1 .23 0 .42-.09.59-.21l.01.01L12 12v4c0 .55.45 1 1 1h2c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1z"],
        "stop": ["M16 3H4c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h12c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1z"],
        "strikethrough": ["M18 9h-4.46a4.7 4.7 0 0 0-.4-.14c-.19-.05-.51-.14-.96-.25-.45-.11-.9-.23-1.37-.35-.47-.12-.89-.23-1.27-.33s-.6-.16-.65-.17c-.53-.15-.95-.37-1.27-.66-.32-.28-.49-.68-.49-1.19 0-.36.09-.66.26-.9s.39-.43.65-.57c.26-.14.55-.24.87-.3s.63-.09.93-.09c.89 0 1.63.19 2.21.57.45.3.75.76.89 1.38h2.63c-.06-.52-.2-.98-.42-1.4-.3-.57-.71-1.05-1.23-1.43a5.33 5.33 0 0 0-1.79-.87c-.7-.2-1.42-.3-2.19-.3-.66 0-1.31.08-1.96.25s-1.22.43-1.73.77-.92.79-1.23 1.32c-.31.52-.46 1.15-.46 1.87 0 .37.05.74.15 1.1.1.36.28.7.53 1.02.18.24.41.47.69.67H2c-.55 0-1 .45-1 1s.45 1 1 1h10.14c.02.01.05.02.07.02.3.11.58.29.84.55.25.26.38.67.38 1.21 0 .27-.06.53-.17.79-.11.26-.29.49-.54.69-.25.2-.57.36-.97.49s-.88.19-1.44.19c-.52 0-1.01-.06-1.45-.17-.45-.11-.84-.29-1.19-.54s-.61-.56-.8-.95c-.05-.08-.09-.18-.12-.28H4.11c.09.43.22.82.4 1.18.33.65.77 1.18 1.32 1.59.55.41 1.2.72 1.94.92.74.2 1.53.3 2.37.3.73 0 1.44-.08 2.14-.25.7-.17 1.33-.43 1.88-.79.55-.36.99-.83 1.33-1.39.34-.56.51-1.25.51-2.05 0-.37-.06-.75-.18-1.12a3.12 3.12 0 0 0-.15-.39H18c.55 0 1-.45 1-1s-.45-1-1-1z"],
        "style": ["M18 18H2V2h12.3l2-2H1C.4 0 0 .4 0 1v18c0 .6.4 1 1 1h18c.6 0 1-.4 1-1V7.7l-2 2V18zm1.2-18l-7.6 7.6 2.8 2.8L20 4.8V0h-.8zM4 15.9c3.1.2 5.9.2 8.2-2 1.1-1.1 1.1-3 0-4.1-.6-.5-1.3-.8-2-.8s-1.4.3-1.9.8C7.2 11 6.6 14.3 4 15.9z"],
        "swap-horizontal": ["M16.02 10c-.01 0-.01 0 0 0H16h.02zM2 6h13.58l-2.29 2.29a1 1 0 0 0-.3.71 1.003 1.003 0 0 0 1.71.71l4-4c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71l-4-4a1.003 1.003 0 0 0-1.42 1.42L15.58 4H2c-.55 0-1 .45-1 1s.45 1 1 1zm2 4h-.02H4zm14 4H4.42l2.29-2.29a1 1 0 0 0 .3-.71 1.003 1.003 0 0 0-1.71-.71l-4 4c-.18.18-.29.43-.29.71 0 .28.11.53.29.71l4 4a1.003 1.003 0 0 0 1.42-1.42L4.42 16H18c.55 0 1-.45 1-1s-.45-1-1-1z"],
        "swap-vertical": ["M9.71 5.3l-4-4A.997.997 0 0 0 5 1.01c-.28 0-.53.11-.71.29l-4 4a1.003 1.003 0 0 0 1.42 1.42L4 4.42V18c0 .55.45 1 1 1s1-.45 1-1V4.42l2.29 2.29a1 1 0 0 0 .71.3 1.003 1.003 0 0 0 .71-1.71zM10 3.98c0 .01 0 .01 0 0V4v-.02zm0 12.04c0-.01 0-.01 0 0V16v.02zm9-3.03c-.28 0-.53.11-.71.29L16 15.58V2c0-.55-.45-1-1-1s-1 .45-1 1v13.58l-2.29-2.29a1.003 1.003 0 0 0-1.42 1.42l4 4c.18.18.43.29.71.29.28 0 .53-.11.71-.29l4-4c.18-.18.29-.43.29-.71 0-.56-.45-1.01-1-1.01z"],
        "symbol-circle": ["M10 4.01a6 6 0 1 0 0 12 6 6 0 1 0 0-12z"],
        "symbol-cross": ["M15 8.01h-3v-3c0-.55-.45-1-1-1H9c-.55 0-1 .45-1 1v3H5c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h3v3c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-3h3c.55 0 1-.45 1-1v-2c0-.56-.45-1-1-1z"],
        "symbol-diamond": ["M15 10.01c0-.21-.08-.39-.18-.54l.02-.01-4-6-.02.01c-.18-.28-.47-.46-.82-.46s-.64.18-.82.45l-.01-.01-4 6 .02.01c-.11.16-.19.34-.19.55s.08.39.18.54l-.02.01 4 6 .02-.01c.18.27.47.46.82.46s.64-.19.82-.46l.02.01 4-6-.02-.01c.1-.16.18-.34.18-.54z"],
        "symbol-square": ["M15 4.01H5c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h10c.55 0 1-.45 1-1v-10c0-.56-.45-1-1-1z"],
        "symbol-triangle-down": ["M16 5c0-.55-.45-1-1-1H5c-.55 0-1 .45-1 1 0 .16.05.31.11.44H4.1l5 10h.01c.17.33.5.56.89.56s.72-.23.89-.56h.01l5-10h-.01c.06-.13.11-.28.11-.44z"],
        "symbol-triangle-up": ["M15.89 14.56l-4.99-10h-.01c-.17-.33-.5-.56-.89-.56s-.72.23-.89.56H9.1l-5 10h.01c-.06.13-.11.28-.11.44 0 .55.45 1 1 1h10c.55 0 1-.45 1-1 0-.16-.05-.31-.11-.44z"],
        "tag": ["M2 4a2 2 0 0 1 2-2h4.588a2 2 0 0 1 1.414.586l7.41 7.41a2 2 0 0 1 0 2.828l-4.588 4.588a2 2 0 0 1-2.829 0l-7.41-7.41A2 2 0 0 1 2 8.588V4zm3.489-.006a1.495 1.495 0 1 0 0 2.99 1.495 1.495 0 0 0 0-2.99z"],
        "take-action": ["M5 7c.28 0 .53-.11.71-.29l5-5A1.003 1.003 0 0 0 9.29.29l-5 5A1.003 1.003 0 0 0 5 7zm6 6a1.003 1.003 0 0 0 1.71.71l5-5a1.003 1.003 0 0 0-1.42-1.42l-5 5c-.18.18-.29.43-.29.71zm8 5h-1c0-.55-.45-1-1-1h-7c-.55 0-1 .45-1 1H8c-.55 0-1 .45-1 1s.45 1 1 1h11c.55 0 1-.45 1-1s-.45-1-1-1zm-9-6l6-6-1.29-1.29a1.003 1.003 0 0 0-1.42-1.42L12 2 6 8l1.29 1.29-7 7a1.003 1.003 0 0 0 1.42 1.42l7-7L10 12z"],
        "taxi": ["M19 9h-.33l.33 1v.5c0 .15-.03.3-.07.44h.01L17 17.23v.27c0 .83-.67 1.5-1.5 1.5s-1.5-.67-1.5-1.5V17H6v.5c0 .83-.67 1.5-1.5 1.5S3 18.33 3 17.5v-.27l-1.93-6.28h.01c-.05-.15-.08-.3-.08-.45V10s.02-.06.05-.16c.06-.17.16-.47.28-.84H1c-.55 0-1-.45-1-1s.45-1 1-1h1l1-3h-.01v-.01c.25-.64 1-1.31 1.67-1.5 0 0 .78-.21 2.33-.36V1c0-.55.45-1 1-1h4c.55 0 1 .45 1 1v1.13c1.55.14 2.33.36 2.33.36.67.19 1.42.86 1.67 1.5V4H17l1 3h1c.55 0 1 .45 1 1s-.45 1-1 1zM3 11.5c0 .83.67 1.5 1.5 1.5S6 12.33 6 11.5 5.33 10 4.5 10 3 10.67 3 11.5zM16 7l-1-3H5L4 7v1h12V7zm-.5 3c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z"],
        "text-highlight": ["M16 17c-.55 0-1-.45-1-1V4c0-.55.45-1 1-1s1-.45 1-1-.45-1-1-1c-.77 0-1.47.3-2 .78-.53-.48-1.23-.78-2-.78-.55 0-1 .45-1 1s.45 1 1 1 1 .45 1 1v12c0 .55-.45 1-1 1s-1 .45-1 1 .45 1 1 1c.77 0 1.47-.3 2-.78.53.48 1.23.78 2 .78.55 0 1-.45 1-1s-.45-1-1-1zm-4-4H2V7h10V5H1c-.55 0-1 .45-1 1v8c0 .55.45 1 1 1h11v-2zm7-8h-3v2h2v6h-2v2h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1z"],
        "th": ["M19 1H1c-.6 0-1 .5-1 1v16c0 .5.4 1 1 1h18c.5 0 1-.5 1-1V2c0-.5-.5-1-1-1zM7 17H2v-3h5v3zm0-4H2v-3h5v3zm0-4H2V6h5v3zm11 8H8v-3h10v3zm0-4H8v-3h10v3zm0-4H8V6h10v3z"],
        "th-derived": ["M5.3 13.3c-.2.2-.3.4-.3.7 0 .6.4 1 1 1 .3 0 .5-.1.7-.3l3-3c.2-.2.3-.4.3-.7s-.1-.5-.3-.7l-3-3C6.5 7.1 6.3 7 6 7c-.6 0-1 .4-1 1 0 .3.1.5.3.7L6.6 10H1c-.6 0-1 .4-1 1s.4 1 1 1h5.6l-1.3 1.3zM19 1H3c-.5 0-1 .5-1 1v6h1c0-1.7 1.3-3 3-3 .8 0 1.6.3 2.1.9l.1.1H9v.8l1 1V6h8v3h-6.8c.3.3.5.6.6 1H18v3h-6.8l-.1.1-.9.9H18v3h-8v-2.8l-1 1V17H4v-.8c-.6-.5-1-1.3-1-2.2H2v4c0 .5.5 1 1 1h16c.6 0 1-.5 1-1V2c0-.5-.5-1-1-1z"],
        "th-filtered": ["M17.333 10l1.435-1.722a1 1 0 0 0 .232-.64V4.85l1-.9V18c0 .5-.5 1-1 1H1c-.6 0-1-.5-1-1V2c0-.5.4-1 1-1h6.722L12 4.85V6H8v3h4v1H8v3h10v-3h-.667zM7 17v-3H2v3h5zm0-4v-3H2v3h5zm0-4V6H2v3h5zm11 8v-3H8v3h10z", "M19.35 0a.642.642 0 1 1 .46 1.1l-3.03 3.03v2.95c0 .18-.07.34-.19.46l-1.28 1.29c-.11.1-.27.17-.45.17-.35 0-.64-.29-.64-.64V4.13L11.19 1.1a.642.642 0 0 1 .45-1.1h7.71z"],
        "th-list": ["M19 1H1c-.6 0-1 .5-1 1v16c0 .5.4 1 1 1h18c.5 0 1-.5 1-1V2c0-.5-.5-1-1-1zm-1 16H2v-3h16v3zm0-4H2v-3h16v3zm0-4H2V6h16v3z"],
        "thumbs-down": ["M18.55 6.56c-.31-.01-.65-.03-1.02-.06.03 0 .06-.01.09-.01.88-.12 1.68-.63 1.76-1.37.08-.75-.58-1.25-1.46-1.33-.32-.03-.65-.05-.99-.08.59-.19 1.05-.54 1.09-1.2.05-.75-.99-1.32-1.87-1.41-.34-.03-.64-.05-.91-.07h-.11c-.28-.02-.54-.02-.77-.02-3.92-.08-7.29.6-9.36 1.93v7.72c2.67 1.66 5.95 4.61 5.26 7.08-.21.76.39 1.35 1.23 1.26 1.01-.11 1.71-1.18 1.75-2.28.05-1.29-.19-2.59-.62-3.74-.05-.32.01-.65.47-.68.61-.04 1.39-.08 1.99-.1.32 0 .64-.01.94-.03h.01c.52-.03 1-.07 1.42-.12.88-.11 1.69-.6 1.79-1.35.1-.75-.55-1.25-1.44-1.35-.07-.01-.13-.02-.2-.02.21-.02.42-.04.61-.06.88-.11 1.69-.6 1.79-1.35.09-.75-.56-1.31-1.45-1.36zM3 3H0v8h3c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1z"],
        "thumbs-up": ["M3 9H0v8h3c.55 0 1-.45 1-1v-6c0-.55-.45-1-1-1zm16.99 3.09c-.1-.75-.91-1.24-1.79-1.35-.19-.02-.4-.05-.61-.06.07-.01.14-.01.2-.02.88-.1 1.53-.61 1.44-1.35-.1-.74-.91-1.24-1.79-1.35-.42-.05-.9-.09-1.42-.12h-.01l-.94-.03c-.6-.02-1.39-.05-1.99-.1-.45-.03-.51-.36-.47-.68.43-1.15.67-2.45.62-3.74-.04-1.11-.74-2.17-1.75-2.28-.84-.09-1.45.5-1.23 1.26.7 2.47-2.58 5.43-5.25 7.08v7.72c2.08 1.33 5.44 2.01 9.35 1.93.24 0 .49-.01.77-.02h.11c.27-.02.57-.04.91-.07.88-.08 1.92-.66 1.87-1.41-.04-.65-.5-1.01-1.09-1.2.34-.03.67-.05.99-.08.89-.08 1.55-.58 1.46-1.33-.08-.75-.88-1.25-1.76-1.37-.03 0-.06-.01-.09-.01.37-.02.71-.04 1.02-.06.91-.05 1.55-.61 1.45-1.36z"],
        "tick": ["M17 4c-.28 0-.53.11-.71.29L7 13.59 3.71 10.3A.965.965 0 0 0 3 10a1.003 1.003 0 0 0-.71 1.71l4 4c.18.18.43.29.71.29s.53-.11.71-.29l10-10A1.003 1.003 0 0 0 17 4z"],
        "tick-circle": ["M10 20C4.48 20 0 15.52 0 10S4.48 0 10 0s10 4.48 10 10-4.48 10-10 10zm5-14c-.28 0-.53.11-.71.29L8 12.59l-2.29-2.3a1.003 1.003 0 0 0-1.42 1.42l3 3c.18.18.43.29.71.29.28 0 .53-.11.71-.29l7-7A1.003 1.003 0 0 0 15 6z"],
        "time": ["M11 9.59V4c0-.55-.45-1-1-1s-1 .45-1 1v6c0 .28.11.53.29.71l3 3a1.003 1.003 0 0 0 1.42-1.42L11 9.59zM10 0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"],
        "timeline-area-chart": ["M19 16H2V3c0-.55-.45-1-1-1s-1 .45-1 1v14c0 .55.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1zm0-13.41l-7.07 7.07-4.3-3.44-.01.01A.987.987 0 0 0 7 6c-.24 0-.46.1-.63.24l-.01-.01L3 9.03V15h16V2.59z"],
        "timeline-bar-chart": ["M19 17H1c-.55 0-1 .45-1 1s.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1zM9 16h2c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1H9c-.55 0-1 .45-1 1v13c0 .55.45 1 1 1zm6 0h2c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1h-2c-.55 0-1 .45-1 1v9c0 .55.45 1 1 1zM3 16h2c.55 0 1-.45 1-1V9c0-.55-.45-1-1-1H3c-.55 0-1 .45-1 1v6c0 .55.45 1 1 1z"],
        "timeline-events": ["M5 5c.6 0 1-.4 1-1V2c0-.5-.4-1-1-1s-1 .5-1 1v2c0 .6.4 1 1 1zm10 0c.6 0 1-.4 1-1V2c0-.5-.4-1-1-1s-1 .5-1 1v2c0 .6.4 1 1 1zm-9 9H4v2h2v-2zM17 3v1c0 1.1-.9 2-2 2s-2-.9-2-2V3H7v1c0 1.1-.9 2-2 2s-2-.9-2-2V3H2c-.5 0-1 .5-1 1v14c0 .5.5 1 1 1h16c.5 0 1-.5 1-1V4c0-.5-.5-1-1-1h-1zM7 17H3v-4h4v4zm0-5H3V8h4v4zm5 5H8v-4h4v4zm0-5H8V8h4v4zm5 5h-4v-4h4v4zm0-5h-4V8h4v4zm-6 2H9v2h2v-2zm5-5h-2v2h2V9z"],
        "timeline-line-chart": ["M19 16H2v-1.59l5-5 3.29 3.29c.18.19.43.3.71.3s.53-.11.71-.29l7-7a1.003 1.003 0 0 0-1.42-1.42L11 10.59l-3.29-3.3C7.53 7.11 7.28 7 7 7s-.53.11-.71.29L2 11.59V3c0-.55-.45-1-1-1s-1 .45-1 1v14a.998.998 0 0 0 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1z"],
        "tint": ["M9.86 2S3.98 9.18 3.98 12.17C3.99 15.4 6.78 18 9.96 18c3.18-.01 6.04-2.63 6.03-5.86C15.99 9.05 9.86 2 9.86 2z"],
        "torch": ["M6.97 19c0 .55.45 1 1 1h4c.55 0 1-.45 1-1v-2h-6v2zm-3-15l3 4v8h6V8l3-4h-12zm5 5c0-.55.45-1 1-1s1 .45 1 1v2c0 .55-.45 1-1 1s-1-.45-1-1V9zm6-9h-10c-.55 0-1 .45-1 1v2h12V1c0-.55-.45-1-1-1z"],
        "train": ["M16 18h-2l2 2H4l.12-.12L6 18H4c-1.1 0-2-.9-2-2V2c0-1.1 3.58-2 8-2s8 .9 8 2v14c0 1.1-.9 2-2 2zM5.5 15c.83 0 1.5-.67 1.5-1.5S6.33 12 5.5 12 4 12.67 4 13.5 4.67 15 5.5 15zM9 3H4v6h5V3zm7 0h-5v6h5V3zm-1.5 9c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z"],
        "translate": ["M19.89 18.56l-4.99-10h-.01c-.17-.33-.5-.56-.89-.56s-.72.23-.89.56h-.01l-1.73 3.46-2.8-2.3 1.99-1.64C11.44 7.34 12 6.23 12 5V4h1c.55 0 1-.45 1-1s-.45-1-1-1H8V1c0-.55-.45-1-1-1S6 .45 6 1v1H1c-.55 0-1 .45-1 1s.45 1 1 1h9v1c0 .62-.28 1.18-.73 1.54L7 8.42 4.73 6.54C4.28 6.18 4 5.62 4 5H2c0 1.23.56 2.34 1.44 3.07l1.99 1.64-3.06 2.52.01.01c-.23.18-.38.45-.38.76 0 .55.45 1 1 1 .24 0 .45-.1.63-.24l.01.01L7 11l3.36 2.77.01-.01c.02.02.05.03.08.05.01 0 .01.01.02.02l-2.36 4.73h.01c-.07.13-.12.28-.12.44 0 .55.45 1 1 1 .39 0 .72-.23.89-.56h.01L11.12 17h5.76l1.22 2.45h.01c.17.32.5.55.89.55.55 0 1-.45 1-1 0-.16-.05-.31-.11-.44zM12.12 15L14 11.24 15.88 15h-3.76z"],
        "trash": ["M17 1h-5c0-.55-.45-1-1-1H9c-.55 0-1 .45-1 1H3c-.55 0-1 .45-1 1v1h16V2c0-.55-.45-1-1-1zm.5 3h-15c-.28 0-.5.22-.5.5s.22.5.5.5H3v14c0 .55.45 1 1 1h12c.55 0 1-.45 1-1V5h.5c.28 0 .5-.22.5-.5s-.22-.5-.5-.5zM7 16c0 .55-.45 1-1 1s-1-.45-1-1V8c0-.55.45-1 1-1s1 .45 1 1v8zm4 0c0 .55-.45 1-1 1s-1-.45-1-1V8c0-.55.45-1 1-1s1 .45 1 1v8zm4 0c0 .55-.45 1-1 1s-1-.45-1-1V8c0-.55.45-1 1-1s1 .45 1 1v8z"],
        "tree": ["M11 15.542V20H9v-4.458L2 17l4.5-5.625L4 12l3.655-5.483L6 7l4-7 4 7-1.655-.483L16 12l-2.5-.625L18 17l-7-1.458z"],
        "trending-down": ["M19 10c-.55 0-1 .45-1 1v1.37l-6.25-7.03-.01.01A.971.971 0 0 0 11 5c-.23 0-.42.09-.59.21l-.01-.01-3.43 2.58-5.42-3.61-.01.01A.969.969 0 0 0 1 4c-.55 0-1 .45-1 1 0 .35.19.64.46.82l-.01.01 6 4 .01-.02c.15.11.33.19.54.19.23 0 .42-.09.59-.21l.01.01 3.26-2.45L16.77 14H15c-.55 0-1 .45-1 1s.45 1 1 1h4c.55 0 1-.45 1-1v-4c0-.55-.45-1-1-1z"],
        "trending-up": ["M19 4h-4c-.55 0-1 .45-1 1s.45 1 1 1h1.77l-5.91 6.65L7.6 10.2l-.01.01C7.42 10.09 7.23 10 7 10c-.21 0-.39.08-.54.18l-.01-.02-6 4 .01.02c-.27.18-.46.47-.46.82 0 .55.45 1 1 1 .21 0 .39-.08.54-.18l.01.02 5.41-3.61 3.43 2.58.01-.01c.18.11.37.2.6.2.3 0 .56-.14.74-.34l.01.01L18 7.63V9c0 .55.45 1 1 1s1-.45 1-1V5c0-.55-.45-1-1-1z"],
        "two-columns": ["M5 0H1C.45 0 0 .45 0 1v18c0 .55.45 1 1 1h4c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm14.71 9.29l-3-3A1.003 1.003 0 0 0 15 7v6a1.003 1.003 0 0 0 1.71.71l3-3c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71zM12 0H8c-.55 0-1 .45-1 1v18c0 .55.45 1 1 1h4c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1z"],
        "underline": ["M10 17c3.3 0 6-2.7 6-6V3.5c0-.8-.7-1.5-1.5-1.5S13 2.7 13 3.5V11c0 1.7-1.3 3-3 3s-3-1.3-3-3V3.5C7 2.7 6.3 2 5.5 2S4 2.7 4 3.5V11c0 3.3 2.7 6 6 6zM16.5 19h-13c-.3 0-.5.2-.5.5s.2.5.5.5h13c.3 0 .5-.2.5-.5s-.2-.5-.5-.5z"],
        "undo": ["M5 14c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm9-9H3.41L5.7 2.71c.19-.18.3-.43.3-.71a1.003 1.003 0 0 0-1.71-.71l-4 4C.11 5.47 0 5.72 0 6c0 .28.11.53.29.71l4 4a1.003 1.003 0 0 0 1.42-1.42L3.41 7H14c2.21 0 4 1.79 4 4s-1.79 4-4 4H9v2h5c3.31 0 6-2.69 6-6s-2.69-6-6-6z"],
        "ungroup-objects": ["M4.5 6C2.01 6 0 8.01 0 10.5S2.01 15 4.5 15 9 12.99 9 10.5 6.99 6 4.5 6zm11 0C13.01 6 11 8.01 11 10.5s2.01 4.5 4.5 4.5 4.5-2.01 4.5-4.5S17.99 6 15.5 6z"],
        "unknown-vehicle": ["M13 11.988v-4H4v-1l1-3h6V2.003a35.867 35.867 0 0 0-1-.015c-3.593 0-5.332.488-5.332.488-.67.188-1.424.864-1.674 1.503l-.004.009H3l-1 3H1a1 1 0 1 0 0 2h.333l-.28.84-.053.16v7.5a1.5 1.5 0 1 0 3 0v-.5h12v.5a1.5 1.5 0 1 0 3 0v-4.5h-5a1 1 0 0 1-1-1zm-8.5 1a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zM19.83 2.782a2.392 2.392 0 0 0-.592-.853c-.276-.264-.64-.485-1.09-.663C17.695 1.09 17.132 1 16.457 1c-.523 0-.996.084-1.418.253a3.157 3.157 0 0 0-1.084.703c-.299.3-.532.656-.698 1.065-.166.41-.254.861-.264 1.353h2.096c0-.246.028-.476.085-.69.057-.214.145-.4.264-.56.119-.16.27-.287.456-.383.185-.095.406-.143.663-.143.38 0 .677.1.89.3.215.2.321.51.321.93.01.245-.035.45-.135.614-.1.164-.23.314-.392.45a8.598 8.598 0 0 1-.527.41 3.53 3.53 0 0 0-.542.485c-.171.187-.32.412-.45.676-.127.265-.206.592-.234.984v.614h1.924v-.519c.038-.273.13-.5.278-.683.147-.182.316-.343.506-.484a13.5 13.5 0 0 1 .606-.424c.214-.14.408-.312.584-.512s.323-.442.442-.724.178-.642.178-1.079c0-.264-.059-.548-.178-.854zm-4.54 6.099v2.103h2.237V8.881H15.29z"],
        "unlock": ["M14 1c-2.21 0-4 1.79-4 4v4H2c-.55 0-1 .45-1 1v8c0 .55.45 1 1 1h12c.55 0 1-.45 1-1v-8c0-.55-.45-1-1-1h-2V5c0-1.1.9-2 2-2s2 .9 2 2v2c0 .55.45 1 1 1s1-.45 1-1V5c0-2.21-1.79-4-4-4z"],
        "unpin": ["M11.77 1.16c-.81.81-.74 2.28.02 3.76L6.1 8.71c-2.17-1.46-4.12-2-4.94-1.18l4.95 4.95-2.12 3.54 3.54-2.12 4.95 4.95c.82-.82.27-2.77-1.19-4.94l3.8-5.69c1.47.76 2.94.84 3.76.02l-7.08-7.08z"],
        "unresolve": ["M11.47 12.46c.16-.36.29-.74.38-1.14 0-.02.01-.04.01-.06.09-.4.14-.82.14-1.26 0-.44-.05-.86-.14-1.27 0-.02-.01-.04-.01-.06-.09-.4-.22-.78-.38-1.14-.01-.02-.02-.03-.02-.05a5.94 5.94 0 0 0-.61-1.03c0-.01-.01-.01-.01-.02a6.308 6.308 0 0 0-2.1-1.77c-.19-.1-.39-.18-.59-.26-.03-.01-.06-.02-.1-.03-.17-.07-.34-.12-.52-.17-.05-.01-.1-.03-.15-.04a4.34 4.34 0 0 0-.52-.09c-.05-.01-.11-.02-.17-.03C6.46 4.02 6.23 4 6 4c-3.31 0-6 2.69-6 6s2.69 6 6 6c.23 0 .46-.02.68-.04l.17-.03c.17-.02.34-.06.51-.09.05-.01.1-.03.15-.04.18-.05.36-.1.53-.17l.09-.03a5.973 5.973 0 0 0 2.68-2.04c0-.01.01-.01.01-.02.24-.32.44-.66.61-1.03.02-.01.03-.03.04-.05zM14 4c-.99 0-1.91.24-2.73.66a7.51 7.51 0 0 1 0 10.68c.82.42 1.74.66 2.73.66 3.31 0 6-2.69 6-6s-2.69-6-6-6z"],
        "updated": ["M10 0C6.71 0 3.82 1.6 2 4.05V2c0-.55-.45-1-1-1s-1 .45-1 1v4c0 .55.45 1 1 1h4c.55 0 1-.45 1-1s-.45-1-1-1H3.76C5.22 3.17 7.47 2 10 2c4.42 0 8 3.58 8 8s-3.58 8-8 8-8-3.58-8-8c0-.55-.45-1-1-1s-1 .45-1 1c0 5.52 4.48 10 10 10s10-4.48 10-10S15.52 0 10 0zm4 7c-.28 0-.53.11-.71.29L9 11.58 6.71 9.29a1.003 1.003 0 0 0-1.42 1.42l3 3c.18.18.43.29.71.29.28 0 .53-.11.71-.29l5-5A1.003 1.003 0 0 0 14 7z"],
        "upload": ["M10 0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zm4 10c-.28 0-.53-.11-.71-.29L11 7.41V15c0 .55-.45 1-1 1s-1-.45-1-1V7.41l-2.29 2.3a1.003 1.003 0 0 1-1.42-1.42l4-4c.18-.18.43-.29.71-.29s.53.11.71.29l4 4A1.003 1.003 0 0 1 14 10z"],
        "user": ["M10 0C4.48 0 0 4.48 0 10c0 .33.02.65.05.97.01.12.03.23.05.35.03.2.05.4.09.59.03.14.06.28.1.42l.12.48c.05.16.1.31.15.46.05.13.09.27.15.4.06.16.13.32.21.48.05.11.1.22.16.33.09.17.17.34.27.5.05.09.1.17.15.25.11.18.22.35.34.52.04.06.08.11.12.17 1.19 1.62 2.85 2.86 4.78 3.53l.09.03c.46.15.93.27 1.42.36.08.01.17.03.25.04.49.07.99.12 1.5.12s1.01-.05 1.5-.12c.08-.01.17-.02.25-.04.49-.09.96-.21 1.42-.36l.09-.03c1.93-.67 3.59-1.91 4.78-3.53.04-.05.08-.1.12-.16.12-.17.23-.35.34-.53.05-.08.1-.16.15-.25.1-.17.19-.34.27-.51.05-.11.1-.21.15-.32.07-.16.14-.32.21-.49.05-.13.1-.26.14-.39.05-.15.11-.31.15-.46.05-.16.08-.32.12-.48.03-.14.07-.28.1-.42.04-.19.06-.39.09-.59.02-.12.04-.23.05-.35.05-.32.07-.64.07-.97 0-5.52-4.48-10-10-10zm0 18a7.94 7.94 0 0 1-6.15-2.89c.84-.44 1.86-.82 2.67-1.19 1.45-.65 1.3-1.05 1.35-1.59.01-.07.01-.14.01-.21-.51-.45-.93-1.08-1.2-1.8l-.01-.01c0-.01-.01-.02-.01-.03a4.42 4.42 0 0 1-.15-.48c-.33-.07-.53-.44-.61-.79-.08-.14-.23-.48-.2-.87.05-.51.26-.74.49-.83v-.08c0-.63.06-1.55.17-2.15.02-.17.06-.33.11-.5.21-.73.66-1.4 1.26-1.86.62-.47 1.5-.72 2.28-.72.78 0 1.65.25 2.27.73.6.46 1.05 1.12 1.26 1.86.05.16.08.33.11.5.11.6.17 1.51.17 2.15v.09c.22.1.42.33.46.82.04.39-.12.73-.2.87-.07.34-.27.71-.6.78-.04.16-.09.33-.15.48 0 .01-.02.05-.02.05-.26.71-.67 1.33-1.17 1.78 0 .08.01.16.01.23.05.54-.15.94 1.31 1.59.81.36 1.84.74 2.68 1.19A7.958 7.958 0 0 1 10 18z"],
        "variable": ["M4.93 3.79a9.1 9.1 0 0 1 2.2-2.27L7.29 1c-1.38.59-2.57 1.33-3.55 2.22C2.46 4.39 1.49 5.72.83 7.23.28 8.51 0 9.81 0 11.12c0 2.28.83 4.57 2.49 6.86l.16-.55c-.49-1.23-.73-2.38-.73-3.44 0-1.67.28-3.46.84-5.36.55-1.9 1.28-3.51 2.17-4.84zm9.38 8.39l-.33-.2c-.37.54-.65.87-.82 1a.74.74 0 0 1-.42.12c-.19 0-.38-.12-.57-.37-.31-.42-.73-1.59-1.26-3.5.47-.85.86-1.41 1.19-1.67.23-.19.48-.29.74-.29.1 0 .28.04.53.11.26.07.48.11.68.11.27 0 .5-.1.68-.29.18-.19.27-.44.27-.75 0-.33-.09-.58-.27-.77-.18-.19-.44-.29-.78-.29-.3 0-.59.07-.86.22s-.61.47-1.02.97c-.31.37-.77 1.02-1.37 1.94a9.683 9.683 0 0 0-1.24-3.14l-3.24.59-.06.36c.24-.05.44-.07.61-.07.32 0 .59.14.8.43.33.45.8 1.8 1.39 4.07-.47.64-.78 1.06-.96 1.26-.28.32-.52.53-.7.62-.14.08-.3.11-.48.11-.14 0-.36-.08-.67-.23-.21-.1-.4-.15-.57-.15-.31 0-.57.11-.78.32s-.31.48-.31.8c0 .31.09.55.28.75.19.19.44.29.76.29.31 0 .6-.07.87-.2s.61-.42 1.02-.86c.41-.44.98-1.13 1.7-2.08.28.9.52 1.56.72 1.97.2.41.44.71.7.89.26.18.59.27.99.27.38 0 .77-.14 1.17-.43.54-.36 1.07-1 1.61-1.91zM17.51 1l-.15.54c.49 1.24.73 2.39.73 3.45 0 1.43-.21 2.96-.63 4.6-.33 1.26-.75 2.45-1.27 3.55-.52 1.11-1.02 1.97-1.51 2.6-.49.62-1.09 1.2-1.8 1.72l-.17.53c1.38-.59 2.57-1.34 3.55-2.23 1.29-1.17 2.26-2.5 2.91-4 .55-1.28.83-2.59.83-3.91 0-2.27-.83-4.56-2.49-6.85z"],
        "vertical-bar-chart-asc": ["M8 7H7c-.55 0-1 .45-1 1v11c0 .55.45 1 1 1h1c.55 0 1-.45 1-1V8c0-.55-.45-1-1-1zM3 9H2c-.55 0-1 .45-1 1v9c0 .55.45 1 1 1h1c.55 0 1-.45 1-1v-9c0-.55-.45-1-1-1zm10-5h-1c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1h1c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1zm5-4h-1c-.55 0-1 .45-1 1v18c0 .55.45 1 1 1h1c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1z"],
        "vertical-bar-chart-desc": ["M3 0H2c-.55 0-1 .45-1 1v18c0 .55.45 1 1 1h1c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm5 4H7c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1h1c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1zm5 3h-1c-.55 0-1 .45-1 1v11c0 .55.45 1 1 1h1c.55 0 1-.45 1-1V8c0-.55-.45-1-1-1zm5 2h-1c-.55 0-1 .45-1 1v9c0 .55.45 1 1 1h1c.55 0 1-.45 1-1v-9c0-.55-.45-1-1-1z"],
        "vertical-distribution": ["M1 2h18c.55 0 1-.45 1-1s-.45-1-1-1H1C.45 0 0 .45 0 1s.45 1 1 1zm2 5c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V8c0-.55-.45-1-1-1H3zm16 11H1c-.55 0-1 .45-1 1s.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1z"],
        "video": ["M19 2H1c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zM7 14V6l6 4-6 4z"],
        "volume-down": ["M15.92 3.93l-1.6 1.18A7.948 7.948 0 0 1 16 10c0 1.84-.63 3.54-1.68 4.89l1.6 1.18A9.878 9.878 0 0 0 18 10c0-2.29-.78-4.39-2.08-6.07zM11 3c-.28 0-.53.11-.71.29L7.59 6H3c-.55 0-1 .45-1 1v6c0 .55.45 1 1 1h4.59l2.71 2.71c.17.18.42.29.7.29.55 0 1-.45 1-1V4c0-.55-.45-1-1-1z"],
        "volume-off": ["M14 3c-.28 0-.53.11-.71.29L10.59 6H6c-.55 0-1 .45-1 1v6c0 .55.45 1 1 1h4.59l2.71 2.71c.17.18.42.29.7.29.55 0 1-.45 1-1V4c0-.55-.45-1-1-1z"],
        "volume-up": ["M9 3.43c-.28 0-.53.11-.71.29l-2.7 2.71H1c-.55 0-1 .45-1 1v6c0 .55.45 1 1 1h4.59l2.71 2.71a1.003 1.003 0 0 0 1.71-.71v-12c-.01-.55-.46-1-1.01-1zm8.31-1.56l-1.62 1.2C17.14 5.16 18 7.69 18 10.43s-.86 5.27-2.31 7.37l1.62 1.2C19 16.57 20 13.62 20 10.43c0-3.18-1-6.13-2.69-8.56zm-3.39 2.49l-1.6 1.18A7.948 7.948 0 0 1 14 10.43c0 1.84-.63 3.54-1.68 4.89l1.6 1.18A9.94 9.94 0 0 0 16 10.43c0-2.28-.78-4.38-2.08-6.07z"],
        "walk": ["M16 10h-2c-.23 0-.42-.09-.59-.21l-.01.01-1.69-1.27-.63 3.14 2.62 2.62c.19.18.3.43.3.71v4c0 .55-.45 1-1 1s-1-.45-1-1v-3.59L9.39 12.8l-2.45 6.55h-.01c-.14.38-.5.65-.93.65-.55 0-1-.45-1-1 0-.12.03-.24.07-.35h-.01L9.43 7h-2.9l-1.7 2.55-.01-.01c-.18.27-.47.46-.82.46-.55 0-1-.45-1-1 0-.21.08-.39.18-.54l-.01-.01 2-3 .02.01C5.36 5.19 5.65 5 6 5h4.18l.36-.96c-.33-.43-.54-.96-.54-1.54a2.5 2.5 0 0 1 5 0A2.5 2.5 0 0 1 12.5 5c-.06 0-.12-.01-.18-.02l-.44 1.18L14.33 8H16c.55 0 1 .45 1 1s-.45 1-1 1z"],
        "warning-sign": ["M19.86 17.52l.01-.01-9-16-.01.01C10.69 1.21 10.37 1 10 1s-.69.21-.86.52l-.01-.01-9 16 .01.01c-.08.14-.14.3-.14.48 0 .55.45 1 1 1h18c.55 0 1-.45 1-1 0-.18-.06-.34-.14-.48zM11 17H9v-2h2v2zm0-3H9V6h2v8z"],
        "waterfall-chart": ["M13 7h2c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1h-2c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1zm-9 8h1c.55 0 1-.45 1-1v-4c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1zm4-6h2c.55 0 1-.45 1-1s-.45-1-1-1H8c-.55 0-1 .45-1 1s.45 1 1 1zm11-5h-1c-.55 0-1 .45-1 1v9c0 .55.45 1 1 1h1c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1zm0 12H2V3c0-.55-.45-1-1-1s-1 .45-1 1v14a.998.998 0 0 0 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1z"],
        "widget": ["M18 4c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zM2 16c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm15-1h2V5h-2v10zM3 5H1v10h2V5zM2 0C.9 0 0 .9 0 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm3 3h10V1H5v2zm13 13c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zM5 19h10v-2H5v2z"],
        "widget-button": ["M1 4h18c.55 0 1 .45 1 1v10c0 .55-.45 1-1 1H1c-.55 0-1-.45-1-1V5c0-.55.45-1 1-1zm1 2v8h16V6H2zm4 5c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm4 0c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm4 0c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1z"],
        "widget-footer": ["M17 0H3c-.55 0-1 .45-1 1v18c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 18H4v-4h12v4zm0-5H4V2h12v11z"],
        "widget-header": ["M17 0H3c-.55 0-1 .45-1 1v18c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 18H4V7h12v11zm0-12H4V2h12v4z"],
        "wrench": ["M19.8 4.44L16.13 8.1l-3.55-.71-.71-3.53L15.54.21c-2.01-.53-4.23-.03-5.8 1.53-1.86 1.85-2.23 4.6-1.14 6.83L.59 16.59C.22 16.95 0 17.45 0 18a2 2 0 0 0 2 2c.55 0 1.05-.22 1.41-.59l8.03-8.04c2.23 1.05 4.97.67 6.82-1.16 1.57-1.56 2.07-3.77 1.54-5.77z"],
        "zoom-in": ["M19.56 17.44l-4.94-4.94A8.004 8.004 0 0 0 16 8c0-4.42-3.58-8-8-8S0 3.58 0 8s3.58 8 8 8c1.67 0 3.21-.51 4.5-1.38l4.94 4.94a1.498 1.498 0 1 0 2.12-2.12zM8 14c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.69 6-6 6zm3-7H9V5c0-.55-.45-1-1-1s-1 .45-1 1v2H5c-.55 0-1 .45-1 1s.45 1 1 1h2v2c0 .55.45 1 1 1s1-.45 1-1V9h2c.55 0 1-.45 1-1s-.45-1-1-1z"],
        "zoom-out": ["M11 7H5c-.55 0-1 .45-1 1s.45 1 1 1h6c.55 0 1-.45 1-1s-.45-1-1-1zm8.56 10.44l-4.94-4.94A8.004 8.004 0 0 0 16 8c0-4.42-3.58-8-8-8S0 3.58 0 8s3.58 8 8 8c1.67 0 3.21-.51 4.5-1.38l4.94 4.94a1.498 1.498 0 1 0 2.12-2.12zM8 14c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.69 6-6 6z"],
        "zoom-to-fit": ["M1 7c.55 0 1-.45 1-1V2h4c.55 0 1-.45 1-1s-.45-1-1-1H1C.45 0 0 .45 0 1v5c0 .55.45 1 1 1zm5 1a1.003 1.003 0 0 0-1.71-.71l-2 2c-.18.18-.29.43-.29.71 0 .28.11.53.29.71l2 2a1.003 1.003 0 0 0 1.42-1.42L4.41 10 5.7 8.71c.19-.18.3-.43.3-.71zm2-2c.28 0 .53-.11.71-.29L10 4.41l1.29 1.29c.18.19.43.3.71.3a1.003 1.003 0 0 0 .71-1.71l-2-2C10.53 2.11 10.28 2 10 2s-.53.11-.71.29l-2 2A1.003 1.003 0 0 0 8 6zM6 18H2v-4c0-.55-.45-1-1-1s-1 .45-1 1v5c0 .55.45 1 1 1h5c.55 0 1-.45 1-1s-.45-1-1-1zm8-6a1.003 1.003 0 0 0 1.71.71l2-2c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71l-2-2a1.003 1.003 0 0 0-1.42 1.42l1.3 1.29-1.29 1.29c-.19.18-.3.43-.3.71zm5-12h-5c-.55 0-1 .45-1 1s.45 1 1 1h4v4c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1zm-7 14c-.28 0-.53.11-.71.29L10 15.59 8.71 14.3A.965.965 0 0 0 8 14a1.003 1.003 0 0 0-.71 1.71l2 2c.18.18.43.29.71.29s.53-.11.71-.29l2-2A1.003 1.003 0 0 0 12 14zm7-1c-.55 0-1 .45-1 1v4h-4c-.55 0-1 .45-1 1s.45 1 1 1h5c.55 0 1-.45 1-1v-5c0-.55-.45-1-1-1z"]
    };
    
});
System.registerDynamic("npm:@blueprintjs/icons@3.5.0/lib/cjs/index.js", ["npm:tslib@1.9.3.js", "npm:@blueprintjs/icons@3.5.0/lib/cjs/generated/iconContents.js", "npm:@blueprintjs/icons@3.5.0/lib/cjs/generated/iconNames.js", "npm:@blueprintjs/icons@3.5.0/lib/cjs/generated/iconSvgPaths.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  var IconContents = tslib_1.__importStar($__require("npm:@blueprintjs/icons@3.5.0/lib/cjs/generated/iconContents.js"));
  exports.IconContents = IconContents;
  var IconNames = tslib_1.__importStar($__require("npm:@blueprintjs/icons@3.5.0/lib/cjs/generated/iconNames.js"));
  exports.IconNames = IconNames;
  var iconSvgPaths_1 = $__require("npm:@blueprintjs/icons@3.5.0/lib/cjs/generated/iconSvgPaths.js");
  exports.IconSvgPaths16 = iconSvgPaths_1.IconSvgPaths16;
  exports.IconSvgPaths20 = iconSvgPaths_1.IconSvgPaths20;
});
System.registerDynamic("npm:@blueprintjs/icons@3.5.0.js", ["npm:@blueprintjs/icons@3.5.0/lib/cjs/index.js"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("npm:@blueprintjs/icons@3.5.0/lib/cjs/index.js");
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/common/abstractComponent.js", ["npm:tslib@1.9.3.js", "npm:react@16.7.0.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/utils.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  var React = tslib_1.__importStar($__require("npm:react@16.7.0.js"));
  var utils_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/utils.js");
  var AbstractComponent = function (_super) {
    tslib_1.__extends(AbstractComponent, _super);
    function AbstractComponent(props, context) {
      var _this = _super.call(this, props, context) || this;
      _this.timeoutIds = [];
      _this.clearTimeouts = function () {
        if (_this.timeoutIds.length > 0) {
          for (var _i = 0, _a = _this.timeoutIds; _i < _a.length; _i++) {
            var timeoutId = _a[_i];
            window.clearTimeout(timeoutId);
          }
          _this.timeoutIds = [];
        }
      };
      if (!utils_1.isNodeEnv("production")) {
        _this.validateProps(_this.props);
      }
      return _this;
    }
    AbstractComponent.prototype.componentWillReceiveProps = function (nextProps) {
      if (!utils_1.isNodeEnv("production")) {
        this.validateProps(nextProps);
      }
    };
    AbstractComponent.prototype.componentWillUnmount = function () {
      this.clearTimeouts();
    };
    AbstractComponent.prototype.setTimeout = function (callback, timeout) {
      var handle = window.setTimeout(callback, timeout);
      this.timeoutIds.push(handle);
      return function () {
        return window.clearTimeout(handle);
      };
    };
    AbstractComponent.prototype.validateProps = function (_) {};
    return AbstractComponent;
  }(React.Component);
  exports.AbstractComponent = AbstractComponent;
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/common/abstractPureComponent.js", ["npm:tslib@1.9.3.js", "npm:react@16.7.0.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/utils.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  var React = tslib_1.__importStar($__require("npm:react@16.7.0.js"));
  var utils_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/utils.js");
  var AbstractPureComponent = function (_super) {
    tslib_1.__extends(AbstractPureComponent, _super);
    function AbstractPureComponent(props, context) {
      var _this = _super.call(this, props, context) || this;
      _this.timeoutIds = [];
      _this.clearTimeouts = function () {
        if (_this.timeoutIds.length > 0) {
          for (var _i = 0, _a = _this.timeoutIds; _i < _a.length; _i++) {
            var timeoutId = _a[_i];
            window.clearTimeout(timeoutId);
          }
          _this.timeoutIds = [];
        }
      };
      if (!utils_1.isNodeEnv("production")) {
        _this.validateProps(_this.props);
      }
      return _this;
    }
    AbstractPureComponent.prototype.componentWillReceiveProps = function (nextProps) {
      if (!utils_1.isNodeEnv("production")) {
        this.validateProps(nextProps);
      }
    };
    AbstractPureComponent.prototype.componentWillUnmount = function () {
      this.clearTimeouts();
    };
    AbstractPureComponent.prototype.setTimeout = function (callback, timeout) {
      var handle = window.setTimeout(callback, timeout);
      this.timeoutIds.push(handle);
      return function () {
        return window.clearTimeout(handle);
      };
    };
    AbstractPureComponent.prototype.validateProps = function (_) {};
    return AbstractPureComponent;
  }(React.PureComponent);
  exports.AbstractPureComponent = AbstractPureComponent;
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/common/boundary.js", [], true, function ($__require, exports, module) {
  /* */
  "use strict";
  /*
   * Copyright 2018 Palantir Technologies, Inc. All rights reserved.
   *
   * Licensed under the terms of the LICENSE file distributed with this project.
   */

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  /** Boundary of a one-dimensional interval. */
  exports.Boundary = {
    START: "start",
    // tslint:disable-next-line:object-literal-sort-keys
    END: "end"
  };
  
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/common/colors.js", [], true, function ($__require, exports, module) {
    /* */
    "use strict";
    /*
     * Copyright 2016 Palantir Technologies, Inc. All rights reserved.
     *
     * Licensed under the terms of the LICENSE file distributed with this project.
     */

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Colors = {
        BLACK: "#10161A",
        BLUE1: "#0E5A8A",
        BLUE2: "#106BA3",
        BLUE3: "#137CBD",
        BLUE4: "#2B95D6",
        BLUE5: "#48AFF0",
        COBALT1: "#1F4B99",
        COBALT2: "#2458B3",
        COBALT3: "#2965CC",
        COBALT4: "#4580E6",
        COBALT5: "#669EFF",
        DARK_GRAY1: "#182026",
        DARK_GRAY2: "#202B33",
        DARK_GRAY3: "#293742",
        DARK_GRAY4: "#30404D",
        DARK_GRAY5: "#394B59",
        FOREST1: "#1D7324",
        FOREST2: "#238C2C",
        FOREST3: "#29A634",
        FOREST4: "#43BF4D",
        FOREST5: "#62D96B",
        GOLD1: "#A67908",
        GOLD2: "#BF8C0A",
        GOLD3: "#D99E0B",
        GOLD4: "#F2B824",
        GOLD5: "#FFC940",
        GRAY1: "#5C7080",
        GRAY2: "#738694",
        GRAY3: "#8A9BA8",
        GRAY4: "#A7B6C2",
        GRAY5: "#BFCCD6",
        GREEN1: "#0A6640",
        GREEN2: "#0D8050",
        GREEN3: "#0F9960",
        GREEN4: "#15B371",
        GREEN5: "#3DCC91",
        INDIGO1: "#5642A6",
        INDIGO2: "#634DBF",
        INDIGO3: "#7157D9",
        INDIGO4: "#9179F2",
        INDIGO5: "#AD99FF",
        LIGHT_GRAY1: "#CED9E0",
        LIGHT_GRAY2: "#D8E1E8",
        LIGHT_GRAY3: "#E1E8ED",
        LIGHT_GRAY4: "#EBF1F5",
        LIGHT_GRAY5: "#F5F8FA",
        LIME1: "#728C23",
        LIME2: "#87A629",
        LIME3: "#9BBF30",
        LIME4: "#B6D94C",
        LIME5: "#D1F26D",
        ORANGE1: "#A66321",
        ORANGE2: "#BF7326",
        ORANGE3: "#D9822B",
        ORANGE4: "#F29D49",
        ORANGE5: "#FFB366",
        RED1: "#A82A2A",
        RED2: "#C23030",
        RED3: "#DB3737",
        RED4: "#F55656",
        RED5: "#FF7373",
        ROSE1: "#A82255",
        ROSE2: "#C22762",
        ROSE3: "#DB2C6F",
        ROSE4: "#F5498B",
        ROSE5: "#FF66A1",
        SEPIA1: "#63411E",
        SEPIA2: "#7D5125",
        SEPIA3: "#96622D",
        SEPIA4: "#B07B46",
        SEPIA5: "#C99765",
        TURQUOISE1: "#008075",
        TURQUOISE2: "#00998C",
        TURQUOISE3: "#00B3A4",
        TURQUOISE4: "#14CCBD",
        TURQUOISE5: "#2EE6D6",
        VERMILION1: "#9E2B0E",
        VERMILION2: "#B83211",
        VERMILION3: "#D13913",
        VERMILION4: "#EB532D",
        VERMILION5: "#FF6E4A",
        VIOLET1: "#5C255C",
        VIOLET2: "#752F75",
        VIOLET3: "#8F398F",
        VIOLET4: "#A854A8",
        VIOLET5: "#C274C2",
        WHITE: "#FFFFFF"
    };
    
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/common/position.js", [], true, function ($__require, exports, module) {
    /* */
    "use strict";
    /*
     * Copyright 2015 Palantir Technologies, Inc. All rights reserved.
     *
     * Licensed under the terms of the LICENSE file distributed with this project.
     */

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Position = {
        BOTTOM: "bottom",
        BOTTOM_LEFT: "bottom-left",
        BOTTOM_RIGHT: "bottom-right",
        LEFT: "left",
        LEFT_BOTTOM: "left-bottom",
        LEFT_TOP: "left-top",
        RIGHT: "right",
        RIGHT_BOTTOM: "right-bottom",
        RIGHT_TOP: "right-top",
        TOP: "top",
        TOP_LEFT: "top-left",
        TOP_RIGHT: "top-right"
    };
    function isPositionHorizontal(position) {
        /* istanbul ignore next */
        return position === exports.Position.TOP || position === exports.Position.TOP_LEFT || position === exports.Position.TOP_RIGHT || position === exports.Position.BOTTOM || position === exports.Position.BOTTOM_LEFT || position === exports.Position.BOTTOM_RIGHT;
    }
    exports.isPositionHorizontal = isPositionHorizontal;
    function isPositionVertical(position) {
        /* istanbul ignore next */
        return position === exports.Position.LEFT || position === exports.Position.LEFT_TOP || position === exports.Position.LEFT_BOTTOM || position === exports.Position.RIGHT || position === exports.Position.RIGHT_TOP || position === exports.Position.RIGHT_BOTTOM;
    }
    exports.isPositionVertical = isPositionVertical;
    
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js", ["npm:tslib@1.9.3.js"], true, function ($__require, exports, module) {
    /* */
    "use strict";
    /*
     * Copyright 2015 Palantir Technologies, Inc. All rights reserved.
     *
     * Licensed under the terms of the LICENSE file distributed with this project.
     */

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = $__require("npm:tslib@1.9.3.js");
    exports.DISPLAYNAME_PREFIX = "Blueprint3";
    /** A collection of curated prop keys used across our Components which are not valid HTMLElement props. */
    var INVALID_PROPS = ["active", "alignText", "containerRef", "elementRef", "fill", "icon", "inputRef", "intent", "inline", "large", "loading", "leftIcon", "minimal", "onChildrenMount", "onRemove", "popoverProps", "rightElement", "rightIcon", "round", "small", "text"];
    /**
     * Typically applied to HTMLElements to filter out blacklisted props. When applied to a Component,
     * can filter props from being passed down to the children. Can also filter by a combined list of
     * supplied prop keys and the blacklist (only appropriate for HTMLElements).
     * @param props The original props object to filter down.
     * @param {string[]} invalidProps If supplied, overwrites the default blacklist.
     * @param {boolean} shouldMerge If true, will merge supplied invalidProps and blacklist together.
     */
    function removeNonHTMLProps(props, invalidProps, shouldMerge) {
        if (invalidProps === void 0) {
            invalidProps = INVALID_PROPS;
        }
        if (shouldMerge === void 0) {
            shouldMerge = false;
        }
        if (shouldMerge) {
            invalidProps = invalidProps.concat(INVALID_PROPS);
        }
        return invalidProps.reduce(function (prev, curr) {
            if (prev.hasOwnProperty(curr)) {
                delete prev[curr];
            }
            return prev;
        }, tslib_1.__assign({}, props));
    }
    exports.removeNonHTMLProps = removeNonHTMLProps;
    
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/common/alignment.js", [], true, function ($__require, exports, module) {
  /* */
  "use strict";
  /*
   * Copyright 2018 Palantir Technologies, Inc. All rights reserved.
   *
   * Licensed under the terms of the LICENSE file distributed with this project.
   */

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  /** Alignment along the horizontal axis. */
  exports.Alignment = {
    CENTER: "center",
    LEFT: "left",
    RIGHT: "right"
  };
  
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/common/elevation.js", [], true, function ($__require, exports, module) {
    /* */
    "use strict";
    /*
     * Copyright 2018 Palantir Technologies, Inc. All rights reserved.
     *
     * Licensed under the terms of the LICENSE file distributed with this project.
     */

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    // tslint:disable:object-literal-sort-keys
    exports.Elevation = {
        ZERO: 0,
        ONE: 1,
        TWO: 2,
        THREE: 3,
        FOUR: 4
    };
    
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/common/intent.js", [], true, function ($__require, exports, module) {
  /* */
  "use strict";
  /*
   * Copyright 2015 Palantir Technologies, Inc. All rights reserved.
   *
   * Licensed under the terms of the LICENSE file distributed with this project.
   */

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  // tslint:disable:object-literal-sort-keys
  /**
   * The four basic intents.
   */
  exports.Intent = {
    NONE: "none",
    PRIMARY: "primary",
    SUCCESS: "success",
    WARNING: "warning",
    DANGER: "danger"
  };
  
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js", ["npm:@blueprintjs/core@3.11.0/lib/cjs/common/alignment.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/elevation.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/intent.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    "use strict";

    Object.defineProperty(exports, "__esModule", { value: true });
    var alignment_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/alignment.js");
    var elevation_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/elevation.js");
    var intent_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/intent.js");
    var NS = process.env.BLUEPRINT_NAMESPACE || "bp3";
    exports.ACTIVE = NS + "-active";
    exports.ALIGN_LEFT = NS + "-align-left";
    exports.ALIGN_RIGHT = NS + "-align-right";
    exports.DARK = NS + "-dark";
    exports.DISABLED = NS + "-disabled";
    exports.FILL = NS + "-fill";
    exports.FIXED = NS + "-fixed";
    exports.FIXED_TOP = NS + "-fixed-top";
    exports.INLINE = NS + "-inline";
    exports.INTERACTIVE = NS + "-interactive";
    exports.LARGE = NS + "-large";
    exports.LOADING = NS + "-loading";
    exports.MINIMAL = NS + "-minimal";
    exports.MULTILINE = NS + "-multiline";
    exports.ROUND = NS + "-round";
    exports.SMALL = NS + "-small";
    exports.VERTICAL = NS + "-vertical";
    exports.ELEVATION_0 = elevationClass(elevation_1.Elevation.ZERO);
    exports.ELEVATION_1 = elevationClass(elevation_1.Elevation.ONE);
    exports.ELEVATION_2 = elevationClass(elevation_1.Elevation.TWO);
    exports.ELEVATION_3 = elevationClass(elevation_1.Elevation.THREE);
    exports.ELEVATION_4 = elevationClass(elevation_1.Elevation.FOUR);
    exports.INTENT_PRIMARY = intentClass(intent_1.Intent.PRIMARY);
    exports.INTENT_SUCCESS = intentClass(intent_1.Intent.SUCCESS);
    exports.INTENT_WARNING = intentClass(intent_1.Intent.WARNING);
    exports.INTENT_DANGER = intentClass(intent_1.Intent.DANGER);
    exports.FOCUS_DISABLED = NS + "-focus-disabled";
    exports.UI_TEXT = NS + "-ui-text";
    exports.RUNNING_TEXT = NS + "-running-text";
    exports.MONOSPACE_TEXT = NS + "-monospace-text";
    exports.TEXT_LARGE = NS + "-text-large";
    exports.TEXT_SMALL = NS + "-text-small";
    exports.TEXT_MUTED = NS + "-text-muted";
    exports.TEXT_DISABLED = NS + "-text-disabled";
    exports.TEXT_OVERFLOW_ELLIPSIS = NS + "-text-overflow-ellipsis";
    exports.BLOCKQUOTE = NS + "-blockquote";
    exports.CODE = NS + "-code";
    exports.CODE_BLOCK = NS + "-code-block";
    exports.HEADING = NS + "-heading";
    exports.LIST = NS + "-list";
    exports.LIST_UNSTYLED = NS + "-list-unstyled";
    exports.RTL = NS + "-rtl";
    exports.ALERT = NS + "-alert";
    exports.ALERT_BODY = exports.ALERT + "-body";
    exports.ALERT_CONTENTS = exports.ALERT + "-contents";
    exports.ALERT_FOOTER = exports.ALERT + "-footer";
    exports.BREADCRUMB = NS + "-breadcrumb";
    exports.BREADCRUMB_CURRENT = exports.BREADCRUMB + "-current";
    exports.BREADCRUMBS = exports.BREADCRUMB + "s";
    exports.BREADCRUMBS_COLLAPSED = exports.BREADCRUMB + "s-collapsed";
    exports.BUTTON = NS + "-button";
    exports.BUTTON_GROUP = exports.BUTTON + "-group";
    exports.BUTTON_SPINNER = exports.BUTTON + "-spinner";
    exports.BUTTON_TEXT = exports.BUTTON + "-text";
    exports.CALLOUT = NS + "-callout";
    exports.CALLOUT_ICON = exports.CALLOUT + "-icon";
    exports.CARD = NS + "-card";
    exports.COLLAPSE = NS + "-collapse";
    exports.COLLAPSE_BODY = exports.COLLAPSE + "-body";
    exports.COLLAPSIBLE_LIST = NS + "-collapse-list";
    exports.CONTEXT_MENU = NS + "-context-menu";
    exports.CONTEXT_MENU_POPOVER_TARGET = exports.CONTEXT_MENU + "-popover-target";
    exports.CONTROL_GROUP = NS + "-control-group";
    exports.DIALOG = NS + "-dialog";
    exports.DIALOG_CONTAINER = exports.DIALOG + "-container";
    exports.DIALOG_BODY = exports.DIALOG + "-body";
    exports.DIALOG_CLOSE_BUTTON = exports.DIALOG + "-close-button";
    exports.DIALOG_FOOTER = exports.DIALOG + "-footer";
    exports.DIALOG_FOOTER_ACTIONS = exports.DIALOG + "-footer-actions";
    exports.DIALOG_HEADER = exports.DIALOG + "-header";
    exports.DIVIDER = NS + "-divider";
    exports.EDITABLE_TEXT = NS + "-editable-text";
    exports.EDITABLE_TEXT_CONTENT = exports.EDITABLE_TEXT + "-content";
    exports.EDITABLE_TEXT_EDITING = exports.EDITABLE_TEXT + "-editing";
    exports.EDITABLE_TEXT_INPUT = exports.EDITABLE_TEXT + "-input";
    exports.EDITABLE_TEXT_PLACEHOLDER = exports.EDITABLE_TEXT + "-placeholder";
    exports.FLEX_EXPANDER = NS + "-flex-expander";
    exports.HTML_SELECT = NS + "-html-select";
    exports.SELECT = NS + "-select";
    exports.HTML_TABLE = NS + "-html-table";
    exports.HTML_TABLE_BORDERED = exports.HTML_TABLE + "-bordered";
    exports.HTML_TABLE_CONDENSED = exports.HTML_TABLE + "-condensed";
    exports.HTML_TABLE_STRIPED = exports.HTML_TABLE + "-striped";
    exports.INPUT = NS + "-input";
    exports.INPUT_GHOST = exports.INPUT + "-ghost";
    exports.INPUT_GROUP = exports.INPUT + "-group";
    exports.INPUT_ACTION = exports.INPUT + "-action";
    exports.CONTROL = NS + "-control";
    exports.CONTROL_INDICATOR = exports.CONTROL + "-indicator";
    exports.CHECKBOX = NS + "-checkbox";
    exports.RADIO = NS + "-radio";
    exports.SWITCH = NS + "-switch";
    exports.FILE_INPUT = NS + "-file-input";
    exports.FILE_UPLOAD_INPUT = NS + "-file-upload-input";
    exports.KEY = NS + "-key";
    exports.KEY_COMBO = exports.KEY + "-combo";
    exports.MODIFIER_KEY = NS + "-modifier-key";
    exports.HOTKEY = NS + "-hotkey";
    exports.HOTKEY_LABEL = exports.HOTKEY + "-label";
    exports.HOTKEY_COLUMN = exports.HOTKEY + "-column";
    exports.HOTKEY_DIALOG = exports.HOTKEY + "-dialog";
    exports.LABEL = NS + "-label";
    exports.FORM_GROUP = NS + "-form-group";
    exports.FORM_CONTENT = NS + "-form-content";
    exports.FORM_HELPER_TEXT = NS + "-form-helper-text";
    exports.MENU = NS + "-menu";
    exports.MENU_ITEM = exports.MENU + "-item";
    exports.MENU_ITEM_LABEL = exports.MENU_ITEM + "-label";
    exports.MENU_SUBMENU = NS + "-submenu";
    exports.MENU_DIVIDER = exports.MENU + "-divider";
    exports.MENU_HEADER = exports.MENU + "-header";
    exports.NAVBAR = NS + "-navbar";
    exports.NAVBAR_GROUP = exports.NAVBAR + "-group";
    exports.NAVBAR_HEADING = exports.NAVBAR + "-heading";
    exports.NAVBAR_DIVIDER = exports.NAVBAR + "-divider";
    exports.NON_IDEAL_STATE = NS + "-non-ideal-state";
    exports.NON_IDEAL_STATE_VISUAL = exports.NON_IDEAL_STATE + "-visual";
    exports.NUMERIC_INPUT = NS + "-numeric-input";
    exports.OVERFLOW_LIST = NS + "-overflow-list";
    exports.OVERFLOW_LIST_SPACER = exports.OVERFLOW_LIST + "-spacer";
    exports.OVERLAY = NS + "-overlay";
    exports.OVERLAY_BACKDROP = exports.OVERLAY + "-backdrop";
    exports.OVERLAY_CONTENT = exports.OVERLAY + "-content";
    exports.OVERLAY_INLINE = exports.OVERLAY + "-inline";
    exports.OVERLAY_OPEN = exports.OVERLAY + "-open";
    exports.OVERLAY_SCROLL_CONTAINER = exports.OVERLAY + "-scroll-container";
    exports.PANEL_STACK = NS + "-panel-stack";
    exports.PANEL_STACK_HEADER = exports.PANEL_STACK + "-header";
    exports.PANEL_STACK_HEADER_BACK = exports.PANEL_STACK + "-header-back";
    exports.PANEL_STACK_VIEW = exports.PANEL_STACK + "-view";
    exports.POPOVER = NS + "-popover";
    exports.POPOVER_ARROW = exports.POPOVER + "-arrow";
    exports.POPOVER_BACKDROP = exports.POPOVER + "-backdrop";
    exports.POPOVER_CONTENT = exports.POPOVER + "-content";
    exports.POPOVER_CONTENT_SIZING = exports.POPOVER_CONTENT + "-sizing";
    exports.POPOVER_DISMISS = exports.POPOVER + "-dismiss";
    exports.POPOVER_DISMISS_OVERRIDE = exports.POPOVER_DISMISS + "-override";
    exports.POPOVER_OPEN = exports.POPOVER + "-open";
    exports.POPOVER_TARGET = exports.POPOVER + "-target";
    exports.POPOVER_WRAPPER = exports.POPOVER + "-wrapper";
    exports.TRANSITION_CONTAINER = NS + "-transition-container";
    exports.PROGRESS_BAR = NS + "-progress-bar";
    exports.PROGRESS_METER = NS + "-progress-meter";
    exports.PROGRESS_NO_STRIPES = NS + "-no-stripes";
    exports.PROGRESS_NO_ANIMATION = NS + "-no-animation";
    exports.PORTAL = NS + "-portal";
    exports.SKELETON = NS + "-skeleton";
    exports.SLIDER = NS + "-slider";
    exports.SLIDER_AXIS = exports.SLIDER + "-axis";
    exports.SLIDER_HANDLE = exports.SLIDER + "-handle";
    exports.SLIDER_LABEL = exports.SLIDER + "-label";
    exports.SLIDER_TRACK = exports.SLIDER + "-track";
    exports.SLIDER_PROGRESS = exports.SLIDER + "-progress";
    exports.START = NS + "-start";
    exports.END = NS + "-end";
    exports.SPINNER = NS + "-spinner";
    exports.SPINNER_ANIMATION = exports.SPINNER + "-animation";
    exports.SPINNER_HEAD = exports.SPINNER + "-head";
    exports.SPINNER_NO_SPIN = NS + "-no-spin";
    exports.SPINNER_TRACK = exports.SPINNER + "-track";
    exports.TAB = NS + "-tab";
    exports.TAB_INDICATOR = exports.TAB + "-indicator";
    exports.TAB_INDICATOR_WRAPPER = exports.TAB_INDICATOR + "-wrapper";
    exports.TAB_LIST = exports.TAB + "-list";
    exports.TAB_PANEL = exports.TAB + "-panel";
    exports.TABS = exports.TAB + "s";
    exports.TAG = NS + "-tag";
    exports.TAG_REMOVE = exports.TAG + "-remove";
    exports.TAG_INPUT = NS + "-tag-input";
    exports.TAG_INPUT_ICON = exports.TAG_INPUT + "-icon";
    exports.TAG_INPUT_VALUES = exports.TAG_INPUT + "-values";
    exports.TOAST = NS + "-toast";
    exports.TOAST_CONTAINER = exports.TOAST + "-container";
    exports.TOAST_MESSAGE = exports.TOAST + "-message";
    exports.TOOLTIP = NS + "-tooltip";
    exports.TOOLTIP_INDICATOR = exports.TOOLTIP + "-indicator";
    exports.TREE = NS + "-tree";
    exports.TREE_NODE = NS + "-tree-node";
    exports.TREE_NODE_CARET = exports.TREE_NODE + "-caret";
    exports.TREE_NODE_CARET_CLOSED = exports.TREE_NODE_CARET + "-closed";
    exports.TREE_NODE_CARET_NONE = exports.TREE_NODE_CARET + "-none";
    exports.TREE_NODE_CARET_OPEN = exports.TREE_NODE_CARET + "-open";
    exports.TREE_NODE_CONTENT = exports.TREE_NODE + "-content";
    exports.TREE_NODE_EXPANDED = exports.TREE_NODE + "-expanded";
    exports.TREE_NODE_ICON = exports.TREE_NODE + "-icon";
    exports.TREE_NODE_LABEL = exports.TREE_NODE + "-label";
    exports.TREE_NODE_LIST = exports.TREE_NODE + "-list";
    exports.TREE_NODE_SECONDARY_LABEL = exports.TREE_NODE + "-secondary-label";
    exports.TREE_NODE_SELECTED = exports.TREE_NODE + "-selected";
    exports.TREE_ROOT = NS + "-tree-root";
    exports.ICON = NS + "-icon";
    exports.ICON_STANDARD = exports.ICON + "-standard";
    exports.ICON_LARGE = exports.ICON + "-large";
    function getClassNamespace() {
      return NS;
    }
    exports.getClassNamespace = getClassNamespace;
    function alignmentClass(alignment) {
      switch (alignment) {
        case alignment_1.Alignment.LEFT:
          return exports.ALIGN_LEFT;
        case alignment_1.Alignment.RIGHT:
          return exports.ALIGN_RIGHT;
        default:
          return undefined;
      }
    }
    exports.alignmentClass = alignmentClass;
    function elevationClass(elevation) {
      if (elevation == null) {
        return undefined;
      }
      return NS + "-elevation-" + elevation;
    }
    exports.elevationClass = elevationClass;
    function iconClass(iconName) {
      if (iconName == null) {
        return undefined;
      }
      return iconName.indexOf(NS + "-icon-") === 0 ? iconName : NS + "-icon-" + iconName;
    }
    exports.iconClass = iconClass;
    function intentClass(intent) {
      if (intent == null || intent === intent_1.Intent.NONE) {
        return undefined;
      }
      return NS + "-intent-" + intent.toLowerCase();
    }
    exports.intentClass = intentClass;
  })($__require("github:jspm/nodelibs-process@0.1.2.js"));
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/common/keys.js", [], true, function ($__require, exports, module) {
  /* */
  "use strict";
  /*
   * Copyright 2015 Palantir Technologies, Inc. All rights reserved.
   *
   * Licensed under the terms of the LICENSE file distributed with this project.
   */

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.BACKSPACE = 8;
  exports.TAB = 9;
  exports.ENTER = 13;
  exports.SHIFT = 16;
  exports.ESCAPE = 27;
  exports.SPACE = 32;
  exports.ARROW_LEFT = 37;
  exports.ARROW_UP = 38;
  exports.ARROW_RIGHT = 39;
  exports.ARROW_DOWN = 40;
  exports.DELETE = 46;
  /** Returns whether the key code is `enter` or `space`, the two keys that can click a button. */
  function isKeyboardClick(keyCode) {
    return keyCode === exports.ENTER || keyCode === exports.SPACE;
  }
  exports.isKeyboardClick = isKeyboardClick;
  
});
System.registerDynamic("npm:tslib@1.9.3/tslib.js", [], true, function ($__require, exports, module) {
    /* */
    "format cjs";
    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0
    
    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.
    
    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */
    /* global global, define, System, Reflect, Promise */

    var global = this || self,
        GLOBAL = global;
    var __extends;
    var __assign;
    var __rest;
    var __decorate;
    var __param;
    var __metadata;
    var __awaiter;
    var __generator;
    var __exportStar;
    var __values;
    var __read;
    var __spread;
    var __await;
    var __asyncGenerator;
    var __asyncDelegator;
    var __asyncValues;
    var __makeTemplateObject;
    var __importStar;
    var __importDefault;
    (function (factory) {
        var root = typeof global === "object" ? global : typeof self === "object" ? self : typeof this === "object" ? this : {};
        if (typeof undefined === "function" && define.amd) {
            define("tslib", ["exports"], function (exports) {
                factory(createExporter(root, createExporter(exports)));
            });
        } else if (typeof module === "object" && typeof module.exports === "object") {
            factory(createExporter(root, createExporter(module.exports)));
        } else {
            factory(createExporter(root));
        }
        function createExporter(exports, previous) {
            if (exports !== root) {
                if (typeof Object.create === "function") {
                    Object.defineProperty(exports, "__esModule", { value: true });
                } else {
                    exports.__esModule = true;
                }
            }
            return function (id, v) {
                return exports[id] = previous ? previous(id, v) : v;
            };
        }
    })(function (exporter) {
        var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {
            d.__proto__ = b;
        } || function (d, b) {
            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        };

        __extends = function (d, b) {
            extendStatics(d, b);
            function __() {
                this.constructor = d;
            }
            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
        };

        __assign = Object.assign || function (t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
            }
            return t;
        };

        __rest = function (s, e) {
            var t = {};
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
            if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];
            return t;
        };

        __decorate = function (decorators, target, key, desc) {
            var c = arguments.length,
                r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
                d;
            if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
            return c > 3 && r && Object.defineProperty(target, key, r), r;
        };

        __param = function (paramIndex, decorator) {
            return function (target, key) {
                decorator(target, key, paramIndex);
            };
        };

        __metadata = function (metadataKey, metadataValue) {
            if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
        };

        __awaiter = function (thisArg, _arguments, P, generator) {
            return new (P || (P = Promise))(function (resolve, reject) {
                function fulfilled(value) {
                    try {
                        step(generator.next(value));
                    } catch (e) {
                        reject(e);
                    }
                }
                function rejected(value) {
                    try {
                        step(generator["throw"](value));
                    } catch (e) {
                        reject(e);
                    }
                }
                function step(result) {
                    result.done ? resolve(result.value) : new P(function (resolve) {
                        resolve(result.value);
                    }).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
            });
        };

        __generator = function (thisArg, body) {
            var _ = { label: 0, sent: function () {
                    if (t[0] & 1) throw t[1];return t[1];
                }, trys: [], ops: [] },
                f,
                y,
                t,
                g;
            return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
                return this;
            }), g;
            function verb(n) {
                return function (v) {
                    return step([n, v]);
                };
            }
            function step(op) {
                if (f) throw new TypeError("Generator is already executing.");
                while (_) try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
                    if (y = 0, t) op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:case 1:
                            t = op;break;
                        case 4:
                            _.label++;return { value: op[1], done: false };
                        case 5:
                            _.label++;y = op[1];op = [0];continue;
                        case 7:
                            op = _.ops.pop();_.trys.pop();continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;continue;
                            }
                            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                                _.label = op[1];break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];t = op;break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];_.ops.push(op);break;
                            }
                            if (t[2]) _.ops.pop();
                            _.trys.pop();continue;
                    }
                    op = body.call(thisArg, _);
                } catch (e) {
                    op = [6, e];y = 0;
                } finally {
                    f = t = 0;
                }
                if (op[0] & 5) throw op[1];return { value: op[0] ? op[1] : void 0, done: true };
            }
        };

        __exportStar = function (m, exports) {
            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
        };

        __values = function (o) {
            var m = typeof Symbol === "function" && o[Symbol.iterator],
                i = 0;
            if (m) return m.call(o);
            return {
                next: function () {
                    if (o && i >= o.length) o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        };

        __read = function (o, n) {
            var m = typeof Symbol === "function" && o[Symbol.iterator];
            if (!m) return o;
            var i = m.call(o),
                r,
                ar = [],
                e;
            try {
                while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
            } catch (error) {
                e = { error: error };
            } finally {
                try {
                    if (r && !r.done && (m = i["return"])) m.call(i);
                } finally {
                    if (e) throw e.error;
                }
            }
            return ar;
        };

        __spread = function () {
            for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
            return ar;
        };

        __await = function (v) {
            return this instanceof __await ? (this.v = v, this) : new __await(v);
        };

        __asyncGenerator = function (thisArg, _arguments, generator) {
            if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
            var g = generator.apply(thisArg, _arguments || []),
                i,
                q = [];
            return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () {
                return this;
            }, i;
            function verb(n) {
                if (g[n]) i[n] = function (v) {
                    return new Promise(function (a, b) {
                        q.push([n, v, a, b]) > 1 || resume(n, v);
                    });
                };
            }
            function resume(n, v) {
                try {
                    step(g[n](v));
                } catch (e) {
                    settle(q[0][3], e);
                }
            }
            function step(r) {
                r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);
            }
            function fulfill(value) {
                resume("next", value);
            }
            function reject(value) {
                resume("throw", value);
            }
            function settle(f, v) {
                if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);
            }
        };

        __asyncDelegator = function (o) {
            var i, p;
            return i = {}, verb("next"), verb("throw", function (e) {
                throw e;
            }), verb("return"), i[Symbol.iterator] = function () {
                return this;
            }, i;
            function verb(n, f) {
                i[n] = o[n] ? function (v) {
                    return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v;
                } : f;
            }
        };

        __asyncValues = function (o) {
            if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
            var m = o[Symbol.asyncIterator],
                i;
            return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () {
                return this;
            }, i);
            function verb(n) {
                i[n] = o[n] && function (v) {
                    return new Promise(function (resolve, reject) {
                        v = o[n](v), settle(resolve, reject, v.done, v.value);
                    });
                };
            }
            function settle(resolve, reject, d, v) {
                Promise.resolve(v).then(function (v) {
                    resolve({ value: v, done: d });
                }, reject);
            }
        };

        __makeTemplateObject = function (cooked, raw) {
            if (Object.defineProperty) {
                Object.defineProperty(cooked, "raw", { value: raw });
            } else {
                cooked.raw = raw;
            }
            return cooked;
        };

        __importStar = function (mod) {
            if (mod && mod.__esModule) return mod;
            var result = {};
            if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
            result["default"] = mod;
            return result;
        };

        __importDefault = function (mod) {
            return mod && mod.__esModule ? mod : { "default": mod };
        };

        exporter("__extends", __extends);
        exporter("__assign", __assign);
        exporter("__rest", __rest);
        exporter("__decorate", __decorate);
        exporter("__param", __param);
        exporter("__metadata", __metadata);
        exporter("__awaiter", __awaiter);
        exporter("__generator", __generator);
        exporter("__exportStar", __exportStar);
        exporter("__values", __values);
        exporter("__read", __read);
        exporter("__spread", __spread);
        exporter("__await", __await);
        exporter("__asyncGenerator", __asyncGenerator);
        exporter("__asyncDelegator", __asyncDelegator);
        exporter("__asyncValues", __asyncValues);
        exporter("__makeTemplateObject", __makeTemplateObject);
        exporter("__importStar", __importStar);
        exporter("__importDefault", __importDefault);
    });
});
System.registerDynamic("npm:tslib@1.9.3.js", ["npm:tslib@1.9.3/tslib.js"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("npm:tslib@1.9.3/tslib.js");
});
System.registerDynamic("npm:react@16.7.0/cjs/react.production.min.js", ["npm:object-assign@4.1.1.js"], true, function ($__require, exports, module) {
  /** @license React v16.7.0
   * react.production.min.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   */

  'use strict';
  var global = this || self,
      GLOBAL = global;
  var k = $__require("npm:object-assign@4.1.1.js"),
      n = "function" === typeof Symbol && Symbol.for,
      p = n ? Symbol.for("react.element") : 60103,
      q = n ? Symbol.for("react.portal") : 60106,
      r = n ? Symbol.for("react.fragment") : 60107,
      t = n ? Symbol.for("react.strict_mode") : 60108,
      u = n ? Symbol.for("react.profiler") : 60114,
      v = n ? Symbol.for("react.provider") : 60109,
      w = n ? Symbol.for("react.context") : 60110,
      x = n ? Symbol.for("react.concurrent_mode") : 60111,
      y = n ? Symbol.for("react.forward_ref") : 60112,
      z = n ? Symbol.for("react.suspense") : 60113,
      A = n ? Symbol.for("react.memo") : 60115,
      B = n ? Symbol.for("react.lazy") : 60116,
      C = "function" === typeof Symbol && Symbol.iterator;function aa(a, b, e, c, d, g, h, f) {
    if (!a) {
      a = void 0;if (void 0 === b) a = Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else {
        var l = [e, c, d, g, h, f],
            m = 0;a = Error(b.replace(/%s/g, function () {
          return l[m++];
        }));a.name = "Invariant Violation";
      }a.framesToPop = 1;throw a;
    }
  }
  function D(a) {
    for (var b = arguments.length - 1, e = "https://reactjs.org/docs/error-decoder.html?invariant=" + a, c = 0; c < b; c++) e += "&args[]=" + encodeURIComponent(arguments[c + 1]);aa(!1, "Minified React error #" + a + "; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ", e);
  }var E = { isMounted: function () {
      return !1;
    }, enqueueForceUpdate: function () {}, enqueueReplaceState: function () {}, enqueueSetState: function () {} },
      F = {};
  function G(a, b, e) {
    this.props = a;this.context = b;this.refs = F;this.updater = e || E;
  }G.prototype.isReactComponent = {};G.prototype.setState = function (a, b) {
    "object" !== typeof a && "function" !== typeof a && null != a ? D("85") : void 0;this.updater.enqueueSetState(this, a, b, "setState");
  };G.prototype.forceUpdate = function (a) {
    this.updater.enqueueForceUpdate(this, a, "forceUpdate");
  };function H() {}H.prototype = G.prototype;function I(a, b, e) {
    this.props = a;this.context = b;this.refs = F;this.updater = e || E;
  }var J = I.prototype = new H();
  J.constructor = I;k(J, G.prototype);J.isPureReactComponent = !0;var K = { current: null, currentDispatcher: null },
      L = Object.prototype.hasOwnProperty,
      M = { key: !0, ref: !0, __self: !0, __source: !0 };
  function N(a, b, e) {
    var c = void 0,
        d = {},
        g = null,
        h = null;if (null != b) for (c in void 0 !== b.ref && (h = b.ref), void 0 !== b.key && (g = "" + b.key), b) L.call(b, c) && !M.hasOwnProperty(c) && (d[c] = b[c]);var f = arguments.length - 2;if (1 === f) d.children = e;else if (1 < f) {
      for (var l = Array(f), m = 0; m < f; m++) l[m] = arguments[m + 2];d.children = l;
    }if (a && a.defaultProps) for (c in f = a.defaultProps, f) void 0 === d[c] && (d[c] = f[c]);return { $$typeof: p, type: a, key: g, ref: h, props: d, _owner: K.current };
  }
  function ba(a, b) {
    return { $$typeof: p, type: a.type, key: b, ref: a.ref, props: a.props, _owner: a._owner };
  }function O(a) {
    return "object" === typeof a && null !== a && a.$$typeof === p;
  }function escape(a) {
    var b = { "=": "=0", ":": "=2" };return "$" + ("" + a).replace(/[=:]/g, function (a) {
      return b[a];
    });
  }var P = /\/+/g,
      Q = [];function R(a, b, e, c) {
    if (Q.length) {
      var d = Q.pop();d.result = a;d.keyPrefix = b;d.func = e;d.context = c;d.count = 0;return d;
    }return { result: a, keyPrefix: b, func: e, context: c, count: 0 };
  }
  function S(a) {
    a.result = null;a.keyPrefix = null;a.func = null;a.context = null;a.count = 0;10 > Q.length && Q.push(a);
  }
  function T(a, b, e, c) {
    var d = typeof a;if ("undefined" === d || "boolean" === d) a = null;var g = !1;if (null === a) g = !0;else switch (d) {case "string":case "number":
        g = !0;break;case "object":
        switch (a.$$typeof) {case p:case q:
            g = !0;}}if (g) return e(c, a, "" === b ? "." + U(a, 0) : b), 1;g = 0;b = "" === b ? "." : b + ":";if (Array.isArray(a)) for (var h = 0; h < a.length; h++) {
      d = a[h];var f = b + U(d, h);g += T(d, f, e, c);
    } else if (null === a || "object" !== typeof a ? f = null : (f = C && a[C] || a["@@iterator"], f = "function" === typeof f ? f : null), "function" === typeof f) for (a = f.call(a), h = 0; !(d = a.next()).done;) d = d.value, f = b + U(d, h++), g += T(d, f, e, c);else "object" === d && (e = "" + a, D("31", "[object Object]" === e ? "object with keys {" + Object.keys(a).join(", ") + "}" : e, ""));return g;
  }function V(a, b, e) {
    return null == a ? 0 : T(a, "", b, e);
  }function U(a, b) {
    return "object" === typeof a && null !== a && null != a.key ? escape(a.key) : b.toString(36);
  }function ca(a, b) {
    a.func.call(a.context, b, a.count++);
  }
  function da(a, b, e) {
    var c = a.result,
        d = a.keyPrefix;a = a.func.call(a.context, b, a.count++);Array.isArray(a) ? W(a, c, e, function (a) {
      return a;
    }) : null != a && (O(a) && (a = ba(a, d + (!a.key || b && b.key === a.key ? "" : ("" + a.key).replace(P, "$&/") + "/") + e)), c.push(a));
  }function W(a, b, e, c, d) {
    var g = "";null != e && (g = ("" + e).replace(P, "$&/") + "/");b = R(b, g, c, d);V(a, da, b);S(b);
  }
  var X = { Children: { map: function (a, b, e) {
        if (null == a) return a;var c = [];W(a, c, null, b, e);return c;
      }, forEach: function (a, b, e) {
        if (null == a) return a;b = R(null, null, b, e);V(a, ca, b);S(b);
      }, count: function (a) {
        return V(a, function () {
          return null;
        }, null);
      }, toArray: function (a) {
        var b = [];W(a, b, null, function (a) {
          return a;
        });return b;
      }, only: function (a) {
        O(a) ? void 0 : D("143");return a;
      } }, createRef: function () {
      return { current: null };
    }, Component: G, PureComponent: I, createContext: function (a, b) {
      void 0 === b && (b = null);a = { $$typeof: w, _calculateChangedBits: b,
        _currentValue: a, _currentValue2: a, _threadCount: 0, Provider: null, Consumer: null };a.Provider = { $$typeof: v, _context: a };return a.Consumer = a;
    }, forwardRef: function (a) {
      return { $$typeof: y, render: a };
    }, lazy: function (a) {
      return { $$typeof: B, _ctor: a, _status: -1, _result: null };
    }, memo: function (a, b) {
      return { $$typeof: A, type: a, compare: void 0 === b ? null : b };
    }, Fragment: r, StrictMode: t, Suspense: z, createElement: N, cloneElement: function (a, b, e) {
      null === a || void 0 === a ? D("267", a) : void 0;var c = void 0,
          d = k({}, a.props),
          g = a.key,
          h = a.ref,
          f = a._owner;
      if (null != b) {
        void 0 !== b.ref && (h = b.ref, f = K.current);void 0 !== b.key && (g = "" + b.key);var l = void 0;a.type && a.type.defaultProps && (l = a.type.defaultProps);for (c in b) L.call(b, c) && !M.hasOwnProperty(c) && (d[c] = void 0 === b[c] && void 0 !== l ? l[c] : b[c]);
      }c = arguments.length - 2;if (1 === c) d.children = e;else if (1 < c) {
        l = Array(c);for (var m = 0; m < c; m++) l[m] = arguments[m + 2];d.children = l;
      }return { $$typeof: p, type: a.type, key: g, ref: h, props: d, _owner: f };
    }, createFactory: function (a) {
      var b = N.bind(null, a);b.type = a;return b;
    }, isValidElement: O, version: "16.7.0",
    unstable_ConcurrentMode: x, unstable_Profiler: u, __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: { ReactCurrentOwner: K, assign: k } },
      Y = { default: X },
      Z = Y && X || Y;module.exports = Z.default || Z;
});
System.registerDynamic('npm:object-assign@4.1.1/index.js', [], true, function ($__require, exports, module) {
	/*
 object-assign
 (c) Sindre Sorhus
 @license MIT
 */

	'use strict';
	/* eslint-disable no-unused-vars */

	var global = this || self,
	    GLOBAL = global;
	var getOwnPropertySymbols = Object.getOwnPropertySymbols;
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	var propIsEnumerable = Object.prototype.propertyIsEnumerable;

	function toObject(val) {
		if (val === null || val === undefined) {
			throw new TypeError('Object.assign cannot be called with null or undefined');
		}

		return Object(val);
	}

	function shouldUseNative() {
		try {
			if (!Object.assign) {
				return false;
			}

			// Detect buggy property enumeration order in older V8 versions.

			// https://bugs.chromium.org/p/v8/issues/detail?id=4118
			var test1 = new String('abc'); // eslint-disable-line no-new-wrappers
			test1[5] = 'de';
			if (Object.getOwnPropertyNames(test1)[0] === '5') {
				return false;
			}

			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test2 = {};
			for (var i = 0; i < 10; i++) {
				test2['_' + String.fromCharCode(i)] = i;
			}
			var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
				return test2[n];
			});
			if (order2.join('') !== '0123456789') {
				return false;
			}

			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test3 = {};
			'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
				test3[letter] = letter;
			});
			if (Object.keys(Object.assign({}, test3)).join('') !== 'abcdefghijklmnopqrst') {
				return false;
			}

			return true;
		} catch (err) {
			// We don't expect any of the above to throw, but better to be safe.
			return false;
		}
	}

	module.exports = shouldUseNative() ? Object.assign : function (target, source) {
		var from;
		var to = toObject(target);
		var symbols;

		for (var s = 1; s < arguments.length; s++) {
			from = Object(arguments[s]);

			for (var key in from) {
				if (hasOwnProperty.call(from, key)) {
					to[key] = from[key];
				}
			}

			if (getOwnPropertySymbols) {
				symbols = getOwnPropertySymbols(from);
				for (var i = 0; i < symbols.length; i++) {
					if (propIsEnumerable.call(from, symbols[i])) {
						to[symbols[i]] = from[symbols[i]];
					}
				}
			}
		}

		return to;
	};
});
System.registerDynamic("npm:object-assign@4.1.1.js", ["npm:object-assign@4.1.1/index.js"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("npm:object-assign@4.1.1/index.js");
});
System.registerDynamic('npm:prop-types@15.6.2/lib/ReactPropTypesSecret.js', [], true, function ($__require, exports, module) {
  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   */

  'use strict';

  var global = this || self,
      GLOBAL = global;
  var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

  module.exports = ReactPropTypesSecret;
});
System.registerDynamic('npm:prop-types@15.6.2/checkPropTypes.js', ['npm:prop-types@15.6.2/lib/ReactPropTypesSecret.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var printWarning = function () {};
    if ('production' !== 'production') {
      var ReactPropTypesSecret = $__require('npm:prop-types@15.6.2/lib/ReactPropTypesSecret.js');
      var loggedTypeFailures = {};
      printWarning = function (text) {
        var message = 'Warning: ' + text;
        if (typeof console !== 'undefined') {
          console.error(message);
        }
        try {
          throw new Error(message);
        } catch (x) {}
      };
    }
    function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
      if ('production' !== 'production') {
        for (var typeSpecName in typeSpecs) {
          if (typeSpecs.hasOwnProperty(typeSpecName)) {
            var error;
            try {
              if (typeof typeSpecs[typeSpecName] !== 'function') {
                var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.');
                err.name = 'Invariant Violation';
                throw err;
              }
              error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
            } catch (ex) {
              error = ex;
            }
            if (error && !(error instanceof Error)) {
              printWarning((componentName || 'React class') + ': type specification of ' + location + ' `' + typeSpecName + '` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a ' + typeof error + '. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).');
            }
            if (error instanceof Error && !(error.message in loggedTypeFailures)) {
              loggedTypeFailures[error.message] = true;
              var stack = getStack ? getStack() : '';
              printWarning('Failed ' + location + ' type: ' + error.message + (stack != null ? stack : ''));
            }
          }
        }
      }
    }
    module.exports = checkPropTypes;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react@16.7.0/cjs/react.development.js', ['npm:object-assign@4.1.1.js', 'npm:prop-types@15.6.2/checkPropTypes.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    if ('production' !== "production") {
      (function () {
        'use strict';

        var _assign = $__require('npm:object-assign@4.1.1.js');
        var checkPropTypes = $__require('npm:prop-types@15.6.2/checkPropTypes.js');
        var ReactVersion = '16.7.0';
        var hasSymbol = typeof Symbol === 'function' && Symbol.for;
        var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
        var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
        var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
        var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
        var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
        var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
        var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace;
        var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;
        var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
        var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;
        var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;
        var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;
        var MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
        var FAUX_ITERATOR_SYMBOL = '@@iterator';
        function getIteratorFn(maybeIterable) {
          if (maybeIterable === null || typeof maybeIterable !== 'object') {
            return null;
          }
          var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
          if (typeof maybeIterator === 'function') {
            return maybeIterator;
          }
          return null;
        }
        var enableHooks = false;
        var enableStableConcurrentModeAPIs = false;
        var validateFormat = function () {};
        {
          validateFormat = function (format) {
            if (format === undefined) {
              throw new Error('invariant requires an error message argument');
            }
          };
        }
        function invariant(condition, format, a, b, c, d, e, f) {
          validateFormat(format);
          if (!condition) {
            var error = void 0;
            if (format === undefined) {
              error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
            } else {
              var args = [a, b, c, d, e, f];
              var argIndex = 0;
              error = new Error(format.replace(/%s/g, function () {
                return args[argIndex++];
              }));
              error.name = 'Invariant Violation';
            }
            error.framesToPop = 1;
            throw error;
          }
        }
        var lowPriorityWarning = function () {};
        {
          var printWarning = function (format) {
            for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
              args[_key - 1] = arguments[_key];
            }
            var argIndex = 0;
            var message = 'Warning: ' + format.replace(/%s/g, function () {
              return args[argIndex++];
            });
            if (typeof console !== 'undefined') {
              console.warn(message);
            }
            try {
              throw new Error(message);
            } catch (x) {}
          };
          lowPriorityWarning = function (condition, format) {
            if (format === undefined) {
              throw new Error('`lowPriorityWarning(condition, format, ...args)` requires a warning ' + 'message argument');
            }
            if (!condition) {
              for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
                args[_key2 - 2] = arguments[_key2];
              }
              printWarning.apply(undefined, [format].concat(args));
            }
          };
        }
        var lowPriorityWarning$1 = lowPriorityWarning;
        var warningWithoutStack = function () {};
        {
          warningWithoutStack = function (condition, format) {
            for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
              args[_key - 2] = arguments[_key];
            }
            if (format === undefined) {
              throw new Error('`warningWithoutStack(condition, format, ...args)` requires a warning ' + 'message argument');
            }
            if (args.length > 8) {
              throw new Error('warningWithoutStack() currently supports at most 8 arguments.');
            }
            if (condition) {
              return;
            }
            if (typeof console !== 'undefined') {
              var argsWithFormat = args.map(function (item) {
                return '' + item;
              });
              argsWithFormat.unshift('Warning: ' + format);
              Function.prototype.apply.call(console.error, console, argsWithFormat);
            }
            try {
              var argIndex = 0;
              var message = 'Warning: ' + format.replace(/%s/g, function () {
                return args[argIndex++];
              });
              throw new Error(message);
            } catch (x) {}
          };
        }
        var warningWithoutStack$1 = warningWithoutStack;
        var didWarnStateUpdateForUnmountedComponent = {};
        function warnNoop(publicInstance, callerName) {
          {
            var _constructor = publicInstance.constructor;
            var componentName = _constructor && (_constructor.displayName || _constructor.name) || 'ReactClass';
            var warningKey = componentName + '.' + callerName;
            if (didWarnStateUpdateForUnmountedComponent[warningKey]) {
              return;
            }
            warningWithoutStack$1(false, "Can't call %s on a component that is not yet mounted. " + 'This is a no-op, but it might indicate a bug in your application. ' + 'Instead, assign to `this.state` directly or define a `state = {};` ' + 'class property with the desired state in the %s component.', callerName, componentName);
            didWarnStateUpdateForUnmountedComponent[warningKey] = true;
          }
        }
        var ReactNoopUpdateQueue = {
          isMounted: function (publicInstance) {
            return false;
          },
          enqueueForceUpdate: function (publicInstance, callback, callerName) {
            warnNoop(publicInstance, 'forceUpdate');
          },
          enqueueReplaceState: function (publicInstance, completeState, callback, callerName) {
            warnNoop(publicInstance, 'replaceState');
          },
          enqueueSetState: function (publicInstance, partialState, callback, callerName) {
            warnNoop(publicInstance, 'setState');
          }
        };
        var emptyObject = {};
        {
          Object.freeze(emptyObject);
        }
        function Component(props, context, updater) {
          this.props = props;
          this.context = context;
          this.refs = emptyObject;
          this.updater = updater || ReactNoopUpdateQueue;
        }
        Component.prototype.isReactComponent = {};
        Component.prototype.setState = function (partialState, callback) {
          !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : void 0;
          this.updater.enqueueSetState(this, partialState, callback, 'setState');
        };
        Component.prototype.forceUpdate = function (callback) {
          this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');
        };
        {
          var deprecatedAPIs = {
            isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
            replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
          };
          var defineDeprecationWarning = function (methodName, info) {
            Object.defineProperty(Component.prototype, methodName, { get: function () {
                lowPriorityWarning$1(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);
                return undefined;
              } });
          };
          for (var fnName in deprecatedAPIs) {
            if (deprecatedAPIs.hasOwnProperty(fnName)) {
              defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
            }
          }
        }
        function ComponentDummy() {}
        ComponentDummy.prototype = Component.prototype;
        function PureComponent(props, context, updater) {
          this.props = props;
          this.context = context;
          this.refs = emptyObject;
          this.updater = updater || ReactNoopUpdateQueue;
        }
        var pureComponentPrototype = PureComponent.prototype = new ComponentDummy();
        pureComponentPrototype.constructor = PureComponent;
        _assign(pureComponentPrototype, Component.prototype);
        pureComponentPrototype.isPureReactComponent = true;
        function createRef() {
          var refObject = { current: null };
          {
            Object.seal(refObject);
          }
          return refObject;
        }
        var ReactCurrentOwner = {
          current: null,
          currentDispatcher: null
        };
        var BEFORE_SLASH_RE = /^(.*)[\\\/]/;
        var describeComponentFrame = function (name, source, ownerName) {
          var sourceInfo = '';
          if (source) {
            var path = source.fileName;
            var fileName = path.replace(BEFORE_SLASH_RE, '');
            {
              if (/^index\./.test(fileName)) {
                var match = path.match(BEFORE_SLASH_RE);
                if (match) {
                  var pathBeforeSlash = match[1];
                  if (pathBeforeSlash) {
                    var folderName = pathBeforeSlash.replace(BEFORE_SLASH_RE, '');
                    fileName = folderName + '/' + fileName;
                  }
                }
              }
            }
            sourceInfo = ' (at ' + fileName + ':' + source.lineNumber + ')';
          } else if (ownerName) {
            sourceInfo = ' (created by ' + ownerName + ')';
          }
          return '\n    in ' + (name || 'Unknown') + sourceInfo;
        };
        var Resolved = 1;
        function refineResolvedLazyComponent(lazyComponent) {
          return lazyComponent._status === Resolved ? lazyComponent._result : null;
        }
        function getWrappedName(outerType, innerType, wrapperName) {
          var functionName = innerType.displayName || innerType.name || '';
          return outerType.displayName || (functionName !== '' ? wrapperName + '(' + functionName + ')' : wrapperName);
        }
        function getComponentName(type) {
          if (type == null) {
            return null;
          }
          {
            if (typeof type.tag === 'number') {
              warningWithoutStack$1(false, 'Received an unexpected object in getComponentName(). ' + 'This is likely a bug in React. Please file an issue.');
            }
          }
          if (typeof type === 'function') {
            return type.displayName || type.name || null;
          }
          if (typeof type === 'string') {
            return type;
          }
          switch (type) {
            case REACT_CONCURRENT_MODE_TYPE:
              return 'ConcurrentMode';
            case REACT_FRAGMENT_TYPE:
              return 'Fragment';
            case REACT_PORTAL_TYPE:
              return 'Portal';
            case REACT_PROFILER_TYPE:
              return 'Profiler';
            case REACT_STRICT_MODE_TYPE:
              return 'StrictMode';
            case REACT_SUSPENSE_TYPE:
              return 'Suspense';
          }
          if (typeof type === 'object') {
            switch (type.$$typeof) {
              case REACT_CONTEXT_TYPE:
                return 'Context.Consumer';
              case REACT_PROVIDER_TYPE:
                return 'Context.Provider';
              case REACT_FORWARD_REF_TYPE:
                return getWrappedName(type, type.render, 'ForwardRef');
              case REACT_MEMO_TYPE:
                return getComponentName(type.type);
              case REACT_LAZY_TYPE:
                {
                  var thenable = type;
                  var resolvedThenable = refineResolvedLazyComponent(thenable);
                  if (resolvedThenable) {
                    return getComponentName(resolvedThenable);
                  }
                }
            }
          }
          return null;
        }
        var ReactDebugCurrentFrame = {};
        var currentlyValidatingElement = null;
        function setCurrentlyValidatingElement(element) {
          {
            currentlyValidatingElement = element;
          }
        }
        {
          ReactDebugCurrentFrame.getCurrentStack = null;
          ReactDebugCurrentFrame.getStackAddendum = function () {
            var stack = '';
            if (currentlyValidatingElement) {
              var name = getComponentName(currentlyValidatingElement.type);
              var owner = currentlyValidatingElement._owner;
              stack += describeComponentFrame(name, currentlyValidatingElement._source, owner && getComponentName(owner.type));
            }
            var impl = ReactDebugCurrentFrame.getCurrentStack;
            if (impl) {
              stack += impl() || '';
            }
            return stack;
          };
        }
        var ReactSharedInternals = {
          ReactCurrentOwner: ReactCurrentOwner,
          assign: _assign
        };
        {
          _assign(ReactSharedInternals, {
            ReactDebugCurrentFrame: ReactDebugCurrentFrame,
            ReactComponentTreeHook: {}
          });
        }
        var warning = warningWithoutStack$1;
        {
          warning = function (condition, format) {
            if (condition) {
              return;
            }
            var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
            var stack = ReactDebugCurrentFrame.getStackAddendum();
            for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
              args[_key - 2] = arguments[_key];
            }
            warningWithoutStack$1.apply(undefined, [false, format + '%s'].concat(args, [stack]));
          };
        }
        var warning$1 = warning;
        var hasOwnProperty = Object.prototype.hasOwnProperty;
        var RESERVED_PROPS = {
          key: true,
          ref: true,
          __self: true,
          __source: true
        };
        var specialPropKeyWarningShown = void 0;
        var specialPropRefWarningShown = void 0;
        function hasValidRef(config) {
          {
            if (hasOwnProperty.call(config, 'ref')) {
              var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
              if (getter && getter.isReactWarning) {
                return false;
              }
            }
          }
          return config.ref !== undefined;
        }
        function hasValidKey(config) {
          {
            if (hasOwnProperty.call(config, 'key')) {
              var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
              if (getter && getter.isReactWarning) {
                return false;
              }
            }
          }
          return config.key !== undefined;
        }
        function defineKeyPropWarningGetter(props, displayName) {
          var warnAboutAccessingKey = function () {
            if (!specialPropKeyWarningShown) {
              specialPropKeyWarningShown = true;
              warningWithoutStack$1(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);
            }
          };
          warnAboutAccessingKey.isReactWarning = true;
          Object.defineProperty(props, 'key', {
            get: warnAboutAccessingKey,
            configurable: true
          });
        }
        function defineRefPropWarningGetter(props, displayName) {
          var warnAboutAccessingRef = function () {
            if (!specialPropRefWarningShown) {
              specialPropRefWarningShown = true;
              warningWithoutStack$1(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);
            }
          };
          warnAboutAccessingRef.isReactWarning = true;
          Object.defineProperty(props, 'ref', {
            get: warnAboutAccessingRef,
            configurable: true
          });
        }
        var ReactElement = function (type, key, ref, self, source, owner, props) {
          var element = {
            $$typeof: REACT_ELEMENT_TYPE,
            type: type,
            key: key,
            ref: ref,
            props: props,
            _owner: owner
          };
          {
            element._store = {};
            Object.defineProperty(element._store, 'validated', {
              configurable: false,
              enumerable: false,
              writable: true,
              value: false
            });
            Object.defineProperty(element, '_self', {
              configurable: false,
              enumerable: false,
              writable: false,
              value: self
            });
            Object.defineProperty(element, '_source', {
              configurable: false,
              enumerable: false,
              writable: false,
              value: source
            });
            if (Object.freeze) {
              Object.freeze(element.props);
              Object.freeze(element);
            }
          }
          return element;
        };
        function createElement(type, config, children) {
          var propName = void 0;
          var props = {};
          var key = null;
          var ref = null;
          var self = null;
          var source = null;
          if (config != null) {
            if (hasValidRef(config)) {
              ref = config.ref;
            }
            if (hasValidKey(config)) {
              key = '' + config.key;
            }
            self = config.__self === undefined ? null : config.__self;
            source = config.__source === undefined ? null : config.__source;
            for (propName in config) {
              if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
                props[propName] = config[propName];
              }
            }
          }
          var childrenLength = arguments.length - 2;
          if (childrenLength === 1) {
            props.children = children;
          } else if (childrenLength > 1) {
            var childArray = Array(childrenLength);
            for (var i = 0; i < childrenLength; i++) {
              childArray[i] = arguments[i + 2];
            }
            {
              if (Object.freeze) {
                Object.freeze(childArray);
              }
            }
            props.children = childArray;
          }
          if (type && type.defaultProps) {
            var defaultProps = type.defaultProps;
            for (propName in defaultProps) {
              if (props[propName] === undefined) {
                props[propName] = defaultProps[propName];
              }
            }
          }
          {
            if (key || ref) {
              var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;
              if (key) {
                defineKeyPropWarningGetter(props, displayName);
              }
              if (ref) {
                defineRefPropWarningGetter(props, displayName);
              }
            }
          }
          return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
        }
        function cloneAndReplaceKey(oldElement, newKey) {
          var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);
          return newElement;
        }
        function cloneElement(element, config, children) {
          !!(element === null || element === undefined) ? invariant(false, 'React.cloneElement(...): The argument must be a React element, but you passed %s.', element) : void 0;
          var propName = void 0;
          var props = _assign({}, element.props);
          var key = element.key;
          var ref = element.ref;
          var self = element._self;
          var source = element._source;
          var owner = element._owner;
          if (config != null) {
            if (hasValidRef(config)) {
              ref = config.ref;
              owner = ReactCurrentOwner.current;
            }
            if (hasValidKey(config)) {
              key = '' + config.key;
            }
            var defaultProps = void 0;
            if (element.type && element.type.defaultProps) {
              defaultProps = element.type.defaultProps;
            }
            for (propName in config) {
              if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
                if (config[propName] === undefined && defaultProps !== undefined) {
                  props[propName] = defaultProps[propName];
                } else {
                  props[propName] = config[propName];
                }
              }
            }
          }
          var childrenLength = arguments.length - 2;
          if (childrenLength === 1) {
            props.children = children;
          } else if (childrenLength > 1) {
            var childArray = Array(childrenLength);
            for (var i = 0; i < childrenLength; i++) {
              childArray[i] = arguments[i + 2];
            }
            props.children = childArray;
          }
          return ReactElement(element.type, key, ref, self, source, owner, props);
        }
        function isValidElement(object) {
          return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
        }
        var SEPARATOR = '.';
        var SUBSEPARATOR = ':';
        function escape(key) {
          var escapeRegex = /[=:]/g;
          var escaperLookup = {
            '=': '=0',
            ':': '=2'
          };
          var escapedString = ('' + key).replace(escapeRegex, function (match) {
            return escaperLookup[match];
          });
          return '$' + escapedString;
        }
        var didWarnAboutMaps = false;
        var userProvidedKeyEscapeRegex = /\/+/g;
        function escapeUserProvidedKey(text) {
          return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');
        }
        var POOL_SIZE = 10;
        var traverseContextPool = [];
        function getPooledTraverseContext(mapResult, keyPrefix, mapFunction, mapContext) {
          if (traverseContextPool.length) {
            var traverseContext = traverseContextPool.pop();
            traverseContext.result = mapResult;
            traverseContext.keyPrefix = keyPrefix;
            traverseContext.func = mapFunction;
            traverseContext.context = mapContext;
            traverseContext.count = 0;
            return traverseContext;
          } else {
            return {
              result: mapResult,
              keyPrefix: keyPrefix,
              func: mapFunction,
              context: mapContext,
              count: 0
            };
          }
        }
        function releaseTraverseContext(traverseContext) {
          traverseContext.result = null;
          traverseContext.keyPrefix = null;
          traverseContext.func = null;
          traverseContext.context = null;
          traverseContext.count = 0;
          if (traverseContextPool.length < POOL_SIZE) {
            traverseContextPool.push(traverseContext);
          }
        }
        function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
          var type = typeof children;
          if (type === 'undefined' || type === 'boolean') {
            children = null;
          }
          var invokeCallback = false;
          if (children === null) {
            invokeCallback = true;
          } else {
            switch (type) {
              case 'string':
              case 'number':
                invokeCallback = true;
                break;
              case 'object':
                switch (children.$$typeof) {
                  case REACT_ELEMENT_TYPE:
                  case REACT_PORTAL_TYPE:
                    invokeCallback = true;
                }
            }
          }
          if (invokeCallback) {
            callback(traverseContext, children, nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
            return 1;
          }
          var child = void 0;
          var nextName = void 0;
          var subtreeCount = 0;
          var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;
          if (Array.isArray(children)) {
            for (var i = 0; i < children.length; i++) {
              child = children[i];
              nextName = nextNamePrefix + getComponentKey(child, i);
              subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
            }
          } else {
            var iteratorFn = getIteratorFn(children);
            if (typeof iteratorFn === 'function') {
              {
                if (iteratorFn === children.entries) {
                  !didWarnAboutMaps ? warning$1(false, 'Using Maps as children is unsupported and will likely yield ' + 'unexpected results. Convert it to a sequence/iterable of keyed ' + 'ReactElements instead.') : void 0;
                  didWarnAboutMaps = true;
                }
              }
              var iterator = iteratorFn.call(children);
              var step = void 0;
              var ii = 0;
              while (!(step = iterator.next()).done) {
                child = step.value;
                nextName = nextNamePrefix + getComponentKey(child, ii++);
                subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
              }
            } else if (type === 'object') {
              var addendum = '';
              {
                addendum = ' If you meant to render a collection of children, use an array ' + 'instead.' + ReactDebugCurrentFrame.getStackAddendum();
              }
              var childrenString = '' + children;
              invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum);
            }
          }
          return subtreeCount;
        }
        function traverseAllChildren(children, callback, traverseContext) {
          if (children == null) {
            return 0;
          }
          return traverseAllChildrenImpl(children, '', callback, traverseContext);
        }
        function getComponentKey(component, index) {
          if (typeof component === 'object' && component !== null && component.key != null) {
            return escape(component.key);
          }
          return index.toString(36);
        }
        function forEachSingleChild(bookKeeping, child, name) {
          var func = bookKeeping.func,
              context = bookKeeping.context;
          func.call(context, child, bookKeeping.count++);
        }
        function forEachChildren(children, forEachFunc, forEachContext) {
          if (children == null) {
            return children;
          }
          var traverseContext = getPooledTraverseContext(null, null, forEachFunc, forEachContext);
          traverseAllChildren(children, forEachSingleChild, traverseContext);
          releaseTraverseContext(traverseContext);
        }
        function mapSingleChildIntoContext(bookKeeping, child, childKey) {
          var result = bookKeeping.result,
              keyPrefix = bookKeeping.keyPrefix,
              func = bookKeeping.func,
              context = bookKeeping.context;
          var mappedChild = func.call(context, child, bookKeeping.count++);
          if (Array.isArray(mappedChild)) {
            mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, function (c) {
              return c;
            });
          } else if (mappedChild != null) {
            if (isValidElement(mappedChild)) {
              mappedChild = cloneAndReplaceKey(mappedChild, keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);
            }
            result.push(mappedChild);
          }
        }
        function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
          var escapedPrefix = '';
          if (prefix != null) {
            escapedPrefix = escapeUserProvidedKey(prefix) + '/';
          }
          var traverseContext = getPooledTraverseContext(array, escapedPrefix, func, context);
          traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
          releaseTraverseContext(traverseContext);
        }
        function mapChildren(children, func, context) {
          if (children == null) {
            return children;
          }
          var result = [];
          mapIntoWithKeyPrefixInternal(children, result, null, func, context);
          return result;
        }
        function countChildren(children) {
          return traverseAllChildren(children, function () {
            return null;
          }, null);
        }
        function toArray(children) {
          var result = [];
          mapIntoWithKeyPrefixInternal(children, result, null, function (child) {
            return child;
          });
          return result;
        }
        function onlyChild(children) {
          !isValidElement(children) ? invariant(false, 'React.Children.only expected to receive a single React element child.') : void 0;
          return children;
        }
        function createContext(defaultValue, calculateChangedBits) {
          if (calculateChangedBits === undefined) {
            calculateChangedBits = null;
          } else {
            {
              !(calculateChangedBits === null || typeof calculateChangedBits === 'function') ? warningWithoutStack$1(false, 'createContext: Expected the optional second argument to be a ' + 'function. Instead received: %s', calculateChangedBits) : void 0;
            }
          }
          var context = {
            $$typeof: REACT_CONTEXT_TYPE,
            _calculateChangedBits: calculateChangedBits,
            _currentValue: defaultValue,
            _currentValue2: defaultValue,
            _threadCount: 0,
            Provider: null,
            Consumer: null
          };
          context.Provider = {
            $$typeof: REACT_PROVIDER_TYPE,
            _context: context
          };
          var hasWarnedAboutUsingNestedContextConsumers = false;
          var hasWarnedAboutUsingConsumerProvider = false;
          {
            var Consumer = {
              $$typeof: REACT_CONTEXT_TYPE,
              _context: context,
              _calculateChangedBits: context._calculateChangedBits
            };
            Object.defineProperties(Consumer, {
              Provider: {
                get: function () {
                  if (!hasWarnedAboutUsingConsumerProvider) {
                    hasWarnedAboutUsingConsumerProvider = true;
                    warning$1(false, 'Rendering <Context.Consumer.Provider> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Provider> instead?');
                  }
                  return context.Provider;
                },
                set: function (_Provider) {
                  context.Provider = _Provider;
                }
              },
              _currentValue: {
                get: function () {
                  return context._currentValue;
                },
                set: function (_currentValue) {
                  context._currentValue = _currentValue;
                }
              },
              _currentValue2: {
                get: function () {
                  return context._currentValue2;
                },
                set: function (_currentValue2) {
                  context._currentValue2 = _currentValue2;
                }
              },
              _threadCount: {
                get: function () {
                  return context._threadCount;
                },
                set: function (_threadCount) {
                  context._threadCount = _threadCount;
                }
              },
              Consumer: { get: function () {
                  if (!hasWarnedAboutUsingNestedContextConsumers) {
                    hasWarnedAboutUsingNestedContextConsumers = true;
                    warning$1(false, 'Rendering <Context.Consumer.Consumer> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Consumer> instead?');
                  }
                  return context.Consumer;
                } }
            });
            context.Consumer = Consumer;
          }
          {
            context._currentRenderer = null;
            context._currentRenderer2 = null;
          }
          return context;
        }
        function lazy(ctor) {
          var lazyType = {
            $$typeof: REACT_LAZY_TYPE,
            _ctor: ctor,
            _status: -1,
            _result: null
          };
          {
            var defaultProps = void 0;
            var propTypes = void 0;
            Object.defineProperties(lazyType, {
              defaultProps: {
                configurable: true,
                get: function () {
                  return defaultProps;
                },
                set: function (newDefaultProps) {
                  warning$1(false, 'React.lazy(...): It is not supported to assign `defaultProps` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');
                  defaultProps = newDefaultProps;
                  Object.defineProperty(lazyType, 'defaultProps', { enumerable: true });
                }
              },
              propTypes: {
                configurable: true,
                get: function () {
                  return propTypes;
                },
                set: function (newPropTypes) {
                  warning$1(false, 'React.lazy(...): It is not supported to assign `propTypes` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');
                  propTypes = newPropTypes;
                  Object.defineProperty(lazyType, 'propTypes', { enumerable: true });
                }
              }
            });
          }
          return lazyType;
        }
        function forwardRef(render) {
          {
            if (render != null && render.$$typeof === REACT_MEMO_TYPE) {
              warningWithoutStack$1(false, 'forwardRef requires a render function but received a `memo` ' + 'component. Instead of forwardRef(memo(...)), use ' + 'memo(forwardRef(...)).');
            } else if (typeof render !== 'function') {
              warningWithoutStack$1(false, 'forwardRef requires a render function but was given %s.', render === null ? 'null' : typeof render);
            } else {
              !(render.length === 0 || render.length === 2) ? warningWithoutStack$1(false, 'forwardRef render functions accept exactly two parameters: props and ref. %s', render.length === 1 ? 'Did you forget to use the ref parameter?' : 'Any additional parameter will be undefined.') : void 0;
            }
            if (render != null) {
              !(render.defaultProps == null && render.propTypes == null) ? warningWithoutStack$1(false, 'forwardRef render functions do not support propTypes or defaultProps. ' + 'Did you accidentally pass a React component?') : void 0;
            }
          }
          return {
            $$typeof: REACT_FORWARD_REF_TYPE,
            render: render
          };
        }
        function isValidElementType(type) {
          return typeof type === 'string' || typeof type === 'function' || type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE);
        }
        function memo(type, compare) {
          {
            if (!isValidElementType(type)) {
              warningWithoutStack$1(false, 'memo: The first argument must be a component. Instead ' + 'received: %s', type === null ? 'null' : typeof type);
            }
          }
          return {
            $$typeof: REACT_MEMO_TYPE,
            type: type,
            compare: compare === undefined ? null : compare
          };
        }
        function resolveDispatcher() {
          var dispatcher = ReactCurrentOwner.currentDispatcher;
          !(dispatcher !== null) ? invariant(false, 'Hooks can only be called inside the body of a function component.') : void 0;
          return dispatcher;
        }
        function useContext(Context, observedBits) {
          var dispatcher = resolveDispatcher();
          {
            if (Context._context !== undefined) {
              var realContext = Context._context;
              if (realContext.Consumer === Context) {
                warning$1(false, 'Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be ' + 'removed in a future major release. Did you mean to call useContext(Context) instead?');
              } else if (realContext.Provider === Context) {
                warning$1(false, 'Calling useContext(Context.Provider) is not supported. ' + 'Did you mean to call useContext(Context) instead?');
              }
            }
          }
          return dispatcher.useContext(Context, observedBits);
        }
        function useState(initialState) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useState(initialState);
        }
        function useReducer(reducer, initialState, initialAction) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useReducer(reducer, initialState, initialAction);
        }
        function useRef(initialValue) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useRef(initialValue);
        }
        function useEffect(create, inputs) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useEffect(create, inputs);
        }
        function useLayoutEffect(create, inputs) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useLayoutEffect(create, inputs);
        }
        function useCallback(callback, inputs) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useCallback(callback, inputs);
        }
        function useMemo(create, inputs) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useMemo(create, inputs);
        }
        function useImperativeMethods(ref, create, inputs) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useImperativeMethods(ref, create, inputs);
        }
        var propTypesMisspellWarningShown = void 0;
        {
          propTypesMisspellWarningShown = false;
        }
        function getDeclarationErrorAddendum() {
          if (ReactCurrentOwner.current) {
            var name = getComponentName(ReactCurrentOwner.current.type);
            if (name) {
              return '\n\nCheck the render method of `' + name + '`.';
            }
          }
          return '';
        }
        function getSourceInfoErrorAddendum(elementProps) {
          if (elementProps !== null && elementProps !== undefined && elementProps.__source !== undefined) {
            var source = elementProps.__source;
            var fileName = source.fileName.replace(/^.*[\\\/]/, '');
            var lineNumber = source.lineNumber;
            return '\n\nCheck your code at ' + fileName + ':' + lineNumber + '.';
          }
          return '';
        }
        var ownerHasKeyUseWarning = {};
        function getCurrentComponentErrorInfo(parentType) {
          var info = getDeclarationErrorAddendum();
          if (!info) {
            var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
            if (parentName) {
              info = '\n\nCheck the top-level render call using <' + parentName + '>.';
            }
          }
          return info;
        }
        function validateExplicitKey(element, parentType) {
          if (!element._store || element._store.validated || element.key != null) {
            return;
          }
          element._store.validated = true;
          var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
          if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
            return;
          }
          ownerHasKeyUseWarning[currentComponentErrorInfo] = true;
          var childOwner = '';
          if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
            childOwner = ' It was passed a child from ' + getComponentName(element._owner.type) + '.';
          }
          setCurrentlyValidatingElement(element);
          {
            warning$1(false, 'Each child in an array or iterator should have a unique "key" prop.' + '%s%s See https://fb.me/react-warning-keys for more information.', currentComponentErrorInfo, childOwner);
          }
          setCurrentlyValidatingElement(null);
        }
        function validateChildKeys(node, parentType) {
          if (typeof node !== 'object') {
            return;
          }
          if (Array.isArray(node)) {
            for (var i = 0; i < node.length; i++) {
              var child = node[i];
              if (isValidElement(child)) {
                validateExplicitKey(child, parentType);
              }
            }
          } else if (isValidElement(node)) {
            if (node._store) {
              node._store.validated = true;
            }
          } else if (node) {
            var iteratorFn = getIteratorFn(node);
            if (typeof iteratorFn === 'function') {
              if (iteratorFn !== node.entries) {
                var iterator = iteratorFn.call(node);
                var step = void 0;
                while (!(step = iterator.next()).done) {
                  if (isValidElement(step.value)) {
                    validateExplicitKey(step.value, parentType);
                  }
                }
              }
            }
          }
        }
        function validatePropTypes(element) {
          var type = element.type;
          if (type === null || type === undefined || typeof type === 'string') {
            return;
          }
          var name = getComponentName(type);
          var propTypes = void 0;
          if (typeof type === 'function') {
            propTypes = type.propTypes;
          } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_MEMO_TYPE)) {
            propTypes = type.propTypes;
          } else {
            return;
          }
          if (propTypes) {
            setCurrentlyValidatingElement(element);
            checkPropTypes(propTypes, element.props, 'prop', name, ReactDebugCurrentFrame.getStackAddendum);
            setCurrentlyValidatingElement(null);
          } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {
            propTypesMisspellWarningShown = true;
            warningWithoutStack$1(false, 'Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', name || 'Unknown');
          }
          if (typeof type.getDefaultProps === 'function') {
            !type.getDefaultProps.isReactClassApproved ? warningWithoutStack$1(false, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : void 0;
          }
        }
        function validateFragmentProps(fragment) {
          setCurrentlyValidatingElement(fragment);
          var keys = Object.keys(fragment.props);
          for (var i = 0; i < keys.length; i++) {
            var key = keys[i];
            if (key !== 'children' && key !== 'key') {
              warning$1(false, 'Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);
              break;
            }
          }
          if (fragment.ref !== null) {
            warning$1(false, 'Invalid attribute `ref` supplied to `React.Fragment`.');
          }
          setCurrentlyValidatingElement(null);
        }
        function createElementWithValidation(type, props, children) {
          var validType = isValidElementType(type);
          if (!validType) {
            var info = '';
            if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
              info += ' You likely forgot to export your component from the file ' + "it's defined in, or you might have mixed up default and named imports.";
            }
            var sourceInfo = getSourceInfoErrorAddendum(props);
            if (sourceInfo) {
              info += sourceInfo;
            } else {
              info += getDeclarationErrorAddendum();
            }
            var typeString = void 0;
            if (type === null) {
              typeString = 'null';
            } else if (Array.isArray(type)) {
              typeString = 'array';
            } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {
              typeString = '<' + (getComponentName(type.type) || 'Unknown') + ' />';
              info = ' Did you accidentally export a JSX literal instead of a component?';
            } else {
              typeString = typeof type;
            }
            warning$1(false, 'React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);
          }
          var element = createElement.apply(this, arguments);
          if (element == null) {
            return element;
          }
          if (validType) {
            for (var i = 2; i < arguments.length; i++) {
              validateChildKeys(arguments[i], type);
            }
          }
          if (type === REACT_FRAGMENT_TYPE) {
            validateFragmentProps(element);
          } else {
            validatePropTypes(element);
          }
          return element;
        }
        function createFactoryWithValidation(type) {
          var validatedFactory = createElementWithValidation.bind(null, type);
          validatedFactory.type = type;
          {
            Object.defineProperty(validatedFactory, 'type', {
              enumerable: false,
              get: function () {
                lowPriorityWarning$1(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');
                Object.defineProperty(this, 'type', { value: type });
                return type;
              }
            });
          }
          return validatedFactory;
        }
        function cloneElementWithValidation(element, props, children) {
          var newElement = cloneElement.apply(this, arguments);
          for (var i = 2; i < arguments.length; i++) {
            validateChildKeys(arguments[i], newElement.type);
          }
          validatePropTypes(newElement);
          return newElement;
        }
        var React = {
          Children: {
            map: mapChildren,
            forEach: forEachChildren,
            count: countChildren,
            toArray: toArray,
            only: onlyChild
          },
          createRef: createRef,
          Component: Component,
          PureComponent: PureComponent,
          createContext: createContext,
          forwardRef: forwardRef,
          lazy: lazy,
          memo: memo,
          Fragment: REACT_FRAGMENT_TYPE,
          StrictMode: REACT_STRICT_MODE_TYPE,
          Suspense: REACT_SUSPENSE_TYPE,
          createElement: createElementWithValidation,
          cloneElement: cloneElementWithValidation,
          createFactory: createFactoryWithValidation,
          isValidElement: isValidElement,
          version: ReactVersion,
          unstable_ConcurrentMode: REACT_CONCURRENT_MODE_TYPE,
          unstable_Profiler: REACT_PROFILER_TYPE,
          __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: ReactSharedInternals
        };
        if (enableStableConcurrentModeAPIs) {
          React.ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
          React.Profiler = REACT_PROFILER_TYPE;
          React.unstable_ConcurrentMode = undefined;
          React.unstable_Profiler = undefined;
        }
        if (enableHooks) {
          React.useCallback = useCallback;
          React.useContext = useContext;
          React.useEffect = useEffect;
          React.useImperativeMethods = useImperativeMethods;
          React.useLayoutEffect = useLayoutEffect;
          React.useMemo = useMemo;
          React.useReducer = useReducer;
          React.useRef = useRef;
          React.useState = useState;
        }
        var React$2 = Object.freeze({ default: React });
        var React$3 = React$2 && React || React$2;
        var react = React$3.default || React$3;
        module.exports = react;
      })();
    }
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react@16.7.0/index.js', ['npm:react@16.7.0/cjs/react.production.min.js', 'npm:react@16.7.0/cjs/react.development.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    if ('production' === 'production') {
      module.exports = $__require('npm:react@16.7.0/cjs/react.production.min.js');
    } else {
      module.exports = $__require('npm:react@16.7.0/cjs/react.development.js');
    }
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic("npm:react@16.7.0.js", ["npm:react@16.7.0/index.js"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("npm:react@16.7.0/index.js");
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/common/errors.js", [], true, function ($__require, exports, module) {
    /* */
    "use strict";
    /*
     * Copyright 2015 Palantir Technologies, Inc. All rights reserved.
     *
     * Licensed under the terms of the LICENSE file distributed with this project.
     */

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    var ns = "[Blueprint]";
    exports.CLAMP_MIN_MAX = ns + " clamp: max cannot be less than min";
    exports.ALERT_WARN_CANCEL_PROPS = ns + " <Alert> cancelButtonText and onCancel should be set together.";
    exports.ALERT_WARN_CANCEL_ESCAPE_KEY = ns + " <Alert> canEscapeKeyCancel enabled without onCancel or onClose handler.";
    exports.ALERT_WARN_CANCEL_OUTSIDE_CLICK = ns + " <Alert> canOutsideClickCancel enbaled without onCancel or onClose handler.";
    exports.COLLAPSIBLE_LIST_INVALID_CHILD = ns + " <CollapsibleList> children must be <MenuItem>s";
    exports.CONTEXTMENU_WARN_DECORATOR_NO_METHOD = ns + " @ContextMenuTarget-decorated class should implement renderContextMenu.";
    exports.CONTEXTMENU_WARN_DECORATOR_NEEDS_REACT_ELEMENT = ns + " \"@ContextMenuTarget-decorated components must return a single JSX.Element or an empty render.";
    exports.HOTKEYS_HOTKEY_CHILDREN = ns + " <Hotkeys> only accepts <Hotkey> children.";
    exports.HOTKEYS_WARN_DECORATOR_NO_METHOD = ns + " @HotkeysTarget-decorated class should implement renderHotkeys.";
    exports.HOTKEYS_WARN_DECORATOR_NEEDS_REACT_ELEMENT = ns + " \"@HotkeysTarget-decorated components must return a single JSX.Element or an empty render.";
    exports.NUMERIC_INPUT_MIN_MAX = ns + " <NumericInput> requires min to be strictly less than max if both are defined.";
    exports.NUMERIC_INPUT_MINOR_STEP_SIZE_BOUND = ns + " <NumericInput> requires minorStepSize to be strictly less than stepSize.";
    exports.NUMERIC_INPUT_MAJOR_STEP_SIZE_BOUND = ns + " <NumericInput> requires majorStepSize to be strictly greater than stepSize.";
    exports.NUMERIC_INPUT_MINOR_STEP_SIZE_NON_POSITIVE = ns + " <NumericInput> requires minorStepSize to be strictly greater than zero.";
    exports.NUMERIC_INPUT_MAJOR_STEP_SIZE_NON_POSITIVE = ns + " <NumericInput> requires majorStepSize to be strictly greater than zero.";
    exports.NUMERIC_INPUT_STEP_SIZE_NON_POSITIVE = ns + " <NumericInput> requires stepSize to be strictly greater than zero.";
    exports.NUMERIC_INPUT_STEP_SIZE_NULL = ns + " <NumericInput> requires stepSize to be defined.";
    exports.OVERFLOW_LIST_OBSERVE_PARENTS_CHANGED = ns + " <OverflowList> does not support changing observeParents after mounting.";
    // TODO (clewis): Migrate old Popover validation errors to the component formerly known as Popover2.
    // See: https://github.com/palantir/blueprint/issues/1940
    exports.POPOVER_REQUIRES_TARGET = ns + " <Popover> requires target prop or at least one child element.";
    exports.POPOVER_HAS_BACKDROP_INTERACTION = ns + " <Popover hasBackdrop={true}> requires interactionKind={PopoverInteractionKind.CLICK}.";
    exports.POPOVER_WARN_TOO_MANY_CHILDREN = ns + " <Popover> supports one or two children; additional children are ignored." + " First child is the target, second child is the content. You may instead supply these two as props.";
    exports.POPOVER_WARN_DOUBLE_CONTENT = ns + " <Popover> with two children ignores content prop; use either prop or children.";
    exports.POPOVER_WARN_DOUBLE_TARGET = ns + " <Popover> with children ignores target prop; use either prop or children.";
    exports.POPOVER_WARN_EMPTY_CONTENT = ns + " Disabling <Popover> with empty/whitespace content...";
    exports.POPOVER_WARN_HAS_BACKDROP_INLINE = ns + " <Popover usePortal={false}> ignores hasBackdrop";
    exports.POPOVER_WARN_UNCONTROLLED_ONINTERACTION = ns + " <Popover> onInteraction is ignored when uncontrolled.";
    exports.PORTAL_CONTEXT_CLASS_NAME_STRING = ns + " <Portal> context blueprintPortalClassName must be string";
    exports.RADIOGROUP_WARN_CHILDREN_OPTIONS_MUTEX = ns + " <RadioGroup> children and options prop are mutually exclusive, with options taking priority.";
    exports.SLIDER_ZERO_STEP = ns + " <Slider> stepSize must be greater than zero.";
    exports.SLIDER_ZERO_LABEL_STEP = ns + " <Slider> labelStepSize must be greater than zero.";
    exports.RANGESLIDER_NULL_VALUE = ns + " <RangeSlider> value prop must be an array of two non-null numbers.";
    exports.MULTISLIDER_INVALID_CHILD = ns + " <MultiSlider> children must be <SliderHandle>s or <SliderTrackStop>s";
    exports.SPINNER_WARN_CLASSES_SIZE = ns + " <Spinner> Classes.SMALL/LARGE are ignored if size prop is set.";
    exports.TOASTER_CREATE_NULL = ns + " Toaster.create() is not supported inside React lifecycle methods in React 16." + " See usage example on the docs site.";
    exports.TOASTER_WARN_INLINE = ns + " Toaster.create() ignores inline prop as it always creates a new element.";
    exports.DIALOG_WARN_NO_HEADER_ICON = ns + " <Dialog> iconName is ignored if title is omitted.";
    exports.DIALOG_WARN_NO_HEADER_CLOSE_BUTTON = ns + " <Dialog> isCloseButtonShown prop is ignored if title is omitted.";
    
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/common/utils/compareUtils.js", [], true, function ($__require, exports, module) {
    /* */
    "use strict";
    /*
     * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
     *
     * Licensed under the terms of the LICENSE file distributed with this project.
     */

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    /**
     * Returns true if the arrays are equal. Elements will be shallowly compared by
     * default, or they will be compared using the custom `compare` function if one
     * is provided.
     */
    function arraysEqual(arrA, arrB, compare) {
        if (compare === void 0) {
            compare = function (a, b) {
                return a === b;
            };
        }
        // treat `null` and `undefined` as the same
        if (arrA == null && arrB == null) {
            return true;
        } else if (arrA == null || arrB == null || arrA.length !== arrB.length) {
            return false;
        } else {
            return arrA.every(function (a, i) {
                return compare(a, arrB[i]);
            });
        }
    }
    exports.arraysEqual = arraysEqual;
    /**
     * Shallow comparison between objects. If `keys` is provided, just that subset
     * of keys will be compared; otherwise, all keys will be compared.
     */
    function shallowCompareKeys(objA, objB, keys) {
        // treat `null` and `undefined` as the same
        if (objA == null && objB == null) {
            return true;
        } else if (objA == null || objB == null) {
            return false;
        } else if (Array.isArray(objA) || Array.isArray(objB)) {
            return false;
        } else if (keys != null) {
            return _shallowCompareKeys(objA, objB, keys);
        } else {
            // shallowly compare all keys from both objects
            var keysA = Object.keys(objA);
            var keysB = Object.keys(objB);
            return _shallowCompareKeys(objA, objB, { include: keysA }) && _shallowCompareKeys(objA, objB, { include: keysB });
        }
    }
    exports.shallowCompareKeys = shallowCompareKeys;
    /**
     * Deep comparison between objects. If `keys` is provided, just that subset of
     * keys will be compared; otherwise, all keys will be compared.
     */
    function deepCompareKeys(objA, objB, keys) {
        if (objA === objB) {
            return true;
        } else if (objA == null && objB == null) {
            // treat `null` and `undefined` as the same
            return true;
        } else if (objA == null || objB == null) {
            return false;
        } else if (Array.isArray(objA) || Array.isArray(objB)) {
            return arraysEqual(objA, objB, deepCompareKeys);
        } else if (_isSimplePrimitiveType(objA) || _isSimplePrimitiveType(objB)) {
            return objA === objB;
        } else if (keys != null) {
            return _deepCompareKeys(objA, objB, keys);
        } else if (objA.constructor !== objB.constructor) {
            return false;
        } else {
            var keysA = Object.keys(objA);
            var keysB = Object.keys(objB);
            if (keysA == null || keysB == null) {
                return false;
            }
            if (keysA.length === 0 && keysB.length === 0) {
                return true;
            }
            return arraysEqual(keysA, keysB) && _deepCompareKeys(objA, objB, keysA);
        }
    }
    exports.deepCompareKeys = deepCompareKeys;
    /**
     * Returns a descriptive object for each key whose values are shallowly unequal
     * between two provided objects. Useful for debugging shouldComponentUpdate.
     */
    function getShallowUnequalKeyValues(objA, objB, keys) {
        // default param values let null values pass through, so we have to take
        // this more thorough approach
        var definedObjA = objA == null ? {} : objA;
        var definedObjB = objB == null ? {} : objB;
        var filteredKeys = _filterKeys(definedObjA, definedObjB, keys == null ? { exclude: [] } : keys);
        return _getUnequalKeyValues(definedObjA, definedObjB, filteredKeys, function (a, b, key) {
            return shallowCompareKeys(a, b, { include: [key] });
        });
    }
    exports.getShallowUnequalKeyValues = getShallowUnequalKeyValues;
    /**
     * Returns a descriptive object for each key whose values are deeply unequal
     * between two provided objects. Useful for debugging shouldComponentUpdate.
     */
    function getDeepUnequalKeyValues(objA, objB, keys) {
        if (objA === void 0) {
            objA = {};
        }
        if (objB === void 0) {
            objB = {};
        }
        var filteredKeys = keys == null ? _unionKeys(objA, objB) : keys;
        return _getUnequalKeyValues(objA, objB, filteredKeys, function (a, b, key) {
            return deepCompareKeys(a, b, [key]);
        });
    }
    exports.getDeepUnequalKeyValues = getDeepUnequalKeyValues;
    // Private helpers
    // ===============
    /**
     * Partial shallow comparison between objects using the given list of keys.
     */
    function _shallowCompareKeys(objA, objB, keys) {
        return _filterKeys(objA, objB, keys).every(function (key) {
            return objA.hasOwnProperty(key) === objB.hasOwnProperty(key) && objA[key] === objB[key];
        });
    }
    /**
     * Partial deep comparison between objects using the given list of keys.
     */
    function _deepCompareKeys(objA, objB, keys) {
        return keys.every(function (key) {
            return objA.hasOwnProperty(key) === objB.hasOwnProperty(key) && deepCompareKeys(objA[key], objB[key]);
        });
    }
    function _isSimplePrimitiveType(value) {
        return typeof value === "number" || typeof value === "string" || typeof value === "boolean";
    }
    function _filterKeys(objA, objB, keys) {
        if (_isWhitelist(keys)) {
            return keys.include;
        } else {
            var keysA = Object.keys(objA);
            var keysB = Object.keys(objB);
            // merge keys from both objects into a big set for quick access
            var keySet_1 = _arrayToObject(keysA.concat(keysB));
            // delete blacklisted keys from the key set
            keys.exclude.forEach(function (key) {
                return delete keySet_1[key];
            });
            // return the remaining keys as an array
            return Object.keys(keySet_1);
        }
    }
    function _isWhitelist(keys) {
        return keys != null && keys.include != null;
    }
    function _arrayToObject(arr) {
        return arr.reduce(function (obj, element) {
            obj[element] = true;
            return obj;
        }, {});
    }
    function _getUnequalKeyValues(objA, objB, keys, compareFn) {
        var unequalKeys = keys.filter(function (key) {
            return !compareFn(objA, objB, key);
        });
        var unequalKeyValues = unequalKeys.map(function (key) {
            return {
                key: key,
                valueA: objA[key],
                valueB: objB[key]
            };
        });
        return unequalKeyValues;
    }
    function _unionKeys(objA, objB) {
        var keysA = Object.keys(objA);
        var keysB = Object.keys(objB);
        var concatKeys = keysA.concat(keysB);
        var keySet = _arrayToObject(concatKeys);
        return Object.keys(keySet);
    }
    
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/common/utils/safeInvokeMember.js", ["npm:@blueprintjs/core@3.11.0/lib/cjs/common/utils.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var utils_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/utils.js");
  function safeInvokeMember(obj, key) {
    var args = [];
    for (var _i = 2; _i < arguments.length; _i++) {
      args[_i - 2] = arguments[_i];
    }
    if (obj != null) {
      var member = obj[key];
      if (utils_1.isFunction(member)) {
        return member.apply(void 0, args);
      }
    }
    return undefined;
  }
  exports.safeInvokeMember = safeInvokeMember;
});
System.registerDynamic('npm:process@0.11.10/browser.js', [], true, function ($__require, exports, module) {
    var global = this || self,
        GLOBAL = global;
    // shim for using process in browser
    var process = module.exports = {};

    // cached from whatever global is present so that test runners that stub it
    // don't break things.  But we need to wrap it in a try catch in case it is
    // wrapped in strict mode code which doesn't define any globals.  It's inside a
    // function because try/catches deoptimize in certain engines.

    var cachedSetTimeout;
    var cachedClearTimeout;

    function defaultSetTimout() {
        throw new Error('setTimeout has not been defined');
    }
    function defaultClearTimeout() {
        throw new Error('clearTimeout has not been defined');
    }
    (function () {
        try {
            if (typeof setTimeout === 'function') {
                cachedSetTimeout = setTimeout;
            } else {
                cachedSetTimeout = defaultSetTimout;
            }
        } catch (e) {
            cachedSetTimeout = defaultSetTimout;
        }
        try {
            if (typeof clearTimeout === 'function') {
                cachedClearTimeout = clearTimeout;
            } else {
                cachedClearTimeout = defaultClearTimeout;
            }
        } catch (e) {
            cachedClearTimeout = defaultClearTimeout;
        }
    })();
    function runTimeout(fun) {
        if (cachedSetTimeout === setTimeout) {
            //normal enviroments in sane situations
            return setTimeout(fun, 0);
        }
        // if setTimeout wasn't available but was latter defined
        if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
            cachedSetTimeout = setTimeout;
            return setTimeout(fun, 0);
        }
        try {
            // when when somebody has screwed with setTimeout but no I.E. maddness
            return cachedSetTimeout(fun, 0);
        } catch (e) {
            try {
                // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
                return cachedSetTimeout.call(null, fun, 0);
            } catch (e) {
                // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
                return cachedSetTimeout.call(this, fun, 0);
            }
        }
    }
    function runClearTimeout(marker) {
        if (cachedClearTimeout === clearTimeout) {
            //normal enviroments in sane situations
            return clearTimeout(marker);
        }
        // if clearTimeout wasn't available but was latter defined
        if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
            cachedClearTimeout = clearTimeout;
            return clearTimeout(marker);
        }
        try {
            // when when somebody has screwed with setTimeout but no I.E. maddness
            return cachedClearTimeout(marker);
        } catch (e) {
            try {
                // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
                return cachedClearTimeout.call(null, marker);
            } catch (e) {
                // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
                // Some versions of I.E. have different rules for clearTimeout vs setTimeout
                return cachedClearTimeout.call(this, marker);
            }
        }
    }
    var queue = [];
    var draining = false;
    var currentQueue;
    var queueIndex = -1;

    function cleanUpNextTick() {
        if (!draining || !currentQueue) {
            return;
        }
        draining = false;
        if (currentQueue.length) {
            queue = currentQueue.concat(queue);
        } else {
            queueIndex = -1;
        }
        if (queue.length) {
            drainQueue();
        }
    }

    function drainQueue() {
        if (draining) {
            return;
        }
        var timeout = runTimeout(cleanUpNextTick);
        draining = true;

        var len = queue.length;
        while (len) {
            currentQueue = queue;
            queue = [];
            while (++queueIndex < len) {
                if (currentQueue) {
                    currentQueue[queueIndex].run();
                }
            }
            queueIndex = -1;
            len = queue.length;
        }
        currentQueue = null;
        draining = false;
        runClearTimeout(timeout);
    }

    process.nextTick = function (fun) {
        var args = new Array(arguments.length - 1);
        if (arguments.length > 1) {
            for (var i = 1; i < arguments.length; i++) {
                args[i - 1] = arguments[i];
            }
        }
        queue.push(new Item(fun, args));
        if (queue.length === 1 && !draining) {
            runTimeout(drainQueue);
        }
    };

    // v8 likes predictible objects
    function Item(fun, array) {
        this.fun = fun;
        this.array = array;
    }
    Item.prototype.run = function () {
        this.fun.apply(null, this.array);
    };
    process.title = 'browser';
    process.browser = true;
    process.env = {};
    process.argv = [];
    process.version = ''; // empty string to avoid regexp issues
    process.versions = {};

    function noop() {}

    process.on = noop;
    process.addListener = noop;
    process.once = noop;
    process.off = noop;
    process.removeListener = noop;
    process.removeAllListeners = noop;
    process.emit = noop;
    process.prependListener = noop;
    process.prependOnceListener = noop;

    process.listeners = function (name) {
        return [];
    };

    process.binding = function (name) {
        throw new Error('process.binding is not supported');
    };

    process.cwd = function () {
        return '/';
    };
    process.chdir = function (dir) {
        throw new Error('process.chdir is not supported');
    };
    process.umask = function () {
        return 0;
    };
});
System.registerDynamic("npm:process@0.11.10.js", ["npm:process@0.11.10/browser.js"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("npm:process@0.11.10/browser.js");
});
System.registerDynamic('github:jspm/nodelibs-process@0.1.2/index.js', ['npm:process@0.11.10.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = System._nodeRequire ? process : $__require('npm:process@0.11.10.js');
});
System.registerDynamic("github:jspm/nodelibs-process@0.1.2.js", ["github:jspm/nodelibs-process@0.1.2/index.js"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("github:jspm/nodelibs-process@0.1.2/index.js");
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/common/utils.js", ["npm:tslib@1.9.3.js", "npm:react@16.7.0.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/errors.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/utils/compareUtils.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/utils/safeInvokeMember.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    "use strict";

    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = $__require("npm:tslib@1.9.3.js");
    var React = tslib_1.__importStar($__require("npm:react@16.7.0.js"));
    var errors_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/errors.js");
    tslib_1.__exportStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/utils/compareUtils.js"), exports);
    tslib_1.__exportStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/utils/safeInvokeMember.js"), exports);
    function isNodeEnv(env) {
      return typeof process !== "undefined" && process.env && "production" === env;
    }
    exports.isNodeEnv = isNodeEnv;
    function isFunction(value) {
      return typeof value === "function";
    }
    exports.isFunction = isFunction;
    function isReactNodeEmpty(node, skipArray) {
      if (skipArray === void 0) {
        skipArray = false;
      }
      return node == null || node === "" || node === false || !skipArray && Array.isArray(node) && (node.length === 0 || node.every(function (n) {
        return isReactNodeEmpty(n, true);
      }));
    }
    exports.isReactNodeEmpty = isReactNodeEmpty;
    function ensureElement(child, tagName) {
      if (tagName === void 0) {
        tagName = "span";
      }
      if (child == null) {
        return undefined;
      } else if (typeof child === "string") {
        return child.trim().length > 0 ? React.createElement(tagName, {}, child) : undefined;
      } else if (typeof child === "number" || typeof child.type === "symbol") {
        return React.createElement(tagName, {}, child);
      } else {
        return child;
      }
    }
    exports.ensureElement = ensureElement;
    function getDisplayName(ComponentClass) {
      return ComponentClass.displayName || ComponentClass.name || "Unknown";
    }
    exports.getDisplayName = getDisplayName;
    function isElementOfType(element, ComponentType) {
      return element != null && element.type != null && element.type.displayName != null && element.type.displayName === ComponentType.displayName;
    }
    exports.isElementOfType = isElementOfType;
    function safeInvoke(func) {
      var args = [];
      for (var _i = 1; _i < arguments.length; _i++) {
        args[_i - 1] = arguments[_i];
      }
      if (isFunction(func)) {
        return func.apply(void 0, args);
      }
      return undefined;
    }
    exports.safeInvoke = safeInvoke;
    function safeInvokeOrValue(funcOrValue) {
      var args = [];
      for (var _i = 1; _i < arguments.length; _i++) {
        args[_i - 1] = arguments[_i];
      }
      return isFunction(funcOrValue) ? funcOrValue.apply(void 0, args) : funcOrValue;
    }
    exports.safeInvokeOrValue = safeInvokeOrValue;
    function elementIsOrContains(element, testElement) {
      return element === testElement || element.contains(testElement);
    }
    exports.elementIsOrContains = elementIsOrContains;
    function arrayLengthCompare(a, b) {
      if (a === void 0) {
        a = [];
      }
      if (b === void 0) {
        b = [];
      }
      return a.length - b.length;
    }
    exports.arrayLengthCompare = arrayLengthCompare;
    function approxEqual(a, b, tolerance) {
      if (tolerance === void 0) {
        tolerance = 0.00001;
      }
      return Math.abs(a - b) <= tolerance;
    }
    exports.approxEqual = approxEqual;
    function clamp(val, min, max) {
      if (val == null) {
        return val;
      }
      if (max < min) {
        throw new Error(errors_1.CLAMP_MIN_MAX);
      }
      return Math.min(Math.max(val, min), max);
    }
    exports.clamp = clamp;
    function countDecimalPlaces(num) {
      if (typeof num !== "number" || Math.floor(num) === num) {
        return 0;
      }
      return num.toString().split(".")[1].length;
    }
    exports.countDecimalPlaces = countDecimalPlaces;
    function throttleEvent(target, eventName, newEventName) {
      var throttledFunc = _throttleHelper(function (event) {
        target.dispatchEvent(new CustomEvent(newEventName, event));
      });
      target.addEventListener(eventName, throttledFunc);
      return throttledFunc;
    }
    exports.throttleEvent = throttleEvent;
    function throttleReactEventCallback(callback, options) {
      if (options === void 0) {
        options = {};
      }
      var throttledFunc = _throttleHelper(callback, function (event2) {
        if (options.preventDefault) {
          event2.preventDefault();
        }
      }, function (event2) {
        return event2.persist();
      });
      return throttledFunc;
    }
    exports.throttleReactEventCallback = throttleReactEventCallback;
    function throttle(method) {
      return _throttleHelper(method);
    }
    exports.throttle = throttle;
    function _throttleHelper(onAnimationFrameRequested, onBeforeIsRunningCheck, onAfterIsRunningCheck) {
      var isRunning = false;
      var func = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
          args[_i] = arguments[_i];
        }
        if (isFunction(onBeforeIsRunningCheck)) {
          onBeforeIsRunningCheck.apply(void 0, args);
        }
        if (isRunning) {
          return;
        }
        isRunning = true;
        if (isFunction(onAfterIsRunningCheck)) {
          onAfterIsRunningCheck.apply(void 0, args);
        }
        requestAnimationFrame(function () {
          onAnimationFrameRequested.apply(void 0, args);
          isRunning = false;
        });
      };
      return func;
    }
  })($__require("github:jspm/nodelibs-process@0.1.2.js"));
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/common/index.js", ["npm:tslib@1.9.3.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/abstractComponent.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/abstractPureComponent.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/alignment.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/boundary.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/colors.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/elevation.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/intent.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/position.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/keys.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/utils.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  tslib_1.__exportStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/abstractComponent.js"), exports);
  tslib_1.__exportStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/abstractPureComponent.js"), exports);
  tslib_1.__exportStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/alignment.js"), exports);
  tslib_1.__exportStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/boundary.js"), exports);
  tslib_1.__exportStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/colors.js"), exports);
  tslib_1.__exportStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/elevation.js"), exports);
  tslib_1.__exportStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/intent.js"), exports);
  tslib_1.__exportStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/position.js"), exports);
  tslib_1.__exportStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js"), exports);
  var Classes = tslib_1.__importStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js"));
  exports.Classes = Classes;
  var Keys = tslib_1.__importStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/keys.js"));
  exports.Keys = Keys;
  var Utils = tslib_1.__importStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/utils.js"));
  exports.Utils = Utils;
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/components/icon/icon.js", ["npm:tslib@1.9.3.js", "npm:classnames@2.2.6.js", "npm:react@16.7.0.js", "npm:@blueprintjs/icons@3.5.0.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/index.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  var classnames_1 = tslib_1.__importDefault($__require("npm:classnames@2.2.6.js"));
  var React = tslib_1.__importStar($__require("npm:react@16.7.0.js"));
  var icons_1 = $__require("npm:@blueprintjs/icons@3.5.0.js");
  var common_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/index.js");
  var Icon = function (_super) {
    tslib_1.__extends(Icon, _super);
    function Icon() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    Icon.prototype.render = function () {
      var icon = this.props.icon;
      if (icon == null || typeof icon === "boolean") {
        return null;
      } else if (typeof icon !== "string") {
        return icon;
      }
      var _a = this.props,
          className = _a.className,
          color = _a.color,
          htmlTitle = _a.htmlTitle,
          _b = _a.iconSize,
          iconSize = _b === void 0 ? Icon.SIZE_STANDARD : _b,
          intent = _a.intent,
          _c = _a.title,
          title = _c === void 0 ? icon : _c,
          _d = _a.tagName,
          TagName = _d === void 0 ? "span" : _d,
          htmlprops = tslib_1.__rest(_a, ["className", "color", "htmlTitle", "iconSize", "intent", "title", "tagName"]);
      var pixelGridSize = iconSize >= Icon.SIZE_LARGE ? Icon.SIZE_LARGE : Icon.SIZE_STANDARD;
      var paths = this.renderSvgPaths(pixelGridSize, icon);
      var classes = classnames_1.default(common_1.Classes.ICON, common_1.Classes.iconClass(icon), common_1.Classes.intentClass(intent), className);
      var viewBox = "0 0 " + pixelGridSize + " " + pixelGridSize;
      return React.createElement(TagName, tslib_1.__assign({}, htmlprops, {
        className: classes,
        title: htmlTitle
      }), React.createElement("svg", {
        fill: color,
        "data-icon": icon,
        width: iconSize,
        height: iconSize,
        viewBox: viewBox
      }, title && React.createElement("desc", null, title), paths));
    };
    Icon.prototype.renderSvgPaths = function (pathsSize, iconName) {
      var svgPathsRecord = pathsSize === Icon.SIZE_STANDARD ? icons_1.IconSvgPaths16 : icons_1.IconSvgPaths20;
      var pathStrings = svgPathsRecord[iconName];
      if (pathStrings == null) {
        return null;
      }
      return pathStrings.map(function (d, i) {
        return React.createElement("path", {
          key: i,
          d: d,
          fillRule: "evenodd"
        });
      });
    };
    Icon.displayName = common_1.DISPLAYNAME_PREFIX + ".Icon";
    Icon.SIZE_STANDARD = 16;
    Icon.SIZE_LARGE = 20;
    return Icon;
  }(React.PureComponent);
  exports.Icon = Icon;
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/components/tree/treeNode.js", ["npm:tslib@1.9.3.js", "npm:classnames@2.2.6.js", "npm:react@16.7.0.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/utils.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/collapse/collapse.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/icon/icon.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  var classnames_1 = tslib_1.__importDefault($__require("npm:classnames@2.2.6.js"));
  var React = tslib_1.__importStar($__require("npm:react@16.7.0.js"));
  var Classes = tslib_1.__importStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/classes.js"));
  var props_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/props.js");
  var utils_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/utils.js");
  var collapse_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/collapse/collapse.js");
  var icon_1 = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/icon/icon.js");
  var TreeNode = function (_super) {
    tslib_1.__extends(TreeNode, _super);
    function TreeNode() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.handleCaretClick = function (e) {
        e.stopPropagation();
        var _a = _this.props,
            isExpanded = _a.isExpanded,
            onCollapse = _a.onCollapse,
            onExpand = _a.onExpand;
        utils_1.safeInvoke(isExpanded ? onCollapse : onExpand, _this, e);
      };
      _this.handleClick = function (e) {
        utils_1.safeInvoke(_this.props.onClick, _this, e);
      };
      _this.handleContentRef = function (element) {
        utils_1.safeInvoke(_this.props.contentRef, _this, element);
      };
      _this.handleContextMenu = function (e) {
        utils_1.safeInvoke(_this.props.onContextMenu, _this, e);
      };
      _this.handleDoubleClick = function (e) {
        utils_1.safeInvoke(_this.props.onDoubleClick, _this, e);
      };
      _this.handleMouseEnter = function (e) {
        utils_1.safeInvoke(_this.props.onMouseEnter, _this, e);
      };
      _this.handleMouseLeave = function (e) {
        utils_1.safeInvoke(_this.props.onMouseLeave, _this, e);
      };
      return _this;
    }
    TreeNode.ofType = function () {
      return TreeNode;
    };
    TreeNode.prototype.render = function () {
      var _a = this.props,
          children = _a.children,
          className = _a.className,
          icon = _a.icon,
          isExpanded = _a.isExpanded,
          isSelected = _a.isSelected,
          label = _a.label;
      var classes = classnames_1.default(Classes.TREE_NODE, (_b = {}, _b[Classes.TREE_NODE_SELECTED] = isSelected, _b[Classes.TREE_NODE_EXPANDED] = isExpanded, _b), className);
      var contentClasses = classnames_1.default(Classes.TREE_NODE_CONTENT, Classes.TREE_NODE_CONTENT + "-" + this.props.depth);
      return React.createElement("li", { className: classes }, React.createElement("div", {
        className: contentClasses,
        onClick: this.handleClick,
        onContextMenu: this.handleContextMenu,
        onDoubleClick: this.handleDoubleClick,
        onMouseEnter: this.handleMouseEnter,
        onMouseLeave: this.handleMouseLeave,
        ref: this.handleContentRef
      }, this.maybeRenderCaret(), React.createElement(icon_1.Icon, {
        className: Classes.TREE_NODE_ICON,
        icon: icon
      }), React.createElement("span", { className: Classes.TREE_NODE_LABEL }, label), this.maybeRenderSecondaryLabel()), React.createElement(collapse_1.Collapse, { isOpen: isExpanded }, children));
      var _b;
    };
    TreeNode.prototype.maybeRenderCaret = function () {
      var _a = this.props.hasCaret,
          hasCaret = _a === void 0 ? React.Children.count(this.props.children) > 0 : _a;
      if (hasCaret) {
        var caretClasses = classnames_1.default(Classes.TREE_NODE_CARET, this.props.isExpanded ? Classes.TREE_NODE_CARET_OPEN : Classes.TREE_NODE_CARET_CLOSED);
        return React.createElement(icon_1.Icon, {
          className: caretClasses,
          onClick: this.handleCaretClick,
          icon: "chevron-right"
        });
      }
      return React.createElement("span", { className: Classes.TREE_NODE_CARET_NONE });
    };
    TreeNode.prototype.maybeRenderSecondaryLabel = function () {
      if (this.props.secondaryLabel != null) {
        return React.createElement("span", { className: Classes.TREE_NODE_SECONDARY_LABEL }, this.props.secondaryLabel);
      } else {
        return undefined;
      }
    };
    TreeNode.displayName = props_1.DISPLAYNAME_PREFIX + ".TreeNode";
    return TreeNode;
  }(React.Component);
  exports.TreeNode = TreeNode;
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/components/index.js", ["npm:tslib@1.9.3.js", "npm:dom4@2.1.4.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/context-menu/contextMenu.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/alert/alert.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/breadcrumbs/breadcrumb.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/breadcrumbs/breadcrumbs.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/button/buttons.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/button/buttonGroup.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/callout/callout.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/card/card.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/collapse/collapse.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/collapsible-list/collapsibleList.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/context-menu/contextMenuTarget.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/dialog/dialog.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/divider/divider.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/editable-text/editableText.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/forms/controlGroup.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/forms/controls.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/forms/fileInput.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/forms/formGroup.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/forms/inputGroup.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/forms/numericInput.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/forms/radioGroup.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/forms/textArea.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/html/html.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/html-select/htmlSelect.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/html-table/htmlTable.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/hotkeys/hotkeys.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/icon/icon.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/menu/menu.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/menu/menuDivider.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/menu/menuItem.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/navbar/navbar.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/navbar/navbarDivider.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/navbar/navbarGroup.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/navbar/navbarHeading.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/non-ideal-state/nonIdealState.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/overflow-list/overflowList.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/overlay/overlay.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/text/text.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/panel-stack/panelStack.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/popover/popover.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/popover/popoverSharedProps.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/portal/portal.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/progress-bar/progressBar.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/resize-sensor/resizeSensor.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/slider/handleProps.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/slider/multiSlider.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/slider/rangeSlider.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/slider/slider.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/spinner/spinner.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/tabs/tab.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/tabs/tabs.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/tag/tag.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/tag-input/tagInput.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/toast/toast.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/toast/toaster.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/tooltip/tooltip.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/tree/tree.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/tree/treeNode.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  if (typeof window !== "undefined" && typeof document !== "undefined") {
    $__require("npm:dom4@2.1.4.js");
  }
  var contextMenu = tslib_1.__importStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/context-menu/contextMenu.js"));
  exports.ContextMenu = contextMenu;
  tslib_1.__exportStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/alert/alert.js"), exports);
  tslib_1.__exportStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/breadcrumbs/breadcrumb.js"), exports);
  tslib_1.__exportStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/breadcrumbs/breadcrumbs.js"), exports);
  tslib_1.__exportStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/button/buttons.js"), exports);
  tslib_1.__exportStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/button/buttonGroup.js"), exports);
  tslib_1.__exportStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/callout/callout.js"), exports);
  tslib_1.__exportStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/card/card.js"), exports);
  tslib_1.__exportStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/collapse/collapse.js"), exports);
  tslib_1.__exportStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/collapsible-list/collapsibleList.js"), exports);
  tslib_1.__exportStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/context-menu/contextMenuTarget.js"), exports);
  tslib_1.__exportStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/dialog/dialog.js"), exports);
  tslib_1.__exportStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/divider/divider.js"), exports);
  tslib_1.__exportStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/editable-text/editableText.js"), exports);
  tslib_1.__exportStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/forms/controlGroup.js"), exports);
  tslib_1.__exportStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/forms/controls.js"), exports);
  tslib_1.__exportStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/forms/fileInput.js"), exports);
  tslib_1.__exportStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/forms/formGroup.js"), exports);
  tslib_1.__exportStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/forms/inputGroup.js"), exports);
  tslib_1.__exportStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/forms/numericInput.js"), exports);
  tslib_1.__exportStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/forms/radioGroup.js"), exports);
  tslib_1.__exportStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/forms/textArea.js"), exports);
  tslib_1.__exportStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/html/html.js"), exports);
  tslib_1.__exportStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/html-select/htmlSelect.js"), exports);
  tslib_1.__exportStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/html-table/htmlTable.js"), exports);
  tslib_1.__exportStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/hotkeys/hotkeys.js"), exports);
  tslib_1.__exportStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/icon/icon.js"), exports);
  tslib_1.__exportStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/menu/menu.js"), exports);
  tslib_1.__exportStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/menu/menuDivider.js"), exports);
  tslib_1.__exportStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/menu/menuItem.js"), exports);
  tslib_1.__exportStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/navbar/navbar.js"), exports);
  tslib_1.__exportStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/navbar/navbarDivider.js"), exports);
  tslib_1.__exportStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/navbar/navbarGroup.js"), exports);
  tslib_1.__exportStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/navbar/navbarHeading.js"), exports);
  tslib_1.__exportStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/non-ideal-state/nonIdealState.js"), exports);
  tslib_1.__exportStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/overflow-list/overflowList.js"), exports);
  tslib_1.__exportStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/overlay/overlay.js"), exports);
  tslib_1.__exportStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/text/text.js"), exports);
  tslib_1.__exportStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/panel-stack/panelStack.js"), exports);
  tslib_1.__exportStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/popover/popover.js"), exports);
  tslib_1.__exportStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/popover/popoverSharedProps.js"), exports);
  tslib_1.__exportStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/portal/portal.js"), exports);
  tslib_1.__exportStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/progress-bar/progressBar.js"), exports);
  tslib_1.__exportStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/resize-sensor/resizeSensor.js"), exports);
  tslib_1.__exportStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/slider/handleProps.js"), exports);
  tslib_1.__exportStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/slider/multiSlider.js"), exports);
  tslib_1.__exportStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/slider/rangeSlider.js"), exports);
  tslib_1.__exportStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/slider/slider.js"), exports);
  tslib_1.__exportStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/spinner/spinner.js"), exports);
  tslib_1.__exportStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/tabs/tab.js"), exports);
  tslib_1.__exportStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/tabs/tabs.js"), exports);
  tslib_1.__exportStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/tag/tag.js"), exports);
  tslib_1.__exportStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/tag-input/tagInput.js"), exports);
  tslib_1.__exportStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/toast/toast.js"), exports);
  tslib_1.__exportStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/toast/toaster.js"), exports);
  tslib_1.__exportStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/tooltip/tooltip.js"), exports);
  tslib_1.__exportStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/tree/tree.js"), exports);
  tslib_1.__exportStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/tree/treeNode.js"), exports);
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0/lib/cjs/index.js", ["npm:tslib@1.9.3.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/accessibility/index.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/common/index.js", "npm:@blueprintjs/core@3.11.0/lib/cjs/components/index.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.9.3.js");
  tslib_1.__exportStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/accessibility/index.js"), exports);
  tslib_1.__exportStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/common/index.js"), exports);
  tslib_1.__exportStar($__require("npm:@blueprintjs/core@3.11.0/lib/cjs/components/index.js"), exports);
});
System.registerDynamic("npm:@blueprintjs/core@3.11.0.js", ["npm:@blueprintjs/core@3.11.0/lib/cjs/index.js"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("npm:@blueprintjs/core@3.11.0/lib/cjs/index.js");
});
System.registerDynamic("app/Alert.js", ["npm:@blueprintjs/core@3.11.0.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const Blueprint = $__require("npm:@blueprintjs/core@3.11.0.js");
    let toaster;
    function success(message, timeout) {
        if (timeout === undefined) {
            timeout = 5000;
        }
        return toaster.show({
            intent: Blueprint.Intent.SUCCESS,
            message: message,
            timeout: timeout
        });
    }
    exports.success = success;
    function info(message, timeout) {
        if (timeout === undefined) {
            timeout = 5000;
        }
        return toaster.show({
            intent: Blueprint.Intent.PRIMARY,
            message: message,
            timeout: timeout
        });
    }
    exports.info = info;
    function warning(message, timeout) {
        if (timeout === undefined) {
            timeout = 5000;
        }
        return toaster.show({
            intent: Blueprint.Intent.WARNING,
            message: message,
            timeout: timeout
        });
    }
    exports.warning = warning;
    function error(message, timeout) {
        if (timeout === undefined) {
            timeout = 5000;
        }
        return toaster.show({
            intent: Blueprint.Intent.DANGER,
            message: message,
            timeout: timeout
        });
    }
    exports.error = error;
    function errorRes(res, message, timeout) {
        if (timeout === undefined) {
            timeout = 5000;
        }
        try {
            message = res.body.error_msg || message;
        } catch (err) {}
        return toaster.show({
            intent: Blueprint.Intent.DANGER,
            message: message,
            timeout: timeout
        });
    }
    exports.errorRes = errorRes;
    function dismiss(key) {
        toaster.dismiss(key);
    }
    exports.dismiss = dismiss;
    function init() {
        if (toaster) {
            return;
        }
        if (Blueprint.Toaster) {
            toaster = Blueprint.Toaster.create({
                position: Blueprint.Position.BOTTOM
            });
        } else {
            console.error('Failed to load toaster');
        }
    }
    exports.init = init;
    
});
System.registerDynamic("app/Theme.js", ["npm:superagent@4.1.0.js", "app/Alert.js", "app/Csrf.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const SuperAgent = $__require("npm:superagent@4.1.0.js");
    const Alert = $__require("app/Alert.js");
    const Csrf = $__require("app/Csrf.js");
    exports.theme = 'dark';
    function save() {
        return new Promise((resolve, reject) => {
            SuperAgent.put('/theme').send({
                theme: exports.theme
            }).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).end((err, res) => {
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (err) {
                    Alert.errorRes(res, 'Failed to save theme');
                    reject(err);
                    return;
                }
                resolve();
            });
        });
    }
    exports.save = save;
    function light() {
        exports.theme = 'light';
        document.body.className = '';
    }
    exports.light = light;
    function dark() {
        exports.theme = 'dark';
        document.body.className = 'bp3-dark';
    }
    exports.dark = dark;
    function toggle() {
        if (exports.theme === 'light') {
            dark();
        } else {
            light();
        }
    }
    exports.toggle = toggle;
    
});
System.registerDynamic("app/Csrf.js", ["npm:superagent@4.1.0.js", "app/License.js", "app/Theme.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const SuperAgent = $__require("npm:superagent@4.1.0.js");
    const License = $__require("app/License.js");
    const Theme = $__require("app/Theme.js");
    exports.token = '';
    function load() {
        return new Promise((resolve, reject) => {
            SuperAgent.get('/csrf').set('Accept', 'application/json').end((err, res) => {
                if (res && res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (err) {
                    reject(err);
                    return;
                }
                exports.token = res.body.token;
                License.setOracle(!!res.body.oracle_license);
                if (res.body.theme === 'light') {
                    Theme.light();
                } else {
                    Theme.dark();
                }
                resolve();
            });
        });
    }
    exports.load = load;
    
});
System.registerDynamic("app/App.js", ["npm:react@16.7.0.js", "npm:react-dom@16.7.0.js", "npm:@blueprintjs/core@3.11.0.js", "app/components/Main.js", "app/Alert.js", "app/Event.js", "app/Csrf.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@16.7.0.js");
    const ReactDOM = $__require("npm:react-dom@16.7.0.js");
    const Blueprint = $__require("npm:@blueprintjs/core@3.11.0.js");
    const Main_1 = $__require("app/components/Main.js");
    const Alert = $__require("app/Alert.js");
    const Event = $__require("app/Event.js");
    const Csrf = $__require("app/Csrf.js");
    Csrf.load().then(() => {
        Blueprint.FocusStyleManager.onlyShowFocusOnTabs();
        Alert.init();
        Event.init();
        ReactDOM.render(React.createElement("div", null, React.createElement(Main_1.default, null)), document.getElementById('app'));
    });
    
});
//# sourceMappingURL=build.js.map